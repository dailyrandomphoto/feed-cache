<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Placement Series 2021</title>
      <author>Shreyansh Sinha</author>
      <pubDate>Fri, 23 Jul 2021 14:50:39 +0000</pubDate>
      <link>https://dev.to/shreyanshsinha/placement-series-2021-2l5a</link>
      <guid>https://dev.to/shreyanshsinha/placement-series-2021-2l5a</guid>
      <description>&lt;p&gt;Placement season for the batch of 2022 will be starting in few days across most of the NITs and other engineering colleges. While most of the students would be preparing hard for their placements, one might also get intimidated by the huge syllabus which the academics offer. The post (and subsequently some other posts also) intends to provide some important topics about all the important subjects regarding Placements. #ComputerNetworks is quite an important subject with respect to placements.&lt;br&gt;
Here are some of the important topics to look at:&lt;/p&gt;

&lt;p&gt;1) OSI Model and TCP/IP Model (Thorough idea of each layer and also a protocol which is used in each layer)&lt;br&gt;
2) IP Address (IP4, IP6)&lt;br&gt;
3) MAC Address&lt;br&gt;
4) Packet Switching and Circuit Switching&lt;br&gt;
5) Ethernet (Ethernet Header)&lt;br&gt;
6) CSMA/CD, Exponential backoff&lt;br&gt;
7)DNS, DNS Header (What happens when you enter the URL and hit enter)&lt;br&gt;
8) Framing&lt;br&gt;
9) Routers and Routing Algorithms (Count to Infinity Problem)&lt;br&gt;
10) Knowledge about Ports, Swithes, Bridge, Repeater, Hub (In which layer do they operate in)&lt;br&gt;
11) Error Correction (Parity Bit, 2D Parity, CRC Check)&lt;br&gt;
12) Check Sum Computation (Hamming Code)&lt;br&gt;
13) TCP vs UDP&lt;br&gt;
14) TCP Header, 2 way Handshake and 3 way Handshake&lt;br&gt;
15) Protocols (HTTP, HTTPS, ARP, TCP, UDP, FTP, SMTP)&lt;br&gt;
16) Sliding Window Protocol&lt;br&gt;
17) HTTP vs HTTPS&lt;br&gt;
18) Does DNS use TCP or UDP ?&lt;br&gt;
19) Network Topologies&lt;br&gt;
20) CIDER, Classful and Classless Addressing&lt;/p&gt;

&lt;p&gt;I personally found these topics to be the most frequently asked ones. Any suggestions are most welcome. Best of luck for Placements !!&lt;/p&gt;

</description>
      <category>placements2021</category>
      <category>batchof2022</category>
      <category>computernetworks</category>
    </item>
    <item>
      <title>How to Use async/await with The Fetch API in JavaScript</title>
      <author>Mehdi Aoussiad</author>
      <pubDate>Fri, 23 Jul 2021 14:42:59 +0000</pubDate>
      <link>https://dev.to/aoussiadmehdi/how-to-use-async-await-with-the-fetch-api-in-javascript-1agl</link>
      <guid>https://dev.to/aoussiadmehdi/how-to-use-async-await-with-the-fetch-api-in-javascript-1agl</guid>
      <description>&lt;p&gt;Using the fetch API is a good idea if you want to make HTTP requests and get data from APIs. It's easy to use, you only need to know JavaScript.&lt;/p&gt;

&lt;p&gt;The fetch API is an alternative to the old XML HttpRequest. However, the majority of developers prefer to use fetch because it's very simple and straightforward. Since the method &lt;code&gt;fetch()&lt;/code&gt; returns a promise, we can use async/await syntax to make our code cleaner and easy to read.&lt;/p&gt;

&lt;p&gt;In this article, we'll learn about the fetch API and how to use it with async/await syntax. Let's get started.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction-to-the-fetch-api"&gt;
  &lt;/a&gt;
  Introduction to the fetch API
&lt;/h2&gt;

&lt;p&gt;The fetch API is the easiest way to assess resources in the network. It's a tool that allows us to make HTTP requests using different methods such as &lt;code&gt;GET&lt;/code&gt;, &lt;code&gt;POST&lt;/code&gt;, etc.&lt;/p&gt;

&lt;p&gt;To start making requests, we use the method &lt;code&gt;fetch()&lt;/code&gt; and pass it the required arguments. The fetch method accepts two arguments:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The 1st argument: the URL where you want to make the request(in a string). It can also take a response object.&lt;/li&gt;
&lt;li&gt;The 2nd argument: A configuration object that takes properties for the request method, &lt;code&gt;headers&lt;/code&gt;, &lt;code&gt;body&lt;/code&gt;, and all other options.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;URL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt; &lt;span class="nx"&gt;object&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Since the method &lt;code&gt;fetch()&lt;/code&gt; returns a promise, we can use &lt;code&gt;then&lt;/code&gt; and &lt;code&gt;catch&lt;/code&gt; methods of promises to handle the requests. The promise gets resolved if the request is completed. On the other hand, if the request fails due to any error, the promise will be rejected.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#fetch-example-without-asyncawait"&gt;
  &lt;/a&gt;
  Fetch example without async/await
&lt;/h2&gt;

&lt;p&gt;To make it simple for you, we will provide an example of using fetch to get data from an API. In this example, we will use fetch without async/await just to show you how the syntax looks.&lt;/p&gt;

&lt;p&gt;By using fetch, we will try to get a list of users from the JsonPlaceholder fake API.&lt;br&gt;
Here is the example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://jsonplaceholder.typicode.com/users&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;By default, when you only pass the first argument(API URL) to the method &lt;code&gt;fetch()&lt;/code&gt; you're only allowed to do GET requests. That's enough if you only want to get data from an API. However, you can still pass the configuration object as a second argument if you want to do other HTTP requests like &lt;code&gt;POST&lt;/code&gt; for example.&lt;/p&gt;

&lt;p&gt;In the example above, we used the method &lt;code&gt;fetch&lt;/code&gt; and pass it the API URL as a first argument. Since fetch returns a promise, we used &lt;code&gt;then&lt;/code&gt; method to get the response from the API in a JSON format and &lt;code&gt;catch&lt;/code&gt; method to handle an error if it occurs. As a result, the requested data gets printed in the console. You can take that data and display anywhere on your page if you want.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-asyncawait-with-fetch"&gt;
  &lt;/a&gt;
  Using async/await with fetch
&lt;/h2&gt;

&lt;p&gt;As we know, async/await allows us to write asynchronous code in a much cleaner way. It allows us to avoid the headaches of using callbacks and &lt;code&gt;then&lt;/code&gt; &lt;code&gt;catch&lt;/code&gt; syntax in our code.&lt;/p&gt;

&lt;p&gt;That's why I always prefer using async/await when using the fetch API. In this section, we will implement the same example that we did above, but now using async/await syntax.&lt;/p&gt;

&lt;p&gt;To use async/await, make sure to create an asynchronous function by using the keyword &lt;code&gt;async&lt;/code&gt;. The keyword &lt;code&gt;await&lt;/code&gt; is permitted inside the function.&lt;br&gt;
Here is the example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;API_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://jsonplaceholder.typicode.com/users&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;fetchUsers&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;API_URL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;users&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;users&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;fetchUsers&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;users&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;users&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// fetched users&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see, the syntax now is cleaner. We only added the keyword &lt;code&gt;async&lt;/code&gt; to the begining of the function. Then we used the keyword &lt;code&gt;await&lt;/code&gt; when assigning the variables. Since &lt;code&gt;fetchUsers&lt;/code&gt; is an asynchronous function, it returns a promise. As a result, we used one &lt;code&gt;then&lt;/code&gt; method to handle the promise.&lt;/p&gt;

&lt;p&gt;So this is how to get data from an API using fetch and async/await. Now you can do anything with the data &lt;code&gt;users&lt;/code&gt; that we got from the API. You can display it on the page if you want.&lt;/p&gt;

&lt;p&gt;You can also use &lt;code&gt;try&lt;/code&gt; and &lt;code&gt;catch&lt;/code&gt; to handle errors if you want. Here is the same example above, but now adding error handling:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;API_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://jsonplaceholder.typicode.com/users&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;fetchUsers&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;API_URL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;users&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;users&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;fetchUsers&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;users&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;users&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// fetched users&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you're not familiar with error handling in JavaScript, I suggest that you learn about it from other resources. It's a useful thing to know.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;The fetch API is very useful when it comes to working with APIs in general. Combining fetch with async/await is a good way to make your code cleaner and easy to read.&lt;/p&gt;

&lt;p&gt;Thank you for reading. If you're interested in more webdev content, make sure to visit our new blog &lt;a href="https://webdevidea.com/"&gt;WebDevIdea&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
      <category>coding</category>
    </item>
    <item>
      <title>Validation; joi brings you "Joy" 😁</title>
      <author>Olufemi obafunmiso</author>
      <pubDate>Fri, 23 Jul 2021 14:36:54 +0000</pubDate>
      <link>https://dev.to/olufemi/validation-joi-brings-you-joy-fof</link>
      <guid>https://dev.to/olufemi/validation-joi-brings-you-joy-fof</guid>
      <description>&lt;p&gt;Ever tried to do some sort of schema validation while building API(s) and you have to write a lot of &lt;code&gt;If else&lt;/code&gt; conditions/statements to ensure you throw error when the user inputs  wrong data? Yeah, it's stressful and trust me, you still won't cater for all scenarios. &lt;br&gt;
The good news is  joi has come to your rescue and it's here to bring you joy [pun intended].&lt;br&gt;
In this tutorial, I will be showing you how to validate with &lt;code&gt;joi&lt;/code&gt;. &lt;br&gt;
&lt;code&gt;joi&lt;/code&gt; helps define data easily without the need to worry about not throwing error; joi does the job for you by throwing error.&lt;/p&gt;

&lt;p&gt;[For this tutorial, I assumed you already know how to setup a server with &lt;code&gt;express.js&lt;/code&gt;]&lt;/p&gt;

&lt;p&gt;Install all dependencies required for this task &lt;code&gt;npm install joi express&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;In this tutorial we'll be validating the following details;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;username&lt;/li&gt;
&lt;li&gt;Password&lt;/li&gt;
&lt;li&gt;firstname&lt;/li&gt;
&lt;li&gt;lastname&lt;/li&gt;
&lt;li&gt;email&lt;/li&gt;
&lt;li&gt;phonenumber&lt;/li&gt;
&lt;li&gt;date of birth [DOB]&lt;/li&gt;
&lt;li&gt;Sex&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let's get right into it 💻💻💻&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Joi&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;joi&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/register&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="c1"&gt;// Define Schema&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;schema&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Joi&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;object&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;username&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Joi&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;min&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;alphanum&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;uppercase&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;required&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
      &lt;span class="na"&gt;password&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;Joi&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;regex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/^&lt;/span&gt;&lt;span class="se"&gt;[&lt;/span&gt;&lt;span class="sr"&gt;a-zA-Z0-9&lt;/span&gt;&lt;span class="se"&gt;]{3,30}&lt;/span&gt;&lt;span class="sr"&gt;$/&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;required&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
      &lt;span class="na"&gt;confirm_password&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;Joi&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;equal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Joi&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;password&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nx"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;any.only&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;password does not match&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="nx"&gt;required&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
      &lt;span class="na"&gt;firstname&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Joi&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;required&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
      &lt;span class="na"&gt;lastname&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Joi&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
      &lt;span class="na"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Joi&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;minDomainSegments&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="nx"&gt;required&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
      &lt;span class="na"&gt;phonenumber&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Joi&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;min&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;regex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/^&lt;/span&gt;&lt;span class="se"&gt;([&lt;/span&gt;&lt;span class="sr"&gt;+&lt;/span&gt;&lt;span class="se"&gt;])?(\d&lt;/span&gt;&lt;span class="sr"&gt;+&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="sr"&gt;$/&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;required&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
      &lt;span class="na"&gt;dob&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Joi&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;01-01-2003&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;iso&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;date.format&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`Date format is YYYY-MM-DD`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;date.max&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;`Age must be 18+`&lt;/span&gt;&lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="nx"&gt;required&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
      &lt;span class="na"&gt;sex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Joi&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;valid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;male&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;female&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;transger&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;others&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="c1"&gt;// Validate req.body against the defined schema&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;validation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;schema&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;validate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;validation&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;details&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

      &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;400&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="na"&gt;status&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;error&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Invalid request data&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="na"&gt;status&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;success&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Registration successful&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;status&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;failed&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;Joi.object()&lt;/code&gt; instantiate a Joi schema object to work with. The schema require &lt;code&gt;Joi.object()&lt;/code&gt; to process validation and other Joi features.&lt;br&gt;
I will be explaining the schema constraints and if I have explained some constraints already I won't need to repeat e.g if I have explained &lt;code&gt;.string()&lt;/code&gt; I won't be repeating it again in order to keep the article short and simple.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The constraints for &lt;code&gt;username&lt;/code&gt; include:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;.string()&lt;/code&gt; a string.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; &lt;code&gt;"s"&lt;/code&gt; is in lowercase, not uppercase i.e if you use &lt;code&gt;.String()&lt;/code&gt; joi will throw this error &lt;code&gt;Joi.String is not a function&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;min(6)&lt;/code&gt; - at least 6 characters long&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;.max(30)&lt;/code&gt; - not more than 30 characters&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;.alphanum()&lt;/code&gt; - contain alphanumeric characters e.g (olufemi78)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;.uppercase()&lt;/code&gt; - This means when the user input  username, joi should convert  to uppercase (interesting yeah? 😉)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;required()&lt;/code&gt; - This means username is required, if user does not pass it, joi will throw error &lt;code&gt;"\"username\" is required"&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;The constraints for &lt;code&gt;password&lt;/code&gt; include:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;.regex('^[a-zA-Z0-9]{3,30}$')&lt;/code&gt; - This means, it must satisfy the custom regex pattern.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Here's the explanation of the regex pattern&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt; &lt;span class="o"&gt;^&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Asserts&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;start&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;

    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;zA&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;Z0&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;]{&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Matches&lt;/span&gt; &lt;span class="nx"&gt;any&lt;/span&gt; &lt;span class="nx"&gt;character&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;z&lt;/span&gt; &lt;span class="nx"&gt;or&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt; &lt;span class="nx"&gt;but&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="nx"&gt;range&lt;/span&gt; &lt;span class="nx"&gt;must&lt;/span&gt; &lt;span class="nx"&gt;between&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;

    &lt;span class="nx"&gt;$&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;End&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can use  &lt;a href="http://regex101.com/#pcre"&gt;regex101&lt;/a&gt;  to play with regex. The right pane explains it token by token.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The constraints for &lt;code&gt;confirm_password&lt;/code&gt; include:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;.equal(Joi.ref('password'))&lt;/code&gt; - This means it reference &lt;code&gt;password&lt;/code&gt; and it must be equal to password.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;messages({ 'any.only': 'password does not match' })&lt;/code&gt; - If &lt;code&gt;password&lt;/code&gt; and &lt;code&gt;confirm_password&lt;/code&gt; does not match, joi will throw this custom error &lt;code&gt;password does not match&lt;/code&gt; . &lt;code&gt;any.only&lt;/code&gt; is error type so whenever the error type is &lt;code&gt;any.only&lt;/code&gt; I prefer to send custom message and not the typical joi error message. Just make's the error message more descriptive to the user.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;The constraints for &lt;code&gt;firstname&lt;/code&gt; and &lt;code&gt;lastname&lt;/code&gt;:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;username&lt;/code&gt; name is required while &lt;code&gt;lastname&lt;/code&gt; is not required&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;The constraints for &lt;code&gt;email&lt;/code&gt; include:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;.email({minDomainSegments: 2})&lt;/code&gt; - It must be a valid email string and must have two domain parts e.g. &lt;code&gt;user.com&lt;/code&gt; . One fascinating thing about email validation with joi is that you can decide the top-level domains (TLDs) you want. e.g; you want only &lt;code&gt;.com&lt;/code&gt; and &lt;code&gt;.net&lt;/code&gt; &lt;code&gt;.email({ minDomainSegments: 2, tlds: { allow: ['com', 'net'] } })&lt;/code&gt; This will only allow &lt;code&gt;.com&lt;/code&gt; and &lt;code&gt;.net&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;The constraints for &lt;code&gt;phonenumber&lt;/code&gt; include:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It must be a string with digits in the format based on the regex pattern e.g &lt;code&gt;+248888888888&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;The constraints for &lt;code&gt;dob&lt;/code&gt; include:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;Joi.date().max('01-01-2003').iso()&lt;/code&gt; - it must be a valid date in ISO 8601 format and it cannot be after Jan 1, 2003. This is super useful if you want to ensure a certain age range can not register on your platform e.g a betting website allow only 18+.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;messages({'date.format':&lt;/code&gt; &lt;code&gt;Date format is YYYY-MM-DD&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;'date.max':Age must be 18+})&lt;/code&gt;- This means if user enter invalid date format and joi throws error, rather sending back the not too fancy joi error message, send a custom message.
Custom messages breakdown:&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;'date.format'&lt;/code&gt;: means the error type i.e if joi is throwing error type that is &lt;code&gt;'date.format'&lt;/code&gt;, then send this custom message &lt;code&gt;Date format is YYYY-MM-DD&lt;/code&gt; to the user. if error type is '&lt;code&gt;date.max':&lt;/code&gt; then send this custom message &lt;code&gt;Age must be 18+&lt;/code&gt; . If there's no custom message for this particular error type (&lt;code&gt;date.max&lt;/code&gt;), joi will throw this &lt;code&gt;'"dob" must be less than or equal to "2003-01-01T00:00:00.000Z"'&lt;/code&gt;. To aid user experience, I decided to make it easy by sending &lt;code&gt;"Age must be 18+"&lt;/code&gt; rather than joi error message. You can literally send any message you pleased. Since it's a custom message, you're fully in control of the message. That's really cool 👌&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;The constraints for &lt;code&gt;sex&lt;/code&gt; include:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;.valid('male', 'female','transger')&lt;/code&gt; - This means only 4 options are accepted i.e &lt;code&gt;male&lt;/code&gt;, &lt;code&gt;female&lt;/code&gt;, &lt;code&gt;transgender&lt;/code&gt; and &lt;code&gt;others&lt;/code&gt;.  If user enter any other option aside from the 4, joi will throw this error &lt;code&gt;"\"sex\" must be one of [male, female, transger, others]"&lt;/code&gt;. This come in handy for analytics. You can easily know the genders that register on your platform.
const validation = schema.validate(req.body);&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This line of code takes in the &lt;code&gt;data&lt;/code&gt; from the body request and validates it against the &lt;code&gt;schema&lt;/code&gt; already defined.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;validation&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;details&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

          &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;422&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
            &lt;span class="na"&gt;status&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;error&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Invalid request data&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt;
          &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What I did here is to destructure the joi response object after validation and use &lt;code&gt;map()&lt;/code&gt; to pick out just the error message and not the whole error object.&lt;/p&gt;

&lt;p&gt;Everything is set now. Lets enjoy the thrills and superpower of joi 🔥🔥🔥&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rhUAsT_z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_EB38424D386749E635CCDF8757FD937DB6738220A46C64FBDC64FF4DB41D7B53_1610300851439_Screenshot%2B2021-01-10%2Bat%2B18.44.18.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rhUAsT_z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_EB38424D386749E635CCDF8757FD937DB6738220A46C64FBDC64FF4DB41D7B53_1610300851439_Screenshot%2B2021-01-10%2Bat%2B18.44.18.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DwuQ0xah--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_EB38424D386749E635CCDF8757FD937DB6738220A46C64FBDC64FF4DB41D7B53_1610287972263_Screenshot%2B2021-01-10%2Bat%2B14.49.22.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DwuQ0xah--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_EB38424D386749E635CCDF8757FD937DB6738220A46C64FBDC64FF4DB41D7B53_1610287972263_Screenshot%2B2021-01-10%2Bat%2B14.49.22.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6fcjGlJC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_EB38424D386749E635CCDF8757FD937DB6738220A46C64FBDC64FF4DB41D7B53_1610287972278_Screenshot%2B2021-01-10%2Bat%2B14.49.41.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6fcjGlJC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_EB38424D386749E635CCDF8757FD937DB6738220A46C64FBDC64FF4DB41D7B53_1610287972278_Screenshot%2B2021-01-10%2Bat%2B14.49.41.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---RVof50C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_EB38424D386749E635CCDF8757FD937DB6738220A46C64FBDC64FF4DB41D7B53_1610287972286_Screenshot%2B2021-01-10%2Bat%2B14.59.52.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---RVof50C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_EB38424D386749E635CCDF8757FD937DB6738220A46C64FBDC64FF4DB41D7B53_1610287972286_Screenshot%2B2021-01-10%2Bat%2B14.59.52.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iLWhEpVD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_EB38424D386749E635CCDF8757FD937DB6738220A46C64FBDC64FF4DB41D7B53_1610287972296_Screenshot%2B2021-01-10%2Bat%2B15.01.35.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iLWhEpVD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_EB38424D386749E635CCDF8757FD937DB6738220A46C64FBDC64FF4DB41D7B53_1610287972296_Screenshot%2B2021-01-10%2Bat%2B15.01.35.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dRSSPhtX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_EB38424D386749E635CCDF8757FD937DB6738220A46C64FBDC64FF4DB41D7B53_1610287972308_Screenshot%2B2021-01-10%2Bat%2B15.02.24.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dRSSPhtX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_EB38424D386749E635CCDF8757FD937DB6738220A46C64FBDC64FF4DB41D7B53_1610287972308_Screenshot%2B2021-01-10%2Bat%2B15.02.24.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;EXTRAS&lt;/strong&gt;:&lt;br&gt;
So far we've seen string, number, email etc validation. What about arrays, Objects, and array of objects? Yeah, I got you.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#array"&gt;
  &lt;/a&gt;
  Array
&lt;/h3&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;meta:Joi.array()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;The above validates an array.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jNaayxNv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_EB38424D386749E635CCDF8757FD937DB6738220A46C64FBDC64FF4DB41D7B53_1626456094873_Screenshot%2B2021-07-16%2Bat%2B17.54.16.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jNaayxNv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_EB38424D386749E635CCDF8757FD937DB6738220A46C64FBDC64FF4DB41D7B53_1626456094873_Screenshot%2B2021-07-16%2Bat%2B17.54.16.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Q3IJBrpL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_EB38424D386749E635CCDF8757FD937DB6738220A46C64FBDC64FF4DB41D7B53_1626456809071_Screenshot%2B2021-07-16%2Bat%2B17.52.54.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q3IJBrpL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_EB38424D386749E635CCDF8757FD937DB6738220A46C64FBDC64FF4DB41D7B53_1626456809071_Screenshot%2B2021-07-16%2Bat%2B17.52.54.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#object"&gt;
  &lt;/a&gt;
  Object
&lt;/h3&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;meta:Joi.object()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;The above validates an Object.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--umcax_D7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_EB38424D386749E635CCDF8757FD937DB6738220A46C64FBDC64FF4DB41D7B53_1626456162558_Screenshot%2B2021-07-16%2Bat%2B17.55.15.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--umcax_D7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_EB38424D386749E635CCDF8757FD937DB6738220A46C64FBDC64FF4DB41D7B53_1626456162558_Screenshot%2B2021-07-16%2Bat%2B17.55.15.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b43K3_zr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_EB38424D386749E635CCDF8757FD937DB6738220A46C64FBDC64FF4DB41D7B53_1626456168049_Screenshot%2B2021-07-16%2Bat%2B17.56.05.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b43K3_zr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_EB38424D386749E635CCDF8757FD937DB6738220A46C64FBDC64FF4DB41D7B53_1626456168049_Screenshot%2B2021-07-16%2Bat%2B17.56.05.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#joialternatives"&gt;
  &lt;/a&gt;
  Joi.alternatives()
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;Joi.alternatives()&lt;/code&gt; can be used to pass  many alternatives like array, object, string etc. For example, in a scenario where you're either expecting an array or object, especially when you depend on an external API and you can't be so sure if the response would be an array or an object.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;meta:Joi.alternatives().try(Joi.object(), Joi.array())
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ILtUrIvE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_EB38424D386749E635CCDF8757FD937DB6738220A46C64FBDC64FF4DB41D7B53_1626456325713_Screenshot%2B2021-07-16%2Bat%2B17.52.54.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ILtUrIvE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_EB38424D386749E635CCDF8757FD937DB6738220A46C64FBDC64FF4DB41D7B53_1626456325713_Screenshot%2B2021-07-16%2Bat%2B17.52.54.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R8qxlVJG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_EB38424D386749E635CCDF8757FD937DB6738220A46C64FBDC64FF4DB41D7B53_1626456417885_Screenshot%2B2021-07-16%2Bat%2B17.56.05.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R8qxlVJG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_EB38424D386749E635CCDF8757FD937DB6738220A46C64FBDC64FF4DB41D7B53_1626456417885_Screenshot%2B2021-07-16%2Bat%2B17.56.05.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finally, you can go step further to validate the items in the array or object.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Joi.array().items(Joi.string())
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YLC8sJJz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_EB38424D386749E635CCDF8757FD937DB6738220A46C64FBDC64FF4DB41D7B53_1626456457657_Screenshot%2B2021-07-16%2Bat%2B18.05.24.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YLC8sJJz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_EB38424D386749E635CCDF8757FD937DB6738220A46C64FBDC64FF4DB41D7B53_1626456457657_Screenshot%2B2021-07-16%2Bat%2B18.05.24.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JAQwd8zS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_EB38424D386749E635CCDF8757FD937DB6738220A46C64FBDC64FF4DB41D7B53_1626456482610_Screenshot%2B2021-07-16%2Bat%2B18.05.39.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JAQwd8zS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_EB38424D386749E635CCDF8757FD937DB6738220A46C64FBDC64FF4DB41D7B53_1626456482610_Screenshot%2B2021-07-16%2Bat%2B18.05.39.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Joi.array().items(Joi.object())
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VqQNAsWp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_EB38424D386749E635CCDF8757FD937DB6738220A46C64FBDC64FF4DB41D7B53_1626456508612_Screenshot%2B2021-07-16%2Bat%2B18.09.16.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VqQNAsWp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_EB38424D386749E635CCDF8757FD937DB6738220A46C64FBDC64FF4DB41D7B53_1626456508612_Screenshot%2B2021-07-16%2Bat%2B18.09.16.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VzWSEz3E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_EB38424D386749E635CCDF8757FD937DB6738220A46C64FBDC64FF4DB41D7B53_1626456757429_Screenshot%2B2021-07-16%2Bat%2B18.32.12.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VzWSEz3E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_EB38424D386749E635CCDF8757FD937DB6738220A46C64FBDC64FF4DB41D7B53_1626456757429_Screenshot%2B2021-07-16%2Bat%2B18.32.12.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Joi is super cool and I would recommend it for server-side validation. &lt;/p&gt;

&lt;p&gt;Check Joi docs  &lt;a href="https://joi.dev/"&gt;here&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;See Project  &lt;a href="https://glitch.com/edit/#!/joi-validation"&gt;here&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Do you like this article? Hit me up on  &lt;a href="https://twitter.com/femioba_"&gt;twitter&lt;/a&gt;  or  &lt;a href="https://www.linkedin.com/in/olufemi-obafunmiso/"&gt;linkedin&lt;/a&gt; &lt;/p&gt;

</description>
      <category>node</category>
      <category>apis</category>
      <category>javascript</category>
      <category>express</category>
    </item>
    <item>
      <title>Crazy Laravel Stack (Fantastically Powerful)</title>
      <author>Clean Code Studio</author>
      <pubDate>Fri, 23 Jul 2021 14:12:15 +0000</pubDate>
      <link>https://dev.to/cleancodestudio/fanatic-laravel-stack-fantastically-laravel-combo-stacked-with-knock-out-power-3dbf</link>
      <guid>https://dev.to/cleancodestudio/fanatic-laravel-stack-fantastically-laravel-combo-stacked-with-knock-out-power-3dbf</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Driven by a deeply personal vendetta against college debt - I've created, shared, spoken, written, recorded, published, posted, developed, built, and invested - invested time, energy, and resources into sharing knowledge.&lt;/em&gt; &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Nearing 500,000 global viewers, over 3000 subscribers, and with &lt;a href="https://youtube.com/c/cleancodestudio"&gt;125+ published Clean Code Studio screencasts&lt;/a&gt; -- I have invested the time and energy into Clean Code Studio and feel the time has finally come to do something...something that may quite possibly be - bat s*** crazy.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;What's crazy you ask? Great question!&lt;/p&gt;

&lt;p&gt;So, let me break this down first. Here's a list of several of the contributions I've made via Clean Code Studio to improve the coding and educational resources available out there and further demolish this crazy notion that going to college (to quite literally deep dive into debt more times than not) is a flat out terrible idea. After the contributions to date, we'll dive into the crazy. &lt;/p&gt;

&lt;p&gt;Okay - so check it - here's a list of the coding and educational contributions made directly through me as Clean Code Studio, for Clean Code Studio, or because of Clean Code Studio.  &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://youtube.com/c/cleancodestudio"&gt;125+ Clean Code Studio YouTube screencasts&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;ul&gt;
&lt;li&gt;&lt;a href="https://npmjs.com/package/vuejs-form"&gt;10+ Developed and Published NPM Packages (Installed thousands of times Over)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/cleancodestudio"&gt;12+ dev.to blog posts published (With nearly 9,000+ readers)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;ul&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/users/8541350/clean-code-studio"&gt;Top 25% rank in stack overflow questions answered&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;ul&gt;
&lt;li&gt;Spoke with 2nd Year UMKC Computer Science Majors (As a 23 Year old who had dropped out of college myself, I was impressed with the offer to come share the knowledge with computer science students at the University. The professor let me in on how he knew the degree wasn't that important for computer science any more and thought I'd have a solid take on personal branding beyond the degree since I had a solid gig without the piece of paper.&lt;/li&gt;
&lt;/ul&gt;




&lt;ul&gt;
&lt;li&gt;&lt;a href="https://tiktok.com/@cleancodestudio?lang=en"&gt;Clean Code Studio TikTok Humor (#WhatProgrammersSay vs. #WhatProgrammersMean&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;ul&gt;
&lt;li&gt;&lt;a href="https://packagist.org/packages/clean-code-studio/laravel-make-facades"&gt;Developed 5+ Packagist Packages (Installed by Devs thousands of times)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;There's reddit threads, Github repos, udemy courses, leetcode submissions/feedback, etc... &lt;/p&gt;

&lt;p&gt;Buutttt - &lt;em&gt;&lt;strong&gt;Here's the crazy part (And a sliiiggghtttly embarrassing admission)!!&lt;/strong&gt;&lt;/em&gt;.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://cleancode.studio"&gt;Clean Code Studio&lt;/a&gt; - the website - source of the Clean Code Clean Life ~ Simplify brand - the center piece of our online presence....&lt;/p&gt;

&lt;p&gt;Yah, so it kinda uses Google sites right now - like the default google website builder, the one that is literally worse than any other website builder out there. &lt;/p&gt;

&lt;p&gt;Clean Code Studio, content wise, has some great content - but the website as it is in its current state is lacking.&lt;/p&gt;

&lt;p&gt;Thus, once we hit 3000 subscribers - I decided to adjust.&lt;/p&gt;

&lt;p&gt;I started building out the actual Clean Code Studio Website Application earlier this week (2 days ago to be precise). &lt;/p&gt;




&lt;p&gt;I'm a Laravel fan boy - thus I started building the application out using Laravel. &lt;/p&gt;




&lt;p&gt;&lt;strong&gt;_THAT's WHEN THINGS WENT SIDEWAYS (S&lt;/strong&gt;* BLEW UP INTO ALL TYPES OF CRAZY - CRAZY GOOD)!!_**&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;1. I started with Laravel&lt;/li&gt;
&lt;li&gt;2. Then I noticed Laravel Spark was re-created AND re-branded &lt;/li&gt;
&lt;li&gt;3. Laravel Spark (link way below) was now Laravel Spark Classic &lt;/li&gt;
&lt;li&gt;4. Laravel Spark (link way below) is now Laravel Spark Next&lt;/li&gt;
&lt;li&gt;5. Laravel Spark Next Doesn't Care Which Front-end Preset You Use (Laravel Spark Classic was biased towards vue.js)&lt;/li&gt;
&lt;li&gt;6. Laravel Spark Next needs a front-end preset - it just doesn't care about which one it is. I pulled in &lt;strong&gt;Laravel Jet Stream&lt;/strong&gt;. &lt;/li&gt;
&lt;li&gt;7. Using Laravel Jet Stream, I set up the auth, created the teams, set up team &amp;amp; user actions/emails/notifications, added the ability for users/teams to add profile picture updates, and configured the password to be re-settable, and for two factor authentication to be optional, etc...&lt;/li&gt;
&lt;li&gt;8. Laravel Jet Stream Configures All Of This, There was very little customization on my part (if any).&lt;/li&gt;
&lt;li&gt;9 Laravel Jet Stream Can Also Use Inertia.js (AKA Vue.js SPA front-end instead of using Live Wire with Laravel Jet Stream)&lt;/li&gt;
&lt;li&gt;10. Laravel Spark Next takes care of billing. I chose the new laravel-spark-paddle (Credit card or paypal payment optioni - super easy set up)&lt;/li&gt;
&lt;li&gt;11. At this point, I remembered how fun Laravel Nova was to use as a user (I had used Laravel nova on a few past projects - it's amazing).&lt;/li&gt;
&lt;li&gt;12. Laravel Nova is technically supposed to be used as an admin panel.&lt;/li&gt;
&lt;li&gt;13. With Laravel JetStream we have the authentication and the profile/team scaffolds. With Laravel Spark we have the Billing Scaffolds and Integration. And now - after bringing in Laravel Nova - we have an admin panel allowing us to easily connect, create, relate, destroy, search, sort, and access all of the model data from both Laravel JetStream and Laravel Spark directly from an admin panel via Laravel Nova.&lt;/li&gt;
&lt;li&gt;14. Then, there's Laravel Sanctum - Laravel JetStream let's you use Laravel Sanctum. Laravel Sanctum lets you create a publicly facing API that provides tokens with abilities for users to interact with your API. &lt;/li&gt;
&lt;li&gt;15. Laravel Sanctum allows you to create a public, user accessible, API that creates tokens that authorize api access for

&lt;ul&gt;
&lt;li&gt;API Token Authentication&lt;/li&gt;
&lt;li&gt;SPA Authentication&lt;/li&gt;
&lt;li&gt;Mobile Application Authentication&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;16. And allows testing of APIs using the &lt;code&gt;Sanctum::actingAs&lt;/code&gt; method that allows you to authenticate a user and specify which abilities should be granted to their token.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All together, we have &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://laravel.com"&gt;Laravel&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Laravel - Framework for web artisans&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://laravel-mix.com"&gt;Laravel Mix&lt;/a&gt; 

&lt;ul&gt;
&lt;li&gt;Laravel Mix - Webpack Asset Compilation/Webpack Wrapper&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://laravel.com/docs/8.x/sail"&gt;Laravel Sail&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Laravel Sail - Local Docker Environment for Laravel&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://spark.laravel.com"&gt;Laravel Spark&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Laravel Spark - SaaS App Scaffolding &lt;/li&gt;
&lt;li&gt;Laravel Spark - Integrates Billing Features Into Laravel 
Application&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://laravel.com/docs/8.x/cashier-paddle"&gt;Laravel Cashier Paddle&lt;/a&gt; 

&lt;ul&gt;
&lt;li&gt;Laravel Cashier Paddle provides an expressive, fluent interface to Paddle's subscription billing services. &lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://nova.laravel.com"&gt;Laravel Nova&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Laravel Nova - Admin Panel for Laravel (Eloquent Models)&lt;/li&gt;
&lt;li&gt; &lt;a href="https://laravel.com/docs/8.x/scout#introduction"&gt;Laravel Scout&lt;/a&gt; 

&lt;ul&gt;
&lt;li&gt;Laravel Scout - Optional driver for adding full-text search to your eloquent models&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://jetstream.laravel.com/2.x/introduction.html"&gt;Laravel Jet Stream&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Jetstream - Provides the implementation for your application's login, registration, email verification, two-factor authentication, session management, API via Laravel Sanctum, and optional team management features.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://laravel.com/docs/8.x/fortify"&gt;Laravel Fortify&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Laravel Fortify is a frontend agnostic authentication backend implementation for Laravel&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://laravel.com/docs/8.x/sanctum#introduction"&gt;Laravel Sanctum&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Laravel Sanctum provides a featherweight authentication system for SPAs (single page applications), mobile applications, and simple, token based APIs. Sanctum allows each user of your application to generate multiple API tokens for their account. These tokens may be granted abilities / scopes which specify which actions the tokens are allowed to perform.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://forge.laravel.com"&gt;Laravel Forge&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Laravel Forge - Server management and site deployment service (Deploying app to stage - then to prod)&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This Laravel stack listed above is what I'm currently working with to create &lt;a href="https://dev.toClean%20Code%20Studio"&gt;https://cleancode.studio&lt;/a&gt; - so far, I'm extremely impressed. With Laravel Spark Next being released and non being biased towards any front-end - This tech stack of more than half of Laravel's core eco system integrates all but seamlessly. &lt;/p&gt;

&lt;p&gt;Below is the actual README.md I pulled from my Clean Code Studio private repo. Feel free to check it out!&lt;/p&gt;

&lt;p&gt;I also highly recommend &lt;a href="https://www.npmjs.com/package/doctoc"&gt;doctoc&lt;/a&gt; from NPM if you're starting to build out a long read me. It automatically creates a table of contents for any markdown file based on headers and sub-header relationships :) &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Install Doctoc&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="nx"&gt;doctoc&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;save&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;dev&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;2. Open &lt;code&gt;package.json&lt;/code&gt; and add &lt;code&gt;"index-readme": "doctoc README.md" to your&lt;/code&gt;scripts` object&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;&lt;/code&gt;`js&lt;br&gt;
// package.json&lt;/p&gt;

&lt;p&gt;"private": true,&lt;br&gt;
"scripts": {&lt;br&gt;
        "dev": "npm run development",&lt;br&gt;
        "development": "mix",&lt;br&gt;
        "watch": "mix watch",&lt;br&gt;
        "watch-poll": "mix watch -- --watch-options-poll=1000",&lt;br&gt;
        "hot": "mix watch --hot",&lt;br&gt;
        "prod": "npm run production",&lt;br&gt;
        "production": "mix --production",&lt;br&gt;
        "index-readme": "doctoc README.md" &lt;br&gt;
    },&lt;br&gt;
`&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Whenever you want to generate a table of content in your README.md - simply run &lt;code&gt;npm run index-readme&lt;/code&gt;&lt;/strong&gt; &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#my-actual-clean-code-studio-readmemd-pulled-from-my-personal-project-this-morning"&gt;
  &lt;/a&gt;
  My Actual Clean Code Studio README.md (Pulled from my personal project this morning)
&lt;/h2&gt;




&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="#clean-code-studio"&gt;Clean Code Studio&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#setup-local-dev-environment"&gt;Setup Local Dev Environment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#github"&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#composer"&gt;Composer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#env-environment-variables"&gt;.env (Environment Variables)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#database"&gt;Database&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#env-sqlite-local-settings-for-database"&gt;.env (SQLite local) Settings for Database&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#migrate-database-tables-and-seed-dummy-data"&gt;Migrate database tables and seed dummy data&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="#compile-front-end-assets"&gt;Compile Front-end Assets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#boot-development-server"&gt;Boot Development Server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tech-stack"&gt;Tech Stack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#php-80"&gt;PHP 8.0+&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#laravel-80"&gt;Laravel 8.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#vue-js-305"&gt;Vue JS 3.05&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#admin-panel"&gt;Admin panel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#uses-laravel-nova-v3270"&gt;(Uses Laravel Nova v3.27.0)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#billing"&gt;Billing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#uses-laravel-spark-next"&gt;(Uses Laravel Spark Next)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#uses-paddle-payment-gateway-via-spark-next"&gt;(Uses Paddle Payment Gateway Via Spark Next)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#authentication"&gt;Authentication&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#uses-laravel-jetstream"&gt;(Uses Laravel Jetstream)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#css"&gt;CSS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#uses-tailwind-css"&gt;(Uses Tailwind CSS)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#using-tailwind-within-laravel-jetstream"&gt;(Using Tailwind within Laravel Jetstream)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#js"&gt;JS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#uses-vuejs-front-end"&gt;(Uses Vue.js Front-end)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#uses-inertiajs-for-development"&gt;(Uses Inertia.js for development)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#webpack-jscssasset-bundler"&gt;Webpack (JS/CSS/ASSET Bundler)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#uses-laravel-mix-wrapper-to-simplify-webpack"&gt;(Uses Laravel Mix Wrapper To Simplify Webpack)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="#app-apis"&gt;App APIs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#public-user-accessable-apis"&gt;Public User Accessable APIs&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#public-apis-authenticate-user-tokens-via-laravel-sanctum"&gt;(Public API's Authenticate User Tokens Via Laravel Sanctum)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#api-token-authentication"&gt;API Token Authentication&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#api-tokens---issuing"&gt;API Tokens - Issuing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#api-tokens---abilities"&gt;API Tokens - Abilities&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#api-tokens---protecting-routes"&gt;API Tokens - Protecting Routes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#api-tokens---revoking-tokens"&gt;API Tokens - Revoking Tokens&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;a href="#spa-token-authentication"&gt;SPA Token Authentication&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#spa-auth---configuration"&gt;SPA Auth - Configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#spa-auth---authenticating"&gt;SPA Auth - Authenticating&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#spa-auth---authenticating---csrf-protection"&gt;SPA Auth - Authenticating - CSRF Protection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#spa-auth---authenticating---logging-in"&gt;SPA Auth - Authenticating - Logging In&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#spa-auth---protecting-routes"&gt;SPA Auth - Protecting Routes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#spa-auth---authorizing-private-broadcast-channels"&gt;SPA Auth - Authorizing Private Broadcast Channels&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="#private-broadcast-channel-authentication"&gt;Private Broadcast Channel Authentication&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#testing-user-accessible-apis-laravel-sanctum-testing"&gt;Testing User Accessible APIs (Laravel Sanctum Testing)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#internal-clean-code-studio-apis"&gt;Internal Clean Code Studio APIs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#brand"&gt;Brand&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#clean-code-studio-branding"&gt;Clean Code Studio Branding&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#canva-create-visual-designs"&gt;Canva (Create Visual Designs)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#icons-storedsaved-via-canva-account"&gt;Icons (Stored/saved via canva account)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;a href="#apply-brand-to"&gt;Apply Brand To...&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#adding-brand-to-admin-panel"&gt;Adding Brand To Admin Panel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#adding-brand-to-billing-sections"&gt;Adding Brand To Billing Sections&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#adding-brand-to-notification-email-template"&gt;Adding Brand To Notification Email Template&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;a href="#clean-code-studio-online-presence"&gt;Clean Code Studio Online Presence&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#website-httpscleancodestudio"&gt;Website: https://cleancode.studio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#youtube-httpsyoutubecomccleancodestudio"&gt;Youtube: https://youtube.com/c/cleancodestudio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#leetcode-httpsleetcodecomzhorton34"&gt;LeetCode: https://leetcode.com/zhorton34/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#github-httpsgithubcomzhorton34"&gt;Github: https://github.com/zhorton34&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#devto-httpsdevtocleancodestudio"&gt;DevTo: https://dev.to/cleancode.studio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#twitter-httpstwittercomcleancodestudio"&gt;Twitter: https://twitter.com/cleancodestudio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#reddit--httpsredditcomusercleancodestudio"&gt;Reddit:  https://reddit.com/user/cleancodestudio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tiktok-httpswwwtiktokcomcleancodestudio"&gt;TikTok: https://www.tiktok.com/@cleancodestudio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#instagram-httpswwwinstagramcomcleancodestudio"&gt;Instagram: https://www.instagram.com/cleancodestudio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#facebook-httpswwwfacebookcomcleancodestudio"&gt;Facebook: https://www.facebook.com/CleanCodeStudio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#packagist-httpspackagistorgpackagesclean-code-studio"&gt;Packagist: https://packagist.org/packages/clean-code-studio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#linkedin-httpswwwlinkedincomcompanycleancodestudio"&gt;LinkedIn: https://www.linkedin.com/company/cleancodestudio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#npm-node-package-manager-httpsnpmjscomzhorton999"&gt;Npm (Node Package Manager): https://npmjs.com/~zhorton999&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#stack-overflow-httpsstackoverflowcomusers8541350clean-code-studio"&gt;Stack Overflow: https://stackoverflow.com/users/8541350/clean-code-studio&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="#deployment"&gt;Deployment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#laravel-forge-server-management--site-deployment"&gt;Laravel Forge (Server management &amp;amp; site deployment)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#staging-site"&gt;Staging Site&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#stage-database"&gt;Stage Database&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;a href="#production-site"&gt;Production Site&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#production-database"&gt;Production Database&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="#clean-code-studio--content-resources"&gt;Clean Code Studio ~ Content Resources&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#testing"&gt;Testing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#billing-tests-laravel-spark"&gt;Billing Tests (Laravel Spark)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#public-facing-api-tests-laravel-sanctum"&gt;Public Facing API Tests (Laravel Sanctum)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#postsvideosscreencasts--notes-clean-code-studio-content"&gt;Posts/Videos/Screencasts &amp;amp; Notes (Clean Code Studio Content)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#faang-notes-google-drive"&gt;FAANG Notes (Google Drive)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#resume-notes-google-drive"&gt;RESUME Notes (Google Drive)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#dev-to-written-blog-posts"&gt;DEV To (Written Blog Posts)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#youtube-videos-screencasts"&gt;YouTube Videos (Screencasts)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#youtube-playlists-screencasts"&gt;YouTube Playlists (Screencasts)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#youtube-community-comments--posts"&gt;Youtube Community (Comments &amp;amp; Posts)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#youtube-about-with-links-to-socials"&gt;YouTube About (With Links To Socials)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#apis-to-retrieve-created-content-api-retrievable-clean-code-studio-content"&gt;APIs to Retrieve Created Content (API Retrievable Clean Code Studio Content)&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#dev-to-get-blogs-api"&gt;Dev To (Get Blogs API)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#youtube-get-screencasts-api"&gt;Youtube (Get Screencasts API)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#google-drive-api"&gt;Google Drive API&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="#terminalconsolecommand-line--commands"&gt;Terminal/Console/Command Line  Commands&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#php-artisan-console-commands"&gt;&lt;code&gt;php artisan&lt;/code&gt; Console Commands&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#php-artisan-serve-boot-local-server"&gt;&lt;code&gt;php artisan serve&lt;/code&gt; (boot local server)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#php-artisan-routelist-see-all-routes"&gt;&lt;code&gt;php artisan route:list&lt;/code&gt; (see all routes)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#php-artisan-migratefresh---seed-migrate-tables-to-database-and-run-seeders-to-populate-database-with-dummy-data"&gt;&lt;code&gt;php artisan migrate:fresh --seed&lt;/code&gt; (migrate tables to database and run seeders to populate database with dummy data)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;a href="#npm-run-console-commands"&gt;&lt;code&gt;npm run&lt;/code&gt; Console Commands&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#npm-run-dev-compile-assets-once-for-local-dev"&gt;&lt;code&gt;npm run dev&lt;/code&gt; (compile assets once for local dev)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#npm-run-watch-compile-assets-and-watch-for-changes-to-re-compile"&gt;&lt;code&gt;npm run watch&lt;/code&gt; (compile assets and watch for changes to re-compile)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#npm-run-production-build-application-for-production-deployment"&gt;&lt;code&gt;npm run production&lt;/code&gt; (build application for production deployment)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#npm-run-index-readme-adds-table-of-contents-to-read-me"&gt;&lt;code&gt;npm run index-readme&lt;/code&gt; (Adds table of contents to read me)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#clean-code-studio"&gt;
  &lt;/a&gt;
  Clean Code Studio
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#setup-local-dev-environment"&gt;
  &lt;/a&gt;
  Setup Local Dev Environment
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#github"&gt;
  &lt;/a&gt;
  GitHub
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;sh&lt;br&gt;
git clone https://github.com/zhorton34/cleancodestudio &amp;amp;&amp;amp; cd cleancodestudio&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#composer"&gt;
  &lt;/a&gt;
  Composer
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;php&lt;br&gt;
composer install&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#env-environment-variables"&gt;
  &lt;/a&gt;
  .env (Environment Variables)
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;sh&lt;br&gt;
mv .env.local .env&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#database"&gt;
  &lt;/a&gt;
  Database
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#env-sqlite-local-settings-for-database"&gt;
  &lt;/a&gt;
  .env (SQLite local) Settings for Database
&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;`sh&lt;br&gt;
DB_CONNECTION=sqlite&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#dbhost127001"&gt;
  &lt;/a&gt;
  DB_HOST=127.0.0.1
&lt;/h1&gt;

&lt;p&gt;DB_PORT=3306&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#dbdatabasedatabase"&gt;
  &lt;/a&gt;
  DB_DATABASE=database
&lt;/h1&gt;

&lt;p&gt;DB_USERNAME=root&lt;br&gt;
DB_PASSWORD=&lt;br&gt;
`&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#migrate-database-tables-and-seed-dummy-data"&gt;
  &lt;/a&gt;
  Migrate database tables and seed dummy data
&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;php&lt;br&gt;
php artisan migrate:fresh --seed&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#compile-frontend-assets"&gt;
  &lt;/a&gt;
  Compile Front-end Assets
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;js&lt;br&gt;
npm install &amp;amp;&amp;amp; npm watch&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#boot-development-server"&gt;
  &lt;/a&gt;
  Boot Development Server
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;php&lt;br&gt;
php artisan serve&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#tech-stack"&gt;
  &lt;/a&gt;
  Tech Stack
&lt;/h2&gt;




&lt;h3&gt;
  &lt;a href="#php-80"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.php.net/ChangeLog-8.php"&gt;PHP 8.0+&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#laravel-80"&gt;
  &lt;/a&gt;
  &lt;a href="https://laravel.com"&gt;Laravel 8.0&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#vue-js-305"&gt;
  &lt;/a&gt;
  &lt;a href="https://v3.vuejs.org/"&gt;Vue JS 3.05&lt;/a&gt;
&lt;/h3&gt;




&lt;h4&gt;
  &lt;a href="#admin-panel"&gt;
  &lt;/a&gt;
  &lt;a href="https://cleancode.studio/admin"&gt;Admin panel&lt;/a&gt;
&lt;/h4&gt;

&lt;h5&gt;
  &lt;a href="#uses-laravel-nova-v3270"&gt;
  &lt;/a&gt;
  &lt;a href="https://nova.laravel.com"&gt;(Uses Laravel Nova v3.27.0)&lt;/a&gt;
&lt;/h5&gt;




&lt;h4&gt;
  &lt;a href="#billing"&gt;
  &lt;/a&gt;
  &lt;a href="https://cleancode.studio/billing"&gt;Billing&lt;/a&gt;
&lt;/h4&gt;

&lt;h5&gt;
  &lt;a href="#uses-laravel-spark-next"&gt;
  &lt;/a&gt;
  &lt;a href="https://spark.laravel.com"&gt;(Uses Laravel Spark Next)&lt;/a&gt;
&lt;/h5&gt;

&lt;h5&gt;
  &lt;a href="#uses-paddle-payment-gateway-via-spark-next"&gt;
  &lt;/a&gt;
  &lt;a href="https://paddle.com/"&gt;(Uses Paddle Payment Gateway Via Spark Next)&lt;/a&gt;
&lt;/h5&gt;




&lt;h4&gt;
  &lt;a href="#authentication"&gt;
  &lt;/a&gt;
  &lt;a href="https://cleancode.studio/login"&gt;Authentication&lt;/a&gt;
&lt;/h4&gt;

&lt;h5&gt;
  &lt;a href="#uses-laravel-jetstream"&gt;
  &lt;/a&gt;
  &lt;a href="https://jetstream.laravel.com/2.x/concept-overview.html#laravel-fortify"&gt;(Uses Laravel Jetstream)&lt;/a&gt;
&lt;/h5&gt;




&lt;h4&gt;
  &lt;a href="#css"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/zhorton34/cleancodestudio/tree/master/resources/css"&gt;CSS&lt;/a&gt;
&lt;/h4&gt;

&lt;h5&gt;
  &lt;a href="#uses-tailwind-css"&gt;
  &lt;/a&gt;
  &lt;a href="https://tailwindcss.com/"&gt;(Uses Tailwind CSS)&lt;/a&gt;
&lt;/h5&gt;

&lt;h5&gt;
  &lt;a href="#using-tailwind-within-laravel-jetstream"&gt;
  &lt;/a&gt;
  &lt;a href="https://jetstream.laravel.com/2.x/concept-overview.html#tailwind"&gt;(Using Tailwind within Laravel Jetstream)&lt;/a&gt;
&lt;/h5&gt;




&lt;h4&gt;
  &lt;a href="#js"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/zhorton34/cleancodestudio/tree/master/resources/js"&gt;JS&lt;/a&gt;
&lt;/h4&gt;

&lt;h5&gt;
  &lt;a href="#uses-vuejs-frontend"&gt;
  &lt;/a&gt;
  &lt;a href="https://vuejs.org"&gt;(Uses Vue.js Front-end)&lt;/a&gt;
&lt;/h5&gt;

&lt;h5&gt;
  &lt;a href="#uses-inertiajs-for-development"&gt;
  &lt;/a&gt;
  &lt;a href="https://inertiajs.org"&gt;(Uses Inertia.js for development)&lt;/a&gt;
&lt;/h5&gt;




&lt;h4&gt;
  &lt;a href="#webpack-jscssasset-bundler"&gt;
  &lt;/a&gt;
  &lt;a href="%5Bhttps://webpack%5D(https://webpack.js.org/)"&gt;Webpack (JS/CSS/ASSET Bundler)&lt;/a&gt;
&lt;/h4&gt;

&lt;h5&gt;
  &lt;a href="#uses-laravel-mix-wrapper-to-simplify-webpack"&gt;
  &lt;/a&gt;
  &lt;a href="https://laravel-mix.com"&gt;(Uses Laravel Mix Wrapper To Simplify Webpack)&lt;/a&gt;
&lt;/h5&gt;




&lt;h2&gt;
  &lt;a href="#app-apis"&gt;
  &lt;/a&gt;
  App APIs
&lt;/h2&gt;




&lt;h3&gt;
  &lt;a href="#public-user-accessable-apis"&gt;
  &lt;/a&gt;
  &lt;a href="https://jetstream.laravel.com/2.x/features/api.html"&gt;Public User Accessable APIs&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;--&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#public-apis-authenticate-user-tokens-via-laravel-sanctum"&gt;
  &lt;/a&gt;
  &lt;a href="https://laravel.com/docs/8.x/sanctum"&gt;(Public API's Authenticate User Tokens Via Laravel Sanctum)&lt;/a&gt;
&lt;/h4&gt;

&lt;h5&gt;
  &lt;a href="#api-token-authentication"&gt;
  &lt;/a&gt;
  &lt;a href="https://laravel.com/docs/8.x/sanctum#api-token-authentication"&gt;API Token Authentication&lt;/a&gt;
&lt;/h5&gt;

&lt;h6&gt;
  &lt;a href="#api-tokens-issuing"&gt;
  &lt;/a&gt;
  &lt;a href="https://laravel.com/docs/8.x/sanctum#issuing-api-tokens"&gt;API Tokens - Issuing&lt;/a&gt;
&lt;/h6&gt;

&lt;h6&gt;
  &lt;a href="#api-tokens-abilities"&gt;
  &lt;/a&gt;
  &lt;a href="https://laravel.com/docs/8.x/sanctum#token-abilities"&gt;API Tokens - Abilities&lt;/a&gt;
&lt;/h6&gt;

&lt;h6&gt;
  &lt;a href="#api-tokens-protecting-routes"&gt;
  &lt;/a&gt;
  &lt;a href="https://laravel.com/docs/8.x/sanctum#protecting-routes"&gt;API Tokens - Protecting Routes&lt;/a&gt;
&lt;/h6&gt;

&lt;h6&gt;
  &lt;a href="#api-tokens-revoking-tokens"&gt;
  &lt;/a&gt;
  &lt;a href="https://laravel.com/docs/8.x/sanctum#revoking-tokens"&gt;API Tokens - Revoking Tokens&lt;/a&gt;
&lt;/h6&gt;

&lt;h5&gt;
  &lt;a href="#spa-token-authentication"&gt;
  &lt;/a&gt;
  &lt;a href="https://laravel.com/docs/8.x/sanctum#spa-authentication"&gt;SPA Token Authentication&lt;/a&gt;
&lt;/h5&gt;

&lt;h6&gt;
  &lt;a href="#spa-auth-configuration"&gt;
  &lt;/a&gt;
  &lt;a href="https://laravel.com/docs/8.x/sanctum#spa-configuration"&gt;SPA Auth - Configuration&lt;/a&gt;
&lt;/h6&gt;

&lt;h6&gt;
  &lt;a href="#spa-auth-authenticating"&gt;
  &lt;/a&gt;
  &lt;a href="https://laravel.com/docs/8.x/sanctum#spa-authenticating"&gt;SPA Auth - Authenticating&lt;/a&gt;
&lt;/h6&gt;

&lt;h6&gt;
  &lt;a href="#spa-auth-authenticating-csrf-protection"&gt;
  &lt;/a&gt;
  &lt;a href="https://laravel.com/docs/8.x/sanctum#csrf-protection"&gt;SPA Auth - Authenticating - CSRF Protection&lt;/a&gt;
&lt;/h6&gt;

&lt;h6&gt;
  &lt;a href="#spa-auth-authenticating-logging-in"&gt;
  &lt;/a&gt;
  &lt;a href="https://laravel.com/docs/8.x/sanctum#csrf-protection"&gt;SPA Auth - Authenticating - Logging In&lt;/a&gt;
&lt;/h6&gt;

&lt;h6&gt;
  &lt;a href="#spa-auth-protecting-routes"&gt;
  &lt;/a&gt;
  &lt;a href="https://laravel.com/docs/8.x/sanctum#protecting-spa-routes"&gt;SPA Auth - Protecting Routes&lt;/a&gt;
&lt;/h6&gt;

&lt;h6&gt;
  &lt;a href="#spa-auth-authorizing-private-broadcast-channels"&gt;
  &lt;/a&gt;
  &lt;a href="https://laravel.com/docs/8.x/sanctum#authorizing-private-broadcast-channels"&gt;SPA Auth - Authorizing Private Broadcast Channels&lt;/a&gt;
&lt;/h6&gt;

&lt;h5&gt;
  &lt;a href="#private-broadcast-channel-authentication"&gt;
  &lt;/a&gt;
  &lt;a href="https://laravel.com/docs/8.x/sanctum#authorizing-private-broadcast-channels"&gt;Private Broadcast Channel Authentication&lt;/a&gt;
&lt;/h5&gt;

&lt;h5&gt;
  &lt;a href="#testing-user-accessible-apis-laravel-sanctum-testing"&gt;
  &lt;/a&gt;
  &lt;a href="https://laravel.com/docs/8.x/sanctum#testing"&gt;Testing User Accessible APIs (Laravel Sanctum Testing)&lt;/a&gt;
&lt;/h5&gt;




&lt;h3&gt;
  &lt;a href="#internal-clean-code-studio-apis"&gt;
  &lt;/a&gt;
  Internal Clean Code Studio APIs
&lt;/h3&gt;




&lt;h2&gt;
  &lt;a href="#brand"&gt;
  &lt;/a&gt;
  Brand
&lt;/h2&gt;




&lt;h3&gt;
  &lt;a href="#clean-code-studio-branding"&gt;
  &lt;/a&gt;
  &lt;a href="(https://drive.google.com/drive/folders/1GG6K-uWiYQoLM5HjUI38adj9BP8yj8LC?usp=sharing)"&gt;Clean Code Studio Branding&lt;/a&gt;
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#canva-create-visual-designs"&gt;
  &lt;/a&gt;
  &lt;a href="https://canva.com"&gt;Canva (Create Visual Designs)&lt;/a&gt;
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#icons-storedsaved-via-canva-account"&gt;
  &lt;/a&gt;
  &lt;a href="https://canva.com"&gt;Icons (Stored/saved via canva account)&lt;/a&gt;
&lt;/h4&gt;

&lt;h3&gt;
  &lt;a href="#apply-brand-to"&gt;
  &lt;/a&gt;
  Apply Brand To...
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#adding-brand-to-admin-panel"&gt;
  &lt;/a&gt;
  &lt;a href="https://nova.laravel.com/docs/3.0/customization/themes.html#overview"&gt;Adding Brand To Admin Panel&lt;/a&gt;
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#adding-brand-to-billing-sections"&gt;
  &lt;/a&gt;
  &lt;a href="https://spark.laravel.com/docs/1.x/spark-stripe/customization.html#branding"&gt;Adding Brand To Billing Sections&lt;/a&gt;
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#adding-brand-to-notification-email-template"&gt;
  &lt;/a&gt;
  &lt;a href="https://medium.com/@christianjombo/customizing-laravels-default-notification-email-template-adding-a-logo-and-changing-ff6f107dd640"&gt;Adding Brand To Notification Email Template&lt;/a&gt;
&lt;/h4&gt;

&lt;h3&gt;
  &lt;a href="#clean-code-studio-online-presence"&gt;
  &lt;/a&gt;
  &lt;a href="https://youtube.com/c/cleancodestudio/about"&gt;Clean Code Studio Online Presence&lt;/a&gt;
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#website-httpscleancodestudio"&gt;
  &lt;/a&gt;
  Website: &lt;a href="https://cleancode.studio"&gt;https://cleancode.studio&lt;/a&gt;
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#youtube-httpsyoutubecomccleancodestudio"&gt;
  &lt;/a&gt;
  Youtube: &lt;a href="https://youtube.com/c/cleancodestudio"&gt;https://youtube.com/c/cleancodestudio&lt;/a&gt;
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#leetcode-httpsleetcodecomzhorton34"&gt;
  &lt;/a&gt;
  LeetCode: &lt;a href="https://leetcode.com/zhorton34/"&gt;https://leetcode.com/zhorton34/&lt;/a&gt;
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#github-httpsgithubcomzhorton34"&gt;
  &lt;/a&gt;
  Github: &lt;a href="https://github.com/zhorton34"&gt;https://github.com/zhorton34&lt;/a&gt;
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#devto-httpsdevtocleancodestudio"&gt;
  &lt;/a&gt;
  DevTo: &lt;a href="https://dev.to/cleancode.studio"&gt;https://dev.to/cleancode.studio&lt;/a&gt;
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#twitter-httpstwittercomcleancodestudio"&gt;
  &lt;/a&gt;
  Twitter: &lt;a href="https://twitter.com/cleancodestudio"&gt;https://twitter.com/cleancodestudio&lt;/a&gt;
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#reddit-httpsredditcomusercleancodestudio"&gt;
  &lt;/a&gt;
  Reddit:  &lt;a href="https://reddit.com/user/cleancodestudio"&gt;https://reddit.com/user/cleancodestudio&lt;/a&gt;
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#tiktok-httpswwwtiktokcomcleancodestudio"&gt;
  &lt;/a&gt;
  TikTok: &lt;a href="https://www.tiktok.com/@cleancodestudio"&gt;https://www.tiktok.com/@cleancodestudio&lt;/a&gt;
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#instagram-httpswwwinstagramcomcleancodestudio"&gt;
  &lt;/a&gt;
  Instagram: &lt;a href="https://www.instagram.com/cleancodestudio"&gt;https://www.instagram.com/cleancodestudio&lt;/a&gt;
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#facebook-httpswwwfacebookcomcleancodestudio"&gt;
  &lt;/a&gt;
  Facebook: &lt;a href="https://www.facebook.com/CleanCodeStudio"&gt;https://www.facebook.com/CleanCodeStudio&lt;/a&gt;
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#packagist-httpspackagistorgpackagescleancodestudio"&gt;
  &lt;/a&gt;
  Packagist: &lt;a href="https://packagist.org/packages/clean-code-studio"&gt;https://packagist.org/packages/clean-code-studio&lt;/a&gt;
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#linkedin-httpswwwlinkedincomcompanycleancodestudio"&gt;
  &lt;/a&gt;
  LinkedIn: &lt;a href="https://www.linkedin.com/company/cleancodestudio"&gt;https://www.linkedin.com/company/cleancodestudio&lt;/a&gt;
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#npm-node-package-manager-httpsnpmjscomzhorton999"&gt;
  &lt;/a&gt;
  Npm (Node Package Manager): &lt;a href="https://npmjs.com/%7Ezhorton999"&gt;https://npmjs.com/~zhorton999&lt;/a&gt;
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#stack-overflow-httpsstackoverflowcomusers8541350cleancodestudio"&gt;
  &lt;/a&gt;
  Stack Overflow: &lt;a href="https://stackoverflow.com/users/8541350/clean-code-studio"&gt;https://stackoverflow.com/users/8541350/clean-code-studio&lt;/a&gt;
&lt;/h4&gt;




&lt;h2&gt;
  &lt;a href="#deployment"&gt;
  &lt;/a&gt;
  Deployment
&lt;/h2&gt;




&lt;h3&gt;
  &lt;a href="#laravel-forge-server-management-amp-site-deployment"&gt;
  &lt;/a&gt;
  &lt;a href="https://forge.laravel.com"&gt;Laravel Forge (Server management &amp;amp; site deployment)&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#staging-site"&gt;
  &lt;/a&gt;
  &lt;a href="https://stage.cleancode.studio"&gt;Staging Site&lt;/a&gt;
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#stage-database"&gt;
  &lt;/a&gt;
  Stage Database
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;User: stage&lt;/li&gt;
&lt;li&gt;Database: stage&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#production-site"&gt;
  &lt;/a&gt;
  &lt;a href="https://cleancode.studio"&gt;Production Site&lt;/a&gt;
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#production-database"&gt;
  &lt;/a&gt;
  Production Database
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;User: forge&lt;/li&gt;
&lt;li&gt;Database: forge&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#clean-code-studio-content-resources"&gt;
  &lt;/a&gt;
  Clean Code Studio ~ Content Resources
&lt;/h2&gt;




&lt;h2&gt;
  &lt;a href="#testing"&gt;
  &lt;/a&gt;
  Testing
&lt;/h2&gt;

&lt;p&gt;--&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#billing-tests-laravel-spark"&gt;
  &lt;/a&gt;
  &lt;a href="https://spark.laravel.com/docs/1.x/spark-stripe/testing.html"&gt;Billing Tests (Laravel Spark)&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#public-facing-api-tests-laravel-sanctum"&gt;
  &lt;/a&gt;
  &lt;a href="https://laravel.com/docs/8.x/sanctum#authorizing-private-broadcast-channels"&gt;Public Facing API Tests (Laravel Sanctum)&lt;/a&gt;
&lt;/h3&gt;




&lt;h2&gt;
  &lt;a href="#postsvideosscreencasts-amp-notes-clean-code-studio-content"&gt;
  &lt;/a&gt;
  Posts/Videos/Screencasts &amp;amp; Notes (Clean Code Studio Content)
&lt;/h2&gt;




&lt;h3&gt;
  &lt;a href="#faang-notes-google-drive"&gt;
  &lt;/a&gt;
  &lt;a href="https://drive.google.com/drive/folders/1ZBFsNxBXTw6Sjk3KSY5Te9gc50lphxji?usp=sharing"&gt;FAANG Notes (Google Drive)&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#resume-notes-google-drive"&gt;
  &lt;/a&gt;
  &lt;a href="https://drive.google.com/drive/folders/1ES8gDexI4OyIUdK6q8xowtvYSGP2oRgk?usp=sharing"&gt;RESUME Notes (Google Drive)&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#dev-to-written-blog-posts"&gt;
  &lt;/a&gt;
  &lt;a href="https://dev.to/cleancodestudio"&gt;DEV To (Written Blog Posts)&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#youtube-videos-screencasts"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.youtube.com/c/CleanCodeStudio/videos"&gt;YouTube Videos (Screencasts)&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#youtube-playlists-screencasts"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.youtube.com/c/CleanCodeStudio/playlists"&gt;YouTube Playlists (Screencasts)&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#youtube-community-comments-amp-posts"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.youtube.com/c/CleanCodeStudio/community"&gt;Youtube Community (Comments &amp;amp; Posts)&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#youtube-about-with-links-to-socials"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.youtube.com/c/CleanCodeStudio/about"&gt;YouTube About (With Links To Socials)&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#apis-to-retrieve-created-content-api-retrievable-clean-code-studio-content"&gt;
  &lt;/a&gt;
  APIs to Retrieve Created Content (API Retrievable Clean Code Studio Content)
&lt;/h3&gt;




&lt;h4&gt;
  &lt;a href="#dev-to-get-blogs-api"&gt;
  &lt;/a&gt;
  &lt;a href="https://docs.forem.com/api/"&gt;Dev To (Get Blogs API)&lt;/a&gt;
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#youtube-get-screencasts-api"&gt;
  &lt;/a&gt;
  &lt;a href="https://developers.google.com/youtube/v3"&gt;Youtube (Get Screencasts API)&lt;/a&gt;
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#google-drive-api"&gt;
  &lt;/a&gt;
  &lt;a href="https://developers.google.com/drive"&gt;Google Drive API&lt;/a&gt;
&lt;/h4&gt;




&lt;h2&gt;
  &lt;a href="#terminalconsolecommand-line-commands"&gt;
  &lt;/a&gt;
  Terminal/Console/Command Line  Commands
&lt;/h2&gt;




&lt;h3&gt;
  &lt;a href="#-endraw-php-artisan-raw-console-commands"&gt;
  &lt;/a&gt;
  &lt;code&gt;php artisan&lt;/code&gt; Console Commands
&lt;/h3&gt;




&lt;h4&gt;
  &lt;a href="#-endraw-php-artisan-serve-raw-boot-local-server"&gt;
  &lt;/a&gt;
  &lt;code&gt;php artisan serve&lt;/code&gt; (boot local server)
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#-endraw-php-artisan-routelist-raw-see-all-routes"&gt;
  &lt;/a&gt;
  &lt;code&gt;php artisan route:list&lt;/code&gt; (see all routes)
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#-endraw-php-artisan-migratefresh-seed-raw-migrate-tables-to-database-and-run-seeders-to-populate-database-with-dummy-data"&gt;
  &lt;/a&gt;
  &lt;code&gt;php artisan migrate:fresh --seed&lt;/code&gt; (migrate tables to database and run seeders to populate database with dummy data)
&lt;/h4&gt;




&lt;h3&gt;
  &lt;a href="#-endraw-npm-run-raw-console-commands"&gt;
  &lt;/a&gt;
  &lt;code&gt;npm run&lt;/code&gt; Console Commands
&lt;/h3&gt;




&lt;h4&gt;
  &lt;a href="#-endraw-npm-run-dev-raw-compile-assets-once-for-local-dev"&gt;
  &lt;/a&gt;
  &lt;code&gt;npm run dev&lt;/code&gt; (compile assets once for local dev)
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#-endraw-npm-run-watch-raw-compile-assets-and-watch-for-changes-to-recompile"&gt;
  &lt;/a&gt;
  &lt;code&gt;npm run watch&lt;/code&gt; (compile assets and watch for changes to re-compile)
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#-endraw-npm-run-production-raw-build-application-for-production-deployment"&gt;
  &lt;/a&gt;
  &lt;code&gt;npm run production&lt;/code&gt; (build application for production deployment)
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#-endraw-npm-run-indexreadme-adds-table-of-contents-to-read-me"&gt;
  &lt;/a&gt;
  &lt;code&gt;npm run index-readme&lt;/code&gt; (Adds table of contents to read me)
&lt;/h4&gt;

</description>
      <category>laravel</category>
      <category>javascript</category>
      <category>npm</category>
      <category>tooling</category>
    </item>
    <item>
      <title>How to code a game like Apex Legends? </title>
      <author>daizy</author>
      <pubDate>Fri, 23 Jul 2021 14:01:40 +0000</pubDate>
      <link>https://dev.to/daizy29243358/how-to-code-a-game-like-apex-legends-3797</link>
      <guid>https://dev.to/daizy29243358/how-to-code-a-game-like-apex-legends-3797</guid>
      <description>&lt;p&gt;&lt;b&gt;Introduction&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;Coding a game is absolutely loved by programmers and gamers alike. Isn't it? For beginners, coding a game first starts at the simple game of ‘Snake’. Afterwards one may choose to code for more advanced games like Apex Legends. The &lt;/span&gt;&lt;a href="http://apex.legionfarm.com"&gt;&lt;span&gt;Apex gaming coaching&lt;/span&gt;&lt;/a&gt;&lt;span&gt; is currently a very trendy game, popular with huge masses of gamers and programmers. &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;We believe that most gamers have come across the game of Apex Legends by now. If not, let us introduce you to this online hero shooting game. The game - free to play, was only accessible for PlayStationon4, Nintendo Switch, Xbox One earlier. However, recently the makers of the game decided to release the game for Android and iOS users. Once it was launched in 2019 as a surprise, it quickly garnered positive reviews and a wide fan base. &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;Now you may be wondering as to how one can code a game like Apex Legends. Gamers will be quite excited to know this little knowledge spurt. So here we come with an article which reveals to you - &lt;/span&gt;&lt;b&gt;How to code a game like Apex Legends ?&lt;/b&gt;&lt;span&gt; No secrets with you ! &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;What is Apex?&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Apex&lt;/b&gt;&lt;span&gt; is a &lt;/span&gt;&lt;b&gt;proprietary language&lt;/b&gt;&lt;span&gt; that was developed by &lt;/span&gt;&lt;b&gt;Salesforce.com&lt;/b&gt;&lt;span&gt;.This is an object-oriented language, which allows you to execute flow and transaction control statements. Moreover, the syntax of Apex will look the same as Java, so it will be easy to use. Additionally, it enables developers to add business logic to events. This is included in all types of editions (performance, enterprise, developer, and unlimited edition).&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Features of Apex &lt;/b&gt;&lt;/p&gt;

&lt;ol&gt;
    &lt;li&gt;
&lt;b&gt;Integrated-type&lt;/b&gt;&lt;span&gt;:  Apex provides you the built-in support for DML operations like Insert, Update, Delete. To return the set of objects, it has support for inline SOQL and SOSL query.&lt;/span&gt;
&lt;/li&gt;
    &lt;li&gt;
&lt;b&gt;Easy to use&lt;/b&gt;&lt;span&gt;: As the syntax of Apex is similar to Java, it is very easy to use.&lt;/span&gt;
&lt;/li&gt;
    &lt;li&gt;
&lt;b&gt;Strong integration with data&lt;/b&gt;&lt;span&gt;: The multiple queries and DML statements can be easily executed at the same time and the multiple transaction statements are issued on the database.&lt;/span&gt;
&lt;/li&gt;
    &lt;li&gt;
&lt;b&gt;Strongly typed: &lt;/b&gt;&lt;span&gt;Apex uses a direct reference like sObject and if any invalid reference like wrongly typed data is detected quickly.&lt;/span&gt;
&lt;/li&gt;
    &lt;li&gt;
&lt;b&gt;Multitenant environment: &lt;/b&gt;&lt;span&gt;The Apex is designed to protect against the runway code and also from monopolizing shared resources. If any code violates the rules, it gets easily detected with error messages and stops it from running further.&lt;/span&gt;
&lt;/li&gt;
    &lt;li&gt;
&lt;b&gt;Easy testing: &lt;/b&gt;&lt;span&gt;It provides built-in support for execution, easy testing by indicating how much code was covered and which part of the code should perform efficiently.&lt;/span&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;b&gt;Workflow of Apex&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;The workflow of Apex is Somewhat similar to another programming language, that is &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Variable declaration: &lt;/b&gt;&lt;span&gt;As this is a Strongly typed language, you need to declare every variable with the correct data type. Declaration 1stAcc is to be declared with data type as a list of accounts.&lt;/span&gt;&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;
&lt;b&gt;SOQL query:&lt;/b&gt;&lt;span&gt;To fetch the data from the Salesforce database, a SOQL query is used.&lt;/span&gt;
&lt;/li&gt;
    &lt;li&gt;
&lt;b&gt;Loop statement:&lt;/b&gt;&lt;span&gt;This process is similar to C, C++, and Java. That is, The iteration occurs several times until the statement fails.&lt;/span&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;ul&gt;
    &lt;li&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;ul&gt;
    &lt;li&gt;
&lt;b&gt;Flow control statement:&lt;/b&gt;&lt;span&gt;The flow control statement has the power to stop, execute, and continue the program according to the statement. For Example: If statement.&lt;/span&gt;
&lt;/li&gt;
    &lt;li&gt;
&lt;b&gt;DML Statement: &lt;/b&gt;&lt;span&gt;It performs the records in a database. That is Insertion, upsert, delete operation on the records.&lt;/span&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;span&gt;Here are your steps to &lt;/span&gt;&lt;b&gt;develop Apex Code:&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;The Sandbox and Developer edition of salesforce enables you to develop code. So, You can choose either sandbox or developer edition.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;Apex code development tools are statement.Force.com Developer Console,Force.com IDE,&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;Code Editor in the Salesforce User Interface. You can go with any of the ones from these.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;Force.com Developer Console&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;In force.com Developer Console, you can see a collection of tools to create, debug and test applications.&lt;/span&gt;&lt;/p&gt;

&lt;ol&gt;
    &lt;li&gt;&lt;span&gt;Click on the Name menu at the top right corner of the window. Now you can see four options, from that select the Developer Console option.&lt;/span&gt;&lt;/li&gt;
    &lt;li&gt;&lt;span&gt;After Selecting the developer Console option, you can see a new window.&lt;/span&gt;&lt;/li&gt;
    &lt;li&gt;&lt;span&gt;In that Developer Console Window, You can perform operations like writing and Compiling code, Debugging, Testing, checking performance, SOQL queries, Color coding, and auto Complete.&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;b&gt;Writing and Compiling code: &lt;/b&gt;&lt;span&gt;you can easily write Code by using the source code editor. And the Compilation errors are automatically detected.&lt;/span&gt;&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;
&lt;b&gt;Debugging: &lt;/b&gt;&lt;span&gt;It automatically identifies the compilation errors.&lt;/span&gt;
&lt;/li&gt;
    &lt;li&gt;
&lt;b&gt;Testing: &lt;/b&gt;&lt;span&gt;you can test by viewing debug logs and setting checkpoints.&lt;/span&gt;
&lt;/li&gt;
    &lt;li&gt;
&lt;b&gt;SOQL queries: &lt;/b&gt;&lt;span&gt;To check out the performance and to identify issues or errors you can inspect debug logs&lt;/span&gt;
&lt;/li&gt;
    &lt;li&gt;
&lt;b&gt;Color coding: &lt;/b&gt;&lt;span&gt;The developer editor uses a color scheme that makes the code more readable and easier.&lt;/span&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;Execution of Code in Developer Console&lt;/b&gt;&lt;/p&gt;

&lt;ol&gt;
    &lt;li&gt;
&lt;span&gt;Make login to salesforce.com by using &lt;/span&gt;&lt;b&gt;login.salesforce.com.&lt;/b&gt;&lt;span&gt;Then Copy your code Snippets.&lt;/span&gt;
&lt;/li&gt;
    &lt;li&gt;&lt;span&gt;Next, click on the name menu at the top right corner, next click developer Console, Next click open execute Anonymous window.&lt;/span&gt;&lt;/li&gt;
    &lt;li&gt;&lt;span&gt;By clicking that, a window will open. So you can paste your code on that and click on the execute option at the bottom left.&lt;/span&gt;&lt;/li&gt;
    &lt;li&gt;&lt;span&gt;After clicking on execute option, Debug logs will appear on the window. Then click on the log record at the bottom. While clicking, Always click First log record.&lt;/span&gt;&lt;/li&gt;
    &lt;li&gt;&lt;span&gt;Then type the 'USER' for filtering the output as shown above.&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;span&gt;So, these are the steps you should follow to execute your code.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Creating Customer Object &lt;/b&gt;&lt;/p&gt;

&lt;ol&gt;
    &lt;li&gt;&lt;span&gt;Click on the setup at the top right corner, search for an object. And click on the Create object option.&lt;/span&gt;&lt;/li&gt;
    &lt;li&gt;
&lt;span&gt;Thereby clicking on Create Object, You can see a &lt;/span&gt;&lt;b&gt;Create new Object&lt;/b&gt;&lt;span&gt; button. Click on that.&lt;/span&gt;
&lt;/li&gt;
    &lt;li&gt;&lt;span&gt;After that, the object creation page will appear on the window. Enter all the objects as mentioned in the following image. After entering all the information, click on the save option.&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;span&gt;These are the steps that you can go by to create a Customer Object.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Creating the Customer Object&lt;/b&gt;&lt;/p&gt;

&lt;ol&gt;
    &lt;li&gt;&lt;span&gt;Click on the setup at the top right corner, search for an object. And click on the Create object option.&lt;/span&gt;&lt;/li&gt;
    &lt;li&gt;
&lt;span&gt;Thereby clicking on Create Object, You can see a &lt;/span&gt;&lt;b&gt;Create new Object&lt;/b&gt;&lt;span&gt; button. Click on that.&lt;/span&gt;
&lt;/li&gt;
    &lt;li&gt;&lt;span&gt;Click on the customer object. After Clicking on that, you can see an object page. In that Make a Click on New Button.&lt;/span&gt;&lt;/li&gt;
    &lt;li&gt;&lt;span&gt;Then Select the Checkbox and fill the field name and label as shown in the image&lt;/span&gt;&lt;/li&gt;
    &lt;li&gt;&lt;span&gt;Next click on the visible option, After Click on Next and save.&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;span&gt;In this way, you can create the Customer object.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Creating Invoice Object&lt;/b&gt;&lt;/p&gt;

&lt;ol&gt;
    &lt;li&gt;&lt;span&gt;Click on the setup at the top right corner, search for an object. And click on the Create object option.&lt;/span&gt;&lt;/li&gt;
    &lt;li&gt;
&lt;span&gt;Thereby clicking on Create Object, You can see a &lt;/span&gt;&lt;b&gt;Create new Object&lt;/b&gt;&lt;span&gt; button. Click on that.&lt;/span&gt;
&lt;/li&gt;
    &lt;li&gt;&lt;span&gt;After that, the object creation page will appear on the window. Enter all the objects as mentioned in the following image. After entering all the information, click on the save option.&lt;/span&gt;&lt;/li&gt;
    &lt;li&gt;&lt;span&gt;Enter the required information by following the image and click on the Save button&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;span&gt;By following the above steps, you can create your Invoice Object.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;In this same way, you can also create the Custom Fields for Invoice Objects.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Conclusion&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;In the end, these were the steps that one can follow and write to execute your very own code in Apex Legends Game. It is a must that these steps are followed one after the other. It is not recommended that you skip any of these steps. Acknowledgement of all the steps is key to developing the coding process more comfortably and easily the next time you do so because of the similarity in the syntax to Java. Happy Gaming ! &lt;/span&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Implementing Merge Sort in Rust</title>
      <author>felixfaisal</author>
      <pubDate>Fri, 23 Jul 2021 13:57:49 +0000</pubDate>
      <link>https://dev.to/felixfaisal/implementing-merge-sort-in-rust-4ko8</link>
      <guid>https://dev.to/felixfaisal/implementing-merge-sort-in-rust-4ko8</guid>
      <description>&lt;p&gt;Merge sort is arguably the most popular &lt;strong&gt;divide and conquer&lt;/strong&gt; algorithm, It is one of the first algorithms any software engineer learns while learning algorithms and also while preparing for interviews. Let's implement merge sort in Rust &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#divide-and-conquer"&gt;
  &lt;/a&gt;
  Divide and Conquer
&lt;/h2&gt;

&lt;p&gt;Divide and Conquer is an algorithm design paradigm where we break down the problem statement into two or more parts until it can be solved directly. &lt;/p&gt;

&lt;p&gt;Here we want to sort an array(or vector) in asceding order so we first break down the problem using recursion and then solve the problem. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#merge-sort-algorithm"&gt;
  &lt;/a&gt;
  Merge Sort Algorithm
&lt;/h2&gt;

&lt;p&gt;Here's the psuedocode for merge sort algorithm&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Step 1: Divide the array into two parts 
Step 2: Sort one half of the array 
Step 3: Sort second half of the array 
Step 4: Merge the two halfs
Step 5: Perform these operations recursively
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's visualize this psuedocode using a diagram&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9sMboe5f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n5km9h1x4d928g9laghx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9sMboe5f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n5km9h1x4d928g9laghx.png" alt="Diagram"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#rust-code"&gt;
  &lt;/a&gt;
  Rust code
&lt;/h2&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;merge_sort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;mut&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Vec&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nb"&gt;i32&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;usize&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;usize&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;Vec&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nb"&gt;i32&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;right&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;left&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;mid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;left&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;right&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;merge_sort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mid&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;merge_sort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;right&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;right&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;arr&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Here &lt;code&gt;right - 1 &amp;gt; left&lt;/code&gt; is the terminating condition meaning that the array cannot be divided anymore. We calculate the midpoint of the array and then divide them further recursively after which we merge the arrays by calling &lt;code&gt;merge(arr, left, mid, right)&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;mut&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Vec&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nb"&gt;i32&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;usize&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mid&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;usize&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;usize&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;Vec&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nb"&gt;i32&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;n1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mid&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;n2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;right&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;mid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;mut&lt;/span&gt; &lt;span class="n"&gt;L1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="nf"&gt;.clone&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;mut&lt;/span&gt; &lt;span class="n"&gt;R1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="nf"&gt;.clone&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;L&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;L1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="n"&gt;mid&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;R&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;R1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;mid&lt;/span&gt;&lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="n"&gt;right&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="cm"&gt;/* Merge the temp arrays back into arr[l..r]*/&lt;/span&gt;
    &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;mut&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;// Initial index of first subarray&lt;/span&gt;
    &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;mut&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;// Initial index of second subarray&lt;/span&gt;
    &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;mut&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;// Initial index of merged subarray&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;n1&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;n2&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;L&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;L&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
            &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
            &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;n1&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;L&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
        &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="cm"&gt;/* Copy the remaining elements of R[], if there
    are any */&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;n2&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
        &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;arr&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we merge the two sorted sub arrays in ascending order into a single array, We do this by checking less than condition and then inserting into the array. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output
&lt;/h2&gt;

&lt;p&gt;Let's run these functions using a main function&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;mut&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Vec&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nb"&gt;i32&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nd"&gt;vec!&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;64&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;34&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="n"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;merge_sort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="nf"&gt;.clone&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="nf"&gt;.len&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
    &lt;span class="nd"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Sorted array is {:?}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here's the output!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;    Finished dev &lt;span class="o"&gt;[&lt;/span&gt;unoptimized + debuginfo] target&lt;span class="o"&gt;(&lt;/span&gt;s&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="k"&gt;in &lt;/span&gt;2.83s
     Running &lt;span class="sb"&gt;`&lt;/span&gt;target/debug/rust-code-gen&lt;span class="sb"&gt;`&lt;/span&gt;
Sorted array is &lt;span class="o"&gt;[&lt;/span&gt;8, 9, 11, 22, 25, 34, 64]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There are definitely better ways of implementing this algorithm. Implementing fundamental algorithms in Rust can help beginners understand Rust better and feel more confident. &lt;/p&gt;

</description>
      <category>rust</category>
      <category>algorithms</category>
      <category>interview</category>
      <category>sorting</category>
    </item>
    <item>
      <title>🚀10 Trending projects on GitHub for web developers - 23rd July 2021</title>
      <author>Iain Freestone</author>
      <pubDate>Fri, 23 Jul 2021 13:56:01 +0000</pubDate>
      <link>https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-23rd-july-2021-524</link>
      <guid>https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-23rd-july-2021-524</guid>
      <description>&lt;p&gt;Trending Projects is available as a weekly newsletter please sign up at &lt;a href="https://www.iainfreestone.com"&gt;www.iainfreestone.com&lt;/a&gt; to ensure you never miss an issue.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-turf"&gt;
  &lt;/a&gt;
  1. Turf
&lt;/h3&gt;

&lt;p&gt;Turf is a JavaScript library for spatial analysis. It includes traditional spatial operations, helper functions for creating GeoJSON data, and data classification and statistics tools.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Turfjs"&gt;
        Turfjs
      &lt;/a&gt; / &lt;a href="https://github.com/Turfjs/turf"&gt;
        turf
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A modular geospatial engine written in JavaScript
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/Turfjs/turf/9a1d5e8d99564d4080f1e2bf1517ed41d18012fa/logo.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vKaIX5ly--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Turfjs/turf/9a1d5e8d99564d4080f1e2bf1517ed41d18012fa/logo.png" alt="turf"&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/Turfjs/turf/actions/workflows/turf.yml/badge.svg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FNFSHda_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/Turfjs/turf/actions/workflows/turf.yml/badge.svg" alt="GitHub Actions Status"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/package/@turf/turf" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9d9159e06a08f4668e8fa797f2d5b9b558510d3cae5476624493d3c3de2c825b/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f40747572662f747572662e737667" alt="Version Badge"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/Turfjs/turf" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3506043fa244967cdfe62a3ce75389696abab231732f114ba50e3681da108e9b/68747470733a2f2f6261646765732e6769747465722e696d2f547572666a732f747572662e737667" alt="Gitter chat"&gt;&lt;/a&gt;
&lt;a href="https://raw.githubusercontent.com/Turfjs/turf/master/#backers"&gt;&lt;img src="https://camo.githubusercontent.com/4820a81b3e50e5be824178f69dfef2c0dc13edcee2c9aacffa4b38a713f35e28/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f747572662f6261636b6572732f62616467652e737667" alt="Backers on Open Collective"&gt;&lt;/a&gt;
&lt;a href="https://raw.githubusercontent.com/Turfjs/turf/master/#sponsors"&gt;&lt;img src="https://camo.githubusercontent.com/6bc97a7a0ce5d2e59640c7e2bcbcf44397a8c1046b09dee227c2980414c80e80/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f747572662f73706f6e736f72732f62616467652e737667" alt="Sponsors on Open Collective"&gt;&lt;/a&gt; &lt;a href="https://coveralls.io/github/Turfjs/turf" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fd9c63939140c23b9706f4cc307eb7b70c1465fdcf08616eb8a88a722b51e318/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f547572666a732f747572662f62616467652e737667" alt="Coverage Status"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;A modular geospatial engine written in JavaScript&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://turfjs.org/" rel="nofollow"&gt;turfjs.org&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://turfjs.org" rel="nofollow"&gt;Turf&lt;/a&gt; is a &lt;a href="https://en.wikipedia.org/wiki/JavaScript_library" rel="nofollow"&gt;JavaScript library&lt;/a&gt; for &lt;a href="http://en.wikipedia.org/wiki/Spatial_analysis" rel="nofollow"&gt;spatial analysis&lt;/a&gt;. It includes traditional spatial operations, helper functions for creating &lt;a href="http://geojson.org" rel="nofollow"&gt;GeoJSON&lt;/a&gt; data, and data classification and statistics tools. Turf can be added to your website as a client-side plugin, or you can &lt;a href="https://www.npmjs.com/package/@turf/turf" rel="nofollow"&gt;run Turf server-side&lt;/a&gt; with &lt;a href="http://nodejs.org/" rel="nofollow"&gt;Node.js&lt;/a&gt; (see below).&lt;/p&gt;
&lt;h2&gt;
Installation&lt;/h2&gt;
&lt;h3&gt;
In Node.js&lt;/h3&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;npm install @turf/turf&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
In browser&lt;/h3&gt;
&lt;p&gt;Download the &lt;a href="https://npmcdn.com/@turf/turf/turf.min.js" rel="nofollow"&gt;minified file&lt;/a&gt;, and include it in a script tag. This will expose a global variable named &lt;code&gt;turf&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-text-html-basic position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt; &lt;span class="pl-c1"&gt;src&lt;/span&gt;="&lt;span class="pl-s"&gt;turf.min.js&lt;/span&gt;" &lt;span class="pl-c1"&gt;charset&lt;/span&gt;="&lt;span class="pl-s"&gt;utf-8&lt;/span&gt;"&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;You can also include it directly from a CDN:&lt;/p&gt;
&lt;div class="highlight highlight-text-html-basic position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt; &lt;span class="pl-c1"&gt;src&lt;/span&gt;="&lt;span class="pl-s"&gt;https://cdn.jsdelivr.net/npm/@turf/turf@5/turf.min.js&lt;/span&gt;"&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;You can create light-weight turf builds with only the functions you need using the &lt;a href="https://turfjs-builder.herokuapp.com/" rel="nofollow"&gt;turfjs-builder UI&lt;/a&gt; or using browserify as described below.&lt;/p&gt;
&lt;h3&gt;
Browserify&lt;/h3&gt;
&lt;p&gt;All of Turf's functions can also be installed as separate…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/Turfjs/turf"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#2-fiddly"&gt;
  &lt;/a&gt;
  2. Fiddly
&lt;/h3&gt;

&lt;p&gt;Create beautiful and simple HTML pages from your Readme.md files&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/SaraVieira"&gt;
        SaraVieira
      &lt;/a&gt; / &lt;a href="https://github.com/SaraVieira/fiddly"&gt;
        fiddly
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Create beautiful and simple HTML pages from your Readme.md files
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Fiddly&lt;/h1&gt;
&lt;p&gt;Create beautiful and simple HTML pages from your Readme.md files&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
🛠 No config&lt;/li&gt;
&lt;li&gt;
👩‍💻 Code Highlighting&lt;/li&gt;
&lt;li&gt;
💯Emoji Support&lt;/li&gt;
&lt;li&gt;
✨Creates Static files (only JS is prism)&lt;/li&gt;
&lt;li&gt;
🏳️‍🌈 Pretty Pages&lt;/li&gt;
&lt;li&gt;
🦄 Customizable&lt;/li&gt;
&lt;li&gt;
🖼 Image minification&lt;/li&gt;
&lt;li&gt;
🇳🇱 &lt;a href="https://codesandbox.io" rel="nofollow"&gt;CodeSandbox&lt;/a&gt; and iframe Support&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;yarn add fiddly --dev&lt;/pre&gt;

&lt;/div&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;npm install fiddly --save-dev&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
Usage&lt;/h2&gt;
&lt;div class="highlight highlight-source-json position-relative js-code-highlight"&gt;
&lt;pre&gt;{
  &lt;span class="pl-ii"&gt;...&lt;/span&gt;
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;scripts&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: {
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;build:demo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fiddly&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-ii"&gt;....&lt;/span&gt;
  }&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Deploy automatically to netlify 🎉&lt;/p&gt;
&lt;p&gt;&lt;a href="https://fiddly.netlify.com/" rel="nofollow"&gt;This Readme on Netlify&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://5c2678b67b891f18dc5a2a42--fiddly.netlify.com/" rel="nofollow"&gt;This Readme with white theme&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Usage with npx&lt;/h2&gt;

&lt;p&gt;If you just want a quick fancy HTML page from the Readme but don't care about running this in continuous deployment you can also use &lt;code&gt;npx&lt;/code&gt; to run it as a one time thing.&lt;/p&gt;

&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;  npx fiddly&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;By running this in the root folder you will also get a public folder&lt;/p&gt;
&lt;h2&gt;
Options&lt;/h2&gt;
&lt;p&gt;Options are placed in a &lt;code&gt;.fiddly.config.json&lt;/code&gt; or as a &lt;code&gt;fiddly&lt;/code&gt; key in &lt;code&gt;package.json&lt;/code&gt;
It…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/SaraVieira/fiddly"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#3-nprogress"&gt;
  &lt;/a&gt;
  3. NProgress
&lt;/h3&gt;

&lt;p&gt;Slim progress bars for Ajax'y applications. Inspired by Google, YouTube, and Medium.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/rstacruz"&gt;
        rstacruz
      &lt;/a&gt; / &lt;a href="https://github.com/rstacruz/nprogress"&gt;
        nprogress
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      For slim progress bars like on YouTube, Medium, etc
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
NProgress&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://travis-ci.org/rstacruz/nprogress" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fbbd8aa167107abb168c706aaf05ed49a11c7626df86c9ef14bc5a54a84f3164/68747470733a2f2f6170692e7472617669732d63692e6f72672f727374616372757a2f6e70726f67726573732e7376673f6272616e63683d6d6173746572" alt="Status"&gt;&lt;/a&gt;
&lt;a href="https://npmjs.org/package/nprogress" title="View this project on npm" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ddfa3c074c8716aef6d11989bea37f9a7f605b44360c38cc5c3261512d5770db/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f6e70726f67726573732e706e67" alt="npm version"&gt;&lt;/a&gt;
&lt;a href="https://www.jsdelivr.com/package/npm/nprogress" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/da8fc892663ec8663c88fb6c8f53fbf8623c743626ab12c24cea909b658fe1a6/68747470733a2f2f646174612e6a7364656c6976722e636f6d2f76312f7061636b6167652f6e706d2f6e70726f67726573732f62616467653f7374796c653d726f756e646564" alt="jsDelivr Hits"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Minimalist progress bar&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Slim progress bars for Ajax'y applications. Inspired by Google, YouTube, and
Medium.&lt;/p&gt;
&lt;h2&gt;
Installation&lt;/h2&gt;
&lt;p&gt;Add &lt;a href="http://ricostacruz.com/nprogress/nprogress.js" rel="nofollow"&gt;nprogress.js&lt;/a&gt; and &lt;a href="http://ricostacruz.com/nprogress/nprogress.css" rel="nofollow"&gt;nprogress.css&lt;/a&gt; to your project.&lt;/p&gt;
&lt;div class="highlight highlight-text-html-basic position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt; &lt;span class="pl-c1"&gt;src&lt;/span&gt;='&lt;span class="pl-s"&gt;nprogress.js&lt;/span&gt;'&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;link&lt;/span&gt; &lt;span class="pl-c1"&gt;rel&lt;/span&gt;='&lt;span class="pl-s"&gt;stylesheet&lt;/span&gt;' &lt;span class="pl-c1"&gt;href&lt;/span&gt;='&lt;span class="pl-s"&gt;nprogress.css&lt;/span&gt;'/&amp;gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;NProgress is available via &lt;a href="http://bower.io/search/?q=nprogress" rel="nofollow"&gt;bower&lt;/a&gt; and &lt;a href="https://www.npmjs.org/package/nprogress" rel="nofollow"&gt;npm&lt;/a&gt;.&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;&lt;pre&gt;&lt;code&gt;$ npm install --save nprogress
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Also available via &lt;a href="https://unpkg.com/" rel="nofollow"&gt;unpkg&lt;/a&gt; CDN:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://unpkg.com/nprogress@0.2.0/nprogress.js" rel="nofollow"&gt;https://unpkg.com/nprogress@0.2.0/nprogress.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://unpkg.com/nprogress@0.2.0/nprogress.css" rel="nofollow"&gt;https://unpkg.com/nprogress@0.2.0/nprogress.css&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Basic usage&lt;/h2&gt;
&lt;p&gt;Simply call &lt;code&gt;start()&lt;/code&gt; and &lt;code&gt;done()&lt;/code&gt; to control the progress bar.&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-v"&gt;NProgress&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;start&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-v"&gt;NProgress&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;done&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
Turbolinks (version 5+)&lt;/h3&gt;
&lt;p&gt;Ensure you're using Turbolinks 5+, and use
this: (explained &lt;a href="https://github.com/rstacruz/nprogress/issues/8#issuecomment-239107109"&gt;here&lt;/a&gt;)&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-en"&gt;$&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-smi"&gt;document&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;on&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;'turbolinks:click'&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
  &lt;span class="pl-v"&gt;NProgress&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;start&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-en"&gt;$&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-smi"&gt;document&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;on&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;'turbolinks:render'&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
  &lt;span class="pl-v"&gt;NProgress&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;done&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
  &lt;span class="pl-v"&gt;NProgress&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;remove&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;/pre&gt;…
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/rstacruz/nprogress"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#4-usecookieconsent"&gt;
  &lt;/a&gt;
  4. useCookieConsent
&lt;/h3&gt;

&lt;p&gt;React hook for managing GDPR cookie consent state.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/bring-shrubbery"&gt;
        bring-shrubbery
      &lt;/a&gt; / &lt;a href="https://github.com/bring-shrubbery/use-cookie-consent"&gt;
        use-cookie-consent
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      React hook for managing GDPR cookie consent state.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
useCookieConsent&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/bring-shrubbery/use-cookie-consent/actions"&gt;&lt;img src="https://camo.githubusercontent.com/2e8db2950ebbaa4c52932de72530557c8f95b9ebda5417f41576920b93bd2795/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636865636b732d7374617475732f6272696e672d7368727562626572792f7573652d636f6f6b69652d636f6e73656e742f6d61696e" alt="Build"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/package/use-cookie-consent" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/124294edb71471859a37fca2109b3b6c05b1779ffa2785094b03f82ba49984fa/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f7573652d636f6f6b69652d636f6e73656e74" alt="NPM Version"&gt;&lt;/a&gt;
&lt;a href="https://github.com/bring-shrubbery/use-cookie-consent/actions/workflows/codecov.yml"&gt;&lt;img src="https://camo.githubusercontent.com/0151c5f814fa82dc3a090d866e891407613e3313a7b59eb896e3ca849de0c8aa/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f6769746875622f6272696e672d7368727562626572792f7573652d636f6f6b69652d636f6e73656e74" alt="Codecov"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/4c496ab1725b1413dea319081642affd385457e634edf92d081ec41b44a18a8d/68747470733a2f2f696d672e736869656c64732e696f2f746f6b65692f6c696e65732f6769746875622f6272696e672d7368727562626572792f7573652d636f6f6b69652d636f6e73656e74"&gt;&lt;img src="https://camo.githubusercontent.com/4c496ab1725b1413dea319081642affd385457e634edf92d081ec41b44a18a8d/68747470733a2f2f696d672e736869656c64732e696f2f746f6b65692f6c696e65732f6769746875622f6272696e672d7368727562626572792f7573652d636f6f6b69652d636f6e73656e74" alt="Lines of code"&gt;&lt;/a&gt;
&lt;a href="https://github.com/bring-shrubbery/use-cookie-consent/blob/main/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/c667eb2be71741eea29870111aa4a3f6ab0f89e92faf833efccad72bc33ea1c7/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f6c2f7573652d636f6f6b69652d636f6e73656e74" alt="License"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Disclaimer&lt;/h2&gt;
&lt;p&gt;Although code in this repository is oriented to satisfy GDPR cookie rules, neither author nor contributors to this repository will be responsible for any non-compliance with the law. Please make sure that this repository provides all the functionality to satisfy requirements for your project. If you find something that can be improved please create an issue or send a PR with your fixes!&lt;/p&gt;
&lt;h2&gt;
Description&lt;/h2&gt;
&lt;p&gt;This React hook is made to make managing cookie consent state easier in a the React hook world. It is following &lt;a href="https://gdpr.eu/cookies" rel="nofollow"&gt;this&lt;/a&gt; GDPR cookie guide which describes what you need for GDPR compliance. This hook mainly focuses handling the consent state of the different types of cookies as described in "Types of Cookies" in &lt;a href="https://gdpr.eu/cookies" rel="nofollow"&gt;this&lt;/a&gt; page. Summarizing the mentioned document, there are three different ways to classify cookies:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Cookie Duration
&lt;ul&gt;
&lt;li&gt;Session cookies&lt;/li&gt;
&lt;li&gt;Persistent cookies&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Cookie Provenance
&lt;ul&gt;
&lt;li&gt;First-party cookies&lt;/li&gt;
&lt;li&gt;Third-party cookies&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Cookie Purpose
&lt;ul&gt;
&lt;li&gt;Strictly necessary…&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/bring-shrubbery/use-cookie-consent"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#5-ant-design-charts"&gt;
  &lt;/a&gt;
  5. Ant Design Charts
&lt;/h3&gt;

&lt;p&gt;A React chart library, based on G2Plot, G6, X6, L7.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ant-design"&gt;
        ant-design
      &lt;/a&gt; / &lt;a href="https://github.com/ant-design/ant-design-charts"&gt;
        ant-design-charts
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A React Chart Library
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
@ant-design/charts&lt;/h1&gt;
&lt;div&gt;
&lt;p&gt;A React chart library, based on &lt;a href="https://github.com/antvis/G2Plot"&gt;G2Plot&lt;/a&gt;, G6, X6, L7.&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/ant-design/ant-design-charts/workflows/build/badge.svg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BQW5S0fg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/ant-design/ant-design-charts/workflows/build/badge.svg" alt="build"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/d78e9da98cf0f57d423a94840e40393167e43168348cf6e84e430559e99f099f/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f40616e742d64657369676e2f636861727473"&gt;&lt;img src="https://camo.githubusercontent.com/d78e9da98cf0f57d423a94840e40393167e43168348cf6e84e430559e99f099f/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f40616e742d64657369676e2f636861727473" alt="npm"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/fb7dea3bc39a7a28e5c964c81c16835e2a1fd53ef3e91f336ce55d320b40f7ae/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f646d2f40616e742d64657369676e2f636861727473"&gt;&lt;img src="https://camo.githubusercontent.com/fb7dea3bc39a7a28e5c964c81c16835e2a1fd53ef3e91f336ce55d320b40f7ae/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f646d2f40616e742d64657369676e2f636861727473" alt="npm"&gt;&lt;/a&gt;
&lt;a href="https://github.com/ant-design/ant-design-charts/stargazers"&gt;&lt;img src="https://camo.githubusercontent.com/c1f2f6f62972d8bf937a23d17e771883ff1febd9dc2111eec507a0533fd1dc42/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f616e742d64657369676e2f616e742d64657369676e2d636861727473" alt="GitHub stars"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/package/@ant-design/charts" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1537fa50d2c088b604796aa9a95641cc3b59ea0268fbd7088c425932fa892080/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f6c2f40616e742d64657369676e2f6368617274732e737667" alt="npm License"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
  &lt;a href="https://charts.ant.design/" rel="nofollow"&gt;Website&lt;/a&gt; •
  &lt;a href="https://charts.ant.design/guide/start" rel="nofollow"&gt;Quick Start&lt;/a&gt; •
  &lt;a href="https://charts.ant.design/demos/global" rel="nofollow"&gt;Gallery&lt;/a&gt; •
  &lt;a href="https://charts.ant.design/guide/faq" rel="nofollow"&gt;FAQ&lt;/a&gt; •
  &lt;a href="https://www.yuque.com/antv/g2plot" rel="nofollow"&gt;Blog&lt;/a&gt;
&lt;/p&gt;


&lt;/div&gt;

&lt;div&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/ad0ffdf5a5acfbec6a08839254e55359b21daa692734b6e1194cd3d5272d283f/68747470733a2f2f67772e616c697061796f626a656374732e636f6d2f6d646e2f726d735f6433313464642f616674732f696d672f412a73587172527245774652514141414141414141414141426b4152516e4151"&gt;&lt;img src="https://camo.githubusercontent.com/ad0ffdf5a5acfbec6a08839254e55359b21daa692734b6e1194cd3d5272d283f/68747470733a2f2f67772e616c697061796f626a656374732e636f6d2f6d646e2f726d735f6433313464642f616674732f696d672f412a73587172527245774652514141414141414141414141426b4152516e4151" width="800"&gt;&lt;/a&gt;
&lt;/div&gt;

&lt;h2&gt;
✨ Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Easy to use&lt;/li&gt;
&lt;li&gt;TypeScript&lt;/li&gt;
&lt;li&gt;Pretty &amp;amp; Lightweight&lt;/li&gt;
&lt;li&gt;Responsive&lt;/li&gt;
&lt;li&gt;Storytelling&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
📦 Installation&lt;/h2&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;$ npm install @ant-design/charts&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
🔨 Usage&lt;/h2&gt;
&lt;div class="highlight highlight-source-tsx position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;React&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'react'&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-smi"&gt;Line&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'@ant-design/charts'&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-smi"&gt;Page&lt;/span&gt;: &lt;span class="pl-smi"&gt;React&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-smi"&gt;FC&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt; &lt;span class="pl-c1"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;data&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-kos"&gt;[&lt;/span&gt;
    &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-c1"&gt;year&lt;/span&gt;: &lt;span class="pl-s"&gt;'1991'&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-c1"&gt;value&lt;/span&gt;: &lt;span class="pl-c1"&gt;3&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
    &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-c1"&gt;year&lt;/span&gt;: &lt;span class="pl-s"&gt;'1992'&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-c1"&gt;value&lt;/span&gt;: &lt;span class="pl-c1"&gt;4&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
    &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-c1"&gt;year&lt;/span&gt;: &lt;span class="pl-s"&gt;'1993'&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-c1"&gt;value&lt;/span&gt;: &lt;span class="pl-c1"&gt;3.5&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
    &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-c1"&gt;year&lt;/span&gt;: &lt;span class="pl-s"&gt;'1994'&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-c1"&gt;value&lt;/span&gt;: &lt;span class="pl-c1"&gt;5&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
    &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-c1"&gt;year&lt;/span&gt;: &lt;span class="pl-s"&gt;'1995'&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-c1"&gt;value&lt;/span&gt;: &lt;span class="pl-c1"&gt;4.9&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
    &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-c1"&gt;year&lt;/span&gt;: &lt;span class="pl-s"&gt;'1996'&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-c1"&gt;value&lt;/span&gt;: &lt;span class="pl-c1"&gt;6&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
    &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-c1"&gt;year&lt;/span&gt;: &lt;span class="pl-s"&gt;'1997'&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-c1"&gt;value&lt;/span&gt;: &lt;span class="pl-c1"&gt;7&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
    &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-c1"&gt;year&lt;/span&gt;: &lt;span class="pl-s"&gt;'1998'&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-c1"&gt;value&lt;/span&gt;: &lt;span class="pl-c1"&gt;9&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
    &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-c1"&gt;year&lt;/span&gt;&lt;/pre&gt;…
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/ant-design/ant-design-charts"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#6-practical-cryptography-for-developers"&gt;
  &lt;/a&gt;
  6. Practical Cryptography for Developers
&lt;/h3&gt;

&lt;p&gt;A modern practical book about cryptography for developers with code examples, covering core concepts like: hashes, MAC codes, symmetric ciphers and authenticated encryption.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/nakov"&gt;
        nakov
      &lt;/a&gt; / &lt;a href="https://github.com/nakov/Practical-Cryptography-for-Developers-Book"&gt;
        Practical-Cryptography-for-Developers-Book
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Practical Cryptography for Developers: Hashes, MAC, Key Derivation, DHKE, Symmetric and Asymmetric Ciphers, Public Key Cryptosystems, RSA, Elliptic Curves, ECC, secp256k1, ECDH, ECIES, Digital Signatures, ECDSA, EdDSA
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Welcome&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt;: this book is &lt;strong&gt;not finished&lt;/strong&gt;! I am still working on some of the chapters. Once it is completed, I will publish it as PDF and EPUB. Be patient.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://cryptobook.nakov.com" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8DEXAjSJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/nakov/Practical-Cryptography-for-Developers-Book/master/.gitbook/assets/practical-cryptography-for-developers-book-nakov-front-cover.png" alt="Practical Cryptography for Developers - Free Book by Svetlin Nakov - front cover"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A modern &lt;strong&gt;practical book&lt;/strong&gt; about &lt;strong&gt;cryptography for developers&lt;/strong&gt; with code examples, covering core concepts like: &lt;strong&gt;hashes&lt;/strong&gt; (like SHA-3 and BLAKE2), &lt;strong&gt;MAC codes&lt;/strong&gt; (like HMAC and GMAC), &lt;strong&gt;key derivation functions&lt;/strong&gt; (like Scrypt, Argon2), &lt;strong&gt;key agreement protocols&lt;/strong&gt; (like DHKE, ECDH), &lt;strong&gt;symmetric ciphers&lt;/strong&gt; (like AES and ChaCha20, cipher block modes, authenticated encryption, AEAD, AES-GCM, ChaCha20-Poly1305), &lt;strong&gt;asymmetric ciphers&lt;/strong&gt; and &lt;strong&gt;public-key cryptosystems&lt;/strong&gt; (RSA, ECC, ECIES), &lt;strong&gt;elliptic curve cryptography&lt;/strong&gt; (ECC, secp256k1, curve25519), &lt;strong&gt;digital signatures&lt;/strong&gt; (ECDSA and EdDSA), &lt;strong&gt;secure random numbers&lt;/strong&gt; (PRNG, CSRNG) and &lt;strong&gt;quantum-safe cryptography&lt;/strong&gt;, along with crypto &lt;strong&gt;libraries&lt;/strong&gt; and developer tools, with a lots of &lt;strong&gt;code examples&lt;/strong&gt; in Python and other languages.&lt;/p&gt;
&lt;p&gt;Author: &lt;strong&gt;Svetlin Nakov&lt;/strong&gt;, PhD - &lt;a href="https://nakov.com" rel="nofollow"&gt;https://nakov.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Contributors: Milen Stefanov, Marina Shideroff&lt;/p&gt;
&lt;p&gt;ISBN: &lt;strong&gt;978-619-00-0870-5&lt;/strong&gt; (9786190008705)&lt;/p&gt;
&lt;p&gt;This book is free and…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/nakov/Practical-Cryptography-for-Developers-Book"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#7-jsbooks"&gt;
  &lt;/a&gt;
  7. JSbooks
&lt;/h3&gt;

&lt;p&gt;JSbooks is a showcase of the bests free ebooks about Javascript.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/revolunet"&gt;
        revolunet
      &lt;/a&gt; / &lt;a href="https://github.com/revolunet/JSbooks"&gt;
        JSbooks
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Directory of free JavaScript ebooks
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
JSbooks&lt;/h1&gt;
&lt;p&gt;JSbooks is a showcase of the bests free ebooks about Javascript.&lt;/p&gt;
&lt;p&gt;Find here the best publications about your favourite programming language without spending any bucks !&lt;/p&gt;
&lt;p&gt;Check it out : &lt;a href="http://jsbooks.revolunet.com" rel="nofollow"&gt;http://jsbooks.revolunet.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We also have a python version : &lt;a href="http://pythonbooks.revolunet.com" rel="nofollow"&gt;http://pythonbooks.revolunet.com&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
HOW TO ADD YOUR PUBLICATION&lt;/h2&gt;
&lt;p&gt;If you find a nice ebook about Javascript, feel free to fork JSbooks and add it in a few steps :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Paste the informations into the JSON file.&lt;/li&gt;
&lt;li&gt;Please include a .png file for the cover : less than 100Ko.&lt;/li&gt;
&lt;li&gt;Make a pull request.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Alternatively, you can send us an email with book infos : &lt;a href="https://raw.githubusercontent.com/revolunet/JSbooks/master/mailto:JSbooks@revolunet.com"&gt;JSbooks@revolunet.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks per advance !&lt;/p&gt;
&lt;h2&gt;
HISTORY&lt;/h2&gt;
&lt;p&gt;Historically, this project was supposed to be an experimental Apple 'NewsStand' application.&lt;/p&gt;
&lt;p&gt;After some weeks of work, we discovered that having a functionnal application wasn't enough.&lt;/p&gt;
&lt;p&gt;You also have to follow various Apple guidelines and use some Apple libraries to be 'NewsStand' compatible.&lt;/p&gt;
&lt;p&gt;So…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/revolunet/JSbooks"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#8-regexgen"&gt;
  &lt;/a&gt;
  8. regexgen
&lt;/h3&gt;

&lt;p&gt;Generate regular expressions that match a set of strings. &lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/devongovett"&gt;
        devongovett
      &lt;/a&gt; / &lt;a href="https://github.com/devongovett/regexgen"&gt;
        regexgen
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Generate regular expressions that match a set of strings
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
regexgen&lt;/h1&gt;
&lt;p&gt;Generates regular expressions that match a set of strings.&lt;/p&gt;
&lt;h2&gt;
Installation&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;regexgen&lt;/code&gt; can be installed using &lt;a href="https://npmjs.com" rel="nofollow"&gt;npm&lt;/a&gt;:&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;&lt;pre&gt;&lt;code&gt;npm install regexgen
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;
Example&lt;/h2&gt;
&lt;p&gt;The simplest use is to simply pass an array of strings to &lt;code&gt;regexgen&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;regexgen&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;require&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;'regexgen'&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-s1"&gt;regexgen&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;[&lt;/span&gt;&lt;span class="pl-s"&gt;'foobar'&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s"&gt;'foobaz'&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s"&gt;'foozap'&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s"&gt;'fooza'&lt;/span&gt;&lt;span class="pl-kos"&gt;]&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt; &lt;span class="pl-c"&gt;// =&amp;gt; /foo(?:zap?|ba[rz])/&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;You can also use the &lt;code&gt;Trie&lt;/code&gt; class directly:&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;Trie&lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;require&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;'regexgen'&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;

&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-s1"&gt;t&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-v"&gt;Trie&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-s1"&gt;t&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;add&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;'foobar'&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-s1"&gt;t&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;add&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;'foobaz'&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;

&lt;span class="pl-s1"&gt;t&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;toRegExp&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt; &lt;span class="pl-c"&gt;// =&amp;gt; /fooba[rz]/&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
CLI&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;regexgen&lt;/code&gt; also has a simple CLI to generate regexes using inputs from the command line.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;$ regexgen
Usage: regexgen [-gimuy] string1 string2 string3...&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;The optional first parameter is the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp" rel="nofollow"&gt;flags&lt;/a&gt; to add
to the regex (e.g. &lt;code&gt;-i&lt;/code&gt; for a case insensitive match).&lt;/p&gt;…&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/devongovett/regexgen"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#9-utopia"&gt;
  &lt;/a&gt;
  9. Utopia
&lt;/h3&gt;

&lt;p&gt;Utopia is an integrated design and development environment for React. It uses React code as the source of truth, and lets you make real time changes to components by editing it and using a suite of design tools. &lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/concrete-utopia"&gt;
        concrete-utopia
      &lt;/a&gt; / &lt;a href="https://github.com/concrete-utopia/utopia"&gt;
        utopia
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Design ❤️ Code
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/concrete-utopia/utopia/workflows/Build%20And%20Release%20On%20Push%20To%20Master/badge.svg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Nm-9xiY2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/concrete-utopia/utopia/workflows/Build%2520And%2520Release%2520On%2520Push%2520To%2520Master/badge.svg" alt=""&gt;&lt;/a&gt;
&lt;a href="https://raw.githubusercontent.com/concrete-utopia/utopia/master/readme.md/#contributors"&gt;&lt;img src="https://camo.githubusercontent.com/40dc18e16ec30ce10cf8c594dcd7e284d7e5a9ecdc8a6121d5c0898d0b67b7ea/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f616c6c5f636f6e7472696275746f72732d31332d6f72616e67652e7376673f7374796c653d666c61742d737175617265" alt="All Contributors"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
Welcome to Utopia 🏝
&lt;/h1&gt;
&lt;p&gt;Utopia is an integrated design and development environment for React. It uses React code as the source of truth, and lets you make real time changes to components by editing it and using a suite of design tools. It's early software, but you can &lt;a href="https://utopia.app/project" rel="nofollow"&gt;try it today&lt;/a&gt;, look at an &lt;a href="https://utopia.app/p/36ae27be-welcome-to-utopia/" rel="nofollow"&gt;example project&lt;/a&gt;, or read about it on our &lt;a href="https://utopia.app/blog" rel="nofollow"&gt;blog&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://utopia.app/project" rel="nofollow"&gt;Try Utopia Now!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/2226774/93580752-7b7b8e80-f9a0-11ea-8663-39683a53df2e.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G65ARD1N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/2226774/93580752-7b7b8e80-f9a0-11ea-8663-39683a53df2e.png" alt="screenshot of utopia"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://utopia.app/project" rel="nofollow"&gt;Start the editor&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
For contributors: Installing Utopia on your machine&lt;/h1&gt;
&lt;p&gt;Utopia is browser-based. To run it locally, clone the repo, and then set up the server and webpack by following these instructions.&lt;/p&gt;
&lt;p&gt;⚠️ We're looking into M1 related issues for some folks, but have it running successfully on three machine&lt;/p&gt;
&lt;h2&gt;
Prerequisites&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;If using Windows&lt;/strong&gt; you'll first need to set up the &lt;a href="https://docs.microsoft.com/en-us/windows/wsl/install-win10" rel="nofollow"&gt;Windows Subsystem for Linux (wsl)&lt;/a&gt;. All following steps and commands will assume you are using the wsl.&lt;/li&gt;
&lt;li&gt;On &lt;strong&gt;macOS&lt;/strong&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/concrete-utopia/utopia"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#10-web3react"&gt;
  &lt;/a&gt;
  10. web3-react
&lt;/h3&gt;

&lt;p&gt;A simple, maximally extensible, dependency minimized framework for building modern Ethereum dApps&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/NoahZinsmeister"&gt;
        NoahZinsmeister
      &lt;/a&gt; / &lt;a href="https://github.com/NoahZinsmeister/web3-react"&gt;
        web3-react
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      🧰 A simple, maximally extensible, dependency minimized framework for building modern Ethereum dApps
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
&lt;code&gt;web3-react&lt;/code&gt; 🧰
&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;A simple, maximally extensible, dependency minimized framework for building modern &lt;a href="https://ethereum.org/beginners/" rel="nofollow"&gt;Ethereum dApps&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://lerna.js.org/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3bc63f921dd60bac6d91aa900ef570c928b2aa4c2124ed23647e8fe9d2232853/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6d61696e7461696e6564253230776974682d6c65726e612d6363303066662e737667" alt="lerna"&gt;&lt;/a&gt;
&lt;a href="https://github.com/prettier/prettier"&gt;&lt;img src="https://camo.githubusercontent.com/c0486311910977832125780d8ef9ac681614939bd1b9328678007156a4648896/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64655f7374796c652d70726574746965722d6666363962342e7376673f7374796c653d666c61742d737175617265" alt="code style: prettier"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/NoahZinsmeister/web3-react/actions"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gOiUCkIQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/NoahZinsmeister/web3-react/workflows/CI/badge.svg" alt="Actions Status"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Packages&lt;/th&gt;
&lt;th&gt;
&lt;code&gt;@latest&lt;/code&gt; Version&lt;/th&gt;
&lt;th&gt;Size&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
🏠 &lt;strong&gt;Core&lt;/strong&gt;
&lt;/td&gt;



&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;@web3-react/core&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/@web3-react/core/v/latest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9209b4dd3dfaaf2471cc216f05357fdf9e9091554ad67547ff84eb7b59d31d4a/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f40776562332d72656163742f636f72652f6c61746573742e737667" alt="npm version"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://bundlephobia.com/result?p=@web3-react/core@latest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1a4f14219f3814eab596c6014d52e9fd6dc588a3dee5475dae37cd4913d161e0/68747470733a2f2f696d672e736869656c64732e696f2f62756e646c6570686f6269612f6d696e7a69702f40776562332d72656163742f636f72652f6c61746573742e737667" alt="minzip"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;
&lt;a href="https://reactjs.org/" rel="nofollow"&gt;React&lt;/a&gt; Interface&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
🔌 &lt;strong&gt;Connectors&lt;/strong&gt;
&lt;/td&gt;



&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;Browser Extension/dApp Browser&lt;/em&gt;&lt;/td&gt;



&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;@web3-react/injected-connector&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/@web3-react/injected-connector/v/latest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6c681718be5d0349f93caa8ff87d28119cac1e6ffbccdf5b733303a8e2c52b2f/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f40776562332d72656163742f696e6a65637465642d636f6e6e6563746f722f6c61746573742e737667" alt="npm version"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://bundlephobia.com/result?p=@web3-react/injected-connector@latest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/952711e4a1d8a2be99942ccb793882a6666376e7e61950a752a445acaa10254f/68747470733a2f2f696d672e736869656c64732e696f2f62756e646c6570686f6269612f6d696e7a69702f40776562332d72656163742f696e6a65637465642d636f6e6e6563746f722f6c61746573742e737667" alt="minzip"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;
&lt;a href="https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1193.md"&gt;Injected&lt;/a&gt; Connector&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;Remote API&lt;/em&gt;&lt;/td&gt;



&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;@web3-react/network-connector&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/@web3-react/network-connector/v/latest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/233ded51bd8a2f223f387aa8518dc40103d7e63cd0d260ce48ff5a927c9dd680/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f40776562332d72656163742f6e6574776f726b2d636f6e6e6563746f722f6c61746573742e737667" alt="npm version"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://bundlephobia.com/result?p=@web3-react/network-connector@latest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/64c966d9ac95db2aeb59ec71d2b4206cd9c24d4ed19bd6606b6b471bbc130764/68747470733a2f2f696d672e736869656c64732e696f2f62756e646c6570686f6269612f6d696e7a69702f40776562332d72656163742f6e6574776f726b2d636f6e6e6563746f722f6c61746573742e737667" alt="minzip"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;
&lt;a href="https://github.com/ethereum/wiki/wiki/JSON-RPC"&gt;RPC&lt;/a&gt; Connector&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;QR Code&lt;/em&gt;&lt;/td&gt;



&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;@web3-react/walletconnect-connector&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/@web3-react/walletconnect-connector/v/latest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6ec432bf092bb2b751ea372e276f0cece853cd741004b1b4b330e8e3b26004fb/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f40776562332d72656163742f77616c6c6574636f6e6e6563742d636f6e6e6563746f722f6c61746573742e737667" alt="npm version"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://bundlephobia.com/result?p=@web3-react/walletconnect-connector@latest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/96b478a244fbe09289de2bae55737393d79a5a728062f4338d5459b6515711b5/68747470733a2f2f696d672e736869656c64732e696f2f62756e646c6570686f6269612f6d696e7a69702f40776562332d72656163742f77616c6c6574636f6e6e6563742d636f6e6e6563746f722f6c61746573742e737667" alt="minzip"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;
&lt;a href="https://walletconnect.org/" rel="nofollow"&gt;WalletConnect&lt;/a&gt; Connector&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;@web3-react/walletlink-connector&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/@web3-react/walletlink-connector/v/latest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fb4186dd714c1e3beca9d7c18dc31be5590475ad567b976ab1d02f43efeb4b02/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f40776562332d72656163742f77616c6c65746c696e6b2d636f6e6e6563746f722f6c61746573742e737667" alt="npm version"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://bundlephobia.com/result?p=@web3-react/walletlink-connector@latest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/660abfe57ca33ab4dc0facdb07b3dad66344b9d15d55c29d65ab7bca30567655/68747470733a2f2f696d672e736869656c64732e696f2f62756e646c6570686f6269612f6d696e7a69702f40776562332d72656163742f77616c6c65746c696e6b2d636f6e6e6563746f722f6c61746573742e737667" alt="minzip"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;
&lt;a href="https://www.walletlink.org/#/" rel="nofollow"&gt;WalletLink&lt;/a&gt; Connector&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;Hardware&lt;/em&gt;&lt;/td&gt;



&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;@web3-react/ledger-connector&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/@web3-react/ledger-connector/v/latest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/31f232fddfefcfca476f0e604142286174bade542a7a1afead5944ff36778785/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f40776562332d72656163742f6c65646765722d636f6e6e6563746f722f6c61746573742e737667" alt="npm version"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://bundlephobia.com/result?p=@web3-react/ledger-connector@latest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c689e6b76fcf734197ee38350f15bb045ff993406d1ae8fc95da6c69d1e4d9ea/68747470733a2f2f696d672e736869656c64732e696f2f62756e646c6570686f6269612f6d696e7a69702f40776562332d72656163742f6c65646765722d636f6e6e6563746f722f6c61746573742e737667" alt="minzip"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;
&lt;a href="https://www.ledger.com/" rel="nofollow"&gt;Ledger&lt;/a&gt; Connector&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;@web3-react/trezor-connector&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/@web3-react/trezor-connector/v/latest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/06a9966dbc1d30de7eff66f9b0d01dc526836d6cbe77f8c7ed45961c9c7e0161/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f40776562332d72656163742f7472657a6f722d636f6e6e6563746f722f6c61746573742e737667" alt="npm version"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://bundlephobia.com/result?p=@web3-react/trezor-connector@latest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/567868b1fa558dae4c4fd09d38f797a5f0e9488d5d22ca7a9ddbd772239c6787/68747470733a2f2f696d672e736869656c64732e696f2f62756e646c6570686f6269612f6d696e7a69702f40776562332d72656163742f7472657a6f722d636f6e6e6563746f722f6c61746573742e737667" alt="minzip"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;
&lt;a href="https://trezor.io/" rel="nofollow"&gt;Trezor&lt;/a&gt; Connector&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;@web3-react/lattice-connector&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/@web3-react/lattice-connector/v/latest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8fbaefef080ae2960e4aa97b6aa0e8a5010ee46f1b9153216c0204821c17fe05/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f40776562332d72656163742f6c6174746963652d636f6e6e6563746f722f6c61746573742e737667" alt="npm version"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://bundlephobia.com/result?p=@web3-react/lattice-connector@latest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7ba32f4b2928bb04d31173ba37ca9aa9326d94d55db72e15f8c4afe20d28db89/68747470733a2f2f696d672e736869656c64732e696f2f62756e646c6570686f6269612f6d696e7a69702f40776562332d72656163742f6c6174746963652d636f6e6e6563746f722f6c61746573742e737667" alt="minzip"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;
&lt;a href="https://gridplus.io/" rel="nofollow"&gt;Lattice&lt;/a&gt; Connector&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;Native&lt;/em&gt;&lt;/td&gt;



&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;@web3-react/frame-connector&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/@web3-react/frame-connector/v/latest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/86948d2f21c5037e144f1d89c7ea3f478487c2b54492047ff508e530b741cd2f/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f40776562332d72656163742f6672616d652d636f6e6e6563746f722f6c61746573742e737667" alt="npm version"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://bundlephobia.com/result?p=@web3-react/frame-connector@latest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3db69151c10d9f6eb81224160010fe6eabeee1c91efe367450f53c290a73c685/68747470733a2f2f696d672e736869656c64732e696f2f62756e646c6570686f6269612f6d696e7a69702f40776562332d72656163742f6672616d652d636f6e6e6563746f722f6c61746573742e737667" alt="minzip"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;
&lt;a href="https://frame.sh/" rel="nofollow"&gt;Frame&lt;/a&gt; Connector&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;Hosted&lt;/em&gt;&lt;/td&gt;



&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;@web3-react/authereum-connector&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/@web3-react/authereum-connector/v/latest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fe8607f5f2200f2e40b33b928251a23b9f97c0555f0b5e9e113a8c99566602b5/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f40776562332d72656163742f61757468657265756d2d636f6e6e6563746f722f6c61746573742e737667" alt="npm version"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://bundlephobia.com/result?p=@web3-react/authereum-connector@latest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3c52e73b0d5f63e051833a9eb3f1ad196940752d903f5ff8b5bd0d6223032242/68747470733a2f2f696d672e736869656c64732e696f2f62756e646c6570686f6269612f6d696e7a69702f40776562332d72656163742f61757468657265756d2d636f6e6e6563746f722f6c61746573742e737667" alt="minzip"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;
&lt;a href="https://authereum.org/" rel="nofollow"&gt;Authereum&lt;/a&gt; Connector&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;@web3-react/fortmatic-connector&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/@web3-react/fortmatic-connector/v/latest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c9b0649a0c7fba3a06414e89fa3ab8aeefbc2a4caa7551e113e91c780785f851/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f40776562332d72656163742f666f72746d617469632d636f6e6e6563746f722f6c61746573742e737667" alt="npm version"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://bundlephobia.com/result?p=@web3-react/fortmatic-connector@latest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1bf26d9feb3515e3c75c06229ec31b4408c1067c4aab23661f12d22711fc76fa/68747470733a2f2f696d672e736869656c64732e696f2f62756e646c6570686f6269612f6d696e7a69702f40776562332d72656163742f666f72746d617469632d636f6e6e6563746f722f6c61746573742e737667" alt="minzip"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;
&lt;a href="https://fortmatic.com/" rel="nofollow"&gt;Fortmatic&lt;/a&gt; Connector&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;@web3-react/portis-connector&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/@web3-react/portis-connector/v/latest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/71d502714f8ca9195126e2a9dd2f0c44303078df54f8eface5b738d17054ab4d/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f40776562332d72656163742f706f727469732d636f6e6e6563746f722f6c61746573742e737667" alt="npm version"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://bundlephobia.com/result?p=@web3-react/portis-connector@latest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9aa395daab49725464066116e793a0cb168771603da331cb50b887a3ad569d2d/68747470733a2f2f696d672e736869656c64732e696f2f62756e646c6570686f6269612f6d696e7a69702f40776562332d72656163742f706f727469732d636f6e6e6563746f722f6c61746573742e737667" alt="minzip"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;
&lt;a href="https://www.portis.io/" rel="nofollow"&gt;Portis&lt;/a&gt; Connector&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;@web3-react/squarelink-connector&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/@web3-react/squarelink-connector/v/latest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e56c89f84a3c46f74d40e14813f08479ce6cc37d17b8b3c7289b47b18ea3955e/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f40776562332d72656163742f7371756172656c696e6b2d636f6e6e6563746f722f6c61746573742e737667" alt="npm version"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://bundlephobia.com/result?p=@web3-react/squarelink-connector@latest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/08dd367b6265337c4195950e77a5f59709027296472d72440ec5c88f2ba15136/68747470733a2f2f696d672e736869656c64732e696f2f62756e646c6570686f6269612f6d696e7a69702f40776562332d72656163742f7371756172656c696e6b2d636f6e6e6563746f722f6c61746573742e737667" alt="minzip"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;
&lt;a href="https://squarelink.com/" rel="nofollow"&gt;Squarelink&lt;/a&gt; Connector&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;@web3-react/torus-connector&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/@web3-react/torus-connector/v/latest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6b567b4587d71f7d08520f0fa7494f6989e3f245c44bc7fad0e704f30c867267/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f40776562332d72656163742f746f7275732d636f6e6e6563746f722f6c61746573742e737667" alt="npm version"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://bundlephobia.com/result?p=@web3-react/torus-connector@latest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3d953508f0e804301aa37254c388b089584a6b78afa810674ab4101d28b14091/68747470733a2f2f696d672e736869656c64732e696f2f62756e646c6570686f6269612f6d696e7a69702f40776562332d72656163742f746f7275732d636f6e6e6563746f722f6c61746573742e737667" alt="minzip"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;
&lt;a href="https://tor.us/" rel="nofollow"&gt;Torus&lt;/a&gt; Connector&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
🐉 &lt;strong&gt;Low-Level&lt;/strong&gt;
&lt;/td&gt;



&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;@web3-react/abstract-connector&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/@web3-react/abstract-connector/v/latest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b5435fd3d3ab31f176f12f12d4726d6e2e6117288b378ae583dfba5270e6c9af/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f40776562332d72656163742f61627374726163742d636f6e6e6563746f722f6c61746573742e737667" alt="npm version"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://bundlephobia.com/result?p=@web3-react/abstract-connector@latest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ab17f271d965423dc72b98eadd7359e90a93117a27077bf55354adcf76daadcf/68747470733a2f2f696d672e736869656c64732e696f2f62756e646c6570686f6269612f6d696e7a69702f40776562332d72656163742f61627374726163742d636f6e6e6563746f722f6c61746573742e737667" alt="minzip"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Shared Connector Class&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;@web3-react/types&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/@web3-react/types/v/latest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/88d8464c991d0462712d7a2aef2200934649e62882aa7cdfaa89bf9806a1b83e/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f40776562332d72656163742f74797065732f6c61746573742e737667" alt="npm version"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://bundlephobia.com/result?p=@web3-react/types@latest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9c531fa82e78d6eab81bddca3b69be661b7c5e57eed0a952aa6c1c651a0af5a0/68747470733a2f2f696d672e736869656c64732e696f2f62756e646c6570686f6269612f6d696e7a69702f40776562332d72656163742f74797065732f6c61746573742e737667" alt="minzip"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Shared &lt;a href="https://www.typescriptlang.org/" rel="nofollow"&gt;TypeScript&lt;/a&gt; Types&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;h2&gt;
Quickstart&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codesandbox.io/s/github/NoahZinsmeister/web3-react/tree/v6/example?fontsize=14&amp;amp;hidenavigation=1&amp;amp;theme=dark" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/90808661433696bc57dce8d4ad732307b5cec6270e6b846f114dcd7ee7f9458a/68747470733a2f2f636f646573616e64626f782e696f2f7374617469632f696d672f706c61792d636f646573616e64626f782e737667" alt="Edit web3-react-example"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
&lt;a href="https://raw.githubusercontent.com/NoahZinsmeister/web3-react/v6/docs"&gt;Documentation&lt;/a&gt;
&lt;/h2&gt;

&lt;h2&gt;
Projects using &lt;code&gt;web3-react&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Open a PR to add your project to the list!&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Uniswap/uniswap-frontend"&gt;Uniswap.exchange&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/NoahZinsmeister/hypertext"&gt;hypertext.finance&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/aragon/use-wallet"&gt;useWallet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.terminal.co/web3-react-integration/" rel="nofollow"&gt;Terminal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/metacartel/everest-web-app"&gt;Everest&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/conlan/nft-scribe"&gt;NFT Scribe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/conlan/compound-liquidator"&gt;Compound Liquidator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wildcards-world/ui"&gt;wildcards.world&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/OutpostProtocol/outpost-app"&gt;Outpost&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://async.art" rel="nofollow"&gt;Async Art&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://union.finance" rel="nofollow"&gt;Union&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://app.aave.com" rel="nofollow"&gt;Aave&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://launchpad.ethereum.org/" rel="nofollow"&gt;Eth2 Launchpad&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ethblock.art/" rel="nofollow"&gt;EthBlockArt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
Related Efforts&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/web3modal/web3modal"&gt;Web3Modal&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
Local Development&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Clone repo&lt;br&gt;
&lt;code&gt;git clone https://github.com/NoahZinsmeister/web3-react.git&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install top-level dependencies&lt;br&gt;
&lt;code&gt;yarn&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install sub-dependencies&lt;br&gt;
&lt;code&gt;yarn bootstrap&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Build and watch for changes&lt;br&gt;
&lt;code&gt;yarn start&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;
&lt;br&gt;
&lt;br&gt;
  &lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/NoahZinsmeister/web3-react"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;





&lt;h3&gt;
  &lt;a href="#stargazing"&gt;
  &lt;/a&gt;
  Stargazing 📈
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#top-risers-over-last-7-days"&gt;
  &lt;/a&gt;
  Top risers over last 7 days
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/public-apis/public-apis"&gt;Public APIs&lt;/a&gt; +3,021 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/awesome-selfhosted/awesome-selfhosted"&gt;Awesome-Selfhosted&lt;/a&gt; +1,104 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/snowpackjs/astro"&gt;Astro&lt;/a&gt; +977 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jwasham/coding-interview-university"&gt;Coding Interview University&lt;/a&gt; +967 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/discordjs/discord.js"&gt;Discord.js&lt;/a&gt; +754 stars&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-growth-over-last-7-days"&gt;
  &lt;/a&gt;
  Top growth(%) over last 7 days
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/junhoyeo/use-color"&gt;use-color&lt;/a&gt; +37%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/adiwajshing/Baileys"&gt;Baileys&lt;/a&gt; +35%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/snowpackjs/astro"&gt;Astro&lt;/a&gt; +21%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/seanprashad/leetcode-patterns"&gt;Leetcode Patterns&lt;/a&gt; +20%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/unadlib/fronts"&gt;Fronts&lt;/a&gt; +19%&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-risers-over-last-30-days"&gt;
  &lt;/a&gt;
  Top risers over last 30 days
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/public-apis/public-apis"&gt;Public APIs&lt;/a&gt; +9,308 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/trimstray/the-book-of-secret-knowledge"&gt;The Book Of Secret Knowledge&lt;/a&gt; +4,982 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/microsoft/Web-Dev-For-Beginners"&gt;Web Development for Beginners&lt;/a&gt; +4,316 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/trekhleb/javascript-algorithms"&gt;JavaScript Algorithms&lt;/a&gt; +4,018 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/30-seconds/30-seconds-of-code"&gt;30 seconds of code&lt;/a&gt; +3,599 stars&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-growth-over-last-30-days"&gt;
  &lt;/a&gt;
  Top growth(%) over last 30 days
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/ossf/scorecard"&gt;Security Scorecards&lt;/a&gt; +179%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/JoshuaKGoldberg/TypeStat"&gt;TypeState&lt;/a&gt; +152%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/NoQuarterTeam/boilerplate"&gt;Fullstack Boilerplate&lt;/a&gt; +146%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/SigNoz/signoz"&gt;SigNoz&lt;/a&gt; +106%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/snowpackjs/astro"&gt;Astro&lt;/a&gt; +93%&lt;/li&gt;
&lt;/ol&gt;




&lt;p&gt;Trending Projects is available as a weekly newsletter please sign up at &lt;a href="https://www.iainfreestone.com"&gt;www.iainfreestone.com&lt;/a&gt; to ensure you never miss an issue.&lt;/p&gt;

&lt;p&gt;If you enjoyed this article you can &lt;a href="https://twitter.com/iain_freestone"&gt;follow me&lt;/a&gt; on Twitter where I regularly post bite size tips relating to HTML, CSS and JavaScript.&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Top Skill needed as a Javascript Developer </title>
      <author>Rocky</author>
      <pubDate>Fri, 23 Jul 2021 13:52:44 +0000</pubDate>
      <link>https://dev.to/codelivly/top-skill-needed-as-a-javascript-developer-554n</link>
      <guid>https://dev.to/codelivly/top-skill-needed-as-a-javascript-developer-554n</guid>
      <description>&lt;p&gt; No doubt, JavaScript development is a booming profile. Today there are around currently 12.1 million JavaScript developers in the market worldwide and drawing a salary of $110,673 annually, which equals $47.49 per hour. &lt;/p&gt;

&lt;p&gt;These figures are clearly proving the prominence of JavaScript development. The profile is at its peak, and we have stepped into a programmer's world. Those looking to make a career have a bright future.&lt;/p&gt;
&lt;p&gt;Though, what I have observed among the students is that their focus is only on their degree. They are not working on their skills. I am not considering them wrong, but I want to clarify that it's not enough; it will not make them the top-notch JavaScript developer they wish to be.&lt;/p&gt;

&lt;p&gt;But don't be sad, I have a perfect guide for you. In this blog, I have listed the top skills you need to become a JavaScript developer. &lt;/p&gt;
&lt;p&gt;&lt;b&gt;Read More&lt;/b&gt;: &lt;span&gt;&lt;a href="https://bit.ly/3eQDOWj"&gt;Top Skill required as a Javascript Developer&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;




</description>
      <category>javascript</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Modifying Array Data with Indices</title>
      <author>Swarnali Roy</author>
      <pubDate>Fri, 23 Jul 2021 13:11:41 +0000</pubDate>
      <link>https://dev.to/swarnaliroy94/modifying-array-data-with-indices-3d71</link>
      <guid>https://dev.to/swarnaliroy94/modifying-array-data-with-indices-3d71</guid>
      <description>&lt;p&gt;In this &lt;em&gt;episode&lt;/em&gt; of the series, let's learn &lt;strong&gt;How to Modify Array Data with Indices&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;In addition to accessing array data with index, we can also modify them with the same &lt;code&gt;square bracket []&lt;/code&gt; notation. We can &lt;code&gt;set an index&lt;/code&gt; with a &lt;code&gt;new value&lt;/code&gt; replacing the &lt;code&gt;existing one&lt;/code&gt;, with the same notation.&lt;/p&gt;

&lt;p&gt;For Example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let numArr = [50,60,70];
numArr[1] = 20;
console.log(numArr[1]); //output: 20
console.log(numArr); //output: [50,20,70]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above example, the value of the &lt;em&gt;index 1&lt;/em&gt; is assigned to the value &lt;em&gt;20&lt;/em&gt;. If we see the console, we will notice that index 1 is now holding the &lt;em&gt;new value 20&lt;/em&gt;, replacing the &lt;em&gt;initial value 60&lt;/em&gt;. The &lt;em&gt;numArr&lt;/em&gt; is holding the value [50,20,70]&lt;/p&gt;

&lt;p&gt;Let's see another easy example to modify the same array. In this example, we will &lt;code&gt;add a new index&lt;/code&gt; with &lt;code&gt;a new value&lt;/code&gt; in the existing array , with the same notation. The new index with new value will be added at &lt;code&gt;the end&lt;/code&gt; of the array.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let numArr = [50,60,70];
numArr[3] = 80;
console.log(numArr[3]); //output: 80
console.log(numArr); //output: [50,60,70,80]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can notice that, the array is initialized with &lt;code&gt;three indices&lt;/code&gt; 0,1 and 2 holding the value, 50,60 and 70 respectively. Here, &lt;em&gt;numArr[3]&lt;/em&gt; simply added a &lt;code&gt;fourth index&lt;/code&gt; to the array assigned with a value of 80. Now if we see the console, the &lt;em&gt;numArr&lt;/em&gt; is holding the value [50,60,70,80], adding the &lt;em&gt;fourth index&lt;/em&gt; with the value 80.&lt;/p&gt;

&lt;p&gt;In the next episode, we will discuss about other methods to modify an array by &lt;em&gt;adding&lt;/em&gt; or &lt;em&gt;removing&lt;/em&gt; it's elements.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>codenewbie</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Set up TalkBack like a pro! In just a few minutes!</title>
      <author>Ammadeo</author>
      <pubDate>Fri, 23 Jul 2021 13:10:26 +0000</pubDate>
      <link>https://dev.to/ammadeo/set-up-talkback-like-a-pro-in-just-a-few-minutes-1foo</link>
      <guid>https://dev.to/ammadeo/set-up-talkback-like-a-pro-in-just-a-few-minutes-1foo</guid>
      <description>&lt;p&gt;You'll learn how to set up TalkBack for the best developer experience.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#make-sure-you-have-talkback"&gt;
  &lt;/a&gt;
  Make sure You have TalkBack
&lt;/h1&gt;

&lt;p&gt;TalkBack is part of the &lt;a href="https://play.google.com/store/apps/details?id=com.google.android.marvin.talkback"&gt;Android Accessibility Suite&lt;/a&gt;. You can check if You have it installed in the GooglePlay store.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#lets-turn-it-on"&gt;
  &lt;/a&gt;
  Let's turn it on
&lt;/h1&gt;

&lt;p&gt;Go to your phone settings and search for &lt;em&gt;TalkBack&lt;/em&gt;. Turn TalkBack on by toggling the Accessibility switch.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xWLAVDBG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xv7hx7faqf4jg7kf50xo.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xWLAVDBG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xv7hx7faqf4jg7kf50xo.jpg" alt="TalkBack is off"&gt;&lt;/a&gt;&lt;/p&gt;
TalkBack is off screenshot



&lt;p&gt; &lt;br&gt;
Allow TalkBack all of those permissions. Don't worry. TalkBack is easy to turn on and off by holding &lt;strong&gt;volume up&lt;/strong&gt; and &lt;strong&gt;down&lt;/strong&gt; buttons at the same time for a few seconds.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GKTG4Nzb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cl8w2bpsdga2b2o4xtvv.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GKTG4Nzb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cl8w2bpsdga2b2o4xtvv.jpg" alt="Allow TalkBack to control the screen"&gt;&lt;/a&gt;&lt;/p&gt;
Permissions popup screenshot



&lt;p&gt; &lt;br&gt;
Now TalkBack will show You a quick interactive tutorial. Feel free to do it. After that, we'll get to the next step.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#set-it-up-like-a-pro"&gt;
  &lt;/a&gt;
  Set it up like a pro
&lt;/h1&gt;

&lt;p&gt;Firstly You can now turn TalkBack off, so it will be a bit easier. You can also disable &lt;em&gt;TalkBack watermark&lt;/em&gt; — it only says how to disable TalkBack with volume buttons shortcut. Now go to TalkBack's settings by pressing the button on the bottom of the screen.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sKSf8UKS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hf3ubocarfuq5dlvxpc2.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sKSf8UKS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hf3ubocarfuq5dlvxpc2.jpg" alt="Settings button"&gt;&lt;/a&gt;&lt;/p&gt;
Settings button is on the bottom of the screen



&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#audio-settings"&gt;
  &lt;/a&gt;
  Audio settings
&lt;/h2&gt;

&lt;p&gt;From here, You can change how TalkBack will sound.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zc-nEz3a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7b2rg1uo6ax6fnuzi2u9.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zc-nEz3a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7b2rg1uo6ax6fnuzi2u9.jpg" alt="TalkBack settings"&gt;&lt;/a&gt;&lt;/p&gt;
TalkBack settings screenshot



&lt;p&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#firstly-go-to-texttospeech-settings"&gt;
  &lt;/a&gt;
  Firstly go to &lt;em&gt;Text-to-speech&lt;/em&gt; settings.
&lt;/h3&gt;

&lt;p&gt;You can choose Your preferred text-to-speech engine. If You use the Google Text-to-speech engine, You can go to its settings and &lt;em&gt;install voice data&lt;/em&gt; for languages You usually use. You can also change to Your favourite voice for every language from there. Additionally, if You develop multilingual websites changing &lt;em&gt;Language detection&lt;/em&gt; to &lt;em&gt;Aggressive&lt;/em&gt; might improve audio quality.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--toPf6whS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hfrs1806g9b5wg64gjza.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--toPf6whS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hfrs1806g9b5wg64gjza.jpg" alt="Google Text-to-speech engine settings"&gt;&lt;/a&gt;&lt;/p&gt;
Install voice data button is on the top of the screen



&lt;p&gt; &lt;br&gt;
Go back to TalkBack audio settings.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#disable-speak-passwords"&gt;
  &lt;/a&gt;
  Disable &lt;em&gt;Speak passwords&lt;/em&gt;
&lt;/h3&gt;

&lt;p&gt;You probably want to disable that so You don't accidentally give away your password.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#controls-settings"&gt;
  &lt;/a&gt;
  Controls settings
&lt;/h2&gt;

&lt;p&gt;From here, You can change how You'll interact with TalkBack.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#customise-gestures"&gt;
  &lt;/a&gt;
  Customise gestures
&lt;/h3&gt;

&lt;p&gt;Gestures are the most crucial part of TalkBack. They allow You to perform all TalkBack actions. We'll go deeper into them in the next part of this series.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#scroll-to-1-finger-backandforth-section"&gt;
  &lt;/a&gt;
  Scroll to &lt;em&gt;1 finger back-and-forth&lt;/em&gt; section.
&lt;/h4&gt;

&lt;p&gt;Change &lt;em&gt;Swipe left then right&lt;/em&gt; and &lt;em&gt;swipe right then left&lt;/em&gt; to &lt;em&gt;Read from next item&lt;/em&gt;. This shortcut will help You quickly read the whole article without the hassle of &lt;em&gt;swiping right&lt;/em&gt; for every next paragraph.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8Un1NxwF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u6p8scdfuqaegx0kxcjt.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8Un1NxwF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u6p8scdfuqaegx0kxcjt.jpg" alt="Gestures settings"&gt;&lt;/a&gt;&lt;/p&gt;
1 finger back-and-forth section in Customise gestures



&lt;p&gt; &lt;br&gt;
Go back to TalkBack controls settings.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#customise-menus"&gt;
  &lt;/a&gt;
  Customise menus
&lt;/h3&gt;

&lt;p&gt;If You don't use TalkBack as Your main user interface, You may remove some redundant features from quick menus.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#customise-talkback-menu"&gt;
  &lt;/a&gt;
  Customise TalkBack menu
&lt;/h4&gt;

&lt;p&gt;Here You can change what will be in the TalkBack menu popup.&lt;br&gt;
Disable &lt;em&gt;read from next item&lt;/em&gt; — We've already added it as a &lt;em&gt;swipe left then right&lt;/em&gt; gesture.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3chkkpOe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wyky247xc5ivy84xj5im.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3chkkpOe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wyky247xc5ivy84xj5im.jpg" alt="Customise menus settings"&gt;&lt;/a&gt;&lt;/p&gt;
Reading section in Customise TalkBack menu



&lt;p&gt; &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#customise-reading-controls"&gt;
  &lt;/a&gt;
  Customise reading controls
&lt;/h4&gt;

&lt;p&gt;Reading controls change what happens on &lt;em&gt;swipe down&lt;/em&gt; and &lt;em&gt;swipe up&lt;/em&gt; gestures.&lt;br&gt;
&lt;strong&gt;Disable&lt;/strong&gt; reading by &lt;em&gt;Characters&lt;/em&gt;, &lt;em&gt;Words&lt;/em&gt; and &lt;em&gt;Lines&lt;/em&gt; — They're a bit redundant if You use TalkBack with Your screen turn on.&lt;br&gt;
&lt;strong&gt;Enable&lt;/strong&gt; reading by &lt;em&gt;Landmarks&lt;/em&gt; for testing a website's landmarks. Landmarks are sections of the website. Think of them as HTML5 &lt;code&gt;header&lt;/code&gt;, &lt;code&gt;main&lt;/code&gt;, &lt;code&gt;footer&lt;/code&gt; etc. They'll help You quickly jump to any part of the website. You can learn more about them from &lt;a href="https://web.dev/use-landmarks/"&gt;Use landmarks&lt;/a&gt; by Rob Dodson.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OMyT_N_T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pgo1y8md1ax13jmrqcij.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OMyT_N_T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pgo1y8md1ax13jmrqcij.jpg" alt="Reading controls settings"&gt;&lt;/a&gt;&lt;/p&gt;
Reading section in Customise reading controls



&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#open-advanced-settings-to-find-developer-settings"&gt;
  &lt;/a&gt;
  Open Advanced settings to find Developer settings
&lt;/h2&gt;

&lt;p&gt;Inside of Developer settings, You'll find some helpful debugging tools.&lt;br&gt;
&lt;strong&gt;Enable&lt;/strong&gt; &lt;em&gt;Display speech output&lt;/em&gt; and &lt;em&gt;Echo recognised speech&lt;/em&gt;. Displaying speech output will help You debug the accessibility tree of an application. Echo recognised speech will tell You about problems with Your voice command.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qfcXvRpn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2fpm64uhh32t19m0ctok.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qfcXvRpn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2fpm64uhh32t19m0ctok.jpg" alt="Developer settings"&gt;&lt;/a&gt;&lt;/p&gt;
Developer settings



&lt;p&gt; &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#whats-next"&gt;
  &lt;/a&gt;
  What's next?
&lt;/h1&gt;

&lt;p&gt;That's all set up! Let's learn how to use it in the next part of this series. &lt;strong&gt;Available soon.&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>a11y</category>
      <category>webdev</category>
      <category>android</category>
    </item>
    <item>
      <title>Launching support for ClickHouse as storage backend for SigNoz</title>
      <author>Ankit Anand ✨</author>
      <pubDate>Fri, 23 Jul 2021 13:04:54 +0000</pubDate>
      <link>https://dev.to/signoz/launching-support-for-clickhouse-as-storage-backend-for-signoz-1fk9</link>
      <guid>https://dev.to/signoz/launching-support-for-clickhouse-as-storage-backend-for-signoz-1fk9</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-signoz"&gt;
  &lt;/a&gt;
  What is SigNoz?
&lt;/h2&gt;

&lt;p&gt;SigNoz is an open-source alternative to DataDog, New Relic etc. It is a full-stack application monitoring and observability platform, which can be used to track both metrics and traces. Link to our GitHub repo 👇&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/SigNoz"&gt;
        SigNoz
      &lt;/a&gt; / &lt;a href="https://github.com/SigNoz/signoz"&gt;
        signoz
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      SigNoz helps developers monitor their applications &amp;amp; troubleshoot problems, an open-source alternative to DataDog, NewRelic, etc. 🔥 🖥
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
  &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/de24bcecd48c187d949b173f240555967f58a5cd424760a73f7c06f791b892ec/68747470733a2f2f7265732e636c6f7564696e6172792e636f6d2f646376336570696e782f696d6167652f75706c6f61642f76313631383930343435302f7369676e6f7a2d696d616765732f4c6f676f4769746875625f7369676662752e737667"&gt;&lt;img src="https://camo.githubusercontent.com/de24bcecd48c187d949b173f240555967f58a5cd424760a73f7c06f791b892ec/68747470733a2f2f7265732e636c6f7564696e6172792e636f6d2f646376336570696e782f696d6167652f75706c6f61642f76313631383930343435302f7369676e6f7a2d696d616765732f4c6f676f4769746875625f7369676662752e737667" alt="SigNoz-logo" width="240"&gt;&lt;/a&gt;
  &lt;/p&gt;
&lt;p&gt;Monitor your applications and troubleshoot problems in your deployed applications, an open-source alternative to DataDog, New Relic, etc.&lt;/p&gt;
&lt;p&gt;
    &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/8bb1977f745ee8c8107f711ecfa901421a9b929f308fd431f7211508f8ddbd87/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d627269676874677265656e"&gt;&lt;img alt="License" src="https://camo.githubusercontent.com/8bb1977f745ee8c8107f711ecfa901421a9b929f308fd431f7211508f8ddbd87/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d627269676874677265656e"&gt;&lt;/a&gt;
    &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/4d7505d3f801c171da56fe726501ab9411207d82358bf10341021397fa3fe48e/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f7369676e6f7a2f66726f6e74656e643f6c6162656c3d446f776e6c6f616473"&gt;&lt;img alt="Downloads" src="https://camo.githubusercontent.com/4d7505d3f801c171da56fe726501ab9411207d82358bf10341021397fa3fe48e/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f7369676e6f7a2f66726f6e74656e643f6c6162656c3d446f776e6c6f616473"&gt;&lt;/a&gt;
    &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/cd33e47de8e2feb970abdef5de51f59e6c007958faf6c188c56dd4c4208e58a2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f7369676e6f7a2f7369676e6f7a"&gt;&lt;img alt="GitHub issues" src="https://camo.githubusercontent.com/cd33e47de8e2feb970abdef5de51f59e6c007958faf6c188c56dd4c4208e58a2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f7369676e6f7a2f7369676e6f7a"&gt;&lt;/a&gt; 
    &lt;a href="https://twitter.com/intent/tweet?text=Monitor%20your%20applications%20and%20troubleshoot%20problems%20with%20SigNoz,%20an%20open-source%20alternative%20to%20DataDog,%20NewRelic.&amp;amp;url=https://signoz.io/&amp;amp;via=SigNozHQ&amp;amp;hashtags=opensource,signoz,observability" rel="nofollow"&gt; 
        &lt;img alt="tweet" src="https://camo.githubusercontent.com/90bc908826728c0e4261acfff5619fd732c7be2b2a00624fce6363c9a3623c90/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c2f687474702f736869656c64732e696f2e7376673f7374796c653d736f6369616c"&gt; &lt;/a&gt; 
&lt;/p&gt;

&lt;p&gt;SigNoz helps developers monitor applications and troubleshoot problems in their deployed applications. SigNoz uses distributed tracing to gain visibility into your software stack.&lt;/p&gt;

&lt;p&gt;👉 You can see metrics like p99 latency, error rates for your services, external API calls and individual end points.&lt;/p&gt;

&lt;p&gt;👉 You can find the root cause of the problem by going to the exact traces which are causing the problem and see detailed flamegraphs of individual request traces.&lt;/p&gt;

&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/bc8a12f92d8313d86b619bd96c558b458b30f24cdb847b42e4db383aa83238a3/68747470733a2f2f7369676e6f7a2d7075626c69632e73332e75732d656173742d322e616d617a6f6e6177732e636f6d2f7369676e6f7a5f6865726f5f6769746875622e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/bc8a12f92d8313d86b619bd96c558b458b30f24cdb847b42e4db383aa83238a3/68747470733a2f2f7369676e6f7a2d7075626c69632e73332e75732d656173742d322e616d617a6f6e6177732e636f6d2f7369676e6f7a5f6865726f5f6769746875622e706e67" alt="SigNoz Feature"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/d86b90eea3d56848776f64d2e8188152844713a3079c158954a3f4a49f2fb120/68747470733a2f2f7369676e6f7a2d7075626c69632e73332e75732d656173742d322e616d617a6f6e6177732e636f6d2f436f6e747269627574696e672e737667"&gt;&lt;img src="https://camo.githubusercontent.com/d86b90eea3d56848776f64d2e8188152844713a3079c158954a3f4a49f2fb120/68747470733a2f2f7369676e6f7a2d7075626c69632e73332e75732d656173742d322e616d617a6f6e6177732e636f6d2f436f6e747269627574696e672e737667" width="50px"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
Join our Slack community&lt;/h2&gt;
&lt;p&gt;Come say Hi to us on &lt;a href="https://join.slack.com/t/signoz-community/shared_invite/zt-lrjknbbp-J_mI13rlw8pGF4EWBnorJA" rel="nofollow"&gt;Slack&lt;/a&gt; 👋&lt;/p&gt;

&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/61f3487967fd24ab9d66eddfc48ab2b822ef4f1c300ac8db16bf27f70f9f94af/68747470733a2f2f7369676e6f7a2d7075626c69632e73332e75732d656173742d322e616d617a6f6e6177732e636f6d2f46656174757265732e737667"&gt;&lt;img src="https://camo.githubusercontent.com/61f3487967fd24ab9d66eddfc48ab2b822ef4f1c300ac8db16bf27f70f9f94af/68747470733a2f2f7369676e6f7a2d7075626c69632e73332e75732d656173742d322e616d617a6f6e6177732e636f6d2f46656174757265732e737667" width="50px"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Features:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Application overview metrics like RPS, 50th/90th/99th Percentile latencies, and Error Rate&lt;/li&gt;
&lt;li&gt;Slowest endpoints in your application&lt;/li&gt;
&lt;li&gt;See exact request trace to figure out issues in downstream services, slow DB queries, call to 3rd party services like payment gateways, etc&lt;/li&gt;
&lt;li&gt;Filter traces by service name, operation, latency, error…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/SigNoz/signoz"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#launching-support-for-clickhouse"&gt;
  &lt;/a&gt;
  Launching support for ClickHouse
&lt;/h2&gt;

&lt;p&gt;In our latest release v0.3.2 , we launched support for ClickHouse as storage backend for SigNoz. ClickHouse is a column-oriented database management system (DBMS) for online analytical processing of queries (OLAP). Now when you install SigNoz, you will have the option to choose between ClickHouse or Kafka + Druid as a database system.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8gV6_QFn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4b1u2ay7hmo4mrmz39tb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8gV6_QFn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4b1u2ay7hmo4mrmz39tb.png" alt="You can install SigNoz through with commands at your terminal. When you install SigNoz, you will get the option to choose between ClickHouse or Kafka+Druid as a storage backend"&gt;&lt;/a&gt;Users can choose between ClickHouse or Kafka + Druid for their storage system of choice while installing SigNoz&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;In this article, let's dig deeper into why we decided to introduce support for Clickhouse as a database storage system and how our users can benefit from it.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#community-demands-for-clickhouse"&gt;
  &lt;/a&gt;
  Community demands for ClickHouse
&lt;/h2&gt;

&lt;p&gt;As an open-source software, we build what our community wants. We listened to &lt;a href="https://github.com/SigNoz/signoz/issues/22"&gt;demands&lt;/a&gt; from our community for supporting ClickHouse as a storage backend.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R6zzOSP9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2y29wbpmspj8kynkjxvv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R6zzOSP9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2y29wbpmspj8kynkjxvv.png" alt="Picture of the github issue a user raised for supporting ClickHouse"&gt;&lt;/a&gt;Community request for supporting Clickhouse as a storage backend for SigNoz&lt;/p&gt;

&lt;p&gt;As a storage backend, ClickHouse is less resource-intensive than using Kafka + Druid. It makes getting started with SigNoz much quicker, and users can now try out SigNoz on their local machine easily as the entire setup takes &lt;strong&gt;less than 1.5GB of memory space.&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#why-clickhouse-for-signoz"&gt;
  &lt;/a&gt;
  Why Clickhouse for SigNoz?
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#improvements-in-installation-time"&gt;
  &lt;/a&gt;
  Improvements in installation time
&lt;/h3&gt;

&lt;p&gt;One of the key focus area of our engineering team is to make trying out SigNoz as simple as possible. Extending support for ClickHouse as a database is part of one such initiative.&lt;/p&gt;

&lt;p&gt;As we are self-hosted and open source, you can try SigNoz out in a matter of a few minutes to understand how it can help you with performance monitoring.&lt;/p&gt;

&lt;p&gt;You can get started with SigNoz with just three commands at your terminal:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git clone https://github.com/SigNoz/signoz.git
$ cd signoz/deploy/
$ ./install.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;You can then proceed with either ClickHouse or Kafka+Druid installation set up. On a macOS 2017 model with 8 GB RAM, following were the installation times in seconds for the two set ups:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ClickHouse set up: 93.99 seconds&lt;/li&gt;
&lt;li&gt;Kafka + Druid set up: 269.25 seconds&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So in just over a minute, you will be able to access our dashboard with the Clickhouse set up on your local host.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cptTlpsR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/01sspm4ldf5oiqtidyjj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cptTlpsR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/01sspm4ldf5oiqtidyjj.png" alt="SigNoz dashboard"&gt;&lt;/a&gt;Track metrics &amp;amp; use traces to monitor app performance with SigNoz&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#improvements-in-memory-usage"&gt;
  &lt;/a&gt;
  Improvements in memory usage
&lt;/h3&gt;

&lt;p&gt;Let's analyse the performance of ClickHouse and Kafka+Druid set ups with &lt;code&gt;docker stats&lt;/code&gt; command. The &lt;code&gt;docker stats&lt;/code&gt; command displays a live data stream with CPU, memory usage, memory limit, block I/O, and network IO metrics for all the running containers.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--65xX5-hm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6hacjb1wgk5py3503lpv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--65xX5-hm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6hacjb1wgk5py3503lpv.png" alt="Memory usage with ClickHouse installation with docker stats command"&gt;&lt;/a&gt;Memory usage stats snapshot with ClickHouse installation&lt;/p&gt;

&lt;p&gt;Total memory usage with ClickHouse set up: 340.391 MiB&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VDuQS3cL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3d9ogc702du4gnxc4dzu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VDuQS3cL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3d9ogc702du4gnxc4dzu.png" alt="Memory usage with kafka+druid installation with docker stats command"&gt;&lt;/a&gt;Memory usage stats snapshot with kafka + Druid installation&lt;/p&gt;

&lt;p&gt;Total memory usage with Kafka + Druid set up: 2,896.82 MiB&lt;/p&gt;

&lt;p&gt;As we can see, the ClickHouse set up uses about &lt;strong&gt;8.5x less memory&lt;/strong&gt; than the Kafka + Druid set up for getting started with SigNoz. It makes trying out SigNoz much easier for developers even on their local machine.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#signoz-architecture-with-clickhouse"&gt;
  &lt;/a&gt;
  SigNoz architecture with ClickHouse
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9dKOPYWS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s1lmyo7noo90bbi8331p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9dKOPYWS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s1lmyo7noo90bbi8331p.png" alt="SigNoz architecture with ClickHouse"&gt;&lt;/a&gt;SigNoz Architecture with ClickHouse as storage backend&lt;/p&gt;

&lt;p&gt;With ClickHouse as the storage backend, OpenTelemetry collector directly writes to ClickHouse. The query service makes queries to ClickHouse to fetch relevant data points and display it on the frontend UI.&lt;/p&gt;

&lt;p&gt;We will also be soon bringing support for long term storage from ClickHouse to S3.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#upcoming-features-in-the-clickhouse-set-up"&gt;
  &lt;/a&gt;
  Upcoming features in the ClickHouse set up
&lt;/h2&gt;

&lt;p&gt;We will soon be enabling custom metrics in SigNoz with the ClickHouse  storage backend. Metrics represent the health of your system over time and are a crucial component of observability. SigNoz uses OpenTelemetry for instrumentation and you can measure metrics like p99, p50 latency, etc.&lt;/p&gt;

&lt;p&gt;And with custom metrics you will be able to define more specific metrics to gauge the health of your system.&lt;/p&gt;

&lt;p&gt;As an open-source monitoring tool, we want to provide our users flexibility in setting up monitoring for their services. Monitoring data is often critical and private to a company, and as such, users should have flexibility in choosing a database that their teams feel most comfortable with. Providing support for different storage backends is an effort in this direction.&lt;/p&gt;

&lt;p&gt;SigNoz is also self-hosted, so you don't need to send your critical data to SaaS vendors outside your cloud. Visit our GitHub repo, and try out SigNoz in a matter of minutes.&lt;/p&gt;

&lt;p&gt;We are constantly looking out for community feedback and will be pleased to hear from you.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/SigNoz"&gt;
        SigNoz
      &lt;/a&gt; / &lt;a href="https://github.com/SigNoz/signoz"&gt;
        signoz
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      SigNoz helps developers monitor their applications &amp;amp; troubleshoot problems, an open-source alternative to DataDog, NewRelic, etc. 🔥 🖥
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
  &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/de24bcecd48c187d949b173f240555967f58a5cd424760a73f7c06f791b892ec/68747470733a2f2f7265732e636c6f7564696e6172792e636f6d2f646376336570696e782f696d6167652f75706c6f61642f76313631383930343435302f7369676e6f7a2d696d616765732f4c6f676f4769746875625f7369676662752e737667"&gt;&lt;img src="https://camo.githubusercontent.com/de24bcecd48c187d949b173f240555967f58a5cd424760a73f7c06f791b892ec/68747470733a2f2f7265732e636c6f7564696e6172792e636f6d2f646376336570696e782f696d6167652f75706c6f61642f76313631383930343435302f7369676e6f7a2d696d616765732f4c6f676f4769746875625f7369676662752e737667" alt="SigNoz-logo" width="240"&gt;&lt;/a&gt;
  &lt;/p&gt;
&lt;p&gt;Monitor your applications and troubleshoot problems in your deployed applications, an open-source alternative to DataDog, New Relic, etc.&lt;/p&gt;
&lt;p&gt;
    &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/8bb1977f745ee8c8107f711ecfa901421a9b929f308fd431f7211508f8ddbd87/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d627269676874677265656e"&gt;&lt;img alt="License" src="https://camo.githubusercontent.com/8bb1977f745ee8c8107f711ecfa901421a9b929f308fd431f7211508f8ddbd87/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d627269676874677265656e"&gt;&lt;/a&gt;
    &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/4d7505d3f801c171da56fe726501ab9411207d82358bf10341021397fa3fe48e/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f7369676e6f7a2f66726f6e74656e643f6c6162656c3d446f776e6c6f616473"&gt;&lt;img alt="Downloads" src="https://camo.githubusercontent.com/4d7505d3f801c171da56fe726501ab9411207d82358bf10341021397fa3fe48e/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f7369676e6f7a2f66726f6e74656e643f6c6162656c3d446f776e6c6f616473"&gt;&lt;/a&gt;
    &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/cd33e47de8e2feb970abdef5de51f59e6c007958faf6c188c56dd4c4208e58a2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f7369676e6f7a2f7369676e6f7a"&gt;&lt;img alt="GitHub issues" src="https://camo.githubusercontent.com/cd33e47de8e2feb970abdef5de51f59e6c007958faf6c188c56dd4c4208e58a2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f7369676e6f7a2f7369676e6f7a"&gt;&lt;/a&gt; 
    &lt;a href="https://twitter.com/intent/tweet?text=Monitor%20your%20applications%20and%20troubleshoot%20problems%20with%20SigNoz,%20an%20open-source%20alternative%20to%20DataDog,%20NewRelic.&amp;amp;url=https://signoz.io/&amp;amp;via=SigNozHQ&amp;amp;hashtags=opensource,signoz,observability" rel="nofollow"&gt; 
        &lt;img alt="tweet" src="https://camo.githubusercontent.com/90bc908826728c0e4261acfff5619fd732c7be2b2a00624fce6363c9a3623c90/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c2f687474702f736869656c64732e696f2e7376673f7374796c653d736f6369616c"&gt; &lt;/a&gt; 
&lt;/p&gt;

&lt;p&gt;SigNoz helps developers monitor applications and troubleshoot problems in their deployed applications. SigNoz uses distributed tracing to gain visibility into your software stack.&lt;/p&gt;
&lt;p&gt;👉 You can see metrics like p99 latency, error rates for your services, external API calls and individual end points.&lt;/p&gt;
&lt;p&gt;👉 You can find the root cause of the problem by going to the exact traces which are causing the problem and see detailed flamegraphs of individual request traces.&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/bc8a12f92d8313d86b619bd96c558b458b30f24cdb847b42e4db383aa83238a3/68747470733a2f2f7369676e6f7a2d7075626c69632e73332e75732d656173742d322e616d617a6f6e6177732e636f6d2f7369676e6f7a5f6865726f5f6769746875622e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/bc8a12f92d8313d86b619bd96c558b458b30f24cdb847b42e4db383aa83238a3/68747470733a2f2f7369676e6f7a2d7075626c69632e73332e75732d656173742d322e616d617a6f6e6177732e636f6d2f7369676e6f7a5f6865726f5f6769746875622e706e67" alt="SigNoz Feature"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/d86b90eea3d56848776f64d2e8188152844713a3079c158954a3f4a49f2fb120/68747470733a2f2f7369676e6f7a2d7075626c69632e73332e75732d656173742d322e616d617a6f6e6177732e636f6d2f436f6e747269627574696e672e737667"&gt;&lt;img src="https://camo.githubusercontent.com/d86b90eea3d56848776f64d2e8188152844713a3079c158954a3f4a49f2fb120/68747470733a2f2f7369676e6f7a2d7075626c69632e73332e75732d656173742d322e616d617a6f6e6177732e636f6d2f436f6e747269627574696e672e737667" width="50px"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Join our Slack community&lt;/h2&gt;
&lt;p&gt;Come say Hi to us on &lt;a href="https://join.slack.com/t/signoz-community/shared_invite/zt-lrjknbbp-J_mI13rlw8pGF4EWBnorJA" rel="nofollow"&gt;Slack&lt;/a&gt; 👋&lt;/p&gt;

&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/61f3487967fd24ab9d66eddfc48ab2b822ef4f1c300ac8db16bf27f70f9f94af/68747470733a2f2f7369676e6f7a2d7075626c69632e73332e75732d656173742d322e616d617a6f6e6177732e636f6d2f46656174757265732e737667"&gt;&lt;img src="https://camo.githubusercontent.com/61f3487967fd24ab9d66eddfc48ab2b822ef4f1c300ac8db16bf27f70f9f94af/68747470733a2f2f7369676e6f7a2d7075626c69632e73332e75732d656173742d322e616d617a6f6e6177732e636f6d2f46656174757265732e737667" width="50px"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Features:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Application overview metrics like RPS, 50th/90th/99th Percentile latencies, and Error Rate&lt;/li&gt;
&lt;li&gt;Slowest endpoints in your application&lt;/li&gt;
&lt;li&gt;See exact request trace to figure out issues in downstream services, slow DB queries, call to 3rd party services like payment gateways, etc&lt;/li&gt;
&lt;li&gt;Filter traces by service name, operation, latency, error…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/SigNoz/signoz"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



</description>
      <category>devops</category>
      <category>database</category>
      <category>monitoring</category>
      <category>observability</category>
    </item>
    <item>
      <title>Learn React &amp; Higher Order Components (HOCs) By Building Netflix</title>
      <author>Hiep Le</author>
      <pubDate>Fri, 23 Jul 2021 12:41:12 +0000</pubDate>
      <link>https://dev.to/hieptl/learn-react-higher-order-components-hocs-by-building-netflix-3h73</link>
      <guid>https://dev.to/hieptl/learn-react-higher-order-components-hocs-by-building-netflix-3h73</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SDOGifX3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kl7ptj9gf9dcqaenyj9a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SDOGifX3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kl7ptj9gf9dcqaenyj9a.png" alt="learn-react-by-building-netflix"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Click ⭐ if you like the project. Pull Requests are highly appreciated ❤️&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Github link: &lt;a href="https://github.com/hieptl/netflix-clone/tree/main/advanced/netflix-hoc#what"&gt;https://github.com/hieptl/netflix-clone/tree/main/advanced/netflix-hoc#what&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I'm Hiep. I work as a full-time software engineer. Most of my open-source projects are focused on one thing - to help people learn 📚. &lt;/p&gt;

&lt;p&gt;The repository helps you learn higher order components (hocs) by building Netflix. It means that you are learning higher order components by building a real-life project. I will explain concepts in details. This post is the third part in my series and it is suitable for beginners.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you feel the repository is useful, please help me share the post and give me a Github ⭐. It will make me feel motivation to work even harder. I will try to make many open sources and share to the community.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#preface"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Preface&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;This course will help you to learn higher order components (hocs) by building Netflix. It means that you are learning by doing a real-life project.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Table of Contents&lt;/strong&gt;
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;No.&lt;/th&gt;
&lt;th&gt;Topics&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;&lt;a href="#how-to-run-the-project"&gt;How to Run the Project.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;&lt;a href="#live-demo"&gt;Live Demo.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;&lt;a href="#introduction-about-the-creator"&gt;Introduction about the Creator.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2.1&lt;/td&gt;
&lt;td&gt;&lt;a href="#greenwich-university"&gt;      Greenwich University.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2.2&lt;/td&gt;
&lt;td&gt;&lt;a href="#hitachi-vantara-vietnam"&gt;      Hitachi Vantara Vietnam.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;&lt;a href="#prequisites"&gt;Prequisites.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.1&lt;/td&gt;
&lt;td&gt;&lt;a href="#softwares"&gt;      Softwares.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.2&lt;/td&gt;
&lt;td&gt;&lt;a href="#technical-skills"&gt;      Technical Skills.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.3&lt;/td&gt;
&lt;td&gt;&lt;a href="#materials"&gt;      Materials.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;&lt;a href="#purposes-of-the-course"&gt;Purposes of the Course.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4.1&lt;/td&gt;
&lt;td&gt;&lt;a href="#final-project"&gt;      Final Project.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4.2&lt;/td&gt;
&lt;td&gt;&lt;a href="#job"&gt;      Job.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;&lt;a href="#higher-order-components"&gt;Higher Order Components.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5.1&lt;/td&gt;
&lt;td&gt;&lt;a href="#what"&gt;      What.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5.2&lt;/td&gt;
&lt;td&gt;&lt;a href="#why"&gt;      Why.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5.3&lt;/td&gt;
&lt;td&gt;&lt;a href="#how"&gt;      How.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5.4&lt;/td&gt;
&lt;td&gt;&lt;a href="#when"&gt;      When.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;&lt;a href="#apply-higher-order-components-to-netflix"&gt;Apply Higher Order Components to Netflix.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;&lt;a href="#conclusion"&gt;Conclusion.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;&lt;a href="#references"&gt;References.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#table-of-images"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Table of Images.&lt;/strong&gt;
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;No.&lt;/th&gt;
&lt;th&gt;Topics&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;&lt;a href="#figure1"&gt;Figure 1: Apply Higher Order Components to Netflix.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;a id="how-to-run-the-project"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#0-how-to-run-the-project"&gt;
  &lt;/a&gt;
  &lt;strong&gt;0. How to Run the Project.&lt;/strong&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Step 1: Clone the project by using git clone or download the zip file.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Step 2: Open "terminal" / "cmd" / "gitbash" and change directory to "netflix-clone" and run "npm install" to install dependencies.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Step 3: Run "npm start" to run the fron-end project.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a id="live-demo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-live-demo"&gt;
  &lt;/a&gt;
  &lt;strong&gt;1. Live Demo.&lt;/strong&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://espg2.csb.app/login"&gt;https://espg2.csb.app/login&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Username: &lt;a href="mailto:demo@gmail.com"&gt;demo@gmail.com&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Password: 123456&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a id="introduction-about-the-creator"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-introduction-about-the-creator"&gt;
  &lt;/a&gt;
  &lt;strong&gt;2. Introduction about the Creator.&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a id="greenwich-university"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#21-greenwich-university"&gt;
  &lt;/a&gt;
  &lt;strong&gt;2.1. Greenwich University.&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;GPA 4.0 / 4.0.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Machine Learning paper - Recommendation System - IEEE/ICACT2020.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Co-Founder / Mentor IT club.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a id="hitachi-vantara-vietnam"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#22-hitachi-vantara-vietnam"&gt;
  &lt;/a&gt;
  &lt;strong&gt;2.2. Hitachi Vantara Vietnam.&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Employee of the year.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Second prize - innovation contest.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Techlead - HN branch.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;One of CoE Leaders (Center of Excellence).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a id="prequisites"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-prequisites"&gt;
  &lt;/a&gt;
  &lt;strong&gt;3. Prequisites.&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a id="softwares"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#31-softwares"&gt;
  &lt;/a&gt;
  &lt;strong&gt;3.1. Softwares.&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Install NodeJS.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;An IDE or a text editor (VSCode, Intellij, Webstorm, etc).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a id="technical-skills"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#32-technical-skills"&gt;
  &lt;/a&gt;
  &lt;strong&gt;3.2. Technical Skills.&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Basic programming skill.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Basic HTML, CSS, JS skills.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Basic React skill. (If you want to learn about React, you can refer &lt;strong&gt;Learn React by Building Netflix&lt;/strong&gt;: &lt;a href="https://dev.to/hieptl/learn-react-by-building-netflix-1127"&gt;https://dev.to/hieptl/learn-react-by-building-netflix-1127&lt;/a&gt;).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a id="materials"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#33-materials"&gt;
  &lt;/a&gt;
  &lt;strong&gt;3.3. Materials.&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Html, css, js (source code) was prepared because I want to focus on React and share knowledge about React. Building html and css from scratch would take a lot of time.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;README.md (the md file will contain everything about the course).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Netflix data will be used to import to Firebase. In this course, we use Firebase as our back-end service.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a id="purposes-of-the-course"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-purposes-of-the-course"&gt;
  &lt;/a&gt;
  &lt;strong&gt;4. Purposes of the Course.&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a id="final-project"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#41-final-project"&gt;
  &lt;/a&gt;
  &lt;strong&gt;4.1. Final Project.&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The course would help you have understanding about React and higher order components.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You could build the final project with end-to-end solution (front-end solution using React and back-end solution using Firebase).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a id="job"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#42-job"&gt;
  &lt;/a&gt;
  &lt;strong&gt;4.2. Job.&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;After finishing the course, you could get a job with fresher / junior position.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a id="higher-order-components"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-higher-order-components"&gt;
  &lt;/a&gt;
  &lt;strong&gt;5. Higher Order Components.&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a id="what"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#51-what"&gt;
  &lt;/a&gt;
  &lt;strong&gt;5.1 What.&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Higher-order function is a function that accepts another function as an argument or returns a function as a return value or both.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;firstOrderFunc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello, I am a First order function&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;higherOrder&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;ReturnFirstOrderFunc&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;ReturnFirstOrderFunc&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;higherOrder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;firstOrderFunc&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;p&gt;A higher-order component (HOC) is an advanced technique in React for reusing component logic. HOCs are not part of the React API, per se. They are a pattern that emerges from React’s compositional nature.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A higher-order component (HOC) is a function that takes a component and returns a new component. Basically, it's a pattern that is derived from React's compositional nature.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We call them pure components because they can accept any dynamically provided child component but they won't modify or copy any behavior from their input components.&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;EnhancedComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;higherOrderComponent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;WrappedComponent&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a id="why"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#52-why"&gt;
  &lt;/a&gt;
  &lt;strong&gt;5.2 Why.&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;HOC can be used for many use cases:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Code reuse, logic and bootstrap abstraction.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Render hijacking.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;State abstraction and manipulation.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Props manipulation.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a id="how"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#53-how"&gt;
  &lt;/a&gt;
  &lt;strong&gt;5.3 How.&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Step 1: Create a function that accept a component as parameter. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Step 2: Add common logic that can be shared between components inside that function. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Step 3: Pass the custom logic to the input component via props. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Step 4: Export the created function. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Step 5: Import the created function into any components that need to use it. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Step 6: Wrap the component by using the imported function and then export it.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;withHOC&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;YourComponent&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a id="when"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#54-when"&gt;
  &lt;/a&gt;
  &lt;strong&gt;5.4 When.&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;We can use higher order components if we want to reuse logic and share code between components. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;By the way of illustration, we need to display a modal in different places. The code of showing / hiding the modal need to be shared between components instead of creating new functions for different components. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We can have several solutions to achieve the result such as using Redux, React Context API, ... to keep track the state of the modal. However, we will use higher order component to achieve the same result. For this reason, you can understand higher order component by applying to our Netflix.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a id="apply-higher-order-components-to-netflix"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-apply-higher-order-components-to-netflix"&gt;
  &lt;/a&gt;
  &lt;strong&gt;7. Apply Higher Order Components to Netflix.&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a id="figure1"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Hw2QhzS4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i3qqrljv7qq4qaicqyvc.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Hw2QhzS4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i3qqrljv7qq4qaicqyvc.PNG" alt="apply-higher-order-components-to-netflix"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Figure 1. Apply Higher Order Components to Netflix.&lt;/p&gt;

&lt;p&gt;We will understand about higher order component by applying to our Netflix. In the first past of the series, we did not validate the user's credentials. In this part, we will validate the user's information and show the warning dialog if the user's information is invalid.&lt;/p&gt;

&lt;p&gt;Step 1: Create &lt;strong&gt;Modal.js&lt;/strong&gt; file inside &lt;strong&gt;src/components/Modal&lt;/strong&gt; folder. This file is used to define higher order component.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;withModal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;WrapperComponent&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;showModal&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;WrapperComponent&lt;/span&gt; &lt;span class="nx"&gt;showModal&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;showModal&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;;
&lt;/span&gt;  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;withModal&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;1st NOTE:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;We can user higher order component pattern to share code between components. In this case, we need to show the modal in different places. For this reason, we will create a higher order component which is call &lt;strong&gt;withModal&lt;/strong&gt; to show the modal.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;the &lt;strong&gt;showModal&lt;/strong&gt; function will accept an json object as parameter. The json object will contain &lt;strong&gt;message&lt;/strong&gt; property and it is used as the message of our warning dialog.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;I will show the default window alert by using &lt;strong&gt;window.alert&lt;/strong&gt; because we are focusing on learning higher order component concepts. You can feel free to create your modal and add some styling for it.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;As mentioned before, we can pass the custom logic to the input component via props. We pass &lt;strong&gt;showModal&lt;/strong&gt; function to the input component through a prop which is also called &lt;strong&gt;showModal&lt;/strong&gt;. It means that we can show the modal by dispatching &lt;strong&gt;showModal&lt;/strong&gt; function from the input component.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Step 2: Install &lt;strong&gt;validator&lt;/strong&gt; library. This librayr provides many common functions. Therefore, we can reuse them instead of creating everything from scratch. We need to run &lt;strong&gt;npm install validator&lt;/strong&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Step 3: Import &lt;strong&gt;validator&lt;/strong&gt; library to &lt;strong&gt;LoginForm.js&lt;/strong&gt; file because we would like to validate the user's information.&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="c1"&gt;// import validator.&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;validator&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;validator&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Step 4: In &lt;strong&gt;LoginForm.js&lt;/strong&gt; file, we write a function to validate the user's credentials.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isUserCredentialsValid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;validator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isEmail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;validator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isLength&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;min&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;2nd NOTE:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;validator.isEmail&lt;/strong&gt; is used to ensure that the user's email will follow the email format.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;validator.isLength(password, { min: 6 })&lt;/strong&gt; is used to validate the length of the user's password. The user's password' s length must have at least 6 characters.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Step 5: Import the above higher order component into &lt;strong&gt;LoginForm.js&lt;/strong&gt; file.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="c1"&gt;// import hoc.&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;withModal&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../modal/Modal&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Step 6: Wrap &lt;strong&gt;LoginForm&lt;/strong&gt; component inside the higher order component.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="c1"&gt;// export LoginForm component.&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;withModal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;LoginForm&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Step 7: Get &lt;strong&gt;showModal&lt;/strong&gt; function of the higher order component via props.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;showModal&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Step 8: Call &lt;strong&gt;showModal&lt;/strong&gt; function if the input user's information is invalid.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="cm"&gt;/**
   * handle event when the user clicks on "Login" button.
   */&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;login&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// call firebase authentication service.&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isUserCredentialsValid&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;firebaseAuth&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;signInWithEmailAndPassword&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;userCredential&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="c1"&gt;// Signed in&lt;/span&gt;
          &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;userCredential&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
          &lt;span class="c1"&gt;// ...&lt;/span&gt;
          &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`signed in user`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
          &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;showModal&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Your email or password is not correct&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After finish all of the above steps, &lt;strong&gt;LoginForm&lt;/strong&gt; componnet will look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="cm"&gt;/**
 * Github: https://github.com/hieptl/netflix-clone.
 * Dev.to: https://dev.to/hieptl/learn-react-by-building-netflix-1127
 */&lt;/span&gt;
&lt;span class="c1"&gt;// import react.&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// import firebase authentication.&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;firebaseAuth&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../../firebase/firebase&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// import hoc.&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;withModal&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../modal/Modal&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// import validator.&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;validator&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;validator&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="cm"&gt;/**
 * create LoginForm component.
 */&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;LoginForm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// create email and password state to store user's credentials.&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setEmail&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setPassword&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;showModal&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isUserCredentialsValid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;validator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isEmail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;validator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isLength&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;min&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="cm"&gt;/**
   * handle event when the user clicks on "Login" button.
   */&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;login&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// call firebase authentication service.&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isUserCredentialsValid&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;firebaseAuth&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;signInWithEmailAndPassword&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;userCredential&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="c1"&gt;// Signed in&lt;/span&gt;
          &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;userCredential&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
          &lt;span class="c1"&gt;// ...&lt;/span&gt;
          &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`signed in user`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
          &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;showModal&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Your email or password is not correct&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="cm"&gt;/**
   * update email state when the user inputs the email field.
   * @param {*} e - synthetic event to get the latest email's value.
   */&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;onEmailChanged&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// get email value.&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;updatedEmail&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;// update email state.&lt;/span&gt;
    &lt;span class="nx"&gt;setEmail&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;updatedEmail&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="cm"&gt;/**
   * update password state when the user input the password field.
   * @param {*} e - synthetic event to get the latest password's value.
   */&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;onPasswordChanged&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// get password value.&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;updatedPassword&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;// update password state.&lt;/span&gt;
    &lt;span class="nx"&gt;setPassword&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;updatedPassword&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;login-body&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;login-body__form&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Sign&lt;/span&gt; &lt;span class="nx"&gt;In&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;login-body__input mb-16&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;
            &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;placeholder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Email or phone number&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;onEmailChanged&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;login-body__input&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;
            &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;password&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;placeholder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Password&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;onPasswordChanged&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;login-body__submit-btn&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;login&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nx"&gt;Sign&lt;/span&gt; &lt;span class="nx"&gt;In&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;login-body__options&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Remember&lt;/span&gt; &lt;span class="nx"&gt;me&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;login-body__need-help&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Need&lt;/span&gt; &lt;span class="nx"&gt;help&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;login-body__footer&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;login-body__fb&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;img&lt;/span&gt;
              &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://assets.nflxext.com/ffe/siteui/login/images/FB-f-Logo__blue_57.png&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
              &lt;span class="nx"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;fb&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Login&lt;/span&gt; &lt;span class="kd"&gt;with&lt;/span&gt; &lt;span class="nx"&gt;Facebook&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;login-body__new-to-nl&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;New&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;Netflix&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;login-body__sign-up&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Sign&lt;/span&gt; &lt;span class="nx"&gt;up&lt;/span&gt; &lt;span class="nx"&gt;now&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;login-body__google_captcha&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nx"&gt;This&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt; &lt;span class="kr"&gt;protected&lt;/span&gt; &lt;span class="nx"&gt;by&lt;/span&gt; &lt;span class="nx"&gt;Google&lt;/span&gt; &lt;span class="nx"&gt;reCAPTCHA&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;ensure&lt;/span&gt; &lt;span class="nx"&gt;you&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;re not a
            bot.
            &amp;lt;span className="login-body__learn-more"&amp;gt;Learn more.&amp;lt;/span&amp;gt;
          &amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
      &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
  );
}
// export LoginForm component.
export default withModal(LoginForm);

&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a id="conclusion"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Conclusion&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;In this course, we have learn about higher order components by building Netflix. I hope that you can apply higher order components to your projects. If you feel the project is useful, please help me share it to the community and give me Github ⭐&lt;/p&gt;

&lt;p&gt;&lt;a id="references"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  &lt;strong&gt;References&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;[1]. &lt;a href="https://reactjs.org/docs/higher-order-components.html"&gt;https://reactjs.org/docs/higher-order-components.html&lt;/a&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>react</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
  </channel>
</rss>
