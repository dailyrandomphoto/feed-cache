<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>What's the difference between Typescript, Babel, and Coffeescript?</title>
      <author>LeviathanProgramming</author>
      <pubDate>Thu, 11 Feb 2021 16:34:15 +0000</pubDate>
      <link>https://dev.to/conner1115/what-s-the-difference-between-typescript-babel-and-coffeescript-2jo</link>
      <guid>https://dev.to/conner1115/what-s-the-difference-between-typescript-babel-and-coffeescript-2jo</guid>
      <description>&lt;p&gt;I now that babel, typescript, and I &lt;em&gt;think&lt;/em&gt; coffeescript are different than javascript in some ways in allowing more ES6 usage.  I don't know the exact differences between them all and would like an explanation.&lt;/p&gt;

&lt;p&gt;Can you please explain what each one is and how they differ from Javascript and each other?&lt;br&gt;
Thanks for reading.&lt;br&gt;
Happy Coding.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>babel</category>
      <category>typescript</category>
      <category>explainlikeimfive</category>
    </item>
    <item>
      <title>How to build a Dice Roller in Python</title>
      <author>Rishabh Singh ⚡</author>
      <pubDate>Thu, 11 Feb 2021 15:45:52 +0000</pubDate>
      <link>https://dev.to/mindninjax/how-to-build-a-dice-roller-in-python-18j3</link>
      <guid>https://dev.to/mindninjax/how-to-build-a-dice-roller-in-python-18j3</guid>
      <description>&lt;p&gt;Hello everyone, today we are going to create a &lt;strong&gt;Dice Roller in Python&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pEnvef6I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/m9qf728jshctdnouta10.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pEnvef6I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/m9qf728jshctdnouta10.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-does-it-work" class="anchor"&gt;
  &lt;/a&gt;
  How does it work?
&lt;/h2&gt;

&lt;p&gt;In the real world, we use dice to get a random number ranging from 1- 6 so we can proceed with the game accordingly. Our program is going to work similarly. Every time we will run our program, it will return us a random number between 1 &amp;amp; 6. Now let's jump to coding and make this project.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lets-code" class="anchor"&gt;
  &lt;/a&gt;
  Let's Code
&lt;/h2&gt;

&lt;p&gt;The first thing we are gonna do is import the required modules. &lt;/p&gt;

&lt;p&gt;For this project, we need only one module which is &lt;strong&gt;&lt;code&gt;random&lt;/code&gt;&lt;/strong&gt; module which helps us to generate random values.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;We have successfully imported &lt;strong&gt;&lt;code&gt;random&lt;/code&gt;&lt;/strong&gt; module.&lt;/p&gt;

&lt;p&gt;Now we may need to use the Dice Roller multiple times hence it will be a good idea to use an &lt;strong&gt;&lt;code&gt;while&lt;/code&gt;&lt;/strong&gt; loop in order to keep our code running for as long as user wishes.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;pass&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Here we go! Here is the basic syntax of the &lt;strong&gt;&lt;code&gt;while&lt;/code&gt;&lt;/strong&gt; loop. We will substitute that &lt;strong&gt;&lt;code&gt;pass&lt;/code&gt;&lt;/strong&gt; keyword with our remaining code.&lt;/p&gt;

&lt;p&gt;Now let's give our code the ability to generate a random number between 1 to 6.&lt;/p&gt;

&lt;p&gt;Here we will make use of one of the functions of our &lt;strong&gt;&lt;code&gt;random&lt;/code&gt;&lt;/strong&gt; module.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"The value is "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;randint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;code&gt;random.randint(START_VALUE, END_VALUE)&lt;/code&gt;&lt;/strong&gt; is the function we are going to use.&lt;/p&gt;

&lt;p&gt;As previously mentioned, this function will take an &lt;strong&gt;&lt;code&gt;START_VALUE&lt;/code&gt;&lt;/strong&gt; &amp;amp; an &lt;strong&gt;&lt;code&gt;END_VALUE&lt;/code&gt;&lt;/strong&gt; which will be &lt;strong&gt;&lt;code&gt;1&lt;/code&gt;&lt;/strong&gt; &amp;amp; &lt;strong&gt;&lt;code&gt;6&lt;/code&gt;&lt;/strong&gt; in our case, since we need a value between 1 &amp;amp; 6.&lt;/p&gt;

&lt;p&gt;We are also using an &lt;strong&gt;&lt;code&gt;print()&lt;/code&gt;&lt;/strong&gt; function along with &lt;strong&gt;&lt;code&gt;f-string&lt;/code&gt;&lt;/strong&gt; to directly print the output on the console, rather than storing it in a variable.&lt;/p&gt;

&lt;p&gt;We are almost done!&lt;/p&gt;

&lt;p&gt;Now let's add one line to ask the user if he/she wishes to roll the dice again or would like the end the program instead. This is pretty simple.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;repeat&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Roll Dice again? 'y' for yes &amp;amp; 'n' for no: "&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;repeat&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'n'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;break&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Here we are simply using input() function to ask the user and the user can reply in either &lt;strong&gt;yes&lt;/strong&gt; or &lt;strong&gt;no&lt;/strong&gt;. And we are using an &lt;strong&gt;&lt;code&gt;if&lt;/code&gt;&lt;/strong&gt; statement so that if the user replies &lt;strong&gt;no&lt;/strong&gt;, then the loop will terminate otherwise the loop will continue to run forever.&lt;/p&gt;

&lt;p&gt;Finally here's how our &lt;strong&gt;&lt;code&gt;while&lt;/code&gt;&lt;/strong&gt; loop will look like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Rolling Dice..."&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"The value is "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;randint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;repeat&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Roll Dice again? 'y' for yes &amp;amp; 'n' for no: "&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;repeat&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'n'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Here we have also added an optional &lt;strong&gt;&lt;code&gt;print()&lt;/code&gt;&lt;/strong&gt; function to indicate the rolling of the dice.&lt;/p&gt;

&lt;p&gt;You did it! 🤩&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#source-code" class="anchor"&gt;
  &lt;/a&gt;
  Source Code
&lt;/h2&gt;

&lt;p&gt;You can find the complete source code of this project here -&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/mindninjaX/Python-Projects-for-Beginners/tree/master/Dice%20Roller"&gt;mindninjaX/Python-Projects-for-Beginners&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#support" class="anchor"&gt;
  &lt;/a&gt;
  Support
&lt;/h2&gt;

&lt;p&gt;Thank you so much for reading! I hope you found this beginner project useful. &lt;/p&gt;

&lt;p&gt;If you like my work please consider &lt;a href="https://buymeacoff.ee/mindninjaX"&gt;Buying me a Coffee&lt;/a&gt; so that I can bring more projects, more articles for you.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SNezDmj5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/5irx7eny4412etlwnc64.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SNezDmj5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/5irx7eny4412etlwnc64.png" alt="https://dev-to-uploads.s3.amazonaws.com/i/5irx7eny4412etlwnc64.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Also if you have any questions or doubts feel free to contact me on &lt;a href="https://twitter.com/mindninjaX"&gt;Twitter&lt;/a&gt;, &lt;a href="https://www.linkedin.com/in/mindninjax/"&gt;LinkedIn&lt;/a&gt; &amp;amp; &lt;a href="https://github.com/mindninjaX"&gt;GitHub&lt;/a&gt;. Or you can also post a comment/discussion &amp;amp; I will try my best to help you :D&lt;/p&gt;

</description>
      <category>python</category>
      <category>tutorial</category>
      <category>codenewbie</category>
      <category>beginners</category>
    </item>
    <item>
      <title>5 JavaScript Projects You Should Consider To Build As A Frontend Dev.</title>
      <author>Ankur Tyagi</author>
      <pubDate>Thu, 11 Feb 2021 15:22:06 +0000</pubDate>
      <link>https://dev.to/tyaga001/5-javascript-projects-you-should-consider-to-build-as-a-frontend-dev-3jpd</link>
      <guid>https://dev.to/tyaga001/5-javascript-projects-you-should-consider-to-build-as-a-frontend-dev-3jpd</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Side projects are a great way to show your skills to land your first job as Front-end Developer.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#5-javascript-projects-you-should-consider-to-build-as-a-frontend-dev" class="anchor"&gt;
  &lt;/a&gt;
  5 JavaScript Projects You Should Consider To Build as a Frontend Dev.
&lt;/h1&gt;

&lt;h3&gt;
  &lt;a href="#1-build-a-tictactoe-game-with-pure-javascript" class="anchor"&gt;
  &lt;/a&gt;
  1. Build a Tic-tac-toe game with Pure JavaScript
&lt;/h3&gt;

&lt;p&gt;Building a game in a browser can be a great exercise to test your JavaScript skills. You will have to react to user events, interact with DOM, and store game data.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-build-a-blog-template-with-html-and-css" class="anchor"&gt;
  &lt;/a&gt;
  2. Build a Blog Template with HTML and CSS
&lt;/h3&gt;

&lt;p&gt;When you just start learning front-end development it’s important to consolidate your knowledge about HTML and CSS. Building a Blog Template is a good idea for your first bigger project.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-location-sharing-with-pure-javascript-and-maps-service" class="anchor"&gt;
  &lt;/a&gt;
  3. Location sharing with Pure JavaScript and Maps Service
&lt;/h3&gt;

&lt;p&gt;A simple app where you can share location with your friend can be both a demanding project. In this project, you will use JavaScript to interact with external services for maps (ex. Google Maps or OpenStreetMap).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-build-tv-series-tracker-with-js-framework-react-vue-angular-or-other" class="anchor"&gt;
  &lt;/a&gt;
  4. Build TV Series Tracker with JS Framework (React, Vue, Angular or other)
&lt;/h3&gt;

&lt;p&gt;This project will help every TV Series fan, track premieres new episodes. It will be a great opportunity to use a JavaScript framework you are comfortable with.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-home-budget-app-with-js-framework-react-vue-angular-or-other" class="anchor"&gt;
  &lt;/a&gt;
  5. Home Budget App with JS Framework (React, Vue, Angular or other)
&lt;/h3&gt;

&lt;p&gt;Creating a home budget App will be an ultimate check for your skills as a Junior Front-end Developer. It will check your ability to create forms and store information, but it can also help you save money!&lt;/p&gt;

&lt;p&gt;Remember, you don’t have to mimic the above examples 1-to-1.&lt;/p&gt;

&lt;p&gt;Feel free to change, add or remove any detail you like.&lt;/p&gt;

&lt;p&gt;If you have older projects you used for learning new skills you can always refactor them and put them in your portfolio. &lt;/p&gt;

&lt;p&gt;Good Luck!&lt;/p&gt;

&lt;p&gt;That's it for today, If you like my recommendations, then I encourage you to sign up for my weekly “2-1-1” Friday newsletter&lt;/p&gt;

&lt;p&gt;And don't forget to follow me for more killer content in 2021.&lt;/p&gt;

&lt;p&gt;Sign up 👇&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codelifefitness.com/"&gt;2-1-1 Friday Newsletter&lt;/a&gt; &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Don't just code</title>
      <author>Alvaro Montoro</author>
      <pubDate>Thu, 11 Feb 2021 14:41:35 +0000</pubDate>
      <link>https://dev.to/alvaromontoro/don-t-just-practice-coding-n0d</link>
      <guid>https://dev.to/alvaromontoro/don-t-just-practice-coding-n0d</guid>
      <description>&lt;p&gt;You are preparing to become a Software Developer. And you are coding, practicing, completing exercises, following tutorials online, learning JavaScript, algorithms, React, loops, Java, variables... and that is great, but you may be missing something along your path.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p86TAaCk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/737w26mhkxkbjykbpg8q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p86TAaCk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/737w26mhkxkbjykbpg8q.png" alt="Cartoon of a man and a woman looking confused at a dotted line that represents the path to a software dev position, it has many stops (algorithms, variables, classes...) a big question mark over their heads"&gt;&lt;/a&gt;&lt;/p&gt;

This path seems solid, but something's missing




&lt;h2&gt;
  &lt;a href="#soft-skills" class="anchor"&gt;
  &lt;/a&gt;
  Soft skills
&lt;/h2&gt;

&lt;p&gt;Coding is fundamental for a developer, but there's more to it than just that: &lt;strong&gt;soft skills are essential too!&lt;/strong&gt; Actually, social and communication skills are almost as critical and not as easy to master.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Anyone can get to a Junior Developer level in a matter of weeks or months&lt;/strong&gt; and, with some time and experience, master their coding skills... but coding is not everything.&lt;/p&gt;

&lt;p&gt;Empathy, creativity, open-mindedness, good communication, critical thinking, teamwork mentality... they complement the technical knowledge and will take you to the next level.&lt;/p&gt;

&lt;p&gt;The good news is you may have those soft skills already! And trust me, we need them in our industry. We really do.&lt;/p&gt;

&lt;p&gt;Some people have these skills naturally. Some others need to practice them a little (...or a lot). But we must work on them to grow as developers (and as people in general).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Pdr3cB1C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/71gsaj056c9sfv48yz7v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Pdr3cB1C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/71gsaj056c9sfv48yz7v.png" alt="Cartoon of a smiling man and woman looking at a dotted line that represents the path to a software dev position, it has many stops (algorithms, variables, classes...), and it also had some other handwritten steps in between (empathy, critical thinking, communication skills...)"&gt;&lt;/a&gt;&lt;/p&gt;

This path leads to better results and success




&lt;p&gt;Here's a little &lt;em&gt;secret&lt;/em&gt;: you are not being evaluated just for your technical knowledge in a technical interview. By the time you make it to the technical interview, you should have passed a technical screening, and we have a general idea of your coding abilities.&lt;/p&gt;

&lt;p&gt;We also want to make sure that you'd be a good fit for the team and organization, and look for other types of skills: communication, creativity, critical thinking... do they ring a bell?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#listening" class="anchor"&gt;
  &lt;/a&gt;
  Listening
&lt;/h2&gt;

&lt;p&gt;While the soft skills are very different among them, there is a common factor that can help improve many of them at once: &lt;strong&gt;Listening&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Notice that I use listening in a wider sense, which includes listening, reading, observing, and even writing (which is really useful for solidifying knowledge and improving communication skills.)&lt;/p&gt;

&lt;p&gt;Seriously. &lt;strong&gt;Do you...&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;...want better communication skills?&lt;/strong&gt; Listen to people. It will help following the conversation better, will make you more secure and able to answer. Even if they are not talking to you: listen and pay attention to how senior coworkers present the topics and learn from how they do it.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;...want to boost empathy?&lt;/strong&gt; Listen to people. Understand how they feel, what they are going through, what they think. It will help you understand their needs better, and it will improve the team mentality.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;...want to be more creative?&lt;/strong&gt; Listen to (creative) people. Get ideas, inspiration, challenges... Every artist has been influenced by previous artists. To improve your creativity, search for and listen to other creative people.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;...want to improve teamwork skills?&lt;/strong&gt; Listen to your teammates! Not only to what they have to say but also to how they present things: read their tickets carefully, make sure that you have all requirements... more listening later translates into fewer bugs and missing features and faster review cycles.&lt;/li&gt;
&lt;li&gt;...want to...?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Do you see the pattern?&lt;/p&gt;

&lt;p&gt;Of course, there are many other ways to improve soft skills, but I find that a good one is following Vanilla Ice's advice: "&lt;em&gt;Alright: stop, collaborate, and listen&lt;/em&gt;." :P&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion" class="anchor"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Technologies come and go. Programming languages rise and fall. The same language/library changes from one version to the next... but being assertive, having empathy, knowing how to present ideas... those are things that will be with you always. And they will open many doors.&lt;/p&gt;

&lt;p&gt;While you prepare for your Software Developer career, don't just focus on coding and also set some time to invest in your soft skills. It will go a long way.&lt;/p&gt;

</description>
      <category>codenewbie</category>
      <category>career</category>
      <category>watercooler</category>
    </item>
    <item>
      <title>Amazing image placeholders with blurhash</title>
      <author>Karan Pratap Singh</author>
      <pubDate>Thu, 11 Feb 2021 13:25:49 +0000</pubDate>
      <link>https://dev.to/karanpratapsingh/amazing-image-placeholders-with-blurhash-11ok</link>
      <guid>https://dev.to/karanpratapsingh/amazing-image-placeholders-with-blurhash-11ok</guid>
      <description>&lt;p&gt;Few weeks ago I was playing around with &lt;a href="https://wolt.com/en"&gt;Wolt&lt;/a&gt; iOS app, I was really impressed by how the app handled image load and placeholders. After looking around I finally found &lt;a href="https://blurha.sh"&gt;Blurhash&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-would-i-need-it" class="anchor"&gt;
  &lt;/a&gt;
  Why would I need it?
&lt;/h2&gt;

&lt;p&gt;Blurhash can help with transforming boring image placeholders into something more.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9lm2FMS_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/oxy902cd021lo5tdv32i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9lm2FMS_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/oxy902cd021lo5tdv32i.png" alt="Example"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;i&gt;&lt;a href="https://blurha.sh/"&gt;source&lt;/a&gt;&lt;/i&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-with-typescript-and-react" class="anchor"&gt;
  &lt;/a&gt;
  Using with TypeScript and React
&lt;/h2&gt;

&lt;h4&gt;
  &lt;a href="#install" class="anchor"&gt;
  &lt;/a&gt;
  Install
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;yarn add blurhash
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#encode-an-image" class="anchor"&gt;
  &lt;/a&gt;
  Encode an image
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;encode&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;blurhash&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;loadImage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;HTMLImageElement&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;img&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;img&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onload&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;img&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;img&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onerror&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(...&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;img&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;src&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getImageData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;HTMLImageElement&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nx"&gt;ImageData&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;canvas&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;canvas&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;image&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;image&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;context&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;2d&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;drawImage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;image&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getImageData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;image&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;image&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;encodeImage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;HTMLImageElement&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;loadImage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="na"&gt;imageData&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;ImageData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;getImageData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;image&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;imageData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;imageData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;imageData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#store-blurhash-alongside-your-images" class="anchor"&gt;
  &lt;/a&gt;
  Store blurhash alongside your images
&lt;/h4&gt;

&lt;p&gt;When storing images to S3 bucket, I usually run encode function on the image from S3 and store it alongside the image url in the database so that it's easier. &lt;/p&gt;

&lt;p&gt;Personally I store image in it's own object representation as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nl"&gt;"image"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https://project-uploads.s3.amazonaws.com/i/..."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"blurhash"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"LKO2?U%2Tw=w]~RBVZRi};RPxuwH"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#using-with-react" class="anchor"&gt;
  &lt;/a&gt;
  Using with React
&lt;/h4&gt;

&lt;p&gt;After storing the hash on the server, it's quite easier to use it with React without any manual decoding with &lt;a href="https://github.com/woltapp/react-blurhash"&gt;react-blurhash&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;BlurhashCanvas&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-blurhash&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Blurhash&lt;/span&gt;
  &lt;span class="na"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'&amp;lt;image_hash&amp;gt;'&lt;/span&gt;
  &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;400&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
  &lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
  &lt;span class="na"&gt;resolutionX&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
  &lt;span class="na"&gt;resolutionY&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;i&gt;Note: you can also decode the hash manually, checkout &lt;a href="https://github.com/woltapp/blurhash"&gt;blurhash docs&lt;/a&gt; for more details&lt;/i&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#experiment-online" class="anchor"&gt;
  &lt;/a&gt;
  Experiment online!
&lt;/h2&gt;

&lt;p&gt;There's an online generator available if would like to try it out yourself.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--B-1wKVxs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/bww7xkxb2izzt56nu6vw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B-1wKVxs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/bww7xkxb2izzt56nu6vw.png" alt="generator"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Happy Coding 🎉 &lt;/p&gt;

</description>
      <category>react</category>
      <category>typescript</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Deploy a Docker App to AWS using ECS</title>
      <author>Raphael MANSUY</author>
      <pubDate>Thu, 11 Feb 2021 13:02:58 +0000</pubDate>
      <link>https://dev.to/raphaelmansuy/deploy-a-docker-app-to-aws-using-ecs-3i1g</link>
      <guid>https://dev.to/raphaelmansuy/deploy-a-docker-app-to-aws-using-ecs-3i1g</guid>
      <description>&lt;h1&gt;
  &lt;a href="#deploy-a-docker-app-to-aws-using-ecs" class="anchor"&gt;
  &lt;/a&gt;
  Deploy a Docker App to AWS using ECS
&lt;/h1&gt;

&lt;p&gt;AWS proposes two container orchestrations services: &lt;strong&gt;ECS&lt;/strong&gt; and &lt;strong&gt;Kubernete&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Well integrated with the AWS ecosystem, ECS is the proprietary version.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-we-will-build" class="anchor"&gt;
  &lt;/a&gt;
  What we will build
&lt;/h2&gt;

&lt;p&gt;In this tutorial we will explain how to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Package and build a node application and package a simple node application with Docker&lt;/li&gt;
&lt;li&gt;Create an ECR repository to store our Docker Image&lt;/li&gt;
&lt;li&gt;Upload the Docker image to the repository&lt;/li&gt;
&lt;li&gt;Create and launch an Elastic Container Cluster (ECR)&lt;/li&gt;
&lt;li&gt;Launch our application as a task within the Elastic Container Cluster&lt;/li&gt;
&lt;li&gt;Expose and open this application on the internet&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j9ifaFwd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/raphaelmansuy/til/raw/main/docker/images/schema01.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j9ifaFwd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/raphaelmansuy/til/raw/main/docker/images/schema01.png" alt="Workflow Shema"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.docker.com"&gt;Docker&lt;/a&gt; is a technology that helps to package and ship applications easily in production.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://aws.amazon.com/ecs/?whats-new-cards.sort-by=item.additionalFields.postDateTime&amp;amp;whats-new-cards.sort-order=desc&amp;amp;ecs-blogs.sort-by=item.additionalFields.createdDate&amp;amp;ecs-blogs.sort-order=desc"&gt;ECS&lt;/a&gt; stands for Elastic Container Service. It is a fully managed container orchestration service&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://docs.aws.amazon.com/AmazonECR/latest/userguide/what-is-ecr.html"&gt;ECR&lt;/a&gt; stands for Elastic Container Repository. ECR allows storage of Docker Images on AWS.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Concepts:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A cluster is a logical grouping of hardware resources.&lt;/li&gt;
&lt;li&gt;A task is a set of metadata (memory, CPU, port mapping, environmental variables, etc) that describes how a container should be deployed.&lt;/li&gt;
&lt;li&gt;Services are responsible for managing advanced configurations such as load balancing&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#the-nodejs-application-to-deploy" class="anchor"&gt;
  &lt;/a&gt;
  The &lt;a href="https://nodejs.org"&gt;NodeJS&lt;/a&gt; application to deploy
&lt;/h2&gt;

&lt;p&gt;We want to deploy a basic express node application that displays the current time each time the index page is refreshed.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-packagejson-endraw-" class="anchor"&gt;
  &lt;/a&gt;
  &lt;code&gt;package.json&lt;/code&gt;
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"docker_web_app"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"version"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"1.0.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"description"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Node.js on Docker"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"author"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Raphaël MANSUY raphael.mansuy+contact@gmail.com&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"main"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"server.js"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"scripts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"start"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"node server.js"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"dependencies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"express"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^4.17.1"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#-raw-serverjs-endraw-" class="anchor"&gt;
  &lt;/a&gt;
  &lt;code&gt;server.js&lt;/code&gt;
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;use strict&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;// Constants&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;PORT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;8080&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;HOST&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;0.0.0.0&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="c1"&gt;// App&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Hello World - &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;toISOString&lt;/span&gt;&lt;span class="p"&gt;()}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;HOST&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Running on http://&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;HOST&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;:&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;a href="https://nodejs.org/en/docs/guides/nodejs-docker-webapp/"&gt;https://nodejs.org/en/docs/guides/nodejs-docker-webapp/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#package-the-nodejs-application-with-a-docker-file" class="anchor"&gt;
  &lt;/a&gt;
  Package the node.js application with a Docker file
&lt;/h2&gt;

&lt;p&gt;In the same directory of this application, we can create a &lt;code&gt;Dockerfile&lt;/code&gt; that explains how to build a container with this application:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-dockerfile-endraw-" class="anchor"&gt;
  &lt;/a&gt;
  &lt;code&gt;Dockerfile&lt;/code&gt;
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; node:14&lt;/span&gt;
&lt;span class="c"&gt;# Create app directory&lt;/span&gt;
&lt;span class="k"&gt;WORKDIR&lt;/span&gt;&lt;span class="s"&gt; /usr/src/app&lt;/span&gt;
&lt;span class="c"&gt;# Install app dependencies&lt;/span&gt;
&lt;span class="c"&gt;# A wildcard is used to ensure both package.json AND package-lock.json are copied&lt;/span&gt;
&lt;span class="c"&gt;# where available (npm@5+)&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; package*.json ./&lt;/span&gt;

&lt;span class="k"&gt;RUN &lt;/span&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt;
&lt;span class="c"&gt;# If you are building your code for production&lt;/span&gt;
&lt;span class="c"&gt;# RUN npm ci --only=production&lt;/span&gt;

&lt;span class="c"&gt;# Bundle app source&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; . .&lt;/span&gt;

&lt;span class="k"&gt;EXPOSE&lt;/span&gt;&lt;span class="s"&gt; 8080&lt;/span&gt;

&lt;span class="k"&gt;CMD&lt;/span&gt;&lt;span class="s"&gt; [ "node", "server.js" ]&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;This file defines the following steps:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;start from the node:14 image&lt;/li&gt;
&lt;li&gt;create a directory &lt;code&gt;/usr/src/ap&lt;/code&gt; inside the container&lt;/li&gt;
&lt;li&gt;copy the local file with pattern &lt;code&gt;package*.json&lt;/code&gt; in the container&lt;/li&gt;
&lt;li&gt;run &lt;code&gt;npm install&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;copy all the local files to the container&lt;/li&gt;
&lt;li&gt;expose the port &lt;code&gt;8080&lt;/code&gt; inside the container&lt;/li&gt;
&lt;li&gt;run &lt;code&gt;node&lt;/code&gt; with the file &lt;code&gt;server.js&lt;/code&gt; when the container starts&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#building-the-image" class="anchor"&gt;
  &lt;/a&gt;
  Building the image
&lt;/h2&gt;

&lt;p&gt;Run the following command to build an image with the tag &lt;code&gt;node-web-app&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker build &lt;span class="nt"&gt;-t&lt;/span&gt; node-web-app &lt;span class="nb"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#running-the-image" class="anchor"&gt;
  &lt;/a&gt;
  Running the image
&lt;/h2&gt;

&lt;p&gt;Run the following command to start the application in detached mode:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker run &lt;span class="nt"&gt;-p&lt;/span&gt; 80:8080 &lt;span class="nt"&gt;-d&lt;/span&gt; node-web-app
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;The container is now running and the 8080 port within the container is exposed as the 80 port on your local machine.&lt;/p&gt;

&lt;p&gt;We can now test the application with the &lt;a href="https://curl.se/"&gt;CURL command&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;curl http://localhost:80
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Results:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;Hello World - 2021-02-11T05:06:12.739Z
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;We are now ready to deploy this container to the cloud.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#connect-to-amazonecr" class="anchor"&gt;
  &lt;/a&gt;
  Connect to AmazonECR
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Prerequisites&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://aws.amazon.com/cli/"&gt;&lt;code&gt;aws cli&lt;/code&gt;&lt;/a&gt; must be installed&lt;/li&gt;
&lt;li&gt;your &lt;a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-profiles.html"&gt;aws profile&lt;/a&gt; must be configured and have ECS admin rights enabled&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Run the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;aws ecr get-login-password &lt;span class="nt"&gt;--region&lt;/span&gt; us-west-2 | docker login
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;If you have access, you should have this displayed on the terminal:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;Authenticating with existing credentials...
Login Succeeded

&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#create-your-amazonecr-in-the-aws-console" class="anchor"&gt;
  &lt;/a&gt;
  Create your AmazonECR in the AWS Console
&lt;/h2&gt;

&lt;p&gt;Connect to the AWS Console and to the ECS Administration screen to create a new repository.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R6_sjJun--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/raphaelmansuy/til/raw/main/docker/images/ecr1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R6_sjJun--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/raphaelmansuy/til/raw/main/docker/images/ecr1.png" alt="ECR Step1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click on &lt;strong&gt;Create Repository&lt;/strong&gt; and choose &lt;code&gt;testrepository&lt;/code&gt; as a name for your repository:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nl5DghnB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/raphaelmansuy/til/raw/main/docker/images/ecr2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nl5DghnB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/raphaelmansuy/til/raw/main/docker/images/ecr2.png" alt="ECR Step2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The ECR repository is now created:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xgtT0h6T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/raphaelmansuy/til/raw/main/docker/images/ecr3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xgtT0h6T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/raphaelmansuy/til/raw/main/docker/images/ecr3.png" alt="ECR Step3"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#upload-the-image-on-aws-ecr" class="anchor"&gt;
  &lt;/a&gt;
  Upload the image on AWS ECR
&lt;/h2&gt;

&lt;p&gt;Click now on the &lt;code&gt;push commands button&lt;/code&gt; on the repository screen:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tln0ogAa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/raphaelmansuy/til/raw/main/docker/images/ecr4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tln0ogAa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/raphaelmansuy/til/raw/main/docker/images/ecr4.png" alt="ECR Step4"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Copy and execute each command on your machine:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iE3Jc7Dy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/raphaelmansuy/til/raw/main/docker/images/ecr5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iE3Jc7Dy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/raphaelmansuy/til/raw/main/docker/images/ecr5.png" alt="ECR Step5"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;connect&lt;/strong&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;aws ecr get-login-password &lt;span class="nt"&gt;--region&lt;/span&gt; us-west-2 | docker login &lt;span class="nt"&gt;--username&lt;/span&gt; AWS &lt;span class="nt"&gt;--password-stdin&lt;/span&gt; 3680199100XXX.dkr.ecr.us-west-2.amazonaws.com
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;build&lt;/strong&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker build &lt;span class="nt"&gt;-t&lt;/span&gt; testrepository &lt;span class="nb"&gt;.&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;build&lt;/strong&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker tag testrepository:latest 3680199100XXX.dkr.ecr.us-west-2.amazonaws.com/testrepository:latest
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;push to ECR&lt;/strong&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker push 3680199100XXX.dkr.ecr.us-west-2.amazonaws.com/testrepository:latest
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;The image is now published and available on ECR ready to be deployed:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IgZ0tQyr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/raphaelmansuy/til/raw/main/docker/images/ecr6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IgZ0tQyr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/raphaelmansuy/til/raw/main/docker/images/ecr6.png" alt="ECR Step6"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you look at AmazonECR, repositories we can see the newly created image.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6kFjHiOt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/raphaelmansuy/til/raw/main/docker/images/ecr6_1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6kFjHiOt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/raphaelmansuy/til/raw/main/docker/images/ecr6_1.png" alt="ECR Step6-1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NsiuM5nw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/raphaelmansuy/til/raw/main/docker/images/ecr6_2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NsiuM5nw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/raphaelmansuy/til/raw/main/docker/images/ecr6_2.png" alt="ECR Step6-2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Copy the image URI: we need to keep this to create a task definition for the following steps.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;368019910004.dkr.ecr.us-west-2.amazonaws.com/testrepository:latest
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#create-an-ecs-cluster" class="anchor"&gt;
  &lt;/a&gt;
  Create an ECS Cluster
&lt;/h2&gt;

&lt;p&gt;Go to the ECS home page and click on the &lt;code&gt;create cluster&lt;/code&gt; button:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NclFE-k_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/raphaelmansuy/til/raw/main/docker/images/ecr7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NclFE-k_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/raphaelmansuy/til/raw/main/docker/images/ecr7.png" alt="ECR Step7"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Choose &lt;code&gt;EC2 Linux + Networking&lt;/code&gt; and then click next:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FtcI5WSL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/raphaelmansuy/til/raw/main/docker/images/ecr8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FtcI5WSL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/raphaelmansuy/til/raw/main/docker/images/ecr8.png" alt="ECR Step8"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then enter the following information:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;name of the cluster: &lt;code&gt;ecs01&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;EC2 instance type: &lt;code&gt;t3-micro&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Number of instances: &lt;code&gt;1&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OGk4IPxR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/raphaelmansuy/til/raw/main/docker/images/ecr9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OGk4IPxR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/raphaelmansuy/til/raw/main/docker/images/ecr9.png" alt="ECR Step9"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then choose:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Default VPC&lt;/li&gt;
&lt;li&gt;Auto assign IP: &lt;code&gt;Enabled&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Security group: &lt;code&gt;default&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Choose one of the subnet&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fPEOu826--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/raphaelmansuy/til/raw/main/docker/images/ecr10.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fPEOu826--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/raphaelmansuy/til/raw/main/docker/images/ecr10.png" alt="ECR Step10"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And then next press &lt;code&gt;Enter&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-a-new-task-definition" class="anchor"&gt;
  &lt;/a&gt;
  Create a new Task definition
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;A task a set of metadata (memory, cpu, port mappings, environment variables, etc) that describes how a container should be deployed.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Click on new &lt;code&gt;Task definition&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--A6qglrsi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/raphaelmansuy/til/raw/main/docker/images/ecr11.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A6qglrsi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/raphaelmansuy/til/raw/main/docker/images/ecr11.png" alt="ECR Step11"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Choose &lt;code&gt;EC2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DcmyU_8g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/raphaelmansuy/til/raw/main/docker/images/ecr12.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DcmyU_8g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/raphaelmansuy/til/raw/main/docker/images/ecr12.png" alt="ECR Step12"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then &lt;code&gt;next&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Choose &lt;code&gt;NodeWebAppTask&lt;/code&gt; for the name of the task definition.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KShWCyht--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/raphaelmansuy/til/raw/main/docker/images/ecr13.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KShWCyht--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/raphaelmansuy/til/raw/main/docker/images/ecr13.png" alt="ECR Step13"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Enter &lt;code&gt;128&lt;/code&gt;for memory size.&lt;/p&gt;

&lt;p&gt;Click Add Container:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hPaYELPC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/raphaelmansuy/til/raw/main/docker/images/ecr14.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hPaYELPC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/raphaelmansuy/til/raw/main/docker/images/ecr14.png" alt="ECR Step14"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Add the name of the container: &lt;code&gt;NodeWebApp&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Set the image URI that we have saved add the end of the &lt;code&gt;add image&lt;/code&gt; step&lt;/li&gt;
&lt;li&gt;Set the port mappings 80:8080&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eKZDyrcU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/raphaelmansuy/til/raw/main/docker/images/ecr15.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eKZDyrcU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/raphaelmansuy/til/raw/main/docker/images/ecr15.png" alt="ECR Step15"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click &lt;code&gt;create&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AJnfvHsW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/raphaelmansuy/til/raw/main/docker/images/ecr16.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AJnfvHsW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/raphaelmansuy/til/raw/main/docker/images/ecr16.png" alt="ECR Step16"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then go to &lt;code&gt;Run Task&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1M-l0ZVS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/raphaelmansuy/til/raw/main/docker/images/ecr17.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1M-l0ZVS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/raphaelmansuy/til/raw/main/docker/images/ecr17.png" alt="ECR Step17"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--24hei4db--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/raphaelmansuy/til/raw/main/docker/images/ecr18.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--24hei4db--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/raphaelmansuy/til/raw/main/docker/images/ecr18.png" alt="ECR Step18"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The task is now running:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cY81Vaa3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/raphaelmansuy/til/raw/main/docker/images/ecr19.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cY81Vaa3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/raphaelmansuy/til/raw/main/docker/images/ecr19.png" alt="ECR Step19"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If we click on the container instance:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9gzYTTX2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/raphaelmansuy/til/raw/main/docker/images/ecr20.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9gzYTTX2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/raphaelmansuy/til/raw/main/docker/images/ecr20.png" alt="ECR Step20"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We can modify the security group associated with instance to open the port &lt;code&gt;80&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Bakrtxj6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/raphaelmansuy/til/raw/main/docker/images/ecr21.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Bakrtxj6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/raphaelmansuy/til/raw/main/docker/images/ecr21.png" alt="ECR Step21"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--O2dKQnCd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/raphaelmansuy/til/raw/main/docker/images/ecr22.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--O2dKQnCd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/raphaelmansuy/til/raw/main/docker/images/ecr22.png" alt="ECR Step22"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Add 80 in the inbound rule to the security group:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qSj_zbM5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/raphaelmansuy/til/raw/main/docker/images/ecr23.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qSj_zbM5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/raphaelmansuy/til/raw/main/docker/images/ecr23.png" alt="ECR Step23"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If we try now to open the url: &lt;code&gt;http://ec2-52-38-113-251.us-west-2.compute.amazonaws.com&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---CxH4_eA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/raphaelmansuy/til/raw/main/docker/images/ecr24.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---CxH4_eA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/raphaelmansuy/til/raw/main/docker/images/ecr24.png" alt="ECR Step24"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#et-voil%C3%A0" class="anchor"&gt;
  &lt;/a&gt;
  Et voilà
&lt;/h2&gt;

&lt;p&gt;Our cluster and node application is now deployed.&lt;/p&gt;

&lt;p&gt;🎉 🎉 🎉&lt;/p&gt;

</description>
      <category>docker</category>
      <category>node</category>
      <category>aws</category>
      <category>devops</category>
    </item>
    <item>
      <title>A Post-Mortem in 5 Acts, of How Microsoft Privatized Open Source, killing JavaScript in the Process</title>
      <author>Alex Kleydints</author>
      <pubDate>Thu, 11 Feb 2021 12:46:00 +0000</pubDate>
      <link>https://dev.to/kleydints/a-post-mortem-in-5-acts-of-how-microsoft-privatized-open-source-killing-javascript-in-the-process-20ea</link>
      <guid>https://dev.to/kleydints/a-post-mortem-in-5-acts-of-how-microsoft-privatized-open-source-killing-javascript-in-the-process-20ea</guid>
      <description>&lt;p&gt;After Microsoft’s blitzkrieg take-over, the Open Source JavaScript community, as we know it, is coming to an end.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;All things said and done, you must stand in awe, at how Microsoft, executed this takeover, with very little to no resistance from a community of hundreds of thousands of active JavaScript developers, even introducing the use of TypeScript in React, Angular, and Node, while cornering both source-control and distribution of code. It's strategically perfect in all dimensions. Kudos to Nadella and his team.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;When I started coding, I really loved the Open Source JavaScript community. It did always feel weird, that people would write code, and share it for free. But people did, and still do, and it felt amazing and crazy at the same time.&lt;br&gt;
There was Github to manage our sources, and npm, which indexed the open-source libraries and made it super-easy to search, find, and import functionalities, and to create, update and share libraries ourselves. And on sites like Stackoverflow, you could even get free support and advice. JavaScript was improving year after year with every ECMAScript release. It wasn't perfect, but it all worked. The future seemed bright.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Although Open Source grew inside capitalism, it's values weirdly weren't part of that capitalistic world-view. That's why, from day one, it was bound for destruction at some point or another.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Then one day Microsoft came in and took control of the two core tools, which were the gateways to the whole Open Source community; npm and Github. I don't think people saw this coming, and it's clear that the majority of developers, even today, don't realize what happened and how it will affect them very shortly.&lt;/p&gt;

&lt;p&gt;Once the take-over was complete, a massive propaganda onslaught began to fully convert the idealistic open source community towards the capitalistic Microsoft mantra. It's a 'secret' war, with high-tech propaganda, which over time will silently destroy and remove independence, kill-off non-Microsoft-owned editors, tools, libraries, even JavaScript itself. All of this is inevitable because Microsoft is a for-profit corporation. It's in its DNA to take over whole industries and turn them into profit-generating monopolies for its shareholders.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Microsoft's mission is to turn every JavaScript developer into a Microsoft TypeScript money-generating drone, one way or another.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Below I'll describe the multi-dimensional blitzkrieg of Microsoft in 5 simple steps.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#act-1-microsoft-kills-javascript" class="anchor"&gt;
  &lt;/a&gt;
  Act 1: Microsoft Kills JavaScript
&lt;/h1&gt;

&lt;p&gt;Microsoft may not be able to innovate on products, and they usually fail miserably. But it is shockingly good at marketing, propaganda, and take-overs.&lt;/p&gt;

&lt;p&gt;Microsoft has essentially deprecated JavaScript and the non-profit foundation, which governed it, by TypeScript, which is governed and controlled by the for-profit Microsoft Corporation. If Microsoft was truly interested in improving JavaScript it could have done that through the non-profit foundation. But instead, it took the 'Evil Corp' approach of making the foundation and JavaScript slowly irrelevant, so it could guarantee that it could monopolize and monetize the whole industry.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#understanding-the-propaganda" class="anchor"&gt;
  &lt;/a&gt;
  Understanding the Propaganda
&lt;/h2&gt;

&lt;p&gt;The 'JavaScript at Scale' narrative is aimed mostly at the business decision-makers, positioning TypeScript as the reliable and robust choice versus the bug-prone and unreliable vanilla JavaScript. Over time this will deprecate JavaScript as a language in business environments. It will become the new PHP.&lt;/p&gt;

&lt;p&gt;And so as not to offend JavaScript developers too much, the 'TypeScript is a superset of JavaScript' narrative was introduced, which for obvious reasons is naively erroneous at best. TypeScript does use JavaScript constructs but has a lot more in common with C#.&lt;/p&gt;

&lt;p&gt;So although TypeScript has its benefits, you should be aware, it is not what Microsoft wants you to believe it is.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;It's fairer to say that TypeScript is a C# superset, with some JavaScript limitations, which compiles to JavaScript.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#proprietary-open%C2%A0source" class="anchor"&gt;
  &lt;/a&gt;
  Proprietary Open Source
&lt;/h2&gt;

&lt;p&gt;JavaScript is not controlled or owned by one profit-driven corporation. It's an open-source, non-profit, effort driven by many independent actors and corporations.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;TypeScript, on the other hand, is Proprietary Open Source, because it is owned, financed and fully controlled by the profit-driven Microsoft corporation.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#piggybacking-the-community" class="anchor"&gt;
  &lt;/a&gt;
  Piggy-backing the Community
&lt;/h2&gt;

&lt;p&gt;Infusing JavaScript and open-source in its propaganda Microsoft was able to piggy-back on the disorganized and leaderless open-source community and did this without any noticeable resistance. The whole community welcomes TypeScript whole-heartedly, or at least it seems so.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#act-2-microsoft-acquires%C2%A0github" class="anchor"&gt;
  &lt;/a&gt;
  Act 2: Microsoft Acquires Github
&lt;/h1&gt;

&lt;p&gt;Although Github stayed independent for a long time, it was a for-profit company from day one. It's an almost perfect product-market fit for developers:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Developers can store, and manage source-control, and share your code-base.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Developers have profiles, with an overview of what code-bases the developer contributed to. This profile is almost always requested when developers apply for a job.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Developers can report bugs and do pull requests to open source repositories.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Any developer, who is fine with sharing this code publicly, can use Github for free. The up-sell to a subscription model starts when you don't want to share your code publicly, and want to use private repositories. This feature is mostly used by companies or start-ups. But even then you could use these features free for small teams.&lt;/p&gt;

&lt;p&gt;Github's first-mover advantage, its freemium model, and the close inter-connection with npm, turned it into a monopoly.&lt;br&gt;
Today, authors, educators, speakers, and developers, when referring to creating or downloading a repository always mention Github. It's become synonymous with source control.&lt;/p&gt;

&lt;p&gt;And since Github was funded by Venture Capital, there was always an exit planned, from day one. So it shouldn't be a surprise that a corporation, interested to own the user-base and code-bases of those users, would one day come in, and provide a return on investment for the hard work of its founders and investors. No surprise there.&lt;/p&gt;

&lt;p&gt;After the acquisition by Microsoft, its integration with VSCode, further strengthened its monopoly position as the go-to source code repository service.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#act-3-microsoft-acquires%C2%A0npm" class="anchor"&gt;
  &lt;/a&gt;
  Act 3: Microsoft Acquires npm
&lt;/h1&gt;

&lt;p&gt;Now that Microsoft owned Github, the next logical step was to acquire npm. Npm is not only the JavaScript package manager, it is also the directory of open source libraries in the community. Just like Github, npm was a for-profit company from day one.&lt;/p&gt;

&lt;p&gt;Its' monopoly position was based on having been chosen as the package manager for NodeJS. In 2021 it's close to impossible for the JavaScript community to unlink from npm. It's part of the DNA.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Using npm alongside github has become just as a routine for a developer as breathing.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#act-4-microsoft-pushes-vscode-as-the-goto-and-only-editor-for-typescript" class="anchor"&gt;
  &lt;/a&gt;
  Act 4: Microsoft pushes VSCode as the go-to (and only) Editor for TypeScript
&lt;/h1&gt;

&lt;p&gt;When I started coding, I watched hundreds of tutorials, followed courses and read many coding books, and continue to do so. And 99 out of 100 times, you hear people continuously advise VSCode as the best of the best editor on the planet. &lt;/p&gt;

&lt;p&gt;It's very rare that someone even mentions Vim or WebStorm.&lt;br&gt;
And for a long time, I actually drank the cool-aid and used only VSCode. But once I started seriously coding, I got annoyed by all the bloatware, spyware, and marketing inside VSCode. It's not like you don't notice. I felt like being used instead of being a user.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;There is no such thing as free in capitalism. If a for-profit corporation, like Microsoft, gives you something free, be prepared to become raped at some point.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I moved on from VSCode to WebStorm, via Vim. But the majority of developers, who use Github and npm as part of their routine, will eventually switch to VSCode, if they haven't already. Microsoft's propaganda machine is very efficient (if you are blind).&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#act-5-airbnb-for-open-source-libraries-the-business%C2%A0model" class="anchor"&gt;
  &lt;/a&gt;
  Act 5: Airbnb for Open Source Libraries, the business model
&lt;/h1&gt;

&lt;p&gt;The message is clear, open source is about to be monetized by corporations and Venture Capitalist driven companies. And just like Airbnb makes more money on renting out properties, without owning any, parasites like TideLift, OpenCollective, and others, will apply the same Silicon-Valley mantra to Open Source.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The Airbnb model is coming to the Open Source Community.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The most popular open-source libraries will slowly start having 'premium' versions, which will have less, or no bugs, and better support. They'll keep the open-source available, but it will become filled with continuous up-sells and bugs forcing you to pay. This is simply inevitable. Venture Capitalists wouldn't invest hundreds of millions of dollars into something just out of their good heart:).&lt;/p&gt;

&lt;p&gt;And then after some time, Microsoft will buy one or all of the players, and own the whole industry from top to bottom, start to finish.&lt;/p&gt;

&lt;p&gt;Game over.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#in-conclusion-what-should-you-do-as-a-javascript-developer-in%C2%A02021" class="anchor"&gt;
  &lt;/a&gt;
  In conclusion: What should you do as a JavaScript Developer in 2021?
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#learn-typescript" class="anchor"&gt;
  &lt;/a&gt;
  Learn TypeScript
&lt;/h2&gt;

&lt;p&gt;If you are a JavaScript developer, learn TypeScript immediately, as most if not all employers will require you to have TypeScript as part of your stack. That is not a bad thing in itself, as you will become more efficient and productive. &lt;/p&gt;

&lt;p&gt;And it will be a lot easier for you to learn other statically typed languages, which is a nice side-effect.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;TypeScript is a gateway 'drug' to a world of statically typed languages.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#be-flexible-and-open-to-learn-anything%C2%A0new" class="anchor"&gt;
  &lt;/a&gt;
  Be Flexible and Open to Learn Anything New
&lt;/h2&gt;

&lt;p&gt;Well, you need to change and definitely be aware of all the new risks and demands on your career. Some of it may save you, and some of it may kill you and it's not very clear what is what.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The modern software developer, continuously learns new practices, patterns, and technologies, and is flexible enough to change, unlearn and drop, and replace, refactor anything, at the drop of the hat, even learning and switching to a new language all together.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I am not a purist, which means that I will continue to take advantage of the open-source community. I could even say use and abuse, just like Microsoft did and does. It would be stupid, and not productive to stop using libraries. But I have become even more aware of the dangers, and I am decreasing my dependency on third-party convenience libraries, and patterns. &lt;/p&gt;

&lt;p&gt;As a result, I am coding more low-level, which for me at least, is a lot more fun, because it requires me to exercise my brains, and learn new skills. And at the end of the day, that is how you become a better software engineer.&lt;/p&gt;

&lt;p&gt;Today, when I do decide to use a certain technology, library, or framework, I don't just do it blindly on a whim, gobbling up all the direct and indirect propaganda, from the corporations or the venture capitalists behind it. I approach each new technology with an open mind and an objective pragmatism. I actually go through an internal assessment process, just as if I was still an engineer at some large corporation.&lt;/p&gt;

&lt;p&gt;Does it really do things better? Is it faster, cleaner, less prone to bugs? Will it increase my productivity? What are the short-, middle- and long-term costs of using it? Will it make me too dependent on one corporation or toolkit? These are important questions, and you should ask them continuously.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#some-examples" class="anchor"&gt;
  &lt;/a&gt;
  Some Examples
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;I didn't move instantly from a REST API model to GraphQL, even though I learned it, understand its concepts, and the reasoning behind it. I could switch anytime if I needed to. But I haven't, because although it solves a lot of issues, it creates a bunch of others at the same time.&lt;/li&gt;
&lt;li&gt;Even though I use the NextJS framework for my React front-end, I am not creating API's inside it, and I am not deploying it on Vercel either.&lt;/li&gt;
&lt;li&gt;Although I switched from JavaScript to TypeScript, I don't use VSCode, Github or Azure, because there are other better solutions and tools for that.&lt;/li&gt;
&lt;li&gt;When React hooks came out, I almost immediately dropped class-based components and switched to hooks-functional components. As a result, I was able to remove my dependency on Redux.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#final-thoughts" class="anchor"&gt;
  &lt;/a&gt;
  Final Thoughts
&lt;/h1&gt;

&lt;p&gt;This oped will in many cases clash with the mainstream narrative and opinions, and that's fine. Our group-think is not as independent or correct as we may think. We often revert to techno-framework-tribalism, aggravated by the constant attack by weapons of mass propaganda.&lt;/p&gt;

&lt;p&gt;But it is important to find out about different views, and opinions and stay vigilant. This is an important soft-skill for the modern developer.&lt;/p&gt;

&lt;p&gt;And it's not all doom and gloom. Learning TypeScript is a good introduction to statically typed languages. So go learn it. But use it as a stepping stone to learning more statically typed languages, not as a final destination.&lt;/p&gt;

&lt;p&gt;Good luck with your TypeScript journey.&lt;/p&gt;

&lt;p&gt;Alex Kleydints&lt;/p&gt;

</description>
      <category>typescript</category>
      <category>opensource</category>
      <category>javascript</category>
      <category>discuss</category>
    </item>
    <item>
      <title>12 MUST watch videos! #WomenInSTEM Day edition</title>
      <author>Ania Kubow</author>
      <pubDate>Thu, 11 Feb 2021 10:02:31 +0000</pubDate>
      <link>https://dev.to/ania_kubow/12-must-watch-videos-womeninstem-day-edition-3kkp</link>
      <guid>https://dev.to/ania_kubow/12-must-watch-videos-womeninstem-day-edition-3kkp</guid>
      <description>&lt;p&gt;Today, which is the 11th of February, is according to the United Nations General Assembly the International Day of Women and Girls in Science and technology, or Women in STEM for short! So I thought what better way to celebrate, but to showcase some of my favourite videos from YouTubes amazing women, or people who relate to as such.&lt;/p&gt;

&lt;p&gt;On a serious note, The International Day of Women and Girls in Science is implemented by UNESCO and UN Women, in collaboration with intergovernmental agencies and institutions, as well as civil society partners, that aim to promote women and girls in science. The days purpose is to promote full and equal access to participation in science for women and girls, an area where we are currently lacking, so let's change that!&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/UBcDJD-0LxA"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;As promised, here are the video links from my video:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;‘How I learned to Code and landed a job’ by Coder Coder     : &lt;a href="https://www.youtube.com/watch?v=jA14r2ujQ7s"&gt;https://www.youtube.com/watch?v=jA14r2ujQ7s&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;‘Why is Burnout so common in Tech’ from Mayuko: &lt;a href="https://www.youtube.com/watch?v=hQX-BtFp-Rc"&gt;https://www.youtube.com/watch?v=hQX-BtFp-Rc&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;'What is Abstract Algebra' by Socratica: &lt;a href="https://www.youtube.com/watch?v=IP7nW_hKB7I"&gt;https://www.youtube.com/watch?v=IP7nW_hKB7I&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;'Automate Good Morning Texts with Python in 5 mins' by The Come Up: &lt;a href="https://www.youtube.com/watch?v=GKsCitAEKow"&gt;https://www.youtube.com/watch?v=GKsCitAEKow&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;‘The Resume that got me my dream job’ by The BlackFemale Engineer: &lt;a href="https://www.youtube.com/watch?v=erpFaQM_lXA"&gt;https://www.youtube.com/watch?v=erpFaQM_lXA&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; ‘UI vs UX, what is the difference’ from Coding Blone: &lt;a href="https://www.youtube.com/watch?v=3Ui6y1jXWFs"&gt;https://www.youtube.com/watch?v=3Ui6y1jXWFs&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;‘Building a Fullstack GraphQL and JavaScript App: Getting Started with AWS Amplify’ by Ali Spittel: &lt;a href="https://www.youtube.com/watch?v=86zrndR-AIA"&gt;https://www.youtube.com/watch?v=86zrndR-AIA&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; ‘Server Side Rendering with NextJS to Hide API Keys’ by  Ijemma Onwuzulike: &lt;a href="https://www.youtube.com/watch?v=NbXwP1oBym8"&gt;https://www.youtube.com/watch?v=NbXwP1oBym8&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;'C++ FOR BEGINNERS (2020) Hello World' by CodeBeauty: &lt;a href="https://www.youtube.com/watch?v=iBG0fN8lY8Y"&gt;https://www.youtube.com/watch?v=iBG0fN8lY8Y&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;'What is Bootstap?' by Thirus: &lt;a href="https://www.youtube.com/watch?v=qj9OlUxvW48"&gt;https://www.youtube.com/watch?v=qj9OlUxvW48&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;'Conways Game of Life in Python' by Faraday Academy: &lt;a href="https://www.youtube.com/watch?v=xpR-YUy4-V4"&gt;https://www.youtube.com/watch?v=xpR-YUy4-V4&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;‘How I Landed A Front-End Developer Role in 8 Months' by  TaelurAlexis: &lt;a href="https://www.youtube.com/watch?v=849U_2e7HUI"&gt;https://www.youtube.com/watch?v=849U_2e7HUI&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sign up for weekly coding tips from my newsletter partnership: &lt;a href="https://bit.ly/JS-tips%E2%80%8B"&gt;https://bit.ly/JS-tips​&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can also find me on:&lt;br&gt;
Twitter: &lt;a href="https://twitter.com/ania_kubow%E2%80%8B%E2%80%8B"&gt;https://twitter.com/ania_kubow​​&lt;/a&gt;&lt;br&gt;
Instagram: &lt;a href="https://instagram.com/aniakubow%E2%80%8B%E2%80%8B"&gt;https://instagram.com/aniakubow​​&lt;/a&gt;&lt;br&gt;
Youtube: &lt;a href="https://youtube.com/aniakubow%E2%80%8B%E2%80%8B"&gt;https://youtube.com/aniakubow​​&lt;/a&gt;&lt;/p&gt;

</description>
      <category>womenintech</category>
      <category>javascript</category>
      <category>python</category>
      <category>vue</category>
    </item>
    <item>
      <title>Here is The Best CLI K8S Manager/Monitors : K9S</title>
      <author>Javid Mougamadou</author>
      <pubDate>Thu, 11 Feb 2021 10:00:05 +0000</pubDate>
      <link>https://dev.to/javidjms/here-is-the-best-cli-k8s-manager-monitors-k9s-3dc8</link>
      <guid>https://dev.to/javidjms/here-is-the-best-cli-k8s-manager-monitors-k9s-3dc8</guid>
      <description>&lt;h2&gt;
  &lt;a href="#concepts" class="anchor"&gt;
  &lt;/a&gt;
  Concepts
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XoAIWqZi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://ordina-jworks.github.io/img/2020-08-06-kubernetes-clients-comparison/k9s-deploy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XoAIWqZi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://ordina-jworks.github.io/img/2020-08-06-kubernetes-clients-comparison/k9s-deploy.gif" alt="Alt Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;K9s is a terminal based UI to interact with your Kubernetes clusters. The aim of this project is to make it easier to navigate, observe and manage your deployed applications in the wild. K9s continually watches Kubernetes for changes and offers subsequent commands to interact with your observed resources.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#useful-commands" class="anchor"&gt;
  &lt;/a&gt;
  Useful commands
&lt;/h2&gt;

&lt;p&gt;All commands can be quickly autocompleted. Here is some useful commands :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;? &lt;span class="c"&gt;# Show active keyboard mnemonics and help&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;ctrl-a &lt;span class="c"&gt;# Show all available resource alias&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;:ctx &lt;span class="c"&gt;# Switch contexts&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;:ns &lt;span class="c"&gt;# Change namespaces&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;:popeye &lt;span class="c"&gt;# Sanitizes your cluster ressources&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;:xray &lt;span class="c"&gt;# Deep Trace a ressource&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;:pulses &lt;span class="c"&gt;# Launch pulses view&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;:deploy &lt;span class="c"&gt;# Show all deployments&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;:pvc &lt;span class="c"&gt;# Show all pvc&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;d,v, e, l, &lt;span class="c"&gt;# Key mapping to describe, view, edit, view logs&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#links" class="anchor"&gt;
  &lt;/a&gt;
  Links
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/derailed/k9s"&gt;https://github.com/derailed/k9s&lt;/a&gt;&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>webdev</category>
      <category>kubernetes</category>
      <category>monitoring</category>
    </item>
    <item>
      <title>Projects with high-quality designs to practice your HTML, CSS, JS... skills</title>
      <author>BigsonDev</author>
      <pubDate>Thu, 11 Feb 2021 09:50:13 +0000</pubDate>
      <link>https://dev.to/bigsondev/projects-with-high-quality-designs-to-practice-your-html-css-js-skills-jpg</link>
      <guid>https://dev.to/bigsondev/projects-with-high-quality-designs-to-practice-your-html-css-js-skills-jpg</guid>
      <description>&lt;h1&gt;
  &lt;a href="#hi-folks" class="anchor"&gt;
  &lt;/a&gt;
  Hi folks!
&lt;/h1&gt;

&lt;p&gt;After my last post about Knowledge Pills, you might think "What else would he prepare for us?" 👀&lt;/p&gt;

&lt;p&gt;It turns out, I (ex Lead Frontend Developer) + UX/UI Designer are hard-working on the new Projects section. These will be perfect to practice and improve your skills. We're trying to provide high-quality designs after a technical review, there are some tips on how to start, recommended technologies, user stories, and more...&lt;/p&gt;

&lt;p&gt;Our goal is to reach around 15 projects and sort them in difficulty level order, each of the projects should teach some real-world concepts and after completing all of them, you should have a strong Full-stack (Frontend/Backend) understanding of the modern technologies in your pocket.&lt;/p&gt;

&lt;p&gt;Current projects:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://bigsondev.com/projects/business-card-project/"&gt;Business Card&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bigsondev.com/projects/landing-page-project/"&gt;Landing Page&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bigsondev.com/projects/calculator-app-project/"&gt;Calculator App&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bigsondev.com/projects/notes-app-project/"&gt;Notes App&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Future projects (Hopefully we'll have most of them in March 😅)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;movie search app with details page based on IMDB API&lt;/li&gt;
&lt;li&gt;weather app based on some weather API&lt;/li&gt;
&lt;li&gt;quiz app&lt;/li&gt;
&lt;li&gt;level editor for e.g. Mario or any platformer game&lt;/li&gt;
&lt;li&gt;real-time chat app&lt;/li&gt;
&lt;li&gt;blog (multilanguage, etc.)&lt;/li&gt;
&lt;li&gt;e-commerce store&lt;/li&gt;
&lt;li&gt;mobile app (probably some game, or learning app)&lt;/li&gt;
&lt;li&gt;portfolio (connecting all the previous projects)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And now the important part:&lt;br&gt;
&lt;strong&gt;There are no tutorials for this, I included sections on how to start, recommended technologies but you can do it as you want, modify, upgrade design, add more features, mix technologies. It's just that design is high-quality and you can learn "real-world experience" as you would be working for a real company. As an e.g. Frontend Developer you often get a design (or sometimes need to create it on your own) and work around it.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I might introduce video series building these projects with my own solutions, I don't want to limit anyone of you, for now, take it as a real challenge.&lt;/p&gt;

&lt;p&gt;Remember that learning by building projects is one of the most efficient ways you can boost your skills, take projects that scare you off, and overcome them.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;And yes, learning to code is hard, you'll want to quit, survive and one day everything will "click" and that's when you'll start enjoying it to the max.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Once all the projects are there, I'll create a separate, more in-depth post introducing each of them and mentioning what you can learn from it, which technologies to use, etc.&lt;/p&gt;

&lt;p&gt;Maybe more ideas will come out (feel free to throw one or two).&lt;/p&gt;

&lt;p&gt;Happy coding! 🍻&lt;/p&gt;

</description>
      <category>design</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>react</category>
    </item>
    <item>
      <title>Your resume photo affects your chances to get a job as a developer. Research review.</title>
      <author>Devinterview-io</author>
      <pubDate>Thu, 11 Feb 2021 09:29:57 +0000</pubDate>
      <link>https://dev.to/devinterview/your-resume-photo-affects-your-chances-to-get-a-job-as-a-developer-research-review-3n1</link>
      <guid>https://dev.to/devinterview/your-resume-photo-affects-your-chances-to-get-a-job-as-a-developer-research-review-3n1</guid>
      <description>&lt;p&gt;You almost certainly think that advertising or propaganda has an effect on anyone, but certainly not on you. You always act rationally and can not be influenced in this way. But that's probably not the case. People are subject to cognitive biases. And that's ok.&lt;/p&gt;

&lt;p&gt;If you ask any HR person &lt;strong&gt;if they pay attention to a candidate's photo and appearance&lt;/strong&gt;, 10 out of 10 will say, "Of course not, we only look at experience!" Well, soft skills and all that. After all, judging a person by appearance is a &lt;strong&gt;step towards discrimination&lt;/strong&gt;. But even if a recruiter wants to be completely unbiased, unconsciously they still take into account how they feel about your photo. Even if he/she doesn't tell you about it. Even if he/she doesn't tell himself/herself about it.&lt;/p&gt;

&lt;p&gt;To avoid this, you need to know that there is such an effect. And in order to take advantage of it, you need to know what most people subconsciously respond to.&lt;/p&gt;

&lt;p&gt;I found several scientific articles (I've put references below) where scientists were comparing the effect of photos with different facial expressions in the context of hiring.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Should you smile in a picture if you are a programmer?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you're applying for a job as an actor or a consultant in a store, it seems obvious to put a smiling picture on your resume. &lt;em&gt;But maybe engineers, developers, or top managers should put a more serious face.&lt;/em&gt; It's a serious job. And it's also a stressful one.&lt;/p&gt;

&lt;p&gt;"High-power" people smile less often than their subordinates. And their smiles correlate with good spirits. Whereas subordinates smile regardless of their mood and much more often. Even with professional fighters, you can predict the result of a fight by looking at who smiles more before the fight (that person is likely to lose).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Study&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The study compared three photos for resumes: &lt;em&gt;smiling&lt;/em&gt;, &lt;em&gt;neutral&lt;/em&gt;, and &lt;em&gt;thoughtful&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;All “candidates” were current employees of IT companies in Norway, 10 men, 10 women, all white, average age 31.4 years. All models were photographed under the same conditions, all were asked to dress neutrally.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Participants ("aka recruiters")&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The study included 238 employees of IT companies, 218 men, 20 women. The average age was 29.9 years old. 45% hire occasionally, 10% hire on a regular basis, and the remaining 45% do not hire.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Methodology&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The online survey randomly divided participants into three groups. 79 people rated resumes with smiling pictures, 79 with neutral pictures, and 80 with thoughtful pictures.&lt;/p&gt;

&lt;p&gt;Participants were told they would be shown resume photos of software developers; for each of the 20 photos, they were asked to rate their competence on a seven-point scale.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Results&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Smiling models seemed more competent than those with a neutral face or thoughtful face.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WHHiwzdT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/a7dpo8qu6bkowut3bwyl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WHHiwzdT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/a7dpo8qu6bkowut3bwyl.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r-bbqd9k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/780i56zquwh999l06aue.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r-bbqd9k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/780i56zquwh999l06aue.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Gender bias&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The interesting thing is that the more often a person hires, the more competent he/she thinks women are; the less often, the more hr person is predisposed to think that women are, on average, less competent.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Summary&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you're a developer - smile on your resume photo, if you're a professional fighter - &lt;strong&gt;don't&lt;/strong&gt;. If you are a female developer - look for jobs where they hire quite frequently, they have less prejudice.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Thanks 🙌 for reading and good luck on your next tech interview!&lt;br&gt;
&lt;strong&gt;Check out 3800+ dev interview question here 👉 &lt;a href="https://devinterview.io/"&gt;Devinterview.io&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;References:&lt;br&gt;
&lt;a href="https://aps.onlinelibrary.wiley.com/doi/full/10.1111/ajpy.12285"&gt;The effect of three facial expressions on perception of competence of a software developer&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.researchgate.net/publication/7795717_Inferences_of_Competence_from_Faces_Predict_Election_Outcomes"&gt;Inferences of Competence from Faces Predict Election Outcomes&lt;/a&gt;&lt;/p&gt;

</description>
      <category>career</category>
      <category>beginners</category>
      <category>webdev</category>
      <category>womenintech</category>
    </item>
    <item>
      <title>Understanding Ruby - Enumerable - Intro and Interfaces</title>
      <author>Brandon Weaver</author>
      <pubDate>Thu, 11 Feb 2021 08:54:06 +0000</pubDate>
      <link>https://dev.to/baweaver/understanding-ruby-enumerable-intro-and-interfaces-29bk</link>
      <guid>https://dev.to/baweaver/understanding-ruby-enumerable-intro-and-interfaces-29bk</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction" class="anchor"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;Enumerable&lt;/code&gt;. Debatably one of, if not the, most powerful features in Ruby. As a majority of your time in programming is dealing with collections of items it's no surprise how frequently you'll see it used.&lt;/p&gt;

&lt;p&gt;This first article will cover implementing the interface for &lt;code&gt;Enumerable&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#difficulty" class="anchor"&gt;
  &lt;/a&gt;
  Difficulty
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Foundational&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Some knowledge required of functions in Ruby. This post focuses on foundational and fundamental knowledge for Ruby programmers.&lt;/p&gt;

&lt;p&gt;Prerequisite Reading:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/baweaver/understanding-ruby-blocks-procs-and-lambdas-24o0"&gt;Understanding Ruby - Blocks, Procs, and Lambdas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/baweaver/understanding-ruby-toproc-and-function-interfaces-2o1d"&gt;Understanding Ruby - to_proc and Function Interfaces&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/baweaver/understanding-ruby-triple-equals-2p9c"&gt;Understanding Ruby - Triple Equals&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/baweaver/understanding-ruby-comparable-34ki"&gt;Understanding Ruby - Comparable&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#enumerable" class="anchor"&gt;
  &lt;/a&gt;
  Enumerable
&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;Enumerable&lt;/code&gt; is an interface module that contains several methods for working with collections. Many Ruby classes implement the &lt;code&gt;Enumerable&lt;/code&gt; interface that look like collections. Chances are if it has an &lt;code&gt;each&lt;/code&gt; method it supports &lt;code&gt;Enumerable&lt;/code&gt;, and because of that it's quite ubiquitous in Ruby.&lt;/p&gt;

&lt;p&gt;So how are we going to cover such a large piece of the language? Categorically, and of course after we show how you can implement one of your own&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This idea was partially inspired by &lt;a href="https://github.com/BurdetteLamar"&gt;Lamar Burdette&lt;/a&gt;'s recent work on Ruby documentation, but takes its own direction.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#cards-in-a-hand" class="anchor"&gt;
  &lt;/a&gt;
  Cards in a Hand
&lt;/h2&gt;

&lt;p&gt;To start with, how do we implement &lt;code&gt;Enumerable&lt;/code&gt; ourselves? Via an &lt;code&gt;each&lt;/code&gt; method and including the module, much like &lt;code&gt;Comparable&lt;/code&gt; from the last post. We'll be re-exploring our &lt;code&gt;Card&lt;/code&gt; class from that article as well as making a &lt;code&gt;Hand&lt;/code&gt; to contain those cards.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#remembering-our-card" class="anchor"&gt;
  &lt;/a&gt;
  Remembering our Card
&lt;/h3&gt;

&lt;p&gt;Let's start with our &lt;code&gt;Card&lt;/code&gt; class from last time:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Card&lt;/span&gt;
  &lt;span class="kp"&gt;include&lt;/span&gt; &lt;span class="no"&gt;Comparable&lt;/span&gt;

  &lt;span class="no"&gt;SUITS&lt;/span&gt;        &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sx"&gt;%w(S H D C)&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;freeze&lt;/span&gt;
  &lt;span class="no"&gt;RANKS&lt;/span&gt;        &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sx"&gt;%w(2 3 4 5 6 7 8 9 10 J Q K A)&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;freeze&lt;/span&gt;
  &lt;span class="no"&gt;RANKS_SCORES&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;RANKS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;each_with_index&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;to_h&lt;/span&gt;

  &lt;span class="kp"&gt;include&lt;/span&gt; &lt;span class="no"&gt;Comparable&lt;/span&gt;

  &lt;span class="nb"&gt;attr_reader&lt;/span&gt; &lt;span class="ss"&gt;:suit&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:rank&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;initialize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;suit&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rank&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="vi"&gt;@suit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;suit&lt;/span&gt;
    &lt;span class="vi"&gt;@rank&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rank&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nc"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;from_str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;to_s&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="vi"&gt;@suit&lt;/span&gt;&lt;span class="si"&gt;}#{&lt;/span&gt;&lt;span class="vi"&gt;@rank&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;&amp;lt;&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;precedence&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;precedence&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;There's one new method here for convenience that gives us a &lt;code&gt;Card&lt;/code&gt; from a &lt;code&gt;String&lt;/code&gt;, letting us do this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="no"&gt;Card&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;from_str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'SA'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;That gets to be handy when we want an entire hand in a second.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#creating-a-hand" class="anchor"&gt;
  &lt;/a&gt;
  Creating a Hand
&lt;/h3&gt;

&lt;p&gt;Now let's take a look at a Hand class that might contain these cards:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Hand&lt;/span&gt;
  &lt;span class="kp"&gt;include&lt;/span&gt; &lt;span class="no"&gt;Enumerable&lt;/span&gt;

  &lt;span class="nb"&gt;attr_reader&lt;/span&gt; &lt;span class="ss"&gt;:cards&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;initialize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;cards&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="vi"&gt;@cards&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cards&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;sort&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nc"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;from_str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/[ ,]+/&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;map&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="no"&gt;Card&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;from_str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;to_s&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="vi"&gt;@cards&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="ss"&gt;:to_s&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;', '&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;each&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="vi"&gt;@cards&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;each&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;card&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;card&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Starting with &lt;code&gt;Enumerable&lt;/code&gt; features, we define an &lt;code&gt;each&lt;/code&gt; method at the bottom which takes a Block Function and calls it with each card from the cards in our &lt;code&gt;Hand&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Next we have a utility function like &lt;code&gt;Card&lt;/code&gt; had which allows us to make a &lt;code&gt;Hand&lt;/code&gt; from a &lt;code&gt;String&lt;/code&gt;, because otherwise that's a lot of typing:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;royal_flush&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Hand&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;from_str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'S10, SJ, SQ, SK, SA'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;With the above Enumerable code we can now use any of the &lt;code&gt;Enumerable&lt;/code&gt; methods against it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;royal_flush&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;reject&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="no"&gt;Card&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;from_str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'SQ'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}.&lt;/span&gt;&lt;span class="nf"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;', '&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# =&amp;gt; "SK, SA"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Nifty! Now with that down let's take a look at all of the shiny fun things in &lt;code&gt;Enumerable&lt;/code&gt;. We'll be using more generic examples from here on out.&lt;/p&gt;

&lt;p&gt;In the next few articles we'll really be digging into &lt;code&gt;Enumerable&lt;/code&gt;. This was broken up into multiple quickly published articles to make it a bit more readable, otherwise it's 30+ minutes to get through. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#note-on-aliases" class="anchor"&gt;
  &lt;/a&gt;
  Note on Aliases
&lt;/h2&gt;

&lt;p&gt;Ruby has many aliases, like &lt;code&gt;collect&lt;/code&gt; is an alias for &lt;code&gt;map&lt;/code&gt;. As I prefer &lt;code&gt;map&lt;/code&gt; I will be using that for examples. When you see a &lt;code&gt;/&lt;/code&gt; in the header in other sections, the first item will be the preference I will draw from, but you &lt;em&gt;could&lt;/em&gt; use the other name to the same effect.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#note-on-syntax" class="anchor"&gt;
  &lt;/a&gt;
  Note on Syntax
&lt;/h2&gt;

&lt;p&gt;You might see &lt;code&gt;#method_name&lt;/code&gt; or &lt;code&gt;.method_name&lt;/code&gt; mentioned in Ruby on occasion. This means Instance Method and Class Method respectively. You might also see it like &lt;code&gt;Enumerable#map&lt;/code&gt;, which means &lt;code&gt;map&lt;/code&gt; is an Instance Method of &lt;code&gt;Enumerable&lt;/code&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#wrapping-up" class="anchor"&gt;
  &lt;/a&gt;
  Wrapping Up
&lt;/h1&gt;

&lt;p&gt;The next few articles will be getting into the various parts of &lt;code&gt;Enumerable&lt;/code&gt;, grouped by functionality:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Transforming&lt;/li&gt;
&lt;li&gt;Predicate Conditions&lt;/li&gt;
&lt;li&gt;Searching and Filtering&lt;/li&gt;
&lt;li&gt;Sorting and Comparing&lt;/li&gt;
&lt;li&gt;Counting&lt;/li&gt;
&lt;li&gt;Grouping&lt;/li&gt;
&lt;li&gt;Combining&lt;/li&gt;
&lt;li&gt;Iterating and Taking&lt;/li&gt;
&lt;li&gt;Coercion&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;While &lt;code&gt;lazy&lt;/code&gt; is part of &lt;code&gt;Enumerable&lt;/code&gt; that deserves a post all its own, and we'll be getting to that one soon too.&lt;/p&gt;

&lt;p&gt;Want to keep up to date on what I'm writing and working on? &lt;a href="https://buttondown.email/baweaver/"&gt;Take a look at my new newsletter: The Lapidary Lemur&lt;/a&gt;&lt;/p&gt;

</description>
      <category>ruby</category>
      <category>rails</category>
    </item>
  </channel>
</rss>
