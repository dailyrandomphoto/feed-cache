<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Linux Cheat Sheet For Beginners</title>
      <author>Suhail Kakar</author>
      <pubDate>Wed, 04 Aug 2021 03:56:25 +0000</pubDate>
      <link>https://dev.to/suhailkakar/linux-cheat-sheet-for-beginners-5830</link>
      <guid>https://dev.to/suhailkakar/linux-cheat-sheet-for-beginners-5830</guid>
      <description>&lt;p&gt;If you're not using the terminal, Linux commands may appear scary at first by once you start using them you will understand them very easily On a Linux system, there are numerous commands for executing operations and procedures.&lt;/p&gt;

&lt;p&gt;Having a list of commands on hand is useful whether you are new to Linux or an experienced user.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#file-permission-commands"&gt;
  &lt;/a&gt;
  File Permission commands
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;

&lt;thead&gt;

&lt;tr&gt;

&lt;th&gt;Command&lt;/th&gt;

&lt;th&gt;Description&lt;/th&gt;

&lt;/tr&gt;

&lt;/thead&gt;

&lt;tbody&gt;

&lt;tr&gt;

&lt;td&gt;ls-l&lt;/td&gt;

&lt;td&gt;to show file type and access permission&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;r&lt;/td&gt;

&lt;td&gt;read permission&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;w&lt;/td&gt;

&lt;td&gt;write permission&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;x&lt;/td&gt;

&lt;td&gt;execute permission&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;-=&lt;/td&gt;

&lt;td&gt;no permission&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;Chown user&lt;/td&gt;

&lt;td&gt;For changing the ownership of a file/directory&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;Chown user:group filename&lt;/td&gt;

&lt;td&gt;change the user as well as group for a file or directory&lt;/td&gt;

&lt;/tr&gt;

&lt;/tbody&gt;

&lt;/table&gt;&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#hardware-commands"&gt;
  &lt;/a&gt;
  Hardware commands
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;

&lt;tr&gt;

&lt;th&gt;Command&lt;/th&gt;

&lt;th&gt;Description&lt;/th&gt;

&lt;/tr&gt;

&lt;/thead&gt;

&lt;tbody&gt;

&lt;tr&gt;

&lt;td&gt;dmesg&lt;/td&gt;

&lt;td&gt;Displays bootup messages&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;cat /proc/cpuinfo&lt;/td&gt;

&lt;td&gt;Displays more information about CPU e.g model, model name, cores, vendor id&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;cat /proc/meminfo&lt;/td&gt;

&lt;td&gt;Displays more information about hardware memory e.g. Total and Free memory&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;lshw&lt;/td&gt;

&lt;td&gt;Displays information about system's hardware configuration&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;lsblk&lt;/td&gt;

&lt;td&gt;Displays block devices related information&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;free -m&lt;/td&gt;

&lt;td&gt;Displays free and used memory in the system (-m flag indicates memory in MB)&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;lspci -tv&lt;/td&gt;

&lt;td&gt;Displays PCI devices in a tree-like diagram&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;lsusb -tv&lt;/td&gt;

&lt;td&gt;Displays USB devices in a tree-like diagram&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;dmidecode&lt;/td&gt;

&lt;td&gt;Displays hardware information from the BIOS&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;hdparm -i /dev/xda&lt;/td&gt;

&lt;td&gt;Displays information about disk data&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;hdparm -tT /dev/xda &lt;/td&gt;

&lt;td&gt;Conducts a read speed test on device xda&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;badblocks -s /dev/xda&lt;/td&gt;

&lt;td&gt;Tests  for unreadable blocks on disk&lt;/td&gt;

&lt;/tr&gt;

&lt;/tbody&gt;

&lt;/table&gt;&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#basic-linux-commands"&gt;
  &lt;/a&gt;
  Basic Linux commands
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;

&lt;thead&gt;

&lt;tr&gt;

&lt;th&gt;Command&lt;/th&gt;

&lt;th&gt;Description&lt;/th&gt;

&lt;/tr&gt;

&lt;/thead&gt;

&lt;tbody&gt;

&lt;tr&gt;

&lt;td&gt;ls&lt;/td&gt;

&lt;td&gt;Lists all files and directories in the present working directory&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;ls-R&lt;/td&gt;

&lt;td&gt;Lists files in sub-directories as well&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;ls-a&lt;/td&gt;

&lt;td&gt;Lists hidden files as well&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;ls-al&lt;/td&gt;

&lt;td&gt;Lists files and directories with detailed information like permissions,size, owner, etc.&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;cd or cd ~&lt;/td&gt;

&lt;td&gt;Navigate to HOME directory&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;cd ..&lt;/td&gt;

&lt;td&gt;Move one level up&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;cd&lt;/td&gt;

&lt;td&gt;To change to a particular directory&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;cd /&lt;/td&gt;

&lt;td&gt;Move to the root directory&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;cat &amp;gt; filename&lt;/td&gt;

&lt;td&gt;Creates a new file&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;cat filename&lt;/td&gt;

&lt;td&gt;Displays the file content&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;cat file1 file2 &amp;gt; file3&lt;/td&gt;

&lt;td&gt;Joins two files (file1, file2) and stores the output in a new file (file3)&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;mv file "new file path"&lt;/td&gt;

&lt;td&gt;Moves the files to the new location&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;mv filename new_file_name&lt;/td&gt;

&lt;td&gt;Renames the file to a new filename&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;sudo&lt;/td&gt;

&lt;td&gt;Allows regular users to run programs with the security privileges of the superuser or root&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;rm filename&lt;/td&gt;

&lt;td&gt;Deletes a file&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;man&lt;/td&gt;

&lt;td&gt;Gives help information on a command&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;history&lt;/td&gt;

&lt;td&gt;Gives a list of all past commands typed in the current terminal session&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;clear&lt;/td&gt;

&lt;td&gt;Clears the terminal&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;mkdir directoryname&lt;/td&gt;

&lt;td&gt;Creates a new directory in the present working directory or a at the specified path&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;rmdir&lt;/td&gt;

&lt;td&gt;Deletes a directory&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;mv&lt;/td&gt;

&lt;td&gt;Renames a directory&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;pr -x&lt;/td&gt;

&lt;td&gt;Divides the file into x columns&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;pr -h&lt;/td&gt;

&lt;td&gt;Assigns a header to the file&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;pr -n&lt;/td&gt;

&lt;td&gt;Denotes the file with Line Numbers&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;lp -nc , lpr c&lt;/td&gt;

&lt;td&gt;Prints "c" copies of the File&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt; lp-d lp-P&lt;/td&gt;

&lt;td&gt;Specifies name of the printer&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;apt-get&lt;/td&gt;

&lt;td&gt;Command used to install and update packages&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;mail -s 'subject' -c 'cc-address' -b 'bcc-address' 'to-address'&lt;/td&gt;

&lt;td&gt;Command to send email&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;mail -s "Subject" to-address &amp;lt; Filename&lt;/td&gt;

&lt;td&gt;Command to send email with attachment&lt;/td&gt;

&lt;/tr&gt;

&lt;/tbody&gt;

&lt;/table&gt;&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#environment-variables-command"&gt;
  &lt;/a&gt;
  Environment Variables command
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;

&lt;thead&gt;

&lt;tr&gt;

&lt;th&gt;Command&lt;/th&gt;

&lt;th&gt;Description&lt;/th&gt;

&lt;/tr&gt;

&lt;/thead&gt;

&lt;tbody&gt;

&lt;tr&gt;

&lt;td&gt;echo $VARIABLE&lt;/td&gt;

&lt;td&gt;To display value of a variable&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;env&lt;/td&gt;

&lt;td&gt;Displays all environment variables&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;VARIABLE_NAME= variable_value&lt;/td&gt;

&lt;td&gt;Create a new variable&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;Unset&lt;/td&gt;

&lt;td&gt;Remove a variable&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;export Variable=value&lt;/td&gt;

&lt;td&gt;To set value of an environment variable&lt;/td&gt;

&lt;/tr&gt;

&lt;/tbody&gt;

&lt;/table&gt;&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#user-management-commands-of-linux"&gt;
  &lt;/a&gt;
  User management commands of linux
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;

&lt;thead&gt;

&lt;tr&gt;

&lt;th&gt;Command&lt;/th&gt;

&lt;th&gt;Description&lt;/th&gt;

&lt;/tr&gt;

&lt;/thead&gt;

&lt;tbody&gt;

&lt;tr&gt;

&lt;td&gt;sudo adduser username&lt;/td&gt;

&lt;td&gt;To display value of a variable&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;sudo passwd -l 'username'&lt;/td&gt;

&lt;td&gt;Displays all environment variables&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;sudo userdel -r 'username'&lt;/td&gt;

&lt;td&gt;Create a new variable&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;sudo usermod -a -G GROUPNAME USERNAME&lt;/td&gt;

&lt;td&gt;Remove a variable&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;sudo deluser USER GROUPNAME&lt;/td&gt;

&lt;td&gt;To set value of an environment variable&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;finger&lt;/td&gt;

&lt;td&gt;Gives information on all logged in user&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;finger username&lt;/td&gt;

&lt;td&gt;Gives information of a particular user&lt;/td&gt;

&lt;/tr&gt;

&lt;/tbody&gt;

&lt;/table&gt;&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#network-command"&gt;
  &lt;/a&gt;
  Network command
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;

&lt;thead&gt;

&lt;tr&gt;

&lt;th&gt;Command&lt;/th&gt;

&lt;th&gt;Description&lt;/th&gt;

&lt;/tr&gt;

&lt;/thead&gt;

&lt;tbody&gt;

&lt;tr&gt;

&lt;td&gt;SSH username@ip-address or hostname&lt;/td&gt;

&lt;td&gt;login into a remote Linux machine using SSH&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;Ping hostname="" or =""&lt;/td&gt;

&lt;td&gt;To ping and Analyzing network and host connections&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;dir&lt;/td&gt;

&lt;td&gt;Display files in the current directory of a remote computer&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;cd "dirname"&lt;/td&gt;

&lt;td&gt;change directory to "dirname" on a remote computer&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;put file&lt;/td&gt;

&lt;td&gt;upload 'file' from local to remote computer&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;get file&lt;/td&gt;

&lt;td&gt;Download 'file' from remote to local computer&lt;/td&gt;

&lt;/tr&gt;


&lt;tr&gt;

&lt;td&gt;ip addr show                &lt;/td&gt;

&lt;td&gt;Displays IP addresses and all the network interfaces&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;ip address add 192.168.0.1/24 dev eth0&lt;/td&gt;

&lt;td&gt;Assigns IP address 192.168.0.1 to interface eth0&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;ifconfig                         &lt;/td&gt;

&lt;td&gt;Displays IP addresses of all network interfaces&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;ping  host                    &lt;/td&gt;

&lt;td&gt;ping command sends an ICMP echo request to establish a connection to server / PC&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;whois domain              &lt;/td&gt;

&lt;td&gt;Retrieves more information about a domain name&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;dig domain                      &lt;/td&gt;

&lt;td&gt;Retrieves DNS information about the domain&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;dig -x host                &lt;/td&gt;

&lt;td&gt;Performs reverse lookup on a domain&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;host google.com       &lt;/td&gt;

&lt;td&gt;Performs an IP lookup for the domain name&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;hostname -i                  &lt;/td&gt;

&lt;td&gt;Displays local IP address&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;wget file_name         &lt;/td&gt;

&lt;td&gt;Downloads a file from an online source&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;netstat -pnltu  &lt;/td&gt;

&lt;td&gt;Displays all active listening ports&lt;/td&gt;

&lt;/tr&gt;


&lt;tr&gt;

&lt;td&gt;quit&lt;/td&gt;

&lt;td&gt;Logout&lt;/td&gt;

&lt;/tr&gt;

&lt;/tbody&gt;

&lt;/table&gt;&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#process-command"&gt;
  &lt;/a&gt;
  Process command
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;

&lt;thead&gt;

&lt;tr&gt;

&lt;th&gt;Command&lt;/th&gt;

&lt;th&gt;Description&lt;/th&gt;

&lt;/tr&gt;

&lt;/thead&gt;

&lt;tbody&gt;

&lt;tr&gt;

&lt;td&gt;bg&lt;/td&gt;

&lt;td&gt;To send a process to the background&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;fg&lt;/td&gt;

&lt;td&gt;To run a stopped process in the foreground&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;top&lt;/td&gt;

&lt;td&gt;Details on all Active Processes&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;ps&lt;/td&gt;

&lt;td&gt;Give the status of processes running for a user&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;ps PID&lt;/td&gt;

&lt;td&gt;Gives the status of a particular process&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;pidof&lt;/td&gt;

&lt;td&gt;Gives the Process ID (PID) of a process&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;kill PID&lt;/td&gt;

&lt;td&gt;Kills a process&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;nice&lt;/td&gt;

&lt;td&gt;Starts a process with a given priority&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;renice&lt;/td&gt;

&lt;td&gt;Changes priority of an already running process&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;df&lt;/td&gt;

&lt;td&gt;Gives free hard disk space on your system&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;free&lt;/td&gt;

&lt;td&gt;Gives free RAM on your system&lt;/td&gt;

&lt;/tr&gt;

&lt;/tbody&gt;

&lt;/table&gt;&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#system-information"&gt;
  &lt;/a&gt;
  System Information
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;

&lt;thead&gt;

&lt;tr&gt;

&lt;th&gt;Command&lt;/th&gt;

&lt;th&gt;Description&lt;/th&gt;

&lt;/tr&gt;

&lt;/thead&gt;

&lt;tbody&gt;

&lt;tr&gt;

&lt;td&gt;time&lt;/td&gt;

&lt;td&gt;It is a utility that measures the time taken by a program to execute. &lt;/td&gt;


&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;/proc&lt;/td&gt;

&lt;td&gt;The files under /proc displays system information. &lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;dmseg&lt;/td&gt;

&lt;td&gt;This command is used to print the contents of the bootup messages displayed by the kernel. This is particularly useful in debugging issues.&lt;/td&gt;


&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;df&lt;/td&gt;

&lt;td&gt;Displays the information about the space on the mounted file-systems.&lt;/td&gt;


&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;who&lt;/td&gt;

&lt;td&gt;Displays information about the logged in users including their login time.&lt;/td&gt;


&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;w&lt;/td&gt;

&lt;td&gt;This command displays who are logged in into the system and the processes they are running. &lt;/td&gt;


&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;users&lt;/td&gt;

&lt;td&gt;This command prints the name of the currently logged in users.&lt;/td&gt;


&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;last&lt;/td&gt;

&lt;td&gt;This command displays the time of the logged-out users. This also displays the information when the computer was rebooted.&lt;/td&gt;


&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;lastlog&lt;/td&gt;

&lt;td&gt;Displays a list of the users and the time/day of their login.&lt;/td&gt;


&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;whoami&lt;/td&gt;

&lt;td&gt;It tells the username of the logged in user.&lt;/td&gt;


&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;free&lt;/td&gt;

&lt;td&gt;Displays memory status. (Total, Used, Free, cached, Swap)&lt;/td&gt;


&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;uptime | w&lt;/td&gt;

&lt;td&gt;It displays how long the computer has been up and running. Additionally, it displays the number of users and the processor load.&lt;/td&gt;


&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;uname&lt;/td&gt;

&lt;td&gt;It is used to display system information such as OS type, kernel version, etc.&lt;/td&gt;



&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;xargs&lt;/td&gt;

&lt;td&gt;This command is used to run a command as many times as required. &lt;/td&gt;


&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;date&lt;/td&gt;

&lt;td&gt;It is used to display the system. It can also be used to set the date/time.&lt;/td&gt;


&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;cal&lt;/td&gt;

&lt;td&gt;This command displays the calendar of the current month.&lt;/td&gt;


&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;acpi&lt;/td&gt;

&lt;td&gt;This command is used to display the battery status and other ACPI(Advanced Configuration and Power Information) related  information.&lt;/td&gt;


&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;acpi_available&lt;/td&gt;

&lt;td&gt;This command is used to test if the ACPI subsystem is available.&lt;/td&gt;


&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;aptitude &lt;/td&gt;


&lt;td&gt; &lt;/td&gt;

&lt;/tr&gt;

&lt;/tbody&gt;

&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#vi-editing-commands"&gt;
  &lt;/a&gt;
  VI Editing Commands
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;

&lt;thead&gt;

&lt;tr&gt;

&lt;th&gt;Command&lt;/th&gt;

&lt;th&gt;Description&lt;/th&gt;

&lt;/tr&gt;

&lt;/thead&gt;

&lt;tbody&gt;

&lt;tr&gt;

&lt;td&gt;i&lt;/td&gt;

&lt;td&gt;Insert at cursor (goes into insert mode)&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;a&lt;/td&gt;

&lt;td&gt;Write after cursor (goes into insert mode)&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;A&lt;/td&gt;

&lt;td&gt;Write at the end of line (goes into insert mode)&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;ESC&lt;/td&gt;

&lt;td&gt;Terminate insert mode&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;u&lt;/td&gt;

&lt;td&gt;Undo last change&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;U&lt;/td&gt;

&lt;td&gt;Undo all changes to the entire line&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;o&lt;/td&gt;

&lt;td&gt;Open a new line (goes into insert mode)&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;dd&lt;/td&gt;

&lt;td&gt;Delete line&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;3dd&lt;/td&gt;

&lt;td&gt;Delete 3 lines&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;D&lt;/td&gt;

&lt;td&gt;Delete contents of line after the cursor&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;C&lt;/td&gt;

&lt;td&gt;Delete contents of a line after the cursor and insert new text. Press ESC key to end insertion.&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;dw&lt;/td&gt;

&lt;td&gt;Delete word&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;4dw&lt;/td&gt;

&lt;td&gt;Delete 4 words&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;cw&lt;/td&gt;

&lt;td&gt;Change word&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;x&lt;/td&gt;

&lt;td&gt;Delete character at the cursor&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;r&lt;/td&gt;

&lt;td&gt;Replace character&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;R&lt;/td&gt;

&lt;td&gt;Overwrite characters from cursor onward&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;s&lt;/td&gt;

&lt;td&gt;Substitute one character under cursor continue to insert&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;S&lt;/td&gt;

&lt;td&gt;Substitute entire line and begin to insert at the beginning of the line&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;~&lt;/td&gt;

&lt;td&gt;Change case of individual character&lt;/td&gt;

&lt;/tr&gt;

&lt;/tbody&gt;

&lt;/table&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;References: Linoxide, Guru 99, Hackr, Loggly, Phoenixnap&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;I hope you found this cheatsheet helpful. If you need any help please let me know in the comment section&lt;/p&gt;

&lt;p&gt;Let's connect on  &lt;a href="https://twitter.com/suhailkakar"&gt;Twitter&lt;/a&gt;  and  &lt;a href="https://www.linkedin.com/in/suhailkakar/"&gt;LinkedIn&lt;/a&gt;  &lt;/p&gt;

&lt;p&gt;👋 Thanks for reading, See you next time&lt;/p&gt;

</description>
      <category>linux</category>
      <category>ubuntu</category>
      <category>tutorial</category>
      <category>security</category>
    </item>
    <item>
      <title>Git Command You Should Use Everyday</title>
      <author>Derdw</author>
      <pubDate>Wed, 04 Aug 2021 03:36:31 +0000</pubDate>
      <link>https://dev.to/derdw/git-command-you-should-use-everyday-m8i</link>
      <guid>https://dev.to/derdw/git-command-you-should-use-everyday-m8i</guid>
      <description>&lt;p&gt;&lt;span&gt;When I started my career, I was always afraid of losing my code changes. Sometimes, I would copy the code to text files just to be sure that I won't miss something.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;That's not a great practice. If you know how to use git properly, you won't have these doubts.&lt;/p&gt;
&lt;p&gt;Git has everything you need to make you safe. And much more.&lt;/p&gt;
&lt;p&gt;Let's dive in.&lt;/p&gt;

&lt;p&gt;&lt;span&gt;Read More: &lt;/span&gt;&lt;span&gt;&lt;b&gt;&lt;a href="https://www.codelivly.com/11-git-commands-i-use-every-day/"&gt;20 Git Command i use Everyday&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;

</description>
      <category>git</category>
    </item>
    <item>
      <title>Best web development-roadmap-2021</title>
      <author>Derdw</author>
      <pubDate>Wed, 04 Aug 2021 03:32:59 +0000</pubDate>
      <link>https://dev.to/derdw/best-web-development-roadmap-2021-2ddl</link>
      <guid>https://dev.to/derdw/best-web-development-roadmap-2021-2ddl</guid>
      <description>&lt;p&gt; &lt;/p&gt;
&lt;p&gt;There has never been a better time to learn to code or make a career change to software engineering. The demand for web developers is at an all-time high, and it’s only increasing. There are both free and premium tutorials online that teach you the skills to get a job as a developer — no CS degree required 🤓.&lt;/p&gt;
&lt;p id="561d"&gt;This article details the needed skills and the corresponding tutorials to learn them effectively. The illustrated guide is provided by &lt;b&gt;&lt;a href="http://www.codelivly.com"&gt;Codelivly&lt;/a&gt;&lt;/b&gt; and can be found on codelivly  — Codelivly work is excellent so be sure to star the repo and subscribe to his newsletter to support his efforts. Don’t be intimidated by the map. It may seem like a lot, but I’ll break it down so you can learn each part step-by-step.&lt;/p&gt;
&lt;p id="dda0"&gt;This article will be divided into the following sections:&lt;/p&gt;
&lt;p id="dda0"&gt;1. &lt;b&gt;&lt;a href="https://www.codelivly.com/web-developer-roadmap-2021/"&gt;Full Stack Web Development&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;
&lt;p id="dda0"&gt;2. &lt;b&gt;&lt;a href="https://www.codelivly.com/frontend-web-developer-roadmap/"&gt;Frontend Web Development&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;
&lt;p id="dda0"&gt;3. &lt;b&gt;&lt;a href="https://www.codelivly.com/backend-web-developer-roadmap/"&gt;Backend Web Development&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;
&lt;p id="dda0"&gt;4. &lt;b&gt;&lt;a href="https://www.codelivly.com/the-best-python-frameworks-for-web-development-in-2021/"&gt;Best Python Framework For Web Development&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;







</description>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Create Custom Captcha in HTML CSS &amp; JavaScript</title>
      <author>Afzal Imam</author>
      <pubDate>Wed, 04 Aug 2021 03:03:58 +0000</pubDate>
      <link>https://dev.to/afzalimamias/create-custom-captcha-in-html-css-javascript-1mim</link>
      <guid>https://dev.to/afzalimamias/create-custom-captcha-in-html-css-javascript-1mim</guid>
      <description>&lt;p&gt;Hey friends, today in this blog, you’ll learn how to create Custom Captcha in HTML CSS &amp;amp; JavaScript. In the earlier blog, I have shared how to Detect User Browser using JavaScript, and it’s time to create a simple captcha program.&lt;/p&gt;

&lt;p&gt;Mostly, Captcha is used on the comment or contact form of the websites to restrict robots (bot) from commenting on a blog post or sending a message to the admin. There can be random images or codes in the captcha, and the users must have to select correct images or match the codes to complete their task.&lt;/p&gt;

&lt;p&gt;In this small project [Custom Captcha in JavaScript], there is an image with the random 6 characters and numbers. You can also refresh the captcha code and get a new one using the reload button.&lt;/p&gt;

&lt;p&gt;In the input field, you have to enter the captcha codes that are shown on the image. If your codes matched with the captcha codes, then there is appears a success message else there appears an error message. If you’ve matched the codes, then after 4 seconds there will be generated a new one captcha code.&lt;/p&gt;

&lt;p&gt;I hope you liked this simple captcha program and want to get source codes but don’t worry I have given codes and source code files at the bottom of this page from where you can copy-paste codes the source code files.&lt;/p&gt;

&lt;p&gt;But before copying codes, let’s understand the basic codes and concepts of this program. At first, in the JavaScript file, I have stored all characters and numbers in the array, then inside for loop, using Math.random() function I got 6 random characters from the given array.&lt;/p&gt;

&lt;p&gt;And passed these codes or characters in the captcha by adding space between each character. After this, I got user-entered values, split them, and joined them with space (‘ ‘) so users don’t need to enter spaces to match the codes.&lt;/p&gt;

&lt;p&gt;Once I joined the user values then I matched this user value with the captcha codes. If the value is not matched I’ve shown an error message, and if the value is matched I’ve shown a success message and generate the new random codes after 4 seconds using the setTimeout() function.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-custom-captcha-in-javascript-source-codes"&gt;
  &lt;/a&gt;
  Create Custom Captcha in JavaScript [Source Codes]
&lt;/h2&gt;

&lt;p&gt;To create this program &lt;strong&gt;[Custom Captcha in JavaScript]&lt;/strong&gt;. First, you need to create three Files: &lt;strong&gt;HTML, CSS &amp;amp; JavaScript File&lt;/strong&gt;. After creating these files just paste the following codes into your file.&lt;/p&gt;

&lt;p&gt;First, create an HTML file with the name of &lt;strong&gt;index.html&lt;/strong&gt; and paste the given codes into your HTML file. You’ve to create a file with .html extension and remember the image that is used on this program will not appear.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;!-- Coding By CodingNepal - youtube.com/codingnepal --&amp;gt;
&amp;lt;html lang="en"&amp;gt;
&amp;lt;head&amp;gt;
  &amp;lt;meta charset="UTF-8"&amp;gt;
  &amp;lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&amp;gt;
  &amp;lt;title&amp;gt;Custom Captcha in JavaScript | CodingNepal&amp;lt;/title&amp;gt;
  &amp;lt;link rel="stylesheet" href="style.css"&amp;gt;
  &amp;lt;!-- Font Awesome CDN Link for Icons --&amp;gt;
  &amp;lt;link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css"/&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
  &amp;lt;div class="wrapper"&amp;gt;
    &amp;lt;header&amp;gt;Captcha in JavaScript&amp;lt;/header&amp;gt;
    &amp;lt;div class="captcha-area"&amp;gt;
      &amp;lt;div class="captcha-img"&amp;gt;
        &amp;lt;img src="captcha-bg.png" alt="Captch Background"&amp;gt;
        &amp;lt;span class="captcha"&amp;gt;&amp;lt;/span&amp;gt;
      &amp;lt;/div&amp;gt;
      &amp;lt;button class="reload-btn"&amp;gt;&amp;lt;i class="fas fa-redo-alt"&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/button&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;form action="#" class="input-area"&amp;gt;
      &amp;lt;input type="text" placeholder="Enter captcha" maxlength="6" spellcheck="false" required&amp;gt;
      &amp;lt;button class="check-btn"&amp;gt;Check&amp;lt;/button&amp;gt;
    &amp;lt;/form&amp;gt;
    &amp;lt;div class="status-text"&amp;gt;&amp;lt;/div&amp;gt;
  &amp;lt;/div&amp;gt;
  &amp;lt;script src="script.js"&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Last, create a JavaScript file with the name of script.js and paste the given codes in your JavaScript file. Remember, you’ve to create a file with .js extension.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const captcha = document.querySelector(".captcha"),
reloadBtn = document.querySelector(".reload-btn"),
inputField = document.querySelector(".input-area input"),
checkBtn = document.querySelector(".check-btn"),
statusTxt = document.querySelector(".status-text");

//storing all captcha characters in array
let allCharacters = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O',
                     'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'a', 'b', 'c', 'd',
                     'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's',
                     't', 'u', 'v', 'w', 'x', 'y', 'z', 0, 1, 2, 3, 4, 5, 6, 7, 8, 9];
function getCaptcha(){
  for (let i = 0; i &amp;lt; 6; i++) { //getting 6 random characters from the array
    let randomCharacter = allCharacters[Math.floor(Math.random() * allCharacters.length)];
    captcha.innerText += ` ${randomCharacter}`; //passing 6 random characters inside captcha innerText
  }
}
getCaptcha(); //calling getCaptcha when the page open
//calling getCaptcha &amp;amp; removeContent on the reload btn click
reloadBtn.addEventListener("click", ()=&amp;gt;{
  removeContent();
  getCaptcha();
});

checkBtn.addEventListener("click", e =&amp;gt;{
  e.preventDefault(); //preventing button from it's default behaviour
  statusTxt.style.display = "block";
  //adding space after each character of user entered values because I've added spaces while generating captcha
  let inputVal = inputField.value.split('').join(' ');
  if(inputVal == captcha.innerText){ //if captcha matched
    statusTxt.style.color = "#4db2ec";
    statusTxt.innerText = "Nice! You don't appear to be a robot.";
    setTimeout(()=&amp;gt;{ //calling removeContent &amp;amp; getCaptcha after 2 seconds
      removeContent();
      getCaptcha();
    }, 2000);
  }else{
    statusTxt.style.color = "#ff0000";
    statusTxt.innerText = "Captcha not matched. Please try again!";
  }
});

function removeContent(){
 inputField.value = "";
 captcha.innerText = "";
 statusTxt.style.display = "none";
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That’s all, now you’ve successfully created a Custom Captcha in &lt;strong&gt;HTML CSS &amp;amp; JavaScript&lt;/strong&gt;. So this is all for today. &lt;br&gt;
Thanks!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Also Read&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://dev.to/afzalimamias/6-key-lesson-s-to-learn-from-rich-dad-poor-dad-for-programmers-4knp"&gt;6 Key Lesson’s to Learn From Rich Dad Poor Dad for Programmers&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For more details please visit &lt;a href="https://codewithimam.blogspot.com/"&gt;Code With Imam&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
      <category>captcha</category>
    </item>
    <item>
      <title>Top 20+ vue.js frameworks and libraries for your next project</title>
      <author>oyedeletemitope</author>
      <pubDate>Wed, 04 Aug 2021 01:23:14 +0000</pubDate>
      <link>https://dev.to/oyedeletemitope/top-20-vue-js-frameworks-and-libraries-for-your-next-project-2o4d</link>
      <guid>https://dev.to/oyedeletemitope/top-20-vue-js-frameworks-and-libraries-for-your-next-project-2o4d</guid>
      <description>&lt;p&gt;Vue is a progressive framework for building user interfaces. Unlike other monolithic frameworks, It offers a functionality-driven structure, in-detail documentation, and an easy learning curve to make it a favorable choice for beginners and experienced developers. It is an opportunity to move from other JavaScript frameworks to Vue.js&lt;br&gt;
In this article, we will be exploring over 20 vue frameworks and libraries that you might find useful for your next vue based projects.&lt;br&gt;
And also, each frameworks and libraries are spitted into three categories for easier navigation:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;SSR/SPA : In this category, we will be listing vue most popular spa (single page application) and ssr (server side rendered) application generators.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Component-based : From ui library to helpful custom component necessary for the success of your project.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Miscellaneous:  All other important library that does not fall between the two categories above.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here we go!!!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ssrspa-generator"&gt;
  &lt;/a&gt;
  SSR/SPA Generator
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1nuxt"&gt;
  &lt;/a&gt;
  1.Nuxt
&lt;/h3&gt;

&lt;p&gt;Server-Side Rendering is one of the most popular techniques to render SPAs on the server instead of the browser. It allows the website to have a faster page load time, and that is the key to a good user experience. Nuxt.js is built on SSR features, and with Nuxt, you can create SSR apps, PWAs, and SPAs, or you can use it as a static site generator. To get started &lt;a href="https://nuxtjs.org"&gt;Click here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2vuepress"&gt;
  &lt;/a&gt;
  2.VuePress
&lt;/h3&gt;

&lt;p&gt;In layman’s terms, VuePress is a big player in Vue’s ecosystem that is widely used as a Vue-powered static site generator tool. It was presented for writing technical documentation, however, now it is used as a powerful headless CMS and the significant benefit of VuePress is that it lets you include Vue components into your Markdown files. VuePress provides extra power and flexibility to build your website like a regular Vue app. To get started &lt;a href="https://vuepress.vuejs.org"&gt;Click here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3gridsome"&gt;
  &lt;/a&gt;
  3.Gridsome
&lt;/h3&gt;

&lt;p&gt;Gridsome is a modern website development framework for creating fast and secure websites and deploy it to Netlify or Amazon s3 – CDN. Through it has been lately introduced; however, it has gained immense popularity and followers amongst Vue developers. Gridsome creators were influenced by Gatsby.js – a site generator for React. Gridsome generates SEO-friendly HTML files based on the data source. The data source can be JSON, Markdown, CSV, Drupal, WordPress, MongoDB or Airtable, etc. Once the content is loaded, it turns into a single GraphQL Data Layer for centralized data management, and then you can extract it to build and deploy your Vue application. To get started &lt;a href="https://gridsome.org"&gt;Click here&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#componentbased-framework"&gt;
  &lt;/a&gt;
  Component-based framework
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1primevue"&gt;
  &lt;/a&gt;
  1.Primevue
&lt;/h3&gt;

&lt;p&gt;A Vue Component Library for amazing user interface design. Primevue is also available for Angular, Java, and React. To get started&lt;a href="https://madewithvuejs.com/primevue"&gt;Click here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2vuestic"&gt;
  &lt;/a&gt;
  2.Vuestic
&lt;/h3&gt;

&lt;p&gt;Vuestic is a Vue component library to build responsive dashboards using the functionality of Material Forms, i18n, Bootstrap 4, Webpack, and Google maps. Vasili Savitski designed this library and Epicmax developed it. To get started&lt;a href="https://vuestic.dev/"&gt;Click here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-vee-validate"&gt;
  &lt;/a&gt;
  3. Vee Validate
&lt;/h3&gt;

&lt;p&gt;Another validation library for Vue that keeps a check on input and displaying errors. The PHP Framework Laravel’s validation inspired Vue to come up with this library. It is template-based, has zero dependencies, and has support from 40+ locales. It is one of the vue best practices to include Vue Validation while developing your web application. To get started&lt;a href="https://vee-validate.logaretm.com/v4/"&gt;Click here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4weex"&gt;
  &lt;/a&gt;
  4.Weex
&lt;/h3&gt;

&lt;p&gt;This one is a UI framework for Vue mobile applications for building modern and lightweight apps. Vue Developers will experience a new and vibrant mobile development experience when using Weex. To get started&lt;a href="http://emas.weex.io/guide/use-vue-in-weex.html#runtime-only-build"&gt;Click here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5filepond"&gt;
  &lt;/a&gt;
  5.Filepond
&lt;/h3&gt;

&lt;p&gt;Filepond is a JS component library that is available for Angular, Vue, React, Svelte, and jQuery which can help you upload anything from anywhere. It offers amazing flexibility, easy optimization of images before uploading, and a flawless UX. To get started&lt;a href="https://pqina.nl/filepond/docs/getting-started/installation/vue/"&gt;Click here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6mint-ui"&gt;
  &lt;/a&gt;
  6.Mint UI
&lt;/h3&gt;

&lt;p&gt;Mint UI is a lightweight library that enables using varied CSS and JS components such that you can build mobile apps and cohesive web pages at a much faster rate. It provides an iOS-like theme for your mobile application components and it is loaded on demand, hence no file-size issues. To get started&lt;a href="https://madewithvuejs.com/mint-ui"&gt;Click here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#7vux"&gt;
  &lt;/a&gt;
  7.Vux
&lt;/h3&gt;

&lt;p&gt;Vux is a Vue Component library having Chinese origin and it has various mobile UI components as well as WeUI components from the company WeChat. The Vux workflow + Vue-loader + Webpack are supporting the Vux. Though most of the documentation of this library is in Chinese and very little English translation is available, but you can get help from the community. To get started&lt;a href="https://madewithvuejs.com/vux"&gt;Click here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#8iview"&gt;
  &lt;/a&gt;
  8.iView
&lt;/h3&gt;

&lt;p&gt;Based on Vue.js 2, iView is a popular UI toolkit providing several widgets and UI components having a clean and elegant design. The component library comes with its offline documentation and CLI tool to visualize projects. To get started&lt;a href="https://www.iviewui.com"&gt;Click here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#9vuelidate"&gt;
  &lt;/a&gt;
  9.Vuelidate
&lt;/h3&gt;

&lt;p&gt;A minimalistic validation component library for Vue, which is lightweight, simple, and is model-based. Vuelidate is decoupled from templates and has support from nested models, function composition, and collection validations. It helps you validate data from varied sources like computed values, Vuex getters, etc.&lt;br&gt;
To get started&lt;a href="https://vuelidate.js.org"&gt;Click here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#10eaglejs"&gt;
  &lt;/a&gt;
  10.Eagle.js
&lt;/h3&gt;

&lt;p&gt;Eagle is a Vue framework that presents a cool web-based slideshow and supports interactive widgets, themes, animations, reusable components, and more. You can easily customize the Eagle API for your Vue project. To get started&lt;a href="https://www.vuescript.com/hackable-slideshow-framework-built-vue-js-eagle-js/"&gt;Click here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#11bootstrap-vue"&gt;
  &lt;/a&gt;
  11.Bootstrap Vue
&lt;/h3&gt;

&lt;p&gt;Bootstrap Vue is a frontend CSS and Vue component library that simply eliminates the JavaScript in the routine bootstrap components with Vue code. With Bootstrap Vue, you can build mobile-first and responsive, projects making use of frontend CSS library — Bootstrap v4. Bootstrap Vue is one of the fastest ways to build interactive interfaces using Vue and bootstrap as it provides a lot of resources, starter kits, and themes to startup quickly. To get started&lt;a href="https://bootstrap-vue.org"&gt;Click here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#12quasar"&gt;
  &lt;/a&gt;
  12.Quasar
&lt;/h3&gt;

&lt;p&gt;Quasar is a high performance, material design two and feature-complete node.js based collection of tools for building reliable, fast and engaging progressive web-app, developing and publishing a website; a secure way to make native apps for macOS, Linux, and Windows with Electron and a system for building cross-platform apps with Cordova. It’s an innovative solution for web developers derived from innovative ideas and concepts to alleviate the pain of managing the project with babel, eslinet, web pack, and more in a single framework. Quasar eliminates the use of additional libraries like Bootstrap, Hammerjs, or Momentjs as it has got that covered too. To get started&lt;a href="https://quasar.dev/"&gt;Click here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#13vuetify"&gt;
  &lt;/a&gt;
  13.Vuetify
&lt;/h3&gt;

&lt;p&gt;Vuetify is a large set of 80+ crafted component libraries based on Material Design such as banners, badges, form inputs and controls, buttons, progress widgets, and many more such things that are sufficient for any application’s requirements. Whether you want to start a new application or looking for assistance to add them to the existing app, you can use it to build SSR apps, mobile apps, SPAs, and PWAs. To get started&lt;a href="https://vuetifyjs.com/en/"&gt;Click here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#14element-ui"&gt;
  &lt;/a&gt;
  14.Element UI
&lt;/h3&gt;

&lt;p&gt;Element UI is a Vue component library with an active set of 500+ maintainers that are widely used by developers, designers, and product managers. Element UI is mostly used to create desktop applications, as its components are not responsive. It is one of the most popular component-based libraries of Vue.js. This library is based on a design system, so it precisely thought out down even the smallest detail. It provides lots of valuable information to assist you with components and several of its valuable resources. So, for the desktop application, without a doubt, it is one of the best libraries to take into consideration. To get started&lt;a href="https://madewithvuejs.com/element-ui"&gt;Click here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#15vue-tailwind"&gt;
  &lt;/a&gt;
  15.Vue Tailwind
&lt;/h3&gt;

&lt;p&gt;A Vue component library for lightweight and customizable components for your application. It is based on Tailwind-CSS. To get started&lt;a href="https://madewithvuejs.com/vue-tailwind"&gt;Click here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#16vue-multiselect"&gt;
  &lt;/a&gt;
  16.Vue Multiselect
&lt;/h3&gt;

&lt;p&gt;This Vue library component is for using the selections in your application. Multiselect offers no dependencies, single &amp;amp; multiple selections, tagging, filtering, drop-downs, search suggestions, and so much more.  To get started&lt;a href="https://vue-multiselect.js.org"&gt;Click here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#17buefy"&gt;
  &lt;/a&gt;
  17.Buefy
&lt;/h3&gt;

&lt;p&gt;Buefy is another lightweight Vue JS Component library that is based on Bulma. It helps you simplify your app UI by adding a JS layer of the interface created with BulmaCSS. You’ll see your Vue components following Material Design UX and Bulma designs.  To get started&lt;a href="https://buefy.org"&gt;Click here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#18keen-ui"&gt;
  &lt;/a&gt;
  18.Keen UI
&lt;/h3&gt;

&lt;p&gt;Keen UI helps you build interactive javascript components for page layout, CSS framework, and structure. It has a simple API, but it doesn’t support typogra[hy styles or grid-system.  To get started&lt;a href="https://madewithvuejs.com/keen-ui"&gt;Click here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#19cube-ui"&gt;
  &lt;/a&gt;
  19.Cube UI
&lt;/h3&gt;

&lt;p&gt;A Vue library for fantastic mobile user-interface design. It offers design scalability, keeps a uniform standard, and an interactive experience. To get started&lt;a href="https://www.vuescript.com/mobile-ui-library-vue-cube-ui/"&gt;Click here&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#miscellaneous"&gt;
  &lt;/a&gt;
  Miscellaneous
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1vue-cli"&gt;
  &lt;/a&gt;
  1.Vue CLI
&lt;/h3&gt;

&lt;p&gt;Vue CLI is a fully-featured set of tools with installed npm packages that allows you to create project structures and deploy boilerplates rapidly in your terminal. With the use of Vue CLI, you can experiment with new ideas to create instant prototypes to demonstrate new features. Moreover, Vue CLI offers support for web development tools like Babel, ESLint, PostCSS, TypeScript, Unit Testing, PWA Mocha, Cypress, Nightwatch, and end-to-end testing. However, the apple of the eye is Graphical UI – Vue UI that comes along with the CLI that lets you create new projects and manage them accordingly.  To get started&lt;a href="https://cli.vuejs.org/"&gt;Click here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2vuerouter"&gt;
  &lt;/a&gt;
  2.Vue-router
&lt;/h3&gt;

&lt;p&gt;If you are already familiar with other JavaScript frameworks, the concept of routing shouldn’t be new to you. The use of a router is to map the applications, and the Vue router supports component-based router configuration. Vue-router also supports wildcards, params, and querying to perform complex routing and the possibility to choose between hash mode or HTML5 history. To get started&lt;a href="https://router.vuejs.org"&gt;Click here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3vuex"&gt;
  &lt;/a&gt;
  3.VueX
&lt;/h3&gt;

&lt;p&gt;vuex is a state management system that you can use as a centralized store to solve all the state management functions and to make sure that states are mutated predictably. To get started&lt;a href="https://vuex.vuejs.org"&gt;Click here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4vue-apollo"&gt;
  &lt;/a&gt;
  4.Vue Apollo
&lt;/h3&gt;

&lt;p&gt;You might have heard lots of buzz around GraphQL, and if you are interested in integrating it with Vue.js, then I would like to suggest you try Vue Apollo. The library makes use of Vue in the combination of GraphQL/Apollo for a smooth as well as a pleasant experience. To get started&lt;a href="https://apollo.vuejs.org"&gt;Click here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5vue-resource"&gt;
  &lt;/a&gt;
  5.Vue Resource
&lt;/h3&gt;

&lt;p&gt;Vue Resource is a Vue component library for handling web requests and responses. It either uses JSONP or XMLHttpRequest to undertake the procedure. It supports interceptors, Promise API, and URI templates. Web browsers like IE9+, Chrome, Firefox, Safari, Opera, etc. are supporting this Vue plugin. To get started&lt;a href="https://www.npmjs.com/package/vue-resource"&gt;Click here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-poi"&gt;
  &lt;/a&gt;
  6. Poi
&lt;/h3&gt;

&lt;p&gt;Poi is a pre-configuration bundler for the web, and is popularly called a zero-config bundler. You can also avail Poi as a plugin so that you can use the extra features and options of the Poi library. To get started&lt;a href="https://poi.js.org/"&gt;Click here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Conclusion&lt;br&gt;
There are tons of vue components out there, and this article has been able to help filter out the noise by listing the ones that are super important for your next project. If you find this useful, you should definitely share with your friends.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>devops</category>
      <category>100daysofcode</category>
      <category>vue</category>
    </item>
    <item>
      <title>Why NaN === NaN returns false in JavaScript ?!</title>
      <author>Sekab</author>
      <pubDate>Wed, 04 Aug 2021 01:01:06 +0000</pubDate>
      <link>https://dev.to/amrtaher1234/why-nan-nan-returns-false-in-javascript-14o6</link>
      <guid>https://dev.to/amrtaher1234/why-nan-nan-returns-false-in-javascript-14o6</guid>
      <description>&lt;p&gt;When people start exploring topics about JavaScript they get to feel a little weird sometimes and they also start to wonder why the heck do JavaScript act in such a manner, there have been even Github Repos like &lt;a href="https://github.com/getify/You-Dont-Know-JS"&gt;You Don't Know JS&lt;/a&gt; that explains how JavaScript works and so.&lt;/p&gt;

&lt;p&gt;Today I wanted to explain a gotcha topic that people usually post memes about and hate on JavaScript because of such a topic ( Which I kinda understand why they do so ), I will be explaining why &lt;code&gt;NaN === NaN&lt;/code&gt; results in a &lt;strong&gt;Falsy&lt;/strong&gt; expression. Let us get started with some basics first.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-the-difference-between-raw-endraw-and-raw-endraw-"&gt;
  &lt;/a&gt;
  What is the difference between &lt;code&gt;==&lt;/code&gt; and &lt;code&gt;===&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;Whenever we compare two variables using the double equal operator we compare them using only their values, meaning if a variable A contains some value and variable B contains some other value and we did &lt;code&gt;A == B&lt;/code&gt; what will happen is that JavaScript will check their current values and return &lt;code&gt;true&lt;/code&gt; if they are equal.&lt;/p&gt;

&lt;p&gt;but what if we did something like this: &lt;code&gt;"1" == 1&lt;/code&gt;, what would be the result of such expression? &lt;/p&gt;

&lt;p&gt;A normal person with some logical understanding would definitely guess that the output would be &lt;code&gt;false&lt;/code&gt; because we are comparing a string to a number even if they have the same characters.&lt;/p&gt;

&lt;p&gt;What will actually happen is that this output will be expressed as &lt;code&gt;true&lt;/code&gt;. Why is that? When we use the double equal operator JavaScript will attempt to convert and compare operands of different types, meaning that they both would be converted to the same type and in case of comparing a  number to a string JavaScript will try and convert the string to a number type like this: &lt;code&gt;Number("1") == 1&lt;/code&gt; which will output in that case &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;What if we have a case in which we actually want to compare the types of the variables we have and then compare their values without attempting any conversion? &lt;br&gt;
In that case, using the triple equal operators or the &lt;strong&gt;Strict equality&lt;/strong&gt; would come in handy, what the strict equality operator simply does is checking if the operands are of the same type and then checks if they have the same value or not.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// true;&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// false;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We could simply imagine that JavaScript under the hood does something like this when using the strict equality:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;// in case of doing a === b;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#what-is-raw-nan-endraw-"&gt;
  &lt;/a&gt;
  What is &lt;code&gt;NaN&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;According to the MDN documentation &lt;code&gt;NaN&lt;/code&gt; is:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;NaN is a property of the global object. In other words, it is a variable in global scope.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So basically &lt;code&gt;NaN&lt;/code&gt; is simply a global object that describes what a not number is or whenever we have a variable that we are attempting to convert to a number and we fail it simply gives us &lt;code&gt;NaN&lt;/code&gt; like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hello world&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;convertedToNumber&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;convertedToNumber&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// NaN;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#what-is-raw-typeof-endraw-"&gt;
  &lt;/a&gt;
  What is &lt;code&gt;typeof&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;typeof&lt;/code&gt; is simply a JavaScript operator that returns a string that indicates the type of an operand.&lt;/p&gt;

&lt;p&gt;There are basically 9 types in JavaScript:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Undefined "undefined"&lt;/li&gt;
&lt;li&gt;Null  "object" (see below)&lt;/li&gt;
&lt;li&gt;Boolean   "boolean"&lt;/li&gt;
&lt;li&gt;Number    "number"&lt;/li&gt;
&lt;li&gt;BigInt "bigint"&lt;/li&gt;
&lt;li&gt;String    "string"&lt;/li&gt;
&lt;li&gt;Symbol "symbol"&lt;/li&gt;
&lt;li&gt;Function object (implements [[Call]] in ECMA-262 terms)   "function"&lt;/li&gt;
&lt;li&gt;object    "object"&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Whenever &lt;code&gt;typeof&lt;/code&gt; is used one of these types would be the result, an example for that would be:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt; &lt;span class="c1"&gt;// string;&lt;/span&gt;
&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="c1"&gt;// number;&lt;/span&gt;
&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt; &lt;span class="c1"&gt;// function;&lt;/span&gt;
&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="c1"&gt;// boolean;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#why-raw-nan-nan-endraw-returns-raw-false-endraw-"&gt;
  &lt;/a&gt;
  Why &lt;code&gt;NaN === NaN&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;?
&lt;/h2&gt;

&lt;p&gt;And finally, let us get into the core of this article, why when we explained how strict equality works and what is NaN does this expression provide us with a falsy value?&lt;/p&gt;

&lt;p&gt;let us simplify the answer by looking into the strict equality comparison algorithm:&lt;/p&gt;

&lt;p&gt;let us define the following two operands: x, and y. &lt;/p&gt;

&lt;p&gt;according to the JavaScript documentation ( This is a snippet from the docs ), the comparison algorithm works in the following matter:&lt;/p&gt;

&lt;p&gt;The comparison x === y, where x and y are values, produces true or false. Such a comparison is performed as follows:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If Type(x) is Number, then&lt;br&gt;
If x is NaN, return false.&lt;br&gt;
If y is NaN, return false.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This means that the algorithm first checks if one of the operands is &lt;code&gt;NaN&lt;/code&gt; before even checking their types and if so it will return &lt;code&gt;false&lt;/code&gt; anyways.&lt;/p&gt;

&lt;p&gt;This may be a weird implementation of the comparison algorithm but there are some workarounds for this, we could use built-in functions like &lt;code&gt;Number.isNaN()&lt;/code&gt; to check whether the giving parameter is a &lt;code&gt;NaN&lt;/code&gt; or not instead of comparing it with &lt;code&gt;NaN&lt;/code&gt; directly&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;invalidNumber&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;asdasdasd&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// NaN;&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;resultOfNormalComparison&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;invalidNumber&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="kc"&gt;NaN&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// false;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;resultOfBuiltInComparison&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;isNaN&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;invalidNumber&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// true;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;You could somehow disagree on the implementation of the comparison algorithm but there are workarounds to check if a given variable or parameter is a &lt;code&gt;NaN&lt;/code&gt; or not as shown above.&lt;/p&gt;

&lt;p&gt;References:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://es5.github.io/#x11.9.6"&gt;Comparison algorithm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/typeof"&gt;Typeof guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN"&gt;NaN guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>tutorial</category>
      <category>programming</category>
      <category>node</category>
    </item>
    <item>
      <title>Linux Terminal Cheat Sheet (Useful for Beginners)</title>
      <author>Clean Code Studio</author>
      <pubDate>Tue, 03 Aug 2021 23:55:18 +0000</pubDate>
      <link>https://dev.to/cleancodestudio/linux-terminal-cheat-sheet-useful-for-beginners-2e6c</link>
      <guid>https://dev.to/cleancodestudio/linux-terminal-cheat-sheet-useful-for-beginners-2e6c</guid>
      <description>&lt;p&gt;A Linux cheat sheet for beginners (short, sweet, and to the point)&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#linux-useful-commands-terminal-cheat-sheet"&gt;
  &lt;/a&gt;
  Linux (Useful Commands) Terminal Cheat Sheet
&lt;/h2&gt;




&lt;p&gt;&lt;strong&gt;Navigation Commands:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;passwd&lt;/code&gt; - change password&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;ls&lt;/code&gt; - list directory (Can point at any point on the machine)

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;-la&lt;/code&gt; a flag that lists all + permissions and hidden files&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;pwd&lt;/code&gt; - print working directory - check where you're at&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;cd&lt;/code&gt; - change directory (Can address at any point in the machine file system)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;mkdir&lt;/code&gt; - make directory&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;rmdir&lt;/code&gt; - remove director&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;rm&lt;/code&gt; - remove files&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;echo&lt;/code&gt; - sends data (if no destination is given than data is sent as output to the terminal)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;cp&lt;/code&gt; copy a file (&lt;code&gt;cp [source] [desintation]&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;mv&lt;/code&gt; - mv a file (&lt;code&gt;mv [source] [desintation]&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;locate&lt;/code&gt; - locate a file on the machine (&lt;code&gt;locate [filename]&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;updatedb&lt;/code&gt; - updates the directory database (must run before running locate)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;man&lt;/code&gt; - manual page of any command&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;grep&lt;/code&gt; - search for the following words (can be used to check if a file contains specific info)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Linux is case sensitive so be aware of your capital letters!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;./&lt;/code&gt; - your directory right now&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;../&lt;/code&gt; - previous folder&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;~&lt;/code&gt; - the users root folder&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;|&lt;/code&gt; - pipe the output of one command into another&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;&amp;gt;&lt;/code&gt; - use command on the following file (overwrite)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; - use command on following file (appends)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Privilege's and user commands:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;cat&lt;/code&gt; - reads a file to the terminal&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;chmod&lt;/code&gt; - changes permissions for a file&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;adduser&lt;/code&gt; - make a new user &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;sudo&lt;/code&gt; - give root permissions for the following command being executed &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;su&lt;/code&gt; - switch user &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Network Commands:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;ifconfig&lt;/code&gt; - print network information&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;iwconfig&lt;/code&gt; - wireless network information&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;ping&lt;/code&gt; - ping an ip address (&lt;code&gt;-c&lt;/code&gt; flag lets you define how many times you wish to ping the given ip address)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;arp -a&lt;/code&gt; - send out an arp request to check for machines on the network&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;netstat -a&lt;/code&gt; - shows all open ports and what is connected to these ports&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;route&lt;/code&gt; - shows a routing table&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Viewing, creating, and editing commands:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;history&lt;/code&gt; - lists the 15 commands you entered (&lt;code&gt;history | grep [command]&lt;/code&gt; shows all the times you run a command on the machine (including specific syntax))&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;touch&lt;/code&gt; - create a file&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;nano&lt;/code&gt; - use the nano text editor&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;apt-get&lt;/code&gt; - install [program name] - install a program on the machine (can be run without the install)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;apt install&lt;/code&gt; - install a file from the system / kali - server&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;apt purge&lt;/code&gt; - program name - (You have to use the * *)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;pip install&lt;/code&gt; - run an installer for local files&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;git clone&lt;/code&gt; - clone a github repository (This is a plugin and does not come preinstalled on most linux distributions!)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Webserver Commands:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;service apache2 start&lt;/code&gt; - start a webserver&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;service ssh start&lt;/code&gt; - start an ssh server&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;service postgresql start&lt;/code&gt; - a service that starts with metasploit &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;service apache2 stop&lt;/code&gt; - stops the webserver&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;systemctl enable [program name]&lt;/code&gt; - start the service when the machine turns on&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Important files/directories in Linux:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;/etc/passwd&lt;/code&gt; - a file that stores all of the users in the system&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;/etc/shadow&lt;/code&gt; - stores all of the passwords in the system&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;/var/log/auth.log&lt;/code&gt; - authentication reports&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks for reading and feel free to follow Clean Code Studio for more! &lt;/p&gt;


&lt;div class="ltag__user ltag__user__id__386677"&gt;
  
    .ltag__user__id__386677 .follow-action-button {
      background-color: #339d15 !important;
      color: #ffffff !important;
      border-color: #339d15 !important;
    }
  
    &lt;a href="/cleancodestudio" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iaD-SiIM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--uL9Viyw2--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/386677/50ab5359-8342-4fc0-961a-04bb95957fa1.jpg" alt="cleancodestudio image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/cleancodestudio"&gt;Clean Code Studio&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/cleancodestudio"&gt;Clean Code Clean Life ~ Simplify&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a href="https://cleancode.studio"&gt;Clean Code Studio&lt;/a&gt;&lt;br&gt;
&lt;a href="https://cleancode.studio/design-patterns"&gt;Java Script Design Patterns&lt;/a&gt;&lt;br&gt;
&lt;a href="https://cleancode.studio/clean-code"&gt;Clean Code&lt;/a&gt;&lt;br&gt;
[JavaScript Algorithm Examples]&lt;/p&gt;

</description>
      <category>linux</category>
      <category>commands</category>
      <category>terminal</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>How to create server files with Flask</title>
      <author>Nelson Adonis Hernandez</author>
      <pubDate>Tue, 03 Aug 2021 23:38:39 +0000</pubDate>
      <link>https://dev.to/nelsoncode/how-to-create-server-files-with-flask-4hdp</link>
      <guid>https://dev.to/nelsoncode/how-to-create-server-files-with-flask-4hdp</guid>
      <description>&lt;p&gt;In this example I will show you how to upload, download, delete and obtain files with Flask&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-upload-multiple-files-by-form-data-using-flask"&gt;
  &lt;/a&gt;
  How to upload multiple files by Form Data using Flask
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/upload"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;methods&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'POST'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;upload_image&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;"POST"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nb"&gt;file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;files&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'file'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getcwd&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;"/images/"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;"Imagen saved"&lt;/span&gt;
        &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="nb"&gt;FileNotFoundError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;"Folder not found"&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'__main__'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;8000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;host&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"0.0.0.0"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#how-to-download-files-using-flask"&gt;
  &lt;/a&gt;
  How to download files using Flask
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/download/file/&amp;lt;string:filename&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;download_image&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;send_from_directory&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getcwd&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;"/images/"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;as_attachment&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'__main__'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;8000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;host&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"0.0.0.0"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#how-to-get-files-using-flask"&gt;
  &lt;/a&gt;
  How to get files using Flask
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/file/&amp;lt;string:filename&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_image&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;send_from_directory&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getcwd&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;"/images/"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;as_attachment&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'__main__'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;8000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;host&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"0.0.0.0"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#how-to-delete-files-using-flask-with-form-data"&gt;
  &lt;/a&gt;
  How to delete files using Flask with Form Data
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/delete'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;methods&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'POST'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;remove_image&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;filename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'filename'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="c1"&gt;# CHECK IF EXISTS FILE
&lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isfile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getcwd&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;"/images/"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;"Esto no es un archivo"&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getcwd&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;"/images/"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="nb"&gt;OSError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;"Error :(("&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;"File deleted"&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'__main__'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;8000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;host&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"0.0.0.0"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>flask</category>
      <category>backend</category>
      <category>python</category>
      <category>nelsoncode</category>
    </item>
    <item>
      <title>HTML 5 - Best Practice</title>
      <author>DevCronin</author>
      <pubDate>Tue, 03 Aug 2021 23:26:40 +0000</pubDate>
      <link>https://dev.to/devcronin/html-5-best-practice-3idp</link>
      <guid>https://dev.to/devcronin/html-5-best-practice-3idp</guid>
      <description>&lt;h2&gt;
  &lt;a href="#with-html-5-it-can-be-difficult-to-know-what-is-best-practice-and-still-relevant"&gt;
  &lt;/a&gt;
  With HTML 5, it can be difficult to know what is best practice and still relevant.
&lt;/h2&gt;

&lt;p&gt;Some features were used before the HTML 5 standard, but they continue to emerge through developers' habits. In this case, these features no longer serve a purpose.&lt;/p&gt;

&lt;p&gt;Other features are examples of implementations that made it into the HTML 5 standard but are no longer considered best practice.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#so-why-would-these-lingering-features-still-exist"&gt;
  &lt;/a&gt;
  So why would these lingering features still exist?
&lt;/h2&gt;

&lt;p&gt;My take on it is: &lt;strong&gt;change is difficult&lt;/strong&gt;. Developers have to adapt and constantly be learning because the field changes often.&lt;/p&gt;

&lt;p&gt;Sometimes there are still instances where some of these features are used even if they are not common. &lt;/p&gt;

&lt;p&gt;Additionally, it can be to support backward compatibility to previous HTML versions.&lt;/p&gt;

&lt;p&gt;## What are HTML 5 best practices?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#declare-the-doctype-first-and-as-raw-ltdoctype-htmlgt-endraw-"&gt;
  &lt;/a&gt;
  Declare the doctype first and as &lt;code&gt;&amp;lt;!DOCTYPE HTML&amp;gt;&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;This is the current document type and it should be the first line of your document.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#external-css-link-in-the-raw-ltheadgt-endraw-tag"&gt;
  &lt;/a&gt;
  External CSS link in the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; tag
&lt;/h3&gt;

&lt;p&gt;Although there are use cases for both inline and internal styling, the best practice is to use an external CSS link. &lt;/p&gt;

&lt;p&gt;One reason is that browsers can cache an externally linked style sheet and therefore load faster after the initial visit. Another reason for this is inline and internal styles are harder to maintain and organize. &lt;/p&gt;

&lt;p&gt;Links located in the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; section will improve load time. If necessary, &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; should be last.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#close-your-tags"&gt;
  &lt;/a&gt;
  Close your tags
&lt;/h3&gt;

&lt;p&gt;Every tag should be followed with a corresponding closing tag. This will prevent validation errors.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mark-up-should-be-in-the-lower-case-only"&gt;
  &lt;/a&gt;
  Mark up should be in the lower case only
&lt;/h3&gt;

&lt;p&gt;It is a developer standard to use the lower case; web development is no exception. This will make for easier reading and writing.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#use-appropriate-and-descriptive-tags"&gt;
  &lt;/a&gt;
  Use appropriate and descriptive tags
&lt;/h3&gt;

&lt;p&gt;Using &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; is fine when there is not a better tag such as &lt;code&gt;&amp;lt;article&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;section&lt;/code&gt;, &lt;code&gt;&amp;lt;header&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;footer&amp;gt;&lt;/code&gt; etc...&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#include-alt-tags-and-size-on-all-images"&gt;
  &lt;/a&gt;
  Include alt tags and size on all images
&lt;/h3&gt;

&lt;p&gt;The alt tag improves accessibility for screen readers. Defining image size helps the page load smoothly because it determines the page's structure while loading. This can be changed in CSS for responsiveness.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#use-the-raw-lth1gt-endraw-tag-only-once"&gt;
  &lt;/a&gt;
  Use the &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; tag only once
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; is used for the document's title or major heading. It should always be used and only one time for each document.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#use-raw-lth2gt-endraw-through-raw-lth6gt-endraw-in-ascending-order"&gt;
  &lt;/a&gt;
  Use &lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt; through &lt;code&gt;&amp;lt;h6&amp;gt;&lt;/code&gt; in ascending order
&lt;/h3&gt;

&lt;p&gt;The order should reflect the size and importance of each heading. The tag &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; being the largest and most important, and the &lt;code&gt;&amp;lt;h6&amp;gt;&lt;/code&gt; tag for the smallest. &lt;/p&gt;

&lt;p&gt;Do not skip any and only include as many as needed. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#use-correct-indentation"&gt;
  &lt;/a&gt;
  Use correct indentation
&lt;/h3&gt;

&lt;p&gt;Acceptable indentation is two or four spaces. It is best to avoid tabs because of the inconsistency between editors. Most editors have custom spacing to make this easier. &lt;/p&gt;

&lt;p&gt;Each nested element should be indented. Elements on the same level should be at the same indentation.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#nest-inline-elements-inside-of-block-elements"&gt;
  &lt;/a&gt;
  Nest Inline elements inside of block elements
&lt;/h3&gt;

&lt;p&gt;Block elements such as &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; should contain the inline elements &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; etc...   Inline elements cannot contain block elements.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  Final Thoughts
&lt;/h2&gt;

&lt;p&gt;This is not a comprehensive list of all HTML best practices. The best way to learn more about them is to look at other developers' documentation and practice.&lt;/p&gt;

&lt;p&gt;Happy coding and good luck!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/ZachCronin"&gt;&lt;strong&gt;Support and Buy me a Coffee&lt;/strong&gt;&lt;/a&gt; &lt;/p&gt;

</description>
      <category>html</category>
      <category>webdev</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Renovando git: bye bye, checkout
</title>
      <author>Franco Cuarterolo</author>
      <pubDate>Tue, 03 Aug 2021 23:09:58 +0000</pubDate>
      <link>https://dev.to/cuarte4/renovando-git-bye-bye-checkout-28f5</link>
      <guid>https://dev.to/cuarte4/renovando-git-bye-bye-checkout-28f5</guid>
      <description>&lt;h1&gt;
  &lt;a href="#renovando-git-bye-bye-checkout"&gt;
  &lt;/a&gt;
  Renovando git: bye bye, checkout
&lt;/h1&gt;

&lt;p&gt;Hay una serie de comandos de git que nos sabemos de memoria, pero existe uno en particular que tiene múltiples usos: &lt;code&gt;git checkout&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Ah pero que tenga múltiples uso significa que es más practico. Si, y más probable que te equivoques&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git checkout&lt;/code&gt; es un comando que podemos usar para crear y borrar branches, navegar entre ellas y eliminar cambios que no están en estado de stage.&lt;/p&gt;

&lt;p&gt;Ahora, la gente de git se despabiló y se dio cuenta de que sería mejor tener comandos más verbosos para las distintas acciones que hacemos con nuestro controlador de versiones.&lt;/p&gt;

&lt;p&gt;Cada uno de los siguientes comandos que te voy a mostrar realizan la misma acción que hacíamos antes con &lt;code&gt;git checkout&lt;/code&gt; pero escrito de una forma más amigable&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creando-ramas-git-branch"&gt;
  &lt;/a&gt;
  Creando ramas: git branch
&lt;/h2&gt;

&lt;p&gt;Cuando queremos crear una rama, es normal que nos encontremos usando el comando &lt;code&gt;git checkout mi-rama&lt;/code&gt;. Para hacerlo más entendible, lo vamos a cambiar por &lt;code&gt;git branch mi-rama&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#navegando-entre-ramas-git-switch"&gt;
  &lt;/a&gt;
  Navegando entre ramas: git switch
&lt;/h2&gt;

&lt;p&gt;Es normal cambiar a una rama de un colega para revisar sus cambios o querer volver a &lt;code&gt;develop&lt;/code&gt; para tener los últimos cambios. Yo siempre usé para esto &lt;code&gt;git checkout rama-de-mi-colega&lt;/code&gt;. hasta que descubrí que existe un comando que es mucho más claro: &lt;code&gt;git switch rama-de-mi-colega&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#borrando-cambios-git-restore"&gt;
  &lt;/a&gt;
  Borrando cambios: git restore
&lt;/h2&gt;

&lt;p&gt;Cuando ya separé cuales son los cambios que van en el commit, lo demás se descarta, y para descartar recurrimos al &lt;code&gt;git checkout -- .&lt;/code&gt;. Hoy en día git te recomienda utilizar &lt;code&gt;git restore .&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusi%C3%B3n"&gt;
  &lt;/a&gt;
  Conclusión
&lt;/h2&gt;

&lt;p&gt;Utilizar el mismo comando para todo puede ser super practico, pero si recién estas empezando, puede que te provoque un par de USB (USB? ABC? ACV!). Nuestros comandos y nuestros procesos deben dejar claras nuestras intenciones, de esta manera podemos compartir un paso a paso y ser lo más claros posibles en nuestra comunicación técnica.&lt;/p&gt;

&lt;p&gt;Fuentes:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://git-scm.com/docs/git-branch"&gt;git branch&lt;/a&gt;&lt;br&gt;
&lt;a href="https://git-scm.com/docs/git-switch"&gt;git switch&lt;/a&gt;&lt;br&gt;
&lt;a href="https://git-scm.com/docs/git-restore"&gt;git retore&lt;/a&gt;&lt;/p&gt;

</description>
      <category>git</category>
      <category>spanish</category>
    </item>
    <item>
      <title>Reflections on 10,000 Hours of Programming</title>
      <author>mrick</author>
      <pubDate>Tue, 03 Aug 2021 23:00:26 +0000</pubDate>
      <link>https://dev.to/mrick/reflections-on-10-000-hours-of-programming-ge4</link>
      <guid>https://dev.to/mrick/reflections-on-10-000-hours-of-programming-ge4</guid>
      <description>&lt;p&gt;&lt;em&gt;This post originally appeared in my free daily newsletter on startups and engineering. &lt;br&gt;
You can join 200+ subscribers here: &lt;a href="https://matt-rickard.com/subscribe/"&gt;https://matt-rickard.com/subscribe/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The key to achieving world-class expertise in any skill, is to a large extent, a matter of practicing the correct way, for a total of around 10,000 hours — Malcolm Gladwell in Outsiders&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Well, I'm certainly not a world-class expert, but I have put my 10,000 hours of deliberate practice into programming. Here are 31 of my reflections on programming.&lt;/p&gt;

&lt;p&gt;These are reflections only about pure coding — no lessons sum up to "programming is about people" or "how to be a senior technical leader" (arguably more important to a career, but not the topic of this post).&lt;/p&gt;

&lt;p&gt;These reflections are just about deliberately writing code for 10,000 hours. Most don't apply to beginners. These reflections are not career advice. Think of them as lessons on being a technical guitarist, not about being a good band member. They are about becoming a better programmer for yourself.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Browsing the source is almost always faster than finding an answer on StackOverflow.&lt;/li&gt;
&lt;li&gt;In many cases, what you're working on doesn't have an answer on the internet. That usually means the problem is hard or important, or both.&lt;/li&gt;
&lt;li&gt;Delete as much code as you can.&lt;/li&gt;
&lt;li&gt;Syntactic sugar is usually bad.&lt;/li&gt;
&lt;li&gt;Simple is hard.&lt;/li&gt;
&lt;li&gt;Have a wide variety of tools and know which ones to use for the job.&lt;/li&gt;
&lt;li&gt;Know the internals of the most used ones like git and bash (I can get out of the most gnarly git rebase or merge).&lt;/li&gt;
&lt;li&gt;Build your own tools for repeated workflows. There is nothing faster than using a tool you made yourself (see: &lt;a href="https://matt-rickard.com/about/"&gt;software I wrote&lt;/a&gt;.)&lt;/li&gt;
&lt;li&gt;Only learn from the best. So when I was learning Go, I read the standard library.&lt;/li&gt;
&lt;li&gt;If it looks ugly, it is most likely a terrible mistake.&lt;/li&gt;
&lt;li&gt;If you have to write a comment that isn't a docstring, it should probably be refactored. Every new line of comments increases this probability.&lt;/li&gt;
&lt;li&gt;If you don't understand how your program runs in production, you don't understand the program itself. In my experience, the best engineers know how their program works in every environment.&lt;/li&gt;
&lt;li&gt;The above rule applies to the build pipeline as well.&lt;/li&gt;
&lt;li&gt;Use other people's code religiously.&lt;/li&gt;
&lt;li&gt;Corollary: Most code out there is terrible. Sometimes it's easier to write a better version yourself.&lt;/li&gt;
&lt;li&gt;A rough rule of thumb: never take a direct dependency on a small library that you could easily rewrite or a large library that should have been small.&lt;/li&gt;
&lt;li&gt;Know when to break the rules. For rules like "don't repeat yourself," sometimes a little repetition is better than a bit of dependency.
18.Organizing your code into modules, packages, and functions is important. Knowing where API boundaries will materialize is an art.&lt;/li&gt;
&lt;li&gt;Pick the most efficient tool most of the time, but also pick what you know. Is Arch Linux the most efficient operating system for the modern developer? For me, it is, but for most, probably not. Should you use acme? Only if you're Rob Pike.&lt;/li&gt;
&lt;li&gt;Avoid cyclomatic complexity. Novice coders don't even know that they've tangled the dependency graph until it's too late.&lt;/li&gt;
&lt;li&gt;Avoid nesting conditionals deeply. Have common sense about your conditional tests and naming convention.&lt;/li&gt;
&lt;li&gt;Name variables correctly. Again, an art.&lt;/li&gt;
&lt;li&gt;While rare, sometimes it's a problem with the compiler. Otherwise, it's always DNS.&lt;/li&gt;
&lt;li&gt;Use esoteric language features sparingly, but use them when you're supposed to, for that is the point.&lt;/li&gt;
&lt;li&gt;Technology does not diffuse equally. For example, there is a lot that frontend developers could learn from low-level engineers (especially now that everything is compiled). 26. Likewise, there are UX and usability features that JavaScript developers could teach cloud engineers.&lt;/li&gt;
&lt;li&gt;As a result, different kinds of engineers look at the world differently.&lt;/li&gt;
&lt;li&gt;Some programmers are 10x more efficient than others. I know because I've been both a 10x programmer and a -1x programmer.&lt;/li&gt;
&lt;li&gt;There's no correlation between being a 10x programmer and a 10x employee (maybe a negative one).&lt;/li&gt;
&lt;li&gt;Good APIs are easy to use and hard to misuse.
The configuration cycle goes from hardcoded values to environment variables, to CLI flags, to a configuration file, to a templated configuration file, to a DSL, to a generic bash script, and back to hardcoded values. Know where you are on this Heptagon of Configuration.&lt;/li&gt;
&lt;li&gt;All layers of abstraction are malleable. If you run into a fundamental wall, sometimes the answer is to go down a layer of abstraction. You aren't confined to the surface.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Where did I put in my 10,000 hours?&lt;/strong&gt; Well, I've been programming for about 15 years. Most recently, I worked as a professional software engineer at Google on Kubernetes and Blackstone, the private equity firm. Before that, I spent most of college in the library writing programs for my own projects instead of writing proofs (which I should have been doing as a math major). And before that, I was hacking away at all sorts of things — running a botnet on RuneScape, writing a Latin translation app for the iPhone (so I could do better on my Latin exams), creating a web clipper, or ricing up my desktop.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What did I do for the 10,000 hours?&lt;/strong&gt; The most recent work was in distributed systems, but I've written code across the stack. Languages like PHP, JavaScript, Go, Ruby, Python, C#, Java, Swift. Frontend, backend, mobile, kernel, cloud, ops, and even some IT. I've worked on large-scale open-source projects like Kubernetes and maintained subprojects, which allowed me to have my code peer-reviewed by some of the best engineers.&lt;/p&gt;

</description>
      <category>programming</category>
      <category>career</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Rails Security Threats: Authentication</title>
      <author>Honeybadger Staff</author>
      <pubDate>Tue, 03 Aug 2021 22:57:04 +0000</pubDate>
      <link>https://dev.to/honeybadger/rails-security-threats-authentication-3bl0</link>
      <guid>https://dev.to/honeybadger/rails-security-threats-authentication-3bl0</guid>
      <description>&lt;p&gt;&lt;em&gt;This article was originally written by &lt;a href="https://www.honeybadger.io/blog/rails-security-authentication-leaks/#authorDetails"&gt;Diogo Souza&lt;/a&gt; on the &lt;a href="https://www.honeybadger.io/blog/rails-security-authentication-leaks/"&gt;Honeybadger Developer Blog&lt;/a&gt;.&lt;/em&gt; &lt;/p&gt;

&lt;p&gt;Part one of this series, covered &lt;a href="https://www.honeybadger.io/blog/rails-security-injections"&gt;Injection Attacks&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the second article of our series about &lt;a href="https://owasp.org/www-project-top-ten/"&gt;OWASP Top 10&lt;/a&gt; Web Application Security Risks, we'll dive into the universe of broken authentication and data exposure threats.&lt;/p&gt;

&lt;p&gt;More specifically, we'll talk about how easy it is for a hacker to trick the code you've built and perform attacks to obtain users’ data:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;User enumeration&lt;/em&gt;: When they exploit your login pages by brute-force testing a list of possible users just to check if they exist in your database.&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Weak passwords&lt;/em&gt;: When your system allows for weak passwords, hackers can carry out a brute force attack to guess your users' passwords.&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Unrestricted cookies&lt;/em&gt;: When your system stores sensitive data in cookies without proper security settings, hackers can steal the information through XSS attacks.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We will also go into detail about sensitive data that are not sufficiently protected, making room for vulnerabilities, such as the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;Unsafe sensitive storage&lt;/em&gt;: when sensitive data are encrypted with weak algorithms, such as MD5.&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Exposing sensitive data&lt;/em&gt;: when developers unintentionally expose unencrypted sensitive data in URLs or hidden fields, for example.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As with the first article in the series, we'll also make use of &lt;a href="https://github.com/OWASP/railsgoat"&gt;RailsGoat&lt;/a&gt; to explore each of these threats in practice. If you're new here, please refer to the previous article to get the app set up and running.&lt;/p&gt;

&lt;p&gt;Let's jump right in!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#authentication-threats"&gt;
  &lt;/a&gt;
  Authentication Threats
&lt;/h1&gt;

&lt;p&gt;We can't live without authentication. Whether it is on your back-end APIs or within your front-end forms, it’s one of the most important steps in application development since it highlights the border limits of your security measures.&lt;/p&gt;

&lt;p&gt;Not only for the authentication itself but for what comes next: session management. Where are you going to store your passwords and tokens? Are they properly encrypted? Are you using a trustworthy algorithm? Is your password complex enough?&lt;/p&gt;

&lt;p&gt;There are many questions to keep an eye on. Let's break them down a bit and understand some common attacks involving authentication and session management within Rails applications.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#user-enumeration"&gt;
  &lt;/a&gt;
  User Enumeration
&lt;/h2&gt;

&lt;p&gt;User enumeration is a famous technique that attackers use to check (via the use of brute force) whether the given data exist within your system.&lt;/p&gt;

&lt;p&gt;One of the most notorious examples of this attack happens with the current Facebook login page. If you enter some invalid and random credentials like those shown in the image below, Facebook will process the request and check for the existence of the user within their database.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YPd8x_hK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.honeybadger.io/images/blog/posts/rails-security-authentication-leaks/Figure01.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YPd8x_hK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.honeybadger.io/images/blog/posts/rails-security-authentication-leaks/Figure01.png" alt="Facebook's login page"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Facebook's login page.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;When you click the &lt;em&gt;Log In&lt;/em&gt; button, Facebook will return an error message stating that your username (which can be either an email or phone number) isn't valid.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eN0o7lzE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.honeybadger.io/images/blog/posts/rails-security-authentication-leaks/Figure02.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eN0o7lzE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.honeybadger.io/images/blog/posts/rails-security-authentication-leaks/Figure02.png" alt="Invalid username message"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Invalid username message.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Therefore, the attacker knows that the application tells you whether a user is registered. For free.&lt;/p&gt;

&lt;p&gt;If the attacker has a list of emails (whether they were randomly generated or bought somewhere), it's also possible to ask the application whether the password is correct:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E5H6u9T0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.honeybadger.io/images/blog/posts/rails-security-authentication-leaks/Figure03.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E5H6u9T0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.honeybadger.io/images/blog/posts/rails-security-authentication-leaks/Figure03.png" alt="Invalid password message"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Invalid password message.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Once an attacker knows how the system responds separately to each validation, a list can be created of &lt;code&gt;possible users&lt;/code&gt; and common/weak passwords. Brute-force tests can then be conducted repeatedly against the system until access is gained.&lt;/p&gt;

&lt;p&gt;Of course, Facebook developers know about this, and it’s why they implemented additional protections, such as invisible captchas and validations over the number of requests coming from a specific IP address.&lt;/p&gt;

&lt;p&gt;One of the things you can do to avoid user enumerations is validate both the username and password together and return a generic message. Let's see this approach in action!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-threat-in-action"&gt;
  &lt;/a&gt;
  The Threat in Action
&lt;/h2&gt;

&lt;p&gt;In the RailsGoat app, open the &lt;em&gt;user.rb&lt;/em&gt; file in the &lt;em&gt;app/models&lt;/em&gt; folder and locate the &lt;code&gt;authenticate&lt;/code&gt; method. Within it, you may find the following code snippet:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; doesn't exist!"&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;password&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="no"&gt;Digest&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;MD5&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;hexdigest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;auth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;
  &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="s2"&gt;"Incorrect Password!"&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Exactly! The messages are being set in a way that will allow attackers to know whether the user doesn't exist or the password is incorrect.&lt;/p&gt;

&lt;p&gt;Test it out. Go to the RailsGoat login page and type a random email and password. You may see the following error message:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xKz-9sSY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.honeybadger.io/images/blog/posts/rails-security-authentication-leaks/Figure04.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xKz-9sSY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.honeybadger.io/images/blog/posts/rails-security-authentication-leaks/Figure04.png" alt="The user doesn't exist"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;The user doesn't exist.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Otherwise, if the user exists (&lt;em&gt;&lt;a href="mailto:ken@metacorp.com"&gt;ken@metacorp.com&lt;/a&gt;&lt;/em&gt;, for example) but the password is wrong, the following message is displayed:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MAXoaJIx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.honeybadger.io/images/blog/posts/rails-security-authentication-leaks/Figure05.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MAXoaJIx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.honeybadger.io/images/blog/posts/rails-security-authentication-leaks/Figure05.png" alt="Incorrect password"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Incorrect password.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Considering that your app only allows strong passwords, the attacker can still create a list of enumerated valid client emails and target phishing emails to them, creating the impression that you're the one who's requesting the malicious action.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-resolve-this-issue"&gt;
  &lt;/a&gt;
  How to Resolve This Issue
&lt;/h2&gt;

&lt;p&gt;The quickest action you can take to make it safer is to change your message and complicate the hacker's life.&lt;/p&gt;

&lt;p&gt;Within the &lt;code&gt;sessions_controller.rb&lt;/code&gt; (&lt;code&gt;app/controllers&lt;/code&gt; folder), locate the &lt;code&gt;create&lt;/code&gt; method and change the following code snippet&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;flash&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:error&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;message&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;to the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;flash&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:error&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Your credentials aren't valid."&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, every time users type a wrong username or password, that's the message they'll receive:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V0eaurLP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.honeybadger.io/images/blog/posts/rails-security-authentication-leaks/Figure06.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V0eaurLP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.honeybadger.io/images/blog/posts/rails-security-authentication-leaks/Figure06.png" alt="Invalid credentials"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Invalid credentials.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Another way to do that is by changing the two messages within the &lt;em&gt;users.rb&lt;/em&gt; model.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#weak-passwords"&gt;
  &lt;/a&gt;
  Weak Passwords
&lt;/h2&gt;

&lt;p&gt;We can't stress this enough. Require your users to &lt;strong&gt;input strong passwords&lt;/strong&gt; and make sure to create some validation code to check whether they meet the criteria for a strong password.&lt;/p&gt;

&lt;p&gt;This is one of the most important steps to prevent user enumerations.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-threat-in-action"&gt;
  &lt;/a&gt;
  The Threat In Action
&lt;/h2&gt;

&lt;p&gt;In RailsGoat, open the &lt;em&gt;user.rb&lt;/em&gt; file and locate the first line of code right before the class definition:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;validates&lt;/span&gt; &lt;span class="ss"&gt;:password&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;presence: &lt;/span&gt;&lt;span class="kp"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;confirmation: &lt;/span&gt;&lt;span class="kp"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;length: &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="ss"&gt;within: &lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="mi"&gt;40&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;

    &lt;span class="o"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is a clear example of the password being weakly validated since only its length is checked.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-resolve-this-issue"&gt;
  &lt;/a&gt;
  How to Resolve This Issue
&lt;/h2&gt;

&lt;p&gt;The solution is quite simple; validate your password against some stronger requirements, such as the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;at least 1 lowercase and 1 uppercase letter,&lt;/li&gt;
&lt;li&gt;at least 1 digit,&lt;/li&gt;
&lt;li&gt;at least 10 chars.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The more requirements you add, the safer your passwords will be. Just be sure to not push it too much since this can lead to a complexity increase in the usability and password recovery flow.&lt;/p&gt;

&lt;p&gt;To solve this within RailsGoat, simply substitute the length property with the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="ss"&gt;:format&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;:with&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="sr"&gt;/\A.*(?=.*[a-zA-Z])(?=.*[0-9])(?=.{10,}).*\z/&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, go to the sign-up page, fill in the fields, and provide a weak password. When you submit, this will be the error message displayed:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TH1WxTP5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.honeybadger.io/images/blog/posts/rails-security-authentication-leaks/Figure07.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TH1WxTP5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.honeybadger.io/images/blog/posts/rails-security-authentication-leaks/Figure07.png" alt="The password is invalid"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;The password is invalid.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#unrestricted-cookies"&gt;
  &lt;/a&gt;
  Unrestricted Cookies
&lt;/h2&gt;

&lt;p&gt;In the previous article, we dedicated some time to understanding how XSS attacks occur. Since they take place by allowing attackers to run malicious scripts, important information can be stolen from session cookies if we don't prevent access to attributes, such as the &lt;code&gt;document.cookie&lt;/code&gt; in your JavaScript code.&lt;/p&gt;

&lt;p&gt;Remember that the dispute between Web storage vs. cookies is often discussed within the community. While Web storage is more practical, an attacker can gain full access to objects stored there without proper protection from XSS threats.&lt;/p&gt;

&lt;p&gt;Cookies, in turn, are a bit safer if you take the right steps to make them so, such as setting the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies"&gt;&lt;code&gt;HttpOnly&lt;/code&gt; flag&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In short, a cookie that holds session information and is set with the &lt;code&gt;HttpOnly&lt;/code&gt; flag can't be accessed from the JavaScript &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Document/cookie"&gt;&lt;code&gt;Document.cookie&lt;/code&gt;&lt;/a&gt; API. This way, only the server will receive it.&lt;/p&gt;

&lt;p&gt;Alternatively, we also have the &lt;code&gt;Secure&lt;/code&gt; attribute, which will ensure that a cookie is only sent to the server if (and only if) the request happens within HTTPS (never within HTTP). This will make your requests safer in case someone is sniffing them as a &lt;em&gt;man-in-the-middle&lt;/em&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-threat-in-action"&gt;
  &lt;/a&gt;
  The Threat In Action
&lt;/h2&gt;

&lt;p&gt;Rails take a step for you by automatically setting all cookies with the &lt;code&gt;HttpOnly&lt;/code&gt; flag. This is great because it helps unaware developers avoid having their apps hacked.&lt;/p&gt;

&lt;p&gt;To test this example, we'd have to disable this feature, which RailsGoat explicitly did within the &lt;code&gt;session_store.rb&lt;/code&gt; file, located in the &lt;code&gt;config/initializers&lt;/code&gt; folder. Check it out!&lt;/p&gt;

&lt;p&gt;Then, go to the registration page once more, fill in the fields properly, and input the following content into the &lt;em&gt;Name&lt;/em&gt; field:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
  &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cookie&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When you submit the form, the user will be created, along with the following subsequent alert message:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lSUevWLX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.honeybadger.io/images/blog/posts/rails-security-authentication-leaks/Figure08.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lSUevWLX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.honeybadger.io/images/blog/posts/rails-security-authentication-leaks/Figure08.png" alt="Alert message exposing RailsGoat session cookie"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Alert message exposing RailsGoat session cookie.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-resolve-this-issue"&gt;
  &lt;/a&gt;
  How to Resolve This Issue
&lt;/h2&gt;

&lt;p&gt;In this case, that's pretty straightforward, just make sure not to disable the &lt;code&gt;HttpOnly&lt;/code&gt; flag on your Rails apps.&lt;/p&gt;

&lt;p&gt;So, remove the &lt;code&gt;httponly: false&lt;/code&gt; setting and restart the server. When you try to perform the same operation, the following alert message will be displayed:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--thBBWpz2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.honeybadger.io/images/blog/posts/rails-security-authentication-leaks/Figure09.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--thBBWpz2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.honeybadger.io/images/blog/posts/rails-security-authentication-leaks/Figure09.png" alt="Empty alert message"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Empty alert message.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#other-scenarios"&gt;
  &lt;/a&gt;
  Other Scenarios
&lt;/h2&gt;

&lt;p&gt;Imagine that you're accessing a Web application from computers that aren't secure, such as public library computers or LAN houses. If the application is not configured to properly log you out after a specified period of inactivity, then your session will still be there.&lt;/p&gt;

&lt;p&gt;Simply closing a browser tab isn't enough to log out of an application.&lt;/p&gt;

&lt;p&gt;Another common issue within developers’ code is when you expose IDs of any kind in the front end. It's not that hard to think of scenarios in which keeping a user's ID in a hidden input or even in the URL will make your life easier when the user further requests something else from the server.&lt;/p&gt;

&lt;p&gt;However, this is halfway through a stealing attack.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#sensitive-data-exposure"&gt;
  &lt;/a&gt;
  Sensitive Data Exposure
&lt;/h1&gt;

&lt;p&gt;This topic is perhaps one of the most underestimated in terms of dedicating enough effort to ensure the security of sensitive information.&lt;/p&gt;

&lt;p&gt;Whether your data is in constant transit or at rest, it's extremely important to separate ordinary data from sensitive data. Sensitive data include credit card numbers and codes, passwords, personal identifier numbers, or anything that relates to compliance or privacy laws (such as the EU's &lt;a href="https://en.wikipedia.org/wiki/General_Data_Protection_Regulation"&gt;GDPR&lt;/a&gt; and the &lt;a href="https://en.wikipedia.org/wiki/Payment_Card_Industry_Data_Security_Standard"&gt;PCI&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Other than that, depending on the specific business area your application is running in, it's important to consult local legislation to determine whether other compliance rules also apply.&lt;/p&gt;

&lt;p&gt;Here are some clear examples of this vulnerability:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Is your data somehow encrypted or transported as plain text through the Web?&lt;/li&gt;
&lt;li&gt;If you encrypt data, what algorithm are you using? Is it strong and reliable against the newest types of crypto attacks?&lt;/li&gt;
&lt;li&gt;Do you use default cryptographic keys if none are provided?&lt;/li&gt;
&lt;li&gt;Have you checked whether your HTTP requests are enforced by proper security headers?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let's analyze some of the most common scenarios.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#unsafe-sensitive-storage"&gt;
  &lt;/a&gt;
  Unsafe Sensitive Storage
&lt;/h2&gt;

&lt;p&gt;If you've been working with Web applications for a while, chances are that you've heard about (or maybe used) the &lt;a href="https://en.wikipedia.org/wiki/MD5"&gt;MD5&lt;/a&gt; message-digest algorithm. Although it is still widely used for hashing passwords, it has been proven to be extremely weak.&lt;/p&gt;

&lt;p&gt;Here's important to understand the difference between hashing and encrypting information. Encryption is supposed to happen when some sort of key is used to decrypt data. Hashing refers to the method of conversion; you can turn data into a hash but not vice versa.&lt;/p&gt;

&lt;p&gt;This applies to all sorts of sensitive information, although MD5 is mostly known for being used with password hashing. If your application keeps the user's Social Security Number (SSN), for example, make sure to not only store them safely within your database but also watch how the data are transmitted through your app to other databases and, especially, the browser.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-threat-in-action"&gt;
  &lt;/a&gt;
  The Threat In Action
&lt;/h2&gt;

&lt;p&gt;As we've seen, RailsGoat purposely stores the user's password as MD5 hashes. You can see this within the &lt;em&gt;user.rb&lt;/em&gt; model:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;hash_password&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;password&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;present?&lt;/span&gt;
      &lt;span class="nb"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Digest&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;MD5&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;hexdigest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Every time the user logs in, the app hashes the provided password and checks whether the results are equal. Otherwise, the passwords do not match, so an error is thrown.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-resolve-this-issue"&gt;
  &lt;/a&gt;
  How to Resolve This Issue
&lt;/h2&gt;

&lt;p&gt;There are many ways to tackle this issue, but perhaps one of the most famous is through salt hashes, such as the ones provided by BCrypt.&lt;/p&gt;

&lt;p&gt;Although Rails comes with default capabilities to deal with Bcrypt, a notorious lib has been widely used for this purpose: &lt;a href="https://github.com/codahale/bcrypt-ruby"&gt;bcrypt-ruby&lt;/a&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;gem &lt;span class="nb"&gt;install &lt;/span&gt;bcrypt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When you map your model with it, how the password is set and obtained from the database is defined. The lib adapts everything else automatically:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'bcrypt'&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;User&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;ActiveRecord&lt;/span&gt;

  &lt;span class="kp"&gt;include&lt;/span&gt; &lt;span class="no"&gt;BCrypt&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;password&lt;/span&gt;
    &lt;span class="vi"&gt;@password&lt;/span&gt; &lt;span class="o"&gt;||=&lt;/span&gt; &lt;span class="no"&gt;Password&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;password_hash&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;password&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new_password&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="vi"&gt;@password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Password&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new_password&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;password_hash&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="vi"&gt;@password&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;However, the flow requires an additional string column (&lt;code&gt;password_hash&lt;/code&gt;) at the table to store the password hash for the BCrypt algorithm.&lt;/p&gt;

&lt;p&gt;This way, you can set the password value directly to the model object, and BCrypt will take care of securely hashing it. The same will happen when the password is retrieved to compare with the user's input.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#exposing-too-much"&gt;
  &lt;/a&gt;
  Exposing Too Much
&lt;/h2&gt;

&lt;p&gt;Whether you're working with REST APIs or a GraphQL endpoint, for example, make sure to return only what's necessary to make the client work.&lt;/p&gt;

&lt;p&gt;If your JavaScript client requests information from an API and uses only a portion of it, it doesn't impede an attacker from grabbing your endpoint and calling it once again to retrieve the whole response or sniff it out with a proxy tool.&lt;/p&gt;

&lt;p&gt;Always review your APIs to certify that regardless of the sensitive information being returned, it will only do so with proper encryption and in the right places.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-threat-in-action"&gt;
  &lt;/a&gt;
  The Threat In Action
&lt;/h2&gt;

&lt;p&gt;When it comes to user's data, it's important to create secure mechanisms that ensure sensitive information won't be leaked.&lt;/p&gt;

&lt;p&gt;Open the &lt;code&gt;users_controller.rb&lt;/code&gt; file in the &lt;code&gt;api/v1&lt;/code&gt; folder. There, you will find the following method:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;show&lt;/span&gt;
  &lt;span class="n"&gt;respond_with&lt;/span&gt; &lt;span class="vi"&gt;@user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;as_json&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As simple as it is, when accessed by the Web client, this endpoint will return all the user's fields populated within the response, including the password.&lt;/p&gt;

&lt;p&gt;Not only the &lt;code&gt;user&lt;/code&gt; model but also other models that hold sensitive information need a way to select attributes that will be visible to APIs.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-resolve-this-issue"&gt;
  &lt;/a&gt;
  How to Resolve This Issue
&lt;/h2&gt;

&lt;p&gt;Luckily, Rails provides a very easy way to deal with it. Let's just override the &lt;code&gt;as_json&lt;/code&gt; method with the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;as_json&lt;/span&gt;
  &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;only: &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:email&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, rather than exposing everything by default, we're only responding with the required data. For each model, make sure to select the important fields and apply the same rule of thumb.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping Up
&lt;/h1&gt;

&lt;p&gt;Today, we navigated through the waters of &lt;a href="https://owasp.org/www-project-top-ten/2017/A2_2017-Broken_Authentication"&gt;broken authentication&lt;/a&gt; and &lt;a href="https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure"&gt;sensitive data exposure&lt;/a&gt;. By following these rules, you'll surely guarantee a much safer application for your users and clients.&lt;/p&gt;

&lt;p&gt;Additionally, the importance of going through the official Ruby on Rails &lt;a href="https://guides.rubyonrails.org/security.html#sessions"&gt;Security Documentation&lt;/a&gt; can’t be overemphasized. There, you may find more information about session hijacking, storage mechanisms, and strategies to encrypt your data in the best way possible.&lt;/p&gt;

&lt;p&gt;See you at our next stop!&lt;/p&gt;

</description>
      <category>rails</category>
      <category>ruby</category>
    </item>
  </channel>
</rss>
