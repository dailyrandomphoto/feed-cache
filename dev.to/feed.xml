<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How to Make Your First Open Source Contribution</title>
      <author>Ceora Ford</author>
      <pubDate>Thu, 06 May 2021 16:07:03 +0000</pubDate>
      <link>https://dev.to/codesandboxio/how-to-make-your-first-open-source-contribution-53df</link>
      <guid>https://dev.to/codesandboxio/how-to-make-your-first-open-source-contribution-53df</guid>
      <description>&lt;p&gt;Open source software is a huge part of the tech industry. Over and over, we hear about the power of open source. In &lt;a href="https://codesandbox.io/podcasts/codesandbox-podcast/elizabet-oliveira"&gt;episode 2 of The CodeSandbox Podcast&lt;/a&gt;, guest Elizabet Oliveira discussed open source and how it has impacted her career. This article will focus on getting you up and running as an open source contributor. Let's start by discussing why you should be interested in getting involved with open source. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-you-should-start-contributing-to-open-source-projects"&gt;
  &lt;/a&gt;
  Why you should start contributing to open source projects
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;I think, yes [open source has helped me in my career], because I think it's easier to have interviews... And also I ended up talking in react conf in Las Vegas. And after that, I started talking in other conferences. And so I think it opened a lot of doors.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We don't have an infinite amount of time and I'm sure there are tons of things on your to-do list. So you might be wondering why you should even be thinking about contributing to open source software. Is it really worth the time and effort?&lt;/p&gt;

&lt;p&gt;There are many benefits of contributing to open source projects. Assess your career and development goals and you might be able to accomplish them by contributing to open source software. Here's a brief and non-exhaustive list of some of the benefits of getting involved with open source:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Familiarize yourself with Git&lt;/li&gt;
&lt;li&gt;Gain experience&lt;/li&gt;
&lt;li&gt;Get attention from employers and recruiters&lt;/li&gt;
&lt;li&gt;Connect with other developers in the community&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#learn-git-and-github-basics"&gt;
  &lt;/a&gt;
  Learn Git and GitHub Basics
&lt;/h2&gt;

&lt;p&gt;Before you can go scouting for an open source project to work on, you should know the basics of Git and GitHub. You don't need to be an expert. But there are a few commands you should definitely know and understand:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;git init&lt;/li&gt;
&lt;li&gt;git clone&lt;/li&gt;
&lt;li&gt;git checkout -b&lt;/li&gt;
&lt;li&gt;git branch&lt;/li&gt;
&lt;li&gt;git add&lt;/li&gt;
&lt;li&gt;git commit -m&lt;/li&gt;
&lt;li&gt;git merge&lt;/li&gt;
&lt;li&gt;git push&lt;/li&gt;
&lt;li&gt;git pull&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This article won't discuss what these commands do or how they work. This is a checklist for you to measure your understanding. If you are unfamiliar with any of these Git commands, check out this helpful &lt;a href="https://www.git-tower.com/blog/git-cheat-sheet/"&gt;Git cheat sheet&lt;/a&gt;. To make sure you understand when and how to use each command, I suggest you create your own project locally using Git and push your project to GitHub. This will help you to become familiar with how Git and GitHub work together. Once you feel comfortable, you can move on to the next step. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#find-a-project-you-feel-comfortable-working-on"&gt;
  &lt;/a&gt;
  Find a project you feel comfortable working on
&lt;/h2&gt;

&lt;p&gt;This step may seem intimidating at first. Sometimes, you see a project that can seem complex or beyond your skill level. Some projects on GitHub are very robust and extensive. Not to mention the sheer number of open source projects on GitHub. How can you find something to work on that interests you and fits your skill level?&lt;/p&gt;

&lt;p&gt;There are a few ways to do this. You might have already found an open source product or project that you're interested in. If this is the case check for Issues with the &lt;strong&gt;good first issue&lt;/strong&gt; or &lt;strong&gt;first timers only&lt;/strong&gt; tag. These have been specifically marked for beginners or those with little open source experience. If you don't already have a project in mind, check &lt;a href="https://www.firsttimersonly.com/"&gt;First Timers Only&lt;/a&gt; and the &lt;a href="https://github.com/MunGell/awesome-for-beginners"&gt;Awesome for Beginners&lt;/a&gt; repository for more options. You can also ask other developers that you know or people in the community for suggestions.&lt;/p&gt;

&lt;p&gt;Once you find a project, there's still more you need to do to make meaningful contributions to a project. You'll need to know how to communicate when getting involved with a project.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#communication-guidelines"&gt;
  &lt;/a&gt;
  Communication guidelines
&lt;/h2&gt;

&lt;p&gt;First and foremost, make sure that you're being polite and kind when talking to anyone involved with the project. This rule goes for all online communication. It's important to remember that maintainers are busy people and may have multiple responsibilities to tackle at one time. So be patient with them and always communicate respectfully.  &lt;/p&gt;

&lt;p&gt;Most projects will have communication guidelines specifically outlined for the project. These can usually the &lt;code&gt;README.md&lt;/code&gt; or &lt;code&gt;CONTRIBUTING.md&lt;/code&gt; file. Make sure to read through the whole document and when the time comes to actually contribute your code to the project, be sure that you're following the structure and guidelines that maintainers have specified.&lt;/p&gt;

&lt;p&gt;Aside from reading and following the [CONTRIBUTING.md] guidelines, here are some general rules that you should try to adhere to when opening up issues, submitting pull requests (both of which will be covered soon), and any other communication between you and others involved in the project:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;When you open an issue, be sure to thoroughly describe the bug or problem you've run into. Include information that will help maintainers or others to reproduce the bug locally on their end.&lt;/li&gt;
&lt;li&gt;It's also good to provide a possible solution if you have one in mind. This streamlines communication and will help maintainers to quickly determine whether or not your possible contribution fits the direction of the project.&lt;/li&gt;
&lt;li&gt;Try including comments in your code. Other people working on the project likely aren't familiar with your coding style or how you think. Including explanatory comments in your code will make your logic clear and thus, others will be able to quickly understand how your code works.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When you have chosen the project you would like to work with and you've read the &lt;code&gt;CONTRIBUTING.md&lt;/code&gt; and/or &lt;code&gt;README.md&lt;/code&gt; thoroughly, you're ready to actually contribute your code to the project. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#contribute-to-your-first-project"&gt;
  &lt;/a&gt;
  Contribute to Your First Project
&lt;/h2&gt;

&lt;p&gt;With your open source project already chosen, there are a few ways you can decide on what you would like to add to the project. You can work on pre-existing issues which can be found under the "Issues" tab on GitHub. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m0qU5c68--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u8359uc3r4iif2317hng.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m0qU5c68--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u8359uc3r4iif2317hng.png" alt="Issues tab on GitHub"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When going through existing issues, you can look for things marked with the &lt;strong&gt;good first issue&lt;/strong&gt; or &lt;strong&gt;first timers only&lt;/strong&gt; tag (as previously mentioned). &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ekABniNe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/heks8ogy4b9cj3dwgbla.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ekABniNe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/heks8ogy4b9cj3dwgbla.png" alt="Good First Issue tag on an issue"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you find an issue that you're interested in, it may be useful to leave a comment on the issue outlining the solution you would like to implement. &lt;/p&gt;

&lt;p&gt;You can also create an issue based on a bug you've noticed or a feature you think needs to be improved. Do this by clicking the "New Issue" button. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nAMhAQgA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/su1ptzg7h8anorakztgc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nAMhAQgA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/su1ptzg7h8anorakztgc.png" alt="New Issue button on GitHub"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you decide to open a new issue, be sure to provide relevant information that will allow maintainers to understand the bug you've run into and/or the feature you would like to add or improve and why. Remember the communication tips that were mentioned earlier. &lt;/p&gt;

&lt;p&gt;You can skip creating an issue and just submit a pull request. This will cut out some communication that goes with creating and submitting an issue. This means you can get right to work. But keep in mind that the project maintainer may decide to decline your pull request. So the work you've done may not be used in the end. If this is the route you'd like to go, you can move on to the following steps which will cover the process of submitting a pull request.&lt;/p&gt;

&lt;p&gt;Of all the options, I recommend working on a pre-existing issue. Make sure that no matter what route you decide to take, follow the guidelines set out by maintainers in the &lt;code&gt;README.md&lt;/code&gt; and &lt;code&gt;CONTRIBUTING.md&lt;/code&gt; files.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-fork-your-project-of-choice"&gt;
  &lt;/a&gt;
  1. Fork your project of choice
&lt;/h3&gt;

&lt;p&gt;On GitHub, fork the repository you've chosen to work with. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6z9wKdcJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sifejoxn8iqf557k5998.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6z9wKdcJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sifejoxn8iqf557k5998.png" alt="Forking a repository on GitHub"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This will create a copy of the project that will be saved under your GitHub account.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ykEnLVJF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4ohjjhypi737x9d5dofe.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ykEnLVJF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4ohjjhypi737x9d5dofe.png" alt="Copy of forked repository on your GitHub account"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-clone-your-fork"&gt;
  &lt;/a&gt;
  2. Clone your fork
&lt;/h3&gt;

&lt;p&gt;To clone the fork you've created, click the "Code" button and copy the URL that's provided.&lt;/p&gt;

&lt;p&gt;In your terminal, change into the directory that you want to hold your forked project&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; &amp;lt;directory_name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now clone your forked repository using git clone and the URL you just copied&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git clone &amp;lt;url&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Change into the folder that was just created. This will likely match the name of the project you forked. So if we're using the Sandpack repo as an example, that would be [sandpack]:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; &amp;lt;project_name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#3-create-a-branch-locally"&gt;
  &lt;/a&gt;
  3. Create a branch locally
&lt;/h3&gt;

&lt;p&gt;Before you start working, create a separate branch that will hold all the code that you add or edit.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git checkout &lt;span class="nt"&gt;-b&lt;/span&gt; &amp;lt;branch-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#4-make-your-changes"&gt;
  &lt;/a&gt;
  4. Make your changes
&lt;/h3&gt;

&lt;p&gt;Now you can finally code! You may also be editing copy, fixing grammatical errors, or improving documentation. Whatever changes you're looking to make, you can finally do it at this step!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-commit-and-push-your-changes"&gt;
  &lt;/a&gt;
  5. Commit and push your changes
&lt;/h3&gt;

&lt;p&gt;Before you commit and push your changes, make sure to run and test your code. Once your sure that your code is functioning as desired, you can commit and push your changes to GitHub.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git add &lt;span class="nb"&gt;.&lt;/span&gt;
git commit &lt;span class="nt"&gt;-m&lt;/span&gt; &lt;span class="s1"&gt;'commit message here'&lt;/span&gt;
git push &lt;span class="nt"&gt;-u&lt;/span&gt; origin &lt;span class="nb"&gt;head&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#6-create-a-pull-request"&gt;
  &lt;/a&gt;
  6. Create a pull request
&lt;/h3&gt;

&lt;p&gt;Go to the original project on GitHub and you should see a prompt encouraging you to open a new pull request from the branch you created. Click the "Compare and pull request" button. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0y9CXSk8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d4tnxgdu5uthhe1otcpg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0y9CXSk8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d4tnxgdu5uthhe1otcpg.png" alt="Compare and pull request button"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once you do this you will be shown a text editor. Fill this in with all the relevant information needed to understand the work you've just done. When you do this, click the "Create pull request" button.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jR67ycOu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/768u0gie4xjvgi8csgkd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jR67ycOu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/768u0gie4xjvgi8csgkd.png" alt="Text editor and Create pull request button"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once you create your pull request, you'll have to wait on maintainers to respond. If the work you've done is error free and fits the scope and direction of the project, maintainers might merge your work into the project. They may request that you make changes to the work you've done. They might also decide to reject your pull request. If this happens, don't be discouraged. Maintainers will probably have a good reason for doing this and it's likely that will let you know. You can decide to work on another issue in the same project or you can find a new project to work with.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Open source can seem intimidating. But once you dive into it, you'll see how rewarding it can be and you'll quickly reap the benefits. Here's a quick summary of the steps you need to take when you contribute to open source: &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Thoroughly read through the &lt;code&gt;README.md&lt;/code&gt; and &lt;code&gt;CONTRIBUTING.md&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Fork the project repository&lt;/li&gt;
&lt;li&gt;Clone the project locally&lt;/li&gt;
&lt;li&gt;Create a feature branch for your work&lt;/li&gt;
&lt;li&gt;Once you finish make changes, commit and push your work&lt;/li&gt;
&lt;li&gt;Open a PR&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Once you've done this, you'll officially become an open source contributor! If you'd like to prepare yourself more before getting started or if you want to learn more about open source, here are some resources I found very useful. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#additional-resources"&gt;
  &lt;/a&gt;
  Additional Resources
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://opensource.guide/how-to-contribute/"&gt;Open Source Guide - How to Contribute to Open Source&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.katherinempeterson.com/how-to-contribute-to-your-first-open-source-project"&gt;How to Contribute to Your First Open Source Project by Katherine Peterson&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://css-tricks.com/open-source-etiquette-guidebook/"&gt;An Open Source Etiquette Guidebook by Sarah Drasner and Kent C. Dodds&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/devteam/hacktoberfest-etiquette-for-contributors-ec6"&gt;Hacktoberfest Etiquette for Contributors by Christina Gorton&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>opensource</category>
      <category>beginners</category>
      <category>coding</category>
    </item>
    <item>
      <title>Understanding Blockchain 101</title>
      <author>Rahul Sunil</author>
      <pubDate>Thu, 06 May 2021 16:01:25 +0000</pubDate>
      <link>https://dev.to/rahulsunil2/understanding-blockchain-101-5637</link>
      <guid>https://dev.to/rahulsunil2/understanding-blockchain-101-5637</guid>
      <description>&lt;p&gt;Everyone who’s anything about blockchain might’ve heard about bitcoins, the most widely used application of blockchain. So maybe, understanding how bitcoins work may help you understand how blockchain works, but blockchain has a lot of other applications like supply chain management, secure sharing of data, etc.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#bitcoin-the-form-of-currency-you-wish-you-had-invested-in-during-its-inception"&gt;
  &lt;/a&gt;
  Bitcoin - The form of currency you wish you had invested in during its inception.😄
&lt;/h1&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Bitcoin(₿)&lt;/strong&gt; is a cryptocurrency invented in 2008 by an unknown person or group of people using the name Satoshi Nakamoto. The currency began to use in 2009 when its implementation was released as open-source software. Bitcoin is a decentralized digital currency, without a central bank or single administrator, that can be sent from user to user on the peer-to-peer bitcoin network without the need for intermediaries. Transactions are verified by network nodes through cryptography and recorded in a public distributed ledger called a blockchain.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Okay so that's the definition from Wikipedia, I'll break it down for you in simple layman terms.&lt;/strong&gt;&lt;br&gt;
Bitcoin is a digital and global money system currency. It allows people to send or receive money across the internet, even to someone they don’t know or don’t trust. Money can be exchanged without being linked to a real identity.&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#how-blockchain-is-different-from-the-traditional-banking-system-the-one-that-you-all-are-familiar-withhopefully"&gt;
  &lt;/a&gt;
  How Blockchain is different from the Traditional Banking System - The one that you all are familiar with(hopefully🤞).
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Kpr3Xj-4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dh5qs5pmrantck4km5ie.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kpr3Xj-4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dh5qs5pmrantck4km5ie.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Some of the few key features are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Decentralization&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Anonymity&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Security&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#decentralization"&gt;
  &lt;/a&gt;
  Decentralization
&lt;/h3&gt;

&lt;p&gt;This word is thrown around a lot in the crypto-currency world. All it means is that there is no central point of control(like Reserve Bank or govt. in India) in the Bitcoin network. The Bitcoin network is designed to be hosted and used by regular people. There is no Bitcoin company, there is no data centre.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#anonymity"&gt;
  &lt;/a&gt;
  Anonymity
&lt;/h3&gt;

&lt;p&gt;Users have an address that holds their balance, much like an email address. Balances are public, but there is no way to relate an address to a person unless they decide to give their address away. Here is an example Bitcoin address: &lt;code&gt;bc1qvw0ytfntx6zs0lfsruem6xwj0mewng523ktatp&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#security"&gt;
  &lt;/a&gt;
  Security
&lt;/h3&gt;

&lt;p&gt;I’m not going to confuse you with private key v/s public key gibberish in here. Bitcoin is the most secure network I’m aware of. Not a single Bitcoin in the last ten years has ever been fraudulently spent. There is nothing to hack. There is no central server that holds the balances, passwords, and usernames. In fact, every computer owns a copy of the balances, but each user holds their own keys that control those balances.&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;Here enters the hero of the show....&lt;/strong&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#bitcoin-is-blockchain-but-the-viceversa-is-not-so-correct"&gt;
  &lt;/a&gt;
  Bitcoin is blockchain but the vice-versa is not so correct.
&lt;/h1&gt;

&lt;p&gt;In super-simple terms, a blockchain is a computer file for storing data. Or, to put it in more technical jargon, it’s an open, distributed ledger, which means the data contained within the blockchain is distributed across many computers and is therefore decentralised.&lt;br&gt;
&lt;strong&gt;Decentralised. Distributed. This sounds a bit like Bitcoin…&lt;/strong&gt;&lt;br&gt;
Well done Sherlock! Blockchain is the technology that underpins Bitcoin and it was developed specifically for Bitcoin. So, Bitcoin was the first example of blockchain in action and without blockchain, there would be no Bitcoin. That’s why the two names are so often used interchangeably.&lt;/p&gt;

&lt;p&gt;But that doesn’t make them the same, there are so many other applications for blockchain out there...&lt;/p&gt;

&lt;p&gt;Because blockchain and Bitcoin are so inextricably linked, it took people a long time to realise that blockchain actually has much wider applications beyond cryptocurrency networks. In fact, blockchain’s potential is so great that many people (myself included) believe the technology will revolutionise the way we do business, just like the internet did before it.&lt;/p&gt;

&lt;p&gt;Here are just a few examples of the wider applications of blockchain beyond Bitcoin and other cryptocurrencies:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Executing smart contracts.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Maintaining a shared, transparent system of record.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Auditing the supply chain.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Providing proof of insurance.&lt;/strong&gt;
I might be proving my points in a very technical way throwing all these jargons at you. So if you need a bit more clarity, Do your own research
(Blockchain Applications)[&lt;a href="https://blockgeeks.com/guides/blockchain-applications/"&gt;https://blockgeeks.com/guides/blockchain-applications/&lt;/a&gt;]&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;Still, confused?&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Totally understandable, if a picture is worth a thousand words, then a 60fps 6-minute video with 21600 frames can say 21,600,000(roughly 21 million words, way more than what I wrote for sure)...&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;I’m really sorry, I had to do that.😂😂😂🙏&lt;br&gt;
Check this video out for more clarity.&lt;/em&gt;&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/SSo_EIwHSd4"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;P.S. This is my first post on Dev.to, So I actually used one of my medium posts here. Please do give your feedback. Thanks a lot.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="https://rahulsunil.medium.com/understanding-blockchain-101-2acbac5e14b9" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DtP7dCbR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/fit/c/56/56/1%2AnnJtpJhaFWovKz1C21He-A.jpeg" alt="Mr. Bing"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="https://rahulsunil.medium.com/understanding-blockchain-101-2acbac5e14b9" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Understanding Blockchain 101. Everyone who’s anything about… | by Mr. Bing | Medium&lt;/h2&gt;
      &lt;h3&gt;Mr. Bing ・ &lt;time&gt;Jun 5, 2020&lt;/time&gt; ・ 
      &lt;div class="ltag__link__servicename"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ze5yh_2q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/medium_icon-90d5232a5da2369849f285fa499c8005e750a788fdbf34f5844d5f2201aae736.svg" alt="Medium Logo"&gt;
        rahulsunil.Medium
      &lt;/div&gt;
    &lt;/h3&gt;
&lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


</description>
      <category>blockchain</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Create a Blog using Hugo</title>
      <author>Aditya</author>
      <pubDate>Thu, 06 May 2021 15:29:04 +0000</pubDate>
      <link>https://dev.to/adityavinodh/create-a-blog-using-hugo-447l</link>
      <guid>https://dev.to/adityavinodh/create-a-blog-using-hugo-447l</guid>
      <description>&lt;h1&gt;
  &lt;a href="#what-is-hugo"&gt;
  &lt;/a&gt;
  What is Hugo?
&lt;/h1&gt;

&lt;p&gt;Hugo is a static-site generator that helps you generate and build static files like HTML, CSS, and JavaScript ahead of time. It is an opensource project built with Go and boasts impressive build times that seems incomparable.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-does-it-do"&gt;
  &lt;/a&gt;
  What does it do?
&lt;/h1&gt;

&lt;p&gt;It helps you convert markdown files (the files you will be writing your articles or blog posts in) to the static files that will be served later. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#how-is-it-different"&gt;
  &lt;/a&gt;
  How is it different?
&lt;/h1&gt;

&lt;p&gt;This is different to traditional methods like a wordpress site, that has a dedicated database and a web server that needs to respond to requests, communicate with the Databse, and serve the files on every request. It is much more slower than using a static-site generator like Hugo as nothing is dynamic; we know that the content is not going to change. HTTP web servers are extremely good and fast at just serving static content. Users ask for a file, and the server just has to give it. There is no other processing involved.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#the-benefits"&gt;
  &lt;/a&gt;
  The Benefits
&lt;/h1&gt;

&lt;p&gt;Your website can be deployed and hosted anywhere (On GCP cloud storage, AWS S3, Netlfify, Firebase, etc.), and can be deployed to a CDN (Content Delivery Network) so that it can be cached on a global edge network and significantly improve the performance and speed of page loads. This is especially important with poor internet connections, and for SEO (Search Engine Optimization).&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#caveats"&gt;
  &lt;/a&gt;
  Caveats
&lt;/h1&gt;

&lt;p&gt;However, that does not mean Hugo can not be used for anything dynamic. If your use case if very complex such as involving user input, you might not be able to use Hugo. Using a regular website, or single-page-application with React, Angular, Vue, or Svelte might be a better option. But if all you need is a simple blog, with a few extra features, like an option for users to provide comments, Hugo has everything you need.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#get-started"&gt;
  &lt;/a&gt;
  Get Started
&lt;/h1&gt;

&lt;p&gt;The &lt;a href="https://gohugo.io/documentation/"&gt;Hugo Documentation&lt;/a&gt; is very helpful and elaborate. It is the first place to check in case of references or issues.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h2&gt;

&lt;p&gt;Hugo is available in all platforms (Windows, MacOS, and Linux), as a binary that you can install, or via a package manager. If you have a compatible package manager, that is the recommended way as it is the easiest and has the least amount of work to maintain&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#install-using-the-binaries"&gt;
  &lt;/a&gt;
  Install using the Binaries
&lt;/h3&gt;

&lt;p&gt;Availabe from their GitHub &lt;a href="https://github.com/gohugoio/hugo/releases"&gt;Releases&lt;/a&gt; page. (Choose the appropriate platform and type of file). Make sure to install it in a location that is somewhere in your &lt;code&gt;PATH&lt;/code&gt;. &lt;code&gt;usr/local/bin&lt;/code&gt; is the best place for Linux. Otherwise, append the location to your &lt;code&gt;PATH&lt;/code&gt; variable.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#install-using-a-package-manager"&gt;
  &lt;/a&gt;
  Install using a Package Manager
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;On Windows&lt;/strong&gt;&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;choco install hugo -confirm
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;or&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;scoop install hugo
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;p&gt;&lt;strong&gt;On Linux and MacOS&lt;/strong&gt; (Using Homebrew)&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;brew install hugo
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;p&gt;To verify that the installation occurred successfully, run the following command.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;hugo version
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;There should not be any errors.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-the-site"&gt;
  &lt;/a&gt;
  Creating the Site
&lt;/h2&gt;

&lt;p&gt;Change directories into the location you want to create your project. Then run the following command with your project's name. This will create folder that contains all the files that you need to get started.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# Creates a new site and project called 'firstblog'
hugo new site firstblog
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Change directories into the project directory that was created.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd firstblog
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;You will notice a similar folder structure. The &lt;code&gt;config.toml&lt;/code&gt; file is where all the variables and settings for your projects live. You will be able to setup and configure most of your website from that one file.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.
├── archetypes
├── config.toml
├── content
├── data
├── layouts
├── static
└── themes
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;If you want to change the file type for your configurations, you can change it to YAML or JSON depending on your preference. You can copy and paste the contents of the file using a tool like &lt;a href="https://www.convertsimple.com/convert-toml-to-yaml/"&gt;ConvertSimple&lt;/a&gt; to convert the format and syntax.&lt;/p&gt;

&lt;p&gt;All of the actual content that you write as markdown files lives inside the &lt;code&gt;content&lt;/code&gt; directory. You can organize the content in folders, and subfolders, and Hugo will automatically take care of organizing the posts as categories or subcategories.&lt;/p&gt;

&lt;p&gt;Use the following command to create a blank markdown file. You can specify where you want to store this file. If the file name alone is provided, then it is directly placed in the &lt;code&gt;content&lt;/code&gt; directory.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;hugo create first-post.md
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;or try the following to place it in &lt;code&gt;content/posts&lt;/code&gt;:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;hugo create posts/first-post.md
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;h3&gt;
  &lt;a href="#front-matter"&gt;
  &lt;/a&gt;
  Front Matter
&lt;/h3&gt;

&lt;p&gt;Every markdown file that is created and used for your website has a section on the top that is unique to Hugo. It starts and ends with &lt;code&gt;---&lt;/code&gt;. The syntax used in this is &lt;code&gt;TOML&lt;/code&gt; by default. You can change this default setting with the following command:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# To convert to YML
hugo convert toYAML
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;In the front matter, you can set options for the specific page, meta data, and other configuration that is specific to this particular page. Check out the documentation of &lt;a href="https://gohugo.io/content-management/front-matter/"&gt;Front Matter&lt;/a&gt; to learn the different options available.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#install-a-theme"&gt;
  &lt;/a&gt;
  Install a Theme
&lt;/h3&gt;

&lt;p&gt;One of the powers of Hugo is to utilize one of the many themes created by the community. Check out the &lt;a href="https://themes.gohugo.io/"&gt;Complete List&lt;/a&gt; and choose one of the themes. Read the documentation and install the theme. This process is very straightforward. Mostly, you will have to download the code, either manually, or using Git, and place it in the &lt;code&gt;themes&lt;/code&gt; folder, then inside another folder with the name of the theme you chose.&lt;/p&gt;

&lt;p&gt;Then make sure to go to the &lt;code&gt;config&lt;/code&gt; file and update the theme variable with the name of the theme you have chosen.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#running-the-site"&gt;
  &lt;/a&gt;
  Running the Site
&lt;/h3&gt;

&lt;p&gt;Hugo has an in-built web server that helps you view the site locally, and automatically watches your files for changes, and re-runs when the changes occur.&lt;/p&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;hugo server -D&lt;br&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
&lt;br&gt;
  &lt;a href="#deployment"&gt;&lt;br&gt;
  &lt;/a&gt;&lt;br&gt;
  Deployment&lt;br&gt;
&lt;/h2&gt;

&lt;p&gt;With the following command, Hugo builds your site and outputs the final static content to the &lt;code&gt;public&lt;/code&gt; directory by default. That can be modified in the &lt;code&gt;config&lt;/code&gt; file if needed. The contents of this file needs to be deployed with whatever hosting provider you chose to use.&lt;/p&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;hugo -D&lt;br&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h1&gt;
&lt;br&gt;
  &lt;a href="#bonus-content"&gt;&lt;br&gt;
  &lt;/a&gt;&lt;br&gt;
  Bonus content&lt;br&gt;
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#hosting"&gt;
  &lt;/a&gt;
  Hosting
&lt;/h2&gt;

&lt;p&gt;Hugo is very feature-rich, and is an amazing product if used wisely. You could set up a CI/CD Pipeline to run every time you make changes and deploy to your hosting provider of choice.&lt;/p&gt;

&lt;p&gt;I have setup this blog using GitHub Actions and Firebase. Every time code is merged, a commit is made to the main branch, or a Pull Request is merged, a Firebase workflow runs on GitHub in the cloud that deploys the content of the &lt;code&gt;public&lt;/code&gt; directory to Firebase Hosting.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#comments"&gt;
  &lt;/a&gt;
  Comments
&lt;/h2&gt;

&lt;p&gt;You can add a comments or discussion section to all of your pages (or select ones) easily using &lt;a href="https://disqus.com/"&gt;Disqus&lt;/a&gt;. Instructions and setup is very straightforward and simple.&lt;/p&gt;




&lt;p&gt;That's all for this post and tutorial. I hoped this has helped you and given you an idea of how things work.&lt;/p&gt;

</description>
      <category>hugo</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>What I learned after failing to build a Project</title>
      <author>Pratham Sharma</author>
      <pubDate>Thu, 06 May 2021 15:26:39 +0000</pubDate>
      <link>https://dev.to/ps173/what-i-learned-after-failing-to-build-a-project-3ka8</link>
      <guid>https://dev.to/ps173/what-i-learned-after-failing-to-build-a-project-3ka8</guid>
      <description>&lt;p&gt;So I have been working on an Image-Editor for react for past few days. And just to clear I have dropped the idea for time being due to lot of reasons. Firstly I was not enjoying the process of developing it anymore. Other reasons were that canvas API is very hard to work in with react. Also I am very aware of all the libraries that make it easier to use but then the application had nothing to offer if it was build on something as Konva or Toast-image-editor. It is very true that I worked on the project for 5 days in row and therefore it was more disappointing to drop the project.&lt;/p&gt;

&lt;p&gt;But the project taught me a lot of stuff including how to manage uploading of image files in react,Using context api, how to convert them to base64 and even how to manipulate them. Project also taught me to keep some general things in mind. They are:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Build UI first - Prior to functionality building UI must be given importance. This is so because a well developed UI can help you remain motivated and support the development. Also a good UI is a great step towards clearing the thoughts for further development in my opinion.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Always Plan Well Before Project - So It was not like I did not planned well before developing it was more like I was confused. Well since I had already made the test version in vanilla javascript. I was confident or overconfident to step directly without doing proper research. So an Important take-back is that research. Even if you have the idea. Plan the stack or library you were going to use.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If It’s not working then don’t stress - Yes if it does not work give up on it for the time being and pick it later. Maybe you are just tired of looking at same thing, change the pace, work on something else.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And I guess those were it. I was really disappointed in myself because I was building it since long back. Well I will make sure to pick this up again someday in future till then I will keep up the hardwork on other projects. If you want to share your experiences with failed projects then please do.✌️&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>watercooler</category>
      <category>productivity</category>
      <category>react</category>
    </item>
    <item>
      <title>What Is "Lifting State Up" in React?</title>
      <author>Reed Barger</author>
      <pubDate>Thu, 06 May 2021 15:22:32 +0000</pubDate>
      <link>https://dev.to/reedbarger/what-is-lifting-state-up-in-react-o97</link>
      <guid>https://dev.to/reedbarger/what-is-lifting-state-up-in-react-o97</guid>
      <description>&lt;p&gt;Here is a simple, practical example of what the React concept of "lifting state up" is and how it can help you in building your applications.&lt;/p&gt;

&lt;p&gt;Lifting state up is a common pattern that is essential for React developers to know, because it helps us avoid more complex (and often unnecessary) patterns for managing our state.&lt;/p&gt;

&lt;p&gt;How does it do that? Let's see how through a simple example.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Want to build amazing React apps using best practices from front to back? Check out the &lt;a href="https://reactbootcamp.com"&gt;&lt;strong&gt;React Bootcamp&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#breaking-down-our-todo-app"&gt;
  &lt;/a&gt;
  Breaking down our Todo App
&lt;/h2&gt;

&lt;p&gt;Let's start with a basic todo application, which consists of three components: &lt;code&gt;TodoCount&lt;/code&gt;, &lt;code&gt;TodoList&lt;/code&gt; and &lt;code&gt;AddTodo&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;All of these components, as their name suggests, are going to need to share some common state.&lt;/p&gt;

&lt;p&gt;If we look at &lt;code&gt;TodoCount&lt;/code&gt;, this is where we're going to display up at the top of our app, how many total to dues we have in our application.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;TodoList&lt;/code&gt; is going to be where we show all of our todos. It has some initial state with these three items ("item 1", "item 2", "item 3"), which we're displaying within an unordered list.&lt;/p&gt;

&lt;p&gt;And finally, we have &lt;code&gt;AddTodo&lt;/code&gt;. This consists of a form, where we want to be able to add a new item to this list. Right now we're just logging the todo that we type into the input to the console:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// src/App.js&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;TodoCount&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;TodoList&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;AddTodo&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;TodoCount&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Total&lt;/span&gt; &lt;span class="nx"&gt;Todos&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;TodoList&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;todos&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setTodos&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;item 1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;item 2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;item 3&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ul&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;todos&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;todo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;li&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;todo&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;todo&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/li&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="p"&gt;))}&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/ul&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;AddTodo&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;handleSubmit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;preventDefault&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;todo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;elements&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;todo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;todo&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;form&lt;/span&gt; &lt;span class="nx"&gt;onSubmit&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;handleSubmit&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;todo&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;submit&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Add&lt;/span&gt; &lt;span class="nx"&gt;Todo&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/form&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#why-do-we-care-about-lifting-state-up"&gt;
  &lt;/a&gt;
  Why do we care about lifting state up?
&lt;/h2&gt;

&lt;p&gt;How can we use the concept of lifting state up to help finish our application?&lt;/p&gt;

&lt;p&gt;These components need to share some state, some todo state. We need to share that todo state order to display the number of todos as well as to update our todo list.&lt;/p&gt;

&lt;p&gt;This is where the concept of lifting state up comes in.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;We lift up state to a common ancestor of components that need it, so that they can all share in the state. This allows us to more easily share state among all of these components that need rely upon it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;What common ancestor should we lift up our state to so all of the components can read from and update that state? The &lt;code&gt;App&lt;/code&gt; component.&lt;/p&gt;

&lt;p&gt;Here's what our app should now look like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// src/App.js&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;todos&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setTodos&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;item 1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;item 2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;item 3&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;    

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;TodoCount&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;TodoList&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;AddTodo&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;TodoCount&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Total&lt;/span&gt; &lt;span class="nx"&gt;Todos&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;TodoList&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ul&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;todos&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;todo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;li&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;todo&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;todo&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/li&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="p"&gt;))}&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/ul&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;AddTodo&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;handleSubmit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;preventDefault&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;todo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;elements&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;todo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;todo&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;form&lt;/span&gt; &lt;span class="nx"&gt;onSubmit&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;handleSubmit&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;todo&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;submit&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Add&lt;/span&gt; &lt;span class="nx"&gt;Todo&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/form&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#passing-state-down"&gt;
  &lt;/a&gt;
  Passing state down
&lt;/h2&gt;

&lt;p&gt;However, there's a small problem.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;TodoList&lt;/code&gt; doesn't have access to the &lt;code&gt;todos&lt;/code&gt; state variable, so we need to pass that down from &lt;code&gt;App&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--O_EHSOkQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reactbootcamp.com/content/images/2021/05/Screen-Shot-2021-05-05-at-12.29.41-AM.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--O_EHSOkQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reactbootcamp.com/content/images/2021/05/Screen-Shot-2021-05-05-at-12.29.41-AM.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We can do that with components in React using props.&lt;/p&gt;

&lt;p&gt;On &lt;code&gt;TodoList&lt;/code&gt;, let's add a prop named &lt;code&gt;todos&lt;/code&gt;. We can destructure &lt;code&gt;todos&lt;/code&gt; from the props object. This allows us to see our todo items once again.&lt;/p&gt;

&lt;p&gt;Now what about displaying the total number of todos within our to do count component?&lt;/p&gt;

&lt;p&gt;This is another instance in which we can pass down the data as a prop, since to do count relies upon that state. So we'll again provide the same prop of to dues the structure from to do counts, props object, and to display the total number of to dues. That would be from the value &lt;code&gt;todos.length&lt;/code&gt;, and we see that it's 3 currently.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;todos&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setTodos&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;item 1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;item 2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;item 3&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;TodoCount&lt;/span&gt; &lt;span class="nx"&gt;todos&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;todos&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;TodoList&lt;/span&gt; &lt;span class="nx"&gt;todos&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;todos&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;AddTodo&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;TodoCount&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;todos&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Total&lt;/span&gt; &lt;span class="nx"&gt;Todos&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;todos&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;TodoList&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;todos&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ul&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;todos&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;todo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;li&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;todo&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;todo&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/li&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="p"&gt;))}&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/ul&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#passing-callbacks-down"&gt;
  &lt;/a&gt;
  Passing callbacks down
&lt;/h2&gt;

&lt;p&gt;Now the last step is to be able to add a new todo.&lt;/p&gt;

&lt;p&gt;This is where our setter function, &lt;code&gt;setTodos&lt;/code&gt;, comes in. To update our todo state, we don't need to pass down both values, the variable and the setter function, all we need to do is pass down &lt;code&gt;setTodos&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;We'll pass it down to &lt;code&gt;addTodo&lt;/code&gt; as a prop of the same name (setTodos) and destructure it from props.&lt;/p&gt;

&lt;p&gt;As you can see, we're using our form on submit to get access to the input's value; whatever was typed into it, which we're putting it within a local variable named &lt;code&gt;todo&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Instead of needing to pass down the current todos array, we can just use an inner function to get the previous todos value. This allows us to get previous todos and just return what we want the new state to be.&lt;/p&gt;

&lt;p&gt;This new state will be an array, in which we will spread all of the previous todos and add our new todo as the last element in that array:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;todos&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setTodos&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;item 1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;item 2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;item 3&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;TodoCount&lt;/span&gt; &lt;span class="nx"&gt;todos&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;todos&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;TodoList&lt;/span&gt; &lt;span class="nx"&gt;todos&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;todos&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;AddTodo&lt;/span&gt; &lt;span class="nx"&gt;setTodos&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;setTodos&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;AddTodo&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;setTodos&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;handleSubmit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;preventDefault&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;todo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;elements&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;todo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;setTodos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;prevTodos&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[...&lt;/span&gt;&lt;span class="nx"&gt;prevTodos&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;todo&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;form&lt;/span&gt; &lt;span class="nx"&gt;onSubmit&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;handleSubmit&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;todo&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;submit&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Add&lt;/span&gt; &lt;span class="nx"&gt;Todo&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/form&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Not only by lifting state up and passing its state variable down to the components that need to read from it, can we use this pattern, we can also use it for callbacks to be able to update state.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Once we add a new item to our todo list, it's immediately added to state and we see our &lt;code&gt;TodoList&lt;/code&gt; component re-render to display that new item, as well as &lt;code&gt;TodoCount&lt;/code&gt; to show the total number of todos which is now 4:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3FDImXMX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://reactbootcamp.com/content/images/2021/05/lifting-state-2.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3FDImXMX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://reactbootcamp.com/content/images/2021/05/lifting-state-2.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Lifting state up is an important pattern for React developers because sometimes we have state that's located within a particular component that also needs to be shared with sibling components.&lt;/p&gt;

&lt;p&gt;Instead of using an entire state management library like Redux or React Context, we can just lift the state up to the closest common ancestor and pass both the state variables the state values down as well as any callbacks to update that state.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ready-for-the-next-step-join-the-react-bootcamp"&gt;
  &lt;/a&gt;
  Ready for the next step? Join The React Bootcamp
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="http://bit.ly/join-react-bootcamp"&gt;The React Bootcamp&lt;/a&gt;&lt;/strong&gt; takes everything you should know about learning React and bundles it into one comprehensive package, including videos, cheatsheets, plus special bonuses.&lt;/p&gt;

&lt;p&gt;Gain the insider information hundreds of developers have already used to master React, find their dream jobs, and take control of their future:&lt;/p&gt;

&lt;p&gt;&lt;a href="http://bit.ly/join-react-bootcamp"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w2usNUi9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reedbarger.nyc3.digitaloceanspaces.com/react-bootcamp-banner.png" alt="The React Bootcamp"&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;
&lt;em&gt;Click here to be notified when it opens&lt;/em&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Precision agriculture by m0nit0ring and c0ntr0lling system</title>
      <author>GUNTAKA LIKHITHA</author>
      <pubDate>Thu, 06 May 2021 15:05:45 +0000</pubDate>
      <link>https://dev.to/221910304021/precision-agriculture-by-m0nit0ring-and-c0ntr0lling-system-45ao</link>
      <guid>https://dev.to/221910304021/precision-agriculture-by-m0nit0ring-and-c0ntr0lling-system-45ao</guid>
      <description>&lt;p&gt;Precision agriculture by m0nit0ring and c0ntr0lling system is the last decade techn0l0gical ev0luti0n that als0 affected breeding of d0mestic animals.&lt;br&gt;
Use of vari0us sens0rs and wireless devices:&lt;/p&gt;

&lt;p&gt;1)Farmers can 0btain inf0rmati0n ab0ut s0il humidity using I0T techn0l0gy, but farmers estimate the s0il humidity acc0rding to the rainfall.&lt;/p&gt;

&lt;p&gt;2)Farmers can 0btain inf0rmati0n ab0ut nutrients c0nditi0ns in the s0il, but farmers used t0 kn0w the nutrients by c0ntinu0us 0bservati0n.&lt;/p&gt;

&lt;p&gt;3)Farmers can 0btain inf0rmati0n ab0ut the 0ccurrence of plant diseases and pests in plants but in the past farmers used to kn0w the nutrients by c0ntinu0us 0bservati0n.&lt;br&gt;
Maj0r challenges faced by the agriculture d0main are the excess use 0f water and fertilizers in harvests, which will diminish the quality and quantity of the pr0ducts. This pr0blem can be tackled by the utilizati0n 0f the pr0p0sed system. Hence, the pr0p0sed framew0rk can be implemented in a real-time farming envir0nment t0 get rev0luti0nary results. This can be extended by including disease predicti0n and a rec0mmendati0n system t0 pr0vide instructi0ns t0 farmers regarding pesticides and cultivati0n. We can als0 include a web service platf0rm f0r c0llab0rative gr0up c0mmunicati0n between farmers and agricultural experts as future w0rk. A system has t0 be devel0ped t0 measure pesticide levels in cr0ps. Sustainable energy can be used f0r 0perating the system rather than using electricity.&lt;/p&gt;

&lt;p&gt;Features: -&lt;/p&gt;

&lt;p&gt;1)Intelligent agriculture.&lt;/p&gt;

&lt;p&gt;2)Inf0rmation systems and c0ntr0l netw0rks applied in real farming scenari0s.&lt;/p&gt;

&lt;p&gt;3)Aut0matic c0ntr0l system pr0vides appr0priate gr0wth c0nditi0ns in the greenh0use.&lt;/p&gt;

&lt;p&gt;4)Sens0r netw0rk.&lt;/p&gt;

&lt;p&gt;5)Data collecti0n.&lt;/p&gt;

&lt;p&gt;6)Netw0rk service.&lt;/p&gt;

&lt;p&gt;7)Data fusi0n.&lt;/p&gt;

&lt;p&gt;8)C0mputati0n in intelligent agriculture.&lt;/p&gt;

&lt;p&gt;9)C0ntr0lling plant diseases and insect pests.&lt;/p&gt;

&lt;p&gt;10)Aut0n0m0us tracing system.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>🎉 The Create Go App project has grown to v2, but is still easier, better, faster &amp; stronger</title>
      <author>Vic Shóstak</author>
      <pubDate>Thu, 06 May 2021 14:55:16 +0000</pubDate>
      <link>https://dev.to/koddr/the-create-go-app-project-has-grown-to-v2-but-is-still-easier-better-faster-stronger-575j</link>
      <guid>https://dev.to/koddr/the-create-go-app-project-has-grown-to-v2-but-is-still-easier-better-faster-stronger-575j</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Hello, friends! 😉 I'm excited to share great news with you: the &lt;a href="https://github.com/create-go-app/cli"&gt;Create Go App CLI&lt;/a&gt; project, &lt;em&gt;that I've been working on for a long time&lt;/em&gt;, has finally been updated to major version &lt;code&gt;2&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In case anyone forgot, I remind you that with this CLI you can create in just a few seconds a new production-ready project with &lt;strong&gt;backend&lt;/strong&gt; (Go), &lt;strong&gt;frontend&lt;/strong&gt; (JavaScript, TypeScript) and &lt;strong&gt;deploy automation&lt;/strong&gt; (Ansible, Docker).&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;☝️ You only need to focus on writing code and thinking of business-logic! The CLI will take care of the rest.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;OK. Let's look at the changes together! Fasten your seat belts, we're starting.&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  📝 Table of contents
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#new-in-v2-and-beyond"&gt;New in v2 and beyond&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#changes-in-cli-commands"&gt;Changes in CLI commands&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#ansible-roles"&gt;Ansible roles&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#web-proxy-servers"&gt;Web, proxy servers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#database"&gt;Database&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#cache-key-value-storage"&gt;Cache, key-value storage&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="#project-wiki-page"&gt;Project Wiki page&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#your-assistance-to-the-project"&gt;Your assistance to the project&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#new-in-v2-and-beyond"&gt;
  &lt;/a&gt;
  New in v2 and beyond
&lt;/h2&gt;

&lt;p&gt;There are actually quite a few changes, but I've highlighted a few of the &lt;strong&gt;most important&lt;/strong&gt; ones that change the way you work with the Create Go App CLI. For all other changes, please read the release notes in our GitHub repository:&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/create-go-app"&gt;
        create-go-app
      &lt;/a&gt; / &lt;a href="https://github.com/create-go-app/cli"&gt;
        cli
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      ✨ A powerful CLI for the Create Go App project. Create a new production-ready project with backend, frontend and deploy automation by running one CLI command!
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a href="#toc"&gt;↑ Table of contents&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#changes-in-cli-commands"&gt;
  &lt;/a&gt;
  Changes in CLI commands
&lt;/h2&gt;

&lt;p&gt;This release was aimed primarily at speeding up the CLI and reducing the functionality of commands that were too overloaded.&lt;/p&gt;

&lt;p&gt;&lt;a href="#toc"&gt;↑ Table of contents&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-init-endraw-command"&gt;
  &lt;/a&gt;
  &lt;code&gt;init&lt;/code&gt; command
&lt;/h3&gt;

&lt;p&gt;After some analysis of the CLI command feedback, we concluded that the command to create a configuration file is very rarely used. The same comment from the focus group of our users, followed about the configuration file itself.&lt;/p&gt;

&lt;p&gt;The most popular comment we got, was something like this: &lt;/p&gt;

&lt;p&gt;— [...] &lt;em&gt;nobody likes setting up yet another config for yet another CLI!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;So, it was decided to remove &lt;code&gt;init&lt;/code&gt; command and file-based config &lt;code&gt;.cgapp.yml&lt;/code&gt; completely, even &lt;strong&gt;without&lt;/strong&gt; the possibility of backward compatibility, which we successfully did in &lt;code&gt;v2.0.0&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="#toc"&gt;↑ Table of contents&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-create-endraw-command"&gt;
  &lt;/a&gt;
  &lt;code&gt;create&lt;/code&gt; command
&lt;/h3&gt;

&lt;p&gt;The central CLI command has been redesigned, and its execution time has been &lt;strong&gt;reduced to 2-4 seconds&lt;/strong&gt;. This was achieved by switching to generating the frontend part of the project using ready-made templates from the awesome next generation frontend tooling called &lt;a href="https://vitejs.dev/"&gt;Vite.js&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SmFIbrRB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zi3suks2f304z2oh389u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SmFIbrRB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zi3suks2f304z2oh389u.png" alt="vite js"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, you can choose between this frontend frameworks/libraries: &lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Version&lt;/th&gt;
&lt;th&gt;JavaScript template&lt;/th&gt;
&lt;th&gt;TypeScript template&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Pure (vanilla)&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/vitejs/vite/tree/main/packages/create-app/template-vanilla"&gt;&lt;code&gt;vanilla&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/vitejs/vite/tree/main/packages/create-app/template-vanilla"&gt;&lt;code&gt;vanilla-ts&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;React&lt;/td&gt;
&lt;td&gt;&lt;code&gt;v17.0.0&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/vitejs/vite/tree/main/packages/create-app/template-react"&gt;&lt;code&gt;react&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/vitejs/vite/tree/main/packages/create-app/template-react-ts"&gt;&lt;code&gt;react-ts&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Preact&lt;/td&gt;
&lt;td&gt;&lt;code&gt;v10.5.13&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/vitejs/vite/tree/main/packages/create-app/template-preact"&gt;&lt;code&gt;preact&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/vitejs/vite/tree/main/packages/create-app/template-preact-ts"&gt;&lt;code&gt;preact-ts&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Vue.js&lt;/td&gt;
&lt;td&gt;&lt;code&gt;v3.0.5&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/vitejs/vite/tree/main/packages/create-app/template-vue"&gt;&lt;code&gt;vue&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/vitejs/vite/tree/main/packages/create-app/template-vue-ts"&gt;&lt;code&gt;vue-ts&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Svelte&lt;/td&gt;
&lt;td&gt;&lt;code&gt;v3.37.0&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/vitejs/vite/tree/main/packages/create-app/template-svelte"&gt;&lt;code&gt;svelte&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/vitejs/vite/tree/main/packages/create-app/template-svelte-ts"&gt;&lt;code&gt;svelte-ts&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Lit&lt;/td&gt;
&lt;td&gt;&lt;code&gt;v2.4.0&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/vitejs/vite/tree/main/packages/create-app/template-lit-element"&gt;&lt;code&gt;lit-element&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/vitejs/vite/tree/main/packages/create-app/template-lit-element-ts"&gt;&lt;code&gt;lit-element-ts&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;⚠️ Please note! Creating a new project is done only through the console interface (or CUI for short). Support for creation from the custom templates is currently &lt;strong&gt;under complete redesign&lt;/strong&gt;! We plan to bring this functionality back in the Create Go App CLI &lt;code&gt;v2.2.x&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The structure of the created project will be as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;.&lt;/span&gt;
├── .editorconfig
├── .gitattributes
├── .gitignore
├── hosts.ini     &lt;span class="c"&gt;# &amp;lt;-- file with Ansible inventory variables&lt;/span&gt;
├── playbook.yml  &lt;span class="c"&gt;# &amp;lt;-- file with Ansible playbook&lt;/span&gt;
├── Makefile
├── backend       &lt;span class="c"&gt;# &amp;lt;-- folder with Go backend&lt;/span&gt;
│   └── ...
├── frontend      &lt;span class="c"&gt;# &amp;lt;-- folder with JS/TS frontend (if you choose)&lt;/span&gt;
│   └── ...
└── roles         &lt;span class="c"&gt;# &amp;lt;-- folder with Ansible roles&lt;/span&gt;
    ├── backend
    │   └── ...
    ├── docker
    │   └── ...
    ├── postgres
    │   └── ...
    ├── redis
    │   └── ...
    └── traefik   &lt;span class="c"&gt;# or nginx (if you choose)&lt;/span&gt;
        └── ...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Watch a short video presentation: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://recordit.co/OQAwkZBrjN"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--05c24SGA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/11155743/116787503-0d0dbb80-aaad-11eb-9ef1-dce2df6f606c.jpg" alt="cgapp create"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Direct link: &lt;a href="https://recordit.co/OQAwkZBrjN"&gt;https://recordit.co/OQAwkZBrjN&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="#toc"&gt;↑ Table of contents&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-deploy-endraw-command"&gt;
  &lt;/a&gt;
  &lt;code&gt;deploy&lt;/code&gt; command
&lt;/h3&gt;

&lt;p&gt;Also, we have seriously reworked the principle of deploying the project on a remote server. The only option left for the &lt;code&gt;deploy&lt;/code&gt; command is the default password call for the sudo user:&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Option&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Default&lt;/th&gt;
&lt;th&gt;Required?&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;-K&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Prompt you to provide the remote user sudo password (&lt;em&gt;a standard Ansible &lt;code&gt;--ask-become-pass&lt;/code&gt; option&lt;/em&gt;).&lt;/td&gt;
&lt;td&gt;&lt;code&gt;boolean&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Now, everything is built on pre-configured Ansible roles that work perfectly out of the box with our official backend templates for &lt;a href="https://github.com/create-go-app/fiber-go-template"&gt;Fiber&lt;/a&gt; and &lt;a href="https://github.com/create-go-app/net_http-go-template"&gt;net/http&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Watch a short video presentation:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://recordit.co/OQAwkZBrjN"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SgPIiZeh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/11155743/116787504-0e3ee880-aaad-11eb-8268-35493e5608c5.jpg" alt="cgapp deploy"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Direct link: &lt;a href="https://recordit.co/ishTf0Au1x"&gt;https://recordit.co/ishTf0Au1x&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="#toc"&gt;↑ Table of contents&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ansible-roles"&gt;
  &lt;/a&gt;
  Ansible roles
&lt;/h2&gt;

&lt;p&gt;Starting with version &lt;code&gt;v2.0.0&lt;/code&gt; we will actively add new Ansible roles to make the process of deploying your project to remote servers as comfortable and fast as possible. &lt;/p&gt;

&lt;p&gt;So, now all the configuration for deployment will be in the Ansible inventory &lt;code&gt;hosts.ini&lt;/code&gt; (in the root of the created project). For example, this is what the inventory looks like for deploying a project with the &lt;strong&gt;Nginx&lt;/strong&gt; web server:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ini"&gt;&lt;code&gt;&lt;span class="c"&gt;# ./hosts.ini
&lt;/span&gt;
&lt;span class="c"&gt;# Ansible inventory for deploy the Create Go App project.
# Author: Vic Shóstak &amp;lt;vic@shostak.dev&amp;gt; (https://shostak.dev)
# For more information, please visit https://create-go.app/
&lt;/span&gt;
&lt;span class="nn"&gt;[cgapp_project]&lt;/span&gt;
&lt;span class="err"&gt;127.0.0.1&lt;/span&gt; &lt;span class="c"&gt;# CHANGE THIS TO YOUR REMOTE SERVER IP!
&lt;/span&gt;
&lt;span class="nn"&gt;[cgapp_project:vars]&lt;/span&gt;
&lt;span class="c"&gt;#
# Ansible default variables to start playbook:
#
&lt;/span&gt;
&lt;span class="c"&gt;# Set remote sudo username
&lt;/span&gt;&lt;span class="py"&gt;ansible_user&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;root&lt;/span&gt;
&lt;span class="c"&gt;# Ask become password for remote sudo user
&lt;/span&gt;&lt;span class="py"&gt;ansible_become&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;yes&lt;/span&gt;
&lt;span class="c"&gt;# Set connection type to remote server (usually, 'ssh')
&lt;/span&gt;&lt;span class="py"&gt;ansible_connection&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;ssh&lt;/span&gt;
&lt;span class="c"&gt;# Set Python 3 default path
&lt;/span&gt;&lt;span class="py"&gt;ansible_python_interpreter&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;/usr/bin/python3&lt;/span&gt;

&lt;span class="c"&gt;#
# Remote server configuration:
#
&lt;/span&gt;
&lt;span class="c"&gt;# Set directory on your remote server 
# for store project files
&lt;/span&gt;&lt;span class="py"&gt;server_dir&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;/var/www/cgapp&lt;/span&gt;
&lt;span class="c"&gt;# Set user (owner of files/folders) name
&lt;/span&gt;&lt;span class="py"&gt;server_user&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;root&lt;/span&gt;
&lt;span class="c"&gt;# Set group name
&lt;/span&gt;&lt;span class="py"&gt;server_group&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;docker&lt;/span&gt;

&lt;span class="c"&gt;#
# Project configuration:
#
&lt;/span&gt;
&lt;span class="c"&gt;# Set your project domain
&lt;/span&gt;&lt;span class="py"&gt;project_domain&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;example.com&lt;/span&gt;

&lt;span class="c"&gt;#
# Docker configuration:
#
&lt;/span&gt;
&lt;span class="c"&gt;# Set Docker network name
&lt;/span&gt;&lt;span class="py"&gt;docker_network&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;cgapp_network&lt;/span&gt;

&lt;span class="c"&gt;#
# Backend configuration:
#
&lt;/span&gt;
&lt;span class="c"&gt;# Set backend port number,
# MUST BE MATCH to the port that is listed 
# in your `./backend/.env` file!
&lt;/span&gt;&lt;span class="py"&gt;backend_port&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;5000&lt;/span&gt;

&lt;span class="c"&gt;#
# PostgreSQL configuration (backend DB):
#
&lt;/span&gt;
&lt;span class="c"&gt;# Set PostgreSQL version (for example, 13.2)
&lt;/span&gt;&lt;span class="py"&gt;postgres_version&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;latest&lt;/span&gt;
&lt;span class="c"&gt;# Set PostgreSQL port number,
# MUST BE MATCH to the port that is listed 
# in your `./backend/.env` file!
&lt;/span&gt;&lt;span class="py"&gt;postgres_port&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;5432&lt;/span&gt;
&lt;span class="c"&gt;# Set PostgreSQL user name,
# MUST BE MATCH to the user name that is listed 
# in your `./backend/.env` file!
&lt;/span&gt;&lt;span class="py"&gt;postgres_user&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;postgres&lt;/span&gt;
&lt;span class="c"&gt;# Set PostgreSQL password,
# MUST BE MATCH to the password that is listed 
# in your `./backend/.env` file!
&lt;/span&gt;&lt;span class="py"&gt;postgres_password&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;password&lt;/span&gt;
&lt;span class="c"&gt;# Set PostgreSQL DB name,
# MUST BE MATCH to the DB name that is listed 
# in your `./backend/.env` file!
&lt;/span&gt;&lt;span class="py"&gt;postgres_db&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;postgres&lt;/span&gt;
&lt;span class="c"&gt;# Set PostgreSQL SSL mode state ('enabled' or 'disabled'),
# MUST BE MATCH to the SSL mode state that is listed 
# in your `./backend/.env` file!
&lt;/span&gt;&lt;span class="py"&gt;postgres_ssl_mode&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;disable&lt;/span&gt;

&lt;span class="c"&gt;#
# Go-Migrate configuration:
#
&lt;/span&gt;
&lt;span class="c"&gt;# Set migration number,
# if you WANT to migrate all of your migrations, 
# just leave it blank,
# for only initial migration set it to '1'
&lt;/span&gt;&lt;span class="py"&gt;migrate_number&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;1&lt;/span&gt;

&lt;span class="c"&gt;#
# Redis configuration (backend cache):
#
&lt;/span&gt;
&lt;span class="c"&gt;# Set Redis version (for example, 6.2)
&lt;/span&gt;&lt;span class="py"&gt;redis_version&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;latest&lt;/span&gt;
&lt;span class="c"&gt;# Set Redis port number,
# MUST BE MATCH to the port that is listed 
# in your `./backend/.env` file!
&lt;/span&gt;&lt;span class="py"&gt;redis_port&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;6379&lt;/span&gt;

&lt;span class="c"&gt;#
# Nginx configuration:
#
&lt;/span&gt;
&lt;span class="c"&gt;# Set Nginx version (for example, 1.20-alpine)
&lt;/span&gt;&lt;span class="py"&gt;nginx_version&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;alpine&lt;/span&gt;
&lt;span class="c"&gt;# Set redirect from HTTP to HTTPS for default server
&lt;/span&gt;&lt;span class="py"&gt;nginx_use_only_https&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;yes&lt;/span&gt;
&lt;span class="c"&gt;# Set redirect from WWW to non-WWW domain for default server
&lt;/span&gt;&lt;span class="py"&gt;nginx_redirect_to_non_www&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;yes&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="#toc"&gt;↑ Table of contents&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#web-proxy-servers"&gt;
  &lt;/a&gt;
  Web, proxy servers
&lt;/h3&gt;

&lt;p&gt;We're recommending to use &lt;a href="https://traefik.io/traefik/"&gt;Traefik Proxy&lt;/a&gt; as default proxy server for your projects. The main reason: this proxy provides &lt;strong&gt;automatic&lt;/strong&gt; SSL certificates from Let's Encrypt with &lt;strong&gt;renew&lt;/strong&gt; out of the box.&lt;/p&gt;

&lt;p&gt;Also, Traefik was built on the Docker ecosystem and has a really useful Web UI:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mztDGq4M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/48lxi7mt92k52cdjmbp3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mztDGq4M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/48lxi7mt92k52cdjmbp3.png" alt="traefik web ui"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;List of roles:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;traefik&lt;/code&gt; — configured Traefik container with a simple ACME challenge via CA server.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;traefik-acme-dns&lt;/code&gt; — configured Traefik container with a complex ACME challenge via DNS provider.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;nginx&lt;/code&gt; — pure Nginx container with "the best practice" configuration.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="#toc"&gt;↑ Table of contents&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#database"&gt;
  &lt;/a&gt;
  Database
&lt;/h3&gt;

&lt;p&gt;List of roles:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;postgres&lt;/code&gt; — configured &lt;a href="https://postgresql.org/"&gt;PostgreSQL&lt;/a&gt; container with apply migrations (by &lt;a href="https://github.com/golang-migrate/migrate"&gt;golang-migrate/migrate&lt;/a&gt; tool) for backend.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="#toc"&gt;↑ Table of contents&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cache-keyvalue-storage"&gt;
  &lt;/a&gt;
  Cache, key-value storage
&lt;/h3&gt;

&lt;p&gt;List of roles:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;redis&lt;/code&gt; — configured &lt;a href="https://redis.io/"&gt;Redis&lt;/a&gt; container to store the backend cache.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="#toc"&gt;↑ Table of contents&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#project-wiki-page"&gt;
  &lt;/a&gt;
  Project Wiki page
&lt;/h2&gt;

&lt;p&gt;Soon, we plan to move completely to the GitHub Wiki and do away with the separate documentation on our &lt;a href="https://create-go.app/"&gt;website&lt;/a&gt; for the project. &lt;/p&gt;

&lt;p&gt;— &lt;em&gt;Everything should be in one place&lt;/em&gt;, — as focus group users correctly noted.&lt;/p&gt;

&lt;p&gt;This is a table of contents for the &lt;a href="https://github.com/create-go-app/cli/wiki"&gt;Create Go App Wiki&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;CLI commands

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/create-go-app/cli/wiki/Command-create"&gt;&lt;code&gt;cgapp create&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/create-go-app/cli/wiki/Command-deploy"&gt;&lt;code&gt;cgapp deploy&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/create-go-app/cli/wiki/Errors-in-the-process"&gt;Errors in the process&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/create-go-app/cli/wiki/How-the-CLI-works"&gt;How the CLI works&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/create-go-app/cli/wiki/FAQ"&gt;Frequently asked questions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/create-go-app/cli/wiki/Logo"&gt;Logo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="#toc"&gt;↑ Table of contents&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#your-assistance-to-the-project"&gt;
  &lt;/a&gt;
  Your assistance to the project
&lt;/h2&gt;

&lt;p&gt;If you want to say &lt;strong&gt;thank you&lt;/strong&gt; or/and support active development of project:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Add a &lt;a href="https://github.com/create-go-app/cli"&gt;GitHub Star&lt;/a&gt; to the project.&lt;/li&gt;
&lt;li&gt;Twit about project &lt;a href="https://twitter.com/intent/tweet?text=%E2%9C%A8%20Create%20a%20new%20production-ready%20project%20with%20%23Golang%20backend%2C%20%23JavaScript%20or%20%23TypeScript%20frontend%2C%20%23Docker%20and%20%23Ansible%20deploy%20automation%20by%20running%20one%20command.%20%0A%0AFocus%20on%20writing%20code%20and%20thinking%20of%20business-logic%21%0AThe%20CLI%20will%20take%20care%20of%20the%20rest.%0A%0Ahttps%3A%2F%2Fgithub.com%2Fcreate-go-app%2Fcli"&gt;on your Twitter&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Write interesting articles about project on &lt;a href="https://dev.to/"&gt;Dev.to&lt;/a&gt;, &lt;a href="https://medium.com/"&gt;Medium&lt;/a&gt; or personal blog.&lt;/li&gt;
&lt;li&gt;Join DigitalOcean at our &lt;a href="https://m.do.co/c/b41859fa9b6e"&gt;referral link&lt;/a&gt; (your profit is &lt;strong&gt;$100&lt;/strong&gt; and we get $25).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Together, we can make this project &lt;strong&gt;better&lt;/strong&gt; every day!&lt;/p&gt;

&lt;p&gt;&lt;a href="#toc"&gt;↑ Table of contents&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#photos-and-videos-by"&gt;
  &lt;/a&gt;
  Photos and videos by
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Vic Shóstak &lt;a href="https://shostak.dev"&gt;https://shostak.dev&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ps"&gt;
  &lt;/a&gt;
  P.S.
&lt;/h2&gt;

&lt;p&gt;If you want more → write a comment below &amp;amp; follow me. Thanks! 😘&lt;/p&gt;

</description>
      <category>go</category>
      <category>news</category>
      <category>beginners</category>
      <category>showdev</category>
    </item>
    <item>
      <title>Errores https mas comunes</title>
      <author>Matias Blanc</author>
      <pubDate>Thu, 06 May 2021 14:27:44 +0000</pubDate>
      <link>https://dev.to/matiasblanc/errores-https-mas-comunes-46k4</link>
      <guid>https://dev.to/matiasblanc/errores-https-mas-comunes-46k4</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;En nuestra vida de web developer debemos saber los errores  que cometemos para mejorarlos y ser mejores cada día, por eso es que debemos saber sobre estos errores http, porque son los errores de la web, cada vez que desarrolles un sitio puedes encontrar algunos de los siguientes errores.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h3&gt;
  &lt;a href="#error-400-bad-request"&gt;
  &lt;/a&gt;
  ERROR 400 BAD REQUEST
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Sucede cuando el cliente envía una petición que el servidor no puede comprender, generalmente cuando los datos enviados por el navegador no cumplen con las normas del protocolo HTTP.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--A2e2szbI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eubetoig9f0atgy1or6r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A2e2szbI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eubetoig9f0atgy1or6r.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#401-authorization-requiered"&gt;
  &lt;/a&gt;
  401 – AUTHORIZATION REQUIERED
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Si el cliente ha solicitado una página web que se encuentra protegida por una contraseña, el servidor devuelve el error 401. En este caso no se devuelve el error de manera típica, sino que aparece una ventana emergente en la cuál se solicita al usuario que ingrese una contraseña para acceder al sitio web. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mfcHsHqx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9i46o8e9vxbovhk7xmnn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mfcHsHqx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9i46o8e9vxbovhk7xmnn.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#error-404-o-not-found"&gt;
  &lt;/a&gt;
  ERROR 404 O NOT FOUND
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Uno de los mas conocidos este error es el mas comun en una web, no lo vas a ver mucho cuando desarrolles una web si no cuando este subida y un usuario busque algun subdomio no creado en tu sitio o que una persona haya escrito mal un link pero con el dominio de tu web.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k3ySrang--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hy3lkan6jv5o47cdq7uz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k3ySrang--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hy3lkan6jv5o47cdq7uz.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#error-500-o-internal-server-error"&gt;
  &lt;/a&gt;
  ERROR 500 O INTERNAL SERVER ERROR
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Internal Server Error significa Error interno del servidor. Este código generalmente se muestra cuando el servidor no puede d ar muchos detalles del error o que ningún otro error 5** se pudo mostrar. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hU0k-kYM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/czr3qu5fnzfigg41jvxf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hU0k-kYM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/czr3qu5fnzfigg41jvxf.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#error-502-o-bad-gateway"&gt;
  &lt;/a&gt;
  ERROR 502 O BAD GATEWAY
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Bad Gateway o en español puerta de enlace no valida. indica un error de comunicación entre dos servidores. Sucede cuando el cliente se conecta a un servidor que actúa como un proxy que necesita acceder a un servidor ascendente. En estos casos, usualmente el otro servidor se localiza en un nivel superior en la jerarquía de servidores.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nfRPNKvy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ve19ed559bh7yzbq8agk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nfRPNKvy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ve19ed559bh7yzbq8agk.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Hay muchos, muchos mas pero estos son los que mas vas a ver, los demás errores ni te los vas a topar, la verdad es que la mayoría de los errores http no los he visto en una web ya que son muchos, no se si te deberías memorizar TODOS pero si saberte algunos importantes.&lt;/p&gt;

&lt;p&gt;si crees que alguna información esta mal o quieres que agregue algún error coméntalo acá abajo.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>http</category>
      <category>webdev</category>
      <category>programming</category>
      <category>spanish</category>
    </item>
    <item>
      <title>FILE HANDALING</title>
      <author>Pranavi nerella</author>
      <pubDate>Thu, 06 May 2021 14:26:55 +0000</pubDate>
      <link>https://dev.to/pranavi333/file-handaling-119j</link>
      <guid>https://dev.to/pranavi333/file-handaling-119j</guid>
      <description>&lt;p&gt;A file is the name of memory location where we can store data permanently under computer’s hard disk. Java language supports a set of classes in java.io package to create and maintain files. The following are some of the classes we can use to create and maintain files :&lt;/p&gt;

&lt;p&gt;FileInputStream&lt;br&gt;
FileOutputStream&lt;br&gt;
FileWriter etc.,&lt;/p&gt;

&lt;p&gt;FileOutputStream class :&lt;/p&gt;

&lt;p&gt;This class represent data as a stream of bytes. The objects of this class can be used to open and access a file in write mode. The object for this class can be created as below :&lt;/p&gt;

&lt;p&gt;FileOutputStream fis = new FileOutputStream(“file-name”,boolean-value); Here, if the boolean value is true, the file can be opened in append mode. If it is false,the data is overwritten from the beginning of the file every time when we execute the program.The following program demonstrates the use of this class.&lt;/p&gt;

&lt;p&gt;/* Program to store data into a file using FileOutputStream class */&lt;/p&gt;

&lt;p&gt;import java.io.*;&lt;/p&gt;

&lt;p&gt;class FileWrite{&lt;/p&gt;

&lt;p&gt;public static void main(String args[]) throws Exception {&lt;/p&gt;

&lt;p&gt;InputStreamReader isr = new InputStreamReader(System.in);&lt;/p&gt;

&lt;p&gt;BufferedReader br = new BufferedReader(isr);&lt;/p&gt;

&lt;p&gt;System.out.println(“Enter some text “);&lt;/p&gt;

&lt;p&gt;String data = br.readLine();&lt;/p&gt;

&lt;p&gt;FileOutputStream fos = new FileOutputStream(“file1.txt”,true);&lt;/p&gt;

&lt;p&gt;/* Because data is in the form of String object, convert it into byte array */&lt;/p&gt;

&lt;p&gt;byte b[] = data.getBytes();&lt;/p&gt;

&lt;p&gt;fos.write(b); /* writes byte array into file.txt */&lt;/p&gt;

&lt;p&gt;fos.close();&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;FileInputStream class :&lt;/p&gt;

&lt;p&gt;This clas represents data as a stream of bytes. The objects of this class can be used to open and access a file in read mode. The object for this class can be created as below :&lt;/p&gt;

&lt;p&gt;FileInputStream fis = new FileInputStream(“file-name”);&lt;/p&gt;

&lt;p&gt;The following program demonstrates the use of this class.&lt;/p&gt;

&lt;p&gt;/* Program to read data from a file using FileInputStream class */&lt;/p&gt;

&lt;p&gt;import java.io.*;&lt;/p&gt;

&lt;p&gt;class FileRead {&lt;/p&gt;

&lt;p&gt;public static void main(String args[]) throws Exception {&lt;/p&gt;

&lt;p&gt;FileInputStream fis = new FileInputStream(“file1.txt”);&lt;/p&gt;

&lt;p&gt;int size = fis.available(); /* available() returns no. of bytes in file1.txt */&lt;/p&gt;

&lt;p&gt;byte b [] = new byte[size];&lt;/p&gt;

&lt;p&gt;/* create a byte array of file size */&lt;/p&gt;

&lt;p&gt;fis.read(b);&lt;/p&gt;

&lt;p&gt;String data = new String(b);&lt;/p&gt;

&lt;p&gt;/* convert the byte array to string */&lt;/p&gt;

&lt;p&gt;System.out.println(“The contents of file1.txt are : “ + data);&lt;/p&gt;

&lt;p&gt;}// end of main&lt;/p&gt;

&lt;p&gt;}// end of class&lt;/p&gt;

&lt;p&gt;FileWriter class :&lt;/p&gt;

&lt;p&gt;This class represent data as a stream of characters. The objects of this class can be used to open and access a file in write mode. The object for this class can be created as below :&lt;/p&gt;

&lt;p&gt;FileWriter fw = new FileWriter(filename,boolean-value);&lt;/p&gt;

&lt;p&gt;The following program demonstrates the use of FileWriter class.&lt;/p&gt;

&lt;p&gt;import java.io.*;&lt;/p&gt;

&lt;p&gt;class FileWrite {&lt;/p&gt;

&lt;p&gt;public static void main(String args[]) throws Exception {&lt;/p&gt;

&lt;p&gt;FileWriter fw = new FileWriter(“file2.txt”,true);&lt;/p&gt;

&lt;p&gt;BufferedReader br = new BufferedReader(new InputStreamReader(System.in));&lt;/p&gt;

&lt;p&gt;System.out.println(“Enter some text “);&lt;/p&gt;

&lt;p&gt;String data = br.readLine();&lt;/p&gt;

&lt;p&gt;// convert data into equalent character array&lt;/p&gt;

&lt;p&gt;char ch[] = data.toCharArray();&lt;/p&gt;

&lt;p&gt;fw.write(ch);&lt;/p&gt;

&lt;p&gt;fw.close();&lt;/p&gt;

&lt;p&gt;} // end main&lt;/p&gt;

&lt;p&gt;} // end class&lt;/p&gt;

</description>
      <category>java</category>
    </item>
    <item>
      <title>How I got a job offer from a funded startup</title>
      <author>Stephan Meijer</author>
      <pubDate>Thu, 06 May 2021 14:23:23 +0000</pubDate>
      <link>https://dev.to/smeijer/how-i-got-a-job-offer-from-a-funded-startup-3a56</link>
      <guid>https://dev.to/smeijer/how-i-got-a-job-offer-from-a-funded-startup-3a56</guid>
      <description>&lt;p&gt;I recently got an exciting job offer, that I had to decline. This article is my attempt to share how it came to that, and what I've learned from it. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-it-started"&gt;
  &lt;/a&gt;
  How it started
&lt;/h2&gt;

&lt;p&gt;It all started with a simple tweet about a tool that I wanted to share with all of you. As the company in question asked me not to mention them in this article, I need to keep this intro a bit vague. But, that's fine. This article is about the experience, not about &lt;em&gt;"the startup"&lt;/em&gt; in question.&lt;/p&gt;

&lt;p&gt;Shortly after that tweet, they send me a DM. They are trying to build a community around the tool and were wondering whether I remembered how/where I learned about its existence. After a few messages back and forth, they invited me to their Discord.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-invite"&gt;
  &lt;/a&gt;
  The invite
&lt;/h2&gt;

&lt;p&gt;There weren't many users in the Discord, and we were just chatting a bit about random dev stuff. In the meanwhile, I was reading a bit about &lt;em&gt;the startup&lt;/em&gt; and found out they were looking for people. I didn't consider switching jobs at the time. But as a maker, I was curious about how the development of an open source cli utility contributes to building a sustainable business.&lt;/p&gt;

&lt;p&gt;They explained me that there hasn't been an official announcement, but that they were working on an companion product. They also mentioned that they've noticed that I've &lt;em&gt;"built some impressive stuff like &lt;a href="https://updrafts.app"&gt;updrafts.app&lt;/a&gt;"&lt;/em&gt;, and were happy to chat if I was interested in any of the positions.&lt;/p&gt;

&lt;p&gt;I never expected that my question about their business would lead to an invite to chat. I know this is something small. But I had a moment of pride. Honestly, hearing or reading someone else say that they noticed your work, and found it impressive, feels amazing. I wish people would compliment each other more often. I'll never know for sure, but I like to think that it was my side projects that opened this door.&lt;/p&gt;

&lt;p&gt;Anyways, I wasn't looking to switch jobs. So that's where the story ended.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lets-talk"&gt;
  &lt;/a&gt;
  Let's talk
&lt;/h2&gt;

&lt;p&gt;Fast forward to April '21. They send out a tweet mentioning that they were looking to expand the team. As I also operate on the hiring side, it's interesting for me to know what vacancies are out there, and what financial compensation companies offer. I see reading vacancies as part of my job, but I never apply as part of it. I want to stay respectful of people's time. Going into an interview when I know there is no chance of success, is a waste of time and I find that disrespectful.&lt;/p&gt;

&lt;p&gt;Their vacancies mentioned &lt;em&gt;"Competitive salary and meaningful stock options"&lt;/em&gt;. So I went to Discord and asked if they had more specifics about that. Almost instantly, they replied with their salary range, and the range of stock options one would receive. That message was later removed. Although I don't agree with hiding salaries, I won't quote it out of respect to them. In that same minute, they also mentioned that they were &lt;em&gt;"happy to hop on Zoom"&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;It took me 20 minutes to come up with a proper response to that message. As I mentioned, I usually don't jump into calls, because I don't want to waste time if I already know it won't be a fruitful talk. But something was different this time. One of the vacancies was like it was written towards my profile, and their salary range looked promising. &lt;em&gt;The startup&lt;/em&gt; felt like an awesome company to work for. I was honestly interested, so I decided to send them a message to let them know I was ready to chat.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#first-chat"&gt;
  &lt;/a&gt;
  First chat
&lt;/h2&gt;

&lt;p&gt;And that was honestly all I expected. We scheduled a 30-minute chat, and I expected that we would talk about what kind of company &lt;em&gt;the startup&lt;/em&gt; is, and what roles they were looking to fill. Time was flying by, and our 30-minute chat turned into a 3-hour talk. I got really excited about this!&lt;/p&gt;

&lt;p&gt;We talked a bit about &lt;em&gt;the startup&lt;/em&gt;, how they plan to grow it into a sustainable business, and we talked a bit about my day job. I think those subjects would have fitted perfectly within that 30-minute window. If only we didn't start the conversation around my open source work, side projects, and articles that I've been publishing.&lt;/p&gt;

&lt;p&gt;During this first chat, it became clear that we were a perfect match. I'm able to bootstrap applications, I'm independent, can move fast, and have experience with early-stage startups. I check all the boxes in the profile that they're looking for. I don't mean it to brag. We were just so compatible, that I got more and more excited about this by the minute. It was like love at first sight but on a professional level.&lt;/p&gt;

&lt;p&gt;We ended our call with the notice that we would both digest the conversation, and would come back to it later.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#they-bought-a-license"&gt;
  &lt;/a&gt;
  They bought a license!
&lt;/h2&gt;

&lt;p&gt;A day after our call, I noticed that they bought a license for &lt;a href="https://updrafts.app"&gt;updrafts.app&lt;/a&gt;, and created an account at &lt;a href="https://rake.red"&gt;rake.red&lt;/a&gt;. I reached out to them on Discord, mentioned that I noticed their purchase and that I'm happy to jump on another call to walk them through what it has to offer.&lt;/p&gt;

&lt;p&gt;They mentioned they'll keep digging for a while, but would like to schedule the next call to continue our conversation from the day before. And so we did.&lt;/p&gt;

&lt;p&gt;That second call didn't last long. They mentioned that they were impressed by my work. They liked how I'm able to solve my own problems and turn them into products that can be monetized. They found my articles structured, well written, and I'm able to explain complex subjects in simple terms. I planned to ask them what they thought of the products, but it completely slipped my mind.&lt;/p&gt;

&lt;p&gt;The call took about 15 - 20 minutes, and we ended with an agreement that I'd do a test task.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#test-task"&gt;
  &lt;/a&gt;
  Test Task
&lt;/h2&gt;

&lt;p&gt;Even though they were honestly excited about my side projects, open-source work, and articles, it wasn't enough to exempt me from doing a test task. Their task involved &lt;em&gt;"Creating a prototype of an interactive API documentation that can be used for user testing".&lt;/em&gt; The description was a bit vague, and if I already had the job, I'd definitely jump on a call to get a better understanding of what they had in mind. But I approached it as a chance to show that I'm able to turn a vague customer description into a product. I believe that's what distinguishes me from most other developers.&lt;/p&gt;

&lt;p&gt;I did ask them how much time they'd expect candidates to spend on the task, to which they replied that that &lt;em&gt;"It’s very individual, typically 3–10 hours"&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Honestly, creating something useful in 3 hours sounds impossible to me. But I was confident that I could create something in ~8 hours (a typical workday). And so I did. I &lt;a href="https://twitter.com/meijer_s/status/1384960782069342211"&gt;tweeted about my prototype&lt;/a&gt;, and they send a DM that they liked what they were seeing.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#nailed-it"&gt;
  &lt;/a&gt;
  Nailed It!
&lt;/h2&gt;

&lt;p&gt;Exactly a week after the second call, we had our third call. We talked about the test task, and I explained how I interpreted the task and why I've built the site the way I did. They mentioned that I found the right balance between trade-offs, spend my time on the right parts, and kind of nailed it. They also mentioned that ~8 hours is the sweet spot to spend on a task like this. &lt;/p&gt;

&lt;p&gt;When we were done talking about the task, I came back to that forgotten question from call 2. &lt;em&gt;"You've tried my products, what do you think of them?"&lt;/em&gt; I got some useful feedback out of that, and some more compliments. Which isn't why I asked about it, but it felt nice nevertheless.&lt;/p&gt;

&lt;p&gt;Shortly after the third call, I had a fourth to meet one of the colleagues. It was a more informal chat, meant as a "get to know each other".&lt;/p&gt;

&lt;p&gt;Three days later they made me an offer, which I later declined due to personal reasons.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lessons-learned"&gt;
  &lt;/a&gt;
  Lessons Learned
&lt;/h2&gt;

&lt;p&gt;I hear you think. Okay, nice story. But why did I read this? Well, I've learned a few things, and I was working towards that. So let me share what I got out of this:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Visibility for the win! For the bigger part of my career, I've been invisible. Working as a one-man team on a business-to-business collaboration platform, while not hearing anything from anyone. Mostly triggered by covid, I've moved to platforms like &lt;a href="https://meijer.ws/twitter"&gt;Twitter&lt;/a&gt; and &lt;a href="http://kcd.im/discord"&gt;Discord&lt;/a&gt; to satisfy my hunger for a bit of social contact. Since then, I tweet occasionally and feel less burdened to send an innocent message like &lt;em&gt;"got any details?"&lt;/em&gt;. A year ago, I wouldn't have expected this, but seriously, it opens doors! Just make yourself visible. By showing your work, responding to people, or just a small chat. It doesn't matter how, but stay respectful. It's not about having thousands of followers either. It's about showing who you are.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;I believe I nailed this one because I'm confident that I'm a match. I also &lt;a href="https://dev.to/smeijer/trivia-or-job-interview-4mpj"&gt;know how to screw up&lt;/a&gt;, but overall I have a good score of hit/miss ratio. One thing that keeps coming back, is that I fail at the interviews that come up with white-board or trivia questions. But prepare a drink, and chat with me about my experiences, apps that I've built, ask me how I would solve a customer's problem, and I'm able to convince you of my strength. Not because I'm a show-off. But because I'm confident in what I do. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Test Tasks suck! It took 8 hours of my time. Trivia sucks more, but this ain't awesome either. In my case, it was okay. I liked this task, and I can see myself building it into another (open-source) side project. The whole experience was motivational, and I got tons of new ideas. But I would never ask a candidate to do the same. Especially not as vague as this one was. And there it was again. The Trivia. Should I ask for more details to build exactly what they expect? Or would the simple fact of asking, make me fail this round?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;When possible, stay in touch! I think one of the nice things about this experience was that it was just so informal. I didn't wait for the next call to let them know I noticed their purchase of one of my apps. And they didn't wait for the next call to let me know that they liked my task result. This back and forth messaging between the calls, has a binding effect. It strengthens your relationships and thereby improves your chance of success. But again, don't overdo it. Stay respectful and professional.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#final-words"&gt;
  &lt;/a&gt;
  Final Words
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;The startup&lt;/em&gt; felt like an awesome company to work for. I didn't accept the position, but I can imagine that there will be days that I'm thinking back to this experience with the thought that I've made the wrong choice.&lt;/p&gt;

&lt;p&gt;The calls were nice, and the task was highly relevant for the position that I was applying for. If you're looking for a job, I recommend taking a look at... &lt;/p&gt;

&lt;p&gt;Sorry, this is where it ends. They asked me to remove all references to their company and personal names. So I can't point you to their jobs page, or discord. Follow me instead? You can find me on &lt;a href="https://meijer.ws/twitter"&gt;Twitter&lt;/a&gt; and my other articles are listed at &lt;a href="https://meijer.ws/articles"&gt;meijer.ws/articles&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>job</category>
      <category>interview</category>
      <category>vacancy</category>
    </item>
    <item>
      <title>Apprendre Ruby: Premier pas!</title>
      <author> </author>
      <pubDate>Thu, 06 May 2021 14:00:04 +0000</pubDate>
      <link>https://dev.to/ericcodeur/apprendre-ruby-premier-pas-1a35</link>
      <guid>https://dev.to/ericcodeur/apprendre-ruby-premier-pas-1a35</guid>
      <description>&lt;p&gt;Je développe en Javascript, Python, PHP et Ruby. Ruby est de tous mon langage de programmation préféré.&lt;/p&gt;

&lt;h2&gt; Vous souhaitez apprendre Ruby? &lt;/h2&gt;

&lt;p&gt;Dans cette série, nous partirons du début et découvrirons chaque aspect de Ruby une étape à la fois.&lt;/p&gt;

&lt;p&gt;Chaque article comprendra de la théorie mais aussi des exercices et des solutions.&lt;/p&gt;

&lt;p&gt;Si vous avez des questions / commentaires ou si vous êtes nouveau et avez besoin d'aide, vous pouvez commenter ci-dessous ou m'envoyer un message.&lt;/p&gt;

&lt;h2&gt; Exécutez votre code Ruby &lt;/h2&gt;

&lt;p&gt;Pas besoin de faire une installation complète. Allez simplement sur ce site Web &lt;a href="https://replit.com/languages/ruby"&gt;https://replit.com/languages/ruby&lt;/a&gt; et commencez à apprendre dès maintenant. Vous aurez tout le temps nécessaire pour comprendre l'installation de Ruby sur votre machine locale plus tard...&lt;/p&gt;

&lt;h1&gt; Variables Ruby &lt;/h1&gt;

&lt;p&gt;Si vous débutez dans la programmation, les variables sont les éléments fondamentaux d’un langage de programmation, car elles sont utilisées pour stocker différentes valeurs que vous souhaitez traiter dans votre code.&lt;/p&gt;

&lt;p&gt;Une fois que la variable est stockée dans la mémoire du programme, elle peut être utilisée plus tard.&lt;/p&gt;

&lt;p&gt;Par exemple, disons que vous souhaitez stocker le nom d'utilisateur, vous pouvez spécifier un nom de variable et définir sa valeur.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;nom_contact&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Mike Taylor'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;La variable du nom de 'nom_contact' contient la valeur 'Mike Taylor'&lt;/p&gt;

&lt;p&gt;Dans Ruby, une variable de type texte (string) est placée entre guillemets.&lt;/p&gt;

&lt;p&gt;Le nom de la variable que nous venons de créer est une variable de type string. Dans Ruby, nous n'avons pas à spécifier le type de variable.&lt;/p&gt;

&lt;p&gt;Ruby est un langage interprété Just-in-time (JIT). Qui reconnaît automatiquement le type de données en fonction des valeurs stockées.&lt;/p&gt;

&lt;p&gt;Voici quelques types de variables de base Ruby et comment les créer&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="c1"&gt;# string&lt;/span&gt;
&lt;span class="n"&gt;nom_complet&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Mike Taylor'&lt;/span&gt;

&lt;span class="c1"&gt;# nombre / integer&lt;/span&gt;
&lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;

&lt;span class="c1"&gt;# nombre / float&lt;/span&gt;
&lt;span class="n"&gt;prix_livre&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;15.80&lt;/span&gt;

&lt;span class="c1"&gt;# boolean&lt;/span&gt;
&lt;span class="n"&gt;actif?&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt;
&lt;span class="n"&gt;admin?&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kp"&gt;false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Ruby a également des types de variables plus avancés comme tableau, hachage, structure et classe. Nous couvrirons tous ces détails plus tard.&lt;/p&gt;

&lt;h1&gt; Afficher sur la console &lt;/h1&gt;

&lt;p&gt;Dans Ruby, il est possible d'afficher des informations sur la console / le terminal.&lt;/p&gt;

&lt;p&gt;Par exemple, envoyons notre variable de nom à la console&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;nom&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Mike Taylor'&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;nom&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;La méthode put prendra toute valeur que nous lui donnerons et l'imprimera sur la console ...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Mike Taylor
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Autres exemples&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;nom&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Mike Taylor'&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s1"&gt;'Bonjour le monde'&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s1"&gt;'Bonjour'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nom&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Bonjour le monde
Bonjour
Mike Taylor
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Comme vous pouvez le voir, nous pouvons envoyer plusieurs valeurs à la méthode put et il les affichera toutes.&lt;/p&gt;

&lt;p&gt;Une autre méthode Ruby très similaire aux put est la méthode print. Print peut afficher quelque chose sur la console mais n'enverra pas le saut de ligne après chaque impression. Exemple:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;nom&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Mike Taylor'&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;'Hello '&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nom&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Hello Mike Taylor
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt; Saisie d'information &lt;/h1&gt;

&lt;p&gt;Que diriez-vous d'obtenir des informations de l'utilisateur. Dans Ruby, nous utilisons la méthode pour faire exactement cela&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;'Saisir votre nom: '&lt;/span&gt;
&lt;span class="n"&gt;nom&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;gets&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;La méthode gets renverra tout ce que vous tapez plus des caractères de saut de ligne. Si vous ne voulez pas lire les caractères de saut de ligne, utilisez la méthode chomp pour supprimer ce dernier caractère&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;'Saisir votre nom: '&lt;/span&gt;
&lt;span class="n"&gt;nom&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;gets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;chomp&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt; Exercice &lt;/h1&gt;

&lt;p&gt;Créez un petit programme qui demande le nom d'utilisateur et l'âge de l'utilisateur et enregistrez le résultat dans la variable nom et âge.&lt;/p&gt;

&lt;p&gt;Ensuite, affichez le nom et la variable d'âge dans la console&lt;/p&gt;

&lt;p&gt;Solution&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;'Saisir votre nom: '&lt;/span&gt;
&lt;span class="nb"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;gets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;chomp&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;'Saisir votre age: '&lt;/span&gt;
&lt;span class="n"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;gets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;chomp&lt;/span&gt;

&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"L'utilsateur se nomme: "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;name&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s1"&gt;'Son age est de: '&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt; Conclusion &lt;/h3&gt;

&lt;p&gt;C'est tout pour aujourd'hui. Le voyage vient de commencer, restez à l'écoute pour le prochain article très bientôt. (plus tard aujourd'hui ou demain)&lt;/p&gt;

&lt;p&gt;Si vous avez des commentaires ou des questions, veuillez les faire ci dessous.&lt;/p&gt;

</description>
      <category>french</category>
      <category>ruby</category>
      <category>rails</category>
      <category>beginners</category>
    </item>
    <item>
      <title>GitHub repositories that developers should know</title>
      <author>rafaelvieirab</author>
      <pubDate>Thu, 06 May 2021 13:50:47 +0000</pubDate>
      <link>https://dev.to/rafaelvieirab/github-repositories-that-developers-should-know-2hek</link>
      <guid>https://dev.to/rafaelvieirab/github-repositories-that-developers-should-know-2hek</guid>
      <description>&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/EbookFoundation/free-programming-books"&gt;Free Programming Books&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Offered in a variety of &lt;em&gt;different languages&lt;/em&gt; Free Programming Books, it contains sections of free online courses, interactive programming resources, problem sets and competitive programming, programming playgrounds and podcasts and cheat sheets for many programming language.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/kamranahmedse/developer-roadmap"&gt;Developer Roadmap&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;It has many the technologies you need to know if you want to become a &lt;em&gt;Frontend&lt;/em&gt; or &lt;em&gt;Backend&lt;/em&gt; or &lt;em&gt;DevOps Engineer&lt;/em&gt;. It has many the alternative technologies from which can choose whatever suits your need or comfort.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/ossu/computer-science"&gt;OSSU Computer Science&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you don't have a computer science background or degree and want the equivalent knowledge same as a Computer Science degree then this repository is for you. It's for those who want a proper, well-rounded grounding in concepts fundamental to all computing disciplines.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://github.com/sindresorhus/awesome"&gt;Awesome&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;As the name describes it has an Awesome lists of all kinds of interesting topics ranging from computer science to media, from gaming to business and the list goes on.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://github.com/danistefanovic/build-your-own-x"&gt;Build your own X&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you are a person who believes in the principle of "Learning by doing" then this repository has the potential of becoming your daily stop at GitHub. It has links to the resources which help you build your own Cryptocurrency, Database, Bots, BitTorrent Clients, and many more.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://github.com/jwasham/coding-interview-university"&gt;Coding Interview University&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Coding Interview University has a multi-month study plan to become a software engineer for a large tech company like Google, Amazon, Facebook, Apple, or any other software company. It offers advice on how to study to become a reliability engineer or operations engineer. It also has links to the flashcards for quickly brushing up your knowledge and stay updated originally created by the author of the repository who landed a job at Amazon. And there are much more success stories like that.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://github.com/public-apis/public-apis"&gt;Public Apis&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Public Apis has a collective list of all the free APIs available on the internet to use in your personal or professional projects. It offers a wide range of Application Programming interfaces (APIs) such as business, anime, animals, news, finance, games, and more.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://github.com/yangshun/tech-interview-handbook"&gt;Tech Interview Handbook&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Tech Interview Handbook has all the materials that you need to crack a Tech Interview. It has a variety of material regarding How to prepare for coding interviews, Good questions to ask your interviewer, Helpful tips on resume, and many more.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://github.com/donnemartin/system-design-primer"&gt;System Design Primer&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;System Design Primer is a great repository for software engineers that will help you learn how to design large-scale systems. That will then help you become a better engineer. The repo provides an organized collection of resources for this broad topic.&lt;br&gt;
Because system design often is a required component of the technical interview process at many companies, this repository can also help you to prepare for those interviews with a study guide, advice on how to approach an interview, interview questions with solutions, Anki flashcard sets for interactive learning, and interactive coding challenges.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://github.com/bradtraversy/design-resources-for-developers"&gt;Design Resources for Developers&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This repository has a curated list of design and UI resources from stock photos, web templates, CSS frameworks, UI libraries, tools and much more, available for free to use in your projects and applications. It offers all the template stuff you need to get started with your web development projects.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://github.com/pawelborkar/awesome-repos"&gt;Awesome Repos&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;It has a number of resourceful repositories packed in just one place. All you have to do is just visit this repository that's it.&lt;/p&gt;

&lt;p&gt;Referências:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://dev.to/pb/10-github-repositories-every-developer-should-know-ngm"&gt;10 GitHub Repositories every Developer should know&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>github</category>
      <category>beginners</category>
      <category>productivity</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
