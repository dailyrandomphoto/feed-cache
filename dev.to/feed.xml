<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Fullstack app (workshop) with distributed tracing and monitoring</title>
      <author>Dalibor Kundrat</author>
      <pubDate>Fri, 01 Oct 2021 06:41:48 +0000</pubDate>
      <link>https://dev.to/damikun/fullstack-app-workshop-with-distributed-tracing-and-monitoring-3i45</link>
      <guid>https://dev.to/damikun/fullstack-app-workshop-with-distributed-tracing-and-monitoring-3i45</guid>
      <description>&lt;h2&gt;
  &lt;a href="#intro"&gt;
  &lt;/a&gt;
  Intro
&lt;/h2&gt;

&lt;p&gt;I would like to announce the OpenSource Fullstack App Example (Workshop) that shows a specific stack implementation from frontend to backend, including identity and distributed tracing, logging and monitoring.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z1RKqHd6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bxc3x0zgrgpzumpxpfqp.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z1RKqHd6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bxc3x0zgrgpzumpxpfqp.gif" alt="Fullstack NetCore and React workshop"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-the-idea-behind-this"&gt;
  &lt;/a&gt;
  What is the idea behind this?
&lt;/h3&gt;

&lt;p&gt;There are many courses, trainings (paid/opensource) online that show you specific things, but not many that show you a fullstack implementation. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gJ14qwRa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bvyisv7tybemytl0zdkk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gJ14qwRa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bvyisv7tybemytl0zdkk.png" alt="TroubleTraining architecture example"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is not perfectly done! Take this as my notes. Some parts were exported from my custom CCMS that I use for factory automation field, and I remember when I was just starting out and did not have snippets to help me solve certain problems.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-its-about"&gt;
  &lt;/a&gt;
  What it's about.
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Showing simple frontend integration for a webhooks management app with login/logout via backend bff using React, Relay, Typescript.&lt;/li&gt;
&lt;li&gt;Shows exporting telemetry and logs to distributed monitoring endpoints with Opentelemetry and ElasticStack&lt;/li&gt;
&lt;li&gt;Shows a full backend implementation for webhooks, including self-hosted identityServer and protected Graphql API.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JL76dKNE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/00va17s6ipyj99gmnq6q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JL76dKNE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/00va17s6ipyj99gmnq6q.png" alt="FullStack request distributed tracing example"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#for-who-it-is"&gt;
  &lt;/a&gt;
  For who it is
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;You are a full-stack developer (an attempt is made to explain advanced topics).&lt;/li&gt;
&lt;li&gt;You are a .Net developer and use modern technologies.&lt;/li&gt;
&lt;li&gt;Or you are implementing a modern React and Relay frontend based on a .Net backend.&lt;/li&gt;
&lt;li&gt;You want to understand the advanced concept of security patterns as BFF.&lt;/li&gt;
&lt;li&gt;You want to know how to trace and monitor a distributed application.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#topics"&gt;
  &lt;/a&gt;
  Topics
&lt;/h3&gt;

&lt;p&gt;This release contains 4 main topics that you can read about in detail:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/damikun/trouble-training/blob/main/Doc/Logging.md"&gt;Configuring Logging&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/damikun/trouble-training/blob/main/Doc/OpenTelemetry.md"&gt;Configuring Telemetry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/damikun/trouble-training/blob/main/Doc/Identity.md"&gt;Configure identity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/damikun/trouble-training/blob/main/Doc/ElasticSearch.md"&gt;Configure Monitoring&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;(Some topics are language specific, others relate to a specific platform).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#repository"&gt;
  &lt;/a&gt;
  Repository:
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/damikun/trouble-training"&gt;https://github.com/damikun/trouble-training&lt;/a&gt;&lt;/p&gt;

</description>
      <category>dotnet</category>
      <category>webdev</category>
      <category>showdev</category>
      <category>monitoring</category>
    </item>
    <item>
      <title>My Hacktoberfest Repos</title>
      <author>ZigRazor</author>
      <pubDate>Fri, 01 Oct 2021 06:40:00 +0000</pubDate>
      <link>https://dev.to/zigrazor/my-hacktoberfest-repos-2gm7</link>
      <guid>https://dev.to/zigrazor/my-hacktoberfest-repos-2gm7</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vFDUvZmZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nuvxbwdhxhbfwsazd7ka.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vFDUvZmZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nuvxbwdhxhbfwsazd7ka.png" alt="Hacktoberfest"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#my-hacktoberfest-repos"&gt;
  &lt;/a&gt;
  My Hacktoberfest Repos
&lt;/h2&gt;

&lt;p&gt;üëãüèª Hi everyone, and Happy Hacktoberfest! &lt;/p&gt;

&lt;p&gt;This is my repos ready for the Hacktoberfest:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#c"&gt;
  &lt;/a&gt;
  C++
&lt;/h3&gt;

&lt;p&gt;Header-Only C++ library for Graph Representation and Algorithms with a simple interface.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ZigRazor"&gt;
        ZigRazor
      &lt;/a&gt; / &lt;a href="https://github.com/ZigRazor/CXXGraph"&gt;
        CXXGraph
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Header-Only C++ Library for Graph Representation and Algorithms
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/ZigRazor/CXXGraph/blob/master/Icon.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--om3usTQu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/ZigRazor/CXXGraph/raw/master/Icon.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
CXXGraph&lt;/h1&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/0d3ae99a9dcced770f5a2e6d2395999c121d9975f3f1816ee3b3902a3c8e6a92/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f632b2b2532302d2532333030353939432e7376673f267374796c653d666f722d7468652d6261646765266c6f676f3d63253242253242266f676f436f6c6f723d7768697465"&gt;&lt;img src="https://camo.githubusercontent.com/0d3ae99a9dcced770f5a2e6d2395999c121d9975f3f1816ee3b3902a3c8e6a92/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f632b2b2532302d2532333030353939432e7376673f267374796c653d666f722d7468652d6261646765266c6f676f3d63253242253242266f676f436f6c6f723d7768697465"&gt;&lt;/a&gt; &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/6aea43d076c7bf00489f1b347caa33fe5c4d84a8af2983804f8702632f2669ec/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6769746875622532302d2532333132313031312e7376673f267374796c653d666f722d7468652d6261646765266c6f676f3d676974687562266c6f676f436f6c6f723d7768697465"&gt;&lt;img src="https://camo.githubusercontent.com/6aea43d076c7bf00489f1b347caa33fe5c4d84a8af2983804f8702632f2669ec/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6769746875622532302d2532333132313031312e7376673f267374796c653d666f722d7468652d6261646765266c6f676f3d676974687562266c6f676f436f6c6f723d7768697465"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://codecov.io/gh/ZigRazor/CXXGraph" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e0b9841f69ef29cc485b3d302097010f2d296ed1dde60f3adac4ba71370dcd04/68747470733a2f2f636f6465636f762e696f2f67682f5a696752617a6f722f43585847726170682f6272616e63682f6d61737465722f67726170682f62616467652e7376673f746f6b656e3d37373341513248395251" alt="codecov"&gt;&lt;/a&gt;
&lt;a href="https://www.codefactor.io/repository/github/zigrazor/cxxgraph" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0c66e00601b49f804758f834a946e1329891101b719d307d83d5566b5701a982/68747470733a2f2f7777772e636f6465666163746f722e696f2f7265706f7369746f72792f6769746875622f7a696772617a6f722f63787867726170682f6261646765" alt="CodeFactor"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph/blob/master/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/a5f922a2d34eec75f084349c6c747c69d94eccd0935dc93e295a4a686d1c4564/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f5a696752617a6f722f43585847726170682e737667" alt="GitHub license"&gt;&lt;/a&gt; &lt;a href="https://GitHub.com/ZigRazor/CXXGraph/releases/"&gt;&lt;img src="https://camo.githubusercontent.com/e3a3bede7aca95abde3fcdbf4645750e7da6aa728bdbd9cd655771c9a244d670/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f5a696752617a6f722f43585847726170682e737667" alt="GitHub release"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/885c6402353e401234ea76f317d84186d70716c9db53a43b8a6d9daf037c712c/68747470733a2f2f696d672e736869656c64732e696f2f6c67746d2f616c657274732f6769746875622f5a696752617a6f722f43585847726170683f7374796c653d706c6173746963"&gt;&lt;img src="https://camo.githubusercontent.com/885c6402353e401234ea76f317d84186d70716c9db53a43b8a6d9daf037c712c/68747470733a2f2f696d672e736869656c64732e696f2f6c67746d2f616c657274732f6769746875622f5a696752617a6f722f43585847726170683f7374796c653d706c6173746963" alt="LGTM Alerts"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/6c41a6d75b013b0b28757348218ecf27f68e512a987e82bc9882fd3ab5021943/68747470733a2f2f696d672e736869656c64732e696f2f6c67746d2f67726164652f6370702f6769746875622f5a696752617a6f722f43585847726170683f7374796c653d706c6173746963"&gt;&lt;img src="https://camo.githubusercontent.com/6c41a6d75b013b0b28757348218ecf27f68e512a987e82bc9882fd3ab5021943/68747470733a2f2f696d672e736869656c64732e696f2f6c67746d2f67726164652f6370702f6769746875622f5a696752617a6f722f43585847726170683f7374796c653d706c6173746963" alt="LGTM Grade"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://shields.io/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/57a85d2ce2ebfa08308aa0e27c14e3e668b0075ece44e2d030a4298c089c85e0/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f52657175697265642d472b2b372e332e302d477265656e2e737667" alt="Generic badge"&gt;&lt;/a&gt; &lt;a href="https://shields.io/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d28ad01b651a380285f9c75dea25963780875fcea989db81cf85ef6a29adc048/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f72657175697265642d432b2b31372d477265656e2e737667" alt="Generic badge"&gt;&lt;/a&gt; &lt;a href="https://shields.io/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e17b5a84de0de988ba21d8a70cd9bec1e3ef9c33bc75be3ec44c1cbff4b73604/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f52657175697265642d434d616b65332e392d477265656e2e737667" alt="Generic badge"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://shields.io/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ae88698a90d8466f4372f695b517d9a65fc5b3f70cb781531c2074876047c846/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4275696c642d5061737365642d477265656e2e737667" alt="Generic badge"&gt;&lt;/a&gt; &lt;a href="https://shields.io/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/35a3866fb1a06659337b8fe3e8bfb6ff6705c702e1fae78d400d47217b00b766/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f556e6974546573742d5061737365642d477265656e2e737667" alt="Generic badge"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Share on &lt;a href="https://twitter.com/intent/tweet?text=Header-Only%20C++%20Library%20for%20Graph%20Representation%20and%20Algorithms%204&amp;amp;url=https://github.com/ZigRazor/CXXGraph&amp;amp;hashtags=cpp,headeronly,library,opensource,developers" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/90bc908826728c0e4261acfff5619fd732c7be2b2a00624fce6363c9a3623c90/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c2f687474702f736869656c64732e696f2e7376673f7374796c653d736f6369616c" alt="Tweet"&gt;&lt;/a&gt;
&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;
Table of Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/ZigRazor/CXXGraph#cxxgraph"&gt;CXXGraph&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#table-of-contents"&gt;Table of Contents&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#introduction"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ZigRazor/CXXGraph#algorithm-explanation"&gt;Algorithm Explanation&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#dijkstra"&gt;Dijkstra&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#dial"&gt;Dial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#bfs"&gt;BFS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#dfs"&gt;DFS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#cycle-detection"&gt;Cycle Detection&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ZigRazor/CXXGraph#partition-algorithm-explanation"&gt;Partition Algorithm Explanation&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/ZigRazor/CXXGraph#vertex-cut"&gt;Vertex-Cut&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#greedy-vertex-cut"&gt;Greedy Vertex-Cut&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#classes-explanation"&gt;Classes Explanation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#requirements"&gt;Requirements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#how-to-use"&gt;How to use&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ZigRazor/CXXGraph#unit-test-execution"&gt;Unit-Test Execution&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#google-test-installation"&gt;Google Test Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#how-to-compile-test"&gt;How to Compile Test&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#how-to-run-test"&gt;How to Run Test&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ZigRazor/CXXGraph#benchmark-execution"&gt;Benchmark Execution&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#google-benchmark-installation"&gt;Google Benchmark Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#how-to-compile-benchmark"&gt;How to Compile Benchmark&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#how-to-run-benchmark"&gt;How to Run Benchmark&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ZigRazor/CXXGraph#packaging"&gt;Packaging&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#tarballs"&gt;Tarballs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#rpm"&gt;RPM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#deb"&gt;DEB&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ZigRazor/CXXGraph#install-and-uninstall"&gt;Install and Uninstall&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#install-linux-tarballs"&gt;Install Linux Tarballs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#install-rpm"&gt;Install RPM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#install-deb"&gt;Install DEB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#install-from-source"&gt;Install From Source&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#example"&gt;Example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#how-to-contribute"&gt;How to contribute&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#site"&gt;Site&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#contact"&gt;Contact&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#support"&gt;Support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#references"&gt;References&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#credits"&gt;Credits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#we-are-looking-for"&gt;We are Looking for...&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Introduction&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;CXXGraph&lt;/strong&gt; is a small library, header only, that manages the Graph and it's algorithms in &lt;strong&gt;C++&lt;/strong&gt;. In other words a "Comprehensive C++ Graph Library".&lt;/p&gt;
&lt;h2&gt;
Algorithm Explanation&lt;/h2&gt;
&lt;h4&gt;
Dijkstra&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Dijkstra%27s_algorithm" rel="nofollow"&gt;Graph Dijkstras Shortest Path Algorithm(Dijkstra's Shortest Path)&lt;/a&gt;
&lt;strong&gt;Dijkstra's Algorithm&lt;/strong&gt; is used to find the shortest path from a source node to all other reachable nodes in the graph. The algorithm initially assumes all the‚Ä¶&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/ZigRazor/CXXGraph"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;A C++ Library to which implements the structures and algorithms for finite automata, pushdown automata, and Turing machines. &lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ZigRazor"&gt;
        ZigRazor
      &lt;/a&gt; / &lt;a href="https://github.com/ZigRazor/CXXAutomata"&gt;
        CXXAutomata
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A C++ library for simulating automata and Turing machines
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
CXXAutomata&lt;/h1&gt;
&lt;p&gt;A C++ library for simulating automata and Turing machines&lt;/p&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/ZigRazor/CXXAutomata"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


&lt;h3&gt;
  &lt;a href="#python"&gt;
  &lt;/a&gt;
  Python
&lt;/h3&gt;

&lt;p&gt;A Python implementation of simply configurable State Machines.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ZigRazor"&gt;
        ZigRazor
      &lt;/a&gt; / &lt;a href="https://github.com/ZigRazor/PyStateMachine"&gt;
        PyStateMachine
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Python State Machine 
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
PyStateMachine&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://www.python.org" rel="nofollow"&gt; &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ka8K9yX2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/devicons/devicon/master/icons/python/python-original.svg" alt="python" width="40" height="40"&gt;&lt;/a&gt;  Python State Machine&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.codefactor.io/repository/github/zigrazor/pystatemachine" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c18f6428bc5b47e3f0c90e5fb3408f7af11683972b0f65c895db8a2ef41a80ab/68747470733a2f2f7777772e636f6465666163746f722e696f2f7265706f7369746f72792f6769746875622f7a696772617a6f722f707973746174656d616368696e652f6261646765" alt="CodeFactor"&gt;&lt;/a&gt;
&lt;a href="https://www.codacy.com/gh/ZigRazor/PyStateMachine/dashboard?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=ZigRazor/PyStateMachine&amp;amp;utm_campaign=Badge_Grade" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/aae204bcacee65214897ed9c5e95fa14b752f3823be289937d1193701fb633d9/68747470733a2f2f6170702e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f3137636130376636376261343430383962663238616633376261333638653162" alt="Codacy Badge"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://deepsource.io/gh/ZigRazor/PyStateMachine/?ref=repository-badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6dff22b71afdc6e33ee9b6b8a286a2d32bc91ffec9cec6e53031a06172112530/68747470733a2f2f64656570736f757263652e696f2f67682f5a696752617a6f722f507953746174654d616368696e652e7376672f3f6c6162656c3d6163746976652b6973737565732673686f775f7472656e643d74727565" alt="DeepSource"&gt;&lt;/a&gt;
&lt;a href="https://deepsource.io/gh/ZigRazor/PyStateMachine/?ref=repository-badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d9055d4e631078870a9a68cef0fe504192ce72d465e2208c43093f743066bac3/68747470733a2f2f64656570736f757263652e696f2f67682f5a696752617a6f722f507953746174654d616368696e652e7376672f3f6c6162656c3d7265736f6c7665642b6973737565732673686f775f7472656e643d74727565" alt="DeepSource"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Introduction&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;PyStateMachine&lt;/strong&gt; is a Framework that support state machines in &lt;strong&gt;Python&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;
Requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Python3&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
How to Run&lt;/h3&gt;
&lt;p&gt;Work in Progess&lt;/p&gt;
&lt;h2&gt;
Example&lt;/h2&gt;
&lt;p&gt;Work in Progess&lt;/p&gt;
&lt;h2&gt;
Test Suite&lt;/h2&gt;
&lt;p&gt;Work in Progress&lt;/p&gt;
&lt;h2&gt;
How to contribute &lt;a href="https://GitHub.com/ZigRazor/PyStateMachine/graphs/contributors/"&gt;&lt;img src="https://camo.githubusercontent.com/581fe7a30c9fddc871a0aca71a3096401c38d12ed169cd14a74efaf5010bebe2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6e7472696275746f72732f5a696752617a6f722f507953746174654d616368696e652e737667" alt="GitHub contributors"&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Read the &lt;a href="https://github.com/ZigRazor/PyStateMachine/blob/main/CONTRIBUTING.md"&gt;CONTRIBUTING GUIDE&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Contact&lt;/h2&gt;
&lt;p&gt;E-Mail : &lt;a href="https://github.com/ZigRazor/PyStateMachinemailto:zigrazor@gmail.com"&gt;zigrazor@gmail.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/ZigRazor"&gt;GitHub Profile&lt;/a&gt; &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/fafcc15adae98d433dd7f7e4810d1985dd756e19c0995b129eb819c700b8bccc/68747470733a2f2f677076632e6172747572696f2e6465762f5a696752617a6f72"&gt;&lt;img src="https://camo.githubusercontent.com/fafcc15adae98d433dd7f7e4810d1985dd756e19c0995b129eb819c700b8bccc/68747470733a2f2f677076632e6172747572696f2e6465762f5a696752617a6f72" alt="Profile views"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/82bea85177f2d542509b6e27cfb5681787d2cad5853c8f0e7a502a3c0a82ac9b/68747470733a2f2f6769746875622d726561646d652d73746174732e76657263656c2e6170702f6170693f757365726e616d653d5a696752617a6f722673686f775f69636f6e733d74727565267468656d653d746f6b796f6e69676874"&gt;&lt;img src="https://camo.githubusercontent.com/82bea85177f2d542509b6e27cfb5681787d2cad5853c8f0e7a502a3c0a82ac9b/68747470733a2f2f6769746875622d726561646d652d73746174732e76657263656c2e6170702f6170693f757365726e616d653d5a696752617a6f722673686f775f69636f6e733d74727565267468656d653d746f6b796f6e69676874" alt="ZigRazor's github stats"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Support&lt;/h2&gt;
&lt;p&gt;To support me just add &lt;em&gt;&lt;strong&gt;Star&lt;/strong&gt;&lt;/em&gt; the project  &lt;a href="https://GitHub.com/ZigRazor/PyStateMachine/stargazers/"&gt;&lt;img src="https://camo.githubusercontent.com/12e7e3d53b015ad56b976644b5cc2bc8bcba021ae2891cf0ef910706a740e3d5/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f5a696752617a6f722f507953746174654d616368696e652e7376673f7374796c653d736f6369616c266c6162656c3d53746172266d61784167653d32353932303030" alt="GitHub stars"&gt;&lt;/a&gt; or &lt;em&gt;&lt;strong&gt;follow me&lt;/strong&gt;&lt;/em&gt;  &lt;a href="https://github.com/ZigRazor?tab=followers"&gt;&lt;img src="https://camo.githubusercontent.com/8a8e16662b6c2f65545e7c5bb08b3c2a74c43b3d7f6632de86312c2a53935a78/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f6c6c6f776572732f5a696752617a6f722e7376673f7374796c653d736f6369616c266c6162656c3d466f6c6c6f77266d61784167653d32353932303030" alt="GitHub followers"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To get updated &lt;em&gt;&lt;strong&gt;watch&lt;/strong&gt;&lt;/em&gt; the project  &lt;a href="https://GitHub.com/ZigRazor/PyStateMachine/watchers/"&gt;&lt;img src="https://camo.githubusercontent.com/311c72805a48f13ebfb677fc8d7fbbf94b76ee150096a70b14e5b7277ab4de9d/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f77617463686572732f5a696752617a6f722f507953746174654d616368696e652e7376673f7374796c653d736f6369616c266c6162656c3d5761746368266d61784167653d32353932303030" alt="GitHub watchers"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Project Info&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/ZigRazor/PyStateMachine"&gt;&lt;img src="https://camo.githubusercontent.com/ad744e2f8ac3f48e6b6496b93f7bd7569a022e218c4a0d18204654328f813189/68747470733a2f2f6769746875622d726561646d652d73746174732e76657263656c2e6170702f6170692f70696e2f3f757365726e616d653d5a696752617a6f72267265706f3d507953746174654d616368696e65" alt="Readme Card"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
Used Languages&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/ZigRazor/PyStateMachine"&gt;&lt;img src="https://camo.githubusercontent.com/bd07f2023452d723442011a7912ddf1ae6fe3f21217db404c19ce1481da9cb33/68747470733a2f2f6769746875622d726561646d652d73746174732e76657263656c2e6170702f6170692f746f702d6c616e67732f3f757365726e616d653d5a696752617a6f72266c61796f75743d636f6d70616374" alt="Top Langs"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/ZigRazor/PyStateMachine"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


&lt;p&gt;Happy Coding! üíª&lt;/p&gt;

</description>
      <category>hacktoberfest</category>
      <category>githunt</category>
      <category>opensource</category>
      <category>contributorswanted</category>
    </item>
    <item>
      <title>10 JavaScript tips that can help you understand this programming language better</title>
      <author>Pasca Vlad</author>
      <pubDate>Fri, 01 Oct 2021 05:36:20 +0000</pubDate>
      <link>https://dev.to/pascavld/10-javascript-tips-that-can-help-you-understand-this-programming-language-better-3fi0</link>
      <guid>https://dev.to/pascavld/10-javascript-tips-that-can-help-you-understand-this-programming-language-better-3fi0</guid>
      <description>&lt;p&gt;&lt;em&gt;If you found value in this thread you will most likely enjoy my tweets too so make sure you follow me on &lt;a href="https://twitter.com/VladPasca5"&gt;Twitter&lt;/a&gt;  for more information about web development and how to improve as a developer. This article was first published on my &lt;a href="https://vladpasca.hashnode.dev/"&gt;Blog&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Get a random item from an Array&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1V6_4Vkb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E-bqdfjUYAQhage.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--a3oWfVQm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1436081074124251139/Hajopz7L_normal.jpg" alt="Vlad Pasca profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Vlad Pasca
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @vladpasca5
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      JavaScript tipüí°&lt;br&gt;&lt;br&gt;This is how you get a random item from an array using JavaScript&lt;br&gt;&lt;br&gt;üëá&lt;br&gt;&lt;br&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      17:05 PM - 07 Sep 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1435288025907466240" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1435288025907466240" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1435288025907466240" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;Use splice() if you want to delete an element from an array&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2PIrHcI5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E-bspV4VcAYOyQq.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--a3oWfVQm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1436081074124251139/Hajopz7L_normal.jpg" alt="Vlad Pasca profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Vlad Pasca
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @vladpasca5
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      JavaScript tipüí°&lt;br&gt;&lt;br&gt;If you want to delete an element from an array use "splice()" not "delete"&lt;br&gt;&lt;br&gt;"delete" only replaces the item with "undefined" while "splice()" will remove that item from the array&lt;br&gt;&lt;br&gt;See how this works here&lt;br&gt;&lt;br&gt;üëá&lt;br&gt;&lt;br&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      16:55 PM - 09 Sep 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1436010283403730949" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1436010283403730949" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1436010283403730949" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;Use map() when looping through arrays&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JC0RsHI1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E-buoBaUUAM4ak9.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--a3oWfVQm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1436081074124251139/Hajopz7L_normal.jpg" alt="Vlad Pasca profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Vlad Pasca
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @vladpasca5
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      JavaScript tipüí°&lt;br&gt;&lt;br&gt;Stop using "forEach" or "for" loops to loop through an array's items&lt;br&gt;&lt;br&gt;Instead, start using "map" like in this example&lt;br&gt;&lt;br&gt;üëá&lt;br&gt;&lt;br&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      16:56 PM - 11 Sep 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1436735335539658753" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1436735335539658753" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1436735335539658753" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;Stop using "=="&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--29VsUGiE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E-oAfDQVEAEOR0r.png" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--a3oWfVQm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1436081074124251139/Hajopz7L_normal.jpg" alt="Vlad Pasca profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Vlad Pasca
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @vladpasca5
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      JavaScript tipüí°&lt;br&gt;&lt;br&gt;Use "===" instead of "=="&lt;br&gt;&lt;br&gt;"===" compares the value and the type while "==" compares only the value&lt;br&gt;&lt;br&gt;See the difference here&lt;br&gt;&lt;br&gt;üëá&lt;br&gt;&lt;br&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      16:58 PM - 13 Sep 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1437460591250190349" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1437460591250190349" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1437460591250190349" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;Get a random number&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UdNSY_rX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E-oCgEzVEAEj31C.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--a3oWfVQm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1436081074124251139/Hajopz7L_normal.jpg" alt="Vlad Pasca profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Vlad Pasca
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @vladpasca5
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      JavaScript tipüí°&lt;br&gt;&lt;br&gt;This is how you get a random number in a specific range&lt;br&gt;&lt;br&gt;üëá&lt;br&gt;&lt;br&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      16:56 PM - 15 Sep 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1438184893847113740" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1438184893847113740" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1438184893847113740" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;The trim() method&lt;br&gt;
&lt;/p&gt;
&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HX_80uFl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E-oDPtDVQAMrSBx.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--a3oWfVQm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1436081074124251139/Hajopz7L_normal.jpg" alt="Vlad Pasca profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Vlad Pasca
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @vladpasca5
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      JavaScript tipüí°&lt;br&gt;&lt;br&gt;Do you use the "trim()" method?&lt;br&gt;&lt;br&gt;This method removes the whitespace from both sides of a string&lt;br&gt;&lt;br&gt;You can see how it works here&lt;br&gt;&lt;br&gt;üëá&lt;br&gt;&lt;br&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      16:55 PM - 17 Sep 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1438909417223860231" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1438909417223860231" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1438909417223860231" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;The isFinite() method&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rhon1oks--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E_jy-DVUcAQkHcF.png" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--a3oWfVQm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1436081074124251139/Hajopz7L_normal.jpg" alt="Vlad Pasca profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Vlad Pasca
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @vladpasca5
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      JavaScript tipüí°&lt;br&gt;&lt;br&gt;You can verify the argument before passing it to 'isFinite()'&lt;br&gt;&lt;br&gt;The "isFinite()" function determines whether the passed value is a finite number.&lt;br&gt;&lt;br&gt;Here is how this works&lt;br&gt;&lt;br&gt;üëá&lt;br&gt;&lt;br&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      17:05 PM - 21 Sep 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1440361499264839685" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1440361499264839685" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1440361499264839685" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;The toFixed() method&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e_QibtYx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E_jzrt8VUAAJCYV.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--a3oWfVQm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1436081074124251139/Hajopz7L_normal.jpg" alt="Vlad Pasca profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Vlad Pasca
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @vladpasca5
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      JavaScript tipüí°&lt;br&gt;&lt;br&gt;The toFixed() method converts a number into a string, and then it rounds the string to a specified number of decimals.&lt;br&gt;&lt;br&gt;You can see how it works here&lt;br&gt;&lt;br&gt;üëá&lt;br&gt;&lt;br&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      16:55 PM - 23 Sep 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1441083719519850497" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1441083719519850497" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1441083719519850497" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;This is a way you can empty an array in JavaScript&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t4sMttLR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E_j0VJIVcAEYd-0.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--a3oWfVQm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1436081074124251139/Hajopz7L_normal.jpg" alt="Vlad Pasca profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Vlad Pasca
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @vladpasca5
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      JavaScript tipüí°&lt;br&gt;&lt;br&gt;You can use the syntax "array.length = 0" to empty an array&lt;br&gt;&lt;br&gt;Here is how it works&lt;br&gt;&lt;br&gt;üëá&lt;br&gt;&lt;br&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      16:56 PM - 25 Sep 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1441808742073257991" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1441808742073257991" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1441808742073257991" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;Destructuring&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8ka_PQ9l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/FAHoqblVIAIMjQR.png" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--a3oWfVQm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1436081074124251139/Hajopz7L_normal.jpg" alt="Vlad Pasca profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Vlad Pasca
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @vladpasca5
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      JavaScript tipüí°&lt;br&gt;&lt;br&gt;Destructuring assignment makes it possible to unpack values from arrays, or properties from objects, into distinct variables.&lt;br&gt;&lt;br&gt;Here is how this works&lt;br&gt;&lt;br&gt;üëá&lt;br&gt;&lt;br&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      16:58 PM - 27 Sep 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1442534049717764099" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1442534049717764099" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1442534049717764099" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;&lt;em&gt;I hope found this useful and if you did please let me know. If you have any questions feel free to DM me on  &lt;a href="https://twitter.com/VladPasca5"&gt;Twitter&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>programming</category>
      <category>javascript</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Modern Navigation Menu using css üöÄ</title>
      <author>Shubham Jadhav</author>
      <pubDate>Fri, 01 Oct 2021 05:36:20 +0000</pubDate>
      <link>https://dev.to/dev_shubham/modern-navigation-menu-using-css-38aa</link>
      <guid>https://dev.to/dev_shubham/modern-navigation-menu-using-css-38aa</guid>
      <description>&lt;p&gt;üëâ Modern navigation menu using only css üöÄ &lt;/p&gt;

&lt;p&gt;see below üëá&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/shubham-web2144/embed/abWevWP?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>codepen</category>
      <category>css</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Encryption Using Playfair Cipher In Python</title>
      <author>Karan-Munjani</author>
      <pubDate>Fri, 01 Oct 2021 05:08:49 +0000</pubDate>
      <link>https://dev.to/karanmunjani/encryption-using-playfair-cipher-in-python-24l4</link>
      <guid>https://dev.to/karanmunjani/encryption-using-playfair-cipher-in-python-24l4</guid>
      <description>&lt;p&gt;In this post I'm going to explain you how to code playfair cipher to encrypt plaintext to cipher. So this post is all about encryption program and will soon add decryption program in this series also so stay tuned!&lt;/p&gt;

&lt;p&gt;If you don't know how the algorithm works checkout previous post in this series.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;So Without further ado, LET'S BEGIN!!üë®‚Äçüíªüë©‚Äçüíª&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#can-you-recall-what-were-the-steps-of-algorithm"&gt;
  &lt;/a&gt;
  Can you recall what were the steps of algorithm?
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Yes, You're right!&lt;/strong&gt; &lt;br&gt;
The Algorithm was consist of &lt;strong&gt;three&lt;/strong&gt; steps:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Convert plaintext into digraphs (i.e., into pair of two letters)&lt;/li&gt;
&lt;li&gt;Generate a Cipher Key Matrix&lt;/li&gt;
&lt;li&gt;Encrypt plaintext using Cipher Key Matrix and get ciphertext.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;¬†&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#step-1-creating-function-to-convert-plaintext-into-digraphs"&gt;
  &lt;/a&gt;
  Step: 1 Creating function to convert plaintext into digraphs
&lt;/h2&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;¬†&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-2-function-to-generate-a-cipher-key-matrix"&gt;
  &lt;/a&gt;
  Step: 2 Function to generate a cipher key matrix
&lt;/h2&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;¬†&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#now-we-need-to-locate-index-of-particular-character-inside-cipher-key-matrix-to-perform-encryption"&gt;
  &lt;/a&gt;
  Now we need to locate index of particular character inside cipher key matrix to perform encryption:
&lt;/h2&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;¬†&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-3-encrypt-plaintext-using-cipher-key-matrix-and-get-ciphertext"&gt;
  &lt;/a&gt;
  Step: 3 Encrypt plaintext using cipher key matrix and get ciphertext
&lt;/h2&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;¬†&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-step-running-our-code-from-main-method"&gt;
  &lt;/a&gt;
  Final Step! Running our code from main method:
&lt;/h2&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;¬†&lt;/p&gt;


&lt;center&gt; * * * * * * *&lt;/center&gt;

&lt;p&gt;¬†&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thanks-a-lot-for-reading-out"&gt;
  &lt;/a&gt;
  Thanks a lot for reading out!
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;I hope the code with comments was actually sufficient to understand the logic.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Here's the repository link to the whole code file &lt;a href="https://github.com/Karan-Munjani/Cryptography_Using_Python/blob/main/Playfair%20Cipher.py"&gt;GitHub Repo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But if you still have any doubts feel free to mention below in discussion section, I would love to answer them.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Also drop a heart ‚ù§ if you gained some knowledge!&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>computerscience</category>
      <category>python</category>
      <category>programming</category>
      <category>security</category>
    </item>
    <item>
      <title>Best Website Every Developers should know</title>
      <author>CoderZ90</author>
      <pubDate>Fri, 01 Oct 2021 04:53:00 +0000</pubDate>
      <link>https://dev.to/official_fire/best-website-every-developers-should-know-42e2</link>
      <guid>https://dev.to/official_fire/best-website-every-developers-should-know-42e2</guid>
      <description>&lt;p&gt;Hello guys üëã so in this blog i will tell some very cool websites every developer should know. &lt;/p&gt;

&lt;p&gt;I have my own youtube channel please üôèüôÇ subscribe&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtube.com/codingfire?sub_confirmation=1"&gt;https://youtube.com/codingfire?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I have divided this blog into three sections&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Section 01&lt;/strong&gt; - Best websites to get images from&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Section 02&lt;/strong&gt; - Best websites to get svg images from&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Section 03&lt;/strong&gt; - Best websites to get icons from&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#section-01-images-websites"&gt;
  &lt;/a&gt;
  Section 01 - Images Websites
&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;these are the websites to get images from&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#-pexels"&gt;
  &lt;/a&gt;
  ‚Ä¢ Pexels
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7YQ-wbJi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.screnter.com/wp-content/uploads/2021/01/pexels-logo.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7YQ-wbJi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.screnter.com/wp-content/uploads/2021/01/pexels-logo.jpg" alt="pexels"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pexels provides high quality and completely free stock photos licensed under the Pexels license. All photos are nicely tagged, searchable and also easy to discover through our discover pages.&lt;/p&gt;

&lt;p&gt;Link to the website - &lt;a href="https://pexels.com"&gt;Pexels.com&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#-pixabay"&gt;
  &lt;/a&gt;
  ‚Ä¢ Pixabay
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m4LuhN4q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.pixabay.com/photo/2020/06/21/19/02/pixabay-5326292_960_720.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m4LuhN4q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.pixabay.com/photo/2020/06/21/19/02/pixabay-5326292_960_720.png" alt="pixa"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now another cool website to get high quality best images from is pixabay. Pixabay is a vibrant community of creatives, sharing &lt;strong&gt;copyright free&lt;/strong&gt; images, videos and music. All contents are released under the Pixabay License, which makes them safe to use without asking for permission or giving credit to the artist - even for commercial purposes.&lt;/p&gt;

&lt;p&gt;Link to the website - &lt;a href="https://pixabay.com/"&gt;Pixabay.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;i only know these two websites which provide very good, high quality images but do let me know if you know more üòä&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#section-02-svg-images-websites"&gt;
  &lt;/a&gt;
  Section 02 - SVG Images Websites
&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;these are the websites to get SVG images from&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#-undrawco"&gt;
  &lt;/a&gt;
  ‚Ä¢ Undraw.co
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vqXd1jj6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://assets.website-files.com/5c30f2e81213426a020265c4/5c63087c2d5dc817dfe52ee1_Undraw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vqXd1jj6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://assets.website-files.com/5c30f2e81213426a020265c4/5c63087c2d5dc817dfe52ee1_Undraw.png" alt="un"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;SVGs are a big part of designing a modern websites, many people use SVGs in their websites but finding them is kinda difficult sometimes but here are so cool svg website, the no 1 is undraw.co&lt;/p&gt;

&lt;p&gt;Open-source illustrations for any idea you can imagine and create&lt;/p&gt;

&lt;p&gt;it is A constantly updated design project with beautiful SVG images that you can use completely free and without attribution.&lt;/p&gt;

&lt;p&gt;That means You can use the illustrations in any project, commercial or personal without attribution or any costs. A truly open license, babe! Just don‚Äôt try to replicate unDraw, re-distribute the illustrations or create integrations for it.&lt;/p&gt;

&lt;p&gt;Link to the website - &lt;a href="https://undraw.co"&gt;Undraw.co&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#-flaticon"&gt;
  &lt;/a&gt;
  ‚Ä¢ Flaticon
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QIOWSq4J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media.flaticon.com/share/flaticon-generic.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QIOWSq4J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media.flaticon.com/share/flaticon-generic.jpg" alt="flat"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This website is my favourite for svg actually, one more good thing about this website is that it have colorful SVGs too and also SVGs with gradient colors&lt;/p&gt;

&lt;p&gt;Flaticon offers a wide catalogue of free icons. When you perform a search, there will be a few options shown on the top left corner of the screen, where you can filter by ‚ÄúFree‚Äù, for content free of charge, or by ‚ÄúPremium‚Äù, for icons available only to Premium users.&lt;/p&gt;

&lt;p&gt;Link to the website - &lt;a href="https://www.flaticon.com/"&gt;Flaticon.com&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#section-03-icons"&gt;
  &lt;/a&gt;
  Section 03 - Icons
&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;these are the websites to get icons from&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#-fontawesome"&gt;
  &lt;/a&gt;
  ‚Ä¢ Fontawesome
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eSNYXpP3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://fontawesome.com/images/open-graph.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eSNYXpP3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://fontawesome.com/images/open-graph.png" alt="d"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Font Awesome is a font and icon toolkit based on CSS and Less. As of 2020, Font Awesome was used by 38% of sites that use third-party font scripts, placing Font Awesome in second place after Google Fonts. üî•&lt;/p&gt;

&lt;p&gt;Link to the website - &lt;a href="https://fontawesome.com"&gt;Fontawesome.com&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#-boxicons"&gt;
  &lt;/a&gt;
  ‚Ä¢ Boxicons
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PwOm8PBO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://theprotoolbox.com/wp-content/uploads/2020/04/box-icons-vectors-free-set.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PwOm8PBO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://theprotoolbox.com/wp-content/uploads/2020/04/box-icons-vectors-free-set.png" alt="box"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Boxicons is my favourite website to get icons from because Switching to boxicons is easy and can be done in 2 steps. There are more features than just the icons set. Boxicons also follows the official Google Material Design guidelines&lt;/p&gt;

&lt;p&gt;Link to the website - &lt;a href="https://boxicons.com"&gt;Boxicons.com&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#-remixicons"&gt;
  &lt;/a&gt;
  ‚Ä¢ Remixicons
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--An_Sadqg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://repository-images.githubusercontent.com/161979323/ce941d00-7ee3-11e9-8ed2-6a3770b22cd8" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--An_Sadqg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://repository-images.githubusercontent.com/161979323/ce941d00-7ee3-11e9-8ed2-6a3770b22cd8" alt="remix"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Remix Icon is a set of open-source neutral-style system symbols elaborately crafted for designers and developers.&lt;br&gt;
All of the icons are free for both personal and commercial use.&lt;/p&gt;

&lt;p&gt;Link to the website - &lt;a href="https://remixicon.com"&gt;Remixicons.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;üòä Thankyou for giving your time to read this blog hope you found it useful and interesting&lt;/p&gt;

&lt;p&gt;I have my own youtube channel please üôèüôÇsubscribe&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtube.com/codingfire?sub_confirmation=1"&gt;https://youtube.com/codingfire?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>design</category>
    </item>
    <item>
      <title>Web 3 Community - Hacktoberfest 2021</title>
      <author>Ritvik Shukla</author>
      <pubDate>Fri, 01 Oct 2021 04:46:29 +0000</pubDate>
      <link>https://dev.to/web3community/web-3-community-hacktoberfest-2021-41mi</link>
      <guid>https://dev.to/web3community/web-3-community-hacktoberfest-2021-41mi</guid>
      <description>&lt;p&gt;&lt;a href="https://hacktoberfest.digitalocean.com/"&gt;Hacktoberfest&lt;/a&gt; starts today. This year &lt;a href="https://github.com/web3community"&gt;Web3Community&lt;/a&gt; is excited to take part in the fest for the first time. &lt;/p&gt;

&lt;p&gt;An excellent opportunity for everyone to learn more about the open-source environment, meet active contributors and win a t-shirt or have a tree planted in your name!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-hacktober"&gt;
  &lt;/a&gt;
  What is Hacktober?
&lt;/h2&gt;

&lt;p&gt;Hacktoberfest is a month-long celebration of open source software run by DigitalOcean. Hacktoberfest is open to everyone in our global community!. You can sign up anytime between October 1 and October 31. &lt;/p&gt;

&lt;p&gt;Making four or more contributions between October 1-31 will allow you to get a memorable t-shirt as a token of appreciation, or you can choose to have a tree planted in your name and help make Hacktoberfest 2021 more carbon neutral.&lt;/p&gt;

&lt;p&gt;You can follow this &lt;a href="https://hacktoberfest.digitalocean.com/resources/participation"&gt;guide&lt;/a&gt; for rules.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-contribute-to-web3community"&gt;
  &lt;/a&gt;
  Why contribute to Web3Community?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/web3community"&gt;Web3Community&lt;/a&gt; is an Open Source Community that focuses on decentralized applications, web 3, and blockchain technologies ‚ú®&lt;/p&gt;

&lt;p&gt;Here you will get to interact with some awesome folks. ü§ì&lt;br&gt;
No one is expert, we all are learning, you can join us and Learn blockchain tech together, develop some great Open Source Projects. &lt;/p&gt;

&lt;p&gt;Every single contribution matters.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-can-i-contribute"&gt;
  &lt;/a&gt;
  How can I contribute?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Create an issue first before creating a Pull request.&lt;/li&gt;
&lt;li&gt;Fork the Repository and create a Branch for any Issue that you are working upon.&lt;/li&gt;
&lt;li&gt;Create a Pull Request which will be promptly reviewed and suggestions would be added to improve it.&lt;/li&gt;
&lt;li&gt;Add Screenshots to help us know what changes you have done.&lt;/li&gt;
&lt;li&gt;Once you receive the approval from the team, the contribution is ready to be merged and taken into account for the overall Hacktoberfest activity.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For help you can join our &lt;a href="https://discord.gg/3EN2UVE9mH"&gt;Discord&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Happy hacking!&lt;/p&gt;

</description>
      <category>hacktoberfest</category>
      <category>opensource</category>
      <category>web3</category>
      <category>blockchain</category>
    </item>
    <item>
      <title>How to make a good `git commit`</title>
      <author>Michelle Mannering</author>
      <pubDate>Fri, 01 Oct 2021 04:17:18 +0000</pubDate>
      <link>https://dev.to/mishmanners/how-to-make-a-good-git-commit-1ed7</link>
      <guid>https://dev.to/mishmanners/how-to-make-a-good-git-commit-1ed7</guid>
      <description>&lt;p&gt;At my recent &lt;a href="https://gitkon.com/sessions/using-git-for-ultimate-teamwork/"&gt;GitKon talk&lt;/a&gt;, I spoke about &lt;code&gt;git commit&lt;/code&gt; and what it means to have good commits.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git commit&lt;/code&gt; is a command used to commit your code to a specific location; local, cloud, branch, main etc. Most developers use it when wanting to commit a fix, chunk of code, typo, or similar. When making changes to a file or files, once you are happy with them, you make a commit. It's basically like saving a file to your project. Only, instead of hitting the "save" button, you write &lt;code&gt;git commit&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2J8r9gSs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/idff1kjgza886ykxj7cx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2J8r9gSs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/idff1kjgza886ykxj7cx.png" alt="Commit updated"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But sometimes commits are all over the place. No one knows what they mean, what files have been changed, or how often you should make commits.&lt;/p&gt;

&lt;p&gt;I answered a few of these questions on how to make good commits, and how good commits make you a great team player.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-its-important"&gt;
  &lt;/a&gt;
  Why it's important
&lt;/h2&gt;

&lt;p&gt;Before I dive into some of the cool things you can do with commits, and what you should do, let's look at &lt;em&gt;why&lt;/em&gt; it's important.&lt;/p&gt;

&lt;p&gt;When writing code, many people are working in a team. Whether you're coding for your company, or committing to open source projects, you need to be mindful of your team. The key to teamwork is collaboration. If you don't know what your team is doing you can't be successful.&lt;/p&gt;

&lt;p&gt;Your commits help tell your team (and remind you) about what you're doing. What code you are writing, features you are working on, and bugs fixed.&lt;/p&gt;

&lt;p&gt;If your commit messages are all over the place it's hard to know what's going on. Projects take more time to get off the ground, and your bus factor is SUPER high. For example, this is a mess:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mBc-pVN6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nlbipqydsuvkuogr7twu.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mBc-pVN6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nlbipqydsuvkuogr7twu.JPG" alt="No commit messages"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It's all committed on the same day, and there's very little information about what the commit is.&lt;/p&gt;

&lt;p&gt;Instead, if your commits are good, then everyone is on the same page, products are shipped quicker, and your customers are happier... and so are you!&lt;/p&gt;

&lt;p&gt;So what makes a good commit?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#good-commits"&gt;
  &lt;/a&gt;
  Good commits
&lt;/h2&gt;

&lt;p&gt;It's important to keep a few things in mind when making commits. &lt;/p&gt;

&lt;p&gt;Firstly, you want to make regular commits. Your commit history allows you to go back to a specific 'save' point in your project. If there are horrible bugs or breakages in your code, you can revert to a 'previously known stable version'. If you haven't made regular commits, then you won't be able to do this easily.&lt;/p&gt;

&lt;p&gt;When making commits, it's also important to be specific, and understandable. This is where we come to commit messages. When you make a commit, unlike simply "saving" a file like a Word doc, you add messages to your commits. These are called commit messages.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#writing-commit-messages"&gt;
  &lt;/a&gt;
  Writing commit messages
&lt;/h2&gt;

&lt;p&gt;When you save a file on your computer, it just 'saves'. You can't add information to it. The beauty of git is you can add notes to your 'saves'. Every time you commit your code you should add a commit message.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5pYkq0rV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kd979eu0pz8nnsgph8r0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5pYkq0rV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kd979eu0pz8nnsgph8r0.png" alt="carbon"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Commit messages help you and your team understand what your code is doing. Why are you 'saving' your code at this point in time? What lines are you adding? What do they do? And yes, as in the example above, you can write lines of commit comments using &lt;code&gt;-m&lt;/code&gt; multiple times.&lt;/p&gt;

&lt;p&gt;Writing good commit messages helps you and your team understand what that save point is. This is helpful if you need to revert to a previous 'save' version. Or if you happen to go away on holidays everyone knows what you committed without you asking.&lt;/p&gt;

&lt;p&gt;Someone asked during my session for some good commit examples. You might already have best practices within your organisation or community for what to write in a commit message. Short descriptions with a line or two about what you've done are helpful.&lt;/p&gt;

&lt;p&gt;Here's a couple of my commit messages as examples:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vVHp0h0r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/30ddvlb5x83a5qjbaeif.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vVHp0h0r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/30ddvlb5x83a5qjbaeif.JPG" alt="Detailed messages"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-tldr"&gt;
  &lt;/a&gt;
  The TL;DR
&lt;/h2&gt;

&lt;p&gt;If you don't have time to read all this, just remember three things when you make commits. That is to make your commits:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Timely&lt;/li&gt;
&lt;li&gt;Specific&lt;/li&gt;
&lt;li&gt;Understandable&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#take-the-raw-commit-endraw-challenge"&gt;
  &lt;/a&gt;
  Take the &lt;code&gt;commit&lt;/code&gt; challenge
&lt;/h2&gt;

&lt;p&gt;Next time you are writing a commit message, ask yourself some questions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;‚ÄúWill my team understand what I‚Äôve done?"&lt;/li&gt;
&lt;li&gt;‚ÄúWill I understand what I‚Äôve done?"&lt;/li&gt;
&lt;li&gt;‚ÄúCan everyone in my team, including non-developers understand what I‚Äôve done?"&lt;/li&gt;
&lt;li&gt;‚ÄúAm I being a good team player?‚Äù
‚ÄúAm I communicating well?‚Äù&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you ask these questions, then you should have amazing commit messages ‚ù§Ô∏è Everyone will love you for it, and your projects will be much tidier and understandable.&lt;/p&gt;

&lt;p&gt;Now, go make the world better, one commit at a time.&lt;/p&gt;

&lt;p&gt;Header image by Arian Darvishi via &lt;a href="https://unsplash.com"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

</description>
      <category>tutorial</category>
      <category>beginners</category>
      <category>github</category>
      <category>git</category>
    </item>
    <item>
      <title>How to enter full-screen mode in browser using JS</title>
      <author>Leonardo Schmitt </author>
      <pubDate>Fri, 01 Oct 2021 03:09:49 +0000</pubDate>
      <link>https://dev.to/leonardoschmittk/how-to-enter-full-screen-mode-in-browser-using-js-40pp</link>
      <guid>https://dev.to/leonardoschmittk/how-to-enter-full-screen-mode-in-browser-using-js-40pp</guid>
      <description>&lt;h3&gt;
  &lt;a href="#hi-there"&gt;
  &lt;/a&gt;
  Hi there!
&lt;/h3&gt;

&lt;p&gt;üìå  Today, I'll show a straightforward way to enter and exit fullscreen mode on main browsers. I'll try to explain as much as I can, so introducing a subtle pace. You can open the pen below on Codepen and check by yourself.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/Leoschmittk/embed/gOREOpJ?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;There is also the fullscreen related to the video HTML element, which will be properly covered.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#step-1"&gt;
  &lt;/a&gt;
  Step 1
&lt;/h2&gt;

&lt;p&gt;To get started, we'll just need to create a HTML file and add the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;
 &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;onclick=&lt;/span&gt;&lt;span class="s"&gt;"fsManager.checkForFullscreen()"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
         Enter fullscreen
 &lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That is, a simple &lt;strong&gt;button&lt;/strong&gt; element that will execute the &lt;strong&gt;checkForFullscreen()&lt;/strong&gt; function wherever the user clicks on it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-2"&gt;
  &lt;/a&gt;
  Step 2
&lt;/h2&gt;

&lt;p&gt;To do the magic wanted we need JavaScript. The whole script is down below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;fullScreenManager&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;isFullscreen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;docEl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;documentElement&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

            &lt;span class="nx"&gt;checkForFullscreen&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
               &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isFullscreen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isFullscreen&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

               &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isFullscreen&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;enterFullscreen&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
               &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exitFullscreen&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
               &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;

            &lt;span class="nx"&gt;enterFullscreen&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
               &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;docEl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;requestFullscreen&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt;
                  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;docEl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;webkitRequestFullscreen&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt;
                  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;docEl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;msRequestFullscreen&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="nx"&gt;exitFullscreen&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
               &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exitFullscreen&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt;
                  &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;webkitExitFullscreen&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt;
                  &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;msExitFullscreen&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
         &lt;span class="p"&gt;}&lt;/span&gt;
         &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fsManager&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;fullScreenManager&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here what's going on: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; we create a &lt;strong&gt;class&lt;/strong&gt; called fullscreenManager. Within it there are two private variables: &lt;strong&gt;isFullscreen&lt;/strong&gt; and &lt;strong&gt;docEl&lt;/strong&gt; &lt;/li&gt;
&lt;li&gt;The first carries a &lt;strong&gt;false&lt;/strong&gt; value because initially the fullscreen isn't enabled. &lt;/li&gt;
&lt;li&gt;The second is just a streamline name to refer to &lt;strong&gt;document.documentElement&lt;/strong&gt;, that is, the HTML element in itself.&lt;/li&gt;
&lt;li&gt;There is the &lt;strong&gt;checkForFullscreen&lt;/strong&gt; method that is used to check wheter the fullscreen is enabled or not. If it is, execute &lt;strong&gt;enterFullscreen()&lt;/strong&gt;. If not, execute &lt;strong&gt;exitFullscreen()&lt;/strong&gt;. Moreover, the variable that's responsible for carry the state (false or true) of the screen has to change to the opposite value. If it's not opened yet (if it's false) then turn it to true, and vice-versa, logic shown in &lt;strong&gt;this.isFullscreen = !this.isFullscreen&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;To be able to open the fullscreen, we can call three methods that do the same, all of them associated with the &lt;strong&gt;docEl&lt;/strong&gt; variable. Depending on the user's browser, certain methods don't work out due to its browser engine. To solve that, the logic is basically checking if the given browser "accepts" &lt;strong&gt;requestFullscreen&lt;/strong&gt;, or &lt;strong&gt;webkitRequestFullscreen&lt;/strong&gt; or even &lt;strong&gt;msRequestFullscreen&lt;/strong&gt;. To do that I'm using the  &lt;strong&gt;||&lt;/strong&gt;  logic operator. One of them has to work in almost every browser, something that you can easily check over &lt;a href="https://caniuse.com/?search=requestFullscreen"&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;On the other hand, if the user presses again the button, &lt;strong&gt;isFullscreen&lt;/strong&gt; turns to false and the &lt;strong&gt;exitFullscreen&lt;/strong&gt; is executed pretty much the same way as the &lt;strong&gt;enterFullscreen&lt;/strong&gt; by using the methods to exit the fullscreen. In fact, to exit we're using the &lt;strong&gt;document&lt;/strong&gt; instead of &lt;em&gt;document.documentElement&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;To wrap it up, we declare a global varible called &lt;strong&gt;fsManager&lt;/strong&gt; and attach to it a new instance of the &lt;strong&gt;fullscreenManager&lt;/strong&gt; class, allowing us to call its methods, like we did in the HTML button.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#video-element"&gt;
  &lt;/a&gt;
  Video element
&lt;/h2&gt;

&lt;p&gt;If you want to make the same functionality but for associating it with videos, the methods used are the same, but since you're dealing with the video element, don't use &lt;em&gt;document&lt;/em&gt; or &lt;strong&gt;document.documentElement&lt;/strong&gt;. Rather, there should be something like &lt;strong&gt;document.querySelector('.video-class-example').requestFullscreen()&lt;/strong&gt; and so on.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrap-up"&gt;
  &lt;/a&gt;
  Wrap up
&lt;/h2&gt;

&lt;p&gt;But that's all, anyway. I hope you enjoyed as much I did writing this out.&lt;/p&gt;

&lt;p&gt;If you happen to have any suggestion, I'll be pleased to modify the code for the better.&lt;/p&gt;

&lt;p&gt;Farewell üëã üëã üëã üëã &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>programming</category>
    </item>
    <item>
      <title>September 30th, 2021: What did you learn this week?</title>
      <author>Nick Taylor (he/him)</author>
      <pubDate>Fri, 01 Oct 2021 02:45:15 +0000</pubDate>
      <link>https://dev.to/nickytonline/september-30th-2021-what-did-you-learn-this-week-1bbo</link>
      <guid>https://dev.to/nickytonline/september-30th-2021-what-did-you-learn-this-week-1bbo</guid>
      <description>&lt;p&gt;It's that time of the week again. So wonderful devs, what did you learn this week? It could be programming tips, career advice etc.&lt;/p&gt;


&lt;center&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/yDYAHbqe5DfyM/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/yDYAHbqe5DfyM/giphy.gif" alt="Yoda wooping someone's butt"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;


&lt;/center&gt;

&lt;p&gt;Feel free to comment with what you learnt and/or reference your TIL post to give it some more exposure.&lt;/p&gt;


&lt;div class="ltag__tag ltag__tag__id__5305"&gt;
  
    .ltag__tag__id__5305 .follow-action-button{
      background-color: #ffedc9 !important;
      color: #820000 !important;
      border-color: #ffedc9 !important;
    }
  
    &lt;div class="ltag__tag__content"&gt;
      &lt;h2&gt;#&lt;a href="https://dev.to/t/todayilearned" class="ltag__tag__link"&gt;todayilearned&lt;/a&gt; Follow
&lt;/h2&gt;
      &lt;div class="ltag__tag__summary"&gt;
        Summarize a concept that is new to you.
      &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;


</description>
      <category>weeklylearn</category>
      <category>discuss</category>
      <category>weeklyretro</category>
    </item>
    <item>
      <title>Fade-in animation on scroll with IntersectionObserver(Vanilla JS)</title>
      <author>Shiho Kazama(mia)</author>
      <pubDate>Fri, 01 Oct 2021 02:36:52 +0000</pubDate>
      <link>https://dev.to/miacan2021/fade-in-animation-on-scroll-with-intersectionobserver-vanilla-js-4p27</link>
      <guid>https://dev.to/miacan2021/fade-in-animation-on-scroll-with-intersectionobserver-vanilla-js-4p27</guid>
      <description>&lt;p&gt;„ÄÄ„ÄÄWhen we watch a website that has cool animations, we tend to stay on the website for a long time. &lt;/p&gt;

&lt;p&gt;It could be said that these animation features could help attract visitors to your website.&lt;/p&gt;

&lt;p&gt;Today, I'll share with you guys„ÄÄhow„ÄÄto„ÄÄimplement„ÄÄfade-in animation on scroll with &lt;strong&gt;Vanilla Javascript&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Using IntersectionObserver to monitor if the element that you plan to animate is in the browser or not, you can make a fade-in animation that fires when the element enters the browser.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#sample-amp-goals"&gt;
  &lt;/a&gt;
  Sample &amp;amp; Goals
&lt;/h1&gt;

&lt;p&gt;Here are two samples. &lt;br&gt;
The first one is added fade-in animation on scroll for one container includes five items.&lt;br&gt;
The second sample is applied fade-in animation for every five-item.&lt;br&gt;
You can try to scroll and check animation again and again.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/miacan2021/embed/oNzOBXM?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;



&lt;h1&gt;
  &lt;a href="#blueprint"&gt;
  &lt;/a&gt;
  Blueprint
&lt;/h1&gt;

&lt;p&gt;First, prepare an element that you want to apply fade-in animation with HTML. And add '.appear' class. &lt;br&gt;
Elements with the '.appear' class will be the target of the fade-in animation.&lt;/p&gt;

&lt;p&gt;Second, write a fade-in animation with CSS. When the '.inview' class is added to an element with a '.appear', set the &lt;em&gt;opacity to 1&lt;/em&gt; and &lt;em&gt;transform: translateY(40px) to none&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Third, control the '.inview' class using IntersectionObserver of Javascript.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#monitor-a-single-element-and-control-classes-with-intersectionobserver"&gt;
  &lt;/a&gt;
  Monitor a single element and control classes with IntersectionObserver
&lt;/h1&gt;

&lt;p&gt;Let's try to make a fade-in animation on scroll!&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#1prepare-the-element-that-has-the-appear-class-according-to-the-above-blueprint"&gt;
  &lt;/a&gt;
  1.Prepare the element that has the 'appear' class according to the above blueprint.
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt; &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"container appear"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"item"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;1&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"item"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;2&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"item"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;3&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"item"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;4&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"item"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;5&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This time, I applied the 'appear' class at container div.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#2prepare-css-animation"&gt;
  &lt;/a&gt;
  2.Prepare CSS animation.
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.appear&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="m"&gt;0.8s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translateY&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;40px&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.appear.inview&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;transition-delay&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.3s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If an element has 'appear' class, it's applied 'transition','opacity' and 'transform'. &lt;/p&gt;

&lt;p&gt;In this case, I wrote the CSS so that once the 'inview' class is added, the translateY value will disappear. By doing so, the element that has 'appear' class will move upward from 40px down from its normal position.&lt;br&gt;
And then the element can appear to the browser changing 'opacity'.&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#3monitor-an-element-and-control-classes-with-intersectionobserver"&gt;
  &lt;/a&gt;
  3.Monitor an element and control classes with IntersectionObserver
&lt;/h2&gt;

&lt;p&gt;You can use the IntersectionObserver„ÄÄto determine if the monitored element is in the browser„ÄÄor not and add or remove the 'inview' class.&lt;/p&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;appear&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.appear&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;cb&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;entries&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="nx"&gt;entries&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;entry&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isIntersecting&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
      &lt;span class="nx"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;inview&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;inview&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;io&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;IntersectionObserver&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cb&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;io&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;observe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;appear&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I will explain how I am using 'IntersectionObserver'.&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;strong&gt;1.Get the element to be monitored.&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;appear&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.appear&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this case, it's the 'container' class div.&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;strong&gt;2.Write a callback function.&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;cb&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;entries&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="nx"&gt;entries&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;entry&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isIntersecting&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
      &lt;span class="nx"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;inview&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;inview&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;IntersectionObserver pass a callback function as an parameter.&lt;br&gt;
In this code, a callback function is named 'cb'.&lt;br&gt;
To find out which elements have been intersected using 'forEach'.&lt;br&gt;
The 'entry.isIntersecting' can be used for the condition that the element is inside the screen.&lt;br&gt;
And the if-else statement can be used to write code to add or remove classes.&lt;br&gt;
If the element is intersected, add 'inview'class to 'appear' class.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.Call the constructor to create an Intersection observer and pass a callback function.&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;io&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;IntersectionObserver&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cb&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;4.Specifies the target element to be monitored.&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;io&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;observe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;appear&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It's monitoring the element with 'appaer' class.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>css</category>
      <category>saas</category>
    </item>
    <item>
      <title>How to send message to specific discord channel from your server application?</title>
      <author>John Melody Me</author>
      <pubDate>Fri, 01 Oct 2021 02:07:34 +0000</pubDate>
      <link>https://dev.to/johnmelodyme/how-to-send-message-to-specific-discord-channel-from-your-server-application-2n6h</link>
      <guid>https://dev.to/johnmelodyme/how-to-send-message-to-specific-discord-channel-from-your-server-application-2n6h</guid>
      <description>&lt;h4&gt;
  &lt;a href="#how-to-send-message-to-specific-discords-channel-from-your-server-application"&gt;
  &lt;/a&gt;
  How to send message to specific discord's channel from your server application?
&lt;/h4&gt;

&lt;p&gt;Had you wonder how to send the log / messages from the server application to discord channel? In my personal poject I use &lt;code&gt;NodeJs&lt;/code&gt; for the server side, each of the important details from the server will be sent to my discord's channel. For instance, each time my user made a payment or register for my app. I am about to demonstrate how exactly I did it.&lt;/p&gt;

&lt;p&gt;I use the ES6 dicipline for my application.&lt;/p&gt;

&lt;p&gt;Packages I will be using are &lt;code&gt;axios&lt;/code&gt;, and &lt;code&gt;nodemon&lt;/code&gt;.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Initiate a project by &lt;code&gt;npm init -y&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;get the webhok url by going to your channel's settings -&amp;gt; integration -&amp;gt; create webhook.&lt;/li&gt;
&lt;li&gt;start coding.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In this case I will use the method of HTTP POST request to the webhook.&lt;br&gt;
As in &lt;code&gt;bash&lt;/code&gt; you can simply do :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;#!/bin/sh&lt;/span&gt;
url &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"thewebhookurl"&lt;/span&gt;

curl &lt;span class="nt"&gt;-H&lt;/span&gt; &lt;span class="s2"&gt;"Content-Type: application/json"&lt;/span&gt; &lt;span class="nt"&gt;-X&lt;/span&gt; POST &lt;span class="nt"&gt;-d&lt;/span&gt; &lt;span class="s1"&gt;'{"content":"'&lt;/span&gt;&lt;span class="s2"&gt;"YOUR WHAT EVER MESSAGE "&lt;/span&gt;&lt;span class="s1"&gt;'"}'&lt;/span&gt; &lt;span class="nv"&gt;$url&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;but in &lt;code&gt;nodejs&lt;/code&gt;,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
 &lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;webhook_url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;thewebhoooklink&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;params&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;username&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ABC&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
            &lt;span class="na"&gt;method&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;POST&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Content-Type&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;application/json&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;webhook_url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and it should work but calling the function &lt;code&gt;log('something something');&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;HAPPY CODING!&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/IDTNZdo-fqU"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>node</category>
      <category>discord</category>
      <category>webhook</category>
    </item>
  </channel>
</rss>
