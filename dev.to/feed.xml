<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Basics of Kotlin - Part 1</title>
      <author>Chetan</author>
      <pubDate>Thu, 22 Apr 2021 10:31:04 +0000</pubDate>
      <link>https://dev.to/csj5483/basics-of-kotlin-part-1-jh</link>
      <guid>https://dev.to/csj5483/basics-of-kotlin-part-1-jh</guid>
      <description>&lt;p&gt;In the last article, we try to learn about Gradle and App Folder. If you haven't read the previous article, visit this link and read it&lt;br&gt;
&lt;a href="https://dev.to/csj5483/exploring-the-android-studio-part-1-1d2m"&gt;Exploring the Android Studio&lt;/a&gt;&lt;br&gt;
Before we start working on Android, let's learn about Kotlin first. In the next few articles, we will try to learn the basics of Kotlin like the loop, conditional statements, function, class.&lt;/p&gt;

&lt;h3&gt;Kotlin:&lt;/h3&gt;

&lt;p&gt;Kotlin is an open-source, statically typed and general-purpose language that runs on Java Virtual Machine(JVM). It was developed by JetBrains Team, the official designer of the most intelligent Java IDE, named Intellij IDEA. It was officially released in February 2016 and in 2017 Google announced it as the official language for Android Development. It combines the features of Object-Oriented Programming (OOPs) and functional programming into a unique platform.&lt;/p&gt;

&lt;h4&gt;Features of Kotlin:&lt;/h4&gt;

&lt;p&gt;&lt;b&gt;Concise:&lt;/b&gt; Kotlin is the language where lines of code can be reduced up to 40%. This makes Kotlin an ideal choice for software development.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Null Safety:&lt;/b&gt; Kotlin aimed to eliminate the NullPointerException (null reference) from the code. Kotlin system can easily distinguish between null references and not null references. For example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var name:String="Aman"
name=null //This is will give an error 
To permit null value we can declare it as:
var name:String?="Aman"
name=null
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;b&gt;Interoperable:&lt;/b&gt; Kotlin is fully compatible with Java Code which means existing Java code can be naturally called from Kotlin, and Kotlin code can be used from Java.&lt;br&gt;
&lt;b&gt;Fast Compilation:&lt;/b&gt; It is easy to compile the Kotlin code which results in better performance and fast compilation time.&lt;br&gt;
&lt;b&gt;Smart cast:&lt;/b&gt; The Kotlin compiler automatically converts the variable to a particular class reference once it's passed through any conditional operator.&lt;br&gt;
&lt;b&gt;Extension function:&lt;/b&gt; Kotlin supports a variety of extension function which means it helps to extend the functionality of classes without touching their code.&lt;/p&gt;

&lt;h4&gt;Variables:&lt;/h4&gt;

&lt;p&gt;Variables are the name we give to computer memory location. These are used to store and manipulate the data. We can declare a variable by using &lt;b&gt;var&lt;/b&gt; and &lt;b&gt;val&lt;/b&gt; keyword.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var name="aman" //string
val age=10 //integer
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can also explicitly specify the datatype of the variable:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var name:String="aman" //string
val age:Int=10 //integer
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;b&gt;var:&lt;/b&gt; We can change the value of the variable declared using var keyword. Therefore it is known as a &lt;b&gt;mutable variable&lt;/b&gt;. For example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var age:Int=8
age=10
print(age)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will give 10 as output&lt;/p&gt;

&lt;p&gt;&lt;b&gt;val:&lt;/b&gt; We can not change the value of the variable declared using val keyword. Therefore it is known as an &lt;b&gt;immutable variable&lt;/b&gt;. For example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;val age:Int=8
age=10
print(age)
This will give an error(Val cannot be reassigned)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;Data Types in Kotlin:&lt;/h4&gt;

&lt;p&gt;Data types are set of relatable values and describe the operations that can be operated on them. It refers to the type and size of data associated with variables and functions. In Kotlin every data type is considered as an object.&lt;br&gt;
Kotlin has the following categories of data type:&lt;br&gt;
&lt;b&gt;Number:&lt;/b&gt; &lt;br&gt;
This data type holds only number type data variable. It is further sub-categorised as Integers and Floating-Point Numbers.&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;
&lt;b&gt;Integers:&lt;/b&gt; It contains numeric value without decimal. It has four types:&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uTxWe7Tt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/53hjb8q6u44c1y9kq7ct.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uTxWe7Tt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/53hjb8q6u44c1y9kq7ct.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var byteVar:Byte=29 //byte data type
var shortVar:Short=323 // short data type
var intVar:Int=40000 //int data type
var longVar:Long=8673463 // long data type
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;&lt;li&gt;
&lt;b&gt;Floating point:&lt;/b&gt; It contains non Integer numbers that carry some decimal values. It has two types- &lt;b&gt;Float&lt;/b&gt; which has a 32-bit single-precision floating-point value and &lt;b&gt;Double&lt;/b&gt; which has a 64-bit single-precision floating-point value.
&lt;/li&gt;&lt;/ul&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var floatVar:Float=29.0f // float data type
var doubleVar:Double=8450.445 //double data type
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;b&gt;Boolean:&lt;/b&gt;&lt;br&gt;
It represents the logical value. It contains either true or false.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sL5-eop9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mfslab0sshmt356evz6g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sL5-eop9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mfslab0sshmt356evz6g.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var boolVar:Boolean=true //boolean data type
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;b&gt;Char:&lt;/b&gt;&lt;br&gt;
Character in Kotlin is represented with the help of &lt;b&gt;char&lt;/b&gt; keyword. Character can be declared using a single quote &lt;b&gt;'c'&lt;/b&gt;.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OdnRnupH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vwbb415oxhnfddgwdk7v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OdnRnupH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vwbb415oxhnfddgwdk7v.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var charVar:Char='c' //char data type
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;b&gt;String:&lt;/b&gt;&lt;br&gt;
Strings are the arrays of character means a string will contain one or more than one characters. Strings in Kotlin are immutable, which means we cannot change the elements in String. Kotlin has two kinds of string &lt;b&gt;raw string&lt;/b&gt; and &lt;b&gt;escaped string&lt;/b&gt;. Escaped String allows providing extra line space after the first print statement.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var escapedString:String="first name \n" //escapedString
var rawString:String="last name" //rawString
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;b&gt;Arrays:&lt;/b&gt;&lt;br&gt;
Arrays are used to store homogenous data. We can create arrays of different data types like an array to store int value and another array to store string value. Arrays are represented by &lt;b&gt;Array&lt;/b&gt; class. We can create array using library function arrayOf() and Array() constructor.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Differents approach to declare array
val stringArray=arrayOf("name","age")
val stringArray=arrayOf&amp;lt;String&amp;gt;("name","age")
val stringArray=Array(2){"name";"age"}
val stringArray=Array&amp;lt;String&amp;gt;(2){"name";"age"}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can access elements of an array using the index. For example, if we want to access the first element then we can access it with 0 index.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;val stringArray=Array&amp;lt;String&amp;gt;(3){"first";"second";"third";}
print(stringArray[1])
This will third as output
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Array index starts from 0. So if we are accessing the first element then we have to use the index 0.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;That's it for this article. We will continue in the next article.&lt;br&gt;
Happy Learning!!&lt;/p&gt;

</description>
      <category>android</category>
      <category>computerscience</category>
      <category>programming</category>
    </item>
    <item>
      <title>Build Redux React Todo List App with animations using Framer Motion</title>
      <author>CodeBucks</author>
      <pubDate>Thu, 22 Apr 2021 10:26:04 +0000</pubDate>
      <link>https://dev.to/codebucks/build-redux-react-todo-list-app-with-animations-using-framer-motion-1mp1</link>
      <guid>https://dev.to/codebucks/build-redux-react-todo-list-app-with-animations-using-framer-motion-1mp1</guid>
      <description>&lt;p&gt;Hey,&lt;/p&gt;

&lt;p&gt;I know building TODO List always won't get you too far😴, But It can teach you basic concepts and implementation of particular framework.&lt;/p&gt;

&lt;p&gt;here is the demo of what we're going to build in this tutorial.👇👇&lt;br&gt;
&lt;strong&gt;Link:&lt;/strong&gt; &lt;a href="https://react-redux-todo-app-lac.vercel.app/"&gt;https://react-redux-todo-app-lac.vercel.app/&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Now please if you're starting this tutorial watch till the end because doing it half won't teach you anything. So let's dig in.🤩&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In this tutorial we're going to build this TODO app with animations using Framer-Motion. &lt;/p&gt;

&lt;p&gt;What will you learn after this Tutorial?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;How to use Redux Toolkit&lt;/li&gt;
&lt;li&gt;How to use Framer-Motion for awesome animations&lt;/li&gt;
&lt;li&gt;Method to sort and display lists&lt;/li&gt;
&lt;li&gt;CRUD operation (obviously🤭)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you prefer to code along with the same steps while listing to music you can watch this video 👀:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/YhgSuUkWlK4"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You must have basic understanding of Redux to follow this tutorial, don't worry if you don't know the basics of Redux you can visit my channel, there is playlist to learn redux.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#lets-get-started"&gt;
  &lt;/a&gt;
  Let's get Started
&lt;/h3&gt;

&lt;p&gt;First, The below is the folder structure for this small project so make sure you create it.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#folder-structure"&gt;
  &lt;/a&gt;
  Folder Structure
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;src
|--redux(folder)
   |--reducer.js (here we will create actions and reducer)
   |--store.js
|--components(folder)
   |--Todos.js
   |--TodoItem.js
    --DisplayTodos.js
|--css(folder)
   |--main.css
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Follow below commands to create react-app and install required libraries!&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npx create-react-app your-app-name&lt;/code&gt;&lt;br&gt;
&lt;code&gt;cd your-app-name&lt;/code&gt;&lt;br&gt;
&lt;code&gt;npm install react-redux @reduxjs/toolkit framer-motion react-icons&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;we're going to use these all four libraries,&lt;br&gt;
react-icons is to add svg files in our app.&lt;/p&gt;

&lt;p&gt;First let's add one input and add button in the &lt;strong&gt;Todos.js&lt;/strong&gt;.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
As you can see in above code it has one input with handleChange() method and one add button.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#creating-reducer-and-store"&gt;
  &lt;/a&gt;
  Creating Reducer and Store
&lt;/h3&gt;

&lt;p&gt;Now let's create our Reducer and actions.&lt;br&gt;
Open reducer.js file and write below code:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Explanation:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Now here we're going to use &lt;a href="https://redux-toolkit.js.org/api/createSlice"&gt;createSlice()&lt;/a&gt; function.&lt;br&gt;
This function takes 1 object having 3 parameters,&lt;br&gt;
--&amp;gt; name of the slice function&lt;br&gt;
--&amp;gt; initial State&lt;br&gt;
--&amp;gt; All reducer logic inside reducers {} object&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Line 1:&lt;/strong&gt; import createSlice function.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Line 2:&lt;/strong&gt; create initial state here it is an empty array.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Line 5:&lt;/strong&gt; Here we have used createSlice function and passed all 3 required parametrs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Line 13:&lt;/strong&gt; We have created one action called &lt;em&gt;addTodos&lt;/em&gt; this action get an callback function which have two arguments (state, action). Then this function will return state with adding action.payload (payload contains one todo item).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Line 22:&lt;/strong&gt; Here we have exported addTodos as action from addTodoReducer.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Line 23:&lt;/strong&gt; Here we have exported reducer from addTodoReducer.&lt;/p&gt;

&lt;p&gt;So, let's create our store and pass this reducer.&lt;/p&gt;

&lt;p&gt;Open store.js and write below code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { configureStore } from "@reduxjs/toolkit";
import { reducer } from "./reducer";

const store = configureStore({
  reducer: reducer,
});

export default store;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;In the above code we have used &lt;a href="https://redux-toolkit.js.org/api/configureStore"&gt;configureStore&lt;/a&gt; function.&lt;/p&gt;

&lt;p&gt;This funcion takes one reducer and automatically takes care for the Redux DevTools extension so we don't have to write about it explicitly. &lt;/p&gt;

&lt;p&gt;Now our store is ready with reducer that we have created.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#connecting-redux-store-with-react-app"&gt;
  &lt;/a&gt;
  Connecting Redux Store with React App
&lt;/h3&gt;

&lt;p&gt;Let's connect this store to our React application.&lt;/p&gt;

&lt;p&gt;I like to connect store in the index.js file.&lt;br&gt;
Open index.js file.&lt;/p&gt;

&lt;p&gt;import &lt;strong&gt;Provider&lt;/strong&gt; from the &lt;em&gt;react-redux&lt;/em&gt; and store from store.js&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { Provider } from "react-redux";
import store from "./redux/store";
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Now just wrap your &lt;strong&gt;&lt;/strong&gt; component with this Provider and pass store in the Provider just like this,&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ReactDOM.render(
  &amp;lt;React.StrictMode&amp;gt;
//Just like below 👇
    &amp;lt;Provider store={store}&amp;gt;
      &amp;lt;App /&amp;gt;
    &amp;lt;/Provider&amp;gt;

  &amp;lt;/React.StrictMode&amp;gt;,
  document.getElementById("root")
);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Now our Redux store is connected with our React App.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#connect-react-component-with-redux"&gt;
  &lt;/a&gt;
  Connect React component with Redux
&lt;/h3&gt;

&lt;p&gt;Let's use this store and Redux functionalities in the &lt;strong&gt;Todos.js&lt;/strong&gt; component.&lt;/p&gt;

&lt;p&gt;To connect this component with Redux we will use &lt;a href="https://react-redux.js.org/api/connect"&gt;connect()&lt;/a&gt; method from &lt;em&gt;react-redux&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Open &lt;strong&gt;Todos.js&lt;/strong&gt; file.&lt;/p&gt;

&lt;p&gt;import connect method from react-redux.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { connect } from "react-redux";
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Now instead of simple &lt;code&gt;export default Todos&lt;/code&gt; change it to this line:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;export default connect(null,null)(Todos);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This is how we use connect method, It's like higher order function that takes your component (Todos in our case) and add redux functionalities to it then return it.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Now add props in your component and log this props you will see and Object having dispatch method. Which means your component is now connected with Redux.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Let's use todos state in our component.&lt;/p&gt;

&lt;p&gt;To use state from redux we have to pass &lt;strong&gt;mapStateToProps&lt;/strong&gt; method in the connect method.&lt;br&gt;
and to use actions or functions that we created inside the reducer (like addTodos) we have to create and pass &lt;strong&gt;mapDispatchToProps&lt;/strong&gt; method and add it to the coonect method.&lt;/p&gt;

&lt;p&gt;So let's create both of this methods in the &lt;em&gt;Todos.js&lt;/em&gt; component.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const mapStateToProps = (state) =&amp;gt; {
  return {
    todos: state,
  };
};
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This method takes state as argument and will return state as we want here i want state as todos.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const mapDispatchToProps = (dispatch) =&amp;gt; {
  return {
    addTodo: (obj) =&amp;gt; dispatch(addTodos(obj)),
  };
};
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This method takes dispatch as argument and it can dispatch action to reducer.&lt;br&gt;
here, I want to add todos so this method returns and addTodo method.&lt;br&gt;
addTodo method dispatch an addTodos action with an obj(which contains todo item, it will acts as action.payload ).&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;here, make sure to import addTodos action from reducer file.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;now add both of this methods in the connect just like this,&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;export default connect(mapStateToProps, mapDispatchToProps)(Todos);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;let's connect input and add button with this state and methods.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Line 23:&lt;/strong&gt; Here I have created add function. First it will check it todo state is not empty if it is empty then shows an alert else it will use addTodo method from props.&lt;br&gt;
in this method we will pass todo object which contains&lt;br&gt;
&lt;strong&gt;id&lt;/strong&gt;, &lt;strong&gt;todo&lt;/strong&gt; text, &lt;strong&gt;completed&lt;/strong&gt; boolean which is initially false.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Line 50:&lt;/strong&gt; Make sure to connect add() with onClick of button.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Line 55:&lt;/strong&gt; here I have mapped values from todos state.&lt;br&gt;
If todos.length &amp;gt; 0 then it will map it and shows all todo items you add.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You can also use Redux DevTools Extension to see actions and state.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;
  &lt;a href="#add-all-operations-in-the-reducer"&gt;
  &lt;/a&gt;
  Add All operations in the Reducer
&lt;/h3&gt;

&lt;p&gt;Let's add all the required operations in the reducer.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Line 16:&lt;/strong&gt; removeTodos will filterout items whose id is same as action.payload. (which means while using this action we will pass id as payload)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Line 20:&lt;/strong&gt; updateTodos is used to change todo text or todo.item. It will check if id is same as passed in action.payload then it will return all other properties of the item and change the text of todos with the passed value.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Line 32:&lt;/strong&gt; completeTodos will change the completed boolean value of particular item to true.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Line 46:&lt;/strong&gt; Make sure to export all the required todo actions.&lt;/p&gt;

&lt;p&gt;Now we will use all these actions.&lt;/p&gt;

&lt;p&gt;Let's separate display todos component from &lt;strong&gt;Todos.js&lt;/strong&gt; file. Remove &lt;code&gt;ul&lt;/code&gt; list from it and let's add it in the DisplayTodo item component.&lt;/p&gt;

&lt;p&gt;Before creating &lt;strong&gt;DisplayTodos.js&lt;/strong&gt; component, first let's create &lt;strong&gt;TodoItem.js&lt;/strong&gt; component.&lt;/p&gt;

&lt;p&gt;so, open &lt;strong&gt;TodoItem.js&lt;/strong&gt; file and write below code.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Don't read this code, First read the explanation.&lt;/p&gt;
&lt;/blockquote&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Now as you saw in the demo each todo item contains 3 buttons &lt;em&gt;edit&lt;/em&gt;,&lt;em&gt;completed&lt;/em&gt;,&lt;em&gt;delete&lt;/em&gt;. and 3 methods connected with these buttons.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Line 2 &amp;amp; 3:&lt;/strong&gt; This contains import of icons from react-icons library, we will use this icons in edit, update and remove buttons.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Line 7:&lt;/strong&gt; These are the all required items that we have to pass while displaying &lt;em&gt;TodoItem&lt;/em&gt;* component.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;item --&amp;gt; contains all the data of single todo item&lt;/li&gt;
&lt;li&gt;updateTodo --&amp;gt; Method to update todo&lt;/li&gt;
&lt;li&gt;completeTodo --&amp;gt; method to set todo is completed&lt;/li&gt;
&lt;li&gt;removeTodo --&amp;gt; method to remove todo item&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Line 23:&lt;/strong&gt; Here in the return Inside this &lt;code&gt;li&lt;/code&gt; element you can see,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;textarea --&amp;gt; it shows the todo text as default value.&lt;/li&gt;
&lt;li&gt;buttons --&amp;gt; after text area there are 3 buttons which contains icons for edit, update and remove, this buttons are connected with all required methods.&lt;/li&gt;
&lt;li&gt;span --&amp;gt; after these buttons there is one span element which shows done, and it will display only when item.completed is true.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Line 9:&lt;/strong&gt; It is a ref which is connected with &lt;code&gt;textarea&lt;/code&gt;. It's value is true.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Line 30:&lt;/strong&gt; here, we have used ref value for the disabled attribute, which means while ref is true until then &lt;code&gt;textarea&lt;/code&gt; stays disabled. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Line 11:&lt;/strong&gt; This change Function will enable the &lt;code&gt;textarea&lt;/code&gt; and adds focus on it. This function is connected with the &lt;em&gt;edit&lt;/em&gt; button.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Line 16:&lt;/strong&gt; This function is used to update value of the todo item. It will take 3 arguments, id, updated value and event. Then when you press the enter key then it will call the &lt;strong&gt;updateTodo&lt;/strong&gt; method and pass all required things as object and disable the textarea. It is connected on &lt;strong&gt;onKeyPress&lt;/strong&gt; in the textarea at &lt;strong&gt;Line 32&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Line 48:&lt;/strong&gt; This remove button is connected with the remove method. we have to pass id of the item we want to remove in this method.&lt;/p&gt;

&lt;p&gt;Now let's use this component inside the &lt;strong&gt;DisplayTodos.js&lt;/strong&gt; file.&lt;/p&gt;

&lt;p&gt;open &lt;strong&gt;DisplayTodos.js&lt;/strong&gt; and write below code.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;Make sure to import &lt;strong&gt;DisplayTodos.js&lt;/strong&gt; component in the &lt;strong&gt;App.js&lt;/strong&gt; file right after the &lt;strong&gt;Todos&lt;/strong&gt; component.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Line 1-9:&lt;/strong&gt; Contains all the requried imports.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Line 12 &amp;amp; 18:&lt;/strong&gt; we have already discussed about both of these method. Both of these methods must be passed in the connect method. One of them is to map state to props while the other method contains all the required methods to dispatch particular actions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Line 28:&lt;/strong&gt; This state is for those 3 buttons which are active, completed and all. It is initialised with "active".&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Line 31:&lt;/strong&gt; This div contains all 3 buttons. and onClick of these buttons &lt;em&gt;sort&lt;/em&gt; state gets changed based on the button it's values can be "active","completed" or "all".&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Line 53:&lt;/strong&gt; In this &lt;code&gt;ul&lt;/code&gt; element we're rendering 3 different lists based on conditions like,&lt;/p&gt;

&lt;p&gt;--&amp;gt; Renders active todo items when (item.completed === false) and (sort === "active")&lt;/p&gt;

&lt;p&gt;--&amp;gt; Renders completed todo items when (item.completed === true) and (sort === "completed")&lt;/p&gt;

&lt;p&gt;--&amp;gt; Renders all todo items when (sort === "all")&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Line 61-65:&lt;/strong&gt; This contains all the data that we need to pass in the &lt;em&gt;TodoItem&lt;/em&gt; component.&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Now for the Framer-motion and CSS part you can watch the video or read the code from github repository. (It will be more easier to understand when you watch the video then writing here about css and animations )&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;Full Code of this Tutorial can be found, &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#here"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/codebucks27/React-Redux-Todo-App"&gt;here&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;That's the end of this whole Tutorial. 😄&lt;/p&gt;

&lt;p&gt;If you're confused about anything related to this topic feel free to ask me 😉!&lt;/p&gt;

&lt;p&gt;Also, if you want to learn Basics of Redux then please do visit my channel.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thanks-for-reading-and-supporting"&gt;
  &lt;/a&gt;
  Thanks For Reading and Supporting.😄
&lt;/h3&gt;

&lt;p&gt;my YouTube channel: &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#codebucks"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.youtube.com/channel/UCeYt6blRBKuNrEg_-282fSA"&gt;@CodeBucks&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;Follow me on Instagram where I'm sharing lot's of useful resources!&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#codebucks"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.instagram.com/code.bucks"&gt;@code.bucks&lt;/a&gt; 😉
&lt;/h4&gt;

</description>
      <category>react</category>
      <category>redux</category>
      <category>javascript</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>5 things that are ruining your blogs &amp; how to fix 'em! 😱</title>
      <author>Amelia Vieira Rosado</author>
      <pubDate>Thu, 22 Apr 2021 10:20:02 +0000</pubDate>
      <link>https://dev.to/technoglot/5-things-that-are-ruining-your-blogs-how-to-fix-em-83</link>
      <guid>https://dev.to/technoglot/5-things-that-are-ruining-your-blogs-how-to-fix-em-83</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@healing_photographer?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Aarón Blanco Tejedor&lt;/a&gt; on &lt;a href="https://unsplash.com/?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#5-things-that-are-ruining-your-blogs-amp-how-to-fix-em"&gt;
  &lt;/a&gt;
  5 things that are ruining your blogs &amp;amp; how to fix 'em! 😱
&lt;/h1&gt;

&lt;p&gt;Hello folks and welcome back! 👋🏻&lt;/p&gt;

&lt;p&gt;Today I'd like to share with you 5 things that I wholeheartedly believe are ruining your blogs. Now, I've only been actively blogging for a month now (more info &lt;a href="https://dev.to/technoglot/reflecting-on-my-1st-month-blogging-a-retrospect-1c6k"&gt;here&lt;/a&gt;), but I've also been reading a TON. So despite not being a blogging guru, here's some advice I can share to help you make your blogs better. I hope you find them helpful! 😊&lt;/p&gt;

&lt;p&gt;Buckle up and enjoy the ride! 🚀&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#poor-visual-structure"&gt;
  &lt;/a&gt;
  Poor visual structure 🤢
&lt;/h1&gt;

&lt;p&gt;Gee, have you heard of headings? &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s8qrGgIh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://external-content.duckduckgo.com/iu/%3Fu%3Dhttps%253A%252F%252Fmedia1.tenor.com%252Fimages%252Ffe250a86e1dfa2648481e7da5ebd441b%252Ftenor.gif%253Fitemid%253D5510026%26f%3D1%26nofb%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s8qrGgIh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://external-content.duckduckgo.com/iu/%3Fu%3Dhttps%253A%252F%252Fmedia1.tenor.com%252Fimages%252Ffe250a86e1dfa2648481e7da5ebd441b%252Ftenor.gif%253Fitemid%253D5510026%26f%3D1%26nofb%3D1" alt="you gon learn today"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I've seen too many blogs that have ZERO headings in them whatsoever. Sorry to break it to you my dearest, but a blog without any clear visual structure is just an eyesore. 😓&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PnBuyTOD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://external-content.duckduckgo.com/iu/%3Fu%3Dhttps%253A%252F%252Fmedia.giphy.com%252Fmedia%252Fl0HeiaW8q9B6tqoHS%252Fsource.gif%26f%3D1%26nofb%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PnBuyTOD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://external-content.duckduckgo.com/iu/%3Fu%3Dhttps%253A%252F%252Fmedia.giphy.com%252Fmedia%252Fl0HeiaW8q9B6tqoHS%252Fsource.gif%26f%3D1%26nofb%3D1" alt="mic drop"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With that out of the way: how can you solve this? Easy. When drafting your blog, try to think in terms of headings. Each heading being a section of your blog. Once you have your blog title and section headings written down, you can proceed to fill in the blanks. In other words: write the actual content.&lt;/p&gt;

&lt;p&gt;Not convinced yet? How about a mini step-by-step guide? 🤔 &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Step 1️⃣&lt;/strong&gt;: Write down your blog title&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Step 2️⃣&lt;/strong&gt;: Write down your section headings&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Step 3️⃣&lt;/strong&gt;: Write the actual content of your blog&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Additionally, here's a structure you can use in all your blogs:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Short intro&lt;/strong&gt; (between 3 and 5 sentences long)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Body of your blog&lt;/strong&gt; (typically having several sections, each with corresponding paragraphs)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Conclusion&lt;/strong&gt; (no longer than 3 sentences)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But wait! There's more. Keep on reading! 👇🏻&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;P.S.: This blog is something I'd consider properly structured. Not because I wrote it, but because it has a clear structure. Take notes.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#huge-blocks-of-text"&gt;
  &lt;/a&gt;
  HUGE blocks of text 😵
&lt;/h1&gt;

&lt;p&gt;Just who are you trying to kill of boredom, huh? How dare you not break that huge piece of text into smaller paragraphs?! Seriously, you have offended my eyes and brain! 😡&lt;/p&gt;

&lt;p&gt;In all seriousness, like I said in the previous point: &lt;strong&gt;structure matters&lt;/strong&gt;. Adding headings is important, but so is creating paragraphs. Additionally, spacing out your content makes it more visually pleasant for your audience. Please don't lump together all the content in a single section. As a rule of thumb: keep paragraphs between 3 and 5 sentences long. Longer than that will probably make it a dissertation. Or a best-selling novel (if you're lucky) 😅&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;PRO tip 💡&lt;/strong&gt;: Always preview your content before publishing it. If you can get a friend or two to proofread your blog and give feedback, that's awesome too! If you feel some parts of your blog are too bulky, just go back in there and: Break 👏🏻 It 👏🏻 Up 👏🏻.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#you-dont-engage"&gt;
  &lt;/a&gt;
  You don't engage 😒
&lt;/h1&gt;

&lt;p&gt;Quite frankly, I don't understand this behavior. I've seen some excellent pieces and discussions around here. Yet despite all the comments and reactions, the author does not engage with their readers. WHY?!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yPS1nqtA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://external-content.duckduckgo.com/iu/%3Fu%3Dhttp%253A%252F%252Fmtv.com%252Fnews%252Fwp-content%252Fuploads%252Fstyle%252F2014%252F05%252Fi-want-it-that-way-8.gif%26f%3D1%26nofb%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yPS1nqtA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://external-content.duckduckgo.com/iu/%3Fu%3Dhttp%253A%252F%252Fmtv.com%252Fnews%252Fwp-content%252Fuploads%252Fstyle%252F2014%252F05%252Fi-want-it-that-way-8.gif%26f%3D1%26nofb%3D1" alt="tell me why, backstreet boys"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Uh, yeah...moving on! 😂 Engage with your audience. PLEASE! 🥺 I cannot for the life of me stress this enough. ENGAGE! &lt;/p&gt;

&lt;p&gt;Someone commented on your post? Drop a like on their comment. Drop a &lt;strong&gt;"Thank you so much for reading!"&lt;/strong&gt; or a &lt;strong&gt;"So happy you enjoyed it!"&lt;/strong&gt; as a reply to their comment. Yeah, yeah, I hear you loud and clear: &lt;strong&gt;"I'm too busy for that 🧐"&lt;/strong&gt;. If you happen to be a busy fella, just put aside 10 minutes in your schedule. Use these 10 precious minutes to engage with your audience, reply to their comments or answer their burning questions. &lt;/p&gt;

&lt;p&gt;However, there is a time when I'd say it's okay to un-engage. For instance, let's say you posted a blog 2 or 3 weeks ago. Till this day, you still get notifications from people reacting to that blog post or commenting on it. Do you still have to reply to those comments? The answer: if you want to. &lt;/p&gt;

&lt;p&gt;I typically still get back at comments after so long, but if I feel really lazy, I'll just drop a like on their comment. That's so they know that I saw their comment and enjoyed reading it. Quite frankly, don't expect me to remember every last word I wrote in a 3-week-old blog post. Sometimes I don't even know what people are getting at when commenting on such an old post of mine! 😜&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;PRO tip 💡&lt;/strong&gt;: Genuinely engage with other people's content too, not just yours. It is more important than you think! 😊&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#you-dont-switch-it-up"&gt;
  &lt;/a&gt;
  You don't switch it up 🥱
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u8GYfKYV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://external-content.duckduckgo.com/iu/%3Fu%3Dhttps%253A%252F%252Fmedia1.tenor.com%252Fimages%252F5ff1d9c792b57b09f612653b5d7ee511%252Ftenor.gif%253Fitemid%253D8449267%26f%3D1%26nofb%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u8GYfKYV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://external-content.duckduckgo.com/iu/%3Fu%3Dhttps%253A%252F%252Fmedia1.tenor.com%252Fimages%252F5ff1d9c792b57b09f612653b5d7ee511%252Ftenor.gif%253Fitemid%253D8449267%26f%3D1%26nofb%3D1" alt="sleepy boss baby"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;By this I mean that ALL your blogs follow the same format. You literally have abused the listicle blog post format! Or perhaps you only write about the same topic all the darn time. Now, allow me to elaborate.&lt;/p&gt;

&lt;p&gt;First of all, there is nothing wrong with listicles (that was an example by the way. No need to get booty-tickled). What is semi-wrong however, is feeding your audience the EXACT SAME blog post format over and over and over again. Sure, it makes for a consistent blogging style, but it may get boring and monotonous to your readers in the long-run.&lt;/p&gt;

&lt;p&gt;Secondly, writing about the same topic is not a sin! You found a niche? Exploit it by all means! I'm no one to stop you. But, please dare to venture into unexplored waters. Maybe write a TIL (Today I Learned) blog post for a change. Or tell us a funny anecdote. Whatever it is, switch it up a bit. &lt;/p&gt;

&lt;p&gt;Back to the drawing board you go! ✍🏻&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#lack-of-media"&gt;
  &lt;/a&gt;
  Lack of media 📎
&lt;/h1&gt;

&lt;p&gt;By this I don't mean that you need to add 3000 GIFs in a single blog post. What I mean is that your post feels &lt;strong&gt;bare&lt;/strong&gt;. There's no diagrams, no pictures, no GIFs, no embedded videos. NOTHING. It's just TEXT. All TEXT! BLOCKS and BLOCKS of TEXT! (Can you tell how traumatized I truly am? 😢)&lt;/p&gt;

&lt;p&gt;Let me make this clear. Code snippets don't count. That's text too! 😂 But seriously, it does not hurt to add an image to your blog. Or to embed a tweet or video you found helpful and that relates to the topic you're writing about. Remember how I told you earlier that you should mind your blog structure and should break up large chunks of text? Well, media helps you with this! &lt;/p&gt;

&lt;p&gt;As a reader it is pleasant to stumble upon an image or two when reading. It gives the brain something different to process other than just text. (I'm not a neuroscientist, but I bet our brains are not wired to love large chunks of text anyway 🤷🏻‍♀️) So please give it a go in your next blog post. Add some media to it and rejoice! ✨&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#bonus-extremely-lengthy-posts"&gt;
  &lt;/a&gt;
  BONUS 🎉: Extremely lengthy posts
&lt;/h1&gt;

&lt;p&gt;Be honest, would you read your 30 minute long blog post? &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uNMCp8Ad--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://external-content.duckduckgo.com/iu/%3Fu%3Dhttps%253A%252F%252Fmedia1.tenor.com%252Fimages%252Ff871b811dd577d2650009194a9a4206e%252Ftenor.gif%253Fitemid%253D10312303%26f%3D1%26nofb%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uNMCp8Ad--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://external-content.duckduckgo.com/iu/%3Fu%3Dhttps%253A%252F%252Fmedia1.tenor.com%252Fimages%252Ff871b811dd577d2650009194a9a4206e%252Ftenor.gif%253Fitemid%253D10312303%26f%3D1%26nofb%3D1" alt="absolutely fucking not"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Excuse the language! 🤭 What was I saying? Oh yeah! If your answer to the above question was NOPE or along those lines, then what makes you think that your audience will read such a long blog? I personally would read a 30 minute read only if I am in the depths of my despair and have literally tried EVERYTHING suggested on SO (Stack Overflow), without any luck. &lt;/p&gt;

&lt;p&gt;So you admit defeat... Good. But what now? Allow me to introduce you to the innovative thing that is SERIES! &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7fXRwLv1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://external-content.duckduckgo.com/iu/%3Fu%3Dhttps%253A%252F%252Fmedia.giphy.com%252Fmedia%252FxT77XWum9yH7zNkFW0%252Fgiphy.gif%26f%3D1%26nofb%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7fXRwLv1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://external-content.duckduckgo.com/iu/%3Fu%3Dhttps%253A%252F%252Fmedia.giphy.com%252Fmedia%252FxT77XWum9yH7zNkFW0%252Fgiphy.gif%26f%3D1%26nofb%3D1" alt="WOW"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But, let's be real. It's a simple, yet overlooked thing. You got a 15 minute read? How about you turn that into a 3 part series, with each part being a 5-minute read? Sounds great, right? However, there's one little gotcha that I have noticed when writing series myself. The later parts got less attention than the first part. Though I must admit I lack the sufficient scientific proof to back up this statement. (I've only written like 3 series so far. Or was it 4? Meh, I forgot! 😜)&lt;/p&gt;

&lt;p&gt;So the next time you find yourself writing a 60 minute read, how about you:&lt;br&gt;
a) make it a series of blogs, or &lt;br&gt;
b) make it an in-depth guide (e-book) that you can sell online for a few bucks? &lt;/p&gt;

&lt;p&gt;You can thank me later! 😉&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#cest-fini"&gt;
  &lt;/a&gt;
  C'est fini! 🏁
&lt;/h1&gt;

&lt;p&gt;Hooray! You made it to the end of this one! How about a medal? 🏅 Now, tell me, how did you like my first listicle EVER? Let me know in the comments! 👇🏻 Guess who engages with her readers? 😏&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JRq3862C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media.tenor.co/images/ee92bb8ecce631180e17eb097823c836/raw" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JRq3862C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media.tenor.co/images/ee92bb8ecce631180e17eb097823c836/raw" alt="ME!"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once again, thanks for reading! 🙇🏻‍♀️ Now go make those blog posts sexy!&lt;/p&gt;


&lt;p&gt;May the code always be with you... 👩🏻‍💻👨🏻‍💻 See you next time!&lt;br&gt;&lt;br&gt;
&lt;/p&gt;

&lt;br&gt;&lt;br&gt;
Still here? Catch me on &lt;a href="https://twitter.com/technoglot"&gt;Twitter&lt;/a&gt; or find me &lt;a href="https://linktr.ee/technoglot"&gt;elsewhere&lt;/a&gt;! If you like my blogs and are feeling generous, kindly consider to 👇🏻&lt;br&gt;&lt;br&gt;
&lt;a href="https://www.buymeacoffee.com/technoglot"&gt;&lt;img width="250" src="https://res.cloudinary.com/practicaldev/image/fetch/s--N3AmDEOc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ir6d1lh7uo59jfi2d2v4.png"&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b4J90nl3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/00o5biwvy4hi2os3vp8u.png" alt="Footer banner"&gt;

</description>
      <category>writing</category>
      <category>productivity</category>
      <category>watercooler</category>
    </item>
    <item>
      <title>Save hundreds of dollars on courses as a university student</title>
      <author>Albert Hadacek</author>
      <pubDate>Thu, 22 Apr 2021 10:14:38 +0000</pubDate>
      <link>https://dev.to/albert_hadacek/save-hundreds-of-dollars-on-courses-as-a-university-student-5g7g</link>
      <guid>https://dev.to/albert_hadacek/save-hundreds-of-dollars-on-courses-as-a-university-student-5g7g</guid>
      <description>&lt;p&gt;If you are studying at a university, you might have access to many resources for free that others have to pay for. It is a great opportunity to gain some edge, learn tools that are highly in demand while not spending any money.&lt;/p&gt;

&lt;p&gt;The greatest package, you can access as a student is the &lt;a href="https://education.github.com/pack"&gt;Github Student Developer Package&lt;/a&gt;. If you have an academic email address Github recognizes, access is granted immediately. Besides great deals on learning platforms, you also get a bunch of other great deals. So, check that out! &lt;/p&gt;

&lt;p&gt;It does not even matter if you are enrolled in a Computer Science program, any student can take advantage of it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#frontend-masters"&gt;
  &lt;/a&gt;
  Frontend Masters
&lt;/h3&gt;

&lt;p&gt;The best deal in the GitHub student package is definitely &lt;strong&gt;6 months&lt;/strong&gt; of free access to &lt;strong&gt;Frontend Masters&lt;/strong&gt;. It is worth between &lt;strong&gt;200-250 USD&lt;/strong&gt; and the content there is just awesome. If you wanna step up your web development skills, this is the platform you should use.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#data-camp"&gt;
  &lt;/a&gt;
  Data Camp
&lt;/h3&gt;

&lt;p&gt;If you are more interested in the world of data, you can get &lt;strong&gt;3 months&lt;/strong&gt; access to Data Camp. There you can learn Python, SQL, or R and really get a good grasp of advanced concepts. This content is worth &lt;strong&gt;75 USD&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#educativeio"&gt;
  &lt;/a&gt;
  Educative.io
&lt;/h3&gt;

&lt;p&gt;Another great platform with several famous courses that might help you land a dream job. Their System Design course is highly popular and you can get &lt;strong&gt;3 months&lt;/strong&gt; for free worth over &lt;strong&gt;100 USD&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#oreilly"&gt;
  &lt;/a&gt;
  O'Reilly
&lt;/h3&gt;

&lt;p&gt;This is university-specific, but my university offers full access to the O'Reilly online platform which contains thousands of books and video courses, including some courses from Udemy. Again, it is a great place to learn and it saves you &lt;strong&gt;499 USD a year&lt;/strong&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#your-online-university-library"&gt;
  &lt;/a&gt;
  Your Online University Library
&lt;/h3&gt;

&lt;p&gt;Also, check your online university library, you might get great books and articles from there for free. These days, programming books cost between &lt;strong&gt;30 - 50 USD&lt;/strong&gt; and this is a legal way to get them for free.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>webdev</category>
      <category>python</category>
      <category>javascript</category>
    </item>
    <item>
      <title>4 lessons I learned as a starting Scrum master</title>
      <author>Jelle Smeets</author>
      <pubDate>Thu, 22 Apr 2021 09:32:40 +0000</pubDate>
      <link>https://dev.to/smeetsmeister/4-lessons-i-learned-as-a-starting-scrum-master-2p02</link>
      <guid>https://dev.to/smeetsmeister/4-lessons-i-learned-as-a-starting-scrum-master-2p02</guid>
      <description>&lt;p&gt;I recently saw that I passed my 4 year mark as a certified Scrum master. This seemed a good moment for me to reflect on my experiences so far, and take a closer look at the lessons I learned as a starting Scrum master.&lt;/p&gt;

&lt;p&gt;To give a little bit of context, I started as a part time Scrum master, part time developer at the company I currently work at. During the last 4 years a lot has changed, in terms of my own personal development, how the company handles agile and scrum and the teams I was scrum master for.&lt;/p&gt;

&lt;p&gt;The following lessons learned as a Scrum master are what stuck to me as the most important lessons, or the most "aha" moments I had.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e8lScnAI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fihj3qrlw9jdhzvqfseu.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e8lScnAI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fihj3qrlw9jdhzvqfseu.jpeg" alt="Lessons learned as a starting scrum master"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conflicts-are-not-always-bad"&gt;
  &lt;/a&gt;
  Conflicts are not always bad
&lt;/h3&gt;

&lt;p&gt;In the first team I was a Scrum master in, there where several conflicts. Without the experience I have now, I saw those conflicts as an impediment to immediately solve. If the team is not fighting about code standards, which libraries to pick or at what time the daily should be, they could be doing actual work. On my two day training for CSM1, the trainer talked about how conflicts are part of the development process as a team.&lt;/p&gt;

&lt;p&gt;In my nature is being a peace keeper, but when I resolved conflicts before they really started, I took away the chance of the team to overcome them, learn from them and become closer as a team. This resulted in the team continuing to work as individuals, and never got close enough to really get into a mode where they could collaborate, without me as an conflict solver.&lt;/p&gt;

&lt;p&gt;Sure, not all conflicts should be played out fully. some conflicts can be more harmful than the lesson they learn. You can compare it to being a parent (or so have I been told). Sure you want your children to learn from their mistakes. Letting young children go outside without their jacket, is something they can learn from. But you will not let them cross a busy road, on their own.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#am-i-a-scrum-master-or-a-developer-with-extras"&gt;
  &lt;/a&gt;
  Am I a Scrum master or a developer with extras?
&lt;/h3&gt;

&lt;p&gt;All the professionals around me at the time that where Scrum master where basically just senior developers with a bit more responsibility, especially with the part time roles of both Scrum master and developer. This lead me to believe that the role of a Scrum master was the "frontrunner of the team". You should prepare all tickets technically, make sure the Scrum artefacts and ceremonies are done and will be held responsible if the team is not running.&lt;/p&gt;

&lt;p&gt;The first times I started realizing I was just a senior developer with some extras, was during my Scrum master certification. But the truth is, my big "&lt;em&gt;aha&lt;/em&gt;" moment came when I read &lt;a href="https://www.amazon.com/Coaching-Agile-Teams-ScrumMasters-Addison-Wesley-dp-0321637704/dp/0321637704/"&gt;Coaching Agile Teams by Lyssa Adkins&lt;/a&gt;. This lead me to re-evaluate how I saw my own position. As the biggest changes, let the development team really be in charge of the development part, so the ownership and feeling of commitment will grow. And focus more on other areas, for example making the whole organisation more agile, shifting my style from leading to coaching or giving workshops.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#adapt-your-style-to-the-phase-your-team-is-in"&gt;
  &lt;/a&gt;
  Adapt your style to the phase your team is in
&lt;/h3&gt;

&lt;p&gt;At the time I was asked to become a Scrum master for a new team to be formed, I was a developer in a team that was in my eyes, really close to being a performing team. Years later I still feel like those where "the good old days" when I look back on being able to deliver value fast.&lt;/p&gt;

&lt;p&gt;The team consisted of some very experienced developers, and found a mode of working which worked for them. The Scrum master at that moment could do a more loosely role, as the team was responsible enough to make sure we kept running.&lt;/p&gt;

&lt;p&gt;At that moment when I switched to a new started team, I tried to copy what I saw from my Scrum master in the previous team. But that did not work as well. Who could have thought that the more loosely style would work for experienced developers with experience in Agile, and working together for 2 years, but did not work for a group of developers that have not worked together before, and have not worked with Agile either.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Tuckman%27s_stages_of_group_development"&gt;Tuckman stages of group development&lt;/a&gt; describes that there are 4 different stages for teams, that all require a different style of coaching. As a Scrum master in a Forming or Storming team, the style of a more strict Scrum master is will benefit the team more, while a Norming or Performing team can benefit from a more loose role,.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#being-a-part-time-developer-does-not-work"&gt;
  &lt;/a&gt;
  Being a part time developer does not work
&lt;/h3&gt;

&lt;p&gt;I can be quite honest splitting up your time between a developer and a Scrum master does not work. If you truly feel that improving Agile and the team, or even your organisation is important, it will take all your time. The pitfall with being a developer on the side is, that I noticed that instead of doing gemba walks, listening to customers or experimenting with new approaches I coded.&lt;/p&gt;

&lt;p&gt;This results into Scrum masters doing the bare minimum, to make sure they don't lose any time that they could deliver features. While the true power of the Scrum master lies in getting the organization on board, making the team more empowered and look out for continuous improvements. And the trade-off to me was; Do I want to put minimal effort into the growth of the team to make sure I can develop 5 story points per sprint? &lt;strong&gt;OR&lt;/strong&gt; do I want to make sure that because of my full commitment as a Scrum master, the team can do 5 extra points (and even more) without my input as a developer?&lt;/p&gt;

&lt;p&gt;If after all of this you still have the feeling that the Scrum master position is not full time, I advice you to read this post: &lt;a href="http://agiletrail.com/2011/11/14/42-tasks-for-a-scrum-masters-job/"&gt;42 Tasks for a Scrum masters job&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;The Scrum master role I saw when starting is quite a lot different from how I fulfil that role now. I would say my perspective has changed for the better, and all of these lessons learned as a Scrum master help me become a little bit better every day. The most important lessons for me where:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Don't try to prevent all conflicts, let the team learn from them.&lt;/li&gt;
&lt;li&gt;Take a good look at your own position. Don't only follow the examples you have at work, but also look at outside sources how they fill the position.&lt;/li&gt;
&lt;li&gt;There is no 1 solution that will fit all teams, adapt your style to the phase the team is in.&lt;/li&gt;
&lt;li&gt;Be a Scrum master full time, you will be amazed at what you can do.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;If you are interested in more of my blog posts, check out the challenge I set for myself in the &lt;a href="https://blog.jellesmeets.nl/retrospective/retrospective-challenge-2020/"&gt;Retrospective challenge 2020&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

</description>
      <category>career</category>
      <category>agile</category>
      <category>productivity</category>
      <category>beginners</category>
    </item>
    <item>
      <title>React.JS in a Nutshell</title>
      <author>Rithik Samanthula</author>
      <pubDate>Thu, 22 Apr 2021 09:15:26 +0000</pubDate>
      <link>https://dev.to/code2rithik/react-js-in-a-nutshell-4k65</link>
      <guid>https://dev.to/code2rithik/react-js-in-a-nutshell-4k65</guid>
      <description>&lt;p&gt;React, A JavaScript Library for Building Beautiful User Interfaces.&lt;/p&gt;

&lt;p&gt;It was developed by Facebook and was released in the year of 2013. &lt;/p&gt;

&lt;p&gt;ReactJS has been one of the most influential libraries of recent times.&lt;/p&gt;

&lt;p&gt;We use it to build components that represent logical and reusable parts of the UI.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lZaz5-In--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vr3tfiyb9k6fvkcnqumh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lZaz5-In--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vr3tfiyb9k6fvkcnqumh.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The beauty of React is the simplicity of creating a component.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GAX6U-yI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r8k5ym5830gor7l0nns6.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GAX6U-yI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r8k5ym5830gor7l0nns6.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can use JavaScript Functions with HTML Code inside it to render the components. This is known as JSX. It compiles HTML and JavaScript together.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1h4L8iSp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x18tib8olixx2suc1oh8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1h4L8iSp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x18tib8olixx2suc1oh8.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As an added bonus, you can easily jump into React Native and start building mobile apps.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EfK4-CHF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bu58ucqyvt6zsik2od8o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EfK4-CHF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bu58ucqyvt6zsik2od8o.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It's no surprise that this UI Library is one of the in-demand skills for many developers today.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3QrCoJ9B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7pxtveqi70on8c2w7g7i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3QrCoJ9B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7pxtveqi70on8c2w7g7i.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks For Reading this Blog. If you enjoyed it, smash the like button and share it with your friends.&lt;/p&gt;

&lt;p&gt;Remember...&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#keep-coding-yall"&gt;
  &lt;/a&gt;
  Keep Coding Y'All 👨🏻‍💻
&lt;/h1&gt;

</description>
      <category>react</category>
      <category>explainlikeimfive</category>
      <category>javascript</category>
    </item>
    <item>
      <title>6 Ways To Make Money With Your Code</title>
      <author>Krushil Koshti</author>
      <pubDate>Thu, 22 Apr 2021 09:09:19 +0000</pubDate>
      <link>https://dev.to/koshtikrushil/6-ways-to-make-money-with-your-code-591b</link>
      <guid>https://dev.to/koshtikrushil/6-ways-to-make-money-with-your-code-591b</guid>
      <description>&lt;p&gt;Many of us know what “Coding” is and maybe some of you’ve built really cool projects and have many years of practice, however, not everybody knows how to really make money from your code. I tried to find the best ways how to do it, some of them I used myself and some of them not, but actually, everybody can highlight something from this top.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Freelancing&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Freelancing is one of the most popular ways of doing money, if you know something well enough (Coding, Photoshoping, or Editing) then you can easily present your services. It is directly proportional to how much effort you put into this. There are many platforms to start accepting orders from other people, for instance: Upwork, Fiverr and etc.&lt;/p&gt;

&lt;p&gt;Read More :: &lt;a href="https://cmsinstallation.blogspot.com/2021/04/6-ways-to-make-money-with-your-code.html"&gt;https://cmsinstallation.blogspot.com/2021/04/6-ways-to-make-money-with-your-code.html&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>design</category>
      <category>php</category>
      <category>programming</category>
    </item>
    <item>
      <title>🌍📍 Building an Interactive Dot Density Map in JS</title>
      <author>andreykh1985</author>
      <pubDate>Thu, 22 Apr 2021 09:04:47 +0000</pubDate>
      <link>https://dev.to/andreykh1985/building-an-interactive-dot-density-map-in-js-1jn</link>
      <guid>https://dev.to/andreykh1985/building-an-interactive-dot-density-map-in-js-1jn</guid>
      <description>&lt;p&gt;Dot density maps may seem to be difficult to build, especially for those taking their very first steps in interactive data visualization development. But the truth is, they are not.&lt;/p&gt;

&lt;p&gt;Shachee Swadia, a data designer and storyteller, made a compelling tutorial showing how to create a beautiful interactive JavaScript-based dot map in four steps.&lt;/p&gt;

&lt;p&gt;To illustrate the process, in the article, she is visualizing data about all shipping ports across the world, first making a basic map in just a few lines of code and then improving it in several more.&lt;/p&gt;

&lt;p&gt;Check out the &lt;a href="https://www.anychart.com/blog/2021/04/20/js-dot-density-map/"&gt;JS dot map tutorial&lt;/a&gt; 🔥&lt;/p&gt;

&lt;p&gt;🚢⚓️🌐&lt;/p&gt;

</description>
      <category>datascience</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>javascript</category>
    </item>
    <item>
      <title>The unconventional Developer Advocate?</title>
      <author>Vanessa Measom</author>
      <pubDate>Thu, 22 Apr 2021 08:58:29 +0000</pubDate>
      <link>https://dev.to/measomvanessa/the-unconventional-developer-advocate-21gi</link>
      <guid>https://dev.to/measomvanessa/the-unconventional-developer-advocate-21gi</guid>
      <description>&lt;p&gt;I enjoyed reading Wassim Chegham's article &lt;a href="https://dev.to/wassimchegham/the-subtle-art-of-being-a-developer-advocate-gdg"&gt;"The Subtle Art of Being A Developer Advocate"&lt;/a&gt; and it got me thinking of my role as a Developer Advocate.&lt;/p&gt;

&lt;p&gt;Why the title "The unconventional Developer Advocate"? Well for me, I'm not actually a developer and Wassim mentioned that &lt;em&gt;"... Developer Advocates are, before anything else, developers themselves and speak the same language as other developers."&lt;/em&gt;. So where do I stand in the Developer Advocacy world?&lt;/p&gt;

&lt;p&gt;Wassim states in his article &lt;em&gt;""Advocacy" is an old concept that comes from the Medieval Latin word "advocare" which means "to add a voice". The term "advocate" comes from Old French word "avocat" which means "a lawyer". So, an Advocate literarily means someone who "pleads a case or a cause", who "argues that something needs to be changed or improved"."&lt;/em&gt; and despite possibly being at a disadvantage of not being a developer, I feel that I can at least be an advocate for the developers in our own community.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Who do I work for?&lt;/strong&gt;&lt;br&gt;
I've been working at &lt;a href="https://www.slashdata.co/"&gt;SlashData&lt;/a&gt;, (formerly known as VisionMobile), for 13 years. SlashData help top 100 technology firms understand software developer audiences and measure the ROI of their developer strategies I joined when the company was relatively small, and in a startup environment, over the years I have taken many roles from marketing to finance and HR ops, finally finding the place that fits best with me, working in the developer facing part of the company - &lt;a href="https://developereconomics.com/"&gt;Developer Economics&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What's my role at Developer Economics&lt;/strong&gt;&lt;br&gt;
My day to day tasks differs depending on the time of the year, you see, we run two developer surveys per year (they typically attract over 20,000+ developers) and there are a few parts of the survey process that I'm heavily involved in.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Developer feedback&lt;/strong&gt;&lt;br&gt;
This is by far the most important part of my role. During surveys we receive &lt;a href="https://developereconomics.com/blog/what-did-developers-have-to-say-about-our-q2-2020-survey"&gt;thousands of comments&lt;/a&gt; from participants with suggestions on how we can improve, tools we should include, translation feedback, prizes we should offer and more. Along with others in our team, we review every single piece of feedback and reply to all personally. We also reach out to community members outside the survey to check how we can improve our community offerings.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Developer Committee&lt;/strong&gt;&lt;br&gt;
We have a lovely bunch of developers who are part of our Developer Committee. They are members of our community and help us to review our prizes, and content test our surveys before they go live to the wider audience. My job is to ensure their input is relayed to the analysts and developers at SlashData who build our developer surveys.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Developer Newsletter&lt;/strong&gt;&lt;br&gt;
For the past four years I've run our biweekly &lt;a href="https://content.developereconomics.com/developer-economics-newsletter-signup-form"&gt;developer newsletter&lt;/a&gt;. As I mentioned above, I'm not a developer, but over the years I've come to understand the news and resources developers want to see. I've recently started to include wellbeing tips, especially with the last year taking it's toll on people's wellbeing. We recently ran a feedback poll about the content, people really responded well to it. We also polled our community and in one of our questions, we asked what they like the best, among the open-ended answers there were quite a few responses with just "Vanessa" 🤩, because I sign all the emails they receive from us and deal with day to day queries.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Developer Interviews&lt;/strong&gt;&lt;br&gt;
Not for recruitment, we have over 30,000 members in our community, and over 1k have been with the community for over 5 years, so I run interviews to get to know them on a personal level, to understand what issues they experience, their goals, what tools they use etc. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Developer prizes&lt;/strong&gt;&lt;br&gt;
We love to include prizes in our surveys that are going to make developers lives better. I'm responsible for choosing the prizes that will be included in the survey, from laptops, phones, license, vouchers, courses and swag. Not only do I choose the prizes, I also run the prize draws during and after the surveys have closed, contact the winners, order and ship their prizes and deal with many communications to ensure those who we can't get a physical prize to, can get a cash alternative - sadly for some countries there's many hoops to jump through to ensure the devs get their prizes. Developers from 155 countries take our surveys, and I advocate for everyone to get equally valuable prizes, no matter where in the world they might be.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Survey translations&lt;/strong&gt;&lt;br&gt;
Our surveys are available in English plus 8 additional languages (Chinese Simplified, Chinese Traditional, Spanish, Portuguese, Vietnamese, Russian, Japanese, Korean). I don't personally translate the surveys, but I do work closely with our translation partner to ensure our surveys are translated into the native languages so we can reach a &lt;a href="https://www.slashdata.co/blog/developer-research-101-right-methodology-reliable-survey-data?"&gt;diverse&lt;/a&gt; audience of developers.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What else do I do?&lt;/strong&gt;&lt;br&gt;
There's a lot of customer service involved in the role, responding to developer queries throughout the year, we don't have a product that we sell, but I deal with prize queries following our prize draws.&lt;/p&gt;

&lt;p&gt;I work with our Community Lead &lt;a href="https://twitter.com/MiljanaMitic6"&gt;Miljana&lt;/a&gt; to ensure we grow our community, look for partners who we can work with, gifts we can offer to our newsletter subscribers, manage our CRM, add blog posts and other content to our website.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Who am I as a person?&lt;/strong&gt;&lt;br&gt;
I'm a mum of two, based in the UK, I'm actually quite an introvert so this is quite scary putting my head above the sand writing this! In one of my recent side quests I trained as a Health Kinesiologist (this side of me is where I love to help with developers wellbeing), next step is Reiki. At this stage of my life I'm usually found running after the kids at the park, sometimes I go cycling, love Minecrafting, I meditate when I can remember / have time. I want to learn to play the Piano.  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Final thoughts&lt;/strong&gt;&lt;br&gt;
I'm obviously not a developer but I feel I make up for it with my primary role, which is giving a voice to developers in our community, I celebrate the individuals, champion their projects and try to empower them by finding news and resources to make them a better developer (and look out for their wellbeing!).&lt;/p&gt;

&lt;p&gt;If you're one of the Developer Economics community members, say hi 👋 in the comments, or you can connect with me on Twitter at &lt;a href="https://twitter.com/MeasomVanessa"&gt;@MeasomVanessa&lt;/a&gt;. If you're a professional or enthusiast in developer relations, check out &lt;a href="https://www.devrelx.com/"&gt;DevRelx&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>devrel</category>
      <category>career</category>
      <category>discuss</category>
    </item>
    <item>
      <title>Solution: Brick Wall</title>
      <author>seanpgallivan</author>
      <pubDate>Thu, 22 Apr 2021 08:56:20 +0000</pubDate>
      <link>https://dev.to/seanpgallivan/solution-brick-wall-4jld</link>
      <guid>https://dev.to/seanpgallivan/solution-brick-wall-4jld</guid>
      <description>&lt;p&gt;&lt;em&gt;This is part of a series of Leetcode solution explanations (&lt;a href="https://dev.to/seanpgallivan/leetcode-solutions-index-57fl"&gt;index&lt;/a&gt;). If you liked this solution or found it useful,&lt;/em&gt; &lt;strong&gt;&lt;em&gt;please like&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;this post and/or&lt;/em&gt; &lt;strong&gt;&lt;em&gt;upvote&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;&lt;a href="https://leetcode.com/problems/brick-wall/discuss/1170889"&gt;my solution post on Leetcode's forums&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#leetcode-problem-554-medium-brick-wall"&gt;
  &lt;/a&gt;
  &lt;a href="https://leetcode.com/problems/brick-wall/"&gt;Leetcode Problem #554 (&lt;em&gt;Medium&lt;/em&gt;): Brick Wall&lt;/a&gt;
&lt;/h4&gt;




&lt;h4&gt;
  &lt;a href="#description"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Description:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;There is a brick wall in front of you. The wall is rectangular and has several rows of bricks. The bricks have the same height but different width. You want to draw a vertical line from the &lt;strong&gt;top&lt;/strong&gt; to the &lt;strong&gt;bottom&lt;/strong&gt; and cross the &lt;strong&gt;least&lt;/strong&gt; bricks.&lt;/p&gt;

&lt;p&gt;The brick wall is represented by a list of rows. Each row is a list of integers representing the width of each brick in this row from left to right.&lt;/p&gt;

&lt;p&gt;If your line go through the edge of a brick, then the brick is not considered as crossed. You need to find out how to draw the line to cross the least bricks and return the number of crossed bricks.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You cannot draw a line just along one of the two vertical edges of the wall, in which case the line will obviously cross no bricks.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#examples"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Examples:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;[[1,2,2,1], [3,1,2], [1,3,2], [2,4], [3,1,2], [1,3,1,1]]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Visual:&lt;/td&gt;
&lt;td&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AzNOQZQc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wj94p4p4op6o0za3pmhp.png" alt="Example Visual"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#constraints"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Constraints:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;The width sum of bricks in different rows are the same and won't exceed &lt;code&gt;INT_MAX&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;The number of bricks in each row is in range &lt;code&gt;[1,10,000]&lt;/code&gt;. The height of wall is in range &lt;code&gt;[1,10,000]&lt;/code&gt;. Total number of bricks of the wall won't exceed &lt;code&gt;20,000&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#idea"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Idea:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;If the goal here is to find where a line will cross the fewest bricks, then we could also say that the goal is to find where the most brick edges line up. We can consider the edges to occur at an index representing the current running total of the previous elements of a given row of the wall. For example, if the row is defined as &lt;strong&gt;[1,2,2,1]&lt;/strong&gt;, then the inside edges occur at &lt;strong&gt;[1,1+2,1+2+2]&lt;/strong&gt;, or &lt;strong&gt;[1,3,5]&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;If we now know how to find the edges, then we're left with finding out which index has the highest frequency of edges, which naturally calls for a &lt;strong&gt;frequency map.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;So we can iterate through each &lt;strong&gt;row&lt;/strong&gt; in the &lt;strong&gt;wall&lt;/strong&gt;, keep a running total of the current row (&lt;strong&gt;rowSum&lt;/strong&gt;), and then update the frequency of each edge's index in our frequency map (&lt;strong&gt;freq&lt;/strong&gt;).&lt;/p&gt;

&lt;p&gt;Once we're done filling &lt;strong&gt;freq&lt;/strong&gt;, we just need to iterate through it to find the highest value (&lt;strong&gt;best&lt;/strong&gt;), which represents the number of edges aligned on a single index. Our actual answer, however, is the number of bricks, not edges, so we should &lt;strong&gt;return&lt;/strong&gt; the total number of rows minus &lt;strong&gt;best&lt;/strong&gt;.&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#implementation"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Implementation:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;For Javascript, it's more performant to iterate through the finished &lt;strong&gt;freq&lt;/strong&gt; looking for the &lt;strong&gt;best&lt;/strong&gt; result&lt;/p&gt;

&lt;p&gt;In Python it's easier to run &lt;strong&gt;max()&lt;/strong&gt; directly on &lt;strong&gt;freq&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;For Java and C++ it's faster to keep track of &lt;strong&gt;best&lt;/strong&gt; as we add values to &lt;strong&gt;freq&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;For Java, it's also weirdly more performant to extract the &lt;strong&gt;row&lt;/strong&gt; processing to a helper function.&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#javascript-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Javascript Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;leastBricks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;wall&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;freq&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Map&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="nx"&gt;best&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;wall&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;row&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;wall&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;rowSum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;row&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;freq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;rowSum&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;freq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;rowSum&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="nx"&gt;rowSum&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; 
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;freq&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;v&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;best&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;best&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;wall&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;best&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#python-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Python Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;leastBricks&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;wall&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;]])&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;freq&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;defaultdict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;wall&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;rowSum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
                &lt;span class="n"&gt;freq&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;rowSum&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
                &lt;span class="n"&gt;rowSum&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;wall&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nb"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;freq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#java-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Java Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;best&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="nc"&gt;Map&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;freq&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;HashMap&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;leastBricks&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;wall&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;wall&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;size&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++)&lt;/span&gt;
            &lt;span class="n"&gt;processRow&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;wall&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;wall&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;size&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;best&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;processRow&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;rowSum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;size&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;++)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;freq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getOrDefault&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rowSum&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;freq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;put&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rowSum&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;best&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;best&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;rowSum&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt; 
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#c-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;C++ Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;public:&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;leastBricks&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;wall&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;unordered_map&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;freq&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;best&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;wall&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;rowSum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;wall&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;wall&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;freq&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;rowSum&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="n"&gt;best&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;best&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;freq&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;rowSum&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
                &lt;span class="n"&gt;rowSum&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;wall&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
            &lt;span class="p"&gt;};&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;wall&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;best&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>algorithms</category>
      <category>javascript</category>
      <category>java</category>
      <category>python</category>
    </item>
    <item>
      <title>Make an Instagram Bot Using Python</title>
      <author>lary mak</author>
      <pubDate>Thu, 22 Apr 2021 08:30:06 +0000</pubDate>
      <link>https://dev.to/larymak/make-an-instagram-bot-using-python-4a0a</link>
      <guid>https://dev.to/larymak/make-an-instagram-bot-using-python-4a0a</guid>
      <description>&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=Dru-c8LrH0s"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cGwjStb1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/marcomontalbano/image/upload/v1619079848/video_to_markdown/images/youtube--Dru-c8LrH0s-c05b58ac6eb4c4700831b2b3070cd403.jpg" alt="Instagram Bot"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Source Code: &lt;a href="https://github.com/larymak/Python-project-Scripts/tree/main/InstagramBot"&gt;GitHub&lt;/a&gt;  &lt;/p&gt;

&lt;p&gt;Connect With me at &lt;a href="https://twitter.com/larymak1"&gt;Twitter&lt;/a&gt; | &lt;a href="https://www.instagram.com/nextgencoders/"&gt;Insta&lt;/a&gt; | &lt;a href="https://www.youtube.com/channel/UCrT1ARRZfLOuf6nc_97eXEg"&gt;YouTube&lt;/a&gt; | &lt;a href="https://www.linkedin.com/in/hillary-nyakundi-3a64b11ab/"&gt;LinkedIn&lt;/a&gt;  | &lt;a href="https://github.com/larymak"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>programming</category>
      <category>beginners</category>
      <category>watercooler</category>
    </item>
    <item>
      <title>Material Tailwind – New Framework for Web Developers</title>
      <author>Sajad Ahmad Nawabi</author>
      <pubDate>Thu, 22 Apr 2021 08:15:09 +0000</pubDate>
      <link>https://dev.to/sajadevo/material-tailwind-new-framework-for-web-developers-1pjd</link>
      <guid>https://dev.to/sajadevo/material-tailwind-new-framework-for-web-developers-1pjd</guid>
      <description>&lt;p&gt;When talking about the user interface, the most important thing is its appearance. It is the interaction point with the user’s attention. However, building a beautiful and effective appearance is not easy because it needs spending time and a lot of skills.&lt;/p&gt;

&lt;p&gt;In this case, the good part is that there are some workarounds, like frameworks and libraries (e.g. &lt;a href="https://tailwindcss.com"&gt;Tailwind CSS&lt;/a&gt;), which facilitate the process of building user interfaces (but not that much like you’re thinking about).&lt;/p&gt;

&lt;p&gt;OK, are you looking for a simple, easy, and quick way to build a better and beautiful user interface? If the answer is YES then you should take a look over &lt;a href="https://material-tailwind.com"&gt;Material Tailwind&lt;/a&gt;. Read this article to find out why.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-material-tailwind"&gt;
  &lt;/a&gt;
  What is Material Tailwind?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://material-tailwind.com"&gt;&lt;strong&gt;Material Tailwind&lt;/strong&gt;&lt;/a&gt; is a framework for building user interfaces, an open-source project by &lt;a href="https://creative-tim.com"&gt;Creative Tim&lt;/a&gt;. It is using &lt;a href="https://tailwindcss.com"&gt;Tailwind CSS&lt;/a&gt; – a utility-first CSS framework, and &lt;a href="https://material.io"&gt;Material Design 2&lt;/a&gt; guidelines – a modern design system developed by Google.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HIKigIxF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativetimblog.com/blog/wp-content/uploads/2021/04/material-tailwind-logo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HIKigIxF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativetimblog.com/blog/wp-content/uploads/2021/04/material-tailwind-logo.png" alt="Material Tailwind"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The first version of &lt;a href="https://material-tailwind.com"&gt;Material Tailwind&lt;/a&gt; has been released based on &lt;a href="https://reactjs.org"&gt;ReactJS&lt;/a&gt;, the most popular JavaScript library for building user interfaces.&lt;/p&gt;

&lt;p&gt;So before we deep dive into Material Tailwind’s details, let’s take a look at &lt;a href="https://tailwindcss.com"&gt;Tailwind CSS&lt;/a&gt;, &lt;a href="https://material.io"&gt;Material Design 2&lt;/a&gt;, and &lt;a href="https://reactjs.org"&gt;ReactJS&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-tailwind-css"&gt;
  &lt;/a&gt;
  What is Tailwind CSS?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://tailwindcss.com"&gt;Tailwind CSS&lt;/a&gt; is a utility-first CSS framework packed with classes that can be composed to build any design directly into your markup.&lt;/p&gt;

&lt;p&gt;Compared to other CSS frameworks like &lt;a href="https://getbootstrap.com"&gt;Bootstrap&lt;/a&gt;, it doesn’t come with predefined components; instead, Tailwind CSS provides you a set of CSS helper classes. Using these classes, you can create custom designs and user interfaces with ease.&lt;/p&gt;

&lt;p&gt;For more information about Tailwind CSS, you can check the Tailwind CSS website: &lt;a href="https://tailwindcss.com"&gt;https://tailwindcss.com&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-material-design-2"&gt;
  &lt;/a&gt;
  What is Material Design 2?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://material.io"&gt;Material Design 2&lt;/a&gt; is the most popular, modern, and comprehensive design system developed by Google that helps you build high-quality digital experiences.&lt;/p&gt;

&lt;p&gt;The design system itself is a comprehensive set of useful guides and helpful tools that developers or designers can use for building modern, trendy and user-friendly user interfaces that adhere to material style.&lt;/p&gt;

&lt;p&gt;For more information about Material Design 2, you can check the Material Design 2 website: &lt;a href="https://material.io/"&gt;https://material.io/&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-reactjs"&gt;
  &lt;/a&gt;
  What is ReactJS?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://reactjs.org"&gt;ReactJS&lt;/a&gt; is the most popular front-end JavaScript library for building fast and interactive user interfaces. It is an open-source, component-based, front-end library responsible only for the application’s view layer in Model View Controller (MVC) architecture.&lt;/p&gt;

&lt;p&gt;For more information about ReactJS, you can check the ReactJS website: &lt;a href="https://reactjs.org/"&gt;https://reactjs.org/&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-material-tailwind"&gt;
  &lt;/a&gt;
  Why Material Tailwind?
&lt;/h2&gt;

&lt;p&gt;Therefore, as you read above, &lt;a href="https://material-tailwind.com"&gt;Material Tailwind&lt;/a&gt; has been built using the most popular technologies and trends around the world.&lt;/p&gt;

&lt;p&gt;As I said before, building a user interface is not easy, even if you’re using Tailwind CSS. It comes up with different helper classes, and you need to play around with thousands of helper classes to build a simple user interface that makes your code cluttered. Also, add the fact that you need to build everything from scratch, which takes a lot of time. ☹️&lt;/p&gt;

&lt;p&gt;By using Material Tailwind you can build a user interface as quickly and easily as possible because you don’t need to build everything from scratch or play around with Tailwind CSS helper classes. Material Tailwind provides you all the important and necessary components for building a user interface in the format of &lt;a href="https://reactjs.org"&gt;ReactJS&lt;/a&gt; components with the space of &lt;a href="https://material.io"&gt;Material Design 2&lt;/a&gt; and &lt;a href="https://tailwindcss.com"&gt;Tailwind CSS&lt;/a&gt; helper classes 😍&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#who-can-use-material-tailwind"&gt;
  &lt;/a&gt;
  Who can use Material Tailwind?
&lt;/h2&gt;

&lt;p&gt;Material Tailwind is a free and open-source project and everyone can use it, you only need to have a basic knowledge of ReactJS.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#material-tailwind-components"&gt;
  &lt;/a&gt;
  Material Tailwind Components
&lt;/h1&gt;

&lt;p&gt;As I said before, Material Tailwind contains all the necessary and important components for building a user interface.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Alerts&lt;/li&gt;
&lt;li&gt;Buttons&lt;/li&gt;
&lt;li&gt;Cards&lt;/li&gt;
&lt;li&gt;Dropdowns and Dropups&lt;/li&gt;
&lt;li&gt;Images&lt;/li&gt;
&lt;li&gt;Inputs&lt;/li&gt;
&lt;li&gt;Labels&lt;/li&gt;
&lt;li&gt;Menus&lt;/li&gt;
&lt;li&gt;Modals&lt;/li&gt;
&lt;li&gt;Navbars&lt;/li&gt;
&lt;li&gt;Paginations&lt;/li&gt;
&lt;li&gt;Popovers&lt;/li&gt;
&lt;li&gt;Progress bars&lt;/li&gt;
&lt;li&gt;Tabs&lt;/li&gt;
&lt;li&gt;Tooltips&lt;/li&gt;
&lt;li&gt;Typography&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R_o1xebb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativetimblog.com/blog/wp-content/uploads/2021/04/material-tailwind-alerts-1024x584.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R_o1xebb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativetimblog.com/blog/wp-content/uploads/2021/04/material-tailwind-alerts-1024x584.png" alt="components"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fgpXAWp4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativetimblog.com/blog/wp-content/uploads/2021/04/material-tailwind-buttons-1024x496.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fgpXAWp4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativetimblog.com/blog/wp-content/uploads/2021/04/material-tailwind-buttons-1024x496.png" alt="buttons"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can check here the components: &lt;a href="https://material-tailwind.com/components"&gt;https://material-tailwind.com/components&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Also, this awesome framework comes with 3 fully coded sample pages. You can start working instantly.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--syxH8LUZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativetimblog.com/blog/wp-content/uploads/2020/04/Screen-Shot-2021-04-12-at-15.31.04-1024x586.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--syxH8LUZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativetimblog.com/blog/wp-content/uploads/2020/04/Screen-Shot-2021-04-12-at-15.31.04-1024x586.png" alt="templates"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--x3LSP2hL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativetimblog.com/blog/wp-content/uploads/2020/04/profil-page-1024x582.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x3LSP2hL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativetimblog.com/blog/wp-content/uploads/2020/04/profil-page-1024x582.png" alt="templates"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But it’s not the end of the story and we will expand and add more components to Material Tailwind in the near future.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#material-tailwind-is-opensource"&gt;
  &lt;/a&gt;
  Material Tailwind is open-source
&lt;/h2&gt;

&lt;p&gt;Material Tailwind is an open-source project, and everyone can contribute to making Material Tailwind better. You can contribute to solve different issues or expand its components.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Before contributing to Material Tailwind, please read the contributing guideline: &lt;a href="https://github.com/creativetimofficial/material-tailwind/blob/main/CONTRIBUTING.md"&gt;https://github.com/creativetimofficial/material-tailwind/blob/main/CONTRIBUTING.md&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#in-the-near-future"&gt;
  &lt;/a&gt;
  In the near future
&lt;/h2&gt;

&lt;p&gt;As I said before, the first version of Material Tailwind is only available for ReactJS, but soon, you will see the other versions for &lt;a href="https://vuejs.org"&gt;Vue.js&lt;/a&gt;, &lt;a href="https://angularjs.org"&gt;Angular.js&lt;/a&gt;, &lt;a href="https://svelte.dev"&gt;Svelte&lt;/a&gt;, and &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript"&gt;Vanilla Javascript&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>opensource</category>
      <category>designtool</category>
      <category>webapp</category>
    </item>
  </channel>
</rss>
