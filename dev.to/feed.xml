<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Share a lexical analyzer implemented in JavaScript</title>
      <author>Kuper</author>
      <pubDate>Sun, 10 Oct 2021 09:00:14 +0000</pubDate>
      <link>https://dev.to/kuper/share-a-lexical-analyzer-implemented-in-javascript-5f3k</link>
      <guid>https://dev.to/kuper/share-a-lexical-analyzer-implemented-in-javascript-5f3k</guid>
      <description>&lt;p&gt;It is a lexical analyzer based on DFA that made by JS and supports multi-language extension.&lt;/p&gt;

&lt;p&gt;Project: &lt;a href="https://github.com/WGrape/lexer"&gt;https://github.com/WGrape/lexer&lt;/a&gt;&lt;br&gt;
Demo: &lt;a href="https://wgrape.github.io/lexer"&gt;https://wgrape.github.io/lexer&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Welcome~&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IX1JyA8N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ec2a07zufcmtdq01x7r3.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IX1JyA8N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ec2a07zufcmtdq01x7r3.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>github</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Golang 101: Range</title>
      <author>Aydın Yakar</author>
      <pubDate>Sun, 10 Oct 2021 08:57:58 +0000</pubDate>
      <link>https://dev.to/yakar/golang-101-range-e7l</link>
      <guid>https://dev.to/yakar/golang-101-range-e7l</guid>
      <description>&lt;p&gt;Dizi, Kesit ve Harita verilerinden &lt;code&gt;indis&lt;/code&gt;, &lt;code&gt;anahtar&lt;/code&gt; ve &lt;code&gt;değer&lt;/code&gt; çekmek için &lt;code&gt;for&lt;/code&gt;  döngüsü ile birlikte &lt;code&gt;range&lt;/code&gt; kullanılır.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;package&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="s"&gt;"fmt"&lt;/span&gt;

&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="c"&gt;// Kesitteki Sayıları Toplama&lt;/span&gt;
    &lt;span class="n"&gt;kesit&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;toplam&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sayi&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;range&lt;/span&gt; &lt;span class="n"&gt;kesit&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;toplam&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;sayi&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Toplam:"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;toplam&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c"&gt;// Değerin Indis'ini Bulmak&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;indis&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;deger&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;range&lt;/span&gt; &lt;span class="n"&gt;kesit&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;deger&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Indis:"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;indis&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c"&gt;// Harita'dan Anahtar/Değer Alma&lt;/span&gt;
    &lt;span class="n"&gt;iller&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;map&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"m"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"mersin"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"a"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"antalya"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;range&lt;/span&gt; &lt;span class="n"&gt;iller&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%s -&amp;gt; %s&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c"&gt;// Sadece Anahtar Verisin Almak&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;range&lt;/span&gt; &lt;span class="n"&gt;iller&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Anahtar:"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Toplam: 10
Indis: 2
m -&amp;gt; mersin
a -&amp;gt; antalya
Anahtar: m
Anahtar: a
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://play.golang.org/p/bSXlCCrnK82"&gt;çalıştır!&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#kesitteki-say%C4%B1lar%C4%B1-toplama"&gt;
  &lt;/a&gt;
  Kesitteki Sayıları Toplama
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;    &lt;span class="n"&gt;kesit&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;toplam&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sayi&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;range&lt;/span&gt; &lt;span class="n"&gt;kesit&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;toplam&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;sayi&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Toplam:"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;toplam&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Kesitteki sayıları &lt;code&gt;range&lt;/code&gt; ile her döngü de sırayla indis (&lt;code&gt;_&lt;/code&gt;) ve deger (sayi) atamalarını yaparak toplamını buluyoruz. Indis numarasına ihtiyacımız olmadığı için &lt;code&gt;_&lt;/code&gt; boş tanımlayıcı (&lt;em&gt;blank identifier&lt;/em&gt;) kullandık.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#de%C4%9Ferin-indisini-bulmak"&gt;
  &lt;/a&gt;
  Değerin Indis'ini Bulmak
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;indis&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;deger&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;range&lt;/span&gt; &lt;span class="n"&gt;kesit&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;deger&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Indis:"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;indis&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Değeri &lt;code&gt;3&lt;/code&gt; olan değişkenin &lt;code&gt;indis&lt;/code&gt; değerini bulup yazdırıyoruz.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#haritadan-anahtarde%C4%9Fer-alma"&gt;
  &lt;/a&gt;
  Harita'dan Anahtar/Değer Alma
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;    &lt;span class="n"&gt;iller&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;map&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"m"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"mersin"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"a"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"antalya"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;range&lt;/span&gt; &lt;span class="n"&gt;iller&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%s -&amp;gt; %s&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Harita dizisinden anahtar ve değeri ekrana yazdırıyoruz.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#anahtar-verisi-almak"&gt;
  &lt;/a&gt;
  Anahtar Verisi Almak
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;range&lt;/span&gt; &lt;span class="n"&gt;iller&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Anahtar:"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;Range&lt;/code&gt; ile tek değişken verildiğinde map'tan anahtar verisi dönmektedir.&lt;/p&gt;

</description>
      <category>go</category>
      <category>functions</category>
    </item>
    <item>
      <title>Create a menubar app for macOS, just using Python</title>
      <author>Adarsh Punj</author>
      <pubDate>Sun, 10 Oct 2021 08:49:23 +0000</pubDate>
      <link>https://dev.to/adarshpunj/create-a-menubar-app-for-macos-just-using-python-hmp</link>
      <guid>https://dev.to/adarshpunj/create-a-menubar-app-for-macos-just-using-python-hmp</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;While Python is great for building a lot of things, macOS apps are certainly not one of them. I was wondering if it’s possible to build a menu bar app for macOS using Python. I found out that it’s not only possible — it’s “ridiculously uncomplicated”.&lt;/p&gt;

&lt;p&gt;In this tutorial, we’ll be building a realtime macOS app for stock prices — all using Python.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hK8Gc2ai--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.pythongasm.com/static/src/006/stock-app.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hK8Gc2ai--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.pythongasm.com/static/src/006/stock-app.png" alt="Stock App"&gt;&lt;/a&gt;&lt;br&gt;
Let’s start by installing the dependencies.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;rumps
requests
py2app
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#rumps"&gt;
  &lt;/a&gt;
  Rumps
&lt;/h2&gt;

&lt;p&gt;Rumps generates PyObjC apps (specifically menubar apps) from simple python code. To test the rumps module, run the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;rumps&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;hello&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sender&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"Hello from &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;sender&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rumps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;App&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hello World"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;menu&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;rumps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MenuItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Weird Menu Item"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;callback&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;hello&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;hello()&lt;/code&gt; function is executed when the menu item is clicked.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; Hello from Weird Menu Item
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To add more menu items, we can just add more elements to the app.menu list. The argument sender represents the MenuItem that has set the callback.&lt;/p&gt;

&lt;p&gt;A cleaner way to get the same result is by using &lt;code&gt;rumps.clicked&lt;/code&gt; decorator:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;rumps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clicked&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Weird Menu Item"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;rumps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clicked&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Saner Menu Item"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;hello&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sender&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"Hello from &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;sender&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rumps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;App&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hello World"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We will stick to the decorators approach for rest of the tutorial.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#stock-price-data"&gt;
  &lt;/a&gt;
  Stock price data
&lt;/h2&gt;

&lt;p&gt;There are many sources to get stock quotes. We will be using Finnhub’s API (auth key based, free to use).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;GET https://finnhub.io/api/v1/quote?symbol=AAPL&amp;amp;token=YOUR_API_KEY
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Sample response:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
   "c":119.49,
   "h":119.6717,
   "l":117.87,
   "o":119.44,
   "pc":119.21,
   "t":1605436627
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can register at &lt;a href="https://finnhub.io/register"&gt;https://finnhub.io/register&lt;/a&gt; for a free API key. At the time of writing this the rate limit is 60 requests/minute.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#building-the-stockapp"&gt;
  &lt;/a&gt;
  Building the StockApp
&lt;/h2&gt;

&lt;p&gt;Initiate a class named “StockApp” as a subclass of rumps.App class, and add some menu items using the rumps.clicked decorator:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;rumps&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;StockApp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rumps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;App&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;StockApp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Stock"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;rumps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clicked&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"MSFT"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;rumps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clicked&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"AAPL"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;getStock&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sender&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;sender&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'__main__'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;StockApp&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now it’s time to integrate StockApp with Finnhub API. Let’s tweak getStock() like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;rumps&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;StockApp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rumps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;App&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;StockApp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Stock"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;rumps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clicked&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"MSFT"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;rumps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clicked&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"AAPL"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;getStock&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sender&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"https://finnhub.io/api/v1/quote?symbol=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;sender&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;&amp;amp;token=YOUR_API_KEY"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="n"&gt;stock_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="s"&gt;'c'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;sender&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;:&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;stock_data&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'__main__'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;StockApp&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;getStock()&lt;/code&gt; method updates the title when you select a stock symbol from the menu.&lt;br&gt;
However, we don’t want to get the price by a click event. We need a function to continuously update the price of the selected stock, say after every few seconds.&lt;/p&gt;

&lt;p&gt;To do this rumps has a &lt;code&gt;Timer&lt;/code&gt; class, and you can decorate a function with &lt;code&gt;rumps.timer()&lt;/code&gt; to set a timer on the function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;rumps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;do_something&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sender&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
   &lt;span class="c1"&gt;# this function is executed every 1 second
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;At the launch, we can set some default menu item, say “AAPL”. This option can be changed with a click event while the timer-decorated function will keep updating the price for the currently selected menu item.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;rumps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clicked&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"AAPL"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;rumps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clicked&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"MSFT"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;changeStock&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sender&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
   &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stock&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sender&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;

&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;rumps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;updateStockPrice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sender&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
   &lt;span class="c1"&gt;# fetch stock quote and update title
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Not to complicate this but since the app will be sending network requests, we’d need to handle API requests on a different thread so the app UI keeps running while the request is in process.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;threading&lt;/span&gt;

&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;rumps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;updateStockPrice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sender&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
   &lt;span class="n"&gt;thread&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;threading&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Thread&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getStock&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="n"&gt;thread&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;getStock&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="c1"&gt;# code to send API request 
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#putting-it-all-together"&gt;
  &lt;/a&gt;
  Putting it all together
&lt;/h2&gt;

&lt;p&gt;Here’s how it will look at full implementation. We have added icons, made the title more catchy, and added a functionality for user input (using rumps.Window).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;threading&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;rumps&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;StockApp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rumps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;App&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;StockApp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Stock"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stock&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"AAPL"&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;icon&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"icon.png"&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;API_KEY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"YOUR_API_KEY"&lt;/span&gt;

    &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;rumps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clicked&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Search..."&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;rumps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clicked&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"MSFT"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;rumps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clicked&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"TSLA"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;rumps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clicked&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"NFLX"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;rumps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clicked&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"FB"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;rumps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clicked&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"AAPL"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;changeStock&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sender&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;sender&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="s"&gt;"Search..."&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;" 🔍 &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;sender&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stock&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sender&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

            &lt;span class="c1"&gt;# Launches a rumps window for user input
&lt;/span&gt;            &lt;span class="n"&gt;window&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rumps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Window&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"Current: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stock&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"Search another stock"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;icon&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;icon&lt;/span&gt;
            &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stock&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;

    &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;rumps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;updateStockPrice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sender&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;thread&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;threading&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Thread&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getStock&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;thread&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;getStock&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"https://finnhub.io/api/v1/quote?symbol=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stock&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;&amp;amp;token=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;API_KEY&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status_code&lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"API Error."&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt;

        &lt;span class="n"&gt;stock_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

        &lt;span class="n"&gt;current_price&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;stock_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'c'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;previous_close&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;stock_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'pc'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;change&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;current_price&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;previous_close&lt;/span&gt;

        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;changePercentage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;change&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;previous_close&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;change&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;marker&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"🔻"&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;marker&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"🔺"&lt;/span&gt;

            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;" &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stock&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="s"&gt;'c'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt; &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;marker&lt;/span&gt;&lt;span class="si"&gt;}{&lt;/span&gt;&lt;span class="n"&gt;changePercentage&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;%"&lt;/span&gt;

        &lt;span class="c1"&gt;# Finnhub returns 0 for non-existent symbols
&lt;/span&gt;        &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="nb"&gt;ZeroDivisionError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Invalid symbol, set to AAPL"&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stock&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"AAPL"&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'__main__'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;StockApp&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To run the app you will need to have an “icon.png” file in the same directory. You can download it from the links below or else just remove the icon from the program. Also, don’t forget to assign your Finnhub API key to &lt;code&gt;self.API_KEY&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Download icon.png&lt;br&gt;
Download icon.icns&lt;br&gt;
Converting it to .app&lt;br&gt;
Now that the app is ready, we just need to generate a shippable macOS app. We can use py2app to do this.&lt;br&gt;
You need to have a setup.py file in the same directory. Other than that you can also add an icon for your application. macOS app icons have the file type .icns&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;StockApp
  |__ app.py
  |__ setup.py
  |__ icon.png
  |__ icon.icns
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The setup.py file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;setuptools&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;setup&lt;/span&gt;

&lt;span class="n"&gt;APP&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'app.py'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;DATA_FILES&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'icon.png'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;OPTIONS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s"&gt;'argv_emulation'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;'iconfile'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'icon.icns'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;'plist'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s"&gt;'CFBundleShortVersionString'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'1.0.0'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;'LSUIElement'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="s"&gt;'packages'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'rumps'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;'requests'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;APP&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'Stock'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;data_files&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;DATA_FILES&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'py2app'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;OPTIONS&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="n"&gt;setup_requires&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'py2app'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;install_requires&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'rumps'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;'requests'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#finally-run-the-setup"&gt;
  &lt;/a&gt;
  Finally run the setup:
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;python setup.py py2app
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can find your in the newly-created &lt;code&gt;dist&lt;/code&gt; folder. Open the app, and see it in action!&lt;br&gt;
If you are getting an error at the runtime, launch the app via terminal so you can go through the traceback.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;open Stock.App/Contents/MacOS/Stock
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;As we have seen it’s easy to create simple menu bar apps like this. A whole lot of things can be built on top of this as it gives you the power to trigger Python functions so easily. We can make a &lt;a href="https://github.com/adarshpunj/Musicbar"&gt;music controller&lt;/a&gt;, a server monitor, to see if a program is running, stopwatch, CPU meters, flight position trackers, Internet speed tests, just to name a few.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#further-readings-and-attributions"&gt;
  &lt;/a&gt;
  Further Readings and At)tributions:
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/jaredks/rumps"&gt;Rumps on Github&lt;/a&gt;&lt;br&gt;
&lt;a href="https://py2app.readthedocs.io/en/latest/tutorial.html"&gt;py2app documentation&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.flaticon.com/authors/freepik"&gt;Icon by Freepik&lt;/a&gt;&lt;/p&gt;

</description>
      <category>design</category>
      <category>python</category>
      <category>oop</category>
      <category>apple</category>
    </item>
    <item>
      <title>Amazing Project Management Website Design</title>
      <author>AR Jakir</author>
      <pubDate>Sun, 10 Oct 2021 08:39:52 +0000</pubDate>
      <link>https://dev.to/arjakir3/amazing-project-management-website-design-3ihi</link>
      <guid>https://dev.to/arjakir3/amazing-project-management-website-design-3ihi</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f2hFs-nQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lm1ffj10isah4zh23rpi.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f2hFs-nQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lm1ffj10isah4zh23rpi.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hello design lovers. Here we are with Project Management Website Design. This is a responsive Project Management Website Design. Take your Startup business website to the next level and amp up your Project Management Website Design.&lt;/p&gt;

&lt;p&gt;Let’s start building your next Project Management Website now! With this Website Design, you can build your own Website  in Figma, Sketch, and Adobe XD in less than 1 hour. It is designed with simplicity.&lt;/p&gt;

&lt;p&gt;If you need to make some edits yourself, please download the source file at the above link. For any questions about this template, please feel free to contact us.&lt;/p&gt;

&lt;p&gt;Download now: &lt;a href="https://websitemaker.app/downloads/project-management-website-design/"&gt;https://websitemaker.app/downloads/project-management-website-design/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Download thousands of web templates, mobile app templates, illustrations, SVG icons, and graphic assets for Figma, Sketch, and Adobe XD. From websitemaker.&lt;/p&gt;

&lt;p&gt;websitemaker is a design resource platform for UX/UI designers, developers, and founders. Our high-quality design resources will help you to speed up the design process. Resources:&lt;/p&gt;

&lt;p&gt;1000+ Web Templates (Figma, Sketch, XD)&lt;br&gt;
 2500+ Illustrations (Figma, Sketch, XD)&lt;br&gt;
8000+ SVG Icons&lt;br&gt;
500+ Mobile App Screens (Figma, Sketch, XD)&lt;br&gt;
 100+ UI Assets for Web Application (Figma, Sketch, XD)&lt;br&gt;
We are uploading more resources every day.&lt;/p&gt;

&lt;p&gt;Note: Get Lifetime Access Only for 99$. Use “jak10” coupon for the extra 10% off.&lt;/p&gt;

&lt;p&gt;Thanks for watching.&lt;/p&gt;

</description>
      <category>webdesign</category>
      <category>webtemplate</category>
      <category>websitedesign</category>
      <category>webuidesign</category>
    </item>
    <item>
      <title>NativeScript vs React Native: which one to choose for Native app development in 2021</title>
      <author>Max Tsurbeliov</author>
      <pubDate>Sun, 10 Oct 2021 07:46:19 +0000</pubDate>
      <link>https://dev.to/akveo/nativescript-vs-react-native-which-one-to-choose-for-native-app-development-in-2021-1j71</link>
      <guid>https://dev.to/akveo/nativescript-vs-react-native-which-one-to-choose-for-native-app-development-in-2021-1j71</guid>
      <description>&lt;p&gt;React Native and NativeScript occupy a special place in the cross-platform development sphere. These frameworks, once created, have changed the multiplatform development paradigm, allowing developers to create both performant and user-friendly applications. Since then, they’ve been gaining fans and contributors from all over the world, facilitating the app's development process and making it easy, cheap, and enjoyable.  &lt;/p&gt;

&lt;p&gt;However, despite the common traits and purpose, React Native and Native Script do the job in their way. That’s exactly what this article will be centered about.&lt;/p&gt;

&lt;p&gt;Here, we will clash React Native vs Native Script and reveal:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The essence of the React Native and Native Script; &lt;/li&gt;
&lt;li&gt;What apps you can create with each framework;&lt;/li&gt;
&lt;li&gt;The difference between them by the several vital performance metrics;&lt;/li&gt;
&lt;li&gt;Pros and Cons of React Native and Native Script;
&lt;/li&gt;
&lt;li&gt;Which framework to choose for your development project. &lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-nativescript-and-react-native-are"&gt;
  &lt;/a&gt;
  What NativeScript and React Native are
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#native-script"&gt;
  &lt;/a&gt;
  Native Script
&lt;/h3&gt;

&lt;p&gt;Native Script is an open-source cross-platform mobile development framework. It was founded in 2015 by Progress Software company which went by the name Telerik at the time. &lt;/p&gt;

&lt;p&gt;Using Native Script, developers can create iOS, Android, and Universal Windows Platform apps with JavaScrips, XML, or CSS. The framework employs a special, JS-based engine for the native rendering of apps’ UIs, which makes the user experience truly native. Additionally, Native Script is compatible with Angular, Vue.js frameworks, and TypeScript. That diversity of languages and tools opens wide creative possibilities for developers.&lt;/p&gt;

&lt;p&gt;In terms of architecture, the framework includes JS virtual machine for JavaScript code interpretation, runtimes to call the platform-specific APIs, and the native bridge that transforms all the preceding commands into natively rendering UI. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#react-native"&gt;
  &lt;/a&gt;
  React Native
&lt;/h3&gt;

&lt;p&gt;React Native is a free and open-source framework for developing mobile, web, desktop &amp;amp; other cross-platform applications. The Facebook team released it in 2015, and it has much hype from the start. Its popularity and the fast-growing developer community around the framework were a result of impressive tools set, high performance, and unique features (e.g. hot reload). &lt;a href="https://www.akveo.com/blog/react-native-for-mobile-app-development-points-to-consider-in-2021"&gt;At present, Rect Native&lt;/a&gt; offers even more development capabilities and evolves into complete platform agnosticism, bridge simplification, and streaming model upgrade.&lt;/p&gt;

&lt;p&gt;The framework is based on the React web development framework. &lt;a href="https://www.akveo.com/blog/how-does-react-native-work"&gt;React Native works&lt;/a&gt; with React JS library to render the app natively on various platforms. RN uses JavaScript, TypeScript, and JSX programming languages basis which makes the platform easy to use for the majority of developers. React Native controls native rendering through Objective C/ Swift on iOS and Java/Kotlin on Android. &lt;/p&gt;

&lt;p&gt;The architecture of React Native is quite similar to NativeScript’s except for the Safari core and additional libraries of the first. For the rest, it’s the same JS input and the bridge. With RN, you can use multiple UI/code frameworks, libraries (Ignite CLI, Native Base, &lt;a href="https://akveo.github.io/react-native-ui-kitten/"&gt;UI Kitten&lt;/a&gt;), and native modules to streamline the development process. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#react-native-vs-native-script-the-main-differences-and-similarities"&gt;
  &lt;/a&gt;
  React Native vs Native Script. The main differences and similarities.
&lt;/h2&gt;

&lt;p&gt;Despite both platforms’ aim to create cross-platform apps, they have several distinct features and major differences on several layers. Let’s compare them with the following core performance points. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#learning-curve"&gt;
  &lt;/a&gt;
  Learning curve
&lt;/h3&gt;

&lt;p&gt;React Native and Native Script rely on JavaScript, &lt;a href="https://insights.stackoverflow.com/survey/2020#technology-programming-scripting-and-markup-languages-professional-developers"&gt;the most commonly used programming language in the world&lt;/a&gt;. Thus, both platforms are easy to learn for a large group of developers. Also, the JavaScript basis makes the frameworks strong from the front-end side. &lt;/p&gt;

&lt;p&gt;However, React Native has React JS background with its Immutables, Repositories, and Redux. The developers with the React background will experience a gradual and smooth RN learning process.&lt;/p&gt;

&lt;p&gt;NativeScript, in its turn, works with all of the JavaScript frameworks. Usually, NS developers leverage Vue.js, TypeScript, and Angular. The learning curve with the framework will be steep in the early learning stages for Angular developers. Then, to use all the declarative programming power of the platform, developers will need to become familiar with other frameworks. &lt;/p&gt;

&lt;p&gt;Conclusion: React Native has a more smooth learning curve while Native Script is positively abrupt in the beginning. Eventually, the learning curve of Native Script becomes more beneficial later.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#community"&gt;
  &lt;/a&gt;
  Community
&lt;/h3&gt;

&lt;p&gt;In terms of the developers’ community behind the platforms, React Native has much more support. First of all, it was created by fortune 500 company Facebook that has been expanding RN’s functionality at a fast pace from the very beginning. The company provides exceptional support for the newcomers that draws attention to the framework. Currently, React Native gathered more than 2000 contributors who develop features and add new plugins to the framework. Such popularity increases the RN gravity too, making it easier &lt;a href="https://www.akveo.com/blog/how-to-hire-a-dedicated-react-native-developer-in-2021-ultimate-guide-interview-questions"&gt;to find a React Native developer&lt;/a&gt;. Now, only Flutter is competing with it for the attention of cross-platform developers. &lt;/p&gt;

&lt;p&gt;Native Script, on the contrary, is backed by 190+ contributors at the moment. The popularity rates are also much lower and decrease, according to &lt;a href="https://www.statista.com/statistics/869224/worldwide-software-developer-working-hours/"&gt;the latest research&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Conclusion: React Native is more popular among developers than Native Script and has a large developer community. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#performance"&gt;
  &lt;/a&gt;
  Performance
&lt;/h3&gt;

&lt;p&gt;React Native renders UIs much faster than Native Script due to its Virtual DOM usage. Moreover, Native Script has a single-threaded model of APIs accessing. It can hinder the app’s performance while executing the intensive code. &lt;/p&gt;

&lt;p&gt;In contrast, React Native uses separate threads. JS thread contains all the business logic and handles user interactions. The main thread, for its part, is responsible for executing native API calls. React Native has the asynchronous type of communication between threads which makes rendering less laggy than on Native Script. &lt;/p&gt;

&lt;p&gt;As for the code-sharing and components’ reuse, the frameworks are equal. Both of them can share almost all the code throughout different platforms. The percentage of the code depends on the complexity and custom features of an application. The more sophisticated the code and UI, the less code you can share between the platforms. &lt;/p&gt;

&lt;p&gt;Conclusion: React Native performs better than Native Script due to its multi-threaded system and Virtual DOM usage. At the same time, both platforms have equal code-sharing capabilities. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#application-field"&gt;
  &lt;/a&gt;
  Application field
&lt;/h3&gt;

&lt;p&gt;The cross-platform capacity of React Native is huge. Using it, developers can create apps for the following platforms: macOS, Linux, Windows, iOS, Android, Apple tvOS. Such variety became possible thanks to the contributors that developed specific RN forks and adaptations.&lt;/p&gt;

&lt;p&gt;Native Script, in this regard, has much less to offer. Developers can build NS applications for three platforms: iOS, Android, and Windows. Though, its community is also working to use the framework on other platforms.&lt;/p&gt;

&lt;p&gt;Conclusion: React Native works with more platforms than Native Script at the moment.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#testing"&gt;
  &lt;/a&gt;
  Testing
&lt;/h3&gt;

&lt;p&gt;React Native supports the IDE software suite, which opens wide testing automation capabilities. So, developers can choose from Espresso, Jasmine, KIF, Appium, Calabash, UI Automation, Robotium, Frank, TestNG, and more.&lt;/p&gt;

&lt;p&gt;Native Script has its own QA workflow that was aerated in 2017. Thus, various types of testing can be launched from its CLI, but only with Mocha, Quint, Jasmine, and Appium for functional testing.&lt;/p&gt;

&lt;p&gt;Conclusion: React Native has more convenient testing automation and gives more freedom of choice concerning testing tools.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pros-and-cons-of-rn-and-ns"&gt;
  &lt;/a&gt;
  Pros and Cons of RN and NS
&lt;/h2&gt;

&lt;p&gt;In this section, we will review the pros and cons of each framework so you can see their strengths and weaknesses more clearly.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#react-native-pros-and-cons"&gt;
  &lt;/a&gt;
  React Native Pros and Cons
&lt;/h3&gt;

&lt;p&gt;Pros&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Open-source and free-to-use;&lt;/li&gt;
&lt;li&gt;You can access platform-specific APIs asynchronously;&lt;/li&gt;
&lt;li&gt;High development speed due to the code-sharing, components reusability, and hot reload feature;&lt;/li&gt;
&lt;li&gt;Flexible code;&lt;/li&gt;
&lt;li&gt;You can build apps for multiple platforms;&lt;/li&gt;
&lt;li&gt;Strong developer community with thousands of contributors that expand the framework’s feature set and provide support;&lt;/li&gt;
&lt;li&gt;3d party libraries support pre-made code patterns;&lt;/li&gt;
&lt;li&gt;Exceptional UI rendering capabilities with the help of Virtual DOM without using WebViews;&lt;/li&gt;
&lt;li&gt;Native controls that facilitate the development process.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Cons&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;RN developers may need native platform knowledge to solve more specific tasks;&lt;/li&gt;
&lt;li&gt;May require additional infrastructure to maintain complex applications;&lt;/li&gt;
&lt;li&gt;Debugging can be challenging.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#native-script-pros-and-cons"&gt;
  &lt;/a&gt;
  Native Script Pros and Cons
&lt;/h3&gt;

&lt;p&gt;Pros&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Remote services for NativeScript Android and iOS apps building;&lt;/li&gt;
&lt;li&gt;Open-source and free of charge cross-platform development framework;&lt;/li&gt;
&lt;li&gt;Renders UIs natively without using WebViews;&lt;/li&gt;
&lt;li&gt;Works great with Angular and Vue.js;&lt;/li&gt;
&lt;li&gt;Includes hooks usage for client-line interfaces’ customization;&lt;/li&gt;
&lt;li&gt;Provides direct access to Android and iOS APIs;&lt;/li&gt;
&lt;li&gt;Allows to reuse code across iOS and Android platforms;&lt;/li&gt;
&lt;li&gt;Explicit documentation along with tutorials, applications samples, and forums to help developers learn how to use Native Script;&lt;/li&gt;
&lt;li&gt;Improved app building and deployment backed by Telerik platform;&lt;/li&gt;
&lt;li&gt;Developers can install and use various NativeScript plugins.
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Cons&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Doesn’t support DOM and HTML;&lt;/li&gt;
&lt;li&gt;All JavaScript code executes on the main thread;&lt;/li&gt;
&lt;li&gt;NativeScript plugins have dubious quality (weren’t tested); &lt;/li&gt;
&lt;li&gt;Testing is available on real devices or emulators, and you need to reload the system to see the changes;&lt;/li&gt;
&lt;li&gt;There are no ready-made UI collections;&lt;/li&gt;
&lt;li&gt;You should pay for some of the additional UI components (calendars, charts, etc.);&lt;/li&gt;
&lt;li&gt;Devs need to know native iOS and Android to reach platforms’ hardware and functionalities.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#when-to-use-react-native-and-nativescript"&gt;
  &lt;/a&gt;
  When to use React Native and NativeScript
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#react-native-use-cases-and-app-examples"&gt;
  &lt;/a&gt;
  React Native use cases and app examples
&lt;/h3&gt;

&lt;p&gt;React Native perfectly suits you in the following cases:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You want to build your MVP at short notice. With React Native, it will take only several weeks;&lt;/li&gt;
&lt;li&gt;You plan to use your app across multiple platforms;&lt;/li&gt;
&lt;li&gt;You need easy access to platforms’ hardware functionality without 3d party plugins;&lt;/li&gt;
&lt;li&gt;Your app requires complex controls and operations.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Applications examples:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#facebook"&gt;
  &lt;/a&gt;
  Facebook
&lt;/h3&gt;

&lt;p&gt;Unsurprisingly, the company demonstrated the capabilities of its framework, creating Facebook social media mobile app for Android and iOS. Among the application’s features are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Text/voice messaging, video chats, and phone calls;&lt;/li&gt;
&lt;li&gt;Location tracking through GPS;&lt;/li&gt;
&lt;li&gt;Photo, video, music cloud storage.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#walmart"&gt;
  &lt;/a&gt;
  Walmart
&lt;/h3&gt;

&lt;p&gt;The largest retailer in the US, Walmart, entrusted its mobile app to the React Native developers. They’ve created a functional app capable of:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Integrated chat-bot for customer support;&lt;/li&gt;
&lt;li&gt;GEO-positioning of goods and customers for delivering them;&lt;/li&gt;
&lt;li&gt;Price scanner and medical prescriptions management.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#instagram"&gt;
  &lt;/a&gt;
  Instagram
&lt;/h3&gt;

&lt;p&gt;The world’s best photo/video-sharing platform is also made with React Native. The app has:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The ability to connect with smartphone’s camera, record stories, make photos, period and record videos;&lt;/li&gt;
&lt;li&gt;Capacious and high-performant cloud storage;&lt;/li&gt;
&lt;li&gt;Text chat, collaboration tools, real-time photo/video content editing.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#native-script-use-cases-and-app-examples"&gt;
  &lt;/a&gt;
  Native Script use cases and app examples
&lt;/h3&gt;

&lt;p&gt;Leverage Native Script framework if:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You are going to create a simple application without any customized or unusual platform-specific components for iOS and Android;&lt;/li&gt;
&lt;li&gt;You’d like to add customize your app’s interface but are not familiar with Objective C, Kotlin, Swift, or Java;&lt;/li&gt;
&lt;li&gt;You want to create a web clone of your application with Angular or Vue.js.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Applications examples:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#raiffeisen-bank"&gt;
  &lt;/a&gt;
  Raiffeisen Bank
&lt;/h3&gt;

&lt;p&gt;One of the most reputable banks in Europe, Raiffeisen, has chosen Native Script to build its mobile application. Its functionality includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Instant money transactions within the bank environment and outside of it by phone number;&lt;/li&gt;
&lt;li&gt;Multiple accounts/cards monitoring and management; &lt;/li&gt;
&lt;li&gt;Other bank accounts and debit cards replenishment;&lt;/li&gt;
&lt;li&gt;See the bank branches in your area.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#ragelneef"&gt;
  &lt;/a&gt;
  Ragelneef
&lt;/h3&gt;

&lt;p&gt;This is the app for energy consumption control and electricity costs management. It allows users to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Estimate amounts of electricity you consume in a certain period of time;&lt;/li&gt;
&lt;li&gt;Control your expenses and save money on electricity;&lt;/li&gt;
&lt;li&gt;Watch your energy consumption history in a chart.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#daily-nanny"&gt;
  &lt;/a&gt;
  Daily Nanny
&lt;/h3&gt;

&lt;p&gt;This app is a helper for parents who hired a nanny to watch after their children while they are away. Using it, they can:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Chat with a nanny and give written instructions so that he/she won’t miss any important information;&lt;/li&gt;
&lt;li&gt;Control nanny’s actions and receive photo/video reports any time;&lt;/li&gt;
&lt;li&gt;Monitor the child’s nourishment and leisure.
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#wrap-up"&gt;
  &lt;/a&gt;
  Wrap up
&lt;/h2&gt;

&lt;p&gt;Now, it’s time to make a choice. As you can see, React Native is a more popular, fast-evolving, and performant framework than Native Script. Besides, it has a much larger developer community that can support you during your cross-platform app development. Using RN you can develop an app for more platforms, reuse UI components and render complex interfaces. However, if you prefer to code with Angular or Vue js. rather than React, and use the related plugins Native Script will suit you better. In fact, both platforms make the cross-platform development process fast with their code-sharing features.  &lt;/p&gt;

&lt;p&gt;P.S. If you still have questions or want to delegate your cross-platform development to a solid and experienced team of developers, &lt;a href="https://www.akveo.com/contact"&gt;contact us&lt;/a&gt;. Akveo provides the full cycle of services including app development, UI/UX &amp;amp; web design, branding, quality assurance, and technology consulting. &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>reactnative</category>
      <category>nativescript</category>
      <category>typescript</category>
    </item>
    <item>
      <title>Agile and Scrum Workshop via Chingu Cohorts on Nov 1</title>
      <author>Rammina</author>
      <pubDate>Sun, 10 Oct 2021 07:44:18 +0000</pubDate>
      <link>https://dev.to/rammina/agile-and-scrum-workshop-via-chingu-cohorts-on-nov-1-gc4</link>
      <guid>https://dev.to/rammina/agile-and-scrum-workshop-via-chingu-cohorts-on-nov-1-gc4</guid>
      <description>&lt;p&gt;Hello Developers and Designers!&lt;/p&gt;

&lt;p&gt;I'm organizing another &lt;strong&gt;FREE Agile &amp;amp; Scrum workshop&lt;/strong&gt; with fellow developers and UI/UX/designers on November 1. This will be under Chingu, and certificates of completion will be given to participants.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TLDR
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;What: Agile/Scrum Team workshop&lt;/li&gt;
&lt;li&gt;Where: &lt;a href="https://chingu.io/"&gt;Chingu&lt;/a&gt; (remote)&lt;/li&gt;
&lt;li&gt;Why: gain team experience and exchange knowledge&lt;/li&gt;
&lt;li&gt;When: November 1 - December 19&lt;/li&gt;
&lt;li&gt;&lt;p&gt;How: &lt;a href="https://chingu.io/howItWorks"&gt;https://chingu.io/howItWorks&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Cost: FREE&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Duration: 6 weeks&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Time commitment: part-time (10-20 hours)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Reward: certificate of completion, team experience, networking opportunities, knowledge&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Contact: me&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-will-we-be-doing"&gt;
  &lt;/a&gt;
  What will we be doing?
&lt;/h2&gt;

&lt;p&gt;We will be a team of 6 members at most, and we will build a web application for 6 weeks while following Agile/Scrum principles. Only part-time commitment is required (10-20 hours/week), as most of us are busy.&lt;/p&gt;

&lt;p&gt;The programming languages/libraries used will most likely be:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;JavaScript&lt;/li&gt;
&lt;li&gt;React&lt;/li&gt;
&lt;li&gt;MERN stack&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Of course, we can use other languages/libraries if the team chooses to do so.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-the-goals-of-the-workshop"&gt;
  &lt;/a&gt;
  What are the goals of the workshop?
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#primary-goals"&gt;
  &lt;/a&gt;
  Primary goals:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;allow the participants to gain more team experience&lt;/li&gt;
&lt;li&gt;exchange knowledge with each other&lt;/li&gt;
&lt;li&gt;filling in any learning gaps and correcting bad practices&lt;/li&gt;
&lt;li&gt;provide a networking opportunity to connect with other developers and designers&lt;/li&gt;
&lt;li&gt;build lasting relationships even after the workshop ends&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#secondary-goals"&gt;
  &lt;/a&gt;
  Secondary Goals:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;successfully build a team project for our portfolio (yeah this is less important than the ones above)&lt;/li&gt;
&lt;li&gt;help each other with interviews/job search (we can do interview practice and resume reviews with each other, but after the workshop)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#general-requirements"&gt;
  &lt;/a&gt;
  General Requirements:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;10-20 hours/week availability&lt;/li&gt;
&lt;li&gt;Communication skills&lt;/li&gt;
&lt;li&gt;Self-driven learner&lt;/li&gt;
&lt;li&gt;Willingness to work as a team and use collaboration tools&lt;/li&gt;
&lt;li&gt;Humility and receptiveness to feedback&lt;/li&gt;
&lt;li&gt;the closer you are to GMT +8, the better (but any time zone is okay)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#developer-requirements"&gt;
  &lt;/a&gt;
  Developer Requirements:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Capable of building a solo project (Tier 2 in Chingu - check comments)&lt;/li&gt;
&lt;li&gt;React proficiency (MERN is nice to have, but not required)&lt;/li&gt;
&lt;li&gt;CSS/SCSS and HTML proficiency&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#designer-requirements"&gt;
  &lt;/a&gt;
  Designer Requirements:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Wireframing tools (Figma or anything similar)&lt;/li&gt;
&lt;li&gt;Knowledge of web design principles&lt;/li&gt;
&lt;li&gt;Willingness to work with a team of developers&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#please-reach-out-to-me-on"&gt;
  &lt;/a&gt;
  Please reach out to me on:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="mailto:ramminadevdesign@gmail.com"&gt;ramminadevdesign@gmail.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Rammina/"&gt;https://github.com/Rammina/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Feel free to ask me any questions and/or contact me about the workshop!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#disclaimer"&gt;
  &lt;/a&gt;
  Disclaimer
&lt;/h3&gt;

&lt;p&gt;This workshop is free, voluntary, and non-monetized. Members keep ownership of their projects after the workshop and may use them for their own portfolios.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>webdev</category>
      <category>react</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Day 2 of 100 Days of Code and Scrum: Launching the Apollo Client</title>
      <author>Rammina</author>
      <pubDate>Sun, 10 Oct 2021 07:40:43 +0000</pubDate>
      <link>https://dev.to/rammina/day-2-of-100-days-of-code-and-scrum-launching-the-apollo-client-5cm9</link>
      <guid>https://dev.to/rammina/day-2-of-100-days-of-code-and-scrum-launching-the-apollo-client-5cm9</guid>
      <description>&lt;h2&gt;
  &lt;a href="#yesterday"&gt;
  &lt;/a&gt;
  Yesterday
&lt;/h2&gt;

&lt;p&gt;I learned the basic structure of GraphQL types, fields, payload, and so on.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#today"&gt;
  &lt;/a&gt;
  Today
&lt;/h2&gt;

&lt;p&gt;Nothing too crazy because it is a break day. I studied a little bit and planned out what my goals are for this week.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#weekly-sprint-goals"&gt;
  &lt;/a&gt;
  Weekly Sprint Goals
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;prepare for and go through 5 phone screening/interviews at different companies&lt;/li&gt;
&lt;li&gt;learn to use GraphQL and ApolloClient

&lt;ul&gt;
&lt;li&gt;would be happy if I learned how to query data to the client side&lt;/li&gt;
&lt;li&gt;mutate data&lt;/li&gt;
&lt;li&gt;learning more is always okay&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;get through the howtographql tutorials&lt;/li&gt;
&lt;li&gt;study GraphQL documentation along the way&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I mostly focused on learning about GraphQL and ApolloClient imports/initialization.&lt;/p&gt;

&lt;p&gt;Here are some of the things I've learned:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#graphql"&gt;
  &lt;/a&gt;
  GraphQL
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;concept of a GraphQL client, which abstracts away the details of writing infrastructure code and caching from developers&lt;/li&gt;
&lt;li&gt;ApolloClient, Relay, and urql are GraphQL clients&lt;/li&gt;
&lt;li&gt;ApolloProvider, ApolloClient, createHttpLink, InMemoryCache typically are imported when using @apollo/client&lt;/li&gt;
&lt;li&gt;I am still not really sure what they do but I'm going to look them up tomorrow&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#scrum"&gt;
  &lt;/a&gt;
  Scrum
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Scrum Master role typically has no management power&lt;/li&gt;
&lt;li&gt;Scrum Masters facilitate the Scrum team so that they follow Scrum principles&lt;/li&gt;
&lt;li&gt;They have to do this without any authority&lt;/li&gt;
&lt;li&gt;I guess if I want to be Scrum Master, I'd have to learn how to influence others without using authority/power&lt;/li&gt;
&lt;li&gt;Daily Scrum lasts 15 minutes regardless of the team size&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I'm still having a difficulty with getting used to working with the new syntax for GraphQL/ApolloClient.&lt;/p&gt;

&lt;p&gt;How is everyone doing in their learning journey? Feel free to chat with me in the comments and/via DM!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#disclaimer"&gt;
  &lt;/a&gt;
  DISCLAIMER
&lt;/h3&gt;

&lt;p&gt;This post only expresses my thoughts and opinions (based on my limited knowledge) and is in no way a substitute for actual references. If I ever make a mistake or if you disagree, I would appreciate corrections in the comments!&lt;/p&gt;

</description>
      <category>graphql</category>
      <category>beginners</category>
      <category>100daysofcode</category>
      <category>webdev</category>
    </item>
    <item>
      <title>How to Stream Your Webcam to an HTML Document</title>
      <author>Aravind Sanjeev</author>
      <pubDate>Sun, 10 Oct 2021 07:20:21 +0000</pubDate>
      <link>https://dev.to/aravsanj/how-to-stream-your-webcam-to-an-html-document-303e</link>
      <guid>https://dev.to/aravsanj/how-to-stream-your-webcam-to-an-html-document-303e</guid>
      <description>&lt;p&gt;Streaming your webcam to an HTML document is a short &amp;amp; simple process. We start by creating a plain HTML document (call it index.html).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;http-equiv=&lt;/span&gt;&lt;span class="s"&gt;"X-UA-Compatible"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"IE=edge"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1.0"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Your Face&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, we need to implement a &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; tag for streaming the webcam.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;video&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"500px"&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;"500px"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"webcam"&lt;/span&gt; &lt;span class="na"&gt;autoplay&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/video&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In a separate JavaScript file (index.js), we write code to access the webcam.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;video&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;webcam&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getMedia&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;stream&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;

  &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;stream&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mediaDevices&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getUserMedia&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;video&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="nx"&gt;video&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;srcObject&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;stream&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;error&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;getMedia&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the code, we grabbed the element by ID and stored it in variable &lt;code&gt;video&lt;/code&gt;. It is important that we are using asynchronous function so the browser doesn't freeze on delay. The &lt;code&gt;navigator.mediaDevices&lt;/code&gt; contains methods that is used to interact with input devices. The stream is stored and passed as source object to the &lt;code&gt;video&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Finally, we need to import this back to the HTML document. In the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; section,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;defer&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"index.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;defer&lt;/code&gt; attribute will ensure that the JavaScript is executed only after the page is loaded.&lt;/p&gt;

&lt;p&gt;Now open your HTML document and it will ask for permission to access the camera. Click allow the and smile.&lt;/p&gt;

</description>
      <category>html</category>
      <category>javascript</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>i made a decision to take the challenge</title>
      <author>∴Martín💾</author>
      <pubDate>Sun, 10 Oct 2021 06:51:43 +0000</pubDate>
      <link>https://dev.to/moir137/i-made-a-decision-to-take-the-challenge-1pkg</link>
      <guid>https://dev.to/moir137/i-made-a-decision-to-take-the-challenge-1pkg</guid>
      <description>&lt;h1&gt;
  &lt;a href="#100daysofcode"&gt;
  &lt;/a&gt;
  100DaysOfCode
&lt;/h1&gt;

</description>
      <category>beginners</category>
      <category>webdev</category>
      <category>tutorial</category>
      <category>programming</category>
    </item>
    <item>
      <title>Divtober Day 10: Organized</title>
      <author>Alvaro Montoro</author>
      <pubDate>Sun, 10 Oct 2021 06:27:30 +0000</pubDate>
      <link>https://dev.to/alvaromontoro/divtober-day-10-organized-48af</link>
      <guid>https://dev.to/alvaromontoro/divtober-day-10-organized-48af</guid>
      <description>&lt;p&gt;This has been the most challenging drawing so far. Mainly, because I had a tough time deciding what to draw; and once I picked something, it was not the best choice: loosely related to the topic, too time consuming (especially compared to the other drawings), and it could be created with SVG in a much simpler way... Although I like the result, it is not really worth it on CSS.&lt;/p&gt;

&lt;p&gt;Anyway, the drawing is a 1920s-looking gangster (a member of the mafia or &lt;strong&gt;organized&lt;/strong&gt; crime):&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/alvaromontoro/embed/RwZwZZQ?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;It is &lt;a href="https://www.istockphoto.com/vector/gangster-gm679886394-124653611"&gt;based on this picture from iStockPhoto&lt;/a&gt;, and it is "responsive" (to the viewport.)&lt;/p&gt;

</description>
      <category>codepen</category>
      <category>divtober</category>
      <category>css</category>
      <category>showdev</category>
    </item>
    <item>
      <title>VS code Life Saver Keyboard Shortcut </title>
      <author>Keshav Mohta</author>
      <pubDate>Sun, 10 Oct 2021 06:26:39 +0000</pubDate>
      <link>https://dev.to/xkeshav/vs-code-life-saver-keyboard-shortcut-4643</link>
      <guid>https://dev.to/xkeshav/vs-code-life-saver-keyboard-shortcut-4643</guid>
      <description>&lt;p&gt;Hi,&lt;/p&gt;

&lt;p&gt;This is my very first post and this is about the most loving IDE VS CODE and few keyboard shortcut which I use daily and also few addition things how to add new keyboard shortcut or how to change/update existing keyboard shortcut.&lt;/p&gt;

&lt;p&gt;let's deep into it, &lt;/p&gt;

&lt;p&gt;Note: in this post and even in vs code the &lt;code&gt;+&lt;/code&gt; written in Key board binding is not a literal &lt;em&gt;+&lt;/em&gt; key but this is just for showing the keyboard combination. And the letter shown are capital also not require caps lock on or pressing with Shift key, they are lowercase letter because if you look at keyboard, every letter written in capital.&lt;/p&gt;

&lt;p&gt;also in VS code when you press keyboard shortcut, it is displayed in the status bar, it doesn't exist, it will be displayed there.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--B5lT3OyZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hv5pbqudwtnytneiqki8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B5lT3OyZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hv5pbqudwtnytneiqki8.png" alt="Key binding in vs code status bar"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;for eg:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Ctrl + -&lt;/code&gt; means press &lt;em&gt;control&lt;/em&gt; key and press &lt;code&gt;-&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Ctrl + K Ctrl + S&lt;/code&gt; means press Ctrl + K and then press Ctrl + S means keep Ctrl key presses and write K and S ( and here K and S will not to be Capital)&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Ctrl + K Z&lt;/code&gt; means press Ctrl and K together and release Ctrl key and press Z  &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#keyboard-shortcuts-in-vs-code"&gt;
  &lt;/a&gt;
  Keyboard Shortcuts in VS Code
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#1-delete-without-changing-the-clipboard-content"&gt;
  &lt;/a&gt;
  1. Delete without changing the clipboard content
&lt;/h2&gt;

&lt;p&gt;Normally what we do to delete a line, just &lt;code&gt;Ctrl+ X&lt;/code&gt; as it does the job As this is how it works in most of application, but this has a flaw, not exactly a flaw but we can say limitation or side effect.&lt;/p&gt;

&lt;p&gt;this cut the line, so if we have something very important in your clipboard, okay what is clipboard?&lt;br&gt;
whenever we do copy action ( using &lt;code&gt;Ctrl + C&lt;/code&gt; ) it is stored in the clipboard, so clipboard is a place where copy being stored/put and this is 1 instance, whenever we copy some other content, previous copied data lost, so we do that first we copy 1 line and paste somewhere and now copy next line and paste some where.&lt;/p&gt;

&lt;p&gt;so coming to the point, this &lt;code&gt;Ctrl X&lt;/code&gt; overwrite your copied data and problem here either we do &lt;code&gt;Ctrl Z&lt;/code&gt; and copy the same code block but sometimes we have something in clipboard which was copied from other place/application and in this case &lt;code&gt;Ctrl Z&lt;/code&gt; will not work.&lt;/p&gt;

&lt;p&gt;so always use &lt;code&gt;Ctrl+K&lt;/code&gt; to remove the line without losing your clipboard data.&lt;/p&gt;

&lt;p&gt;in MacOS&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Cmd + K&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;in Ubuntu&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Ctrl + K&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;
  &lt;a href="#3-multi-cursor-key-modifier"&gt;
  &lt;/a&gt;
  3. Multi cursor key modifier
&lt;/h2&gt;

&lt;p&gt;since sublime text, multi cursor is my favourite utility, it helps to edit altogether on various places in file.&lt;/p&gt;

&lt;p&gt;in Mac OS multi cursor can be invoked pressing Option key and in Windows it can be done using Ctrl key but sometimes it doesn't seems to work or you want to change the key combination, like in Ubuntu, it doesn't work, so follow these steps&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;go to settings of VS Code , pressing &lt;code&gt;Cmd +,&lt;/code&gt; or &lt;code&gt;Ctrl +,&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;go to Workspace Tab or you can do in User tab also but I prefer to use in Workspace&lt;/li&gt;
&lt;li&gt;write in the search box for multi cursor modifier&lt;/li&gt;
&lt;li&gt;it value would be Alt, change it to &lt;strong&gt;CtrlCmd&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;you can verify the setting in &lt;em&gt;settings.json&lt;/em&gt; ( click on top icon), there would be an entry as below
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nl"&gt;"editor.multiCursorModifier"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"ctrlCmd"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#3-move-line-updown"&gt;
  &lt;/a&gt;
  3. Move Line Up/Down
&lt;/h2&gt;

&lt;p&gt;many of times we need to move the line of code above or below some line and we usually do, Cut, and paste on the desired line but there is a easy keyboard shortcut&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Alt + KeyDown&lt;/code&gt; and &lt;code&gt;Alt + KeyUp&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;to know the keyboard settings, you can click on setting icon in side panel and click on Keyboard shortcut in the context menu or type &lt;code&gt;Ctrl+K Ctrl+ S&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;keyboard binding panel will be open, there you can search using keyboard recording or writing a text, search there &lt;em&gt;Move Line Up&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;there you can see the key combination, and make sure that &lt;code&gt;when&lt;/code&gt;column should not be empty, if it is empty then fill it up by right click on row and choose  &lt;em&gt;Change When Expression&lt;/em&gt; option and write below line&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;editorTextFocus &amp;amp;&amp;amp; !editorReadonly&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;
  &lt;a href="#how-to-search-with-key-binding"&gt;
  &lt;/a&gt;
  How to search with key binding
&lt;/h2&gt;

&lt;p&gt;now how to search with key bindings, suppose you want to know what it does when press &lt;code&gt;Alt + D&lt;/code&gt;, so go to keyboard setting panel and there is keyboard icon on right side of search input, when you hover it it says &lt;code&gt;Record Keys&lt;/code&gt;, press that and now enter &lt;code&gt;Alt + D&lt;/code&gt;, it will show which action is binding with these keystroke, again click on Record Keys to start new combination.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_T5o-0o8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u3yj0dv99tsdlhjfepll.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_T5o-0o8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u3yj0dv99tsdlhjfepll.png" alt="search in key binding"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#4-select-all-occurrences-of-a-word-or-tag-in-a-file"&gt;
  &lt;/a&gt;
  4. Select All Occurrences of a word or tag in a file
&lt;/h2&gt;

&lt;p&gt;sometime you need to select same word in the file for&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;either replace it with new name ( here we can use search and Replace feature)&lt;/li&gt;
&lt;li&gt;rename the word ( in this case we can use Rename Symbol utility)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;but sometime you just to select few occurrences for other reason then do as below&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Select the text and click &lt;code&gt;Ctrl + D&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;it will select the next occurrence in the file and also enable multi cursor , keep pressing &lt;code&gt;Ctrl + D&lt;/code&gt; and it will select the next occurrence&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#5-duplicate-the-line-up-or-down"&gt;
  &lt;/a&gt;
  5. Duplicate the line (Up or Down)
&lt;/h2&gt;

&lt;p&gt;many times we need to make few changes what written on previous line, so what we usually do, copy the line and paste on next line but there is a smart way to do it and use&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Alt + D&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;if you search in keyboard binding (copy line Up), it is very length key combination , so I have changed the keyboard combination by simply click on the row, but when you enter desired keyboard shortcut, it might conflicts with other shortcut and it will be shown below the shortcut key , so choose shortcut wisely.&lt;/p&gt;

&lt;p&gt;you can write below code in &lt;strong&gt;keybindings.json&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"key"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"alt+d"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"command"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"editor.action.copyLinesDownAction"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"when"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"editorTextFocus &amp;amp;&amp;amp; !editorReadonly"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and it will add new shortcut but if you want to remove the previous key combination then write below json also&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"key"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"ctrl+shift+alt+down"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"command"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"-editor.action.copyLinesDownAction"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"when"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"editorTextFocus &amp;amp;&amp;amp; !editorReadonly"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;see the minus &lt;em&gt;-&lt;/em&gt; sign ahead of the command&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-cursor-on-previous-position"&gt;
  &lt;/a&gt;
  6. Cursor on Previous Position
&lt;/h2&gt;

&lt;p&gt;in VS code, we do not have bookmarking feature by default and sometimes we want to go back where was the last cursor position, so there is shortcut for that&lt;/p&gt;

&lt;p&gt;in macOS &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Option + -&lt;/code&gt; ( its minus sign)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;in Ubuntu &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Ctrl + Alt + -&lt;/code&gt; &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;every time you press this it will navigate back to the previous position of cursor or we can say cursor history, even it works across open files, suppose you click on file A line #20 then file B line # 20 then file A line # 40&lt;/p&gt;

&lt;p&gt;and now when you press &lt;code&gt;Option + -&lt;/code&gt; it will goes to file B line # 20 and again pressing &lt;code&gt;Option + -&lt;/code&gt; will takes to file A line #20&lt;/p&gt;

</description>
      <category>vscode</category>
      <category>keyboard</category>
      <category>productivity</category>
      <category>howto</category>
    </item>
    <item>
      <title>5 Tips Every React Developer Should Know</title>
      <author>Tapajyoti Bose</author>
      <pubDate>Sun, 10 Oct 2021 05:46:39 +0000</pubDate>
      <link>https://dev.to/ruppysuppy/5-tips-every-react-developer-should-know-1ghh</link>
      <guid>https://dev.to/ruppysuppy/5-tips-every-react-developer-should-know-1ghh</guid>
      <description>&lt;p&gt;&lt;strong&gt;React&lt;/strong&gt; is an &lt;em&gt;amazing tool to build Front End Applications&lt;/em&gt;. This article will provide you some tips which you can &lt;em&gt;immediately implement to up your &lt;strong&gt;React&lt;/strong&gt; game&lt;/em&gt; and help you become a better &lt;strong&gt;React Developer&lt;/strong&gt;, &lt;em&gt;Write better code&lt;/em&gt; and even help you &lt;em&gt;ace the interviews that you were initially scared of&lt;/em&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#1-lazy-loading"&gt;
  &lt;/a&gt;
  1. Lazy Loading
&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Lazy Loading&lt;/strong&gt; is the &lt;strong&gt;design pattern&lt;/strong&gt; which &lt;em&gt;delays the loading or initialization of objects or resources until they are required&lt;/em&gt;. This &lt;strong&gt;improves performance drastically&lt;/strong&gt;. In the case of &lt;strong&gt;React&lt;/strong&gt;, the &lt;em&gt;reduced bundle size leads to faster initial load time&lt;/em&gt;, which is crucial these days with &lt;strong&gt;dwindling attention span&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Luckily for us, &lt;strong&gt;React&lt;/strong&gt; makes implementing &lt;strong&gt;Lazy Loading&lt;/strong&gt; very easy for developers. All you need to do is &lt;em&gt;wrap dynamic import statement&lt;/em&gt; &lt;code&gt;import()&lt;/code&gt; with &lt;code&gt;React.lazy&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Let's consider we have a &lt;code&gt;Counter.js&lt;/code&gt; file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Counter.js&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;React&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Counter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setCount&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;increment&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setCount&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;decrement&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setCount&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;decrement&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;increment&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Lazy Loading&lt;/strong&gt; the counter in &lt;code&gt;App.js&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// App.js&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;lazy&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;React&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Counter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;lazy&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./Counter&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Suspense&lt;/span&gt; &lt;span class="nx"&gt;fallback&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Loader&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Counter&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Suspense&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;Counter&lt;/code&gt; will be &lt;strong&gt;Lazy Loaded&lt;/strong&gt; only when it's required and the &lt;code&gt;Loader&lt;/code&gt; component will be displayed while it is loading.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#2-custom-hooks"&gt;
  &lt;/a&gt;
  2. Custom Hooks
&lt;/h1&gt;

&lt;p&gt;With the release of &lt;strong&gt;React 16.8&lt;/strong&gt;, developers were introduced to &lt;strong&gt;React Hooks&lt;/strong&gt;. In simple terms, &lt;strong&gt;Hook&lt;/strong&gt;s are &lt;em&gt;functions that allow you to implement additional features like the state and life cycle methods&lt;/em&gt; in the &lt;em&gt;light-weight&lt;/em&gt; &lt;strong&gt;Functional Components&lt;/strong&gt;, which were formerly limited to &lt;em&gt;comparatively heavy-weight&lt;/em&gt; &lt;strong&gt;Class Components&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Apart from the &lt;strong&gt;Hooks&lt;/strong&gt; provided by &lt;strong&gt;React&lt;/strong&gt; out of the box, &lt;em&gt;developers can also write their own &lt;strong&gt;Hooks&lt;/strong&gt;&lt;/em&gt; to suit their &lt;em&gt;personal requirements&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Let's say you need access to the window dimensions, you can create a &lt;code&gt;useWindowSize&lt;/code&gt; &lt;strong&gt;Hook&lt;/strong&gt; to solve the problem.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useEffect&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;useWindowSize&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;windowSize&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setWindowSize&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;

  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;setWindowSize&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerWidth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHeight&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;handler&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;resize&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;handler&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;// Remove event listener on cleanup&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;removeEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;resize&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;handler&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[])&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;windowSize&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#3-react-fragments"&gt;
  &lt;/a&gt;
  3. React Fragments
&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;React&lt;/strong&gt; requires all your &lt;strong&gt;Components&lt;/strong&gt; to return a single element. For a long time, this was a major issue, &lt;em&gt;making you wrap everything in a &lt;code&gt;div&lt;/code&gt; or use array notation&lt;/em&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;DivWrap&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ComponentA&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ComponentB&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ArrayNotation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ComponentA&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;a&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ComponentB&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;b&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After &lt;strong&gt;React 16.2&lt;/strong&gt;, &lt;code&gt;Fragment&lt;/code&gt; was introduced. It is a &lt;strong&gt;React&lt;/strong&gt; element that you can use to &lt;em&gt;group elements together&lt;/em&gt; but does not add any element in the &lt;strong&gt;DOM&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Fragment&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Frag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Fragment&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ComponentA&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ComponentB&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Fragment&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Or after Babel 7&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;FragNewSyntax&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ComponentA&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ComponentB&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#4-dev-tools"&gt;
  &lt;/a&gt;
  4. Dev Tools
&lt;/h1&gt;

&lt;p&gt;React Dev Tools is an amazing extension available for Chrome and Firefox. It makes debugging your application a piece of cake by providing you all the details like props, state, hooks, and anything in between for each and every component.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---r5mYkPt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qknuzv2hiywkhbulxp9x.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---r5mYkPt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qknuzv2hiywkhbulxp9x.PNG" alt="Dev Tools"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Fun Fact&lt;/strong&gt;: You can also use it to &lt;em&gt;partially dive into the code base&lt;/em&gt; of the websites of top companies such as &lt;strong&gt;Netflix&lt;/strong&gt;, &lt;strong&gt;Twitter&lt;/strong&gt;, &lt;strong&gt;Facebook&lt;/strong&gt; and any other site using &lt;strong&gt;React&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7g7FnmHA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ba9qtycjkauvky6otjoj.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7g7FnmHA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ba9qtycjkauvky6otjoj.PNG" alt="Netflix Dev Tool"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#5-higherorder-component-hoc"&gt;
  &lt;/a&gt;
  5. Higher-Order Component (HOC)
&lt;/h1&gt;

&lt;p&gt;Are you tired of adding the &lt;strong&gt;Navbar&lt;/strong&gt;, &lt;strong&gt;Sidebar&lt;/strong&gt;, and &lt;strong&gt;Footer&lt;/strong&gt; to every page on your site? &lt;strong&gt;Higher Order Component (HOC)&lt;/strong&gt; to the rescue!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;HOC&lt;/strong&gt; is an advanced technique in React for reusing component logic. It allows you to take a component and will return a new component with the functionality or data of the HOC included.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;withRouter()&lt;/code&gt; or &lt;code&gt;connect()&lt;/code&gt; are examples of some common &lt;strong&gt;HOCs&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Let's create a &lt;code&gt;withLayout&lt;/code&gt; &lt;strong&gt;HOC&lt;/strong&gt; which accepts an &lt;strong&gt;Element&lt;/strong&gt; and automatically adds the &lt;strong&gt;Navbar&lt;/strong&gt;, &lt;strong&gt;Sidebar&lt;/strong&gt; and &lt;strong&gt;Footer&lt;/strong&gt; with it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;withLayout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Element&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Navbar&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Sidebar&lt;/span&gt;&lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Element&lt;/span&gt; &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Footer&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Using the &lt;strong&gt;HOC&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Home&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            I am Home!
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;withLayout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Home&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping Up
&lt;/h1&gt;

&lt;p&gt;We are at the end of the article. Hope that I could provide you with some insights. Share your thoughts in the comments below.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Best of Luck with your React Development Journey!&lt;/strong&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#thanks-for-reading"&gt;
  &lt;/a&gt;
  Thanks for reading
&lt;/h1&gt;

&lt;p&gt;Looking for ways to boost your productivity? Check out my Monthly Productivity Blogs on &lt;a href="https://tapajyotibose.medium.com/"&gt;Medium&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Want to work together? Contact me on &lt;a href="https://www.upwork.com/o/profiles/users/~01c12e516ee1d35044/"&gt;Upwork&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Want to see what I am working on? Check out my &lt;a href="https://github.com/ruppysuppy"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I am a freelancer who will start off as a Digital Nomad in mid-2022. Want to catch the journey? Follow me on &lt;a href="https://www.instagram.com/tapajyotib/"&gt;Instagram&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Follow my blogs for weekly new tidbits on &lt;a href="https://dev.to/ruppysuppy"&gt;Dev&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;FAQ&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;These are a few commonly asked questions I get. So, I hope this &lt;strong&gt;FAQ&lt;/strong&gt; section solves your issues.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;I am a beginner, how should I learn Front-End Web Dev?&lt;/strong&gt;&lt;br&gt;
Look into the following articles:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://dev.to/ruppysuppy/front-end-developer-roadmap-zero-to-hero-4pkf"&gt;Front End Development Roadmap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/ruppysuppy/5-projects-to-master-front-end-development-57p"&gt;Front End Project Ideas&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Would you mentor me?&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
Sorry, I am already under a lot of workload and would not have the time to mentor anyone.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Would you like to collaborate on our site?&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
As mentioned in the &lt;em&gt;previous question&lt;/em&gt;, I am in a time crunch, so I would have to pass on such opportunities.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Connect to me on&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://www.linkedin.com/in/tapajyoti-bose-429a601a0"&gt;LinkedIn&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://tapajyoti-bose.vercel.app"&gt;Portfolio&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.upwork.com/o/profiles/users/~01c12e516ee1d35044/"&gt;Upwork&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://github.com/ruppysuppy"&gt;GitHub&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.instagram.com/tapajyotib/"&gt;Instagram&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>typescript</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
