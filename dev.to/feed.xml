<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Ultimate Guide to Creating a Programming Portfolio With CodeCast</title>
      <author>CodeCast</author>
      <pubDate>Fri, 17 Sep 2021 19:46:24 +0000</pubDate>
      <link>https://dev.to/codecast/ultimate-guide-to-creating-a-programming-portfolio-with-codecast-18a</link>
      <guid>https://dev.to/codecast/ultimate-guide-to-creating-a-programming-portfolio-with-codecast-18a</guid>
      <description>&lt;p&gt;Prior to landing a job as a software developer or engineer at an exciting tech startup or a renowned company of which you have been keeping your eye out for possible job openings, you first need to update and refine your resume, or better yet, have your portfolio ready to be shared. &lt;/p&gt;

&lt;p&gt;A programmer’s portfolio is the secret sauce to capturing the attention of future employers or business partners. It’s hard to ignore someone when they have documented and clearly demonstrated their talent, growth &amp;amp; devotion as a web developer. We’re breaking down why you need to start building your portfolio with CodeCast. &lt;/p&gt;

&lt;p&gt;If we could condense this blog into a sentence, here’s what we’d say. ‘Employers don’t want to hear or read about what you’re capable of doing, they want to see it in action.’ &lt;/p&gt;

&lt;p&gt;And although this statement captures the core message of this blog, stick with us because we’ve got some tips that will help you along the way. &lt;/p&gt;

&lt;p&gt;Let’s take a few steps back. What is a portfolio? &amp;amp; Why do you need one?&lt;/p&gt;

&lt;p&gt;A programmer’s portfolio serves as a way to showcase your coding skills as opposed to just listing them on a simple resume. These portfolios are typically made up of Casts and videos with teachable elements. A portfolio allows prospective employers to engage and review your skills and previous work and projects. Creating a portfolio to apply for a specific job can take a lot of time, so we recommend documenting your work now in order to keep your portfolio consistent and frequently updated. &lt;/p&gt;

&lt;p&gt;Building Your Portfolio with CodeCast&lt;br&gt;
CodeCast has provided you with a space to inspire learners and teach groups of all different sizes which assists in expanding your skillset and monetizing your work all while easily assembling and construction your portfolio that will captivate future employers. Essentially, CodeCast is a platform that provides you with the tools and techniques you need to build your professionally curated portfolio by also attracting viewers, gaining an audience, and building a loyal community of followers. The culture of CodeCast greatly encourages you to craft your brand and let your personality shine through in each cast. &lt;/p&gt;

&lt;p&gt;What To Include In Your Portfolio&lt;br&gt;
Your portfolio can be made up of series of videos/Casts, possibly blogs, and breakdowns of each video released.  &lt;/p&gt;

&lt;p&gt;Remember to add in your contact information, and social channels if you feel comfortable. Being reachable is helpful when employers are seeking you out or your community wants to ask questions and connect with you directly. &lt;/p&gt;

&lt;p&gt;Within your Casts, don’t forget to speak to and engage with your audience and ask what they want to learn so you can appeal to this group and exemplify that you are adaptable and willing to shift your style when needed. When speaking within your Casts, ensure you’re talking slowly and clearly so there is no confusion and anyone can understand. &lt;/p&gt;

&lt;p&gt;Adding dates of your published work is important so employers can see how current your projects are, and it doesn’t hurt to mention how your previous experience helped you learn the skills you now possess. &lt;/p&gt;

&lt;p&gt;Be sure to avoid naming errors. This means take the time to name each project or cast correctly. As we previously mentioned, speak to your audience and help them understand what you’re demonstrating and how this will help them down the road. &lt;/p&gt;

&lt;p&gt;Lastly, don’t forget to add in your schedule of when you will be posting your next video to ensure you're building anticipation and staying accountable! &lt;/p&gt;

&lt;p&gt;All of these things together help to make up a professional portfolio. &lt;/p&gt;

&lt;p&gt;In Conclusion&lt;br&gt;
If you want to stand apart from others in the developer space, a portfolio can help differentiate you from your competitors and cut through the noise of basic resumes applying for the same position. Your programmer portfolio not only showcases your prior work samples while allowing people to see your sense of professionalism and personality, but it also displays your competence and acts as an additional example of your work. &lt;/p&gt;

</description>
    </item>
    <item>
      <title>Everything you need to know about Execution Context in JavaScript</title>
      <author>Neha Gupta</author>
      <pubDate>Fri, 17 Sep 2021 19:38:43 +0000</pubDate>
      <link>https://dev.to/nayyyhaa/everything-you-need-to-know-about-execution-context-in-javascript-2jha</link>
      <guid>https://dev.to/nayyyhaa/everything-you-need-to-know-about-execution-context-in-javascript-2jha</guid>
      <description>&lt;p&gt;Okay! You may be writing your code in JavaScript for ages, you know what logic to use when but, have you ever wondered how variable or function created holds information about its environment?&lt;br&gt;
Well, there's something called &lt;strong&gt;Execution Context&lt;/strong&gt; which gets created by our JS Engine which does all the magic in the background. Let's demystify it in this article.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#what-is-execution-context"&gt;
  &lt;/a&gt;
  What is Execution Context?
&lt;/h1&gt;

&lt;p&gt;By the name we can decode it as:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Execution&lt;/strong&gt; = to execute out code,&lt;br&gt;
&lt;strong&gt;Context&lt;/strong&gt; = specific environment&lt;/p&gt;

&lt;p&gt;Hence, Execution Context provides information about our &lt;em&gt;environment&lt;/em&gt; where our &lt;em&gt;specific&lt;/em&gt; code is &lt;em&gt;stored and executed&lt;/em&gt;. &lt;/p&gt;

&lt;p&gt;Whenever a script is executed by the JS engine, a new execution context is created. By default &lt;strong&gt;Global Execution Context&lt;/strong&gt; is created.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#globaldefault-execution-context"&gt;
  &lt;/a&gt;
  Global/Default Execution Context
&lt;/h2&gt;

&lt;p&gt;It is the first thing that is created when we write JavaScript code. Hence referred to as Default Context. Since JS is a single-threaded language, only one Global Execution Context(GEC) is created for executing the code.&lt;/p&gt;

&lt;p&gt;It has two phases:&lt;/p&gt;

&lt;p&gt;1) Creation phase&lt;br&gt;
2) Execution phase&lt;/p&gt;

&lt;p&gt;Let's dive deep into it!&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#creation-phase"&gt;
  &lt;/a&gt;
  Creation Phase
&lt;/h3&gt;

&lt;p&gt;In this phase, the compilation of JS code is done but doesn't involve the execution of code. Let's consider the following program.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;printHello&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hello Kitty!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;printHello&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When we debug this program with our developer's tool of our browser, we could notice that the value of &lt;code&gt;x&lt;/code&gt; variable is coming as &lt;code&gt;undefined&lt;/code&gt; in our scripts and &lt;code&gt;"Hello Kitty!"&lt;/code&gt; has not been printed in our console. Also, there's something called &lt;code&gt;window&lt;/code&gt; present in our global scope.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tto4nlDM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k31d8k0hzy4jebqouweg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tto4nlDM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k31d8k0hzy4jebqouweg.png" alt="globalScope"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This means in Creation Phase following this happens:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;variables&lt;/strong&gt; - initialized with &lt;em&gt;undefined&lt;/em&gt; value&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;functions&lt;/strong&gt; - declared and initialized but are NOT executed yet&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;window/global&lt;/strong&gt; object - gets created (holds information about function arguments, variables as well as inner functions declaration)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;this&lt;/strong&gt; - created which points to the global object created above&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To sum it up,&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nGW6jBFO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aocmxql0t3eiu60ssur9.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nGW6jBFO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aocmxql0t3eiu60ssur9.jpeg" alt="Creation Phase"&gt;&lt;/a&gt;&lt;/p&gt;
Image src: https://www.instagram.com/nehacode/



&lt;h3&gt;
  &lt;a href="#execution-context"&gt;
  &lt;/a&gt;
  Execution Context:
&lt;/h3&gt;

&lt;p&gt;Finally! Our code gets executed in this phase. JS engine executes the code line-by-line where all the variables are finally initialized with their value and functions get invoked. For each function invocation, &lt;strong&gt;Functional Execution Context&lt;/strong&gt; gets created. Let's learn about this.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#functionallocal-execution-context"&gt;
  &lt;/a&gt;
  Functional/Local Execution Context
&lt;/h4&gt;

&lt;p&gt;Whenever a new function gets called, a new execution context is created with basic two phases: The creation phase and the execution phase. This new execution context is known as &lt;strong&gt;Local/Functional Execution Context (FEC)&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Hence in the above code, while parsing the function invocation we could notice our function being present in the local scope.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--stb_znXG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uu4uk62h9onqefgcrbt2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--stb_znXG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uu4uk62h9onqefgcrbt2.png" alt="local scope"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This FEC is similar to GEC, the difference is that it creates the &lt;code&gt;arguments object&lt;/code&gt; instead of creating the &lt;code&gt;global object&lt;/code&gt; where &lt;code&gt;this&lt;/code&gt; points to the current object.&lt;/p&gt;

&lt;p&gt;Hence, In Execution Phase:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zkkVhpS4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dsz44n1syexithh1u6o4.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zkkVhpS4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dsz44n1syexithh1u6o4.jpeg" alt="Execution phase"&gt;&lt;/a&gt;&lt;/p&gt;
Image src: https://www.instagram.com/nehacode/



&lt;h3&gt;
  &lt;a href="#visual-representation"&gt;
  &lt;/a&gt;
  Visual Representation
&lt;/h3&gt;

&lt;p&gt;Since, for each function invocation =&amp;gt; new execution context is created. Let's visualize this whole concept:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Yu3txMS_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g8k0llsgxo40s3ysn2vf.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Yu3txMS_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g8k0llsgxo40s3ysn2vf.jpeg" alt="Execution Contexts"&gt;&lt;/a&gt;&lt;/p&gt;
Image src: https://www.instagram.com/nehacode/


 

&lt;p&gt;and, this feels trippy! 😵‍💫&lt;/p&gt;

&lt;p&gt;For ease of storing Global Execution Context and all Local Execution Context, we have a data structure called &lt;strong&gt;Call Stack&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Whenever a new execution context is created, it gets stacked above the previous execution context, and so on. The JS engine takes care of keeping track of this stack's execution so that one execution context gets executed at a time to maintain the Single-threaded nature of JS.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrap-up"&gt;
  &lt;/a&gt;
  Wrap up
&lt;/h2&gt;

&lt;p&gt;Great! Now we know what execution context it and why is it so useful for our beloved JS engine ❤️ We got a good grasp of the differences between Global Execution Context &amp;amp; Local Execution Context, along with the phases required in their creation.&lt;/p&gt;

&lt;p&gt;👏&lt;em&gt;Thanks for reading!&lt;/em&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>codenewbie</category>
      <category>computerscience</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Couchbase CRUD with .Net Core</title>
      <author>parasmm</author>
      <pubDate>Fri, 17 Sep 2021 19:26:34 +0000</pubDate>
      <link>https://dev.to/parasmm/couchbase-crud-with-netcore-5217</link>
      <guid>https://dev.to/parasmm/couchbase-crud-with-netcore-5217</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--soefRFcZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k5fki6qjvdcsyug5n41e.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--soefRFcZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k5fki6qjvdcsyug5n41e.jpg" alt="CRUD"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Recently, I got an opportunity to work on .Net Core 3.1 with Couchbase. I wanted to share steps to create a new .Net Core Web API and implement CRUD operations with Couchbase as backend.  &lt;/p&gt;

&lt;p&gt;&lt;b&gt;Pre-requisites:&lt;/b&gt; &lt;/p&gt;

&lt;p&gt;Install Couchbase Community Edition 7.0.0 &lt;br&gt;
Install sample bucket – “travel-sample” &lt;br&gt;
DotNet Core 3.1 SDK &lt;br&gt;
Visual Studio Code &lt;/p&gt;

&lt;p&gt;&lt;b&gt;What is Couchbase? &lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Couchbase Server is an open source, distributed, JSON document database. It exposes a scale-out, key-value store with managed cache for sub-millisecond data operations, purpose-built indexers for efficient queries and a powerful query engine for executing SQL-like queries. More details can be found at their site &lt;a href="https://docs.couchbase.com/server/current/introduction/why-couchbase.html"&gt;here&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;b&gt;Create new WebAPI project: &lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Execute below command to create a new .Net 3.1 project of type webapi&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;dotnet new webapi --name CouchbaseWebAPI 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;b&gt;Add Package reference: &lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Package References and versions added for this example: &lt;/p&gt;

&lt;p&gt;Couchbase.Extensions.DependencyInjection Version 3.0.5.931 &lt;br&gt;
CouchbaseNetClient Version 3.2 &lt;/p&gt;

&lt;p&gt;Run below command in the project folder -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;dotnet add package Couchbase.Extensions.DependencyInjection --version 3.2.0 

dotnet add package CouchbaseNetClient --version 3.2 

dotnet restore 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;b&gt;Update appsettings.json: &lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Update appsettings.json to include required configuration for Couchbase – &lt;/p&gt;

&lt;p&gt;In default generated appsettings.json file you can add below configuration after the setting for AllowedHosts&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  "Couchbase" : { 
    "ConnectionString": "couchbase://127.0.0.1", 
    "UseSsl": false, 
    "UserName": "&amp;lt;Couchbase userid&amp;gt;", 
    "Password": "&amp;lt;Couchbase password&amp;gt;" 
  } 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Update ConfigureSevices to add Couchbase&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;public void ConfigureServices(IServiceCollection services) 
{ 
      services.AddControllers();
      services.AddCouchbase(Configuration.GetSection("Couchbase"));
      services.AddCouchbaseBucket&amp;lt;INamedBucketProvider&amp;gt;("travel-sample"); 
} 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;AddCouchbase&lt;/em&gt; is an extension method from “Couchbase.Extensions.DependencyInjection” which allows us to add couchbase  configurations to your application. This is reading all the settings from appsettings.json which we updated in last step. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;AddCouchbaseBucket&lt;/em&gt; is an extension method which allows us to add a particular bucket to the system. While accessing documents, application will be looking at travel-sample bucket to work with documents. This has wired up dependency injection for the application. Now, based on this in our controller class, where we want to work with travel-sample bucket we update the class. As we are about to interact with Airport documents from the travel-sample bucket, lets create a Controller class as AirportController.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;private readonly IBucket _bucket;  

public AirportController(INamedBucketProvider bucketProvider) 
{
       _bucket = bucketProvider.GetBucketAsync().GetAwaiter().GetResult(); 
} 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, in AirportController’s constructor, dependency injection is requesting for INamedBucketProvider (part of “Couchbase.Extensions.DependencyInjection”) object, which based on ConfigureServices above, gets couchbase bucket “travel-sample” assigned to _bucket which is of type IBucket (part of “Couchbase”). Now the controller is wired up to work with buckets. We can dive into individual endpoints for CRUD operations. &lt;/p&gt;

&lt;p&gt;Let’s start with Read (CRUD): - &lt;/p&gt;

&lt;p&gt;&lt;b&gt;Read: &lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Create model classes named Airport and Geo:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;public class Airport 
{         
    public string airportname { get; set; } 
    public string city { get; set; } 
    public string country { get; set; } 
    public string faa { get; set; } 
    public Geo geo { get; set; } 
    public string icao { get; set; } 
    public int id { get; set; } 
    public string type { get; set; } 
    public string tz { get; set; } 
} 

public class Geo 
{ 
    public double alt { get; set; } 
    public double lat { get; set; } 
    public double lon { get; set; } 
} 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Add below function in AirportController for HttpGet verb&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[HttpGet] 
[Route("{Id}")] 
public async Task&amp;lt;Airport&amp;gt; Get(string Id) 
{ 
      // Get default collection object 
      var collection = await _bucket.DefaultCollectionAsync(); 

      // Get single document using KV search 

      var getResult = await collection.GetAsync(Id); 
      return getResult.ContentAs&amp;lt;Airport&amp;gt;(); 
} 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Access below link to get response from above functionality –  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://localhost:5001/Airport/airport_3494"&gt;https://localhost:5001/Airport/airport_3494&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;airport_3494 is a key in the travel-sample bucket we installed. The key format in this sample bucket is type_Id, where type is the document type, here airport. And the Id is the unique identifier of the document, here 3494. The same format has been used in Create, update and delete below. &lt;/p&gt;

&lt;p&gt;Next, let us look at Create (CRUD): - &lt;/p&gt;

&lt;p&gt;&lt;b&gt;Create: &lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Add an HttpPut endpoint as below&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[HttpPut] 
public async Task put([FromBody]Airport airport) 
{ 
      if (airport.id != 0)
      {
           throw new Exception("Error in input data, Id should not be set!");
      } 

      // get default collection of the bucket
      var collection = await _bucket.DefaultCollectionAsync(); 

      // defaulting the id value to insert. New Id generation has different approaches which is not discussed here.
       airport.id = 1; 

       // using the collection object insert the new airport object
        await collection.InsertAsync&amp;lt;Airport&amp;gt;($"airport_{airport.id}", airport); 
} 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, we’ve hard coded airport Id as 1 and the same value is being passed for the key name in InsertAsync call. This will throw an error (Couchbase.Core.Exceptions.KeyValue.DocumentExistsException) for subsequent calls as soon as one record is entered in the couchbase DB with Id as 1. &lt;strong&gt;Note:&lt;/strong&gt; generating a new Id has couple of different approaches which is outside scope of this article. &lt;/p&gt;

&lt;p&gt;Next up is update (CRUD): - &lt;/p&gt;

&lt;p&gt;&lt;b&gt;Update: &lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Add an HttpPost endpoint as below&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[HttpPost] 
public async Task post([FromBody]Airport airport) 
{ 
      if (airport.id == 0) 
      {
           throw new Exception("Error in input data, Id is required!"); 
      } 

       // get default collection of the bucket
       var collection = await _bucket.DefaultCollectionAsync(); 

       // call ReplaceAsync function to save the modified version of the document 
      await collection.ReplaceAsync&amp;lt;Airport&amp;gt;($"airport_{airport.id}", airport);
} 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;ReplaceAsync function of collection object can be used to modify / update / replace the document. The first parameter is the KV search Key for the given document. Same as read, the key is in format type_id. &lt;/p&gt;

&lt;p&gt;Additionally, Couchbase SDK provides us with UpsertAsync function as well, which as names suggest is for update or insert. &lt;/p&gt;

&lt;p&gt;Lastly, let us look at Delete (CRUD): - &lt;/p&gt;

&lt;p&gt;&lt;b&gt;Delete: &lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Add HttpDelete endpoint to our controller&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[HttpDelete] 
[Route("{Id}")] 
public async Task delete(string Id) 
{ 
    if (string.IsNullOrEmpty(Id)) 
    {     
        throw new Exception("Error in input data, Id is required!"); 
    } 

    var collection = await _bucket.DefaultCollectionAsync(); 

    // Id contains key in required k/v search. e.g. airport_1 
    await collection.RemoveAsync(Id); 
} 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;RemoveAsync function of collection object removes the document associated with key provided in input “Id”. &lt;/p&gt;

&lt;p&gt;&lt;b&gt;Bonus&lt;/b&gt;, Custom Bucket Provider: &lt;/p&gt;

&lt;p&gt;Additionally, if we want to access multiple buckets from the system, we can use below method -  &lt;/p&gt;

&lt;p&gt;If we want to access multiple buckets, we need to create interfaces which extend from INamedBucketProvider and use that provider while adding it to controllers. &lt;/p&gt;

&lt;p&gt;e.g.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;public interface ICustomBucketProvider1 : Couchbase.Extensions.DependencyInjection.INamedBucketProvider { 

} 

public interface ICustomBucketProvider2 : Couchbase.Extensions.DependencyInjection.INamedBucketProvider { 

} 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And change the Configure services function as below –&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;services.AddCouchbaseBucket&amp;lt;ICustomBucketProvider1&amp;gt;("travel-sample"); 

services.AddCouchbaseBucket&amp;lt;ICustomBucketProvider2&amp;gt;("gamesim-sample"); 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now in controller we can add reference to both these buckets as&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;private readonly IBucket _bucket1; 
private readonly IBucket _bucket2; 

public AirportController(ICustomBucketProvider1 bucketProvider1, 
  ICustomBucketProvider2 bucketProvider2) 
{ 
      _bucket1 = bucketProvider1.GetBucketAsync().GetAwaiter().GetResult();
      _bucket2 = bucketProvider2.GetBucketAsync().GetAwaiter().GetResult(); 
} 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above code will wireup _bucket1 with travel-sample bucket and _bucket2 with gamesim-sample.  &lt;/p&gt;

&lt;p&gt;Please refer below link for complete code sample -&lt;br&gt;
&lt;a href="https://github.com/parasmm/CouchbaseWebAPI"&gt;https://github.com/parasmm/CouchbaseWebAPI&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Conclusion: &lt;/b&gt;&lt;/p&gt;

&lt;p&gt;So we went through wiring up .Net Core web api with Couchbase SDK and Couchbase dependency injection. Created endpoint to work with Airport documents from travel-sample bucket provided by Couchbase. Created all the usual endpoints for CRUD operations. Additionally, we saw how to connect to more than one bucket in the application. &lt;/p&gt;

&lt;p&gt;&lt;b&gt;References: &lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://docs.couchbase.com/server/current/introduction/why-couchbase.html"&gt;https://docs.couchbase.com/server/current/introduction/why-couchbase.html&lt;/a&gt; &lt;br&gt;
&lt;a href="https://blog.couchbase.com/dependency-injection-aspnet-couchbase/"&gt;https://blog.couchbase.com/dependency-injection-aspnet-couchbase/&lt;/a&gt; &lt;br&gt;
&lt;a href="https://docs.couchbase.com/dotnet-sdk/current/hello-world/start-using-sdk.html"&gt;https://docs.couchbase.com/dotnet-sdk/current/hello-world/start-using-sdk.html&lt;/a&gt; &lt;br&gt;
&lt;a href="https://docs.couchbase.com/tutorials/quick-start/quickstart-dotnet27-aspnetcore31-visualstudio-firstquery-cb65.html"&gt;https://docs.couchbase.com/tutorials/quick-start/quickstart-dotnet27-aspnetcore31-visualstudio-firstquery-cb65.html&lt;/a&gt; &lt;/p&gt;

</description>
      <category>couchbase</category>
      <category>dotnet</category>
      <category>csharp</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>What was your win this week?</title>
      <author>Gracie Gregory (she/her)</author>
      <pubDate>Fri, 17 Sep 2021 19:11:18 +0000</pubDate>
      <link>https://dev.to/devteam/what-was-your-win-this-week-28f6</link>
      <guid>https://dev.to/devteam/what-was-your-win-this-week-28f6</guid>
      <description>&lt;p&gt;Hey there! &lt;/p&gt;

&lt;p&gt;Looking back on this past week, what was something you were proud of accomplishing?&lt;/p&gt;

&lt;p&gt;All wins count — big or small 🎉&lt;/p&gt;

&lt;p&gt;Examples of 'wins' include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Starting a new project&lt;/li&gt;
&lt;li&gt;Fixing a tricky bug&lt;/li&gt;
&lt;li&gt;Trying out a new creative hobby... or whatever else might spark joy ❤️ &lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Happy Friday — and congrats on your wins! 🎊 &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ev2s1-kj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/nXxOjZrbnbRxS/giphy.gif%3Fcid%3Decf05e47p2rkuxal6lhee9m9es30pnlge97qyw36vbj3r4s7%26rid%3Dgiphy.gif%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ev2s1-kj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/nXxOjZrbnbRxS/giphy.gif%3Fcid%3Decf05e47p2rkuxal6lhee9m9es30pnlge97qyw36vbj3r4s7%26rid%3Dgiphy.gif%26ct%3Dg" alt="Kip from Napoleon Dynamite"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>weeklyretro</category>
    </item>
    <item>
      <title>Hacktoberfest 2021: Announcing StepZen's Goals</title>
      <author>Lucia Cerchie</author>
      <pubDate>Fri, 17 Sep 2021 19:00:02 +0000</pubDate>
      <link>https://dev.to/stepzen/hacktoberfest-2021-announcing-stepzen-s-goals-l3i</link>
      <guid>https://dev.to/stepzen/hacktoberfest-2021-announcing-stepzen-s-goals-l3i</guid>
      <description>&lt;p&gt;&lt;em&gt;&lt;a href="https://stepzen.com/blog/announcing-stepzens-hacktoberfest-goals-21"&gt;Written by Lucia Cerchie and Anthony Campolo, originally posted on StepZen&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;We're excited to announce that we're participating in Hacktoberfest this year! 🎃&lt;/p&gt;

&lt;p&gt;Hacktoberfest is a month-long celebration of open source! It &lt;a href="https://hacktoberfest.digitalocean.com/"&gt;encourages participation&lt;/a&gt; in the open source community by completing pull requests and contributing to open source repositories in other ways (like writing thorough issues).&lt;/p&gt;

&lt;p&gt;Our sample repositories illustrate how you can use a StepZen GraphQL data layer to orchestrate different types of backends like databases, REST APIs, and GraphQL APIs. We're hoping to provide you with an opportunity to dive deeper into GraphQL while you participate in open source this Hacktoberfest.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Prefer learning by video rather than by blog post? &lt;a href="https://www.youtube.com/watch?v=4B6xVyEc_CY&amp;amp;t=1080s"&gt;View our walkthough&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We love our sample repositories and we're super excited to teach and learn alongside with you!&lt;/p&gt;

&lt;p&gt;As a plus, with every PR you merge or pairing session you complete, we'll send you a StepZen sticker! Besides that, &lt;a href="https://hacktoberfest.digitalocean.com/resources/participation"&gt;Digital Ocean tracks the number of PRs&lt;/a&gt; with the &lt;code&gt;hacktoberfest&lt;/code&gt; label that you merge and will send you a t-shirt if you merge 4.&lt;/p&gt;

&lt;p&gt;Let's take a look at the repositories that we'll be flagging as eligible for Hacktoberfest this year.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#stepzen-spacex-react-app"&gt;
  &lt;/a&gt;
  StepZen SpaceX React App
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--A1YzXll_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codimd.s3.shivering-isles.com/demo/uploads/upload_7bddd643df8f93dd101149ad39700e7f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A1YzXll_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codimd.s3.shivering-isles.com/demo/uploads/upload_7bddd643df8f93dd101149ad39700e7f.png" alt="homepage screenshot"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/stepzen-samples/stepzen-spacex-graphql"&gt;This project&lt;/a&gt; is an instance of a React App with a StepZen data layer connected to the SpaceX Land API. We've got a few got a few goals for the repository that we'd like to work towards with you:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;GraphQL Documentation - the GraphQL schema is partially documented. &lt;a href="https://github.com/stepzen-samples/stepzen-spacex-graphql/issues/11"&gt;Help us get to 100% coverage&lt;/a&gt;!&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;REST API Integration - We'd love &lt;a href="https://github.com/stepzen-samples/stepzen-spacex-graphql/issues/13"&gt;to integrate the SpaceX REST API&lt;/a&gt; as well as the GraphQL API for full API goodness and integration in StepZen's data layer!&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Other - We've also got some &lt;a href="https://github.com/stepzen-samples/stepzen-spacex-graphql/issues"&gt;other issues&lt;/a&gt; having to do with things like styling and React components that we'd love help with! You can find them with the label &lt;code&gt;hacktoberfest&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#stepzen-nuxt-mountains"&gt;
  &lt;/a&gt;
  Stepzen Nuxt Mountains
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--W0QyVuQR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codimd.s3.shivering-isles.com/demo/uploads/upload_9188d7c401239d37238a71d9c82af226.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W0QyVuQR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codimd.s3.shivering-isles.com/demo/uploads/upload_9188d7c401239d37238a71d9c82af226.png" alt="homepage screenshot"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/stepzen-samples/stepzen-nuxt"&gt;This project&lt;/a&gt; is a Nuxt app with a StepZen data layer that connects to the &lt;a href="https://api.nuxtjs.dev/mountains"&gt;Mountains REST API&lt;/a&gt; provided in the official &lt;a href="https://nuxtjs.org/docs/2.x/features/data-fetching"&gt;Nuxt documentation&lt;/a&gt;. We currently have open issues for a variety of improvements including:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Dynamic Routes - Create a separate page for each mountain with Nuxt's &lt;a href="https://github.com/stepzen-samples/stepzen-nuxt/issues/4"&gt;dynamic routing&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Expand Schema - Build out the rest of the schema with the remaining &lt;a href="https://github.com/stepzen-samples/stepzen-nuxt/issues/9"&gt;mountain types&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Other - Check out the &lt;a href="https://github.com/stepzen-samples/stepzen-nuxt/issues"&gt;other issues&lt;/a&gt; with the &lt;code&gt;hacktoberfest&lt;/code&gt; label for improvements to testing, accessibility, styling, and more.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#where-to-go-from-here"&gt;
  &lt;/a&gt;
  Where to go from here:
&lt;/h2&gt;

&lt;p&gt;Check out our sample repos and comment on any issue with the label &lt;code&gt;hacktoberfest&lt;/code&gt; to claim it!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/stepzen-samples/stepzen-spacex-graphql"&gt;StepZen React SpaceX&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/stepzen-samples/stepzen-nuxt"&gt;StepZen Nuxt Mountains&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>hacktoberfest</category>
      <category>react</category>
      <category>graphql</category>
      <category>nuxt</category>
    </item>
    <item>
      <title>What's the most expensive domain you ever bought?</title>
      <author>Madza</author>
      <pubDate>Fri, 17 Sep 2021 18:54:40 +0000</pubDate>
      <link>https://dev.to/madza/what-s-the-most-expensive-domain-you-ever-bought-56pe</link>
      <guid>https://dev.to/madza/what-s-the-most-expensive-domain-you-ever-bought-56pe</guid>
      <description>&lt;p&gt;Domain market is a competitive one. The prices for a single domain can vary from couple of bucks to seven or eight figures.&lt;/p&gt;

&lt;p&gt;Just curious what was the most expensive domain you ever bought, what was it for and did it payed-off?&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>domain</category>
      <category>business</category>
      <category>finances</category>
    </item>
    <item>
      <title>Going from an Individual Contributor to an Engineering Manager is NOT a promotion</title>
      <author>Conor Bronsdon</author>
      <pubDate>Fri, 17 Sep 2021 18:46:15 +0000</pubDate>
      <link>https://dev.to/linearb/going-from-an-individual-contributor-to-an-engineering-manager-is-not-a-promotion-16bo</link>
      <guid>https://dev.to/linearb/going-from-an-individual-contributor-to-an-engineering-manager-is-not-a-promotion-16bo</guid>
      <description>&lt;p&gt;&lt;em&gt;This article was written exclusively for devinterrupted.com by Anand Safi&lt;/em&gt;&lt;br&gt;
.&lt;br&gt;
.&lt;br&gt;
.&lt;br&gt;
In my role as an engineering manager, I know making the leap from an individual contributor (IC) to engineering manager (EM) is not a promotion. Instead, it’s a different career track. What we are discussing here is a fundamental difference in terms of the responsibilities of the roles. What you do as an engineering manager versus what you do as a developer is fundamentally different. There is a possibility that you might not write code altogether. A promotion means continuing to do the same thing, while being paid more to do it. Becoming an engineering manager means transitioning to a different role with different responsibilities. In other words, a separate career track.&lt;/p&gt;

&lt;p&gt;First, let’s break down our target audience into two groups. One group who is transitioning into engineering management. And then, the second, folks who have been made engineering managers recently. For those who are still considering, this decision could be made due to a couple of factors. It could be tenure-based, it happens in many companies where you are the senior-most engineer, or you have spent a fixed amount of time. The company or the team believes that you’re ready for managerial responsibilities, asking you to make the switch. This is a more traditional track that we see. Alternatively, there’s a more interest-based approach that you could be even at a mid to senior software engineer level.&lt;/p&gt;

&lt;p&gt;An important clarification with this is when to use the term “tech lead” and “engineering manager” interchangeably. The Tech Lead is a system owner, and the Engineering Manager is more of a team/people manager equally. So the former is responsible for the overall success of the architecture while the latter is responsible for the team success, motivation and morale of the people they manage.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/T7oZ0AutYcQ"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;There are some key signals regarding both the tracks (IC &amp;amp; EM) to be aware about. They are:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Amount of coding time&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Are you able to compromise on the technical output that you will end up with as an engineering manager versus a strong engineering IC? If you are coding 60 to 70% of your time currently, let’s say it’s going to reduce to 0 to 30% of the time. Yes! ZERO is a reality in this case. I have spent months where I’m literally not doing any coding in my role. There are EMs out there who would say they are able to still do coding and remain technical in terms of writing code day in, day out with an EM role. But, honestly, I don’t believe that is a scalable practice.&lt;/p&gt;

&lt;p&gt;If you are still taking on critical hands-on development tasks as an engineering manager, you run the risk of becoming a bottleneck for your team. For instance, if you are not available during the week, you need to do a lot of performance reviews or you are in some strategy meeting.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Focus time vs meeting time&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Are you okay with spending 50–75% of your time in meetings and tackling action items? If a company is in a hiring mode or if there is a performance review season, or if there is just any ad hoc conflict that comes up, or mentorship in your one-on-ones with direct reports, there are many meetings/commitments. This is especially true now with remote culture and distributed teams. The amount of context needed to succeed in this role is quite high.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Definition of success&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Are you okay with the definition of success becoming vague? What I mean by that is, as an engineer and an individual contributor, there were days where my code would pass, I would complete the feature, the build was great, I would get a dopamine boost at the end of the day and I could say, “Wow, it’s a productive day!” Basically, I could see clear output as an engineer when I completed a task, or my work was released.&lt;/p&gt;

&lt;p&gt;As an engineering manager, it’s difficult to define what success looks like for you personally, because there are no metrics which tie to individual engineering management. For an engineer, it is lines of code or the amount of work you completed, features you pushed, zero bugs introduced. All those things are great success indicators for a strong engineer.&lt;/p&gt;

&lt;p&gt;For an engineering manager, you must find your own metric set of what success is, which is ‘maybe there was no conflict in the team this week’, ‘maybe there was no deadline that was missed this week’, ‘maybe there is no question in terms of the meeting’ that I had with the stakeholders, and everybody clearly understood the requirements that were there for that week. Overall, it becomes abstract, and you need to self-identify what success looks like.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Being an enabler, not a creator&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Are you okay with the mindset of being an enabler versus a creator? As an engineer, an individual contributor, you have dedicated time to implement features. It’s your job to create things. However, as an engineering manager, you are responsible for enabling the creators to do their job. So, you are unblocking the team, you are giving clarity to the stakeholders, you are giving clarity to the team, you are providing updates to the leadership, you are sharing updates with other teams. Thus, you are enabling a lot of information sharing and removing bottlenecks for your teams and team members.&lt;/p&gt;

&lt;p&gt;For me, it’s clear that the engineering management and leadership track is a parallel career ladder on a separate track. It is a lateral move in that sense. It’s not a vertical move and it’s important to know the difference. The good part? In my experience, it is worth attempting to become an engineering manager because if it doesn’t suit you, you can always go back to being an individual contributor.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If you haven't already heard&lt;/strong&gt;, Dev Interrupted is partnering with Dzone to host &lt;strong&gt;INTERACT&lt;/strong&gt;: An interactive, community-driven, digital conference on September 30th - by engineering leaders, for engineering leaders. 1 day, 10 speakers, 100s of engineers and engineering leaders, all free.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2QYQCtGe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn-images-1.medium.com/max/2400/0%2AnHzak-kDc0MzrG55.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2QYQCtGe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn-images-1.medium.com/max/2400/0%2AnHzak-kDc0MzrG55.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#register-now"&gt;
  &lt;/a&gt;
  &lt;a href="https://devinterrupted.com/event/interact/"&gt;Register Now&lt;/a&gt;
&lt;/h1&gt;




&lt;h2&gt;
  &lt;a href="#join-the-dev-interrupted-community"&gt;
  &lt;/a&gt;
  Join the Dev Interrupted Community
&lt;/h2&gt;

&lt;p&gt;If you haven’t already joined the best developer discord out there, WYD?&lt;/p&gt;

&lt;p&gt;Look, I know we talk about it a lot but we love our developer discord community. With over 1600 members, the Dev Interrupted Discord Community is the best place for Engineering Leaders to engage in daily conversation. No salespeople allowed. &lt;a href="https://discord.gg/tpkmwM6c3g"&gt;Join the community &amp;gt;&amp;gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ghKqRKWI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/79p55zb3q4hh0drifmdu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ghKqRKWI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/79p55zb3q4hh0drifmdu.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;em&gt;Originally published at &lt;a href="https://devinterrupted.com/going-from-an-individual-contributor-to-an-engineering-manager-is-not-a-promotion/"&gt;https://devinterrupted.com&lt;/a&gt; on September 17, 2021.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>career</category>
      <category>discuss</category>
      <category>management</category>
      <category>programming</category>
    </item>
    <item>
      <title>What is Google Cloud Platform ? 🤷</title>
      <author>Deepak Gupta</author>
      <pubDate>Fri, 17 Sep 2021 18:37:28 +0000</pubDate>
      <link>https://dev.to/deepakguptacoder/what-is-google-cloud-platform-32d7</link>
      <guid>https://dev.to/deepakguptacoder/what-is-google-cloud-platform-32d7</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;Google Cloud Platform is a way to access Google’s&lt;br&gt;
infrastructure to create your own server&lt;br&gt;
And applications(simplified answer).&lt;br&gt;
Google Cloud Platform (GCP), a collection cloud computing services that was launched by Google on 7 April 2008.&lt;br&gt;
GCP offers a variety of tools and services that help with managing infrastructures, configuring networks and provisioning servers.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-is-the-importance-of-gcp"&gt;
  &lt;/a&gt;
  What is the importance of GCP?
&lt;/h1&gt;

&lt;p&gt;is the third largest Cloud Service Provider (CSP), behind Amazon's AWS, and Microsoft Azure.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#there-are-some-point-of-gcp"&gt;
  &lt;/a&gt;
  There are some point of GCP:-
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#scalability"&gt;
  &lt;/a&gt;
  Scalability
&lt;/h3&gt;

&lt;p&gt;GCP however, allows for extreme ease of scaling up or down.Downscaling is one of the biggest drawbacks to cloud computing.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pricing"&gt;
  &lt;/a&gt;
  Pricing
&lt;/h3&gt;

&lt;p&gt;In its pricing philosophy, Google has four key elements,&lt;br&gt;
Google's GCP services are priced at the lowest price on the cloud market compared to other providers.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#subhour-billing"&gt;
  &lt;/a&gt;
  Sub-hour billing
&lt;/h3&gt;

&lt;p&gt;The bill is only made for the requested time. GCP, for example, doesn't round the hour to the next hour if services are requested for half an hours, unlike other CSPs.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sustained-use-discount"&gt;
  &lt;/a&gt;
  Sustained Use Discount
&lt;/h3&gt;

&lt;p&gt;Google offers a 25% discount if you use the product for a sustained period of time.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#gcp"&gt;
  &lt;/a&gt;
  GCP
&lt;/h3&gt;

&lt;p&gt;This allows you to specify the exact amount CPU power and memory required for your application, and be billed accordingly.GCP also offers a variety of cloud services that can be used to build applications, manage infrastructures, provision servers, and store data. GCP is accessible by cloud administrators and developers via dedicated or public networks.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#integrated-services"&gt;
  &lt;/a&gt;
  Integrated Services:
&lt;/h3&gt;

&lt;p&gt;Multiple APIs, AI, ML, IoT and Compute Engine, Databases, Big Data analytics Developer tools Security, Storage, can all be used simultaneously.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#quick-collaboration"&gt;
  &lt;/a&gt;
  Quick Collaboration:
&lt;/h3&gt;

&lt;p&gt;GCP allows quick collaboration for all users. Multiple users can simultaneously access and edit the project files.&lt;/p&gt;

&lt;p&gt;For unused data, the redundant backup facility can be accessed.&lt;/p&gt;

&lt;p&gt;Employees can work anywhere and have full access to all information from any device. &lt;/p&gt;

&lt;p&gt;Data is also stored in the cloud so employees can work remotely.&lt;/p&gt;

&lt;p&gt;Full control and flexibility in technology and data management for users.&lt;br&gt;
.&lt;br&gt;
.&lt;br&gt;
.&lt;br&gt;
I hope this is help to you learn a Googlecloud platform..&lt;/p&gt;

</description>
      <category>googlecloud</category>
      <category>programming</category>
      <category>webdev</category>
    </item>
    <item>
      <title>What are your recurring expenses as a developer?</title>
      <author>Madza</author>
      <pubDate>Fri, 17 Sep 2021 18:16:35 +0000</pubDate>
      <link>https://dev.to/madza/what-are-your-recurring-expenses-as-a-developer-59p9</link>
      <guid>https://dev.to/madza/what-are-your-recurring-expenses-as-a-developer-59p9</guid>
      <description>&lt;p&gt;Expenses like hosting, domain, databases, cloud storage, subscription plans, app licences, etc can add up quickly.&lt;/p&gt;

&lt;p&gt;What are your recurring expenses as a developer (monthly/yearly)?&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>career</category>
      <category>business</category>
      <category>finances</category>
    </item>
    <item>
      <title>How to make a Feedback Component to seamlessly collect reviews in React.JS</title>
      <author>Parmeet Singh Asija</author>
      <pubDate>Fri, 17 Sep 2021 18:08:56 +0000</pubDate>
      <link>https://dev.to/parmeetasija/how-to-make-a-feedback-component-to-seamlessly-collect-reviews-in-react-js-22k4</link>
      <guid>https://dev.to/parmeetasija/how-to-make-a-feedback-component-to-seamlessly-collect-reviews-in-react-js-22k4</guid>
      <description>&lt;p&gt;For a business, customer feedback happens to be one of the most reliable ways to know how they are doing. As Developer, we should try and make this process as intuitive and simple as possible.&lt;/p&gt;

&lt;p&gt;This article aims to explain, how we could develop a customer feedback component using React, Lottie Web &amp;amp; Framer Motion. So let's get started with it then! 😉&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#project-initialization"&gt;
  &lt;/a&gt;
  Project Initialization
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npx create-react-app emoji-feedback
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#install-dependencies"&gt;
  &lt;/a&gt;
  Install Dependencies
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.npmjs.com/package/react-lottie"&gt;React Lottie&lt;/a&gt; for integrating Lottie animations&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.npmjs.com/package/framer-motion"&gt;Framer Motion&lt;/a&gt; for micro-interactions&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.npmjs.com/package/styled-components"&gt;Styled Components&lt;/a&gt; for styling needs
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn add react-lottie framer-motion styled-components
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#animated-emojis"&gt;
  &lt;/a&gt;
  Animated Emojis
&lt;/h3&gt;

&lt;p&gt;To get the emojis to animate, we have 2 options:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; Animated emoji pack (Mostly Paid)&lt;/li&gt;
&lt;li&gt;Lottie Animations (Free &amp;amp; Paid)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I went with the 2nd option for this one. The animations used in this component are by &lt;a href="https://lottiefiles.com/jkkim0124"&gt;jkkim0124&lt;/a&gt;. Simply select your favorite animations and place them under the &lt;code&gt;src/lotties&lt;/code&gt; folder.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#component-breakdown"&gt;
  &lt;/a&gt;
  Component Breakdown
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6pO4JBKG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628096449063/i4i5KCiSA.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6pO4JBKG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628096449063/i4i5KCiSA.jpeg" alt="Breakdown of the component"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#app-component"&gt;
  &lt;/a&gt;
  App Component
&lt;/h3&gt;

&lt;p&gt;Call the Emoji Feedback component along with the necessary state props.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// path: src/App.js

// React 
import { useState } from "react";

// External
import styled from "styled-components";

// Components
import EmojiFeedback from "./components/EmojiFeedback";

const AppStyles = styled.div`
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100vh;
  background-color: #f8ebe2;
`;

const App = () =&amp;gt; {
  const [activeReaction, setActiveReaction] = useState("");
  return (
    &amp;lt;AppStyles&amp;gt;
      &amp;lt;EmojiFeedback
        activeReaction={activeReaction}
        setActiveReaction={setActiveReaction}
      /&amp;gt;
    &amp;lt;/AppStyles&amp;gt;
  );
};

export default App;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#constants"&gt;
  &lt;/a&gt;
  Constants
&lt;/h3&gt;

&lt;p&gt;Declare an array containing strings of the various supported reactions.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// path: src/components/EmojiFeedback/data.js

const reactions = ["Aweful", "Bad", "Ok Ok", "Good", "Amazing"];

export { reactions };
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#emoji-feedback-component"&gt;
  &lt;/a&gt;
  Emoji Feedback Component
&lt;/h3&gt;

&lt;p&gt;Loop through the reactions and then call the Emoji component for every reaction.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// path: src/components/EmojiFeedback/index.jsx

// External
import styled from "styled-components";

// Components
import Emoji from "./Emoji";
import { Flex } from "../../styles/globalStyles";

// Reactions array
import { reactions } from "./data";

const Card = styled.div`
  width: 800px;
  height: 500px;
  background-color: #fff;
  border-radius: 33px;
  padding: 44px 48px;
  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.15);

  @media only screen and (max-width: 930px) {
    width: 80%;
  }
`;

const Heading = styled.h2`
  font-size: 42px;
  font-weight: bold;
  margin: 0;
  color: #000;
  font-family: Plus Jakarta Sans Bold;
`;

const Content = styled(Flex)`
  height: 452px;
  position: relative;
`;

const Emojis = styled(Flex)`
  top: 30%;
`;

const Button = styled.button`
  background-color: ${props =&amp;gt; (props.isSelected ? "#000" : "#ccc")};
  cursor: ${props =&amp;gt; (props.isSelected ? "pointer" : "not-allowed")};
  border: none;
  color: #fff;
  padding: 19.5px 107.3px;
  border-radius: 19px;
  font-family: Plus Jakarta Sans Medium;
  font-size: 24px;
  user-select: none;
  position: absolute;
  bottom: 0;
`;

const EmojiFeedback = ({ activeReaction, setActiveReaction }) =&amp;gt; {
  return (
    &amp;lt;Card&amp;gt;
      &amp;lt;Heading&amp;gt;How was your experience?&amp;lt;/Heading&amp;gt;
      &amp;lt;Content column&amp;gt;
        &amp;lt;Emojis&amp;gt;
          {reactions.map(reaction =&amp;gt; (
            &amp;lt;Emoji
              reaction={reaction}
              key={reaction}
              isSelected={activeReaction === reaction}
              setActiveReaction={setActiveReaction}
            /&amp;gt;
          ))}
        &amp;lt;/Emojis&amp;gt;
        &amp;lt;Button isSelected={!!activeReaction}&amp;gt;Submit&amp;lt;/Button&amp;gt;
      &amp;lt;/Content&amp;gt;
    &amp;lt;/Card&amp;gt;
  );
};

export default EmojiFeedback;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#emoji-component"&gt;
  &lt;/a&gt;
  Emoji Component
&lt;/h3&gt;

&lt;p&gt;The emoji component is being used to render a single emoji.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// path: src/components/EmojiFeedback/Emoji.jsx

// External
import Lottie from "react-lottie";
import { motion } from "framer-motion";
import styled from "styled-components";

// Helper for handling lottie animation data
import selectAnimationData from "../../lotties";

const EmojiWrapper = styled(motion.div)`
  cursor: pointer;
  margin: 0 12px;
  position: relative;
`;

const EmojiLabel = styled.p`
  text-align: center;
  position: absolute;
  bottom: -32px;
  left: 50%;
  transform: translate(-50%, -50%);
  font-family: Plus Jakarta Sans Bold;
  font-size: 16px;
  user-select: none;
`;

// Constants for emoji's scale during different states
const NORMAL_SCALE = 1;
const HOVERED_SCALE = 1.3;
const SELECTED_SCALE = 1.5;

const Emoji = ({ reaction, isSelected, setActiveReaction }) =&amp;gt; {
  // Initialize the animation options as per the reaction
  const animationOptions = {
    loop: true,
    autoplay: false,
    animationData: selectAnimationData(reaction),
    rendererSettings: {
      preserveAspectRatio: "xMidYMid slice",
    },
  };

  // Update state on the click of reaction
  const handleClick = () =&amp;gt; {
    if (isSelected) {
      setActiveReaction("");
    } else {
      setActiveReaction(reaction);
    }
  };

  return (
    &amp;lt;EmojiWrapper
      whileHover={{
        scale: isSelected ? SELECTED_SCALE : HOVERED_SCALE,
      }}
      animate={{
        scale: isSelected ? SELECTED_SCALE : NORMAL_SCALE,
      }}
      onClick={handleClick}
    &amp;gt;
      &amp;lt;Lottie
        options={animationOptions}
        height={100}
        width="80%"
        isStopped={!isSelected}
        isClickToPauseDisabled
      /&amp;gt;
      {isSelected &amp;amp;&amp;amp; &amp;lt;EmojiLabel&amp;gt;{reaction}&amp;lt;/EmojiLabel&amp;gt;}
    &amp;lt;/EmojiWrapper&amp;gt;
  );
};

export default Emoji;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;And there we have it, the emoji feedback component is ready. The &lt;a href="https://github.com/parmeet1402/internal-component-collection/tree/main/emoji-feedback"&gt;Code&lt;/a&gt; is available on Github. Would love to hear your valuable feedback in the comments down below.&lt;/p&gt;

&lt;p&gt;See you guys 👋🏻  in the next article of this Component series!&lt;/p&gt;

&lt;p&gt;Happy coding &amp;amp; Stay safe! ✨&lt;/p&gt;

&lt;p&gt;Follow me on &lt;a href="https://twitter.com/parmeetasija"&gt;Twitter&lt;/a&gt; &amp;amp; &lt;a href="https://www.instagram.com/parmeetasija/"&gt;Instagram&lt;/a&gt; for more!&lt;/p&gt;

&lt;p&gt;This article can also be read on my &lt;a href="https://www.parmeetasija.com/blog/how-to-make-a-feedback-component-to-seamlessly-collect-reviews-in-reactjs"&gt;website&lt;/a&gt;!&lt;/p&gt;

</description>
      <category>react</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>ux</category>
    </item>
    <item>
      <title>I redesigned YelpCamp by Colt Steele, and am giving away his Bootcamp for free!</title>
      <author>Moemin Mamdouh 👨‍💻</author>
      <pubDate>Fri, 17 Sep 2021 18:04:27 +0000</pubDate>
      <link>https://dev.to/codewell/i-redesigned-yelpcamp-by-colt-steele-and-am-giving-away-his-bootcamp-for-free-315i</link>
      <guid>https://dev.to/codewell/i-redesigned-yelpcamp-by-colt-steele-and-am-giving-away-his-bootcamp-for-free-315i</guid>
      <description>&lt;p&gt;Hi everyone 👋 &lt;/p&gt;

&lt;p&gt;Back when I was taking Colt Steele's bootcamp, I noticed that almost all YelpCamp projects were the same, and that's to be expected since people were still learning how to build a full stack application, but i'm a big fan of making it your own so I redesigned it!&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/3UYa0_icP0U"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;I tried my best not to add new features so as to not overwhelm beginners still learning, so this includes all the functionality you will find in the bootcamp. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.codewell.cc/challenges/yelpcamp-by-colt-steele--6144c7c8a383e41090a3d84b"&gt;You can download the custom design for the YelpCamp challenge here for free&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;🎁 I'm also giving away the bootcamp to one lucky winner, to enter the giveaway, check out this &lt;a href="https://twitter.com/codewell_/status/1438909946603708416?s=20"&gt;tweet&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note: The link to the challenge will take you to my side project,&lt;a href="https://www.codewell.cc"&gt;Codewell&lt;/a&gt;, so please treat this post as such, thank you!&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>webdev</category>
      <category>node</category>
      <category>css</category>
    </item>
    <item>
      <title>Golden Hammer</title>
      <author>Ushieru Kokoran</author>
      <pubDate>Fri, 17 Sep 2021 18:01:58 +0000</pubDate>
      <link>https://dev.to/ushieru/golden-hammer-54kc</link>
      <guid>https://dev.to/ushieru/golden-hammer-54kc</guid>
      <description>&lt;h6&gt;
  &lt;a href="#disclaimer-uso-javascript-como-ejemplo-por-el-alza-que-ha-habido-%C3%BAltimamente-yo-no-te-vengo-a-decir-como-programar"&gt;
  &lt;/a&gt;
  🚧 &lt;em&gt;Disclaimer: Uso JavaScript como ejemplo por el alza que ha habido últimamente. Yo no te vengo a decir como programar.&lt;/em&gt;
&lt;/h6&gt;

&lt;h2&gt;
  &lt;a href="#javascript-es-la-soluci%C3%B3n-para-todo-y-no-es-necesario-aprender-otro-lenguaje"&gt;
  &lt;/a&gt;
  JavaScript es la solución para todo y no es necesario aprender otro lenguaje.
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Server?&lt;/strong&gt; Express, Koa, Fastify, Nest, etc...&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Web?&lt;/strong&gt; React, Angular, Vue, Svelte, etc... &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Desktop?&lt;/strong&gt; Neutralino, Electron, NW.js, Ultralight, etc...&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Mobile?&lt;/strong&gt; React Native, Meteor, Capacitor, PWA, etc...&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Database?&lt;/strong&gt; NeDB, Pouchdb, LowDB, etc...&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Si bien JavaScript goza de una gigantesca comunidad y gracias a ello tenemos herramientas para, casi, todo lo que necesitamos. Es normal que pensemos "Lo tengo todo en un mismo lenguaje 💘".&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#para-un-martillo-de-oro-todos-son-clavos"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Para un martillo de oro, todos son clavos 🙅&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Y claro, podemos usar cualquier lenguaje para darle solución a cualquier problema, pero ¿hasta dónde esto es recomendable?&lt;/p&gt;

&lt;p&gt;Para un MVP (Minimum Viable Product) puede ser nuestra primera opción utilizar el lenguaje con el que mejor nos desenvolvemos.&lt;/p&gt;

&lt;p&gt;Pero conforme vamos avanzando no debemos cerrarnos a la idea de aprender algo nuevo, refactorizar o incluso volver a empezar.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;🎉🎉 ¡Sorpresa! Estas en la industria con más evolución y más cambiante de todos los tiempos.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Un día COBOL domina el mercado y al otro día es Java. La resiliencia será nuestra más grande aliada, no uses el lenguaje más cómodo, usa el lenguaje más apto para tus necesidades.&lt;/p&gt;

&lt;p&gt;Es normal que un día pases de Ruby a Scala preguntemos a Twitter; de PHP a JavaScript preguntemos a Facebook; de Python a Go preguntemos a Uber. Porque aquí no se elige por lenguaje, se elige por necesidad.&lt;/p&gt;

&lt;p&gt;Es importante comprender que cada uno tiene capacidades y limitaciones en aplicaciones particulares. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Si te vas a casar que no sea con un lenguaje de programación 🧑‍💻&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>antipattern</category>
      <category>programming</category>
    </item>
  </channel>
</rss>
