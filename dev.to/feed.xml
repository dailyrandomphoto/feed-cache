<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How to detect the user's browser with JavaScript</title>
      <author>Coderslang: Become a Software Engineer</author>
      <pubDate>Sun, 11 Apr 2021 12:52:05 +0000</pubDate>
      <link>https://dev.to/coderslang/how-to-detect-the-user-browser-with-javascript-4mfe</link>
      <guid>https://dev.to/coderslang/how-to-detect-the-user-browser-with-javascript-4mfe</guid>
      <description>&lt;p&gt;You can check which browser the user is running using plain JavaScript.&lt;/p&gt;

&lt;p&gt;To detect the user browser, you need to analyze the property &lt;code&gt;userAgent&lt;/code&gt; of the object &lt;code&gt;navigator&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If you want to do something specific, for example, provide a polifill for a regular expression when the browser is Safari, you do this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;userAgent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Safari&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// the user is running Safari&lt;/span&gt;
  &lt;span class="c1"&gt;// do something useful&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;On the other hand, if you want to do something for all browsers but &lt;code&gt;Chrome&lt;/code&gt;, you check if the &lt;code&gt;userAgent&lt;/code&gt; doesn’t include your search string:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;userAgent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Chrome&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// the user is NOT running Chrome&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#using-raw-indexof-endraw-and-raw-tolowercase-endraw-"&gt;
  &lt;/a&gt;
  Using &lt;code&gt;indexOf&lt;/code&gt; and &lt;code&gt;toLowerCase&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;As an alternative to &lt;code&gt;includes&lt;/code&gt; you can also use the &lt;code&gt;indexOf&lt;/code&gt; method. If it returns &lt;code&gt;-1&lt;/code&gt;, this means that the search string wasn’t found.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;userAgent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;indexOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Chrome&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// the user is NOT running Chrome&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you’re not sure how exactly the user browser is spelled, you can try using the &lt;code&gt;toLowerCase&lt;/code&gt; function on the &lt;code&gt;navigator.userAgent&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;userAgent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toLowerCase&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;indexOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;chrome&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// the user is NOT running Chrome&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://js.coderslang.com/sign-in"&gt;Learn Full Stack JavaScript&lt;/a&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>javascript</category>
      <category>codenewbie</category>
      <category>webdev</category>
    </item>
    <item>
      <title>一秒拳王▷線上看完整版(2021)电影在线[HD]观看和下载</title>
      <author>你好，李焕英 2021 完整電影版</author>
      <pubDate>Sun, 11 Apr 2021 12:09:51 +0000</pubDate>
      <link>https://dev.to/hi_mom/2021-hd-3aeb</link>
      <guid>https://dev.to/hi_mom/2021-hd-3aeb</guid>
      <description>&lt;p&gt;一秒拳王 完整版, 一秒拳王 线上, 一秒拳王 下载, 一秒拳王 One Second Champion (2021) 电影完整版, 一秒拳王 线上看完整版, 一秒拳王 免费下载, 一秒拳王 (2021) 上映时间完整版, 一秒拳王 下载完整版, 一秒拳王 在线完整版, 一秒拳王 One Second Champion (2021) 完整版, 一秒拳王 在线观看完整版本。&lt;/p&gt;

&lt;p&gt;================================================&lt;/p&gt;

&lt;p&gt;&lt;b&gt;◉立即观看 ⇨ &lt;a href="https://v.ht/one_second_champion"&gt;&lt;/a&gt;&lt;a href="https://v.ht/one_second_champion"&gt;https://v.ht/one_second_champion&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;◉立即下载 ⇨ &lt;a href="https://is.gd/one_second_champion"&gt;&lt;/a&gt;&lt;a href="https://is.gd/one_second_champion"&gt;https://is.gd/one_second_champion&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;================================================&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--es7bJ8NE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/df6zwhyleda9apoxr9rh.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--es7bJ8NE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/df6zwhyleda9apoxr9rh.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;一秒拳王 One Second Champion 2021&lt;br&gt;
导演: 赵善恒&lt;br&gt;
编剧: 章彥琦 / 何肇康 / 李浩田 / 凌伟骏&lt;br&gt;
主演: 周国贤 / 林明祯 / 赵善恒 / 张建声 / 熊偉樂 / 更多...&lt;br&gt;
类型: 剧情&lt;br&gt;
制片国家/地区: 中国香港&lt;br&gt;
语言: 粤语&lt;br&gt;
上映日期: 2020-12-03(中国香港) / 2020-11-22(香港亞洲電影節)&lt;br&gt;
片长: 90分钟&lt;br&gt;
又名: One Second Champion&lt;/p&gt;

&lt;p&gt;一秒拳王的剧情简介 · · · · · ·&lt;br&gt;
廢中周天仁（周國賢）終日在酒吧渾噩，兒子（熊倬樂）對他毫無寄望，為了躲避債主，天仁運用一秒預知超能力成功逃脫，意外被屢戰屢敗的拳擊教練阿信（趙善恆）發現，拉攏他合作挑戰秒殺拳王Joe（查朗桑提納托古），堂妹小瑤（林明禎）多番阻撓也無補於事。一秒雖然很短，卻能創出宇宙；從未認真看待自己的天仁，決定藉此難得機會，運用這個超能力，在擂台上尋回失落已久的人生初衷，為了自己，為了兒子，好好活一次！其實輸怎會一世，贏又真的只在一秒？&lt;/p&gt;

&lt;p&gt;一秒拳王的标签电影 · · · · · ·&lt;br&gt;
一秒拳王 澳門上映&lt;br&gt;
一秒拳王 2021 上映&lt;br&gt;
一秒拳王 HD-線上看&lt;br&gt;
一秒拳王 線上看小鴨&lt;br&gt;
一秒拳王 电影完整版&lt;br&gt;
一秒拳王 線上看下載&lt;br&gt;
一秒拳王 2021 下载&lt;br&gt;
一秒拳王 線上看完整版&lt;br&gt;
一秒拳王 線上看完整版小鴨&lt;br&gt;
一秒拳王 (2021) 完整版本&lt;br&gt;
一秒拳王 1080P|完整版本&lt;br&gt;
一秒拳王 (2021) 在线观看完整版&lt;br&gt;
一秒拳王 線上看(2021)完整版&lt;br&gt;
《一秒拳王》線上看電影(2021)&lt;br&gt;
一秒拳王 (電影)2021年 再次觀看電影&lt;br&gt;
一秒拳王 線上看|2021上映|完整版小鴨|線上看小鴨&lt;br&gt;
一秒拳王 线上看&lt;br&gt;
一秒拳王 主題曲&lt;br&gt;
一秒拳王 小鴨影音&lt;br&gt;
一秒拳王 線上小鴨&lt;br&gt;
一秒拳王 完整版本&lt;br&gt;
一秒拳王 香港上映&lt;br&gt;
一秒拳王 線上看小鴨影音&lt;br&gt;
一秒拳王 2021 線上看&lt;br&gt;
《一秒拳王》2021 电影在线&lt;br&gt;
一秒拳王 1080P 下載&lt;br&gt;
一秒拳王 免費線上看電影&lt;br&gt;
一秒拳王 电影在线 2021年&lt;br&gt;
一秒拳王 (2021) 在线观看&lt;br&gt;
一秒拳王 [2021] 观看和下载&lt;br&gt;
一秒拳王 [2021-HD] 观看和下载&lt;br&gt;
一秒拳王 Singapora (2021) 完整版&lt;br&gt;
一秒拳王 線上看|2021最新電影|小鴨影音&lt;br&gt;
一秒拳王 免費下載&lt;br&gt;
一秒拳王 下載 百度&lt;br&gt;
一秒拳王 2021 上看&lt;br&gt;
一秒拳王 免費線上看電影&lt;br&gt;
一秒拳王 完整版小鴨 HD&lt;br&gt;
一秒拳王 線上看 2021&lt;br&gt;
一秒拳王 台灣上映 2021&lt;br&gt;
一秒拳王 (2021) 線上看&lt;br&gt;
一秒拳王 線上(2021-HD)&lt;br&gt;
一秒拳王 2021 電影完整版&lt;br&gt;
一秒拳王 2021 線上 完整版&lt;br&gt;
一秒拳王 完整版小鴨 2021&lt;br&gt;
一秒拳王 免費在線觀看 2021&lt;br&gt;
一秒拳王 [2021] 線上完整版&lt;br&gt;
一秒拳王 线上看(2021)完整版&lt;br&gt;
一秒拳王 線上 [2021] 完整版&lt;br&gt;
一秒拳王 (2021) 免費線上看電影&lt;br&gt;
一秒拳王 線上看(2021)完整版&lt;br&gt;
一秒拳王 One Second Champion (2021) Trailer&lt;br&gt;
一秒拳王 One Second Champion (2021) Facebook&lt;br&gt;
一秒拳王 One Second Champion (2021) Instagram&lt;br&gt;
一秒拳王 One Second Champion (2021) Twitter&lt;br&gt;
一秒拳王 One Second Champion (2021) Youtube&lt;br&gt;
一秒拳王 (2021-HD) 完整版小鴨&lt;br&gt;
一秒拳王 線上看2021 HD.BD.1080p&lt;br&gt;
一秒拳王 HD|1080p|4K|香港流媒體&lt;br&gt;
一秒拳王 2021 完整版小鴨 (HD.BLURAY)&lt;br&gt;
一秒拳王 2021 線上看電影粵語-流-下載完整版本&lt;/p&gt;

</description>
      <category>news</category>
      <category>ios</category>
      <category>vue</category>
      <category>techtalks</category>
    </item>
    <item>
      <title>你好，李焕英▷線上看完整版(2021)电影在线[HD]观看和下载</title>
      <author>你好，李焕英 2021 完整電影版</author>
      <pubDate>Sun, 11 Apr 2021 11:01:25 +0000</pubDate>
      <link>https://dev.to/hi_mom/2021-hd-4f4d</link>
      <guid>https://dev.to/hi_mom/2021-hd-4f4d</guid>
      <description>&lt;p&gt;你好，李焕英 完整版, 你好，李焕英 线上, 你好，李焕英 下载, 你好，李焕英 Hi Mom (2021) 电影完整版, 你好，李焕英 线上看完整版, 你好，李焕英 免费下载, 你好，李焕英 (2021) 上映时间完整版, 你好，李焕英 下载完整版, 你好，李焕英 在线完整版, 你好，李焕英 Hi Mom (2021) 完整版, 你好，李焕英 在线观看完整版本。&lt;/p&gt;

&lt;p&gt;================================================&lt;/p&gt;

&lt;p&gt;&lt;b&gt;◉立即观看 ⇨ &lt;a href="https://v.ht/hi_mom_zh"&gt;&lt;/a&gt;&lt;a href="https://v.ht/hi_mom_zh"&gt;https://v.ht/hi_mom_zh&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;◉立即下载 ⇨ &lt;a href="https://is.gd/hi_mom_hd"&gt;&lt;/a&gt;&lt;a href="https://is.gd/hi_mom_hd"&gt;https://is.gd/hi_mom_hd&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;================================================&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lZuDsFan--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1rl7ub3jqdhl9c7sywrr.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lZuDsFan--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1rl7ub3jqdhl9c7sywrr.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;你好，李焕英 Hi Mom 2021&lt;br&gt;
导演: 贾玲&lt;br&gt;
编剧: 贾玲 / 孙集斌 / 王宇 / 刘宏禄 / 卜钰 / 郭宇鹏&lt;br&gt;
主演: 贾玲 / 张小斐 / 沈腾 / 陈赫 / 刘佳 / 更多...&lt;br&gt;
类型: 剧情 / 喜剧 / 奇幻&lt;br&gt;
制片国家/地区: 中国大陆&lt;br&gt;
语言: 汉语普通话&lt;br&gt;
上映日期: 2021-02-12(中国大陆)&lt;br&gt;
片长: 128分钟&lt;br&gt;
又名: Hi, Mom&lt;br&gt;
IMDb链接: tt13364790&lt;/p&gt;

&lt;p&gt;你好，李焕英的剧情简介 · · · · · ·&lt;br&gt;
2001年的某一天，刚刚考上大学的贾晓玲（贾玲 饰）经历了人生中的一次大起大落。一心想要成为母亲骄傲的她却因母亲突遭严重意外，而悲痛万分。在贾晓玲情绪崩溃的状态下，竟意外的回到了1981年，并与年轻的母亲李焕英（张小斐 饰）相遇，二人形影不离，宛如闺蜜。与此同时，也结识了一群天真善良的好朋友。晓玲以为来到了这片“广阔天地”，她可以凭借自己超前的思维，让母亲“大有作为”，但结果却让晓玲感到意外......&lt;/p&gt;

&lt;p&gt;你好，李焕英的标签电影 · · · · · ·&lt;br&gt;
你好，李焕英 澳門上映&lt;br&gt;
你好，李焕英 2021 上映&lt;br&gt;
你好，李焕英 HD-線上看&lt;br&gt;
你好，李焕英 線上看小鴨&lt;br&gt;
你好，李焕英 电影完整版&lt;br&gt;
你好，李焕英 線上看下載&lt;br&gt;
你好，李焕英 2021 下载&lt;br&gt;
你好，李焕英 線上看完整版&lt;br&gt;
你好，李焕英 線上看完整版小鴨&lt;br&gt;
你好，李焕英 (2021) 完整版本&lt;br&gt;
你好，李焕英 1080P|完整版本&lt;br&gt;
你好，李焕英 (2021) 在线观看完整版&lt;br&gt;
你好，李焕英 線上看(2021)完整版&lt;br&gt;
《你好，李焕英》線上看電影(2021)&lt;br&gt;
你好，李焕英 (電影)2021年 再次觀看電影&lt;br&gt;
你好，李焕英 線上看|2021上映|完整版小鴨|線上看小鴨&lt;br&gt;
你好，李焕英 线上看&lt;br&gt;
你好，李焕英 主題曲&lt;br&gt;
你好，李焕英 小鴨影音&lt;br&gt;
你好，李焕英 線上小鴨&lt;br&gt;
你好，李焕英 完整版本&lt;br&gt;
你好，李焕英 香港上映&lt;br&gt;
你好，李焕英 線上看小鴨影音&lt;br&gt;
你好，李焕英 2021 線上看&lt;br&gt;
《你好，李焕英》2021 电影在线&lt;br&gt;
你好，李焕英 1080P 下載&lt;br&gt;
你好，李焕英 免費線上看電影&lt;br&gt;
你好，李焕英 电影在线 2021年&lt;br&gt;
你好，李焕英 (2021) 在线观看&lt;br&gt;
你好，李焕英 [2021] 观看和下载&lt;br&gt;
你好，李焕英 [2021-HD] 观看和下载&lt;br&gt;
你好，李焕英 Singapora (2021) 完整版&lt;br&gt;
你好，李焕英 線上看|2021最新電影|小鴨影音&lt;br&gt;
你好，李焕英 免費下載&lt;br&gt;
你好，李焕英 下載 百度&lt;br&gt;
你好，李焕英 2021 上看&lt;br&gt;
你好，李焕英 免費線上看電影&lt;br&gt;
你好，李焕英 完整版小鴨 HD&lt;br&gt;
你好，李焕英 線上看 2021&lt;br&gt;
你好，李焕英 台灣上映 2021&lt;br&gt;
你好，李焕英 (2021) 線上看&lt;br&gt;
你好，李焕英 線上(2021-HD)&lt;br&gt;
你好，李焕英 2021 電影完整版&lt;br&gt;
你好，李焕英 2021 線上 完整版&lt;br&gt;
你好，李焕英 完整版小鴨 2021&lt;br&gt;
你好，李焕英 免費在線觀看 2021&lt;br&gt;
你好，李焕英 [2021] 線上完整版&lt;br&gt;
你好，李焕英 线上看(2021)完整版&lt;br&gt;
你好，李焕英 線上 [2021] 完整版&lt;br&gt;
你好，李焕英 (2021) 免費線上看電影&lt;br&gt;
你好，李焕英 線上看(2021)完整版&lt;br&gt;
你好，李焕英 Hi Mom (2021) Trailer&lt;br&gt;
你好，李焕英 Hi Mom (2021) Facebook&lt;br&gt;
你好，李焕英 Hi Mom (2021) Instagram&lt;br&gt;
你好，李焕英 Hi Mom (2021) Twitter&lt;br&gt;
你好，李焕英 Hi Mom (2021) Youtube&lt;br&gt;
你好，李焕英 (2021-HD) 完整版小鴨&lt;br&gt;
你好，李焕英 線上看2021 HD.BD.1080p&lt;br&gt;
你好，李焕英 HD|1080p|4K|香港流媒體&lt;br&gt;
你好，李焕英 2021 完整版小鴨 (HD.BLURAY)&lt;br&gt;
你好，李焕英 2021 線上看電影粵語-流-下載完整版本&lt;/p&gt;

</description>
      <category>news</category>
      <category>ios</category>
      <category>vue</category>
      <category>techtalks</category>
    </item>
    <item>
      <title>How to build, test and release a node module in ES6</title>
      <author>Salma Alam-Naylor</author>
      <pubDate>Sun, 11 Apr 2021 10:55:55 +0000</pubDate>
      <link>https://dev.to/whitep4nth3r/how-to-build-test-and-release-a-node-module-in-es6-296b</link>
      <guid>https://dev.to/whitep4nth3r/how-to-build-test-and-release-a-node-module-in-es6-296b</guid>
      <description>&lt;p&gt;Over the last couple of weeks I’ve had incredible fun building the &lt;a href="https://randomcodegenerator.lol/"&gt;random code generator&lt;/a&gt; live on &lt;a href="https://twitch.tv/whitep4nth3r"&gt;Twitch&lt;/a&gt;. At the time of writing this post, I’ve also merged over 70 pull requests into the repository for the application on GitHub. This got me thinking — what if people could use the same silly random code on their own applications to create even more lols on the web?&lt;/p&gt;

&lt;p&gt;I had never actually built or released a node module before &lt;a href="https://www.npmjs.com/package/@whitep4nth3r/random-code"&gt;@whitep4nth3r/random-code&lt;/a&gt;, and &lt;a href="https://medium.com/swlh/how-to-publish-an-es6-module-to-npm-43dda8aabbf"&gt;this blog post by Alec Mather&lt;/a&gt; was super helpful in understanding the concepts. This most important thing I learned was that &lt;strong&gt;if we want to write the code for the node module in ES6, we need a way to compile the code from ES6 to ES2015 so that it’s compatible with anyone’s code&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;I don’t intend to recreate the tutorial in this post, but instead, write out the process for future me. I can see myself harnessing the power of building and releasing node modules &lt;strong&gt;much more&lt;/strong&gt; as time goes on!&lt;/p&gt;

&lt;p&gt;If you’d prefer to watch this process from start to finish, check out this five-minute quick fire-video on YouTube that shows me learning how to create my first node module and publish it to npm — live on Twitch!&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/GCjqV8InkBc"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Let’s go through step by step how to create, build and publish a package to npm that’s written in ES6. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;p&gt;Ensure you’ve installed Node.js and npm on your machine.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-an-account-on-npm"&gt;
  &lt;/a&gt;
  Create an account on npm
&lt;/h2&gt;

&lt;p&gt;You’ll need this to be able to publish your package. &lt;a href="https://www.npmjs.com/"&gt;Sign up here&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#login-to-npm-via-your-terminal"&gt;
  &lt;/a&gt;
  Login to npm via your terminal
&lt;/h2&gt;

&lt;p&gt;Run &lt;code&gt;npm login&lt;/code&gt; in your terminal and enter your username, password and email. This will ensure you can publish your package later via the CLI.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bohsS_nH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.ctfassets.net/56dzm01z6lln/2LaGBjAFuLOE5Doud4ho1X/debefa2ffce3c7708c655e08a6e50290/npm_login.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bohsS_nH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.ctfassets.net/56dzm01z6lln/2LaGBjAFuLOE5Doud4ho1X/debefa2ffce3c7708c655e08a6e50290/npm_login.png" alt="A screenshot of the output in a terminal after running npm login"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#set-up-your-project"&gt;
  &lt;/a&gt;
  Set up your project
&lt;/h2&gt;

&lt;p&gt;Create a new directory for your project that will contain the code for your npm package. Navigate to that directory. For unscoped modules (without the @scope-name prefix), run &lt;code&gt;npm init&lt;/code&gt;. This will create the package.json file for your project. &lt;/p&gt;

&lt;p&gt;For my first node module, I decided to create a &lt;strong&gt;scoped public package&lt;/strong&gt;, so that it would include my brand name. To initialise a scoped module, run &lt;code&gt;npm init --scope=@scope-name&lt;/code&gt;. Follow the instructions in the terminal to configure your project. Read more about scoped public packages here.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;mkdir &lt;/span&gt;my-new-npm-package
&lt;span class="nb"&gt;cd &lt;/span&gt;my-new-npm-package
npm init
&lt;span class="c"&gt;# or for scoped packages&lt;/span&gt;
npm init &lt;span class="nt"&gt;--scope&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;@scope-name
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here’s the package.json file that was created via the CLI for &lt;a class="comment-mentioned-user" href="https://dev.to/whitep4nth3r"&gt;@whitep4nth3r&lt;/a&gt;
/random-code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"@whitep4nth3r/random-code"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"version"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"1.0.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"description"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Need some code for your project? We've got you covered. Choose your language. Choose how much code. BÄM! You got code."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"main"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"index.js"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"scripts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"test"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"echo &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;Error: no test specified&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; &amp;amp;&amp;amp; exit 1"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"keywords"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"random"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"author"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"whitep4nth3r"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"license"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"MIT"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;At the root of your new project, create the following directories:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;src&lt;/code&gt; — this is where we’ll store our ES6 code files&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;dist&lt;/code&gt; — this is where we’ll store the compiled ES2015 code&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Inside the &lt;code&gt;src&lt;/code&gt; folder, create an &lt;code&gt;index.js&lt;/code&gt; file. This is the file that will export all of your ES6 code from this directory.&lt;/p&gt;

&lt;p&gt;Finally, at the root of the project, create an &lt;code&gt;index.js&lt;/code&gt; file, and add this line of code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./dist&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is the entry point to our application, as specified in the &lt;code&gt;main&lt;/code&gt; field in the package.json file. This instructs whatever code is consuming the node module to load all of the contents of the &lt;code&gt;dist&lt;/code&gt; directory, where our compiled ES2015 code will be.&lt;/p&gt;

&lt;p&gt;Here’s how your project structure should look so far:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rjkoKJLY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.ctfassets.net/56dzm01z6lln/4pIbMqfR6ltok2SRUEyPGn/a5d9ab4f652d4a6b306049894a895a03/folder_structure.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rjkoKJLY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.ctfassets.net/56dzm01z6lln/4pIbMqfR6ltok2SRUEyPGn/a5d9ab4f652d4a6b306049894a895a03/folder_structure.png" alt='alt="A screenshot of the folder tree in VS code showing the dist directory, src directory with index.js inside, and inside.js and package.json at the root"'&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#write-some-es6-code-in-the-src-directory"&gt;
  &lt;/a&gt;
  Write some ES6 code in the src directory
&lt;/h2&gt;

&lt;p&gt;I can’t help you with this bit — but go wild! Ensure that each function you want to export from the &lt;code&gt;src&lt;/code&gt; directory in &lt;code&gt;index.js&lt;/code&gt; is prefixed with export. &lt;a href="https://github.com/whitep4nth3r/random-code/blob/main/src/index.js"&gt;Check out the equivalent file for the random-code node module on GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;At this point you’ll probably want to create a git repository for your node module package to ensure your hard work is version-controlled.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#compile-your-es6-code-to-es2015-using-babel"&gt;
  &lt;/a&gt;
  Compile your ES6 code to ES2015 using babel
&lt;/h2&gt;

&lt;p&gt;We need to install two dev dependencies to compile the ES6 code to ES2015.&lt;/p&gt;

&lt;p&gt;In your terminal, run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;--save-dev&lt;/span&gt; babel-cli babel-preset-es2015
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, at the root of your project, add a &lt;code&gt;.babelrc&lt;/code&gt; file, and add the following lines:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"presets"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"es2015"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, add the following build command to your package.json file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="nl"&gt;"scripts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"build"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"babel src -d dist"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, when you run &lt;code&gt;npm run build&lt;/code&gt;, babel will compile all of the code from the &lt;code&gt;src&lt;/code&gt; directory from ES6 to ES2015, and place it in &lt;code&gt;dis&lt;/code&gt;t. Make sure you run &lt;code&gt;npm run build&lt;/code&gt; each time you want to test your code locally in a different directory or project.&lt;/p&gt;

&lt;p&gt;Wait, I can test my npm package locally? You sure can! Here’s how.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#test-your-node-module-before-you-publish"&gt;
  &lt;/a&gt;
  Test your node module before you publish
&lt;/h2&gt;

&lt;p&gt;We can use &lt;code&gt;npm link&lt;/code&gt; to test out the functionality of an npm package without publishing it.&lt;/p&gt;

&lt;p&gt;In your node module project directory, run the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;link&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In an existing project directory, or a new directory where you wish to test this npm package (assuming the project already has a package.json), run the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;link &lt;/span&gt;my-new-npm-package
&lt;span class="c"&gt;# or for scoped projects&lt;/span&gt;
npm &lt;span class="nb"&gt;link&lt;/span&gt; @scope-name/my-new-npm-package 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can now import the node module as you would if it was published to npm, for example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;getLanguages&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;generateRandomCode&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@whitep4nth3r/random-code&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#publish-your-new-node-module"&gt;
  &lt;/a&gt;
  Publish your new node module
&lt;/h2&gt;

&lt;p&gt;When you’ve tested your new node module and you’re happy with the results, it’s ready to be published!&lt;/p&gt;

&lt;p&gt;At the root of your npm package directory, make sure you are logged into npm via the CLI as described above, and run the following command in your terminal:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# for unscoped packages&lt;/span&gt;
npm publish
&lt;span class="c"&gt;# for scoped packages&lt;/span&gt;
npm publish &lt;span class="nt"&gt;--access&lt;/span&gt; public
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;Ensure that you increment the version number in package.json each time you want to publish.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;And there you have it! &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.npmjs.com/package/@whitep4nth3r/random-code"&gt;View the @whitep4nther/random-code node module on npm.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The npm ecosystem is a great way to distribute useful blocks of reusable code. Through learning how to build and publish packages to npm, I feel like I’ve really levelled-up my web dev skills. Good luck in creating your first npm package!&lt;/p&gt;

&lt;p&gt;If you've tried out the random-code package on npm, I'd love to hear about it! &lt;a href="https://twitch.tv/whitep4nth3r"&gt;Come and say hi on Twitch&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;And remember, build stuff, learn things and love what you do.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>node</category>
      <category>npm</category>
    </item>
    <item>
      <title>Understanding how to retrieve joined data with ActiveRecord</title>
      <author>Ana Nunes da Silva</author>
      <pubDate>Sun, 11 Apr 2021 10:55:32 +0000</pubDate>
      <link>https://dev.to/anakbns/understanding-how-to-retrieve-joined-data-1f3b</link>
      <guid>https://dev.to/anakbns/understanding-how-to-retrieve-joined-data-1f3b</guid>
      <description>&lt;p&gt;So far we've been using joins to support filtering based on related associations. But what if we not only want to filter but also retrieve and use data from those associations?&lt;/p&gt;

&lt;p&gt;Let's bring back the domain models we've been using during this series. This time &lt;code&gt;Booking&lt;/code&gt; and &lt;code&gt;Rating&lt;/code&gt; will be enough to illustrate some examples:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Booking&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;ApplicationRecord&lt;/span&gt;
  &lt;span class="n"&gt;has_many&lt;/span&gt; &lt;span class="ss"&gt;:ratings&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Rating&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;ApplicationRecord&lt;/span&gt;
  &lt;span class="n"&gt;belongs_to&lt;/span&gt; &lt;span class="ss"&gt;:booking&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="no"&gt;Booking&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;all&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Id&lt;/th&gt;
&lt;th&gt;Check In&lt;/th&gt;
&lt;th&gt;Check Out&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;62&lt;/td&gt;
&lt;td&gt;20 Jun 2020&lt;/td&gt;
&lt;td&gt;23 Jun 2020&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;63&lt;/td&gt;
&lt;td&gt;07 Aug 2021&lt;/td&gt;
&lt;td&gt;08 Aug 2021&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;64&lt;/td&gt;
&lt;td&gt;22 May 2021&lt;/td&gt;
&lt;td&gt;28 May 2021&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;65&lt;/td&gt;
&lt;td&gt;01 Apr 2021&lt;/td&gt;
&lt;td&gt;02 Apr 2021&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="no"&gt;Rating&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;all&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Id&lt;/th&gt;
&lt;th&gt;Rate&lt;/th&gt;
&lt;th&gt;Comments&lt;/th&gt;
&lt;th&gt;Booking Id&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;25&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;'Amazing'&lt;/td&gt;
&lt;td&gt;62&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;26&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;'Coming back soon'&lt;/td&gt;
&lt;td&gt;64&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;27&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;'friendly staff'&lt;/td&gt;
&lt;td&gt;63&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#-raw-pluck-endraw-vs-raw-select-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;pluck&lt;/code&gt; vs &lt;code&gt;select&lt;/code&gt;
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#get-a-list-of-bookings-that-have-been-rated-with-raw-ids-endraw-with-their-corresponding-rates"&gt;
  &lt;/a&gt;
  Get a list of bookings that have been rated with &lt;code&gt;ids&lt;/code&gt; with their corresponding rates
&lt;/h3&gt;

&lt;p&gt;A simple way to return this list could be to join ratings to bookings and &lt;code&gt;pluck&lt;/code&gt; the &lt;code&gt;id&lt;/code&gt; values from &lt;code&gt;bookings&lt;/code&gt; and the corresponding  &lt;code&gt;comments&lt;/code&gt; values from&lt;code&gt;ratings&lt;/code&gt;. Remember that we can pass an &lt;code&gt;SQL&lt;/code&gt; string to explicitly say which &lt;code&gt;&amp;lt;table&amp;gt;.&amp;lt;column&amp;gt;&lt;/code&gt; we'd like to pluck:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="no"&gt;Booking&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;joins&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:ratings&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;pluck&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'bookings.id'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'ratings.comments'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In SQL terms, this means that we're &lt;strong&gt;inner joining&lt;/strong&gt; ratings and &lt;strong&gt;selecting&lt;/strong&gt; only the two columns that we need, &lt;code&gt;id&lt;/code&gt; from &lt;code&gt;bookings&lt;/code&gt; table and the &lt;code&gt;comments&lt;/code&gt; from the &lt;code&gt;ratings&lt;/code&gt; table.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="nv"&gt;"bookings"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;"ratings"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;"comments"&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="nv"&gt;"bookings"&lt;/span&gt; &lt;span class="k"&gt;INNER&lt;/span&gt; &lt;span class="k"&gt;JOIN&lt;/span&gt; &lt;span class="nv"&gt;"ratings"&lt;/span&gt; &lt;span class="k"&gt;ON&lt;/span&gt; &lt;span class="nv"&gt;"ratings"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;"booking_id"&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;"bookings"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;"id"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Since we're using &lt;code&gt;pluck, the output is an array of arrays with the&lt;/code&gt;id, comments` combinations:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;ruby&lt;br&gt;
[[62, 'amazing'], [63, 'friendly staff'], [64,  'Coming back soon']]&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If we'd like to transform this into an index/dictionary structure that is easier to read and consult we can use the &lt;code&gt;.to_h&lt;/code&gt; method:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;ruby&lt;br&gt;
Booking.joins(:ratings).pluck('bookings.id', 'ratings.comments').to_h&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;There, much better:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;ruby&lt;br&gt;
{ 62 =&amp;gt; 'Amazing',&lt;br&gt;
  63 =&amp;gt; 'friendly staff',&lt;br&gt;
  64 =&amp;gt; 'Coming back soon' }&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;So &lt;code&gt;pluck&lt;/code&gt; returns the data prepared for us in a ruby array object. If we'd rather return an ActiveRecord collection, we can solve this exercise in a similar way using &lt;code&gt;select&lt;/code&gt; instead:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;ruby&lt;br&gt;
Booking.joins(:ratings).select('bookings.id', 'ratings.comments')&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This will translate in exactly the same SQL as before:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;sql&lt;br&gt;
SELECT "bookings"."id", "ratings"."comments" FROM "bookings" INNER JOIN "ratings" ON "ratings"."booking_id" = "bookings"."id"&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;But now, instead of an array we're returning ActiveRecord objects:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;ruby&lt;br&gt;
 [#&amp;lt;Booking:0x00007f86084a4530 id: 62&amp;gt;,&lt;br&gt;
 #&amp;lt;Booking:0x00007f86084a4418 id: 63&amp;gt;,&lt;br&gt;
 #&amp;lt;Booking:0x00007f86084a4288 id: 64&amp;gt;]&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Looking at this output, it looks like we've lost the &lt;code&gt;comments&lt;/code&gt; data. But notice what happens when we ask one of these objects what attributes they have: &lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;`ruby&lt;br&gt;
bookings = Booking.joins(:ratings).select('bookings.id', 'ratings.comments')&lt;/p&gt;

&lt;p&gt;bookings.first.attributes&lt;/p&gt;

&lt;p&gt;=&amp;gt; {"id"=&amp;gt;62, "comments"=&amp;gt;"Amazing"}&lt;br&gt;
`&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;What's going on here? Activerecord's &lt;code&gt;select&lt;/code&gt; is basically making all attributes that we've selected into ActiveRecord instance methods.&lt;/p&gt;

&lt;p&gt;So if we do:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;`ruby&lt;br&gt;
bookings = Booking.joins(:ratings).select('bookings.id', 'ratings.comments')&lt;/p&gt;

&lt;p&gt;bookings.first.comments&lt;/p&gt;

&lt;p&gt;=&amp;gt; "Amazing"&lt;br&gt;
`&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;All this without triggering any extra queries.&lt;/p&gt;

&lt;p&gt;So to get the list that we want, we can now iterate on each booking and print the available attributes:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;ruby&lt;br&gt;
Booking.joins(:ratings).select('bookings.id', 'ratings.comments').each do |booking|&lt;br&gt;
   puts booking.id&lt;br&gt;
   puts booking.comments&lt;br&gt;
end&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Which will print:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;&lt;br&gt;
62&lt;br&gt;
"Amazing"&lt;br&gt;
63&lt;br&gt;
"friendly staff"&lt;br&gt;
64&lt;br&gt;
"Coming back soon"&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#be-aware-of-n-1-queries"&gt;
  &lt;/a&gt;
  Be aware of n + 1 queries
&lt;/h3&gt;

&lt;p&gt;It's important to mention that &lt;code&gt;joins&lt;/code&gt; per se does not avoid &lt;code&gt;n + 1&lt;/code&gt; queries. We've been managing to avoid them so far because we're asking SQL to join and select the data we need &lt;strong&gt;in a single query&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;Watch what happens if you don't use the &lt;code&gt;select&lt;/code&gt; method:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;ruby&lt;br&gt;
Booking.joins(:ratings).each do |booking|&lt;br&gt;
   puts booking.id&lt;br&gt;
   puts booking.ratings.map(&amp;amp;:comments)&lt;br&gt;
end&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;br&gt;
Note that now comments is no longer a booking instance method. That means that for each booking we'll have to get its ratings and from there add another iteration to get each rating's comments.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;sql&lt;br&gt;
  Booking Load (3.0ms)  SELECT "bookings".* FROM "bookings" INNER JOIN "ratings" ON "ratings"."booking_id" = "bookings"."id"                                                                                      &lt;br&gt;
  🤯 Rating Load (29.8ms)  SELECT "ratings".* FROM "ratings" WHERE "ratings"."booking_id" = $1  [["booking_id", 63]]                                                                                       &lt;br&gt;
  🤯 Rating Load (0.3ms)  SELECT "ratings".* FROM "ratings" WHERE "ratings"."booking_id" = $1  [["booking_id", 64]]                  &lt;br&gt;
  🤯 Rating Load (2.0ms)  SELECT "ratings".* FROM "ratings" WHERE "ratings"."booking_id" = $1  [["booking_id", 65]]                                                                                    &lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#-endraw-eagerload-raw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;eager_load&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;If you don't want to &lt;code&gt;select&lt;/code&gt; attributes prior to the iteration, you can &lt;code&gt;eager_load&lt;/code&gt; the &lt;code&gt;ratings&lt;/code&gt; data. What this will &lt;strong&gt;not&lt;/strong&gt; do, however, is to make &lt;code&gt;comments&lt;/code&gt; available as a booking instance method. So we'll have to get comments through the ratings:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;ruby&lt;br&gt;
Booking.joins(:ratings).eager_load(:ratings).each do |booking|&lt;br&gt;
   puts booking.id&lt;br&gt;
   puts booking.ratings.map(&amp;amp;:comments)&lt;br&gt;
end&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;In SQL this will be: &lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;sql&lt;br&gt;
 SELECT "bookings"."id" AS t0_r0, "bookings"."guest_id" AS t0_r1, "bookings"."accommodation_id" AS t0_r2, "bookings"."check_in" AS t0_r3, "bookings"."check_out" AS t0_r4, "bookings"."status" AS t0_r5, "bookings"."total_guests" AS t0_r6, "bookings"."created_at" AS t0_r7, "bookings"."updated_at" AS t0_r8, "ratings"."id" AS t1_r0, "ratings"."rate" AS t1_r1, "ratings"."comments" AS t1_r2, "ratings"."booking_id" AS t1_r3, "ratings"."created_at" AS t1_r4, "ratings"."updated_at" AS t1_r5 FROM "bookings" INNER JOIN "ratings" ON "ratings"."booking_id" = "bookings"."id"&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Note that now you'll have all &lt;code&gt;booking&lt;/code&gt; and all &lt;code&gt;rating&lt;/code&gt; attributes available which can make the query heavier in some cases. &lt;/p&gt;

&lt;p&gt;You can also use &lt;code&gt;eager_load&lt;/code&gt; without the &lt;code&gt;joins&lt;/code&gt; which will default into a &lt;code&gt;left outer join&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;ruby&lt;br&gt;
Booking.eager_load(:ratings).each do |booking|&lt;br&gt;
   puts booking.id&lt;br&gt;
   puts booking.ratings.map(&amp;amp;:comments) if booking.ratings.present?&lt;br&gt;
end&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Here's the SQL:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;sql&lt;br&gt;
SELECT "bookings"."id" AS t0_r0, "bookings"."guest_id" AS t0_r1, "bookings"."accommodation_id" AS t0_r2, "bookings"."check_in" AS t0_r3, "bookings"."check_out" AS &lt;br&gt;
t0_r4, "bookings"."status" AS t0_r5, "bookings"."total_guests" AS t0_r6, "bookings"."created_at" AS t0_r7, "bookings"."updated_at" AS t0_r8, "ratings"."id" AS t1_r0, "ratings"."r&lt;br&gt;
ate" AS t1_r1, "ratings"."comments" AS t1_r2, "ratings"."booking_id" AS t1_r3, "ratings"."created_at" AS t1_r4, "ratings"."updated_at" AS t1_r5 FROM "bookings" LEFT OUTER JOIN "r&lt;br&gt;
atings" ON "ratings"."booking_id" = "bookings"."id"&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conlusion"&gt;
  &lt;/a&gt;
  Conlusion
&lt;/h2&gt;

&lt;p&gt;There are several ways you can access data from joined associations: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You can use &lt;code&gt;pluck&lt;/code&gt; if returning a simple ruby object is enough for you&lt;/li&gt;
&lt;li&gt;If you'd like to get the benefits of returning an ActiveRecord collection use &lt;code&gt;select&lt;/code&gt; instead&lt;/li&gt;
&lt;li&gt;If you want to work with all the model and the joined association(s) attributes, you can use &lt;code&gt;eager_load&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Don't forget to keep a close eye on performance. While &lt;code&gt;pluck&lt;/code&gt; and &lt;code&gt;select&lt;/code&gt; can reduce the load time of your queries, combining multiple &lt;code&gt;joins&lt;/code&gt; in a single query and making all the attributes accessible with &lt;code&gt;eager_load&lt;/code&gt; can easily bloat them. In that case, consider breaking up your queries either using a &lt;code&gt;preload&lt;/code&gt; strategy or writing separate queries that support each other. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That's it! Hope this 4 part series on understanding ActiveRecord joins was useful! Feel free to write me if you have any doubts or suggestions. You can also subscribe to my newsletter below to be updated on new posts.&lt;/p&gt;

</description>
      <category>activerecord</category>
      <category>rails</category>
      <category>sql</category>
    </item>
    <item>
      <title>Hey Kim, what’s it like being a Software Engineer &amp; Tech Coach? Q&amp;A Session</title>
      <author>Kim Diep</author>
      <pubDate>Sun, 11 Apr 2021 10:44:20 +0000</pubDate>
      <link>https://dev.to/thekimmykola/hey-kim-what-s-it-like-being-a-software-engineer-tech-coach-q-a-session-424e</link>
      <guid>https://dev.to/thekimmykola/hey-kim-what-s-it-like-being-a-software-engineer-tech-coach-q-a-session-424e</guid>
      <description>&lt;h2&gt;
  &lt;a href="#how-did-you-become-a-software-engineer-amp-tech-coach"&gt;
  &lt;/a&gt;
  How did you become a Software Engineer &amp;amp; Tech Coach?
&lt;/h2&gt;

&lt;p&gt;I didn’t plan this path; it totally happened by accident! 😂&lt;/p&gt;

&lt;p&gt;It was only back in February 2019 that I received a fully-funded scholarship to attend a 16-week intensive Software Engineering Bootcamp at Makers. I was a career switcher, having at the time spent over 4 years in sustainability and business consulting roles.&lt;/p&gt;

&lt;p&gt;I have since been exposed to full-stack Software Engineering and DevOps practices from a range of roles and industries such as investment management, e-commerce and tech education.&lt;/p&gt;

&lt;p&gt;While in my Software Engineer role at Trainline, which is a FTSE 250 rail and coach ticketing platform, a random advert popped up in my LinkedIn feed in December 2021 and it was for a Software Engineer &amp;amp; Tech Coach role at &lt;a href="https://www.techreturners.com/"&gt;Tech Returners&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;When I read the job advert, negative thoughts started coming to my head:&lt;/p&gt;

&lt;p&gt;😥 “Am I doing the right thing? Is it too early in my tech career to do this? I’ll be leaving a FTSE 250 company, will I regret it?”&lt;/p&gt;

&lt;p&gt;😥 “Am I even qualified for this? There’s only some technologies on the job description I know well, those I know enough to get by and those where I don’t have a clue yet!”&lt;/p&gt;

&lt;p&gt;Somehow because these thoughts came into my head, I wanted to pursue this more than ever! I tried to map things out rationally and thought about what I enjoyed doing, which was my experience teaching people to code and creating &lt;a href="https://www.thekimmykola.dev/teaching-workshops"&gt;workshops&lt;/a&gt; for the community alongside my friends, &lt;a href="https://www.thekimmykola.dev/speaking"&gt;speaking&lt;/a&gt; and &lt;a href="https://www.thekimmykola.dev/mentoring"&gt;mentoring&lt;/a&gt; work. However, I still wanted to keep on being an active Software Engineer, so the role was a great blend for me.&lt;/p&gt;

&lt;p&gt;🙌 I applied for the role, did my 2-minute elevator pitch video, had my interviews and landed the job! :)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-do-you-do-as-a-software-engineer-amp-tech-coach"&gt;
  &lt;/a&gt;
  What do you do as a Software Engineer &amp;amp; Tech Coach?
&lt;/h2&gt;

&lt;p&gt;It’s been just over a month since I started my role as a Software Engineer &amp;amp; Tech Coach at &lt;a href="https://www.techreturners.com/"&gt;Tech Returners&lt;/a&gt; - whoop whoop! :) It’s a hybrid role which means I get to do tech coaching and software engineering.&lt;/p&gt;

&lt;p&gt;As a Tech Coach, I help to deliver programmes to upskill individuals at mid-senior levels in technology. Since learners on the programme have prior tech experience, it means I have the opportunity to explore tech concepts in a bit more depth. I’m currently leading sessions, helping with seminars on tech topics, having 1:1s with learners/pair programming with them, recording short videos and providing detailed code review feedback. I onboarded remotely and went straight into all the action. By Day 3, I was already delivering some sessions!&lt;/p&gt;

&lt;p&gt;💜 I remember my first week watching in awe as the other Tech Coaches, James, Ellie and Heather did their thing! They conducted their roles with care, precision and best practice; I honestly wondered why people hadn’t heard of &lt;a href="https://www.techreturners.com/"&gt;Tech Returners&lt;/a&gt; before.&lt;/p&gt;

&lt;p&gt;One of my goals is to design and develop a 5-star curriculum to really innovate tech education.&lt;/p&gt;

&lt;p&gt;As a Software Engineer, I’m working on internal projects across the full software development lifecycle. There’s a project I’m working on which is totally brand new, a great chance for me to be involved with a product from scratch.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-do-you-go-about-teaching-technical-concepts-what-techniques-do-you-use"&gt;
  &lt;/a&gt;
  How do you go about teaching technical concepts? What techniques do you use?
&lt;/h2&gt;

&lt;p&gt;👩🏻‍💻 I use plenty of visualisations&lt;/p&gt;

&lt;p&gt;👩🏻‍💻 I explain tech concepts using analogies and relate them to real-life things&lt;/p&gt;

&lt;p&gt;👩🏻‍💻 I record short videos/screen recordings to walkthrough tricky technical concepts, provide thorough code review feedback and help with debugging strategies&lt;/p&gt;

&lt;p&gt;👩🏻‍💻 I conduct 1:1 and group video calls to host sessions, webinars and provide technical and wellbeing support&lt;/p&gt;

&lt;p&gt;👩🏻‍💻 I try to start from the core principles and break down technical jargon as much as I can to make it sound less daunting. Some technologies like git version control use scary words which create a barrier to learning; even though the technology can be very powerful.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-do-you-balance-learning-amp-coaching"&gt;
  &lt;/a&gt;
  How do you balance learning &amp;amp; coaching?
&lt;/h2&gt;

&lt;p&gt;I’m currently helping to deliver and evolve programmes to upskill individuals at mid-senior levels in technology. This means I am also expanding my software skills on an exciting and refreshing tech stack with front-end web technologies (HTML, CSS, JavaScript, React), cloud technologies (Amazon Web Services &amp;amp; Google Cloud), DevOps and Infrastructure-as-Code with Terraform and Node.js for the backend.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thats-a-lot-of-technologies-how-can-you-keep-up"&gt;
  &lt;/a&gt;
  That’s a lot of technologies! How can you keep up?
&lt;/h3&gt;

&lt;p&gt;I would say I’m aiming for a T-shaped skillset. This means I have deep expertise in few technologies with supporting, but less-developed skills in others. For example, I am more backend/cloud focused with my primary language being C# and secondary being JavaScript; but if I get asked a question about React components and how to test components, though that’s not my area of expertise, I’m able to conduct some research, put the pieces together or reach out to other tech coaches to put technical recommendation together. &lt;/p&gt;

&lt;p&gt;Over time, I develop a skill for spotting patterns in code quickly whatever the tech stack/languages used. Learners think I do some magic! The reality is, I don’t, it’s patterns I see again and again which helps me to spot things quickly.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#developing-myself-while-teaching-others"&gt;
  &lt;/a&gt;
  Developing myself while teaching others
&lt;/h3&gt;

&lt;p&gt;I listened to the egghead.io developer chats podcast episode featuring Ali Spittel on &lt;a href="https://open.spotify.com/episode/3ht64W3jQmd1YKrN60NpgB"&gt;Developing Yourself While Teaching Others&lt;/a&gt; and I found so much inspiration from Ali Spittel’s journey.&lt;/p&gt;

&lt;p&gt;Through going through the cycle of learning &amp;amp; coaching, I found myself solidifying my understanding of tech concepts and technologies at a faster rate than if I were to learn without teaching others. Before being a Tech Coach, I would become impatient and skip over a tech concept quickly just to ‘make things work’; I am now focusing deeper and with higher precision with my learning to enable me to provide the best technical coaching. &lt;/p&gt;

&lt;p&gt;Since I’m not writing production code as often, I set some time aside (25 mins to 1 hour) in the morning before my work commitments to develop myself by building my own projects, practicing my coding skills or researching technical concepts. I don’t code on the weekends and in the evenings after 6pm because I find it’s important to have some time off. I’m trying to learn how to be a more effective and efficient learner every day. I also repeat technical concepts again and again, rather than moving on too quickly.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-do-you-enjoy-most-about-being-a-software-engineer-amp-tech-coach"&gt;
  &lt;/a&gt;
  What do you enjoy most about being a Software Engineer &amp;amp; Tech Coach?
&lt;/h2&gt;

&lt;p&gt;I love seeing others learn and grow in their technical skills and confidence. It’s not just about the technical journey, but the human one too. &lt;/p&gt;

&lt;p&gt;I also really like the challenge of finding new ways to explain technical concepts and technologies in digestible ways. I like the feeling I get when I get asked a question from the learners and I have the opportunity to go in and explore for myself.&lt;/p&gt;

&lt;p&gt;I like pair programming and mob programming with the other Software Engineers &amp;amp; Tech Coaches so we can all learn together and continue to innovate tech education.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-would-you-say-are-the-most-challenging-aspects-of-your-role"&gt;
  &lt;/a&gt;
  What would you say are the most challenging aspects of your role?
&lt;/h2&gt;

&lt;p&gt;From a technical standpoint, there's times where I doubt myself and my abilities and I start to think: “What if I get caught out?” “What if I get asked a question and I don’t have a clue how to answer it yet?” “Surely, I’m the tech coach and I should know everything right?” I always have to remind myself about my T-shaped skillset and that I don’t have to be an expert in everything.&lt;/p&gt;

&lt;p&gt;From an emotional standpoint, I have a duty of care for my learners, which means I provide support from a wellbeing standpoint and ensuring I listen to my learners and help learners find ways to move forward and reflect themselves. Therefore, I have to be more disciplined with the way I use my time more than ever, so that I can focus on providing the best support possible; whilst also making sure I take care of myself and prioritise my own time for my learning before I can support others.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-are-you-continuing-to-develop-yourself-whats-in-store-for-the-future"&gt;
  &lt;/a&gt;
  How are you continuing to develop yourself? What’s in store for the future?
&lt;/h2&gt;

&lt;p&gt;For my T-shaped skillset, I decided that I would focus on C# as my primary language and JavaScript as my secondary. In terms of tech stack, I’m focusing on the backend such as .NET and Node.js. I’m not a specialist in HTML, CSS and React, though I’m able to work with it as best as I can.&lt;/p&gt;

&lt;p&gt;I love creating content, designing, developing and innovating tech education, so would love to continue to create workshops for the community and do some public engagements around technology, such as my most recent collaboration with &lt;a href="https://www.thekimmykola.dev/teaching-workshops"&gt;The National Museum of Computing&lt;/a&gt; and the &lt;a href="https://www.thekimmykola.dev/teaching-workshops"&gt;Codebar Festival&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#thanks-for-reading-"&gt;
  &lt;/a&gt;
  Thanks for reading! :)
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#who-are-you-kim"&gt;
  &lt;/a&gt;
  Who are you Kim?
&lt;/h2&gt;

&lt;p&gt;My &lt;a href="https://www.thekimmykola.dev/"&gt;website&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;💜 I write C# and JavaScript code!&lt;/p&gt;

&lt;p&gt;👩🏻‍💻I’m focusing on C# and .NET&lt;/p&gt;

&lt;p&gt;👩🏻‍💻I’m learning JavaScript, Node.js, HTML, CSS, React&lt;/p&gt;

&lt;p&gt;👾 I use C# to build small games on Unity just for fun&lt;/p&gt;

</description>
      <category>career</category>
      <category>learning</category>
      <category>community</category>
      <category>teachingcode</category>
    </item>
    <item>
      <title>Read data from Gmail using Node JS</title>
      <author>Unnati Bamania</author>
      <pubDate>Sun, 11 Apr 2021 10:41:35 +0000</pubDate>
      <link>https://dev.to/commentme/read-data-from-gmail-using-node-js-1nke</link>
      <guid>https://dev.to/commentme/read-data-from-gmail-using-node-js-1nke</guid>
      <description>&lt;p&gt;I've struggled a lot with this topic. Finally, after a lot of searches and referring documentation, I'm finally writing this article. I hope it helps everyone. In this article, the code will be written in NodeJS. This app will include 2 parts, the first is creating and setting up a project on google console and the next is the coding part.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-creating-a-project-on-google-console"&gt;
  &lt;/a&gt;
  1) Creating a project on Google Console
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P2Giqq6n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7fpkslwr3fn40ibyyxyh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P2Giqq6n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7fpkslwr3fn40ibyyxyh.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Open &lt;a href="https://console.developers.google.com/"&gt;https://console.developers.google.com/&lt;/a&gt; website and you need to create a project. On the top left corner, there will be a list of your previous projects or option &lt;strong&gt;select a project&lt;/strong&gt;. &lt;br&gt;
A modal will pop up. Select on the option &lt;strong&gt;NEW PROJECT&lt;/strong&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;select -&amp;gt; NEW PROJECT&lt;/strong&gt;
Enter a project name and create the project
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PuCuCLna--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ya8ehrvc4yuosfschls0.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#2-enable-gmail-api"&gt;
  &lt;/a&gt;
  2) Enable Gmail API
&lt;/h2&gt;

&lt;p&gt;Ensure that you've selected that project, then in the search box search Gmail API. Enable Gmail API.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H8LmUao8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tpgvh8lqfeu0eldgcqve.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H8LmUao8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tpgvh8lqfeu0eldgcqve.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#3-configure-project"&gt;
  &lt;/a&gt;
  3) Configure Project
&lt;/h2&gt;

&lt;p&gt;You need credentials but before creating credentials you need to configure credentials. On the left-hand side, you'll find OAuth consent Screen. Click on it. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;User Type -&amp;gt; External&lt;/strong&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kq4f3rU4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p75cbdhv49hexby5pldd.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;Enter app information ie, app name, supporting email, developer contact information.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6rQi1rVG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oyqauv7o3enn7mggn9b2.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;Scope page &lt;strong&gt;save and continue&lt;/strong&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z_CwRgE2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zud98qzfjizmbpqykvkm.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Test User Tab: Click on add user and you can add up to 100 emails. Add your email for testing. Save and continue.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DHbj-O0---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ifh4658cph2rrsybtxhm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DHbj-O0---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ifh4658cph2rrsybtxhm.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6JgT2J2U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n7x3nnhkvaw9wy93n6gy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6JgT2J2U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n7x3nnhkvaw9wy93n6gy.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Finally, after setting up, click on Credentials.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#4-create-credentials"&gt;
  &lt;/a&gt;
  4) Create Credentials
&lt;/h2&gt;

&lt;p&gt;After landing on Credentials, on the top click on &lt;strong&gt;CREATE CREDENTIALS&lt;/strong&gt;. Click on OAuth client ID. Select your application type. As we're using NodeJS, it is a web application. Add URI's as&lt;br&gt;
&lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt;. Create and you'll get your credentials.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GU60F9EZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nd0ph24wfrp8wqoecitd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GU60F9EZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nd0ph24wfrp8wqoecitd.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--00_trvuS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1lt42zg4enr91vyki5n3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--00_trvuS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1lt42zg4enr91vyki5n3.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PdQgUcGD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6ih3284g7mbo692o84nl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PdQgUcGD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6ih3284g7mbo692o84nl.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now comes part two, the coding part&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#5-code-set-up"&gt;
  &lt;/a&gt;
  5) Code set up:
&lt;/h2&gt;

&lt;p&gt;Go to this page, &lt;a href="https://developers.google.com/gmail/api/quickstart/nodejs"&gt;Node JS quickstart&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Copy Paste the sample code and then copy-paste in a file named index.js. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5FVTH-Dd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ti4ty3pvm2vww9yjqdmb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5FVTH-Dd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ti4ty3pvm2vww9yjqdmb.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In the folder, where you created this file, the terminal add the command&lt;br&gt;
&lt;br&gt;
&lt;code&gt;npm init&lt;/code&gt;&lt;br&gt;
&lt;br&gt;
and initializes&lt;br&gt;
&lt;br&gt;
&lt;code&gt;package.json&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You need to install some dependencies with the command&lt;br&gt;
&lt;br&gt;
&lt;code&gt;npm i googleapis cheerio mailparser js-base64 open&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Go to google developers console in your project. Navigate to the credentials part. In OAuth 2.0 Client IDs, you'll find a small download icon, download your credentials file from there and add to your folder where you've created this project. Name this file as&lt;br&gt;
&lt;br&gt;
&lt;code&gt;credentials.json&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Run your code in your terminal. When you run for the first time, you'll get something like this&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Authorize this app by visiting this url: https://accounts.google.com/o/oauth2/v2/auth?access_type=offline&amp;amp;scope=https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fgmail.readonly&amp;amp;response_type=code&amp;amp;client_id=479559853488-050lms0ffusprdhh938s954q0s36kg4i.apps.googleusercontent.com&amp;amp;redirect_uri=urn%3Aietf%3Awg%3Aoauth%3A2.0%3Aoob
‍Enter the code from that page here:
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Click on that URL and enter the code. &lt;br&gt;
Now, in order to be able to manage the labels of the messages, you need to change the initial scope from &lt;em&gt;gmail.readonly&lt;/em&gt; to &lt;em&gt;gmail.modify&lt;/em&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const SCOPES = ['https://www.googleapis.com/auth/gmail.modify'];
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Delete &lt;strong&gt;token.json&lt;/strong&gt; from your working directory.&lt;/p&gt;

&lt;p&gt;One error that some of you might get. The reference code has &lt;em&gt;credentials.installed&lt;/em&gt; but it should be &lt;em&gt;credentials.web&lt;/em&gt;. When you check the file, &lt;em&gt;credentials.json&lt;/em&gt; you'll find everything is inside &lt;em&gt;web&lt;/em&gt; object. So, if you get that error just check your &lt;em&gt;creddentials.json&lt;/em&gt; file once and replace &lt;em&gt;installed&lt;/em&gt; accordingly.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function authorize(credentials, callback) {
  const {client_secret, client_id, redirect_uris} = credentials.installed;
...
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;If you're facing any other issue regarding app verification then navigate to &lt;a href="https://dev.toverification%20process"&gt;verification process&lt;/a&gt; and follow them.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#6final-output"&gt;
  &lt;/a&gt;
  6)Final Output:
&lt;/h2&gt;

&lt;p&gt;Then, go to the &lt;em&gt;listLabels&lt;/em&gt; function and add the label id in the console log.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;functionlistLabels(auth) {  
  ...      
    labels.forEach((label) =&amp;gt; {        
      console.log(`- ${label.name} : ${label.id}`);      
    });  
  ...}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally, run the application by using the command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm run server
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;&lt;br&gt;
 to authorize the app again and update the access permissions. You should be able to see the label list but now each label with its corresponding id.&lt;/p&gt;

&lt;p&gt;Now, to read mail box,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function listMessages(auth, query){
  query = 'unnatibamania8@gmail.com';
  return new Promise((resolve, reject) =&amp;gt; {    
    const gmail = google.gmail({version: 'v1', auth});
    gmail.users.messages.list(      
      {        
        userId: 'me',  
        q:query,      
        maxResults:5     
      },            (err, res) =&amp;gt; {        
        if (err) {                    reject(err);          
          return;        
        }        
        if (!res.data.messages) {                    resolve([]);          
          return;        
        }                resolve(res.data);  

                         getMail(res.data.messages[0].id, auth);
      }    
    );  
  })
}


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, the function &lt;em&gt;listMessages&lt;/em&gt; takes 2 parameters auth and query, you can call this function&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;fs.readFile('credentials.json', (err, content) =&amp;gt; {
  if (err) return console.log('Error loading client secret file:', err);
  // Authorize a client with credentials, then call the Gmail API.
  authorize(JSON.parse(content), listMessages);

});

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;after console logging &lt;em&gt;res.data.messages&lt;/em&gt;, you'll get threadId and id. Pass the id into &lt;em&gt;getMail&lt;/em&gt; function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function getMail(msgId, auth){
  console.log(msgId)
  const gmail = google.gmail({version: 'v1', auth});
  //This api call will fetch the mailbody.
  gmail.users.messages.get({
      userId:'me',
      id: msgId ,
  }, (err, res) =&amp;gt; {
    console.log(res.data.labelIds.INBOX)
      if(!err){
        console.log("no error")
          var body = res.data.payload.parts[0].body.data;

          var htmlBody = base64.decode(body.replace(/-/g, '+').replace(/_/g, '/'));
          console.log(htmlBody)
          var mailparser = new Mailparser();

          mailparser.on("end", (err,res) =&amp;gt; {
              console.log("res",res);
          })

          mailparser.on('data', (dat) =&amp;gt; {
              if(dat.type === 'text'){
                  const $ = cheerio.load(dat.textAsHtml);
                  var links = [];
                  var modLinks = [];
                  $('a').each(function(i) {
                      links[i] = $(this).attr('href');
                  });

                  //Regular Expression to filter out an array of urls.
                  var pat = /------[0-9]-[0-9][0-9]/;

                  //A new array modLinks is created which stores the urls.
                  modLinks = links.filter(li =&amp;gt; {
                      if(li.match(pat) !== null){
                          return true;
                      }
                      else{
                          return false;
                      }
                  });
                  console.log(modLinks);

                  //This function is called to open all links in the array.

              }
          })

          mailparser.write(htmlBody);
          mailparser.end();

      }
  });
}


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#final-output"&gt;
  &lt;/a&gt;
  Final Output
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ACAYZ4wc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uq72d5x0sdnuhndzblav.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ACAYZ4wc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uq72d5x0sdnuhndzblav.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Don't read all the messages all together it might crash the application. Hence, I've read only 1 mail at a time. You can just play around with the code and find a lot of other stuff!&lt;br&gt;
I hope this article helps. &lt;/p&gt;

</description>
      <category>node</category>
      <category>webdev</category>
      <category>devops</category>
      <category>javascript</category>
    </item>
    <item>
      <title>PHP 8 Is here! A step in the right direction?</title>
      <author>Paul Isaris</author>
      <pubDate>Sun, 11 Apr 2021 10:15:00 +0000</pubDate>
      <link>https://dev.to/pavlosisaris/php-8-is-here-a-step-in-the-right-direction-41ad</link>
      <guid>https://dev.to/pavlosisaris/php-8-is-here-a-step-in-the-right-direction-41ad</guid>
      <description>&lt;p&gt;post photo by &lt;a href="https://www.pexels.com/"&gt;pexels&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;PHP 8 is finally here!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;PHP 8.0 is a major update of the PHP language.&lt;br&gt;
It contains many new features and optimizations including &lt;strong&gt;named arguments&lt;/strong&gt;, &lt;strong&gt;union types&lt;/strong&gt;, &lt;strong&gt;attributes&lt;/strong&gt;, &lt;strong&gt;constructor property promotion&lt;/strong&gt;, &lt;strong&gt;match expression&lt;/strong&gt;, &lt;strong&gt;nullsafe operator&lt;/strong&gt;, &lt;strong&gt;JIT&lt;/strong&gt;, and improvements in the &lt;strong&gt;type system&lt;/strong&gt;, &lt;strong&gt;error handling&lt;/strong&gt;, and &lt;strong&gt;consistency&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;In this article, we will review all the new features and changes, and share some thoughts about each of the changes, as well as on the roadmap that PHP seems to be carving ahead.&lt;/p&gt;

&lt;p&gt;You can read all about these in the &lt;a href="https://www.php.net/releases/8.0/en.php"&gt;official release announcement&lt;/a&gt; as well.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#new-features"&gt;
  &lt;/a&gt;
  New features
&lt;/h1&gt;
&lt;h2&gt;
  &lt;a href="#named-arguments"&gt;
  &lt;/a&gt;
  Named arguments
&lt;/h2&gt;

&lt;p&gt;In PHP 8, when calling a function, you can omit the non-required arguments, and pass only what is desired.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#named-parameters-example"&gt;
  &lt;/a&gt;
  Named Parameters example
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;my_awesome_function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="nv"&gt;$name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="nv"&gt;$value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;$expires&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="mf"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Let's say now that we want to call this function, but only specify the &lt;code&gt;$name&lt;/code&gt; and &lt;code&gt;$expires&lt;/code&gt; attributes.&lt;/p&gt;

&lt;p&gt;In PHP 7:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="c1"&gt;// calling the function. but we only want to specify $name and $expires&lt;/span&gt;
&lt;span class="nf"&gt;my_awesome_function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'test'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In PHP 8:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="c1"&gt;// calling the function. but we only want to specify $name and $expires&lt;/span&gt;
&lt;span class="nf"&gt;my_awesome_function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'test'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;expires&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#my-thoughts-on-named-parameters"&gt;
  &lt;/a&gt;
  My thoughts on named parameters
&lt;/h3&gt;

&lt;p&gt;This is a nice and handy touch. Many languages nowadays support this kind of method calling.&lt;br&gt;&lt;br&gt;
However, this design can lead to functions that break the &lt;a href="https://en.wikipedia.org/wiki/Single-responsibility_principle"&gt;Single-responsibility_principle&lt;/a&gt;, by resulting in methods that "do too much" by having many parameters. So, as always, use with caution ;-)&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#attributes"&gt;
  &lt;/a&gt;
  Attributes
&lt;/h2&gt;

&lt;p&gt;Attributes are the new kid in the block. It is essentially a configuration language embedded directly into code.&lt;br&gt;&lt;br&gt;
Attributes is a &lt;strong&gt;native PHP syntax&lt;/strong&gt; that offers the ability to add structured, machine-readable metadata information on declarations in code: Classes, methods, functions, parameters, properties, etc.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#attributes-example"&gt;
  &lt;/a&gt;
  Attributes Example
&lt;/h3&gt;

&lt;p&gt;In PHP 7 (With PHPDocs):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;BookController&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="cd"&gt;/**
     * @Route("/api/books/{id}", methods={"GET"})
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="cm"&gt;/* ... */&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In PHP 8:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;BookController&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;#[Route("/api/books/{id}", methods: ["GET"])]&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="cm"&gt;/* ... */&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#constructor-property-promotion"&gt;
  &lt;/a&gt;
  Constructor property promotion
&lt;/h2&gt;

&lt;p&gt;The basic idea is simple: ditch all the class properties and the variable assignments, and prefix the constructor parameters with &lt;code&gt;public&lt;/code&gt;, &lt;code&gt;protected&lt;/code&gt;, or &lt;code&gt;private&lt;/code&gt;. PHP will take that new syntax, and transform it to normal syntax under the hood, before actually executing the code.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#constructor-properties-example"&gt;
  &lt;/a&gt;
  Constructor properties example
&lt;/h3&gt;

&lt;p&gt;In PHP 7:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Point&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="nv"&gt;$x&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="nv"&gt;$y&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="nv"&gt;$z&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;__construct&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="nv"&gt;$x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="nv"&gt;$y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="nv"&gt;$z&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.0&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$x&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$y&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$z&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In PHP 8:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Point&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;__construct&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="kt"&gt;public&lt;/span&gt; &lt;span class="n"&gt;float&lt;/span&gt; &lt;span class="nv"&gt;$x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="kt"&gt;public&lt;/span&gt; &lt;span class="n"&gt;float&lt;/span&gt; &lt;span class="nv"&gt;$y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="kt"&gt;public&lt;/span&gt; &lt;span class="n"&gt;float&lt;/span&gt; &lt;span class="nv"&gt;$z&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#my-thoughts-on-constructor-property-promotion"&gt;
  &lt;/a&gt;
  My thoughts on Constructor property promotion
&lt;/h3&gt;

&lt;p&gt;Constructor property promotion reduces the amount of code that is required, leading to smaller and cleaner classes.&lt;br&gt;&lt;br&gt;
If you still want to have class properties that are not part of the constructor parameters, you can declare them in the old way, and instantiate them (or nor), inside the constructor.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#union-types"&gt;
  &lt;/a&gt;
  Union types
&lt;/h2&gt;

&lt;p&gt;Union types are a way of declaring &lt;strong&gt;multiple types&lt;/strong&gt; for a property/variable.&lt;br&gt;
So if a function parameter can take either &lt;code&gt;string&lt;/code&gt; or &lt;code&gt;int&lt;/code&gt; values, you can now declare it as &lt;code&gt;string|int&lt;/code&gt;.&lt;br&gt;&lt;br&gt;
This is something that you could not do in PHP 7, only using PHPDocs (so it was not part of the PHP core libraries, but existed in the PHPDocs).&lt;br&gt;&lt;br&gt;
Instead of PHPDoc annotations for a combination of types, you can use native union type declarations that are validated at &lt;strong&gt;runtime&lt;/strong&gt;.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#union-types-example"&gt;
  &lt;/a&gt;
  Union types example
&lt;/h3&gt;

&lt;p&gt;In PHP 7:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Book&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="cd"&gt;/** @var int|float */&lt;/span&gt;
  &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="nv"&gt;$price&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="cd"&gt;/**
   * @param float|int $price
   */&lt;/span&gt;
  &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;__construct&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$price&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;price&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$price&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Book&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'test'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// OK at runtime&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In PHP 8, since Union types are part of the PHP runtime library and compiler, this will throw an error:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Book&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;__construct&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="kt"&gt;private&lt;/span&gt; &lt;span class="n"&gt;int&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;float&lt;/span&gt; &lt;span class="nv"&gt;$price&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Book&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'test'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// TypeError&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#my-thoughts-on-union-types"&gt;
  &lt;/a&gt;
  My thoughts on Union types
&lt;/h3&gt;

&lt;p&gt;As a &lt;a href="https://en.wikipedia.org/wiki/SOLID"&gt;SOLID Principles&lt;/a&gt; advocate, I am not a big fan of this change.&lt;br&gt;&lt;br&gt;
I can understand that it can help speed things up and adds a level of control over my code, but I believe that if your code gets &lt;strong&gt;often&lt;/strong&gt; to the point that you need to use union type for a property, then there is definitely something you need to think about.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#match-expression"&gt;
  &lt;/a&gt;
  Match expression
&lt;/h2&gt;

&lt;p&gt;Match expression syntax is one of the nicest features in PHP 8 that improves the &lt;code&gt;switch&lt;/code&gt; syntax in multiple ways.&lt;/p&gt;

&lt;p&gt;Let's start by comparing the two. Here's a classic &lt;code&gt;switch&lt;/code&gt; example (example from &lt;a href="https://stitcher.io/blog/php-8-match-or-switch"&gt;this&lt;/a&gt; article):&lt;/p&gt;

&lt;p&gt;In PHP 7 (using &lt;code&gt;switch&lt;/code&gt;):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$statusCode&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="nv"&gt;$message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;400&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="nv"&gt;$message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'not found'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="nv"&gt;$message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'server error'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="nv"&gt;$message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'unknown status code'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In PHP 8 (using &lt;code&gt;match&lt;/code&gt;):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nv"&gt;$message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;match&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$statusCode&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;300&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mi"&gt;400&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'not found'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mi"&gt;500&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'server error'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'unknown status code'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#my-thoughts-on-the-match-expression-feature"&gt;
  &lt;/a&gt;
  My thoughts on the match expression feature
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;match&lt;/code&gt; will do &lt;strong&gt;strict&lt;/strong&gt; type checks instead of &lt;strong&gt;loose&lt;/strong&gt; ones. It's like using &lt;code&gt;===&lt;/code&gt; instead of &lt;code&gt;==&lt;/code&gt;.&lt;br&gt;
In my opinion, this is a good chance, since it makes the code stricter and more expressive.&lt;br&gt;&lt;br&gt;
Also, If you forget to check for a value, and when there's no default arm specified, PHP will throw an &lt;code&gt;UnhandledMatchError&lt;/code&gt; exception.&lt;br&gt;&lt;br&gt;
Again more strictness, but it will prevent subtle bugs from going unnoticed.&lt;br&gt;&lt;br&gt;
To fix this, you should wrap the &lt;code&gt;match&lt;/code&gt; expression inside a separate method, and deal with the &lt;code&gt;UnhandledMatchError&lt;/code&gt; exception there, by returning a default value.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#nullsafe-operator"&gt;
  &lt;/a&gt;
  Nullsafe operator
&lt;/h2&gt;

&lt;p&gt;Instead of null check conditions, you can now use a chain of calls with the new nullsafe operator.&lt;br&gt;&lt;br&gt;
When the evaluation of one element in the chain fails, the execution of the entire chain aborts, and the entire chain evaluates to null.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#example-of-nullsafe-operator"&gt;
  &lt;/a&gt;
  Example of nullsafe operator
&lt;/h3&gt;

&lt;p&gt;In PHP 7:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nv"&gt;$country&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$book&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nv"&gt;$author&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$book&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$author&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$address&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$author&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getAddress&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$address&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nv"&gt;$country&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$address&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;country&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In PHP 8:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nv"&gt;$country&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$book&lt;/span&gt;&lt;span class="o"&gt;?-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="o"&gt;?-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getAddress&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;?-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;country&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#my-thoughts-on-nullsafe-operator"&gt;
  &lt;/a&gt;
  My thoughts on nullsafe operator
&lt;/h3&gt;

&lt;p&gt;I have mixed feelings about this.&lt;br&gt;&lt;br&gt;
Of course, it is a handy touch since it leads to less and definitely more readable code.&lt;br&gt;&lt;br&gt;
But again, by looking at the big picture, why would our code even &lt;strong&gt;&lt;em&gt;need to check so deeply and greedily?&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
Should our code have Business rules that restrain such behavior?&lt;br&gt;
So, again a handy new feature, but use with caution...&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#saner-string-to-number-comparisons"&gt;
  &lt;/a&gt;
  Saner string to number comparisons
&lt;/h2&gt;

&lt;p&gt;When comparing to a numeric string, PHP 8 uses a number comparison. Otherwise, it converts the number to a string and uses a string comparison.&lt;/p&gt;

&lt;p&gt;In PHP 7:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;'foobar'&lt;/span&gt; &lt;span class="c1"&gt;// true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In PHP 8:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;'foobar'&lt;/span&gt; &lt;span class="c1"&gt;// false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is definitely a step in the right direction, but only given that PHP is trying to be a stricter language.&lt;br&gt;&lt;br&gt;
When we say equals, we should mean &lt;strong&gt;equals&lt;/strong&gt;!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#my-overall-thoughts-on-php-8"&gt;
  &lt;/a&gt;
  My overall thoughts on PHP 8
&lt;/h2&gt;

&lt;p&gt;PHP is undoubtedly trying to become a stricter, more "serious" language.&lt;br&gt;&lt;br&gt;
As a big fan of &lt;a href="https://en.wikipedia.org/wiki/Object-oriented_programming"&gt;OOP&lt;/a&gt; and &lt;a href="https://en.wikipedia.org/wiki/SOLID"&gt;SOLID Principles&lt;/a&gt; principles, I am totally happy and on board with this direction.&lt;br&gt;&lt;br&gt;
Also, as you will see in the upgrade guide, PHP 8 is generally backwards-friendly, since it does not break a lot of functionality from the previous major releases. Cool!  &lt;/p&gt;

&lt;p&gt;So let's try to use all the new features of PHP as consciously as possible, and build awesome things!&lt;/p&gt;

&lt;p&gt;If you are content with the new PHP version, take a look at the &lt;a href="https://www.php.net/manual/en/migration80.php"&gt;migration guide&lt;/a&gt;.&lt;br&gt;&lt;br&gt;
What are your thoughts on PHP 8?&lt;/p&gt;

</description>
      <category>php</category>
      <category>webdev</category>
      <category>laravel</category>
      <category>discuss</category>
    </item>
    <item>
      <title>Simple Static site/blog search in 14 Lines of JavaScript</title>
      <author>Christian</author>
      <pubDate>Sun, 11 Apr 2021 10:11:08 +0000</pubDate>
      <link>https://dev.to/christianfei/simple-static-site-blog-search-in-14-lines-of-javascript-1nhl</link>
      <guid>https://dev.to/christianfei/simple-static-site-blog-search-in-14-lines-of-javascript-1nhl</guid>
      <description>&lt;p&gt;&lt;strong&gt;Originally posted on &lt;a href="https://cri.dev/posts/2021-04-06-simple-static-site-blog-search-javascript-client/"&gt;cri.dev&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is my approach to a purely client side search feature for static blogs and sites.&lt;/p&gt;

&lt;p&gt;I am currently using this under &lt;a href="https://cri.dev/posts"&gt;/posts&lt;/a&gt; to let readers search through my blog posts.&lt;/p&gt;

&lt;p&gt;Read more below about how to integrate it in your site.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#backstory"&gt;
  &lt;/a&gt;
  Backstory
&lt;/h2&gt;

&lt;p&gt;In 2015 I did a similar thing for Jekyll sites, namely &lt;a href="https://github.com/christian-fei/Simple-Jekyll-Search"&gt;Simple-Jekyll-Search&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It's gotten quite a bit of attention and merged various Pull-Requests (64!) from others.&lt;/p&gt;

&lt;p&gt;I ditched Jekyll a few years ago, to use a JavaScript based static site generator:&lt;/p&gt;

&lt;p&gt;My home-made static site generator &lt;a href="https://github.com/christian-fei/devblog"&gt;devblog&lt;/a&gt;, and settled with &lt;a href="https://www.11ty.dev/"&gt;Eleventy&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-it-works"&gt;
  &lt;/a&gt;
  How it works
&lt;/h2&gt;

&lt;p&gt;Under &lt;a href="https://cri.dev/posts"&gt;/posts&lt;/a&gt; I render the full list of blog posts.&lt;/p&gt;

&lt;p&gt;(Not with the full content but with an &lt;em&gt;excerpt/description&lt;/em&gt;.)&lt;/p&gt;

&lt;p&gt;In my Nunjucks template I render the posts like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"searchable"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;autofocus&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"🔍 Search posts"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  {% set postslist = collections.post | reverse %}
  {% for post in postslist %}
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"searchable-item"&lt;/span&gt; &lt;span class="na"&gt;data-search=&lt;/span&gt;&lt;span class="s"&gt;"{{ post.data.title | escape }} {{ post.data.tags | json | escape }}"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    ...
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  {% endfor %}
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The idea is the following:&lt;/p&gt;

&lt;p&gt;Within a &lt;code&gt;.searchable&lt;/code&gt; element&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;look for a &lt;code&gt;input&lt;/code&gt; element and attach an event listener to it (&lt;code&gt;keyup&lt;/code&gt; event)&lt;/li&gt;
&lt;li&gt;when searching, parse all &lt;code&gt;.searchable-item&lt;/code&gt;s &lt;code&gt;data-search&lt;/code&gt; attribute and test a RegExp on it&lt;/li&gt;
&lt;li&gt;make items that match visible, and make others disappear&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#code"&gt;
  &lt;/a&gt;
  Code
&lt;/h2&gt;

&lt;p&gt;This is the full code for the search functionality on this blog:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;search&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;;[...&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelectorAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.searchable&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)].&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;makeSearchable&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;makeSearchable&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$searchable&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;$searchableItems&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[...&lt;/span&gt;&lt;span class="nx"&gt;$searchable&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelectorAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.searchable-item&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;$search&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;$searchable&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;input&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;$search&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;keyup&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;$searchableItems&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$el&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;$el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;data-search&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;$el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerText&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;show&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;RegExp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;i&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;$el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;display&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;show&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;none&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
      &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;})()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#how-to-integrate-it-on-your-site"&gt;
  &lt;/a&gt;
  How to integrate it on your site
&lt;/h2&gt;

&lt;p&gt;Grabbed the JavaScript above and put it in a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag.&lt;/p&gt;

&lt;p&gt;Define a minimal markup to enable the search functionality:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"searchable"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;autofocus&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"🔍 Search posts"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="c"&gt;&amp;lt;!-- Loop through your blog posts --&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"searchable-item"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  ...
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Make sure you have the wrapper element &lt;code&gt;.searchable&lt;/code&gt;, containing an input field and your post items with the &lt;code&gt;.searchable-item&lt;/code&gt; class.&lt;/p&gt;

&lt;p&gt;By default the search function will match the blog posts to filter with the element's &lt;code&gt;innerText&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;Optionally, apply a &lt;code&gt;data-search&lt;/code&gt; attribute to each &lt;code&gt;.searchable-item&lt;/code&gt; and set the value of your blog post title, tags, short description etc.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#full-example"&gt;
  &lt;/a&gt;
  Full example
&lt;/h2&gt;

&lt;p&gt;Check out a &lt;a href="https://codepen.io/christian-fei/pen/abpyERy"&gt;full example on CodePen&lt;/a&gt; if you need to better understand how to structure your markup.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Originally posted on &lt;a href="https://cri.dev/posts/2021-04-06-simple-static-site-blog-search-javascript-client/"&gt;cri.dev&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>blogging</category>
      <category>search</category>
    </item>
    <item>
      <title>Steps 🏃‍♀️ To Km + Calories burned CONVERTER APP</title>
      <author>Bek Brace</author>
      <pubDate>Sun, 11 Apr 2021 09:41:54 +0000</pubDate>
      <link>https://dev.to/bekbrace/steps-to-km-calories-burned-converter-app-4lk</link>
      <guid>https://dev.to/bekbrace/steps-to-km-calories-burned-converter-app-4lk</guid>
      <description>&lt;p&gt;My girlfriend and I walk each Saturday from 11 AM till 7 PM and sometimes 8 PM; this also includes shopping and going back home arranging products then getting out again to continue our walk.&lt;/p&gt;

&lt;p&gt;By the end of the day, I ask her "How many KM have we walked, today?", so she looks to her iPhone app and answers me by stating a figure in "Steps" (22,234 steps), a measurement which I have never understood, and this was so frustrating because I wanted to know the actual number of Kilometers I have walked during the day, a proper metric measurement.&lt;/p&gt;

&lt;p&gt;So I decided to solve this problem, the first thing I did is that I  looked up the average rate of conversion between steps/KM and even calories burned per KM and decided to design a simple application with just HTML, CSS and JavaScript : &lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/zhfjbJv42xA"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;With this simple app, I can get the proper number of KM we have walked and how much calories we've burned in that day 🙂&lt;/p&gt;

&lt;p&gt;If you would like to use the application, I've deployed it and here's the link: &lt;br&gt;
&lt;a href="https://svetka.netlify.app"&gt;https://svetka.netlify.app&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the source code:&lt;br&gt;
&lt;a href="https://github.com/BekBrace/steps_km_calorie_Converter"&gt;https://github.com/BekBrace/steps_km_calorie_Converter&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Stay safe everyone.&lt;br&gt;
Cheers,&lt;br&gt;
Bek&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>html</category>
      <category>css</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Awesome 404 Page Templates for your Websites </title>
      <author>Rithik Samanthula</author>
      <pubDate>Sun, 11 Apr 2021 08:48:42 +0000</pubDate>
      <link>https://dev.to/code2rithik/awesome-404-page-templates-for-your-websites-33jc</link>
      <guid>https://dev.to/code2rithik/awesome-404-page-templates-for-your-websites-33jc</guid>
      <description>&lt;p&gt;There are different HTTP response status codes.&lt;/p&gt;

&lt;p&gt;Especially, the 404 one.&lt;/p&gt;

&lt;p&gt;Now, we wouldn't want our 404 pages to look dull right?&lt;/p&gt;

&lt;p&gt;So, here are some cool 404-page templates for your website:&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#1-neon-404-page"&gt;
  &lt;/a&gt;
  1. Neon 404 Page
&lt;/h1&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/code2rithik/embed/XWpVvYL?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Compatible browsers: Chrome, Edge, Firefox, Opera, Safari&lt;/p&gt;

&lt;p&gt;Responsive: Yes&lt;/p&gt;

&lt;p&gt;Dependencies: None&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#2-flashlight-404-page"&gt;
  &lt;/a&gt;
  2. Flashlight 404 Page
&lt;/h1&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/code2rithik/embed/wvgpVQm?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Compatible browsers: Chrome, Edge, Firefox, Opera, Safari&lt;/p&gt;

&lt;p&gt;Responsive: Yes&lt;/p&gt;

&lt;p&gt;Dependencies: jQuery.js&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#3-space-404-page"&gt;
  &lt;/a&gt;
  3. Space 404 Page
&lt;/h1&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/code2rithik/embed/LYxewMN?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Compatible browsers: Chrome, Edge, Firefox, Opera, Safari&lt;/p&gt;

&lt;p&gt;Responsive: Yes&lt;/p&gt;

&lt;p&gt;Dependencies: jQuery.js&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#4-console-style-404-page"&gt;
  &lt;/a&gt;
  4. Console Style 404 Page
&lt;/h1&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/code2rithik/embed/PoWQYGa?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Compatible browsers: Chrome, Edge, Firefox, Opera, Safari&lt;/p&gt;

&lt;p&gt;Dependencies: None&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#5-sassy-404-ui-study"&gt;
  &lt;/a&gt;
  5. Sassy 404 UI Study
&lt;/h1&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/code2rithik/embed/MWJQgwN?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Compatible browsers: Chrome, Edge, Firefox, Opera, Safari&lt;/p&gt;

&lt;p&gt;Responsive: Yes&lt;/p&gt;

&lt;p&gt;Dependencies: None&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#6-404-makes-bear-sad"&gt;
  &lt;/a&gt;
  6. 404 Makes Bear Sad
&lt;/h1&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/code2rithik/embed/BapYBoP?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Compatible browsers: Chrome, Edge, Firefox, Opera, Safari&lt;/p&gt;

&lt;p&gt;Responsive: Yes&lt;/p&gt;

&lt;p&gt;Dependencies: React.JS, React-dom.JS&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#7-space-404-page-2"&gt;
  &lt;/a&gt;
  7. Space 404 Page 2
&lt;/h1&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/code2rithik/embed/vYgdBLe?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Compatible browsers: Chrome, Edge, Firefox, Opera, Safari&lt;/p&gt;

&lt;p&gt;Responsive: Yes&lt;/p&gt;

&lt;p&gt;Dependencies: bootstrap.css, gsap.js&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#8-404-scary-investigation"&gt;
  &lt;/a&gt;
  8. 404 Scary Investigation
&lt;/h1&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/code2rithik/embed/NWdyKNE?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Compatible browsers: Chrome, Edge, Firefox, Opera, Safari&lt;/p&gt;

&lt;p&gt;Responsive: Yes&lt;/p&gt;

&lt;p&gt;Dependencies: anime.js&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#9-monument-valley-inspiration-404-page"&gt;
  &lt;/a&gt;
  9. Monument Valley Inspiration 404 Page
&lt;/h1&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/code2rithik/embed/YzNeKWr?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Compatible browsers: Chrome, Edge, Firefox, Opera, Safari&lt;/p&gt;

&lt;p&gt;Dependencies: None&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#10-maze-404-page"&gt;
  &lt;/a&gt;
  10. Maze 404 Page
&lt;/h1&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/code2rithik/embed/PoWQYoR?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Compatible browsers: Chrome, Edge, Firefox, Opera, Safari&lt;/p&gt;

&lt;p&gt;Dependencies: jQuery.js&lt;/p&gt;

&lt;p&gt;------------------------------x----------------------------&lt;/p&gt;

&lt;p&gt;Thank You for Reading this Blog,&lt;/p&gt;

&lt;p&gt;If you liked it, do share it with your friends and remember...&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#keep-coding-yall"&gt;
  &lt;/a&gt;
  Keep Coding Y'All 👨🏻‍💻
&lt;/h1&gt;

</description>
      <category>404</category>
      <category>html</category>
      <category>scss</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Recently I decided to become a freelancer</title>
      <author>Stefan Ionel</author>
      <pubDate>Sun, 11 Apr 2021 08:37:52 +0000</pubDate>
      <link>https://dev.to/istef94/recently-i-decided-to-become-a-freelancer-2bhi</link>
      <guid>https://dev.to/istef94/recently-i-decided-to-become-a-freelancer-2bhi</guid>
      <description>&lt;p&gt;I started my software developer career in 2016 as an employee in corporations. I learned a lot and I had very cool colleagues. I started working as a game developer in Unity3D.&lt;/p&gt;

&lt;p&gt;After a year and 3 months I decided to change the corporation and started working for a bank in Italy, Milan. I worked in this bank for almost 1 year and a few months. The experience was very beautiful because I was working in a foreign country and I was starting to travel.&lt;/p&gt;

&lt;p&gt;After this experience I changed the corporation again and started working in the financial field. I work with Microsoft .net technologies on the backend and API integration side. &lt;/p&gt;

&lt;p&gt;The financial project was very complex. It was a web application from which I learned a lot. I had almost 5 years of experience in the field, but I didn't seem to be fully satisfied.&lt;/p&gt;

&lt;p&gt;Something was missing, but I didn't know what. I lacked freedom and independence.&lt;/p&gt;

&lt;p&gt;In 2021 I decided to try to find clients and become a freelancer.&lt;br&gt;
I started looking for projects on linkedin, upwork, everywhere. Finding clients becomes a real challenge for me.&lt;/p&gt;

&lt;p&gt;In the end, I found my first clients with the help of closed freelancing platforms like: &lt;a href="https://www.wearehiring.top/"&gt;We are hiring&lt;/a&gt; and &lt;a href="https://www.toptal.com/"&gt;TopTal&lt;/a&gt;    &lt;/p&gt;

&lt;p&gt;At this moment I benefit from all the advantages of this lifestyle and my income has tripled.&lt;/p&gt;

&lt;p&gt;How did you manage to find your first clients as a freelancer?&lt;/p&gt;

</description>
      <category>career</category>
      <category>csharp</category>
      <category>react</category>
      <category>javascript</category>
    </item>
  </channel>
</rss>
