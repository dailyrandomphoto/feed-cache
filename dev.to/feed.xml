<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>ü§î What Would You Change About this Website?</title>
      <author>William McGonagle</author>
      <pubDate>Thu, 06 Jan 2022 02:16:58 +0000</pubDate>
      <link>https://dev.to/williammcgonagle/what-would-you-change-about-this-website-48cj</link>
      <guid>https://dev.to/williammcgonagle/what-would-you-change-about-this-website-48cj</guid>
      <description>&lt;p&gt;Hey- I'm working on this website, and I was wondering what you would change about it. I know it's not perfect at this point, and that's why I want your opinion on it. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://fairfieldprogramming.org/"&gt;You can check it out here.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If I build the entire website on a bad foundation, it will just end up being a bad website. So, I would rather get feedback now (no matter how harsh it will be) than building a ugly mess and not knowing until afterwards.&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>css</category>
    </item>
    <item>
      <title>What is Text Mining, NLP Analysis and the N-gram model?</title>
      <author>Mage</author>
      <pubDate>Thu, 06 Jan 2022 01:59:54 +0000</pubDate>
      <link>https://dev.to/mage_ai/what-is-text-mining-nlp-analysis-and-the-n-gram-model-odl</link>
      <guid>https://dev.to/mage_ai/what-is-text-mining-nlp-analysis-and-the-n-gram-model-odl</guid>
      <description>&lt;h2&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TLDR
&lt;/h2&gt;

&lt;p&gt;This article will discover the number of words that appear in ‚ÄúSonnet,‚Äù and by analyzing high-frequency words, know Shakespeare‚Äôs intentions and preferences. Also, I will use part-of-speech tagging and n-gram models to improve our understanding of the article.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;center&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2Zs8FBy8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7cplvoymcyzv36vu9myy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2Zs8FBy8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7cplvoymcyzv36vu9myy.gif" alt="Image description" width="375" height="480"&gt;&lt;/a&gt;Source: Giphy&lt;/center&gt;&lt;/em&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#outline"&gt;
  &lt;/a&gt;
  Outline
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Intro&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Preliminary preparation&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Text data preprocessing&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Split words&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Count the number of words in the article&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Stop words&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Calculate the frequency of the top 20 words &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Conclusion or Final thoughts&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Part of Speech Tagging&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Training The Model&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Closing Thought&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#intro"&gt;
  &lt;/a&gt;
  Intro
&lt;/h2&gt;

&lt;p&gt;Text mining is a large part of artificial intelligence. It helps computers understand, interpret, and manipulate human language. For example, how to analyze customers‚Äô reviews for a product. How do chatbots mine for users' emotional information? How to extract the information people want from an article. This article analyzes Shakespeare‚Äôs ‚ÄúThe Sonnets,‚Äù which can provide digital help for researchers of literature and history. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;center&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NKnXQniq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2echfiwiyr7cu3mn68xr.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NKnXQniq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2echfiwiyr7cu3mn68xr.gif" alt="Image description" width="290" height="191"&gt;&lt;/a&gt;Source: Giphy&lt;/center&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#text-data-preprocessing"&gt;
  &lt;/a&gt;
  Text Data Preprocessing
&lt;/h2&gt;

&lt;p&gt;Since there are many abbreviations and punctuation marks in the ‚ÄúSonnets,‚Äù I need to restore these abbreviations and remove useless punctuation marks. The operation steps are as follows: &lt;/p&gt;

&lt;p&gt;Regular Expression is a sequence of characters that form a search pattern. RegEx can be used to &lt;strong&gt;check if a string contains the specified search pattern&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;center&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LDNs85CL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y9xbsh4s91gdbnu8uuhi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LDNs85CL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y9xbsh4s91gdbnu8uuhi.png" alt="Image description" width="626" height="199"&gt;&lt;/a&gt;Find specific patterns in string&lt;/center&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;center&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--x4KAeFjo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3kwuiywqwdsqadkh2qch.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x4KAeFjo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3kwuiywqwdsqadkh2qch.png" alt="Image description" width="610" height="277"&gt;&lt;/a&gt;Pattern substitution&lt;/center&gt;&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;As shown in line 12, first load regular expression packages. &lt;/li&gt;
&lt;li&gt;As shown in line 13, 's is following the pronouns, such as it's. &lt;/li&gt;
&lt;li&gt;As shown in line 14, 's is following the noun, such as world's. &lt;/li&gt;
&lt;li&gt;As shown in line 15, ' is following the words ending by s, such as others', cars'. &lt;/li&gt;
&lt;li&gt;As shown in line 16, 't, such as doesn't. &lt;/li&gt;
&lt;li&gt;As shown in 17, 'd such as I'd. &lt;/li&gt;
&lt;li&gt;As shown in line 18, 'll such as he'll. &lt;/li&gt;
&lt;li&gt;As shown in line 19, 'm such as I'm. &lt;/li&gt;
&lt;li&gt;As shown in line 20, 're such as they're. As shown in line 21, 've such as I've. &lt;/li&gt;
&lt;li&gt;After that, there are some abbreviations in the source file. &lt;/li&gt;
&lt;li&gt;As shown in line 23, th'&amp;amp;Th' means "the","The". &lt;/li&gt;
&lt;li&gt;As shown in line 24, in medieval English, verbs followed by second person are usually followed by 'st', which has no special meaning. So it is directly removed when restored. &lt;/li&gt;
&lt;li&gt;As shown in line 27, 's following the pronoun is replaced by is. &lt;/li&gt;
&lt;li&gt;As shown in line 29, 30, 's indicates the possessive form, which is removed when restoring, but the verb prototype is retained. &lt;/li&gt;
&lt;li&gt;As shown in line 31, 't  is replaced by "not".&lt;/li&gt;
&lt;li&gt;As shown in line 32, 'd is turned into "would". &lt;/li&gt;
&lt;li&gt;As shown in line 33, 'll is replaced by "will". &lt;/li&gt;
&lt;li&gt;As shown in line 34, 'm is turned into "am". &lt;/li&gt;
&lt;li&gt;As shown in line 35, 're is replaced by "are". &lt;/li&gt;
&lt;li&gt;As shown in line 36, 've is turned into have. &lt;/li&gt;
&lt;li&gt;As shown in line 37, 'th is replaced by the. &lt;/li&gt;
&lt;li&gt;As shown in line 39, 't is turned into 'it'.&lt;/li&gt;
&lt;li&gt;As shown in line 40, 'Tis' is replaced by "This is''. &lt;/li&gt;
&lt;li&gt;As shown in line 41, 'er' is turned into 'ver'. As shown in line 42, remove 'st'.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I don't consider lowercase and uppercase of words, &lt;strong&gt;uniformly converted to lowercase&lt;/strong&gt;. Remove non-word characters. &lt;br&gt;
&lt;em&gt;&lt;center&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--etJF5wgR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1etfm3g2tegis1lo3pbm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--etJF5wgR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1etfm3g2tegis1lo3pbm.png" alt="Image description" width="363" height="93"&gt;&lt;/a&gt;Lowercase and remove non-English words&lt;/center&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;center&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EcTilv4p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fvzxlzxhq22261k8hqf2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EcTilv4p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fvzxlzxhq22261k8hqf2.png" alt="Image description" width="866" height="405"&gt;&lt;/a&gt;Result of Lowercase and remove non-English words&lt;/center&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#split-words"&gt;
  &lt;/a&gt;
  Split Words
&lt;/h2&gt;

&lt;p&gt;Split the paragraph into words.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---iRU8H3Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8vk4sshjj9dy8smzimaz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---iRU8H3Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8vk4sshjj9dy8smzimaz.png" alt="Image description" width="225" height="33"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;center&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HAhXs9WC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aeg8z76cc8h1tjcuh9bq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HAhXs9WC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aeg8z76cc8h1tjcuh9bq.png" alt="Image description" width="854" height="461"&gt;&lt;/a&gt;Result of split words&lt;/center&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#count-the-number-of-words-in-the-poetry"&gt;
  &lt;/a&gt;
  Count the number of words in the poetry
&lt;/h2&gt;

&lt;p&gt;Circulate each word in ‚Äúwords, which is word after split.‚Äù if it is a word, count+1 &lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;center&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--x29JWsey--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b2i4hpsjzrpjqriezpid.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x29JWsey--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b2i4hpsjzrpjqriezpid.png" alt="Image description" width="535" height="97"&gt;&lt;/a&gt;Count the number of words in the poetry&lt;/center&gt;&lt;/em&gt; &lt;/p&gt;

&lt;p&gt;Count the number of words after split, get the result:  &lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;center&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iZU0-mQ4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fbmpp4s77l61usexp1uz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iZU0-mQ4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fbmpp4s77l61usexp1uz.png" alt="Image description" width="556" height="36"&gt;&lt;/a&gt;The total number of words&lt;/center&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#stop-words"&gt;
  &lt;/a&gt;
  Stop words
&lt;/h2&gt;

&lt;p&gt;Stopwords are English words which don‚Äôt add much meaning to a sentence. They can safely &lt;strong&gt;be ignored without sacrificing the meaning of the sentence&lt;/strong&gt;. For example, the words like the, he, have, etc. So I put these words in the txt file and tell Python to remove these stop words.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;center&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FrUryDI4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4bs2uzmd3v8opxcb5430.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FrUryDI4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4bs2uzmd3v8opxcb5430.png" alt="Image description" width="880" height="132"&gt;&lt;/a&gt;Read stopwords and get the new words.&lt;/center&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#calculate-the-frequency-of-the-top-20-words"&gt;
  &lt;/a&gt;
  Calculate the frequency of the top 20 words
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;&lt;center&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cigNLIDI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ft8lase0yqg3gmuqqoy2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cigNLIDI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ft8lase0yqg3gmuqqoy2.png" alt="Image description" width="529" height="123"&gt;&lt;/a&gt;Frequency of the top 20 words&lt;/center&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;center&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mdYrC-8b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lwlhwsuzj3imxsq3lkry.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mdYrC-8b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lwlhwsuzj3imxsq3lkry.png" alt="Image description" width="308" height="333"&gt;&lt;/a&gt;Result of top 20 words&lt;/center&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Here are the top 20 words in the poem ‚ÄúThe Sonnets.‚Äù&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;In "The Sonnets,‚Äù Shakespeare repeats the word "love" 194 times, which shows that he likes to use this word very much, and &lt;strong&gt;it‚Äôs the main theme of the poem&lt;/strong&gt;. Shakespeare depicts a multi-faceted image of love. Love is so powerful that it can defeat all obstacles. He believes true love and real love, like the stars can always be seen and never changing.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;center&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aM6z2tRp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cbcb2i1e04u211asa7ku.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aM6z2tRp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cbcb2i1e04u211asa7ku.gif" alt="Image description" width="480" height="338"&gt;&lt;/a&gt;Source: Giphy&lt;/center&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In "The Sonnets,‚Äù Shakespeare repeats the word "Time" 70 times, the second most common of all keywords. Shakespeare often personifies time. Shakespeare describes time as a tyrant and consumption of love and beauty. Shakespeare describes time as a ‚Äúbloody tyrant‚Äù (Sonnet 16), ‚Äúdevouring‚Äù and ‚Äúswift-footed‚Äù (Sonnet 19), ‚Äúinjurious hand‚Äù and ‚Äúage' s cruel knife‚Äù (Sonnet 63). Time comes in many different forms, most of which are described as negative.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;center&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PiOD59cZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wmqg5locx7fys4v5pcgz.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PiOD59cZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wmqg5locx7fys4v5pcgz.gif" alt="Image description" width="480" height="270"&gt;&lt;/a&gt;Source: Giphy&lt;/center&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In "The Sonnets'', Shakespeare repeats the word "beauty" 70 times, the second most common of all keywords. Beauty, irrefutably, is a common theme throughout the Shakespearean sonnets. Beauty in Shakespeare‚Äôs Sonnets is represented in two dimensions: the physical beauty and the spiritual beauty. For example, he used the word "beauty" many times to describe the beauty of humans and the beauty of the heart.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;center&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E8Jolby1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7rnmdrxmyc9g7rei6cyq.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E8Jolby1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7rnmdrxmyc9g7rei6cyq.gif" alt="Image description" width="480" height="270"&gt;&lt;/a&gt;Source: Giphy&lt;/center&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#part-of-speech-tagging"&gt;
  &lt;/a&gt;
  Part of Speech Tagging
&lt;/h2&gt;

&lt;p&gt;Parts of speech tagging simply refers to &lt;strong&gt;assigning parts of speech to individual words in a sentence&lt;/strong&gt;. The parts of speech are nouns (NN), verbs (VB), adjectives (JJ), etc. For details, please refer to the part-of-speech tagging table.&lt;/p&gt;

&lt;p&gt;I word_tokenize all the words after preprocessing named ‚Äúfiles‚Äù and then put these into dict. And then pos tag these dict  and name them as tag. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;center&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FPurPIYy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1bpmxqqhz2ghfqb23mt3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FPurPIYy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1bpmxqqhz2ghfqb23mt3.png" alt="Image description" width="800" height="176"&gt;&lt;/a&gt;Part of speech tagging&lt;/center&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Result as follows:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;center&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P2P6ytGE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/axk11k1sdw7xh3cm5hui.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P2P6ytGE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/axk11k1sdw7xh3cm5hui.png" alt="Image description" width="360" height="530"&gt;&lt;/a&gt;Result of tagging&lt;/center&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The meaning of part of speech: The parts of speech are important because they show us how the words relate to each other. Now, they are just words, they don't really tell us something. But, as soon as we assign each word a role (a part of speech), and put them into a sentence, we actually get something meaningful: "touch my breast."&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#train-the-model"&gt;
  &lt;/a&gt;
  Train the Model
&lt;/h2&gt;

&lt;p&gt;The Brown Corpus was the first million-word electronic corpus of English, created in 1961 at Brown University. Please note all the words in the Sonnets are put into the corpus as a whole data set, and we choose 90% of the whole data as a training set to train the model.&lt;/p&gt;

&lt;p&gt;In this example, we are using DefaultTagger as the backoff tagger. Whenever the UnigramTagger is unable to tag a word, backoff tagger, i.e. DefaultTagger, in our case, will tag it with ‚ÄòNN‚Äô. DefaultTagger is most useful when it gets to work with the most common part-of-speech tag. That's why a noun tag is recommended.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;center&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3W5QvPt3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/atimockcfsd7od94phcr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3W5QvPt3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/atimockcfsd7od94phcr.png" alt="Image description" width="521" height="164"&gt;&lt;/a&gt;Train the model&lt;/center&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Unigram: Unigram tagger is a tagger that only uses a single word as its context for determining the POS (Part-of-Speech) tag.&lt;/p&gt;

&lt;p&gt;Bigram: Unigram tagger is a tagger that only uses two words as its context for determining the POS (Part-of-Speech) tag.&lt;/p&gt;

&lt;p&gt;Trigram: Unigram tagger is a tagger that only uses three words as its context for determining the POS (Part-of-Speech) tag.&lt;/p&gt;

&lt;p&gt;If we didn't find the default tagger, then setting backoff. If one tagger doesn‚Äôt know how to tag a word, &lt;strong&gt;the word would be passed to the next tagger and so on until there are no backoff taggers left to check&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;center&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--agkiSokB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/asekqmicdzif305yffif.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--agkiSokB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/asekqmicdzif305yffif.png" alt="Image description" width="880" height="161"&gt;&lt;/a&gt;Train the n-gram model&lt;/center&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;center&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EPvbFOUx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wja2sgslxgb978kj8ztr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EPvbFOUx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wja2sgslxgb978kj8ztr.png" alt="Image description" width="357" height="50"&gt;&lt;/a&gt;Result of n-gram model&lt;/center&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Unigram just considers the conditional frequency of tags and predicts the most frequent tag for every given token. &lt;strong&gt;Bigram is more accurate than the other two, However, the Unigram tagger has better coverage&lt;/strong&gt;. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#closing-thoughts"&gt;
  &lt;/a&gt;
  Closing Thoughts:
&lt;/h2&gt;

&lt;p&gt;Since this is poetry, there is no need for prediction, we just need to know how to do lexical tagging. If we want to design automatic text filling, or speech prediction, then we can proceed to prediction. I‚Äôll update my knowledge about the N-gram model and visualization of part-of-speech tagging in the next article, please stay tuned. &lt;/p&gt;

</description>
      <category>ai</category>
      <category>machinelearning</category>
      <category>coding</category>
      <category>nlp</category>
    </item>
    <item>
      <title>What are CSS Variables?</title>
      <author>Trevor Bruner</author>
      <pubDate>Thu, 06 Jan 2022 01:27:08 +0000</pubDate>
      <link>https://dev.to/tbruner/what-are-css-variables-2eae</link>
      <guid>https://dev.to/tbruner/what-are-css-variables-2eae</guid>
      <description>&lt;p&gt;CSS variables, also known as custom properties(official name) or cascading variables, are a useful CSS feature that allows you to set a value once and reference it many times throughout an HTML document. As with other programming languages, variables are a valuable tool that helps reduce redundant tasks and hold values that can be used or changed later. CSS variables were introduced in 2016 with the release of Chrome 49, and are now supported across all modern web browsers with the exception of Internet Explorer.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-use-css-variables"&gt;
  &lt;/a&gt;
  Why use CSS Variables?
&lt;/h2&gt;

&lt;p&gt;It will make writing and maintaining your CSS easier. Most websites have a color palette that is repeated throughout. Now imagine you have a website and want to change the color palette. In a complex website you'd have to update the colors in the many places it's used. That is a tedious task that no one wants to do. With CSS variables you'd only have to update the colors in once. It doesn't just have to be colors either, any CSS style that is repeated can take advantage of this. Not only that but variables make your CSS easier to read. It's much easier to understand CSS that has descriptive variable names than one with values set individually.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-use-css-variables"&gt;
  &lt;/a&gt;
  How to use CSS Variables
&lt;/h2&gt;

&lt;p&gt;Setting a variable is just like setting a CSS property. The only difference is you use a custom variable name which must be prefixed with double hyphens (--). Note that CSS variables are case sensitive meaning &lt;code&gt;--main&lt;/code&gt; is not the same as &lt;code&gt;--MAIN&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;--name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;value&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To reference a variable use the &lt;code&gt;var()&lt;/code&gt; function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;var&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;--name&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;fallback&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here &lt;code&gt;name&lt;/code&gt; is the variable name and &lt;code&gt;fallback&lt;/code&gt; is an optional value that will be used if the variable is invalid. The &lt;code&gt;var()&lt;/code&gt; function only accepts two arguments. Anything following the first comma is taken as the fallback value. However you can still define multiple fallback values.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;var&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;--name&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;red&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;black&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here &lt;code&gt;red, black&lt;/code&gt; is the second argument and will be used just the same as if you were to just define red as the value and black as the first fallback. If you decide to used another variable as a fallback you cannot do the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;var&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;--name&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;--fallback-var&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This would be invalid as &lt;code&gt;--fallback-var&lt;/code&gt; would be used and has no value when used outside the first argument of the &lt;code&gt;var()&lt;/code&gt; function. Instead you would need to do the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;var&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;--name&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;var&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;--fallback-var&lt;/span&gt;&lt;span class="o"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is a valid way to define a variable as a fallback to another variable, but be warned as this can cause performance issues as it takes more time to parse variables. &lt;/p&gt;

&lt;p&gt;If a variable name is invalid with no fallback the property will be set to the default value or inherited value. This may cause styling issues that make your page less accessible or difficult to parse. For example you may have a dark mode and a variable for the font color. If that variable is invalid the font color will default to black(or the inherited value). Now the text is going to be very difficult or impossible to read. While most modern browsers support CSS variables, there are users that may access your page from Internet Explorer or an older browser. There's also human error, you don't want a typo to break the styling of your page. For these reasons it's good practice to include a fallback.&lt;/p&gt;

&lt;p&gt;CSS variables are typically set in the &lt;code&gt;:root&lt;/code&gt; pseudo-class as it gives the variable a global scope and thus can be used throughout the document. If you need to you can set a variable anywhere in the document but it will only be accessible within that element's local scope.&lt;/p&gt;

&lt;p&gt;Here's a short example of how you might use CSS variables:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nd"&gt;:root&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="py"&gt;--heading-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;red&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--paragraph-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;indigo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;h1&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--heading-color&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;p&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--paragraph-color&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nf"&gt;#highlight&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--heading-color&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here the variables &lt;code&gt;--heading-color&lt;/code&gt; and &lt;code&gt;--paragraph-color&lt;/code&gt; are set under the &lt;code&gt;:root&lt;/code&gt; selector which gives them a global scope. The &lt;code&gt;--heading-color&lt;/code&gt; variable is then used as the color value for the &lt;code&gt;h1&lt;/code&gt; selector and the &lt;code&gt;highlight&lt;/code&gt; id, and the &lt;code&gt;--paragraph-color&lt;/code&gt; is used as the color value for the &lt;code&gt;p&lt;/code&gt; selector.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#css-variables-in-javascript"&gt;
  &lt;/a&gt;
  CSS Variables in JavaScript
&lt;/h2&gt;

&lt;p&gt;Yes, you can get and set CSS variables in JavaScript. To get a variable value use the &lt;code&gt;.getPropertyValue()&lt;/code&gt; method. To set a variable value use the &lt;code&gt;.setProperty()&lt;/code&gt; method.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// get root element&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;root&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;:root&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// get my-var value&lt;/span&gt;
&lt;span class="nx"&gt;root&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getPropertyValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;--my-var&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// set my-var value to green&lt;/span&gt;
&lt;span class="nx"&gt;root&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;--my-var&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;green&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#common-use-cases"&gt;
  &lt;/a&gt;
  Common Use Cases
&lt;/h2&gt;

&lt;p&gt;I won't go into too much detail on these, but here are a few common use cases for CSS variables.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#theming"&gt;
  &lt;/a&gt;
  Theming
&lt;/h3&gt;

&lt;p&gt;If you want different themes for your website, such as dark/light mode, you can use a set of variables that you change for each theme. The following is a simple example of how you could implement a dark/light mode feature with CSS and JavaScript.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nd"&gt;:root&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="py"&gt;--bg-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--text-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;black&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.dark-mode&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="py"&gt;--bg-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;black&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--text-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;darkModeSwith&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#switch&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;darkModeSwith&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toggle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dark-mode&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#media-queries"&gt;
  &lt;/a&gt;
  Media Queries
&lt;/h3&gt;

&lt;p&gt;Responsiveness is important in the current world of web development and variables with media queries makes this much easier to achieve. You could do the following and the margin size will change when the screen width is less than 600px.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nd"&gt;:root&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="py"&gt;--margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;25px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;@media&lt;/span&gt; &lt;span class="n"&gt;screen&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;min-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;600px&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nd"&gt;:root&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="py"&gt;--margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#size-and-space-elements-relative-to-each-other"&gt;
  &lt;/a&gt;
  Size and Space Elements Relative to Each Other
&lt;/h3&gt;

&lt;p&gt;You can use the &lt;code&gt;calc()&lt;/code&gt; function along with CSS variables to easily set things relative to each other. If you wanted to make your heading twice the size of your paragraph font you could do the following.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nd"&gt;:root&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="py"&gt;--paragraph-font&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;14px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;h1&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--paragraph-font&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="err"&gt;*&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#more-css-variables"&gt;
  &lt;/a&gt;
  More CSS variables
&lt;/h2&gt;

&lt;p&gt;Interested in learning more about CSS variables? Check out the following pages I used for reference:&lt;br&gt;
&lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_custom_properties"&gt;Mozilla Web Docs&lt;/a&gt;&lt;br&gt;
&lt;a href="https://developers.google.com/web/updates/2016/02/css-variables-why-should-you-care"&gt;Google Developers&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.lambdatest.com/blog/guide-to-css-variables-with-examples/"&gt;Lambda Test&lt;/a&gt;&lt;br&gt;
&lt;a href="https://devdocs.io/css/using_css_custom_properties"&gt;CSS Docs&lt;/a&gt;&lt;/p&gt;

</description>
      <category>css</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Experimenting with Data Visualization Using Vega Lite</title>
      <author>Rodrigo Rojas</author>
      <pubDate>Thu, 06 Jan 2022 00:58:25 +0000</pubDate>
      <link>https://dev.to/crrojas88/experimenting-with-data-visualization-using-vega-lite-2kli</link>
      <guid>https://dev.to/crrojas88/experimenting-with-data-visualization-using-vega-lite-2kli</guid>
      <description>&lt;p&gt;For this blog post, I'm going to sidetrack from the usual tutorials and step-by-steps to shed light on a topic that's very important to me. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#disparity-in-covid19-infections-and-deaths-between-different-racialethnic-groups-and-the-latinx-community"&gt;
  &lt;/a&gt;
  Disparity in COVID-19 Infections and Deaths Between Different Racial/Ethnic Groups and the Latinx Community
&lt;/h3&gt;

&lt;p&gt;In light of recent news regarding massive spikes in COVID-19 cases, I wanted to create a visualization using data pulled from the CDC regarding COVID-19 infections and deaths within the Latinx community.&lt;/p&gt;

&lt;p&gt;While I had fun creating this visualization, I'm by no means a data scientist. I want you to take this with a grain of salt and understand that I'm as new to this as you might be. With that said, if any data scientists or data viz engineers out there want to reach out to me with pointers, I'm all ears. Let's dive in.&lt;/p&gt;

&lt;p&gt;Before embarking on this data-visualization journey, I was curious about statistics and data surrounding my community in regards to COVID-19 infection/death rates and their causes. I live in a predominantly Latinx neighborhood in Oakland, and have seen the various community programs incentivizing vaccination against the virus. Despite their best efforts however, according to data from the &lt;a href="https://data.cdc.gov/NCHS/Provisional-COVID-19-Deaths-by-County-and-Race-and/k8wy-p9cg"&gt;CDC&lt;/a&gt; and the &lt;a href="https://www.cdph.ca.gov/Programs/CID/DCDC/Pages/COVID-19/Race-Ethnicity.aspx"&gt;CA Department of Public Health&lt;/a&gt;, Latinx and other people of color are disproportionately affected amid worsening historical inequities.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5jsE6AMa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yjktl5e0w3vnl543w6we.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5jsE6AMa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yjktl5e0w3vnl543w6we.png" alt="Graph of cases and deaths associated with COVID-19" width="771" height="735"&gt;&lt;/a&gt;&lt;/p&gt;
Credit to &lt;a href="https://www.cdph.ca.gov/Programs/CID/DCDC/Pages/COVID-19/Race-Ethnicity.aspx"&gt;California Department of Public Health&lt;/a&gt;



&lt;h3&gt;
  &lt;a href="#so-why-are-latinx-communities-getting-vaccinated-less"&gt;
  &lt;/a&gt;
  So Why Are Latinx Communities Getting Vaccinated Less?
&lt;/h3&gt;

&lt;p&gt;Latinx communities comprise 18.5% of the U.S. population. And they are being severely impacted by COVID-19.&lt;/p&gt;

&lt;p&gt;So why do they make up such a small amount of people getting vaccinated in some states?&lt;/p&gt;

&lt;p&gt;Lack of access, vaccine confidence, and misinformation might be part of the answer.&lt;br&gt;
Most states are following the &lt;a href="https://www.cdc.gov/vaccines/hcp/acip-recs/vacc-specific/covid-19.html"&gt;CDC recommendations&lt;/a&gt; with vaccine rollout by prioritizing health care workers and elderly people living in assisted living facilities.&lt;/p&gt;

&lt;p&gt;However, this can leave states open to interpret who is defined as a &lt;em&gt;health care worker&lt;/em&gt;, sometimes leaving out essential workers who are still regularly exposed to COVID-19, such as janitorial and cleaning staff. Where often, essential workers and service workers come from Latinx and Black communities.&lt;/p&gt;

&lt;p&gt;In &lt;a href="https://www.latimes.com/opinion/story/2021-05-02/latinos-covid-vaccines-resistance-skepticism"&gt;Jean Guerrero's op-ed&lt;/a&gt; in The LA Times, they explain the effect of misinformation in Latinx communities: &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Now, Latinos lag behind in vaccination rates, driven in part by Spanish-language disinformation deliberately targeting us on Facebook, YouTube, WhatsApp and more. The conspiracy forces that tried to depress Latino voter turnout with lies about the election now appear to be using internet platforms to tell Latinos the vaccine contains a microchip, alters DNA or causes stillbirths. The misinformation then spreads through word of mouth.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Using data pulled from the &lt;a href="https://www.cdc.gov/nchs/covid19/covid-19-mortality-data-files.htm"&gt;CDC's National Center for Health Statistics&lt;/a&gt;, I plotted a graph using the &lt;a href="https://vega.github.io/vega-lite/"&gt;Vega-Lite&lt;/a&gt; JavaScript library on the &lt;a href="https://observablehq.com/@crrojas88/experimenting-with-data-visualization-of-latinx-communit"&gt;Observable&lt;/a&gt; platform. In the following steps I'm going to detail how I pulled and plotted data illustrating deaths in Latinx communities by county in California.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#fetching-and-plotting-data-using-observable"&gt;
  &lt;/a&gt;
  Fetching and Plotting Data using Observable
&lt;/h3&gt;

&lt;p&gt;Using the &lt;a href="https://observablehq.com/"&gt;Observable Platform&lt;/a&gt;, I was able to plot the following graph by simply fetching data from the &lt;a href="https://data.cdc.gov/NCHS/Provisional-COVID-19-Deaths-by-County-and-Race-and/k8wy-p9cg"&gt;CDC API&lt;/a&gt; like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://data.cdc.gov/resource/k8wy-p9cg.json?state=CA&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I then &lt;code&gt;require&lt;/code&gt; &lt;code&gt;d3-fetch&lt;/code&gt; in order to have access to its JSON parser method to use with the CDC API.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;d3Fetch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;d3-fetch&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gfn7kjle--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v79p0snty88uow6xe98w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gfn7kjle--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v79p0snty88uow6xe98w.png" alt="d3 fetch object" width="417" height="416"&gt;&lt;/a&gt;&lt;/p&gt;
We'll be Using json in the Next Step



&lt;p&gt;With our &lt;code&gt;d3-fetch&lt;/code&gt; object we can now fetch and parse through our JSON data.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;covidData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;d3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fzuSkNng--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/itidvdix6tyl4khtvt4d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fzuSkNng--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/itidvdix6tyl4khtvt4d.png" alt="COVID-19 JSON Data" width="880" height="473"&gt;&lt;/a&gt;&lt;/p&gt;
Our Massive JSON



&lt;p&gt;Now that I have access to only CA COVID-19 data (you might have noticed the API URL only specifies California), I want to make sure that decimals aren't used to plot my graph. We can easily fix that.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;changedData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;parsedData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;covidData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;covidData&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;hispanic&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;hispanic&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;parsedData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;parsedData&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Using a simple &lt;code&gt;for&lt;/code&gt; loop, I change the value for &lt;em&gt;hispanic&lt;/em&gt; from the original decimal value to a more usable number for my graph.&lt;/p&gt;

&lt;p&gt;Now that I have the data I want, it's time to plot the graph using Vega Lite.&lt;/p&gt;

&lt;p&gt;I then &lt;code&gt;require&lt;/code&gt; Vega Lite like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;vegalite&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@observablehq/vega-lite&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once I have access to the Vega Lite library, I can easily plot my graph setting the values with my changedData array.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;vegalite&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;values&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;changedData&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;mark&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;area&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;line&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;darkgreen&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;x1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;y1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;x2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;y2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;gradient&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;linear&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;stops&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;offset&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;white&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;offset&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;darkgreen&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;autosize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;fit&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;encoding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;field&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;county_name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ordinal&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;field&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hispanic&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;quantitative&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The end result will look like this:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#california-covid19-latinx-deaths-by-county"&gt;
  &lt;/a&gt;
  California COVID-19 Latinx Deaths by County
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dtGtI-8j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pjw0a72j3rx1849gn0z8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dtGtI-8j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pjw0a72j3rx1849gn0z8.png" alt="California COVID-19 deaths by county" width="880" height="208"&gt;&lt;/a&gt;&lt;/p&gt;
Alternatively, You can see the graph &lt;a href="https://observablehq.com/@crrojas88/experimenting-with-data-visualization-of-latinx-communit"&gt;here&lt;/a&gt;



&lt;h3&gt;
  &lt;a href="#how-to-help-communities-fight-covid19-and-misinformation"&gt;
  &lt;/a&gt;
  How to Help Communities Fight COVID-19 and Misinformation
&lt;/h3&gt;

&lt;p&gt;As I previously mentioned, working on this really hit close to home for me. Particularly because I have family in Fresno County, an area still heavily affected by COVID-19, and have bore witness to my family and other members of my community regurgitating misinformation they heard from non-reliable sources.&lt;/p&gt;

&lt;p&gt;In order to fight against this and help our communities move from vaccine hesitancy to confidence, we need to start sharing accurate information on how to protect one another from COVID-19. Some ways of doing this would be by making data more accessible and interpretable, as well as highlighting uplifting stories from other community members who overcame COVID-19 misinformation.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://data.cdc.gov/NCHS/Provisional-COVID-19-Deaths-by-County-and-Race-and/k8wy-p9cg"&gt;Provisional COVID-19 Deaths by County, and Race and Hispanic Origin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.cdph.ca.gov/Programs/CID/DCDC/Pages/COVID-19/Race-Ethnicity.aspx"&gt;COVID-19 Race and Ethnicity Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.healthyagingpoll.org/reports-more/report/older-adults-perspectives-covid-19-vaccine"&gt;Older Adults' Perspectives on a COVID-19 Vaccine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.latimes.com/opinion/story/2021-05-02/latinos-covid-vaccines-resistance-skepticism"&gt;How conspiracy theories about COVID-19 prey on Latinos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://vega.github.io/vega-lite/"&gt;Vega-Lite ‚Äì A Grammar of Interactive Graphics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.cdc.gov/vaccines/hcp/acip-recs/vacc-specific/covid-19.html"&gt;COVID-19 ACIP Vaccine Recommendations
&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://observablehq.com"&gt;Observable&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>datascience</category>
      <category>javascript</category>
      <category>news</category>
      <category>devjournal</category>
    </item>
    <item>
      <title>Day 71 of 100 Days of Code &amp; Scrum: Coding Something I Won't Use</title>
      <author>Rammina</author>
      <pubDate>Thu, 06 Jan 2022 00:05:03 +0000</pubDate>
      <link>https://dev.to/rammina/day-71-of-100-days-of-code-scrum-coding-something-i-wont-use-4aef</link>
      <guid>https://dev.to/rammina/day-71-of-100-days-of-code-scrum-coding-something-i-wont-use-4aef</guid>
      <description>&lt;p&gt;Greetings, everyone!&lt;/p&gt;

&lt;p&gt;Just like every Tuesday, I had to go out for my physical therapy session, so I couldn't work as much today. However, I still managed to get a decent amount of work done on my &lt;a href="https://www.rammina.com"&gt;company webpage&lt;/a&gt; such as adding alternative contact methods in case the message form doesn't work and adding a hover overlay on the portfolio project images that says "View Project."&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UPMGOCrF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1641293734859/AtD9-4GIQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UPMGOCrF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1641293734859/AtD9-4GIQ.png" alt="Rammina Contact Alternatives" width="880" height="592"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AXaY1n9z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1641294067719/Ggb99q9Gj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AXaY1n9z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1641294067719/Ggb99q9Gj.png" alt="Rammina Project Hover Overlay" width="880" height="362"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Anyway, let's move on to my daily report!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#yesterday"&gt;
  &lt;/a&gt;
  Yesterday
&lt;/h2&gt;

&lt;p&gt;I passed my Professional Scrum Master I (PSM I) certification exam and got certified. Also, I planned out the work I'll be doing for this week, mostly regarding the business page.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#today"&gt;
  &lt;/a&gt;
  Today
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#company-website"&gt;
  &lt;/a&gt;
  Company Website
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;I added call-to-action for alternative contact methods, specifically email and phone number, if ever the contact form doesn't work.&lt;/li&gt;
&lt;li&gt;I placed a hover overlay on top of the portfolio project images.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#scrum"&gt;
  &lt;/a&gt;
  Scrum
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;read some articles about Scrum, particularly about the role expectations in an organization, as well as other people's experiences of being a Developer and Scrum Master at the same time.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thank you for reading! Have a good day!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9gNNIpK9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x9ayfxxxaz2g2hfcqbsk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9gNNIpK9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x9ayfxxxaz2g2hfcqbsk.png" alt="Rammina Thank You Banner" width="880" height="293"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#resourcesrecommended-readings"&gt;
  &lt;/a&gt;
  Resources/Recommended Readings
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/agile/comments/bh9n5r/how_do_you_manage_being_a_scrum_master_and_a_dev/"&gt;How do you manage being a Scrum Master and Developer at the same time?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/agile/comments/rawhza/what_can_i_reasonably_expect_my_scrum_master_to_do/"&gt;What can I expect my Scrum Master to do?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#disclaimer"&gt;
  &lt;/a&gt;
  DISCLAIMER
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;This is not a guide&lt;/strong&gt;, it is just me sharing my experiences and learnings. This post only expresses my thoughts and opinions (based on my limited knowledge) and is in no way a substitute for actual references. If I ever make a mistake or if you disagree, I would appreciate corrections in the comments!&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#other-media"&gt;
  &lt;/a&gt;
  Other Media
&lt;/h2&gt;

&lt;p&gt;Feel free to reach out to me in other media!&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;a href="https://www.rammina.com"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BK-zilS2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rammina/image/upload/v1638444046/rammina-button-128_x9ginu.png" alt="Rammina Logo" width="128" height="50"&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;a href="https://twitter.com/RamminaR"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C341ckO3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rammina/image/upload/v1636792959/twitter-logo_laoyfu_pdbagm.png" alt="Twitter logo" width="128" height="50"&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;a href="https://github.com/Rammina"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u4ZlXeay--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rammina/image/upload/v1636795051/GitHub-Emblem2_epcp8r.png" alt="Github logo" width="128" height="50"&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>beginners</category>
      <category>javascript</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Switchboard - Simplify file organisation on your machine/s.</title>
      <author>Cian Gallagher</author>
      <pubDate>Thu, 06 Jan 2022 00:03:34 +0000</pubDate>
      <link>https://dev.to/cian911/switchboard-simplify-file-organisation-on-your-machines-35f5</link>
      <guid>https://dev.to/cian911/switchboard-simplify-file-organisation-on-your-machines-35f5</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ppg9Ewr8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0uifvbqv258c1g2gexfc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ppg9Ewr8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0uifvbqv258c1g2gexfc.png" alt="Image description" width="880" height="942"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Do you ever get annoyed that your Downloads folder gets cluttered with all types of files? Do you wish you could automatically organise them into separate, organised folders? Switchboard is a tool to help simplify file organisation on your machine/s. &lt;/p&gt;

&lt;p&gt;Switchboard works by monitoring a directory you provide (or list of directories), and uses file system notifications to move a matched file to the appropriate destination directory of your choosing.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#motivation"&gt;
  &lt;/a&gt;
  Motivation
&lt;/h3&gt;

&lt;p&gt;I built switchboard out of a frustration with the sporadic mess of files strewn throughout my local machine and network file servers. I thought what best way to try and fix this problem then build something, in Go no less :)&lt;/p&gt;

&lt;p&gt;Switchboard is new, so I'd love to get it into peoples hands to be used. I'd also love to here any suggestions or improvements you'd like to see - please head over to &lt;a href="https://github.com/Cian911/switchboard/discussions"&gt;Github Discussions&lt;/a&gt; to have a chat!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#usage"&gt;
  &lt;/a&gt;
  Usage
&lt;/h3&gt;

&lt;p&gt;See the video below as example. Here, I give switchboard a path to watch, a destination where I want matched files to move to, and the file extension of the type of files I want to move.&lt;/p&gt;

&lt;p&gt;You can also visit &lt;a href="https://goswitchboard.io/"&gt;https://goswitchboard.io/&lt;/a&gt; for all your documentation needs, news, and updates!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://asciinema.org/a/cWSUfcUCU4Wd5rQEs5Detf7gn"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1KYK4_7A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://asciinema.org/a/cWSUfcUCU4Wd5rQEs5Detf7gn.svg" alt="asciicast" width="880" height="404"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h3&gt;

&lt;p&gt;You can install switchboard pre-compiled binary in a number of ways.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#homebrew"&gt;
  &lt;/a&gt;
  Homebrew
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;brew tap Cian911/switchboard
brew &lt;span class="nb"&gt;install &lt;/span&gt;switchboard

// Check everything is working as it should be
switchboard &lt;span class="nt"&gt;-h&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#go-install"&gt;
  &lt;/a&gt;
  Go Install
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;go &lt;span class="nb"&gt;install &lt;/span&gt;github.com/Cian911/switchboard@latest
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#manually"&gt;
  &lt;/a&gt;
  Manually
&lt;/h5&gt;

&lt;p&gt;You can download the pre-compiled binary for your specific OS type from the &lt;a href="https://github.com/Cian911/switchboard/releases"&gt;OSS releases page&lt;/a&gt;. You will need to copy these and extract the binary, then move it to you local bin directory. See the example below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;wget https://github.com/Cian911/switchboard/releases/download/&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;VERSION&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;/&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;PACKAGE_NAME&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;
&lt;span class="nb"&gt;sudo tar&lt;/span&gt; &lt;span class="nt"&gt;-xvf&lt;/span&gt; &lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;PACKAGE_NAME&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt; &lt;span class="nt"&gt;-C&lt;/span&gt; /usr/local/bin/
&lt;span class="nb"&gt;sudo chmod&lt;/span&gt; +x /usr/local/bin/switchboard
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#quick-start"&gt;
  &lt;/a&gt;
  Quick Start
&lt;/h3&gt;

&lt;p&gt;Using switchboard is pretty easy. Below lists the set of commands and flags you can pass in.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;Run the switchboard application passing &lt;span class="k"&gt;in &lt;/span&gt;the path, destination, and file &lt;span class="nb"&gt;type &lt;/span&gt;you&lt;span class="s1"&gt;'d like to watch for.

Usage:
   watch [flags]

Flags:
      --config string        Pass an optional config file containing multiple paths to watch.
  -d, --destination string   Path you want files to be relocated.
  -e, --ext string           File type you want to watch for.
  -h, --help                 help for watch
  -p, --path string          Path you want to watch.
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To get started quickly, you can run the following command, passing in the path, destination, and file extenstion you want to watch for. See the example below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;switchboard watch &lt;span class="nt"&gt;-p&lt;/span&gt; /home/user/Downloads &lt;span class="nt"&gt;-d&lt;/span&gt; /home/user/Movies &lt;span class="nt"&gt;-e&lt;/span&gt; .mp4
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>programming</category>
      <category>opensource</category>
      <category>showdev</category>
      <category>go</category>
    </item>
    <item>
      <title>How to develop locally using serverless offline</title>
      <author>Fauna</author>
      <pubDate>Wed, 05 Jan 2022 23:27:20 +0000</pubDate>
      <link>https://dev.to/fauna/how-to-develop-locally-using-serverless-offline-2lb7</link>
      <guid>https://dev.to/fauna/how-to-develop-locally-using-serverless-offline-2lb7</guid>
      <description>&lt;p&gt;The serverless offline plugin for Node.js allows you to emulate AWS Lambda and API Gateway on a local machine. By using the serverless offline plugin, you can test your &lt;a href="https://fauna.com/blog/what-is-serverless-architecture-and-who-should-use-it"&gt;serverless applications&lt;/a&gt; without deploying them every time you make a change. This makes for a faster and better developer experience.&lt;/p&gt;

&lt;p&gt;The plugin starts an HTTP server locally to handle request lifecycles and invoke handlers. Typically, this is run locally on a developer‚Äôs machine or in a shared development environment.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-use-the-serverless-offline-plugin"&gt;
  &lt;/a&gt;
  Why use the serverless offline plugin?
&lt;/h2&gt;

&lt;p&gt;By having these applications running locally on a developer‚Äôs machine or in a development environment, users can quickly view logs and debug their code locally rather than in the cloud, where they‚Äôre usually running production workloads. In addition, by not having to continuously deploy changes online to stay current, serverless offline allows development teams to operate at their own pace. This means that developers can freely make changes to their code and run tests locally without worrying about impacting the rest of their team.&lt;/p&gt;

&lt;p&gt;Embedding serverless offline into existing serverless workflows can offer developers all of the advantages of serverless architecture while making them more efficient at the same time. This guide will go through the steps involved in updating an existing serverless application to integrate serverless offline, illustrating how effortless the process can be.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-set-up-serverless-offline"&gt;
  &lt;/a&gt;
  How to set up serverless offline
&lt;/h2&gt;

&lt;p&gt;The first step is to include the serverless-offline Node.js package in your existing application. To set up serverless offline in your project, run the following command in your Node.js project:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;npm i serverless-offline
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once the package is installed, add the following in the plugin section of your serverless.yml file. Add the plugin section if you don‚Äôt already have it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;plugins&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
 &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;serverless-offline&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Save the file and verify that the package is installed by running the following command from your terminal:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;serverless offline
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will start a local server that emulates AWS Lambda and API gateways on your local machine.&lt;/p&gt;

&lt;p&gt;&lt;a href="//images.ctfassets.net/po4qc9xpmpuh/2UaxVzHEvQcrdb0xcnGRbV/b21ee565be614d8d25db0a429fd17514/local_server.png" class="article-body-image-wrapper"&gt;&lt;img src="//images.ctfassets.net/po4qc9xpmpuh/2UaxVzHEvQcrdb0xcnGRbV/b21ee565be614d8d25db0a429fd17514/local_server.png" alt="local server"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-pull-up-command-line-option"&gt;
  &lt;/a&gt;
  How to pull up command line option
&lt;/h2&gt;

&lt;p&gt;Depending on the environment in which you are working, you can update your Lambda functions to use your local serverless instance or your AWS endpoint. For example, you can set the IS_OFFLINE variable in your .env to true while in your local development environment and to false in your production environment. Using the .env file allows you to configure the system from the command line without making any significant changes and worrying about them impacting other developers or the production environment.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Lambda&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;aws-sdk&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;lambda&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Lambda&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
&lt;span class="na"&gt;apiVersion&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;v0.0.1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="na"&gt;endpoint&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;IS_OFFLINE&lt;/span&gt;
  &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;http://localhost:3002&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;&amp;lt;YOUR_AWS_ENDPOINT&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When you have updated your Lambda functions, you can then call them using your existing handlers, just like in a serverless application.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;exports&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;handler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;params&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="c1"&gt;// FunctionName is composed of: service name - stage - function name, e.g.&lt;/span&gt;
     &lt;span class="na"&gt;FunctionName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;myServiceName-dev-invokedHandler&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
     &lt;span class="na"&gt;InvocationType&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;RequestResponse&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
     &lt;span class="na"&gt;Payload&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;foo&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}),&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;lambda&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;invoke&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;promise&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can then execute these Lambda functions locally by running the following from your terminal:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;aws lambda invoke /dev/null &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;--endpoint-url&lt;/span&gt; http://localhost:3002 &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;--function-name&lt;/span&gt; myServiceName-dev-invokedHandler
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;While the option above can be used by pointing the endpoint-url to your local serverless offline instance, using the serverless-offline package comes with a CLI that simplifies the configuration and management of your instances. Enter the following command to display the commands available:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;serverless offline &lt;span class="nt"&gt;--help&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will provide some information about your serverless offline installation as well as list all the commands available:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Serverless: Running "serverless" installed locally (in service node_modules)
offline ....................... Simulates API Gateway to call your lambda functions offline.
offline start ................. Simulates API Gateway to call your lambda functions offline using backward compatible initialization.
    --apiKey ...........................Defines the API key value to be used for endpoints marked as private. Defaults to a random hash.
    --corsAllowHeaders .................Used to build the Access-Control-Allow-Headers header for CORS support.
    --corsAllowOrigin ..................Used to build the Access-Control-Allow-Origin header for CORS support.
    --corsDisallowCredentials ..........Used to override the Access-Control-Allow-Credentials default (which is true) to false.
    --corsExposedHeaders ...............Used to build the Access-Control-Exposed-Headers response header for CORS support
    --disableCookieValidation ..........Used to disable cookie-validation on hapi.js-server
    --enforceSecureCookies .............Enforce secure cookies
    --hideStackTraces ..................Hide the stack trace on lambda failure. Default: false
    --host / -o ........................The host name to listen on. Default: localhost
    --httpPort .........................HTTP port to listen on. Default: 3000
    --httpsProtocol / -H ...............To enable HTTPS, specify directory (relative to your cwd, typically your project dir) for both cert.pem and key.pem files.
    --lambdaPort .......................Lambda http port to listen on. Default: 3002
    --noPrependStageInUrl ..............Don't prepend http routes with the stage.
    --noStripTrailingSlashInUrl ........Don't strip trailing slash from http routes.
    --noAuth ...........................Turns off all authorizers
    --ignoreJWTSignature ...............When using HttpApi with a JWT authorizer, don't check the signature of the JWT token. This should only be used for local development.
    --noTimeout / -t ...................Disables the timeout feature.
    --prefix / -p ......................Adds a prefix to every path, to send your requests to http://localhost:3000/prefix/[your_path] instead.
    --printOutput ......................Outputs your lambda response to the terminal.
    --resourceRoutes ...................Turns on loading of your HTTP proxy settings from serverless.yml.
    --useChildProcesses ................Uses separate node processes for handlers
    --useWorkerThreads .................Uses worker threads for handlers. Requires node.js v11.7.0 or higher
    --websocketPort ....................Websocket port to listen on. Default: 3001
    --webSocketHardTimeout .............Set WebSocket hard timeout in seconds to reproduce AWS limits (https://docs.aws.amazon.com/apigateway/latest/developerguide/limits.html#apigateway-execution-service-websocket-limits-table). Default: 7200 (2 hours)
    --webSocketIdleTimeout .............Set WebSocket idle timeout in seconds to reproduce AWS limits (https://docs.aws.amazon.com/apigateway/latest/developerguide/limits.html#apigateway-execution-service-websocket-limits-table). Default: 600 (10 minutes)
    --useDocker ........................Uses docker for node/python/ruby/provided
    --layersDir ........................The directory layers should be stored in. Default: {codeDir}/.serverless-offline/layers
    --dockerReadOnly ...................Marks if the docker code layer should be read only. Default: true
    --functionCleanupIdleTimeSeconds ...Number of seconds until an idle function is eligible for cleanup
    --allowCache .......................Allows the code of lambda functions to cache if supported
    --dockerHost .......................The host name of Docker. Default: localhost
    --dockerHostServicePath ............Defines service path which is used by SLS running inside Docker container
    --dockerNetwork ....................The network that the Docker container will connect to
    --region / -r ......................Region of the service
    --aws-profile ......................AWS profile to use with the command
    --app ..............................Dashboard app
    --org ..............................Dashboard org
    --use-local-credentials ............Rely on locally resolved AWS credentials instead of loading them from Dashboard provider settings (applies only to services integrated with Dashboard)
    --config / -c ......................Path to serverless config file
    --stage / -s .......................Stage of the service
    --help / -h ........................Show this message
    --version ..........................Show version info
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When you might not want to use the CLI, such as in a programmatic scenario, you can set options in your serverless.yml file. For example, you can configure to use the httpProtocol or httpsProtocol using the serverless.yml file as shown below. This method eliminates the need to chain a long list of options together.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;custom&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
 &lt;span class="na"&gt;serverless-offline&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
   &lt;span class="na"&gt;httpsProtocol&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;dev-certs"&lt;/span&gt;
   &lt;span class="na"&gt;httpPort&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;4000&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;*NOTE: The CLI options override the values specified in the .yml file if you pass them. *&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#serverless-database-for-nodejs"&gt;
  &lt;/a&gt;
  Serverless database for Node.js
&lt;/h2&gt;

&lt;p&gt;In this section, we will go through the process of creating a Fauna database with sample data and then create an AWS Lambda function to query one of the collections in this sample database.&lt;br&gt;
First, &lt;a href="https://dashboard.fauna.com/accounts/register"&gt;sign up for a Fauna account&lt;/a&gt; and create a new database. Here we‚Äôre naming the database fauna-lambda and selecting the *Use demo data *option.&lt;/p&gt;

&lt;p&gt;&lt;a href="//images.ctfassets.net/po4qc9xpmpuh/540IbeveWjhdrHlTQMj01l/efe0891395d0ea6291e2b1ddd7ff8ea9/Create_database.png" class="article-body-image-wrapper"&gt;&lt;img src="//images.ctfassets.net/po4qc9xpmpuh/540IbeveWjhdrHlTQMj01l/efe0891395d0ea6291e2b1ddd7ff8ea9/Create_database.png" alt="Create database"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once the database is created, go to the &lt;em&gt;Security&lt;/em&gt; tab and create a new key. This will generate a key that will be used by our Lambda function to connect to the database. *Make a note of the key so that it can be used later. *&lt;/p&gt;

&lt;p&gt;&lt;a href="//images.ctfassets.net/po4qc9xpmpuh/69HyXkRKLiSHcS32Ld4zFn/72d8cefd9a96f42b297d0f4141d8addb/Create_new_key.png" class="article-body-image-wrapper"&gt;&lt;img src="//images.ctfassets.net/po4qc9xpmpuh/69HyXkRKLiSHcS32Ld4zFn/72d8cefd9a96f42b297d0f4141d8addb/Create_new_key.png" alt="Create new key"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next, log in to AWS and go to the Lambda section. Select &lt;em&gt;Create Function.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="//images.ctfassets.net/po4qc9xpmpuh/6x7WmMdXh1nSOLnWzk73WY/d8135feb39a306ff272d9317cae6c85c/Create_Lamba_function.png" class="article-body-image-wrapper"&gt;&lt;img src="//images.ctfassets.net/po4qc9xpmpuh/6x7WmMdXh1nSOLnWzk73WY/d8135feb39a306ff272d9317cae6c85c/Create_Lamba_function.png" alt="Create Lambda function"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Choose the &lt;em&gt;Author from Scratch&lt;/em&gt; option and give it a name.&lt;/p&gt;

&lt;p&gt;&lt;a href="//images.ctfassets.net/po4qc9xpmpuh/3UbdsDGrqOLcnN41Thw6C2/87d4cb9bf0dc8a9910815922ab227568/Author_from_scratch.png" class="article-body-image-wrapper"&gt;&lt;img src="//images.ctfassets.net/po4qc9xpmpuh/3UbdsDGrqOLcnN41Thw6C2/87d4cb9bf0dc8a9910815922ab227568/Author_from_scratch.png" alt="Author from scratch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This will create a new Lambda function with some sample code.&lt;/p&gt;

&lt;p&gt;&lt;a href="//images.ctfassets.net/po4qc9xpmpuh/4zWGPNfVzZnJ6GQ7QCQjKB/65c6ad1fc99d575e8418b21399cf625f/Lambda_function_sample_code.png" class="article-body-image-wrapper"&gt;&lt;img src="//images.ctfassets.net/po4qc9xpmpuh/4zWGPNfVzZnJ6GQ7QCQjKB/65c6ad1fc99d575e8418b21399cf625f/Lambda_function_sample_code.png" alt="Lambda function sample code"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this example, we will have to create a &lt;em&gt;Lambda function&lt;/em&gt; in an npm project and upload it to AWS. The &lt;em&gt;Lambda&lt;/em&gt; function will use the faunadb npm package. On your local machine, create an npm project and install the Fauna package by running the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;mkdir &lt;/span&gt;lambda-fauna
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;lambda-fauna
&lt;span class="nv"&gt;$ &lt;/span&gt;npm init &lt;span class="nt"&gt;-y&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;npm &lt;span class="nb"&gt;install &lt;/span&gt;faunadb
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;touch &lt;/span&gt;index.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, in the index.js file, add the following. This will create a Fauna client instance that is configured for our database and the query that will be executed when we run our Lambda function. Make sure to update the secret key from the one generated in the previous step. As a best practice, in production, this key should be retrieved using a &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html"&gt;secret management service.&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;faunadb&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;faunadb&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;faunadb&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
   &lt;span class="na"&gt;secret&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;&amp;lt;YOUR_SECRET_KEY&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="na"&gt;domain&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;db.us.fauna.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="c1"&gt;// NOTE: Use the correct domain for your database's Region Group.&lt;/span&gt;
   &lt;span class="na"&gt;port&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;443&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="na"&gt;scheme&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;exports&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;handler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Paginate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Ref&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;indexes/all_customers&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;
   &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt;
   &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, create a zip file of the folder by running the following.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;zip &lt;span class="nt"&gt;-r&lt;/span&gt; lambda-fauna.zip ./
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;From AWS, you can now upload the .zip file.&lt;/p&gt;

&lt;p&gt;&lt;a href="//images.ctfassets.net/po4qc9xpmpuh/djGbFaCwLObaQ1VuYPydA/9b4f37a52683719c28f9d35367834b76/Upload_zip_file.png" class="article-body-image-wrapper"&gt;&lt;img src="//images.ctfassets.net/po4qc9xpmpuh/djGbFaCwLObaQ1VuYPydA/9b4f37a52683719c28f9d35367834b76/Upload_zip_file.png" alt="Upload zip file"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once the file is uploaded, you should be able to test out the Lambda function. Click on the Test button. The response will now contain the data from the query.&lt;/p&gt;

&lt;p&gt;&lt;a href="//images.ctfassets.net/po4qc9xpmpuh/4QD81uzCj7YfzB3KBzqAi0/aad206f5e2cd28941db870f04583853b/Test_Lambda_function.png" class="article-body-image-wrapper"&gt;&lt;img src="//images.ctfassets.net/po4qc9xpmpuh/4QD81uzCj7YfzB3KBzqAi0/aad206f5e2cd28941db870f04583853b/Test_Lambda_function.png" alt="Test Lambda function"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With Fauna ‚Äî a flexible, developer-friendly, transactional database delivered as a secure and scalable cloud API with native GraphQL ‚Äî you can use serverless, multiregional instances in the cloud, accessible via an API. With native support for languages such as Node.js, C#, JVM, Go, and Python, Fauna makes developing applications easy.&lt;/p&gt;

&lt;p&gt;Developers can easily integrate Fauna into a serverless architecture and never worry about provisioning, scaling, sharding, replication, or correctness again. Using the &lt;a href="https://docs.fauna.com/fauna/current/drivers/javascript"&gt;Fauna Node.js driver&lt;/a&gt; and the Node.js serverless offline packages in their applications, developers can quickly build on and adapt their existing serverless workflows, focusing on the products they create rather than the platforms they must use.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#get-started-on-fauna-instantly-with-flexible-pricing-peruse"&gt;
  &lt;/a&gt;
  Get started on Fauna instantly with flexible pricing per-use
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Sign-up for free&lt;/strong&gt;&lt;br&gt;
The data API for modern applications is here. Sign-up for free without a credit card and get started instantly.&lt;br&gt;
&lt;a href="https://dashboard.fauna.com/accounts/register"&gt;Sign-up now&lt;/a&gt;  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Quick start guide&lt;/strong&gt;&lt;br&gt;
Try our quick start guide to get up and running with your first Fauna database, in only 5 minutes!&lt;br&gt;
&lt;a href="https://docs.fauna.com/fauna/v3/start/cloud"&gt;Read more&lt;/a&gt;&lt;/p&gt;

</description>
      <category>fauna</category>
      <category>serverless</category>
      <category>node</category>
    </item>
    <item>
      <title>Introduction to Go &amp; WebDev</title>
      <author>Valeria</author>
      <pubDate>Wed, 05 Jan 2022 23:11:32 +0000</pubDate>
      <link>https://dev.to/valeriavg/introduction-to-go-webdev-3a8j</link>
      <guid>https://dev.to/valeriavg/introduction-to-go-webdev-3a8j</guid>
      <description>&lt;p&gt;Throughout this series you will be building a social network that you could turn into your very own niched service üòé&lt;/p&gt;

&lt;p&gt;But worry not, you won't need to do it all at once! We'll take it one step at a time and we'll start from the very beginning.&lt;/p&gt;

&lt;p&gt;Today you are going to setup your development environment and build a minimalistic web server in Go.&lt;/p&gt;

&lt;p&gt;Sounds interesting? Let's get started then.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#grab-the-tools"&gt;
  &lt;/a&gt;
  Grab the tools
&lt;/h2&gt;

&lt;p&gt;Every self-respecting developer has a code editor üòé. &lt;br&gt;
If you don't have one yet, go ahead and grab &lt;a href="https://code.visualstudio.com/"&gt;VSCode&lt;/a&gt;. There are others, of course, but this one is good enough and free enough üòâ&lt;/p&gt;

&lt;p&gt;I mentioned that you'll be learning Go. That's a very powerful, yet easy to grasp language. And it has been widely adopted by the giants of tech industry so you won't have issues finding a juicy gig too ü§ë&lt;/p&gt;

&lt;p&gt;If you haven't installed Go &lt;em&gt;compiler&lt;/em&gt; yet, go ahead, download it from &lt;a href="https://go.dev/"&gt;go.dev&lt;/a&gt; &amp;amp; install.&lt;/p&gt;

&lt;p&gt;And last, but not least, you'll need a Go plugin for your code editor. If you're using VSCode get this &lt;a href="https://code.visualstudio.com/docs/languages/go"&gt;Official Go Plugin&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;All set? Nice job üëç &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#the-first-web-server"&gt;
  &lt;/a&gt;
  The First Web Server
&lt;/h2&gt;

&lt;p&gt;You'll need some descriptive name for your first project: something nice but short, like &lt;code&gt;web-server&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Open your code editor and then a new &lt;em&gt;terminal&lt;/em&gt; within the editor. In VSCode you can do it by selecting "Terminal" -&amp;gt; "New Terminal" from the top menu.&lt;/p&gt;

&lt;p&gt;To create a new Go project, type these commands in the terminal:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;mkdir &lt;/span&gt;web-server
&lt;span class="nb"&gt;cd &lt;/span&gt;web-server
go mod init web-server
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;You should now see &lt;code&gt;go.mod&lt;/code&gt; with the name of the project and Go version:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--24z4LxTm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c77um9dvzy19h9d404ej.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--24z4LxTm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c77um9dvzy19h9d404ej.png" alt="go.mod module web-server go 1.17" width="880" height="768"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Create a file called &lt;code&gt;main.go&lt;/code&gt; by the side of &lt;code&gt;go.mod&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;package&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;"log"&lt;/span&gt;
    &lt;span class="s"&gt;"net/http"&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;address&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="s"&gt;"localhost:8080"&lt;/span&gt;
    &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Server is listening on: http://%v"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ListenAndServe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Fatal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;To run the server type in terminal:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;go&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;You should see something like that:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SNf6IWvj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jnty67sup0be4b4bu1zj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SNf6IWvj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jnty67sup0be4b4bu1zj.png" alt="2022/01/05 18:57:23 Server is listening on: http://localhost:8080" width="880" height="817"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you see this error instead:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;2022/01/05 19:03:33 Server is listening on: http://localhost:8080
2022/01/05 19:03:33 listen tcp 127.0.0.1:8080: &lt;span class="nb"&gt;bind&lt;/span&gt;: address already &lt;span class="k"&gt;in &lt;/span&gt;use
&lt;span class="nb"&gt;exit &lt;/span&gt;status 1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Change the &lt;em&gt;port&lt;/em&gt; number in the address to another value, e.g. &lt;code&gt;8081&lt;/code&gt;, and try again.&lt;/p&gt;

&lt;p&gt;If you navigate your browser to &lt;a href="http://localhost:8080"&gt;http://localhost:8080&lt;/a&gt; (or the address you're using), you'll see:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8M7JtGz7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/24f1uiue47vlddbzuhrj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8M7JtGz7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/24f1uiue47vlddbzuhrj.png" alt="404 page not found" width="880" height="623"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It may not seem like one yet, but this thing that you've just made is a real &lt;em&gt;HTTP&lt;/em&gt; server.&lt;/p&gt;

&lt;p&gt;We'll dive deeper into the protocol itself further down the road, for now let's blindly trust &lt;code&gt;net/http&lt;/code&gt; package on it üòÅ&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;main.go&lt;/code&gt; file starts with &lt;code&gt;package main&lt;/code&gt;. Every Go file in the root of this directory should start exactly the same way. And, expectably, nested packages should be located in nested directories and called accordingly.&lt;/p&gt;

&lt;p&gt;Next, we are importing two packages from the standard library:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;"log"&lt;/span&gt;
    &lt;span class="s"&gt;"net/http"&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This tells the compiler to include code from these packages in addition to the code in the &lt;code&gt;main.go&lt;/code&gt; file. &lt;/p&gt;

&lt;p&gt;And then the &lt;code&gt;main&lt;/code&gt; function. You can have other functions here too, for example:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;aFunction&lt;/span&gt;&lt;span class="p"&gt;(){}&lt;/span&gt;
&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;anotherFunction&lt;/span&gt;&lt;span class="p"&gt;(){}&lt;/span&gt;
&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
&lt;span class="c"&gt;/** **/&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;But, unless you &lt;em&gt;call&lt;/em&gt; other functions from inside &lt;code&gt;main&lt;/code&gt;, they won't be executed. So &lt;code&gt;func main&lt;/code&gt; in a &lt;code&gt;main.go&lt;/code&gt; file is the entry point for any &lt;em&gt;executable&lt;/em&gt; project.&lt;/p&gt;

&lt;p&gt;And, finally, the contents of the &lt;code&gt;main&lt;/code&gt; function begin with a &lt;em&gt;variable&lt;/em&gt; called &lt;code&gt;address&lt;/code&gt;, that we are &lt;em&gt;assigning&lt;/em&gt; the value of &lt;code&gt;localhost:8080&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;If you hover over the variable name in your code editor, you'll see a hint like this:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="n"&gt;address&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;That's because operator &lt;code&gt;:=&lt;/code&gt; tells the compiler to &lt;em&gt;infer&lt;/em&gt; a type based on its value. You could explicitly &lt;em&gt;define&lt;/em&gt; the variable and assign a value to it too, works either way:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="n"&gt;address&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"localhost:8080"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Next up we are logging the full server address:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Server is listening on: http://%v"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;To do so we are calling a &lt;code&gt;Printf&lt;/code&gt; function from the &lt;code&gt;log&lt;/code&gt; package. The first &lt;em&gt;parameter&lt;/em&gt; is a string with a placeholder &lt;code&gt;%v&lt;/code&gt;, which means &lt;em&gt;use the default format&lt;/em&gt;. And the next parameter is what we want to replace the placeholder with.&lt;/p&gt;

&lt;p&gt;So if we'd want to format multiple things we would add multiple placeholders:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Server is listening on: http://%v:%v"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"localhost"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"8080"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;It's an easy way to compose strings and if you want to learn more, take a look at &lt;a href="https://pkg.go.dev/fmt"&gt;fmt package documentation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Finally we got to the most important line:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ListenAndServe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;As the name suggests, it calls &lt;code&gt;ListenAndServe&lt;/code&gt; function from the &lt;code&gt;net/http&lt;/code&gt; package and passes string address and a &lt;code&gt;nil&lt;/code&gt; as arguments.&lt;/p&gt;

&lt;p&gt;We don't really need the second argument, but in Go if a function requires an argument - you should pass an argument, you can't just skip it. And &lt;code&gt;nil&lt;/code&gt; means nothing in this case. Literally.&lt;/p&gt;

&lt;p&gt;Function &lt;code&gt;ListenAndServe&lt;/code&gt; returns an error, e.g. if it fails to bind the port. When there is no error its value will be &lt;code&gt;nil&lt;/code&gt;, that's why we check for it:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Fatal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;And, if so happens that there was an error, we log it and shut the server, that what &lt;code&gt;log.Fatal&lt;/code&gt; does.&lt;/p&gt;

&lt;p&gt;Phew, that was as long one. I'm glad you made it this far üòÖ&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#serving-content"&gt;
  &lt;/a&gt;
  Serving Content
&lt;/h2&gt;

&lt;p&gt;You've built a web server, but it doesn't do anything.&lt;br&gt;
How about we make it &lt;em&gt;respond&lt;/em&gt; with something more interesting?&lt;/p&gt;

&lt;p&gt;Add a new function to &lt;code&gt;main.go&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;HomePage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ResponseWriter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;req&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Write&lt;/span&gt;&lt;span class="p"&gt;(([]&lt;/span&gt;&lt;span class="kt"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="s"&gt;`&amp;lt;html&amp;gt;&amp;lt;body&amp;gt;&amp;lt;h1&amp;gt;I AM GROOT!&amp;lt;/h1&amp;gt;&amp;lt;/html&amp;gt;`&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;And add a line before &lt;code&gt;ListenAndServe&lt;/code&gt; call inside the &lt;code&gt;main&lt;/code&gt; function:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;address&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="s"&gt;"localhost:8080"&lt;/span&gt;
    &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Server is listening on: http://%v"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HandleFunc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;HomePage&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c"&gt;// &amp;lt;- Add this line&lt;/span&gt;
    &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ListenAndServe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Fatal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Stop server with &lt;code&gt;ctrl+c&lt;/code&gt; and start it again.&lt;br&gt;
You should see a huge header in your browser now:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EieMqizw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y3pj26iqtqzut2byn7wv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EieMqizw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y3pj26iqtqzut2byn7wv.png" alt="I AM GROOT" width="880" height="623"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you've probably guessed, we added a &lt;em&gt;handler&lt;/em&gt; to the server and pointed out that we would like to process all the requests, starting with the path &lt;code&gt;/&lt;/code&gt; with the &lt;code&gt;HomePage&lt;/code&gt; function:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HandleFunc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;HomePage&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Now the &lt;code&gt;HomePage&lt;/code&gt; function needs to have proper &lt;em&gt;type&lt;/em&gt;, that means the arguments and return values need to be exactly the way &lt;code&gt;http.HandleFunc&lt;/code&gt; wants it to be, and therefore we ended up with the following signature:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;HomePage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ResponseWriter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;req&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The first parameter is, as the name suggests, a response writer and the second one is a &lt;em&gt;pointer&lt;/em&gt; to the request that we are processing. Pointer types start with &lt;code&gt;*&lt;/code&gt; and mean that they are references to values, not the values itself.&lt;/p&gt;

&lt;p&gt;The actual work happens inside the body of the &lt;code&gt;HomePage&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Write&lt;/span&gt;&lt;span class="p"&gt;(([]&lt;/span&gt;&lt;span class="kt"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="s"&gt;`&amp;lt;html&amp;gt;&amp;lt;body&amp;gt;&amp;lt;h1&amp;gt;I AM GROOT!&amp;lt;/h1&amp;gt;&amp;lt;/html&amp;gt;`&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;We take this (stripped) HTML page text:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&amp;lt;body&amp;gt;&amp;lt;h1&amp;gt;&lt;/span&gt;I AM GROOT!&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Turn text into a &lt;em&gt;slice&lt;/em&gt; (sequence) of &lt;em&gt;bytes&lt;/em&gt;:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="p"&gt;([]&lt;/span&gt;&lt;span class="kt"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="n"&gt;some_text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The parenthesises around the &lt;code&gt;byte[]&lt;/code&gt; are there just to wrap the type, since it has the &lt;code&gt;[]&lt;/code&gt; part.If we'd want to convert the other way around we'd do:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;some_bytes&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;And finally, we send the page to the &lt;em&gt;client&lt;/em&gt;, that initiated &lt;em&gt;request&lt;/em&gt;, by calling &lt;code&gt;w.Write&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Woohoo! We built a server! ü•≥&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#but-did-we-build-a-server"&gt;
  &lt;/a&gt;
  But did we &lt;em&gt;build&lt;/em&gt; a server?
&lt;/h2&gt;

&lt;p&gt;Ooops, you're right, we have been using &lt;code&gt;go run&lt;/code&gt; so far, but &lt;code&gt;go&lt;/code&gt; compiles to an &lt;em&gt;executable&lt;/em&gt; program with ease!&lt;/p&gt;

&lt;p&gt;Stop the server (&lt;code&gt;ctrl+c&lt;/code&gt;) and type in terminal:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;go build &lt;span class="nb"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;You'll see new file called &lt;code&gt;web-server&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;Unix/MacOS users need to allow its execution with:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;chmod&lt;/span&gt; +x web-server
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Otherwise you can run it like any other program.&lt;/p&gt;

&lt;p&gt;For Unix:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;./web-server
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Or, for windows:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.\web-server.exe
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Good job! You've made it till the end! üëè&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#bonus-challenge"&gt;
  &lt;/a&gt;
  Bonus Challenge
&lt;/h2&gt;

&lt;p&gt;Hungry for more? Here's a challenge for you üí™:&lt;/p&gt;

&lt;p&gt;Take this &lt;em&gt;unit test&lt;/em&gt; file:&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;p&gt;Place it by the side of &lt;code&gt;main.go&lt;/code&gt; and make sure it passes when you run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;go &lt;span class="nb"&gt;test&lt;/span&gt; &lt;span class="nb"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You are only allowed to make changes to the &lt;code&gt;main.go&lt;/code&gt; file though!&lt;/p&gt;

&lt;p&gt;See you next time! And good luck!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/valeriavg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rb9xKs4G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png" alt="Buy me a coffee" width="545" height="153"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>go</category>
      <category>webdev</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Best open source todolist app and much more - Super productivity</title>
      <author>Ben Herbst</author>
      <pubDate>Wed, 05 Jan 2022 23:09:13 +0000</pubDate>
      <link>https://dev.to/benherbst/best-open-source-todolist-app-and-much-more-super-productivity-8i6</link>
      <guid>https://dev.to/benherbst/best-open-source-todolist-app-and-much-more-super-productivity-8i6</guid>
      <description>&lt;p&gt;&lt;strong&gt;What is Super Productivity?&lt;/strong&gt;&lt;br&gt;
Super Productivity - I like this app so much. It works on linux, windows, macos, android and ios and helps me getting better organised. I just write all my todos down there and they get synced from my pc to my phone and other devices. I can also look them up in the web, just as a browser tab while I am searching. It also supports note takeing, has a pomodoro timer and time tracking. It also has a habit tracker build-in, how nice is that. And the best part - it is FOSS, so I get all features for free, unlimited projects and I can read and modifiy the source code, hosted on github. It is avaible in the Microsoft store, so it gets updates automaticly but you can also download it from the website.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What I have tried before&lt;/strong&gt;&lt;br&gt;
I tried todoist, zenkit, any.do and much more before, but non of this apps get me. Thats why I got the neovim org mode plugin. But I had so much text then there in the .org file and it wasn't really organised, when you have 25 todo tasks a day. I have a backlog in super productivity and it is also synchronised with github issues and my ical calendar. It also supports gitlab and jira sync.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Best parts of the software&lt;/strong&gt;&lt;br&gt;
I think the best things of the software are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Nice design, you can switch the wallpaper to your own and have a clean look&lt;/li&gt;
&lt;li&gt;Good gestures for mobile&lt;/li&gt;
&lt;li&gt;Great pomodoro features&lt;/li&gt;
&lt;li&gt;Awesome habit tracker with click count and timer&lt;/li&gt;
&lt;li&gt;Good sync&lt;/li&gt;
&lt;li&gt;Free&lt;/li&gt;
&lt;li&gt;Open source&lt;/li&gt;
&lt;li&gt;And much more&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;&lt;br&gt;
I will still use this software in the future and I plan to write an article on dev.to after using it one month, so you can see if I still love this wonderful software. I will also use it for school stuff.&lt;/p&gt;

&lt;p&gt;Have a great day.&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>management</category>
      <category>pomodoro</category>
      <category>todolist</category>
    </item>
    <item>
      <title>Como personalizar o seu Windows Terminal com Powershell e oh-my-posh</title>
      <author>Amanda Martins</author>
      <pubDate>Wed, 05 Jan 2022 23:02:25 +0000</pubDate>
      <link>https://dev.to/mandysdev/como-personalizar-o-seu-windows-terminal-com-poweshell-e-oh-my-posh-3j52</link>
      <guid>https://dev.to/mandysdev/como-personalizar-o-seu-windows-terminal-com-poweshell-e-oh-my-posh-3j52</guid>
      <description>&lt;p&gt;Quem n√£o cansou da carinha padr√£o e sem gra√ßa do terminal do computador n√£o √© mesmo? Aqui voc√™ vai aprender a deixar o seu com uma apar√™ncia muito mais agrad√°vel, divertida e pessoal!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#requisitos-para-a-nossa-miss%C3%A3o"&gt;
  &lt;/a&gt;
  Requisitos para a nossa miss√£o ‚öíÔ∏è
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.microsoft.com/en-us/p/windows-terminal/9n0dx20hk701?activetab=pivot:overviewtab"&gt;Windows Terminal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/powershell/scripting/install/installing-powershell-on-windows?view=powershell-7.2"&gt;Powershell&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ohmyposh.dev/"&gt;oh-my-posh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://dahlbyk.github.io/posh-git/"&gt;posh-git&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Tanto o &lt;strong&gt;oh-my-posh&lt;/strong&gt; quanto o &lt;strong&gt;posh-git&lt;/strong&gt; iremos instalar atrav√©s de um script mais para frente...&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h2&gt;
  &lt;a href="#personalizando-o-perfil-do-powershell"&gt;
  &lt;/a&gt;
  Personalizando o perfil do Powershell üé®
&lt;/h2&gt;

&lt;p&gt;No Windows Terminal, voc√™ tem um perfil/apar√™ncia para cada CLI (interface de linha de comando), por exemplo: Powershell, Linux via WSL e o cl√°ssico cmd do Windows.&lt;/p&gt;

&lt;p&gt;Para customizar os perfis basta pressionar &lt;code&gt;Ctrl + ,&lt;/code&gt; ou abrir as configura√ß√µes do Windows Terminal, conforme a imagem abaixo:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5K4bjmRd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/noozmgvhfsef8zrj4q1x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5K4bjmRd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/noozmgvhfsef8zrj4q1x.png" alt="Imagem do menu com a op√ß√£o de configura√ß√µes do Windows Terminal" width="880" height="526"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Em seguida, voc√™ poder√° personalizar as fontes, tamanho do texto, entre outras configura√ß√µes. Eu deixo tudo padr√£o, alterando apenas as seguintes op√ß√µes:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Na aba de configura√ß√µes gerais:&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Nome:&lt;/strong&gt; o t√≠tulo que ir√° aparecer na aba do seu Windows Terminal para o Powershell, ou de outra CLI que voc√™ estiver personalizando, voc√™ pode colocar um nome referente ao uso daquela CLI, deixar o nome dela mesmo ou utilizar o seu nome, o que achar mais adequado para o seu uso;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Linha de comando:&lt;/strong&gt; o caminho para a CLI que estiver atrelada ao perfil, neste caso, vamos adicionar o comando &lt;code&gt;-nologo&lt;/code&gt; ao final do caminho, ficando por exemplo &lt;code&gt;C:\Program Files\PowerShell\7\pwsh.exe -nologo&lt;/code&gt;, assim evitamos que o Powershell escreva detalhes da sua inicializa√ß√£o, deixando a tela mais limpa ao iniciar;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Diret√≥rio de inicializa√ß√£o:&lt;/strong&gt; a pasta onde a CLI ir√° iniciar, voc√™ pode escolher, por exemplo, a pasta de um projeto especifico ou deixar como padr√£o a sua pasta de usu√°rio, com a vari√°vel &lt;code&gt;%USERPROFILE%&lt;/code&gt;, eu deixo com a minha pasta de usu√°rio;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;√çcone:&lt;/strong&gt; √© o √≠cone que ir√° aparecer ao lado do nome na aba do Windows Terminal, voc√™ pode deixar o padr√£o, ou colocar algum √≠cone personalizado ao seu gosto.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Na aba de apar√™ncia:&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Cor do tema:&lt;/strong&gt; √© a paleta de cores utilizada para aquele perfil, eu utilizo a Campbell;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Fonte:&lt;/strong&gt; √© a fonte utilizada, eu utilizo a Cascadia Code, mas voc√™ pode utilizar qualquer uma de seu gosto;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tamanho da fonte:&lt;/strong&gt; voc√™ pode utilizar a que melhor se adequar as suas prefer√™ncias e tamanho de tela, eu particularmente utilizo 12;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cursor:&lt;/strong&gt; √© o ponteiro que ir√° ser exibido ao digitar, eu particularmente utilizo a barra;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Acr√≠lico:&lt;/strong&gt; √© o efeito de transpar√™ncia do fundo da janela, eu utilizo em 50%, mas √© apenas uma prefer√™ncia est√©tica, e caso te atrapalhe, voc√™ pode optar por manter desativado.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Existem muitas outras personaliza√ß√µes que voc√™ pode alterar conforme a sua prefer√™ncia, mas para n√£o me estender muito, listei apenas as altera√ß√µes necess√°rias e aquelas que eu particularmente altero.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#finalizando-com-as-instala%C3%A7%C3%B5es"&gt;
  &lt;/a&gt;
  Finalizando com as instala√ß√µes ‚òï
&lt;/h2&gt;

&lt;p&gt;Para come√ßar as instala√ß√µes, precisamos abrir o Windows Terminal em modo de administra√ß√£o, e liberar a execu√ß√£o e instala√ß√£o de m√≥dulos pelo Powershell, para isso, basta copiar e colar o comando abaixo clicando com o bot√£o direito do mouse no seu terminal:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight powershell"&gt;&lt;code&gt;&lt;span class="n"&gt;Set-ExecutionPolicy&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-ExecutionPolicy&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;RemoteSigned&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Feito isso, vamos rodar o seguinte comando para abrir no VSCode (ou na sua IDE de prefer√™ncia) um script para executar comandos em fila no nosso perfil:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight powershell"&gt;&lt;code&gt;&lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="bp"&gt;$PROFILE&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Agora basta colar o script abaixo, e ao salvar ele ir√° automaticamente executar os comandos no seu Powershell.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight powershell"&gt;&lt;code&gt;&lt;span class="n"&gt;Import-Module&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;posh-git&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="n"&gt;Import-Module&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;oh-my-posh&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="n"&gt;Set-PoshPrompt&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;M365Princess&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="n"&gt;Enable-PoshTooltips&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="n"&gt;Clear-Host&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Import-Module:&lt;/strong&gt; √© o comando utilizado para baixar e instalar os m√≥dulos;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Set-PoshPrompt:&lt;/strong&gt; √© o comando utilizado para definir o tema do seu oh-my-posh, no meu caso, eu utilizo o M365Princess, mas voc√™ pode encontrar outros &lt;a href="https://ohmyposh.dev/docs/themes"&gt;neste link&lt;/a&gt;;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Enable-PoshTooltips:&lt;/strong&gt; √© o comando utilizado para ativar as &lt;a href="https://ohmyposh.dev/docs/config-tooltips"&gt;Tooltips&lt;/a&gt; do oh-my-posh, que s√£o dicas que aparecem no canto direito, como por exemplo, em qual branch voc√™ est√° trabalhando;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Clear-Host:&lt;/strong&gt; √© o comando utilizado para sempre limpar a tela ao inicializar.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h2&gt;
  &lt;a href="#ao-infinito-e-al%C3%A9m"&gt;
  &lt;/a&gt;
  Ao infinito e al√©m! üöÄ
&lt;/h2&gt;

&lt;p&gt;Para finalizar podemos fechar tudo e voltar a inicializar o Windows Terminal fora do modo de administra√ß√£o sem problemas.&lt;/p&gt;

&lt;p&gt;N√£o se preocupe se ficar quadradinhos no lugar de alguns elementos do tema, demora um pouco at√© as configura√ß√µes se ajeitarem.&lt;/p&gt;

&lt;p&gt;Aproveite tamb√©m para testar outros temas e configura√ß√µes para deixar o seu terminal ainda mais pessoal.&lt;/p&gt;

&lt;p&gt;E nos vemos em breve! üíô&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#refer%C3%AAncias"&gt;
  &lt;/a&gt;
  Refer√™ncias üìö
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://ohmyposh.dev/"&gt;Documenta√ß√£o do oh-my-posh&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.hanselman.com/blog/my-ultimate-powershell-prompt-with-oh-my-posh-and-the-windows-terminal"&gt;Tutorial feito por Scott Hanselman&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://docs.microsoft.com/pt-br/windows/terminal/tutorials/custom-prompt-setup"&gt;Tutorial feito pela Microsoft&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://balta.io/blog/windows-terminal"&gt;Tutorial feito por balta.io&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>beginners</category>
      <category>tutorial</category>
      <category>windows</category>
      <category>terminal</category>
    </item>
    <item>
      <title>6 Julia Frameworks to Create Desktop GUI‚Äôs  and Web Apps</title>
      <author>Logan Kilpatrick</author>
      <pubDate>Wed, 05 Jan 2022 22:42:18 +0000</pubDate>
      <link>https://dev.to/logankilpatrick/6-julia-frameworks-to-create-desktop-guis-and-web-apps-1mob</link>
      <guid>https://dev.to/logankilpatrick/6-julia-frameworks-to-create-desktop-guis-and-web-apps-1mob</guid>
      <description>&lt;p&gt;&lt;a href="https://towardsdatascience.com/6-julia-frameworks-to-create-desktop-guis-and-web-apps-9ae1a941f115?source=rss-2c8aac9051d3------2"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PVKFRNhY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2600/0%2A8rEjoHvLXEFDK4kk" alt="" width="880" height="587"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You could build beautiful apps purely in Julia.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://towardsdatascience.com/6-julia-frameworks-to-create-desktop-guis-and-web-apps-9ae1a941f115?source=rss-2c8aac9051d3------2"&gt;Continue reading on Towards Data Science ¬ª&lt;/a&gt;&lt;/p&gt;

</description>
      <category>programming</category>
      <category>julialang</category>
      <category>visualization</category>
      <category>coding</category>
    </item>
    <item>
      <title>Are You a Second Career Dev? Your Pivot Skills Are Your Superpowers</title>
      <author>Ben Greenberg</author>
      <pubDate>Wed, 05 Jan 2022 21:54:59 +0000</pubDate>
      <link>https://dev.to/bengreenberg/are-you-a-second-career-dev-your-pivot-skills-are-your-superpowers-54np</link>
      <guid>https://dev.to/bengreenberg/are-you-a-second-career-dev-your-pivot-skills-are-your-superpowers-54np</guid>
      <description>&lt;p&gt;We are living in the midst of the &lt;a href="https://hbr.org/2021/09/who-is-driving-the-great-resignation"&gt;great resignation&lt;/a&gt;. More people are actively transitioning out of careers and into new fields now than perhaps at any other time in recent memory.&lt;/p&gt;

&lt;p&gt;A lot of those people are choosing software as their next career. You may even be among them.&lt;/p&gt;

&lt;p&gt;Why software?&lt;/p&gt;

&lt;p&gt;There is a myriad of reasons why people choose to enter software development:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The joy of creating things from scratch&lt;/li&gt;
&lt;li&gt;The thrill of problem solving&lt;/li&gt;
&lt;li&gt;The lifelong journey of continuing education&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;and...&lt;/p&gt;

&lt;p&gt;There is &lt;strong&gt;a lot of money&lt;/strong&gt; to be made in the field.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4X19Q-J---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/890z8jnf8yj5t5bya2if.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4X19Q-J---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/890z8jnf8yj5t5bya2if.png" alt="Chart showing salaries of software devs on average compared to everyone else" width="880" height="559"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Data from 2018 already showed that the average software developer earned &lt;strong&gt;3 times&lt;/strong&gt; more than other working individuals in the United States.&lt;/p&gt;

&lt;p&gt;Yet, entering software as a second career developer can often be overwhelming and intimidating.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--erpzFKxj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a9rasd5o8zrkgit21sjd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--erpzFKxj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a9rasd5o8zrkgit21sjd.png" alt="Screenshot of tweet showing Larry David and a much younger person with the younger person captioned as the senior developer, and Larry David as the junior developer" width="596" height="864"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I am here to tell you that as a second career developer you have something that can be an incredible boost to your work. Counter-intuitively, this boost is often seen as a detraction.&lt;/p&gt;

&lt;p&gt;What is it? &lt;em&gt;Your previous job experience.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The work you did before can be pivoted as incredibly in-demand skills that complement your newly learned technical skillset.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--o3NJcklh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8zys0aciinoy8hm9f58e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o3NJcklh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8zys0aciinoy8hm9f58e.png" alt="A description of example careers from before tech that can be transitioned into pivot skills" width="880" height="454"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Were you a salesperson?&lt;/strong&gt; You carry with you deeply valuable lessons on customer relations. Hiring managers are eager for developers who can interface with a client.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Were you a teacher?&lt;/strong&gt; You have priceless experience crafting semester and year-long lesson plans that can easily be transitioned into sprint planning for complex work projects.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Were you involved in construction?&lt;/strong&gt; You have the ability to see multi-faceted and complicated specifications to completion. That is a skill many software engineers can take years to develop.&lt;/p&gt;

&lt;p&gt;This is an area I feel deeply passionate about. You can hear more from my experience from the recording of my recent talk at RubyConf in Denver:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/_YhBMu43Lm4"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;I recently launched &lt;a href="https://hirethepivot.com"&gt;hirethePIVOT&lt;/a&gt; to empower second career devs to highlight themselves and their pivot skills, to be noticed, and to hopefully find a job or their next contract work.&lt;/p&gt;

&lt;p&gt;I created hirethePIVOT because I, too, am a second career developer. After a decade in the clergy I have spent the past several years working for tech companies as an engineer, developer advocate, and now lead developer relations engineer.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_v6tkHR7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wn0eo2krsinr41zviljk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_v6tkHR7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wn0eo2krsinr41zviljk.png" alt="Screenshot of hirethePIVOT home page" width="880" height="681"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The site will &lt;em&gt;always&lt;/em&gt; remain free for second career devs, and I am working hard to get it in front of the eyes of as many hiring managers and recruiters as possible to lift all of us up and to educate on the incredible value second career devs bring to their work.&lt;/p&gt;

&lt;p&gt;If you are a second career developer, &lt;a href="https://hirethepivot.com/users/sign_up"&gt;go ahead and take a moment to add your profile&lt;/a&gt;, whether you are currently looking for work or not. The more we can showcase our unique backgrounds and the ways in which our life stories contribute to our work as engineers, the better it will be for all of us.&lt;/p&gt;

</description>
      <category>career</category>
      <category>codenewbie</category>
      <category>showdev</category>
    </item>
  </channel>
</rss>
