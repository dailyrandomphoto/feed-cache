<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>‚≠êBuilding a Quiz Application in Python [video]</title>
      <author>The Nerdy Dev</author>
      <pubDate>Sat, 22 May 2021 17:18:54 +0000</pubDate>
      <link>https://dev.to/thenerdydev/building-a-quiz-application-in-python-video-17k2</link>
      <guid>https://dev.to/thenerdydev/building-a-quiz-application-in-python-video-17k2</guid>
      <description>&lt;p&gt;In this video, we will learn how we can create a Quiz Application using Python. &lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/kqa-BYI46ss"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;Follow me on:&lt;br&gt;
üëâ Twitter: &lt;a href="https://twitter.com/The_Nerdy_Dev"&gt;https://twitter.com/The_Nerdy_Dev&lt;/a&gt;&lt;br&gt;
üëâ Instagram: &lt;a href="https://instagram.com/thenerdydev"&gt;https://instagram.com/thenerdydev&lt;/a&gt;&lt;br&gt;
üëâ YouTube: &lt;a href="https://youtube.com/thenerdydev"&gt;https://youtube.com/thenerdydev&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PS&lt;/strong&gt; - Make sure to subscribe to my YouTube Channel for FREE content on Web Development and loads of other technologies. &lt;/p&gt;

</description>
      <category>python</category>
      <category>programming</category>
      <category>100daysofcode</category>
    </item>
    <item>
      <title>Consecutive difference of elements in an Array</title>
      <author>Mayank Pathak</author>
      <pubDate>Sat, 22 May 2021 16:39:07 +0000</pubDate>
      <link>https://dev.to/mayankpathak/consecutive-difference-of-elements-in-an-array-3hih</link>
      <guid>https://dev.to/mayankpathak/consecutive-difference-of-elements-in-an-array-3hih</guid>
      <description>&lt;p&gt;Hiüëã guys, In this post we gonna check a most basic but most important programming problem in which we have to find the consecutive difference of elements in a given Array. This problem I came across when I was giving a codingüë®‚Äçüíª testüß™ during my placement üë®‚Äç‚úàÔ∏è season.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#problem-description"&gt;
  &lt;/a&gt;
  Problem description
&lt;/h3&gt;

&lt;p&gt;You are given with a circular array. Your task is calculate the difference between two consecutive number. And if difference is greater than ‚Äòk‚Äô, print 1 else print 0&lt;/p&gt;

&lt;p&gt;Input Description: You are given two numbers ‚Äòn‚Äô, ‚Äôm‚Äô. Next line contains n space separated integers.&lt;/p&gt;

&lt;p&gt;Output Description: Print 1 if the difference is greater than ‚Äòm‚Äô.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Sample Input :&lt;/em&gt;&lt;br&gt;
5 15&lt;br&gt;
50 65 85 98 35&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Sample Output :&lt;/em&gt;&lt;br&gt;
 0 1 0 1 0&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cjTk1xYn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ey26wxo1vv0r2oxkt6rg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cjTk1xYn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ey26wxo1vv0r2oxkt6rg.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#logic-to-follow-to-comeup-with-the-solution-"&gt;
  &lt;/a&gt;
  Logic to follow to come-up with the solution :
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Declare the required sets of variables to use in the code.&lt;/li&gt;


&lt;li&gt;Input the user input size of the array and its elements.&lt;/li&gt;

&lt;li&gt;Now iterate from initialization as 0 till the second last element.&lt;/li&gt;

&lt;li&gt;And inside it finds the absolute difference of two consecutive numbers, also if the difference is greater than the inputted value then prints 1 or in other case print 0.&lt;/li&gt;

(Absolute convert the -ve computed value into +ve. Ex. abs (-15) to (15)

&lt;li&gt;Now iterate from second last element till the last element, this is done to compute the difference of last and first element of the array.&lt;/li&gt;

&lt;li&gt;Similarly, inside it find the absolute difference of two consecutive numbers, also if the difference is greater than the inputted value then prints 1 or in other case print 0.&lt;/li&gt;

&lt;li&gt;At last we get the required set of the 1‚Äôs and 0‚Äôs by computing the absolute difference.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;
  &lt;a href="#now-lets-come-to-the-coding-part-of-the-problem"&gt;
  &lt;/a&gt;
  Now let's come to the coding part of the problemüë®‚Äçüíª
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Code ‚úç&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#include &amp;lt;iostream&amp;gt;
using namespace std;
int main() {
    int n,k;
    cin&amp;gt;&amp;gt;n&amp;gt;&amp;gt;k;
    int a[n];
    for(int i=0;i&amp;lt;n;i++)
    {
        cin&amp;gt;&amp;gt;a[i];
    }
    for(int i=0;i&amp;lt;n-1;i++)
    {
        if(abs(a[i]-a[i+1])&amp;gt;k)
        {
            cout&amp;lt;&amp;lt;"1 ";
        }
        if(abs(a[i]-a[i+1])&amp;lt;=k)
        {
            cout&amp;lt;&amp;lt;"0 ";
        }
    }
      for(int i=n-1;i&amp;lt;n;i++)
    {
        if(abs(a[n-1]-a[0])&amp;gt;k)
        {
            cout&amp;lt;&amp;lt;"1";
        }
        if(abs(a[n-1]-a[0])&amp;lt;=k)
        {
            cout&amp;lt;&amp;lt;"0";
        }
    }
    return 0;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Sample Input&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;5 15
50 65 85 98 35
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Sample Output&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;0 1 0 1 0
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Hence with the required set of problem we came across to know one of the important problem in Array and we can make the concept array strong with practicing such kinds of problem as much as we can.&lt;/p&gt;

&lt;p&gt;Hope with this you learned and acquired some basic knowledge on C++ Programming.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Drop a Love‚ù§&lt;/strong&gt; if you likedüëç this post, then share ü§ùthis with your friends and if anything is confusing or incorrect then let me know in the comment section.&lt;/p&gt;

&lt;p&gt;Thanks from my side, this is Mayank, keep learning and exploring !!&lt;/p&gt;

&lt;p&gt;Support Me to write great articles by Clickingüëá&lt;br&gt;
&lt;a href="https://www.buymeacoffee.com/mayankpathak"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rb9xKs4G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png" alt="Buy Me A Coffee"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Meet you in the next article......till than see yaü§ö&lt;/p&gt;

</description>
      <category>codenewbie</category>
      <category>beginners</category>
      <category>cpp</category>
      <category>programming</category>
    </item>
    <item>
      <title>Tell Me About A Time You Had To Manage Conflicting Priorities | Facebook Behavioral Interview Series</title>
      <author>The Interview Sage</author>
      <pubDate>Sat, 22 May 2021 16:03:06 +0000</pubDate>
      <link>https://dev.to/theinterviewsage/tell-me-about-a-time-you-had-to-manage-conflicting-priorities-facebook-behavioral-interview-series-24fc</link>
      <guid>https://dev.to/theinterviewsage/tell-me-about-a-time-you-had-to-manage-conflicting-priorities-facebook-behavioral-interview-series-24fc</guid>
      <description>&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/B0o4X3Z3_cE"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Before we discuss this question, let us recap what the Behavioral Interview Round at Facebook is.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i8RAbw1Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m8ob8tjoldnkf5h1vyn6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i8RAbw1Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m8ob8tjoldnkf5h1vyn6.png" alt="What is a Behavioral Interview Round at Facebook?" title="What is a Behavioral Interview Round at Facebook?"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Behavioral Interview Round is also known as the Jedi Interview round at Facebook.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It is about you and your history, your r√©sum√©, and your motivation.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The purpose of this interview is to assess whether the candidate will thrive in Facebook's peer-to-peer, minimal process, and unstructured engineering organization.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For Software Engineers, the behavioral interview is actually part behavioral and part coding. The coding part is a shorter version of the usual coding interviews and is included to supplement the other two coding interviews to get an additional coding signal.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#tips-amp-tricks-to-effectively-prepare-for-behavioral-interviews"&gt;
  &lt;/a&gt;
  Tips &amp;amp; Tricks to effectively prepare for Behavioral Interviews
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_kgnGQmN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4y9t832s7yc0j58aycqb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_kgnGQmN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4y9t832s7yc0j58aycqb.png" alt="Tips &amp;amp; Tricks to effectively prepare for Behavioral Interviews" title="Behavioral Interview Tips &amp;amp; Tricks"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Know yourself! Take the time to review your r√©sum√©, as the interviewer will almost certainly ask about key events in your work history.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Have concrete examples or anecdotes to support each of the questions.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Familiarize yourself with &lt;a href="https://investor.fb.com/resources/"&gt;Facebook's mission statement&lt;/a&gt; and its &lt;a href="https://www.facebook.com/careers/facebook-life/"&gt;five core values&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Be Bold&lt;/li&gt;
&lt;li&gt;Focus on Impact&lt;/li&gt;
&lt;li&gt;Move Fast&lt;/li&gt;
&lt;li&gt;Be Open&lt;/li&gt;
&lt;li&gt;Build Social Value&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Be yourself! Be open and honest about your successes and failures.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Be humble and focus on teamwork, leadership, and mentorship qualities.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now, let us review how to effectively answer the question on Managing Conflicting Priorities in the interview.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#question-tell-me-about-a-time-you-had-to-manage-conflicting-priorities"&gt;
  &lt;/a&gt;
  Question: Tell me about a time you had to manage conflicting priorities
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0eHelyj3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j7n47zkssroaqlfcimge.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0eHelyj3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j7n47zkssroaqlfcimge.png" alt="Tell me about a time you had to manage conflicting priorities" title="Tell me about a time you had to manage conflicting priorities"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&lt;a href="https://www.youtube.com/watch?v=B0o4X3Z3_cE"&gt;Video Explanation&lt;/a&gt; with Evaluation Criteria, Response Framework, Tips &amp;amp; Tricks, and a Special Case of "Never Had Conflicting Priorities".&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Time management is a crucial part of everyone's career.&lt;/p&gt;

&lt;p&gt;Interviewers often ask candidates to tell about a time when they had to manage conflicting or shifting priorities at their workplace.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#evaluation-criteria"&gt;
  &lt;/a&gt;
  Evaluation Criteria
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qHPdurfW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7n8fhyj1cmct6ld7hgr5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qHPdurfW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7n8fhyj1cmct6ld7hgr5.png" alt="Evaluation Criteria for Tell me about a time you had to manage conflicting priorities" title="Evaluation Criteria for 'Tell me about a time you had to manage conflicting priorities'"&gt;&lt;/a&gt; &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E6CGLkdV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fgzfo514ghbly8pqgoaw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E6CGLkdV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fgzfo514ghbly8pqgoaw.png" alt="Evaluation Criteria for Tell me about a time you had to manage conflicting priorities" title="Evaluation Criteria for 'Tell me about a time you had to manage conflicting priorities'"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Everyone deals with conflicting priorities and shifting deadlines in their jobs.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;By this question, the interviewer's goal is to evaluate:

&lt;ul&gt;
&lt;li&gt;How you manage your time,&lt;/li&gt;
&lt;li&gt;Exercise judgment,&lt;/li&gt;
&lt;li&gt;Communicate, and&lt;/li&gt;
&lt;li&gt;Shift gears when needed.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;They want to know if you can handle competing priorities and understand the implications of missing deadlines.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The interviewers are trying to assess whether you can work under challenging situations or unstructured environments and distinguish between the urgent and the important.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;They are also looking to see if your coworkers can rely on you to get the work done.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#response-framework"&gt;
  &lt;/a&gt;
  Response Framework
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nSH4xQoo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uuistwhyp13ozqg8yhdv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nSH4xQoo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uuistwhyp13ozqg8yhdv.png" alt="Response Framework for Tell me about a time you had to manage conflicting priorities" title="Response Framework for 'Tell me about a time you had to manage conflicting priorities'"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Our advice is to pick a compelling and honest story that can articulate a real-life experience where you had to manage conflicting priorities and shifting deadlines at your workplace.&lt;/p&gt;

&lt;p&gt;Describe the situation, the events that occurred, and explain how the priorities shifted while working on a particular project. It can be that your manager or coworker might hand you a last-minute request that is of higher importance or something genuinely urgent comes up for which you had to drop everything else.&lt;/p&gt;

&lt;p&gt;Explain to the interviewer how you evaluated and decided your plan of action and how you communicated about this shift with your manager, coworkers, and other stakeholders. If your current task cannot be deprioritized for some reason, describe to the interviewer how you handled it by asking for additional help or resources from your manager.&lt;/p&gt;

&lt;p&gt;Finally, express how the outcome and the impact were beneficial to the company or team.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tips-amp-tricks"&gt;
  &lt;/a&gt;
  Tips &amp;amp; Tricks
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--w34FWAYp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vb19csfac95k2e2uy5g1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w34FWAYp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vb19csfac95k2e2uy5g1.png" alt="Tips and Tricks" title="Tips &amp;amp; Tricks for 'Tell me about a time you had to manage conflicting priorities'"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Always remain calm and professional.

&lt;ul&gt;
&lt;li&gt;Refrain from being negative and avoid blaming your employer, coworkers, or manager.&lt;/li&gt;
&lt;li&gt;Companies generally do not like to hire people who are always pointing fingers at others.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Use a compelling story that is honest and believable.

&lt;ul&gt;
&lt;li&gt;It is most desirable to describe a real-life example to the interviewer to show that you have actually faced such a situation in your career and not just talk about a generic strategy.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Do not sugarcoat your answer with irrelevant details.

&lt;ul&gt;
&lt;li&gt;Spend more time talking about the actions you took to handle the conflicting priorities.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Show that you proactively communicated about the shift to all the stakeholders to keep them well informed.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Focus on the business impact that you had on your company or team.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Prepare the response for this question beforehand, as it will be tough to structure your answer on the spot during the interview.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Do not memorize the answer as it should come naturally, and you should sound confident to the interviewer.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#special-case-never-had-conflicting-priorities"&gt;
  &lt;/a&gt;
  Special Case: Never Had Conflicting Priorities
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eJXo4NCw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yfdkozfzw58zwu7t2oim.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eJXo4NCw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yfdkozfzw58zwu7t2oim.png" alt="Special Case: Never Had Conflicting Priorities" title="Special Case: Never Had Conflicting Priorities"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It may be the case that you actually never had to face conflicting priorities and shifting deadlines in your workplace. New Grads and entry-level software engineers usually fall under this category.&lt;/p&gt;

&lt;p&gt;If you are in such a situation, do not end your answer by simply saying that you never had a conflicting priority in your workplace. Instead, try to use a real experience from your college. For example:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Handling multiple courses and projects,&lt;/li&gt;
&lt;li&gt;Dividing the time between your part-time job and coursework, etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This will help the interviewer evaluate you on various attributes that we mentioned earlier, like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;How you manage your time,&lt;/li&gt;
&lt;li&gt;Exercise judgment,&lt;/li&gt;
&lt;li&gt;Communicate, and&lt;/li&gt;
&lt;li&gt;Shift gears when needed.&lt;/li&gt;
&lt;/ul&gt;




&lt;h1&gt;
  &lt;a href="#preparation-material"&gt;
  &lt;/a&gt;
  Preparation Material
&lt;/h1&gt;

&lt;p&gt;Learn more about the Evaluation Criteria, Response Framework, and Tips &amp;amp; Tricks to effectively prepare and answer the top questions asked in the Behavioral Interviews at Facebook. Certain special cases are also discussed which are usually faced by the candidates during these interviews.&lt;/p&gt;

&lt;p&gt;‚¨áÔ∏è &lt;a href="https://www.buymeacoffee.com/interviewsage/e/30176"&gt;Detailed Written Notes on Top Facebook Behavioral Interview Questions&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#cracking-the-facebook-behavioral-interview"&gt;
  &lt;/a&gt;
  Cracking the Facebook Behavioral Interview
&lt;/h1&gt;

&lt;p&gt;If you have not read our first article on Top Facebook Behavioral Interview Questions, we recommend reading it by clicking the below link:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/theinterviewsage" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xMM4L2Ac--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--B2cc8AK0--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/553012/244b250a-5230-4388-84d4-0c1d1ff70fb9.png" alt="theinterviewsage image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/theinterviewsage/top-facebook-behavioral-interview-questions-part-1-2a0o" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Top Facebook Behavioral Interview Questions (Part 1)&lt;/h2&gt;
      &lt;h3&gt;The Interview Sage „Éª May 15 „Éª 9 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#career&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;





&lt;h1&gt;
  &lt;a href="#cracking-the-facebook-system-design-interview"&gt;
  &lt;/a&gt;
  Cracking the Facebook System Design Interview
&lt;/h1&gt;

&lt;p&gt;In case if you have not read our series on Cracking the Facebook System Design Interview, we recommend reading it by clicking the below link:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/theinterviewsage" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xMM4L2Ac--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--B2cc8AK0--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/553012/244b250a-5230-4388-84d4-0c1d1ff70fb9.png" alt="theinterviewsage image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/theinterviewsage/top-facebook-system-design-interview-questions-31np" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Top Facebook System Design Interview Questions (Part 1)&lt;/h2&gt;
      &lt;h3&gt;The Interview Sage „Éª Jan 4 „Éª 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#career&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;





&lt;h1&gt;
  &lt;a href="#useful-links"&gt;
  &lt;/a&gt;
  Useful Links
&lt;/h1&gt;

&lt;p&gt;üë©‚Äçüíª &lt;a href="https://www.educative.io/courses/grokking-the-system-design-interview?aff=KQZl"&gt;Best System Design Interview Course&lt;/a&gt;&lt;br&gt;
üíª &lt;a href="https://www.educative.io/courses/grokking-the-coding-interview?aff=KQZl"&gt;Grokking the Coding Interview&lt;/a&gt;&lt;br&gt;
ü§ñ &lt;a href="https://www.educative.io/courses/grokking-the-machine-learning-interview?aff=KQZl"&gt;Best Machine Learning Interview Course&lt;/a&gt;&lt;br&gt;
üìö &lt;a href="https://smarturl.it/InterviewPrepBook"&gt;Recommended Interview Preparation Book (on Amazon)&lt;/a&gt;&lt;br&gt;
üí∞ &lt;a href="https://educative.io/TheInterviewSage"&gt;Exclusive 10% off on Educative Unlimited for first 100 users&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/InterviewSage"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--121vjxPu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/o2l00b1bt3nl8fdfb0nn.png" alt="Buy Me a Coffee"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;center&gt;‚òïÔ∏è Buy us a Coffee at &lt;a href="https://www.buymeacoffee.com/InterviewSage"&gt;BuyMeACoffee.com/InterviewSage&lt;/a&gt;
&lt;/center&gt;



&lt;blockquote&gt;
&lt;p&gt;This article is part of the series on Behavioral Interviews at Facebook. So, follow us to get notified when our next article in this series is published. Thanks for reading! &lt;/p&gt;
&lt;div class="ltag__user ltag__user__id__553012"&gt;
  
    .ltag__user__id__553012 .follow-action-button {
      background-color: #3b49df !important;
      color: #f9fafa !important;
      border-color: #3b49df !important;
    }
  
    &lt;a href="/theinterviewsage" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xMM4L2Ac--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--B2cc8AK0--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/553012/244b250a-5230-4388-84d4-0c1d1ff70fb9.png" alt="theinterviewsage image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/theinterviewsage"&gt;The Interview Sage&lt;/a&gt;
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/theinterviewsage"&gt;Our goal is to create Software Eng Interview tutorials to help you get a job at companies like Facebook, Google, Apple, &amp;amp; Amazon. We will deep-dive into System Design, Coding, &amp;amp; Behavioral interviews.&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;



&lt;/blockquote&gt;

&lt;p&gt;üì∏ Some images used are from free&lt;span&gt;pik&lt;/span&gt;.com: Freepik, pch.vector, vectorjuice, pikisuperstar, raw&lt;span&gt;pixel&lt;/span&gt;.com, slidesgo, stories, Upklyak, jcomp&lt;/p&gt;

&lt;p&gt;&lt;a href="https://disclosureanddisclaimer.theinterviewsage.com/"&gt;Full Disclosure &amp;amp; Disclaimer&lt;/a&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>tutorial</category>
      <category>programming</category>
      <category>career</category>
    </item>
    <item>
      <title>Build a Node.js graphQL API with NestJS and Prisma</title>
      <author>Yuval Hazaz</author>
      <pubDate>Sat, 22 May 2021 15:29:38 +0000</pubDate>
      <link>https://dev.to/yuvalhazaz/building-e-commerce-application-with-node-js-and-graphql-api-5dn5</link>
      <guid>https://dev.to/yuvalhazaz/building-e-commerce-application-with-node-js-and-graphql-api-5dn5</guid>
      <description>&lt;p&gt;Building an API requires spending too much time on boilerplate and repetitive coding. Defining the data model, connecting the database to the server, creating the API endpoints, add security and permissions layer, logging, validation, identity management, sorting, filtering, pagination... the list is long. &lt;/p&gt;

&lt;p&gt;In this post, I will show you how to create all these using Amplication. We will generate a GraphQL API for an e-commerce application, built with Node.JS, NestJS, Prisma, PostgreSQL,  and some additional great open-source technologies. &lt;/p&gt;

&lt;p&gt;Amplication is an open-source developers' platform that generates an API and a client based on your data model. It saves hours and even days of boilerplate coding. &lt;/p&gt;

&lt;p&gt;You can use the UI or a CLI to define the data model, and Amplication generates everything you need to start building your next app. The generated source code is fully readable and editable, written in TypeScript, and it even includes tests. &lt;/p&gt;

&lt;p&gt;By the end of this tutorial, you will have the source code of the backend and client, and you will be able to start writing the custom business logic of your API, or creating the coolest client application or mobile app to work with the API. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-generated-code"&gt;
  &lt;/a&gt;
  The Generated Code
&lt;/h2&gt;

&lt;p&gt;So, let's first have a high-level overview of the generated source code. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H-u5yWLK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bjp23cop3wycdchkg9t1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H-u5yWLK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bjp23cop3wycdchkg9t1.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The generated source-code shown in this post is available in &lt;a href="https://github.com/amplication/e-commerece-sample"&gt;https://github.com/amplication/e-commerece-sample&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We can see that Amplication generates two separate projects for us -  "admin-ui", and "server". &lt;br&gt;
The "server" folder contains the Node.JS code for our GraphQL API, and the "admin-ui" contains the React-Admin code for an admin application that connects to the API and provides CRUD operations for all our data models.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#lets-start"&gt;
  &lt;/a&gt;
  Let's Start
&lt;/h2&gt;

&lt;p&gt;For this post, I will use the CLI to create our data model. You can also use Amplication's UI to do it. &lt;/p&gt;

&lt;p&gt;To learn how to install Amplication CLI and authenticate with the server, see this doc &lt;a href="https://docs.amplication.com/docs/cli"&gt;https://docs.amplication.com/docs/cli&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# Create app
amp apps:create "my-e-commerce-api" --set-current

# Create "Customer" entity
amp entities:create Customer --set-current
amp entities:fields:create "First Name"
amp entities:fields:create "Last Name"
amp entities:fields:create "Email"
amp entities:fields:create "Phone"
amp entities:fields:create "Comments"

# Create "Address" entity
amp entities:create Address --set-current
amp entities:fields:create "First Name"
amp entities:fields:create "Last Name"
amp entities:fields:create "Address 1"
amp entities:fields:create "Address 2"
amp entities:fields:create "City"
amp entities:fields:create "State"
amp entities:fields:create "Country"
amp entities:fields:create "Zip"
amp entities:fields:create "Phone"
amp entities:fields:create "Is Default"
amp entities:fields:create "Customer"

# Create "Product" entity
amp entities:create Product --set-current
amp entities:fields:create "Title"
amp entities:fields:create "Vendor"
amp entities:fields:create "Price"

# Create "Image" entity
amp entities:create Image --set-current
amp entities:fields:create "Src"
amp entities:fields:create "Width"
amp entities:fields:create "Height"
amp entities:fields:create "Product"

# Create "Order" entity
amp entities:create Order --set-current
amp entities:fields:create "Customer"
amp entities:fields:create "Address"
amp entities:fields:create "Comments"
amp entities:fields:create "Total Price"
amp entities:fields:create "User"

# Create "Line Item" entity
amp entities:create LineItem --set-current
amp entities:fields:create "Order"
amp entities:fields:create "Product"
amp entities:fields:create "Price"
amp entities:fields:create "Quantity"

# Commit the new entities and generate the code
amp apps:commit --message="create initial entities"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After executing this script, we can use Amplication's UI to see that all our data models were created, and if needed we can also change any of the settings.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ue1jCayT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tuug5jidmjjzlja6yawn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ue1jCayT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tuug5jidmjjzlja6yawn.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's it... Our source code is ready for download.&lt;/p&gt;

&lt;p&gt;We can simply click on "Download code" to get a ZIP file. &lt;/p&gt;

&lt;p&gt;Here is an example of the generated files for our customer entity, including the Customer model, DTOs, GraphQL resolver, Service, and tests. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rf9M6Wgx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4jy5q7b3p3xyfugu2nno.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rf9M6Wgx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4jy5q7b3p3xyfugu2nno.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here is an example of the generated code for our Customer service &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BdiXz3Nv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/srhdwok8629a35a2n07z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BdiXz3Nv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/srhdwok8629a35a2n07z.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-next"&gt;
  &lt;/a&gt;
  What's Next
&lt;/h2&gt;

&lt;p&gt;At this point, you can proceed in any of the following ways:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Connect to a GitHub account to automatically create a Pull Request with your source code in a Github repository. &lt;br&gt;
&lt;a href="https://docs.amplication.com/docs/sync-with-github"&gt;https://docs.amplication.com/docs/sync-with-github&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Use the Sandbox environment provided by Amplication with a live instance of your application for further development and testing. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Deploy your application in a Docker container to any server or online service. &lt;br&gt;
&lt;a href="https://docs.amplication.com/docs/deploy"&gt;https://docs.amplication.com/docs/deploy&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Customize your server code&lt;br&gt;
&lt;a href="https://docs.amplication.com/docs/how-to/custom-code"&gt;https://docs.amplication.com/docs/how-to/custom-code&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Build a custom client application to work with your new server.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Keep making changes in your data models and re-generate your application code. When connected to a GitHub account you will also get a new Pull Request with every change you make.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#try-it-now"&gt;
  &lt;/a&gt;
  Try it now
&lt;/h2&gt;

&lt;p&gt;Start using Amplication by visiting &lt;a href="https://amplication.com/"&gt;https://amplication.com/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#opensource"&gt;
  &lt;/a&gt;
  Open-Source
&lt;/h2&gt;

&lt;p&gt;Amplication is an open-source project.&lt;/p&gt;

&lt;p&gt;Please leave a comment and tell me what you think about it. We are also open to feature requests and suggestions on our GitHub repo&lt;br&gt;
&lt;a href="https://github.com/amplication/amplication"&gt;https://github.com/amplication/amplication&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;If you need support, you can reach us on our Discord channel &lt;a href="https://discord.gg/KSJCZ24vj2"&gt;https://discord.gg/KSJCZ24vj2&lt;/a&gt;&lt;/p&gt;

</description>
      <category>node</category>
      <category>opensource</category>
      <category>graphql</category>
      <category>github</category>
    </item>
    <item>
      <title>Python if...else statements</title>
      <author>Chris Bongers</author>
      <pubDate>Sat, 22 May 2021 15:24:20 +0000</pubDate>
      <link>https://dev.to/dailydevtips1/python-if-else-statements-2ejh</link>
      <guid>https://dev.to/dailydevtips1/python-if-else-statements-2ejh</guid>
      <description>&lt;p&gt;Since I'm still new to exploring the Python world, I thought it would be good to understand the syntax behind if...else statements.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#basic-if-statement-in-python"&gt;
  &lt;/a&gt;
  Basic if statement in Python
&lt;/h2&gt;

&lt;p&gt;Let's start by looking at a regular if statement.&lt;br&gt;
In python this will be used as the following syntax.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;condition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;# do something
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You might want to check a variable for True/False, check if a number is higher/lower, or a string is a certain value.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;number&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
&lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Chris"&lt;/span&gt;
&lt;span class="n"&gt;boolean&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Number is positive"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;"Chris"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Chris in the building"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;boolean&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Boolean is true"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will result in the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Number is positive
Chris in the building
Boolean is true
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#multiple-returns-for-an-if-statement"&gt;
  &lt;/a&gt;
  Multiple returns for an if statement
&lt;/h2&gt;

&lt;p&gt;The cool part about this is that we can have multiple returns by using the correct indentation.&lt;/p&gt;

&lt;p&gt;Let's say we need two lines of prints.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Number is positive"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"This is a second positive line"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That will return both lines if the statement is met!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ifelse-in-python"&gt;
  &lt;/a&gt;
  If...else in python
&lt;/h2&gt;

&lt;p&gt;As you may have guessed, this also gives us an excellent opportunity to use an else statement if the if fails.&lt;/p&gt;

&lt;p&gt;The logic for that is as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;condition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;# do something
&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;# do something else
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's try that out with a better use case.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;number&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Number is bigger then 20"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"It's a smaller number"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Running this code will result in:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;It's a smaller number
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#adding-another-if"&gt;
  &lt;/a&gt;
  Adding another if
&lt;/h2&gt;

&lt;p&gt;The if...else might be a good solution for static boolean checks. In most real-world examples, you might want to add a specific second, third, or more if.&lt;/p&gt;

&lt;p&gt;For that, we can use the &lt;code&gt;elif&lt;/code&gt;, which states if the previous condition was not met, try this one.&lt;br&gt;
This can still fall back to an &lt;code&gt;else&lt;/code&gt; if we define one.&lt;/p&gt;

&lt;p&gt;The logic:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;condition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;# do thing 1
&lt;/span&gt;&lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;condition&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;# do thing 2
&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;# do something else
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's try that out by checking if a number is smaller or equal.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
&lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"A is greater than B"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"A and B are equal"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"B is greater than A"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Which will result in:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A and B are equal
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This kind of &lt;code&gt;elif&lt;/code&gt; statement can be used multiple times.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-reading-and-lets-connect"&gt;
  &lt;/a&gt;
  Thank you for reading, and let's connect!
&lt;/h3&gt;

&lt;p&gt;Thank you for reading my blog. Feel free to subscribe to my email newsletter and connect on &lt;a href="https://www.facebook.com/DailyDevTipsBlog"&gt;Facebook&lt;/a&gt; or &lt;a href="https://twitter.com/DailyDevTips1"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>python</category>
    </item>
    <item>
      <title>Roundup of my Accessibility Resources</title>
      <author>Stephanie Eckles</author>
      <pubDate>Sat, 22 May 2021 15:17:16 +0000</pubDate>
      <link>https://dev.to/5t3ph/roundup-of-my-accessibility-resources-3ijd</link>
      <guid>https://dev.to/5t3ph/roundup-of-my-accessibility-resources-3ijd</guid>
      <description>&lt;p&gt;May 20 was Global Accessibility Awareness Day (#GAAD) and turns out - I created quite a bit of content about digital accessibility (a11y) last year!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#css-and-accessibility"&gt;
  &lt;/a&gt;
  CSS and Accessibility
&lt;/h2&gt;

&lt;p&gt;CSS can strongly impact accessibility. Learn ways you can use CSS to improve accessibility by reviewing this tutorial covering:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Focus Visibility&lt;/li&gt;
&lt;li&gt;Focus vs. Source Order&lt;/li&gt;
&lt;li&gt;Zoom and Reflow&lt;/li&gt;
&lt;li&gt;Sizing Targets&lt;/li&gt;
&lt;li&gt;Respecting User Settings&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://ModernCSS.dev/a11y-css"&gt;Read more on ModernCSS &amp;gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#color-contrast-and-interactive-elements"&gt;
  &lt;/a&gt;
  Color Contrast and Interactive Elements
&lt;/h2&gt;

&lt;p&gt;Despite high general awareness of color contrast for a11y, what can be missed is how to handle contrast across &lt;em&gt;states&lt;/em&gt; of interactive elements, like buttons.&lt;/p&gt;

&lt;p&gt;Learn more about button contrast and generate an accessible palette with the help of &lt;a href="https://buttonbuddy.dev"&gt;ButtonBuddy.dev&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#practice-evaluating-inaccessible-experiences"&gt;
  &lt;/a&gt;
  Practice Evaluating Inaccessible Experiences
&lt;/h2&gt;

&lt;p&gt;So, what does an &lt;em&gt;inaccessible&lt;/em&gt; experience look like?&lt;/p&gt;

&lt;p&gt;Try out evaluating &lt;a href="https://a11y-fails.netlify.app"&gt;this test site&lt;/a&gt; (motion warning).&lt;/p&gt;

&lt;p&gt;And then practice identifying and submitting a review of issues by &lt;a href="https://github.com/5t3ph/a11y-fails"&gt;opening a PR into the project&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#automate-generating-accessible-color-palettes"&gt;
  &lt;/a&gt;
  Automate Generating Accessible Color Palettes
&lt;/h2&gt;

&lt;p&gt;Selecting a color contrast safe palette &lt;em&gt;used&lt;/em&gt; to be what I spent a significant amount of time on.&lt;/p&gt;

&lt;p&gt;The a11y-color-tokens package automates developing contrast safe text and background color pairs. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.npmjs.com/package/a11y-color-tokens"&gt;More info and package download &amp;gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-accessible-crossbrowser-form-styles"&gt;
  &lt;/a&gt;
  Create Accessible, Cross-Browser Form Styles
&lt;/h2&gt;

&lt;p&gt;Forms rule the web, &amp;amp; can quickly create accessibility issues, too. HTML semantics &amp;amp; carefully applied CSS are required for accessible form inputs.&lt;/p&gt;

&lt;p&gt;Learn how to develop cross-browser, accessible form styles with my &lt;a href="//5t3ph.dev/a11y-forms"&gt;full egghead.io video course&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#learn-about-common-a11y-failures"&gt;
  &lt;/a&gt;
  Learn About Common a11y Failures
&lt;/h2&gt;

&lt;p&gt;On the podcast I co-host - &lt;a href="https://wordwrap.dev"&gt;Word Wrap&lt;/a&gt; - we did a two-part mini-series on a11y topics you might be missing that apply to &lt;em&gt;all&lt;/em&gt; websites.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://wordwrap.dev/episodes/008/"&gt;Common Accessibility Failures&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wordwrap.dev/episodes/009/"&gt;WCAG Success Criteria You May Not Be Meeting&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Drop a comment of your favorite accessibility resources, or something you learned from these!&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>a11y</category>
      <category>webdev</category>
      <category>css</category>
    </item>
    <item>
      <title>My experience skimming the cutting-edge dream front-end stack</title>
      <author>joon</author>
      <pubDate>Sat, 22 May 2021 15:14:06 +0000</pubDate>
      <link>https://dev.to/fly/my-experience-skimming-the-cutting-edge-dream-front-end-stack-46ka</link>
      <guid>https://dev.to/fly/my-experience-skimming-the-cutting-edge-dream-front-end-stack-46ka</guid>
      <description>&lt;p&gt;Probably going to be a quick and messy post. More of a dev log. Keep this in mind and try to bear with me.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;TLDR; I tried using Vite + svelte + tailwind stack. As a React / Nextjs developer, I don't think I'll be using vite with svelte or either separately anytime soon.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;A backend co-worker introduced &lt;a href="https://news.ycombinator.com/item?id=26972400"&gt;this post&lt;/a&gt; a few weeks ago and since then I had vite under my radar for a bit.&lt;/p&gt;

&lt;p&gt;Quite recently I started experiencing performance issues in my code and I started to wonder whether ditching React for svelte in high-frequency data handling required scenarios might be a good idea. (The performance issues were resolved by throttling renders so it wasn't really necessary)&lt;/p&gt;

&lt;p&gt;And suddenly on a Saturday night, I thought 'f* it, let's give it a go'&lt;/p&gt;

&lt;p&gt;I literally copy &amp;amp; pasted &lt;a href="https://github.com/codechips/svelte-typescript-setups/tree/master/svelte-vite-typescript"&gt;this code&lt;/a&gt; added all the dependencies via the CLI to use the latest ones, fixed some settings here and there until finally &lt;code&gt;yarn dev&lt;/code&gt; displayed the following.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---9oYoNfp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iblcwaezn0uvc021p88p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---9oYoNfp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iblcwaezn0uvc021p88p.png" alt="Vite speeds"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#vite-is-fast-but"&gt;
  &lt;/a&gt;
  Vite is fast. But...
&lt;/h3&gt;

&lt;p&gt;Comparing the time for the website to appear from the moment I press enter on &lt;code&gt;yarn dev&lt;/code&gt;? Not really. You know that animated circle next to the tab that goes round and round in a mesmerizing way when the site is loading? It took that exactly 4 cycles for a very simple site to load. Honestly, I think my nextjs setup would've been faster. (I presume that the speeds could increase in scale, but I wasn't willing to test that)&lt;/p&gt;

&lt;p&gt;Obviously, it was not a properly tested benchmark but just a 'feeling' - but whether or not this 'feeling' was misplaced or not, conclusively I didn't really feel like the hassle of switching was worth it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#and-worst-of-all"&gt;
  &lt;/a&gt;
  and worst of all
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;11:46:54 PM [vite] Internal server error: No parent could be found
  Plugin: vite:css
  File: /Users/my-directory/svelte-vite-ts-tailwind/src/Wisdom.svelte?svelte&amp;amp;type=style&amp;amp;lang.css
      at /Users/my-directory/svelte-vite-ts-tailwind/src/Wisdom.svelte?svelte&amp;amp;type=style&amp;amp;lang.css:1:188
      at findParent (/Users/my-directory/svelte-vite-ts-tailwind/node_modules/tailwindcss/lib/lib/substituteClassApplyAtRules.js:218:9)
      at /Users/my-directory/svelte-vite-ts-tailwind/node_modules/tailwindcss/lib/lib/substituteClassApplyAtRules.js:228:33
      at /Users/my-directory/svelte-vite-ts-tailwind/node_modules/postcss/lib/container.js:151:16
      at /Users/my-directory/svelte-vite-ts-tailwind/node_modules/postcss/lib/container.js:74:18
      at AtRule.each (/Users/my-directory/svelte-vite-ts-tailwind/node_modules/postcss/lib/container.js:60:16)
      at AtRule.walk (/Users/my-directory/svelte-vite-ts-tailwind/node_modules/postcss/lib/container.js:71:17)
      at /Users/my-directory/svelte-vite-ts-tailwind/node_modules/postcss/lib/container.js:79:24
      at Root.each (/Users/my-directory/svelte-vite-ts-tailwind/node_modules/postcss/lib/container.js:60:16)
      at Root.walk (/Users/my-directory/svelte-vite-ts-tailwind/node_modules/postcss/lib/container.js:71:17)
      at Root.walkAtRules (/Users/my-directory/svelte-vite-ts-tailwind/node_modules/postcss/lib/container.js:149:17)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;what?&lt;/em&gt; I had no idea what to do with this error and the stack trace did 0 help.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.google.com/search?q=vite+css+Internal+server+error%3A+No+parent+could+be+found&amp;amp;oq=vite+css+Internal+server+error%3A+No+parent+could+be+found&amp;amp;aqs=chrome..69i57.1125j0j1&amp;amp;sourceid=chrome&amp;amp;ie=UTF-8"&gt;Google?&lt;/a&gt;&lt;br&gt;
not really helpful at all.&lt;/p&gt;

&lt;p&gt;It wasn't hard to land at my personal conclusion - vite may or may not have amazing DX perks speed-wise at scale, but realistically speaking, it's not going to reduce dev times but increase it at its current state.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#about-tailwind"&gt;
  &lt;/a&gt;
  About tailwind
&lt;/h3&gt;

&lt;p&gt;Since I &lt;a href="https://dev.to/fly/i-front-end-and-hate-css-here-s-how-i-deal-with-it-3na7"&gt;personally hate css&lt;/a&gt;, ever since I tried tailwind I've never looked back - it's a godsend imo. Use it whenever possible if you're like me.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#about-svelte"&gt;
  &lt;/a&gt;
  About Svelte
&lt;/h3&gt;

&lt;p&gt;This is a &lt;strong&gt;very&lt;/strong&gt; biased opinion coming from a React/Nextjs fanatic. So svelte doesn't seem to even want to support multiple components in a single file - &lt;a href="https://github.com/sveltejs/svelte/issues/2940"&gt;link&lt;/a&gt;. And I respect that. But personally I think file splitting should be an option and not mandatory. And the second I saw that it wasn't possible, it was a red flag for me.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PLn-8CCc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0nbn2xxcidpgdv2mvv32.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PLn-8CCc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0nbn2xxcidpgdv2mvv32.png" alt="Screen Shot 2021-05-23 at 12.09.11 AM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Also, the syntax personally felt very alien but this is obviously due to myself being too accustomed to React's syntax. But the &lt;code&gt;await - then&lt;/code&gt; syntax above looked awesome for quick prototyping. Other than that, I haven't looked too deep into svelte to give any other opinion.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping up.
&lt;/h3&gt;

&lt;p&gt;Svelte's speed benefits? I'm sure they're plenty. But I think I'll manage atm.&lt;/p&gt;

&lt;p&gt;Vite? Until the majority of probably frequent errors show up on the first page of search results on google - No.&lt;/p&gt;

&lt;p&gt;I think I'll stick to nextjs/tailwind for the time being.&lt;/p&gt;

</description>
      <category>svelte</category>
      <category>vite</category>
      <category>tailwindcss</category>
      <category>devjournal</category>
    </item>
    <item>
      <title>100 days of Coding (2/100)</title>
      <author>Uche Prince</author>
      <pubDate>Sat, 22 May 2021 13:57:50 +0000</pubDate>
      <link>https://dev.to/uchedprince/100-days-of-coding-2-100-3700</link>
      <guid>https://dev.to/uchedprince/100-days-of-coding-2-100-3700</guid>
      <description>&lt;p&gt;100 days of Coding challenge day 2&lt;/p&gt;

</description>
      <category>freecodecamp</category>
    </item>
    <item>
      <title>Write better Java Code</title>
      <author>Mark Dsouza</author>
      <pubDate>Sat, 22 May 2021 13:56:17 +0000</pubDate>
      <link>https://dev.to/markbdsouza/write-better-java-code-32oi</link>
      <guid>https://dev.to/markbdsouza/write-better-java-code-32oi</guid>
      <description>&lt;p&gt;&lt;em&gt;Clean Code is under rated.&lt;/em&gt; If you've ever got frustrated with the way some code was written or spent way too much trying to understand what some function is doing, it probably means that code could be written better. &lt;/p&gt;

&lt;p&gt;You can surely build great things without following the principles of clean code. But it becomes a LOT LOT easier for you and your team to maintain the same code if it is easily understandable and written well. This is a continuous process that should be taken into account with each line of code you write and is not a retrospective action you work on at the end of the week/sprint.&lt;/p&gt;

&lt;p&gt;Java projects especially can get really big and complex, and clean code helps your team build, enhance and fix bugs faster and more efficiently. And if you're a beginner, this can be a lot to take in but it surely helps to get started off on the right foot. &lt;/p&gt;

&lt;p&gt;In the below sections, I'll go over points/best practices to keep in mind while writing java code. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#all-about-naming"&gt;
  &lt;/a&gt;
  All about naming
&lt;/h3&gt;

&lt;p&gt;Thumb rule - always be as specific as possible with all names.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#naming-classes"&gt;
  &lt;/a&gt;
  Naming Classes
&lt;/h4&gt;

&lt;p&gt;Class Names should ideally be nouns or can be abstract and are written in PascalCase. Example: AudioTransmitter, SalaryCalculator. &lt;br&gt;
As much as possible try and make it specific to what your use case is. If you have a FileReader class to read xml files, a better way of naming it would be XmlFileReader. That way if there is an enhancement later to have a JSON or CSV FileReader, you can have separate classes for it instead of having all the logic in one class.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#naming-variables"&gt;
  &lt;/a&gt;
  Naming Variables
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;Written in camelCase, variable names should be descriptive yet concise. &lt;/li&gt;
&lt;li&gt;Avoid naming variables with alphabets such as a,b,x,y,z unless it is a temp variable like an index. 
*When using booleans start it with 'is'. Example: isValid instead of valid.&lt;/li&gt;
&lt;li&gt;For Constants use ALL_CAPS_WITH_UNDERSCORES. Example: MAX_CUSTOMER_COUNT
Basically, if we see the variable in a random piece of code, we should be able to understand what type of data it holds.
Example: customerAccountDetails&lt;/li&gt;
&lt;/ul&gt;

&lt;h5&gt;
  &lt;a href="#naming-methods"&gt;
  &lt;/a&gt;
  Naming Methods
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;The name of the method should describe 'what' is done by the method (it doesn't matter how). eg: generateSalaryReport(). The method tells us it is creating the salary report. We don't care how it is being done internally. &lt;/li&gt;
&lt;li&gt;A method should ideally have only 1 purpose. If the method does more than 1 thing, you should ideally split it up such that each method does exactly what it says.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#all-about-methods"&gt;
  &lt;/a&gt;
  All about Methods
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Avoid writing huge methods. Each method should be specific and do just one thing. Keep in mind if multiple methods have the same code in them, you are repeating yourself. Instead create a small private method in the class and call the method wherever the duplication is observed.&lt;/li&gt;
&lt;li&gt;When returning an object, avoid returning null. When we do so we are assuming that all clients of the method expect null and handle it. If they are aware they need to add an extra try catch every single time your method is called. This is just repetitive code. Instead return an empty Collection or throw an error if appropriate. &lt;/li&gt;
&lt;li&gt;Avoid having too many arguments in a method. Too many arguments also increase complexity and might show that you need to split your method into multiple parts each doing a small part of the logic. Or are a few of those arguments very cohesive and do they actually need a class of their own? If yes, it might mean more code and an extra class but it's a lot easier and more scale-able. &lt;/li&gt;
&lt;li&gt;Avoid flag arguments which are boolean in nature. This points to the fact that you have too much logic for the function again. Split the true and false part into two separate methods and call them accordingly.&lt;/li&gt;
&lt;li&gt;Fail Fast &amp;amp; Return Early. Check for invalid arguments right at the start and throw an error instead of executing code that will ultimately fail for the same reason. This will save on execution time and make it easier to debug. Return early is the way of writing methods so that the expected positive result is returned at the end of the function and the rest of the code terminates the execution (by returning or throwing an exception) when conditions are not met.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#constructors"&gt;
  &lt;/a&gt;
  Constructors
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;If you have a Class that has many variables that need to be assigned and multiple combinations of these variables therefore needing many constructors, a good way to organize your code is to use the &lt;a href="https://www.geeksforgeeks.org/builder-design-pattern/"&gt;Builder Design Pattern&lt;/a&gt;. This is a Creational design pattern and you dynamically assign variables when creating the object.&lt;/li&gt;
&lt;li&gt;Another way to avoid duplication of code in constructors is using &lt;a href="https://www.geeksforgeeks.org/constructor-chaining-java-examples/"&gt;Constructor chaining&lt;/a&gt;, where you call one constructor from inside the other.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#all-about-classes"&gt;
  &lt;/a&gt;
  All about classes
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Try and follow the Single Responsibility Principle (from SOLID principles) - the class should have only one reason to change. This results in smaller well defined classes. &lt;/li&gt;
&lt;li&gt;It should be cohesive - where fields and methods are highly related to each other. Higher the cohesion, the better. This will also help you avoid classes with way too many variables.&lt;/li&gt;
&lt;li&gt;Follow Loose coupling - a change in one class requires minimum/0 changes in another class. This reduces the inter dependency between classes. Most frameworks follow loose coupling for this reason.&lt;/li&gt;
&lt;li&gt;Use &lt;a href="https://www.freecodecamp.org/news/a-quick-intro-to-dependency-injection-what-it-is-and-when-to-use-it-7578c84fa88f/"&gt;Dependency Injection&lt;/a&gt; if possible.&lt;/li&gt;
&lt;li&gt;Uses interfaces as much as possible. If you ever want to change the implementation, it becomes a very quick and easy change. Allows you to be very flexible in the future. Example use &lt;code&gt;List&amp;lt;String&amp;gt; customerNames = ArrayList&amp;lt;String&amp;gt;();&lt;/code&gt; instead of &lt;code&gt;ArrayList&amp;lt;String&amp;gt; customerNames = ArrayList&amp;lt;String&amp;gt;();&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Encapsulation - keep variables private and any methods that need not be public, private. Even for getters and setters, only create them if it needs to be accessed from outside the class. &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#exception-handling"&gt;
  &lt;/a&gt;
  Exception Handling
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Avoid catching Throwable or Exception Classes. As the programmer, you need to know when Errors(Example: OutOfMemory) happen or when Runtime Exceptions that you would want to know when it happens. &lt;/li&gt;
&lt;li&gt;Do not catch and handle Null pointer exceptions in the catch block, instead write code to prevent the null from happening itself(if possible) and if not just do a &lt;code&gt;if(obj != null)&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Exceptions when caught should be specific. Only if you expect an error to happen, you should try and catch it. Also Java 7 allows you to catch multiple exceptions in one block with &lt;code&gt;catch( IOException | SQLException e)&lt;/code&gt; and handle all exceptions the same way.&lt;/li&gt;
&lt;li&gt;When catching an exception, make sure you log the details(with a logging framework) of the exception and surely do not keep it empty. &lt;/li&gt;
&lt;li&gt;When catching an exception make sure you mention why the exception happened. Example if it is an Illegal Argument Exception, you can mention what type of value the argument had for the exception to happen. This helps with debugging. &lt;/li&gt;
&lt;li&gt;Use try with resources(if using java 7+) wherever possible to avoid additional code. &lt;/li&gt;
&lt;li&gt;Do not catch and handle exceptions you do not expect to occur. You should add catch blocks only for those exceptions that you are aware could happen for a reason. Anything else is extra avoidable code.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#comments"&gt;
  &lt;/a&gt;
  Comments
&lt;/h3&gt;

&lt;p&gt;Base rule: Never comment code out. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A comment should only increase our understanding of code. &lt;/li&gt;
&lt;li&gt;Avoid stating obvious points in comments that you can easily understand by reading the code. &lt;/li&gt;
&lt;li&gt;Keep note that that comments are rarely updated when code is updated. This can cause issues. As a team, always make sure any updates to code, is also reflected on comments or remove the comment altogether in such cases.&lt;/li&gt;
&lt;li&gt;Writing comments in the form of JavaDocs for public methods that will be used by clients of that class is extremely valuable.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#styling-and-formatting"&gt;
  &lt;/a&gt;
  Styling and Formatting
&lt;/h3&gt;

&lt;p&gt;Most Java IDEs have an inbuilt code formatter which helps you do this with a shortcut. &lt;br&gt;
The &lt;a href="https://google.github.io/styleguide/javaguide.html"&gt;Google Java Style Guide&lt;/a&gt; and &lt;a href="https://github.com/twitter-archive/commons/blob/master/src/java/com/twitter/common/styleguide.md"&gt;Java Style Guide by Twitter&lt;/a&gt;, both have some best practices when it comes to writing java code.&lt;br&gt;
Make sure you use line breaks and brackets wisely, making the code readable. Less lines of code doesn't make it more readable. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-check-code-quality"&gt;
  &lt;/a&gt;
  How to check code quality?
&lt;/h3&gt;

&lt;p&gt;There are plugins that help you check if code is being reused, written as well as they can be. &lt;a href="https://www.sonarlint.org/"&gt;SonarLint&lt;/a&gt; their very tag line is - Fix issues before they exist. It is available on all popular Java IDEs and you can do a full project scan to see how the code can be improved. &lt;br&gt;
&lt;a href="https://www.sonarqube.org/"&gt;SonarQube&lt;/a&gt; is an open source tool that can be added to your CI/CD pipeline and is extremely popular to check the entire project's code quality. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;At the end of the day, as a team, decide on what standards you would like to adhere to and stick to it.&lt;/strong&gt; If each member follows his own best practices, it helps no one. It often helps to keep a document for each project with the coding standards followed by all and is shared with any new members joining the team.&lt;br&gt;
Make sure when you are reviewing code with Pull Requests, your teammates are adhering to the rules agreed upon (and they make sure you do as well) so your overall code is consistent throughout the application.&lt;/p&gt;

&lt;p&gt;If you have any additional pointers to add that you feel have helped you and your team out, leave them in the comments down below. &lt;/p&gt;

</description>
      <category>java</category>
      <category>design</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Node.js : Checking if a file or a directory exists</title>
      <author>Rajesh Kumar Yadav</author>
      <pubDate>Sat, 22 May 2021 13:44:07 +0000</pubDate>
      <link>https://dev.to/rajeshkumaryadavdotcom/node-js-checking-if-a-file-or-a-directory-exists-1jp6</link>
      <guid>https://dev.to/rajeshkumaryadavdotcom/node-js-checking-if-a-file-or-a-directory-exists-1jp6</guid>
      <description>&lt;h1&gt;
  &lt;a href="#asynchronously"&gt;
  &lt;/a&gt;
  Asynchronously
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var fs = require('fs');
fs.stat('path/to/file', function(err) {
 if (!err) {
 console.log('file or directory exists');
 }
 else if (err.code === 'ENOENT') {
 console.log('file or directory does not exist');
 }
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h1&gt;
  &lt;a href="#synchronously"&gt;
  &lt;/a&gt;
  Synchronously
&lt;/h1&gt;

&lt;p&gt;Here, we must wrap the function call in a try/catch block to handle error.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var fs = require('fs');
try {
 fs.statSync('path/to/file');
 console.log('file or directory exists');
}
catch (err) {
 if (err.code === 'ENOENT') {
 console.log('file or directory does not exist');
 }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/rkycom"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rb9xKs4G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png" alt="Buy Me A Coffee"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With all that being said, I highly recommend you keep learning!&lt;/p&gt;

&lt;p&gt;Thank you for reading this article. Please feel free to connect with me on &lt;a href="https://www.linkedin.com/in/www-rajeshkumaryadav-com/"&gt;LinkedIn&lt;/a&gt; and &lt;a href="https://twitter.com/rky_com"&gt;Twitter&lt;/a&gt;.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/rajeshkumaryadavdotcom" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X9ekh9tC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--2mImv-XE--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/626375/7ac18841-7d39-4d60-b153-e560d61510cf.jpeg" alt="rajeshkumaryadavdotcom image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/rajeshkumaryadavdotcom/node-js-determining-the-line-count-of-a-text-file-195l" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Node.js : Determining the line count of a text file&lt;/h2&gt;
      &lt;h3&gt;Rajesh Kumar Yadav „Éª May 20 „Éª 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#node&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/rajeshkumaryadavdotcom" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X9ekh9tC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--2mImv-XE--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/626375/7ac18841-7d39-4d60-b153-e560d61510cf.jpeg" alt="rajeshkumaryadavdotcom image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/rajeshkumaryadavdotcom/node-js-reading-a-file-line-by-line-5ga9" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Node.js : Reading a file line by line&lt;/h2&gt;
      &lt;h3&gt;Rajesh Kumar Yadav „Éª May 19 „Éª 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#node&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/rajeshkumaryadavdotcom" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X9ekh9tC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--2mImv-XE--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/626375/7ac18841-7d39-4d60-b153-e560d61510cf.jpeg" alt="rajeshkumaryadavdotcom image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/rajeshkumaryadavdotcom/node-js-reading-from-a-file-synchronously-28ef" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Node.js : Reading from a file synchronously&lt;/h2&gt;
      &lt;h3&gt;Rajesh Kumar Yadav „Éª May 12 „Éª 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#node&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/rajeshkumaryadavdotcom" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X9ekh9tC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--2mImv-XE--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/626375/7ac18841-7d39-4d60-b153-e560d61510cf.jpeg" alt="rajeshkumaryadavdotcom image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/rajeshkumaryadavdotcom/node-js-checking-if-a-file-or-a-directory-exists-1jp6" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Node.js : Checking if a file or a directory exists&lt;/h2&gt;
      &lt;h3&gt;Rajesh Kumar Yadav „Éª May 22 „Éª 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#node&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/rajeshkumaryadavdotcom" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X9ekh9tC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--2mImv-XE--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/626375/7ac18841-7d39-4d60-b153-e560d61510cf.jpeg" alt="rajeshkumaryadavdotcom image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/rajeshkumaryadavdotcom/node-js-check-permissions-of-a-file-or-directory-3l7k" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Node.js :  Check Permissions of a File or Directory&lt;/h2&gt;
      &lt;h3&gt;Rajesh Kumar Yadav „Éª May 22 „Éª 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#node&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



</description>
      <category>node</category>
      <category>programming</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Django Engineer Interview Script</title>
      <author>J.V. Zammit</author>
      <pubDate>Sat, 22 May 2021 13:29:58 +0000</pubDate>
      <link>https://dev.to/jvzammit/django-engineer-interview-script-591c</link>
      <guid>https://dev.to/jvzammit/django-engineer-interview-script-591c</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8SG3QelF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h5wc5khd4v5klgkisfdq.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8SG3QelF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h5wc5khd4v5klgkisfdq.jpg" alt="Michael Scott, Dunder Mifflin Inc. World's Best Boss. Credit: NBC."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Unlike &lt;a href="https://en.wikipedia.org/wiki/Michael_Scott_(The_Office)"&gt;Michael Scott&lt;/a&gt; above I'm not a manager.&lt;/p&gt;

&lt;p&gt;Yet I have worked as a Python/Django backend engineer for more than a decade. This puts me in a "senior" role in any team I usually join.&lt;/p&gt;

&lt;p&gt;As a result, I get involved in the recruitment process. I.e. to look for someone who would then become a team mate.&lt;/p&gt;

&lt;p&gt;This post is about questions I ask a prospective Python/Django backend engineer. A prospect with 2+ years of experience doing Python/Django backend development full-time.&lt;/p&gt;

&lt;p&gt;The prospective engineer would be working in &lt;em&gt;my&lt;/em&gt; team. &lt;em&gt;With&lt;/em&gt; me. Not &lt;em&gt;for&lt;/em&gt; me.&lt;/p&gt;

&lt;p&gt;So the questions aim to help me to answer the fundamental "&lt;em&gt;Would I want to work with this person?&lt;/em&gt;" question.&lt;/p&gt;

&lt;p&gt;Below I go through what I look for in each question. Note that unlike a &lt;a href="https://en.wikipedia.org/wiki/HackerRank"&gt;"hackerrank" style&lt;/a&gt; assessment, these questions look for &lt;em&gt;qualitative&lt;/em&gt; attributes.&lt;/p&gt;

&lt;p&gt;Answers do not have a completely correct/wrong answer. The way in which the candidate answers is more important than the answer itself.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#selfintro"&gt;
  &lt;/a&gt;
  Self-intro
&lt;/h2&gt;

&lt;p&gt;Allow the candidate to go over their career trajectory. Have them delve deep into some projects they are proud to have been part of. Allow them to expand on specific processes/tools used.&lt;/p&gt;

&lt;p&gt;This will provide you with loose ends to relate the below questions with.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#q1-how-do-you-use-the-character-in-python"&gt;
  &lt;/a&gt;
  Q1. How do you use the _ character in Python?
&lt;/h2&gt;

&lt;p&gt;Objective is to see how the candidate reacts.&lt;/p&gt;

&lt;p&gt;Among the correct answers:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Used in snake case (i.e. function names and variable names)&lt;/li&gt;
&lt;li&gt;Used to store a function return value which is going to go unused.&lt;/li&gt;
&lt;li&gt;Used to "show" that a function is meant to be used as a "private" function.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#q1-followup-in-case-private-function-use-case-is-brought-up"&gt;
  &lt;/a&gt;
  Q1 Follow-up: in case "private function" use case is brought up
&lt;/h3&gt;

&lt;p&gt;The followup is a trick question:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;How does Python enforce private properties/functions?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The answer is: &lt;em&gt;It does not.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Probe the candidate to make sure she knows what she'd use it for, in Python.&lt;/p&gt;

&lt;p&gt;Look for honesty in the candidate's answer. An "I don't know" is more than acceptable. Better than making stuff up.&lt;/p&gt;

&lt;p&gt;The trick question here is intentional. To separate the wheat from the chaff.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#q2-which-test-data-generation-toolkit-have-you-used"&gt;
  &lt;/a&gt;
  Q2. Which test data generation toolkit have you used?
&lt;/h2&gt;

&lt;p&gt;Usually the candidate will have mentioned tests in CV or during their own self-intro. It's hard to have good tests without proper management of test data.&lt;/p&gt;

&lt;p&gt;This is an open ended question about how the candidate handled test data. Answer demonstrates whether the candidate has written tests or not. Look for familiarity with tools in the Python/Django testing landscape.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#q2-followup-how-to-improve-unit-tests-speed-in-django"&gt;
  &lt;/a&gt;
  Q2 Follow-up: How to improve unit tests speed in Django?
&lt;/h3&gt;

&lt;p&gt;A mature application is one that grows beyond that ideal ‚Äúmicro service‚Äù or ‚Äúside project‚Äù size. Along size and complexity, one common aspect is tests taking longer to run.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://adamj.eu/"&gt;Adam Johnson&lt;/a&gt; has written a whole &lt;a href="https://gumroad.com/a/233305203"&gt;Speed Up Your Django Tests&lt;/a&gt; book on topic. Which I fully recommend.&lt;/p&gt;

&lt;p&gt;Do not look for that level of detail though. A couple ‚Äúquick ways‚Äù to improve speed is fine. I.e. low-hanging fruit. Examples:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Avoid using fixtures in tests.&lt;/li&gt;
&lt;li&gt;Avoid creating more test data than the test requires.&lt;/li&gt;
&lt;li&gt;Change the default Django password hasher. Etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The way the candidate answers this shows their ‚Äúbattle scars‚Äù in writing tests for Django applications.&lt;/p&gt;

&lt;p&gt;Also look out for ‚Äúquick hacks‚Äù. For example, changing the tests to run against sqlite rather than say Postgres or MariaDB. This should &lt;em&gt;not&lt;/em&gt; be one of those ‚Äúquick ways‚Äù.&lt;/p&gt;

&lt;p&gt;Be ready, especially when it comes to allocated time, to discuss any disagreement. Not only in this question. If the candidate doesn't make it to the next round, they still would have learnt something.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#q3-which-packages-you-carry-around-in-your-django-projects"&gt;
  &lt;/a&gt;
  Q3. Which packages you "carry around" in your Django projects?
&lt;/h2&gt;

&lt;p&gt;Djangonauts tend to have some favourite frameworks that they end up using in all their Django projects.&lt;/p&gt;

&lt;p&gt;Popular answers include &lt;a href="https://www.django-rest-framework.org/"&gt;DRF&lt;/a&gt;, &lt;a href="https://django-extensions.readthedocs.io/en/latest/#"&gt;django-extensions&lt;/a&gt;, &lt;a href="https://github.com/anymail/django-anymail"&gt;anymail&lt;/a&gt;, &lt;a href="https://django-allauth.readthedocs.io/en/latest/"&gt;allauth&lt;/a&gt; and the &lt;a href="https://django-debug-toolbar.readthedocs.io/en/latest/"&gt;DJDT&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#q3-followup-how-do-you-decide-whether-to-use-a-package-or-reinvent-the-wheel"&gt;
  &lt;/a&gt;
  Q3 Follow-up: How do you decide whether to use a package or reinvent the wheel?
&lt;/h3&gt;

&lt;p&gt;This again is an open ended question. Aim is to see the candidate's experience in making this sort of decision when building out a project. Good considerations include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Does this package actually fit the use case? Or at least, is it very close to the use case?&lt;/li&gt;
&lt;li&gt;Set up/installation complexity, especially given architecture of existing application. And other installed moving parts which might not play well with the package.&lt;/li&gt;
&lt;li&gt;Security concerns.&lt;/li&gt;
&lt;li&gt;Activity around package on Github, i.e. recent commits, contributors, responses to issues, etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#q4-which-code-standards-do-you-follow-for-a-django-project-tools"&gt;
  &lt;/a&gt;
  Q4. Which code standards do you follow for a Django project? Tools?
&lt;/h2&gt;

&lt;p&gt;Ideally any of these are mentioned: &lt;a href="https://www.python.org/dev/peps/pep-0008/"&gt;PEP 8&lt;/a&gt;, &lt;a href="https://flake8.pycqa.org/en/latest/"&gt;flake8&lt;/a&gt;, &lt;a href="https://github.com/psf/black"&gt;black&lt;/a&gt;, &lt;a href="https://docs.djangoproject.com/en/dev/internals/contributing/writing-code/coding-style/"&gt;Django style guide&lt;/a&gt;, &lt;a href="https://pypi.org/project/isort/"&gt;isort&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;There is no correct answer. Just checking for "awareness".&lt;/p&gt;

&lt;p&gt;Keeping in mind for example that &lt;code&gt;black&lt;/code&gt; and Django's own style guide are not 100% compatible. The specifics are subjective.&lt;/p&gt;

&lt;p&gt;Look for familiarity with a tool or a couple of them.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#q5-which-deployment-tools-have-you-used-to-ship-code-to-production"&gt;
  &lt;/a&gt;
  Q5. Which deployment tools have you used? To ship code to production?
&lt;/h2&gt;

&lt;p&gt;Probe the candidate to know more whether they have been exposed to ‚Äúops‚Äù kind of work. Or at least gauge whether there‚Äôs an interest.&lt;/p&gt;

&lt;p&gt;Feel free to discuss tools used at your current post, example AWS, Ansible, Python's Fabric library, &lt;a href="https://www.untangled.dev/2020/06/06/docker-django-local-dev/"&gt;Docker for local development&lt;/a&gt;, etc.&lt;/p&gt;

&lt;p&gt;The motivation behind Q5 is that I work in environments where some ‚Äúops‚Äù skills alongside Python/Django skills are appreciated.&lt;/p&gt;

&lt;p&gt;But you might be looking for a full-stack person. Then replace this question with another which shows the person's reaction about some FE-oriented work aspect.&lt;/p&gt;

&lt;p&gt;On open-ended questions as these the candidate being opinionated is &lt;em&gt;not&lt;/em&gt; a bad thing.&lt;/p&gt;

&lt;p&gt;Discussing topics you do not have full agreement on is revealing. For both sides of the interview process. Which is what you want.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#to-conclude"&gt;
  &lt;/a&gt;
  To conclude
&lt;/h2&gt;

&lt;p&gt;Remember to encourage the candidate to ask questions throughout. This again enables the two-way information street we want.&lt;/p&gt;

&lt;p&gt;I hope you find these useful.&lt;/p&gt;

&lt;p&gt;Are there any other questions I should ask? Why? Feel free to add your suggestions as a comment.&lt;/p&gt;

&lt;p&gt;This post was inspired by &lt;a href="https://jacobian.org/"&gt;Jacob Kaplan-Moss&lt;/a&gt;'s article: &lt;a href="https://jacobian.org/2018/nov/29/annotated-interview-kickoff-script/"&gt;My interview kickoff script, annotated&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I suggest you give that article a look. Tread carefully. You might find yourself down in &lt;a href="https://jacobian.org/tags/interviewing/"&gt;Jacob's interviewing series rabbit hole&lt;/a&gt;. Some excellent nuggets of knowledge shared down there.&lt;/p&gt;

</description>
      <category>python</category>
      <category>django</category>
    </item>
    <item>
      <title>The Big Leap: Conquer Your Hidden Fear and Take Life to the Next Level by Gay Hendricks</title>
      <author>Sandor Dargo</author>
      <pubDate>Sat, 22 May 2021 13:28:44 +0000</pubDate>
      <link>https://dev.to/sandordargo/the-big-leap-conquer-your-hidden-fear-and-take-life-to-the-next-level-by-gay-hendricks-4g98</link>
      <guid>https://dev.to/sandordargo/the-big-leap-conquer-your-hidden-fear-and-take-life-to-the-next-level-by-gay-hendricks-4g98</guid>
      <description>&lt;p&gt;&lt;a href="https://amzn.to/3fzGsB9"&gt;The Big Leap&lt;/a&gt;! Who doesn't want to take the big leap? I bet there are many. Stepping up always involve some risks and humans, in general, are more afraid of loss and therefore they are more risk-averse than thrill-seeking.&lt;/p&gt;

&lt;p&gt;And there is more to that. Even if on the surface you're looking to make your bet and make the big leap towards success, your subconscious might think the opposite. Your subconscious mind will do whatever it can (and that's a lot!) to play your efforts down, to not let you achieve your full potential.&lt;/p&gt;

&lt;p&gt;Have you ever caught in a fight with your spouse after a business success? Have you ever got sick immediately after a big personal win? Have you ever made some big mistakes at the most crucial moments? Mistakes that otherwise you'd never commit.&lt;/p&gt;

&lt;p&gt;That's what the author Gay Hendricks calls the &lt;em&gt;upper limit problem&lt;/em&gt;, the central idea of his book. Your &lt;em&gt;upper limit problem&lt;/em&gt; prevents you from living up to your full potential.&lt;/p&gt;

&lt;p&gt;The author brings many cases from his own life where he could identify this problem. I bet you can too. I could. Even before reading this book, I had some similar ideas.&lt;/p&gt;

&lt;p&gt;Often in my life, I caught myself slowing down close to success. Or simply to abandon a project when it started to look more promising. Or maybe I just gave the lead to someone else.&lt;/p&gt;

&lt;p&gt;Many celebrated that I left a promising political career around the age of 25. I did it because I couldn't focus on professional and political work and studies at the same time and I had to let one go. But to be fair it might have been an &lt;em&gt;upper limit problem&lt;/em&gt;. I reached to some ranks where there were many doors opening up and where I would have had to step up. Instead, I quitted.&lt;/p&gt;

&lt;p&gt;I think it was the better decision for my life, but deep inside, it might have been simply an &lt;em&gt;upper limit problem&lt;/em&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-can-you-spot-the-upper-limit-problem-in-your-life"&gt;
  &lt;/a&gt;
  How can you spot the &lt;em&gt;upper limit problem&lt;/em&gt; in your life?
&lt;/h2&gt;

&lt;p&gt;There are a couple of typical ways the author shared.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Worry&lt;/strong&gt; is one such sign. When we worry, usually we are not thinking about anything useful. Especially when we worry about something we have no control over. This is a recurring idea in Stoicism as well. Don't care about things that you cannot change.&lt;/p&gt;

&lt;p&gt;When things are going well for us, we start to worry about things going wrong in some way. We start justifying those thoughts with even more worrying ones and our upper limiting mechanism pushes us into a downward spiral.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Criticism and blame&lt;/em&gt; is another way. I'd also involve &lt;em&gt;squabbling&lt;/em&gt; that the author mentions as a separate category. I put them together in this short post, as - unless we target a third party - &lt;em&gt;criticism and blame&lt;/em&gt; very often ends up in arguments. When we criticize something, it usually doesn't have anything to do with the thing we are criticizing. We blame someone or something in order to redirect the flow of our positive energy and turn it into something negative. Have you ever started to criticize your partner seemingly coming from nowhere after some good results? Did it help?&lt;/p&gt;

&lt;p&gt;Another way is &lt;em&gt;deflection&lt;/em&gt; when you simply deny the positive achievements and you don't enjoy your success. You only look for the negative parts. Someone compliments what a great presentation you made and you immediately deflect it by complaining about your time management and leaving out the best stuff. Instead of saying thank you and smile.&lt;/p&gt;

&lt;p&gt;The last one might be surprising, but you might even get sick or hurt simply because you are upper limiting yourself. Of course, not every sickness or accident is related to such self-limiting activities. The best way to consider this is to think about the times when it happened to you. Were those sicknesses and accidents coming right after a big win or during especially good times?&lt;/p&gt;

&lt;p&gt;The author offers different solutions for the different problems for which I'd urge you to &lt;a href=""&gt;check the book&lt;/a&gt;. It's about 200 pages, you can read it in a couple of days even if you have lots of things to take care of.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reaching-to-your-full-potential-live-in-your-zone-of-genius"&gt;
  &lt;/a&gt;
  Reaching to your full potential, live in your zone of genius
&lt;/h2&gt;

&lt;p&gt;If you want to reach your full potential, you should ask yourself a couple of questions.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Where do I feel out of integrity with myself&lt;br&gt;
What is keeping me from feeling complete and whole?&lt;br&gt;
Why important feelings am I not letting into my awareness?&lt;br&gt;
Where in my life am I not telling the full truth?&lt;br&gt;
Where in my life have I not kept my promises?&lt;br&gt;
In my relationship with ______, what do I need to say or do to feel complete and whole?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Asking such questions will help you to rise from a limiting story that you've been living in. Almost all of us can find a story deep inside, why we don't live up to our genius. Maybe it's fear, maybe it's not hurting other feelings, maybe it's our parents who kept repeating some thoughts that were not meant to be mean (maybe they were) but they shaped you in a wrong way. Maybe they kept repeating in front of others that you were a shy boy and you lived up to the expectations.&lt;/p&gt;

&lt;p&gt;If we want an exceptional life, we have to find these limiting stories and commit ourselves to live outside those limitations.&lt;/p&gt;

&lt;p&gt;Leading a great life, living in our &lt;em&gt;Zone of Genius&lt;/em&gt; doesn't only mean that we have to remove thee stories, we also have to find what we love to do the most. We have to find the work that we love so much that it doesn't even seem to work even when we do it for long stretches. What can you do all day long without ever feeling tired or bored?&lt;/p&gt;

&lt;p&gt;And we mean some kind of work here, not playing video games all the time without getting tired and bored.&lt;/p&gt;

&lt;p&gt;Think about what do you do in your work that produces the highest ratio of abundance and satisfaction to the amount of time spent. Your answer to that question will be a good starting point to dig down borrowing ideas from the &lt;a href=""&gt;5 whys technique&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In the book, there is an example of a lady, who said she enjoyed running meetings. When she was asked what does she like in it and what she is the best at it she said she can easily cut off discussions at the right time and move along. Then she was asked what gives her that unique ability. She said that she feels an energy shift in the room and inside her. Then she knows it's time to move on. Then she realized where this ability originates from. When she was a child, her parents often had fights. She always tried to stay out of the way and she quickly learned to recognize those energy changes in the room that signalled a coming sign.&lt;/p&gt;

&lt;p&gt;By asking deeper questions, you can discover your unique ability, peeling of the different layers, like you open up Russian dolls.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Although &lt;a href="https://amzn.to/3fzGsB9"&gt;The Big Leap&lt;/a&gt; is not a long book it touches many interesting ideas, some I couldn't even mention in this review, like how to fund an abundance of time in your life.&lt;/p&gt;

&lt;p&gt;I shared with you the idea of the &lt;em&gt;upper limit problem&lt;/em&gt;. It says that because of different limiting stories you have in your life, whenever you are in a positive flow for a longer time or you're winning big, you'll find ways to mess things up instead of living a happy and successful life.&lt;/p&gt;

&lt;p&gt;In &lt;a href="https://amzn.to/3fzGsB9"&gt;the book&lt;/a&gt;, he doesn't only speak about these problems but also suggests solutions. Both to remove the limiting stories and to find your &lt;em&gt;unique ability&lt;/em&gt; that will help you to constantly live in your Zone of Genius.&lt;/p&gt;

&lt;p&gt;I highly recommended read, thanks to Benjamin P Hardy for sharing his thoughts on it!&lt;/p&gt;

</description>
      <category>books</category>
      <category>watercooler</category>
      <category>selfdevelopment</category>
      <category>psychology</category>
    </item>
  </channel>
</rss>
