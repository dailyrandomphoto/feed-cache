<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Data types in JS </title>
      <author>Manu Martinez</author>
      <pubDate>Mon, 06 Dec 2021 09:06:36 +0000</pubDate>
      <link>https://dev.to/whitehatdevv/data-types-in-js-1cbc</link>
      <guid>https://dev.to/whitehatdevv/data-types-in-js-1cbc</guid>
      <description>&lt;p&gt;Pay &lt;strong&gt;attention&lt;/strong&gt; ‚ñ≤, this post will teach you whatever you need to &lt;em&gt;understand&lt;/em&gt; what are data types and how can you select the type you need to &lt;strong&gt;accomplish&lt;/strong&gt; your target ü•≥.&lt;/p&gt;

&lt;p&gt;First of all you need to understand that JS is &lt;strong&gt;dynamic typed&lt;/strong&gt;, if you read our all post you have already known what does it mean üòã. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dinamic-typed"&gt;
  &lt;/a&gt;
  Dinamic typed ‚ù§Ô∏è
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;OMG!!&lt;/strong&gt;, It sounds really crazy, it sound really difficult but no, if you think in the sense of &lt;em&gt;dynamic&lt;/em&gt; you will understand that typed are assign in *&lt;em&gt;execution time *&lt;/em&gt;, it means that when you are &lt;em&gt;writing your code&lt;/em&gt; you won't need to indicate what are exactly the types üòè. It's one of the most clearly advantage if you are learning JS as a first &lt;em&gt;programming language&lt;/em&gt;. &lt;/p&gt;

&lt;p&gt;Then üòá, Why must I know what are data types if JS makes implicit assignations? &lt;/p&gt;

&lt;p&gt;You really need to know what types of data do you have available, because you can prepare your code to work with those. Let's going to start with the simple data üòè&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;String&lt;/code&gt; -&amp;gt; It means literally &lt;em&gt;chars chain&lt;/em&gt;, for example &lt;code&gt;word&lt;/code&gt; is a string because it's text. This data type is composed by quotes, doesn't care, double, simple, accent whatever, the main important think is put the text inside the quotes.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;My first string&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Number -&amp;gt; Like his name said, it's a number, a pointing number, a real number, whatever that means exactly a Real Number.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let myAge = 15
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Boolean -&amp;gt; It means &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;, easy isn't it ü§ì?, it only indicates a state, it's one of the most &lt;strong&gt;important data&lt;/strong&gt; type, since, you will need to control the execution steps thankfully to &lt;code&gt;Boolean&lt;/code&gt; values.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;truth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;ohh&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Null -&amp;gt; It can be really &lt;em&gt;confuse&lt;/em&gt;, it means that you have created a value that will be change soon and first you assign to null. One of the most important uses is to indicate when a function get an error, normally you will return null when there was a failure in the execution time.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;myNull&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;
&lt;span class="nx"&gt;myNull&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hola&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;myNull&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Undefined -&amp;gt; It appears when you declare a var and you don't assign any value. It usually appears when you try to get a value from any var/let/const which has never been defined. It's usually identified such a &lt;em&gt;developer error&lt;/em&gt;.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// it prints undefined&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I know, üòä there are more data types, means more complex data types, but the basic data types are &lt;strong&gt;all of above&lt;/strong&gt;. Really, it's so important to understand what are exactly each one, you need to know what are the &lt;strong&gt;difference&lt;/strong&gt; üòâ and how to use it. &lt;/p&gt;

&lt;p&gt;In the following post we will deep into more detail about complex data types, &lt;strong&gt;understanding&lt;/strong&gt; what does it mean. For now, I strongly recommend you to study and research more about data types, you can write down your own personal notes and use it for remembering all data types üò§.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>API Testing with Postman and Newman from CI/CD</title>
      <author>Dalibor Kundrat</author>
      <pubDate>Mon, 06 Dec 2021 08:50:47 +0000</pubDate>
      <link>https://dev.to/damikun/api-testing-with-postman-and-newman-from-cicd-2p0f</link>
      <guid>https://dev.to/damikun/api-testing-with-postman-and-newman-from-cicd-2p0f</guid>
      <description>&lt;p&gt;I`ll show you how to use &lt;strong&gt;Postman&lt;/strong&gt; to test protected GraphQL API and run test collection using &lt;strong&gt;Newman&lt;/strong&gt; from GithubActions!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This article is part of &lt;a href="https://github.com/damikun/trouble-training"&gt;opensource fullstack app&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#postman-as-graphql-ide"&gt;
  &lt;/a&gt;
  Postman as GraphQL IDE?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.postman.com/"&gt;Postman&lt;/a&gt; is a well-known tool that helps you test your APIs.&lt;/p&gt;

&lt;p&gt;Postman supports:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;REST&lt;/li&gt;
&lt;li&gt;WebSockets&lt;/li&gt;
&lt;li&gt;GraphQL&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Not yet&lt;/strong&gt;, but I see the possibility of it becoming a powerfool tool for GraphQL.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#import-graphql-sdl"&gt;
  &lt;/a&gt;
  Import GraphQL SDL
&lt;/h2&gt;

&lt;p&gt;This has to be done manually! (Unfortunately) Postman does not support schema introspection.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wLsbFoe---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hiqfs7km9dk86pj7ijlv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wLsbFoe---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hiqfs7km9dk86pj7ijlv.png" alt="Postman copy SDL schema" width="880" height="453"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; This article is part of &lt;a href="https://github.com/damikun/trouble-training"&gt;opensource fullstack app&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#prerequests-scripts"&gt;
  &lt;/a&gt;
  Pre-requests scripts
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;Pre-Request&lt;/code&gt; and &lt;code&gt;Tests&lt;/code&gt; can be found in several scopes. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--09LgB4zI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zt8f1omp5brxqdasleyy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--09LgB4zI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zt8f1omp5brxqdasleyy.png" alt="Postman tets vs script" width="880" height="260"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Scope is just place, where you can find them&lt;/strong&gt;. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Scope level Collection&lt;/li&gt;
&lt;li&gt;Section level Folder&lt;/li&gt;
&lt;li&gt;Scope level Request&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#is-there-a-initial-script"&gt;
  &lt;/a&gt;
  Is there a initial script?
&lt;/h2&gt;

&lt;p&gt;Postman does &lt;strong&gt;not&lt;/strong&gt; have &lt;em&gt;init&lt;/em&gt; script that runs once on startup! You can workaround this and implement it using variables!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0AuCULjf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/osp5801rcqqzzgqtk4yd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0AuCULjf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/osp5801rcqqzzgqtk4yd.png" alt="Postman init scsript" width="513" height="332"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-signin-with-oauth"&gt;
  &lt;/a&gt;
  How to sign-in with OAuth?
&lt;/h2&gt;

&lt;p&gt;This depends on whether you are doing the tests manually or automated&lt;/p&gt;

&lt;p&gt;If you run heedless from &lt;code&gt;CI/CD&lt;/code&gt; you need to write scripts and that can be difficult with some &lt;code&gt;oidc&lt;/code&gt; providers who have strict rules and check all security aspects. &lt;/p&gt;

&lt;p&gt;For testing purposes, you can define a specific oidc &lt;code&gt;client_id:Postman&lt;/code&gt;. You can simply protect it with &lt;code&gt;ResourceOwnerPassword&lt;/code&gt; and create a test user for it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--POP28vyZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4tw7kqq2av4ix1eq5i0d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--POP28vyZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4tw7kqq2av4ix1eq5i0d.png" alt="Oauth grant flow" width="880" height="374"&gt;&lt;/a&gt; Image from &lt;a href="//developer.okta.com"&gt;Okta&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;ResourceOwnerPassword&lt;/code&gt; is fully secured in this scenario:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You have a special client (oidc client) and you need &lt;code&gt;Secret&lt;/code&gt; to use it.&lt;/li&gt;
&lt;li&gt;The test user still needs to provide his &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;password&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Will only be activated under a specific flag&lt;/li&gt;
&lt;li&gt;Will not be used publicly&lt;/li&gt;
&lt;li&gt;Can be restricted to a specific origin&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#request-access-token"&gt;
  &lt;/a&gt;
  Request access token
&lt;/h2&gt;

&lt;p&gt;To request a new token, you must make an &lt;code&gt;asynchronous&lt;/code&gt; call to the oidc token endpoint.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lC78OEyR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mbiqhmiprxgjqxmddbik.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lC78OEyR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mbiqhmiprxgjqxmddbik.png" alt="Logical Flow" width="880" height="289"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jmENmfHq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8juk9gh96qjsp70ky1hf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jmENmfHq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8juk9gh96qjsp70ky1hf.png" alt="Requesting token using password resource owner" width="880" height="480"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Pre-scripts&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;1) Check if you have the token from the previous run &lt;br&gt;
2) Validate the lifetime of the token.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Token is valid - &amp;gt; uses the existing one &lt;/li&gt;
&lt;li&gt;Token has expired - &amp;gt; requests a new one&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ky64Ys8---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i1ypss6dyyzqo3ssano8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ky64Ys8---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i1ypss6dyyzqo3ssano8.png" alt="Postman async helper" width="457" height="552"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;OAuth_Token_Exchange&lt;/code&gt; triggers the request with the function &lt;code&gt;pm.sendRequest(...)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f0qUvVyd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x9u1x3g3t3q9e9rtpsee.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f0qUvVyd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x9u1x3g3t3q9e9rtpsee.png" alt="Postman request access token from oidc" width="720" height="850"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#validation-of-the-graphql-response"&gt;
  &lt;/a&gt;
  Validation of the GraphQL response
&lt;/h2&gt;

&lt;p&gt;GraphQL returns &lt;code&gt;json&lt;/code&gt; and you need to create a helper script to validate it. This script validates property by property with the option to ignore some.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EGS0lzkZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yzo47biaqlhp4x0z9if3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EGS0lzkZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yzo47biaqlhp4x0z9if3.png" alt="Validate GraphQL response" width="718" height="626"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#export-test-collection"&gt;
  &lt;/a&gt;
  Export test collection
&lt;/h2&gt;

&lt;p&gt;For that you need to export the collection and the variables and use exported data in headless &lt;code&gt;ci/cd&lt;/code&gt; runner.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Export collection:&lt;/em&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SawkCTWc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u75w8h1egan1lo0ybb3w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SawkCTWc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u75w8h1egan1lo0ybb3w.png" alt="Export postman collection" width="880" height="314"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Export enviroment:&lt;/em&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R07znlfC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9i8pdbkdezv8zjhfafx4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R07znlfC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9i8pdbkdezv8zjhfafx4.png" alt="Export postman enviroment" width="880" height="355"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#newman-headless-runner"&gt;
  &lt;/a&gt;
  Newman headless runner
&lt;/h2&gt;

&lt;p&gt;Newman is CLI runner for postman collections. You can find it on &lt;a href="https://github.com/postmanlabs/newman"&gt;Github&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Install with: &lt;code&gt;npm install -g newman&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Run test collection from console (terminal):&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Tz5ySMIx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fuh7aujxmj36t54l53aw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Tz5ySMIx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fuh7aujxmj36t54l53aw.png" alt="Export postman enviroment" width="618" height="129"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(We use the &lt;code&gt;--insecure&lt;/code&gt; flag because we use untrusted developer certificates).&lt;/p&gt;

&lt;p&gt;This is an example of the output&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4GhSu4tY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gmznt9cbbn8i804vsc21.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4GhSu4tY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gmznt9cbbn8i804vsc21.png" alt="Export postman enviroment" width="604" height="574"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#integration-in-build-and-cicd"&gt;
  &lt;/a&gt;
  Integration in Build and CI/CD
&lt;/h2&gt;

&lt;p&gt;The demo application uses &lt;code&gt;Nuke&lt;/code&gt; for build automation.&lt;/p&gt;

&lt;p&gt;Nuke is a console application that contains all build logic defined as &lt;code&gt;Targets&lt;/code&gt; and allows you to run cross-platform and generate &lt;code&gt;.yaml&lt;/code&gt; for &lt;code&gt;CI/CD&lt;/code&gt; pipelines.&lt;/p&gt;

&lt;p&gt;Let us place &lt;code&gt;Newman&lt;/code&gt; in front of the &lt;code&gt;Cypress&lt;/code&gt; tests.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ebllyqYM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pkjqaxo4cqmxd2c0wyoj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ebllyqYM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pkjqaxo4cqmxd2c0wyoj.png" alt="E2E example" width="669" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To better understand what &lt;code&gt;Target_E2E_Tests&lt;/code&gt; is. Let us take a look at the whole pipeline and the dependencies between the different targets.&lt;/p&gt;

&lt;p&gt;Targets define named operation with specific actions.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kek0JbvZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zv9cj3khpkgmke69vwoh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kek0JbvZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zv9cj3khpkgmke69vwoh.png" alt="Nuke build plan" width="880" height="638"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#githubaction-run"&gt;
  &lt;/a&gt;
  Github-Action run:
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lWcrU_ZZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4wxy9cjcxiknxbgs352d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lWcrU_ZZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4wxy9cjcxiknxbgs352d.png" alt="Nuke build plan" width="828" height="1274"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#repository"&gt;
  &lt;/a&gt;
  Repository
&lt;/h2&gt;

&lt;p&gt;You can find the full source code of the app, including identity, distributed logging, tracing and monitoring, in the open source Github repo:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/damikun/trouble-training"&gt;https://github.com/damikun/trouble-training&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>testing</category>
      <category>devops</category>
      <category>graphql</category>
    </item>
    <item>
      <title>What is an NFT token? It's all about the irreplaceable token</title>
      <author>cristopher salazar</author>
      <pubDate>Mon, 06 Dec 2021 08:30:17 +0000</pubDate>
      <link>https://dev.to/cristolazar/what-is-an-nft-token-its-all-about-the-irreplaceable-token-p5a</link>
      <guid>https://dev.to/cristolazar/what-is-an-nft-token-its-all-about-the-irreplaceable-token-p5a</guid>
      <description>&lt;p&gt;NFT token, which, like other cryptocurrencies, is active on the blockchain platform; These days it is one of the most popular and discussed concepts in the world of cryptocurrency. NFTs are a non-interchangeable and proprietary type of cryptocurrencies that can be used in a variety of contexts to make them unique.&lt;/p&gt;

&lt;p&gt;In this article, we intend to review the features and applications of these tokens. But before we begin, we need to mention the concept of interchangeability (if you are unfamiliar with the concept of tokens, it is best to read the article on the difference between coins and tokens first).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-does-interchangeability-mean"&gt;
  &lt;/a&gt;
  What does interchangeability mean?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qCqcuD6B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ftcmtqu8tzx34u8h1d1q.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qCqcuD6B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ftcmtqu8tzx34u8h1d1q.jpg" alt="Alt Text" width="500" height="350"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fungibility means that one currency or asset can be exchanged for another currency of the same value. This asset also has the ability to be divided into smaller parts.&lt;/p&gt;

&lt;p&gt;To better understand this concept, imagine you have a 50,000 Toman banknote that you can exchange with a banknote of the same value. Or you can exchange it with banknotes with other amounts, the total of which is 50 thousand tomans.&lt;/p&gt;

&lt;p&gt;Therefore, your 50,000 Toman banknote, in addition to being replaceable with other banknotes of the same value; It can be divided into other amounts. So this banknote is a exchangeable currency.&lt;/p&gt;

&lt;p&gt;This example also applies to digital currencies such as Bitcoin, Ripple, Atrium, Bitcoin Cash and other cryptocurrencies. One bitcoin can be exchanged for another bitcoin and it can be divided into smaller parts (satoshi).&lt;/p&gt;

&lt;p&gt;In a nutshell, currencies that have one unit of equal value against another unit of the same currency are exchangeable or Fungible.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-an-nft-token"&gt;
  &lt;/a&gt;
  What is an NFT token?
&lt;/h2&gt;

&lt;p&gt;Non-Fungible Token, or NFT‚Äå for short; An encrypted digital currency that issues a title deed to a digital work in the blockchain space.&lt;/p&gt;

&lt;p&gt;These tokens were originally developed based on the ERC721 standard, which is similar to the ERC20 standard, and were known as a specific atrium token. But now they are being developed on other blockchains as well.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Vwy06jEK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pkt7yes98j1voycaqpgo.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Vwy06jEK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pkt7yes98j1voycaqpgo.jpg" alt="Alt Text" width="500" height="350"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#main-features-of-nft-token"&gt;
  &lt;/a&gt;
  Main features of NFT token
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1-irreplaceability"&gt;
  &lt;/a&gt;
  1. Irreplaceability
&lt;/h3&gt;

&lt;p&gt;This is the main feature of NFT tokens. These tokens cannot be exchanged for an asset like their own.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-rarity"&gt;
  &lt;/a&gt;
  2. Rarity
&lt;/h3&gt;

&lt;p&gt;The developers of these tokens have the ability to produce them in large numbers, but their preference is to produce NFTs in limited numbers and to keep these tokens unique.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-indivisibility"&gt;
  &lt;/a&gt;
  3. Indivisibility
&lt;/h3&gt;

&lt;p&gt;NFT tokens cannot be broken down into smaller sections. NFT always remains a single token.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-being-unique"&gt;
  &lt;/a&gt;
  4. Being unique
&lt;/h3&gt;

&lt;p&gt;These tokens have registered and immutable information and this information is the certificate of NFT authenticity.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#advantages-of-nft-tokens"&gt;
  &lt;/a&gt;
  Advantages of NFT tokens
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1-are-transferable"&gt;
  &lt;/a&gt;
  1. are transferable
&lt;/h3&gt;

&lt;p&gt;These tokens can be bought and sold in certain markets and not in digital currency exchanges. The price of NFT is calculated based on its uniqueness.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-they-are-valid"&gt;
  &lt;/a&gt;
  2. They are valid
&lt;/h3&gt;

&lt;p&gt;As you know, there is no possibility of forgery in the blockchain space. Irreplaceable tokens are also active in this context; Therefore, their authenticity can be assured.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-the-right-of-ownership-is-reserved-in-them"&gt;
  &lt;/a&gt;
  3. The right of ownership is reserved in them
&lt;/h3&gt;

&lt;p&gt;The information cannot be changed or deleted after being registered in the blockchain blocks. Therefore, since NFT token data is stored on blockchains, it is not possible to change their original data under any circumstances, and the original rights of the original owner of the work are always protected.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-the-differences-between-nft-tokens-and-fungible-tokens"&gt;
  &lt;/a&gt;
  What are the differences between NFT tokens and Fungible tokens?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cUCFsWZx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5je26zsc5svfmbt3lall.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cUCFsWZx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5je26zsc5svfmbt3lall.jpg" alt="Alt Text" width="500" height="350"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Non-Fungible tokens are fundamentally different from Fungible tokens. The main difference between these two types of digital currency tokens is in the same interchangeability that in NFT tokens it is not possible to exchange tokens with the same type (same value).&lt;/p&gt;

&lt;p&gt;These tokens also contain specific information that is recorded exclusively on them. The exclusivity of this information can be compared to the information on the plane ticket. Passenger information, exact travel time, travel destination and row and seat number are entered on the plane ticket and no one else can travel with that ticket. The data recorded on the NFT token is also exclusive to that particular token.&lt;/p&gt;

&lt;p&gt;Another difference between NFT and interchangeable tokens is the divisibility. NFT‚Äå tokens cannot be broken down into smaller pieces and always remain a single token.&lt;/p&gt;

&lt;p&gt;Finally, non-replaceable tokens contain more information than replaceable tokens.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-the-uses-of-nft"&gt;
  &lt;/a&gt;
  What are the uses of NFT?
&lt;/h2&gt;

&lt;p&gt;NFT tokens can be used in a variety of contexts, and these tokens are not limited to a specific domain or the world of cryptocurrencies.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-registration-of-digital-artwork"&gt;
  &lt;/a&gt;
  1. Registration of digital artwork
&lt;/h3&gt;

&lt;p&gt;Artists working in the field of digital arts; They can use these tokens to register their works and no longer have to worry about copyright and theft of their works.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-the-gaming-industry"&gt;
  &lt;/a&gt;
  2. The gaming industry
&lt;/h3&gt;

&lt;p&gt;Professional gamers can transfer their assets in the gaming world to various games through NFT tokens and use them in spaces where in-app purchases are limited.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-digital-assets"&gt;
  &lt;/a&gt;
  3. Digital assets
&lt;/h3&gt;

&lt;p&gt;Ownership of any digital asset, such as an Internet domain or a social media account, can be permanently registered in the name of a person or group through a non-exchangeable token.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-physical-assets"&gt;
  &lt;/a&gt;
  4. Physical assets
&lt;/h3&gt;

&lt;p&gt;These tokens can even be used when trading non-digital assets, such as buying a house or car, and registering ownership of a property or car on a blockchain platform.&lt;/p&gt;

&lt;p&gt;The NFT token can also be used in the field of personal identification or registration of academic and personal documents. NFT has also received a great deal of attention from collectors in the field of collecting works. But these are just some of the uses of NFT, and certainly in the future these digital currency tokens will enter more domains and become more popular around the world.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0q016eng--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x4bsdxer56f44olj2flh.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0q016eng--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x4bsdxer56f44olj2flh.jpg" alt="Alt Text" width="500" height="350"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#some-successful-nft-token-projects-so-far"&gt;
  &lt;/a&gt;
  Some successful NFT token projects so far
&lt;/h2&gt;

&lt;p&gt;CryptoKitties: A platform for producing, buying and selling cats in the popular virtual cat Atrium blockchain game&lt;br&gt;
OpenSea: Active system for registering works of art and collectibles via NFT token&lt;br&gt;
Ethereum Name Service: The system for providing domain name services and registering them through NFTs&lt;br&gt;
Async.Art: A platform for registering and buying works of art by NFT&lt;br&gt;
Decentraland: A platform for virtual land distribution&lt;/p&gt;

&lt;p&gt;Origin Protocol, FLOW and Rarible projects, Azure Heroes and AlterVerse games, and programs such as NBA Top Shot and Dr. Seuss to present and record collectible digital assets are some of the other projects that have successfully used irreplaceable tokens to date. But due to the growing trend of people towards the blockchain world in various fields, as well as the growing popularity of NFT among different classes and fields, we will undoubtedly see a multiplication of Non-Fungible Token-based projects in the not-too-distant future.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#concluding-remarks"&gt;
  &lt;/a&gt;
  Concluding remarks
&lt;/h2&gt;

&lt;p&gt;Considering the points we have made so far regarding the NFT token; The question arises as to why these tokens have not yet been properly raised and used in the world.&lt;/p&gt;

&lt;p&gt;The first reason is the substrate of irreplaceable tokens. Blockchains are a fascinating world for those with enough knowledge; But those who are not familiar with this technology and decentralized networks have not shown much interest in joining the users of these networks. NFT technology alone may be very enticing, but its platform has not yet been able to impress all individuals and groups.&lt;/p&gt;

&lt;p&gt;The next point is the decision of the developers to keep these tokens scarce. Because NFT tokens are growing and developing very slowly; Using them is costly and organizations and individuals are trying to use lower cost technologies and get less access to these digital ownership documents.&lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>cryptocurrency</category>
    </item>
    <item>
      <title>Discover the Exclusive Secret to Developing a Successful Food Delivery App Now</title>
      <author>Sara Suarez</author>
      <pubDate>Mon, 06 Dec 2021 08:28:47 +0000</pubDate>
      <link>https://dev.to/suarezsara/discover-the-exclusive-secret-to-developing-a-successful-food-delivery-app-now-3d41</link>
      <guid>https://dev.to/suarezsara/discover-the-exclusive-secret-to-developing-a-successful-food-delivery-app-now-3d41</guid>
      <description>&lt;p&gt;In 2021, the revenue generated through online food delivery is projected to reach a whopping &lt;a href="https://www.statista.com/outlook/dmo/eservices/online-food-delivery/worldwide"&gt;USD 270,317 million&lt;/a&gt;. What‚Äôs more, the number of users in the online food delivery market is expected to surpass 2,638.1 million by 2025. Judging by these figures, it is safe to say that food delivery mobile apps are gaining massive popularity across the globe. A number of entrepreneurs are stepping into the hot market to leverage the opportunity. If you are wondering how to make a food delivery app, then read on.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Here are some secrets to ensure a successful food on-demand food delivery app development:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Conduct Market Research&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Going for on-demand food delivery app development without doing proper market research is akin to taking a shot in the dark. There‚Äôs a lot of risks and dangers involved, and a successful app deployment can only be ensured if the marketing is backed by appropriate market research. Market research helps in analyzing what the customers are looking for. Once the customer expectations are known, the developer will be able to create the right solution. Moreover, nobody should develop an app without first understanding the competition. The better you know who you are competing with, the better will be your chances of developing a successful app. Explore the different strategies followed by your rivals and determine how they stand out. For instance, &lt;a href="https://eng.uber.com/uber-eats-graph-learning/"&gt;Uber Eats&lt;/a&gt; makes use of machine learning to make accurate predictions concerning how long it takes to cook, arrive, and deliver. These accurate estimates ensure happy and satisfied customers.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Define the Scope of Features&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The food delivery mobile app development strategy must involve the establishment of key features. Factors like the market, users, and the app itself must be considered in consolidation to offer customers a unique value, amazing usability, and seamless performance. Accessibility should also play a major role during app development.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;The essential features to bear in mind during on-demand food delivery app development are:&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Value-driven push notifications to notify users about discounts, deals, and loyalty programs.&lt;/li&gt;
&lt;li&gt;Allowing users to view the location and contact information of the delivery agent.&lt;/li&gt;
&lt;li&gt;Real-time tracking of food orders using GPS with estimated waiting and delivery time.&lt;/li&gt;
&lt;li&gt;Simple and accessible payment getaways and mobile wallet software services.&lt;/li&gt;
&lt;li&gt;Social media integration with loyalty or discount programs and redeemable coupons.&lt;/li&gt;
&lt;li&gt;Contactless payment system through QR codes.&lt;/li&gt;
&lt;li&gt;Displaying restaurant ratings and reviews to help customers make better decisions.&lt;/li&gt;
&lt;li&gt;Ability to add items to the cart and schedule orders for a specific time.&lt;/li&gt;
&lt;li&gt;Order history page with previous orders, current orders, and delivery status.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Find the Right Food Delivery Mobile App Development Partner&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To develop a successful app, you need to find the right partner. It can be time-consuming to understand the tech stack, outline the development challenges, and other aspects. Businesspersons and entrepreneurs without proper backgrounds and domain knowledge can find it to be challenging. They can hire someone who can manage the app development.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Here are some of the available choices to consider:&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Freelance developers:&lt;/strong&gt; If you have a tight budget or some level of expertise, then you can find freelancers for &lt;a href="https://www.damcogroup.com/food-delivery-app-development"&gt;on-demand food delivery app development&lt;/a&gt;. Make sure to verify the credentials and portfolio of the freelancers and ensure they have exposure to the food delivery industry.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;In-house team:&lt;/strong&gt; If you have a considerable budget, time, and space to accommodate a team, then in-house development would be an ideal choice for you. While it involves a significant investment such as hiring costs, operational costs, infrastructure, etc, it offers you more control over the delivery terms and deadlines.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;App development companies:&lt;/strong&gt; You can outsource the food delivery mobile app development project to an experienced agency. Such agencies offer a team of experienced developers. You can find an app development agency that has proven experience in developing food delivery apps and expertise in leveraging modern technologies.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Perform Thorough Quality Assurance Testing&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;All the features and functions of the food delivery mobile app should be tested multiple times throughout the development process. You can hire a dedicated quality assistance expert for conceding extensive tests to make sure all the features within the application work how they are supposed to.&lt;/p&gt;

&lt;p&gt;If any bug is caught within the testing process, the app developers will get sufficient time to fix it before the application gets launched.&lt;/p&gt;

&lt;p&gt;Moreover, for checking compatibility, the app should be tested on multiple devices across different operating systems. Make sure to verify the quality and usability of the app on different devices such as smartphones and tablets. All the functions and features of the app should work uniformly across devices and operating systems.&lt;/p&gt;

&lt;p&gt;The competition in the food delivery app segment is cutthroat. However, do not let the competition discourage you from venturing into the profitable industry. Take your chances and leverage the tips mentioned above to get the food delivery mobile app development right the first time itself.&lt;/p&gt;

</description>
      <category>mobile</category>
      <category>webdev</category>
      <category>android</category>
    </item>
    <item>
      <title>Secret of Great Programmers Revealed</title>
      <author>Somnath Singh</author>
      <pubDate>Mon, 06 Dec 2021 08:23:07 +0000</pubDate>
      <link>https://dev.to/polymathsomnath/secret-of-great-programmers-revealed-4f5j</link>
      <guid>https://dev.to/polymathsomnath/secret-of-great-programmers-revealed-4f5j</guid>
      <description>&lt;p&gt;A human being is always longing to be something more than what he is right now. This desire to be something more pushes humans to greatness.&lt;/p&gt;

&lt;p&gt;One sure way you can achieve greatness in any field is through &lt;strong&gt;&lt;em&gt;deliberate practice.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you don‚Äôt practice deliberately, you‚Äôre wasting your time.&lt;/p&gt;

&lt;p&gt;As to popular notion, deliberate practice is not performing a task again and again.&lt;/p&gt;

&lt;p&gt;For example, if you ask yourself, ‚Äú&lt;strong&gt;Why&lt;/strong&gt; am I &lt;strong&gt;performing&lt;/strong&gt; this task?‚Äù and your answer is, ‚Äúto complete the task,‚Äù then you‚Äôre not doing deliberate practice.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#you-need-to-do-the-right-things-if-you-want-the-right-things-to-happen-to-you"&gt;
  &lt;/a&gt;
  You need to do the right things ‚Äî if you want the right things to happen to you
&lt;/h1&gt;

&lt;p&gt;Yes, deliberate practice means repetition, but repetition doesn‚Äôt mean doing the same thing mindlessly. It means performing the task to increase your mastery of one or more aspects of the task.&lt;/p&gt;

&lt;p&gt;You do deliberate practice to improve your ability to perform a task. It‚Äôs about acquiring the skill with the correct technique.&lt;/p&gt;

&lt;p&gt;It means doing the repetition while giving all your attention . Doing the task over and over again, until you achieve your desired level of mastery.&lt;/p&gt;

&lt;p&gt;The only one who devotes himself to a cause with his whole strength and soul can be a true master.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;For this reason, mastery demands all of a person.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;‚Äî Albert Einstein&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;You do deliberate practice to master the task, not to complete the task.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The main aim of professional development is to finish a product. Where as the main aim of deliberate practice is to improve your performance ‚Äî both are not the same.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ask-yourself"&gt;
  &lt;/a&gt;
  Ask yourself:
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;How much of your time do you spend developing someone else‚Äôs product? And how much developing yourself?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;Let me know your answers in the comments section.&lt;/em&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#if-you-show-me-the-how-i-will-find-the-why"&gt;
  &lt;/a&gt;
  If you show me the HOW ‚Äî I will find the WHY
&lt;/h1&gt;

&lt;p&gt;Peter Norvig has written the most popular book ever on Artificial Intelligence.&lt;/p&gt;

&lt;p&gt;In his famous post, &lt;a href="http://in%20his%20popular%20post%2C%20teach%20yourself%20programming%20in%20ten%20years%2C/"&gt;&lt;em&gt;Teach Yourself Programming in Ten Years&lt;/em&gt;&lt;/a&gt;, he says that ‚Äúit may be that 10,000 hours‚Ä¶is the magic number.‚Äù&lt;/p&gt;

&lt;p&gt;I remember reading this article by &lt;a href="https://en.wikipedia.org/wiki/Peter_Norvig"&gt;Peter Norvig&lt;/a&gt; in my teens and thinking this must be a joke! After all, who can spend that much time? No, this isn‚Äôt a joke.&lt;/p&gt;

&lt;p&gt;There is no substitute for personal experience ‚Äî once you have it, &lt;em&gt;you know it&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Peter Norvig explains:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The key to developing expertise is deliberate practice: not just doing it again and again, but challenging yourself with a task that is just beyond your current ability, trying it, analyzing your performance while and after doing it, and correcting any mistakes.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;There is little point in practicing something you are already good at. &lt;strong&gt;Deliberate practice means practicing something you are not good at.&lt;/strong&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#quantity-leads-to-quality"&gt;
  &lt;/a&gt;
  Quantity Leads To Quality
&lt;/h1&gt;

&lt;p&gt;As David Bayles and Ted Orland write in &lt;a href="http://www.amazon.ca/Art-Fear-Observations-Rewards-Artmaking/dp/0961454733"&gt;&lt;em&gt;Art and Fear&lt;/em&gt;&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The ceramics teacher announced on opening day that he was dividing the class into two groups. Students on the left side of the studio would be rated on quantity, while students on the right would be graded on quality.&lt;/p&gt;

&lt;p&gt;His procedure was simple:&lt;/p&gt;

&lt;p&gt;On the final day of class, he would bring in his bathroom scales and weigh the work of the ‚Äúquantity‚Äù group: fifty pounds of pots rated an ‚ÄúA‚Äù, forty pounds a ‚ÄúB‚Äù, and so on.&lt;/p&gt;

&lt;p&gt;However, those graded on ‚Äú&lt;strong&gt;quality&lt;/strong&gt;‚Äù needed to produce only one pot ‚Äî albeit a perfect one ‚Äî to get an ‚ÄúA‚Äù.&lt;/p&gt;

&lt;p&gt;Well, came grading time and a curious fact emerged: the group graded for quantity produced the highest quality works.&lt;/p&gt;

&lt;p&gt;It seems that while the ‚Äúquantity‚Äù group was busily churning out piles of work ‚Äî and learning from their mistakes.&lt;/p&gt;

&lt;p&gt;The ‚Äúquality‚Äù group had sat theorizing about perfection, and in the end, had little more to show for their efforts than grandiose theories and a pile of dead clay.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#takeaway"&gt;
  &lt;/a&gt;
  TAKEAWAY:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;  Don‚Äôt get too hung up initially on polishing your work to &lt;strong&gt;perfection&lt;/strong&gt;. Instead, focus on cranking out as much as you can.&lt;/li&gt;
&lt;li&gt;  Doing something will lead to doing it well.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#never-give-up-great-things-take-time"&gt;
  &lt;/a&gt;
  Never give up ‚Äî great things take time
&lt;/h1&gt;

&lt;p&gt;When you first learn to program, you are forced to practice purposefully. Since everything is new and challenging ‚Äî you put in the hard work.&lt;/p&gt;

&lt;p&gt;But this phase fades and motivation to study tough new topics also fades away.&lt;/p&gt;

&lt;p&gt;Once we achieve a certain skill level (like getting a good job), it‚Äôs easy to stop pushing ourselves, settle for the daily grind, and shun all challenges.&lt;/p&gt;

&lt;p&gt;Take Shinji for example, he is considered the &lt;a href="http://www.swimwellblog.com/archives/1663/"&gt;‚Äúmost graceful‚Äù swimmer in the world&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;He started frequently swimming in his late 30s, and now his swimming video on YouTube is more popular than Michael Phelps‚Äô.&lt;/p&gt;

&lt;p&gt;How did an average guy with a job and a family get so good?&lt;/p&gt;

&lt;p&gt;He practiced a &lt;a href="http://www.swimwellblog.com/archives/1666/"&gt;&lt;em&gt;lot.&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;‚ÄúI made it my goal to become the ‚Äòmost graceful swimmer in the world.‚Äô&lt;/p&gt;

&lt;p&gt;Whenever I was in Japan, I spent 3 to 4 hours in the endless pool, usually from 10PM to 2AM, four days a week, recording my swim, analyzing it frame by frame, finding and fixing small flaws, one by one.‚Äù -Shinji&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This is an excellent example of &lt;strong&gt;deliberate&lt;/strong&gt; &lt;strong&gt;practice.&lt;/strong&gt; You work hard, push yourself to your limits, and keep going until you progress and move up a level.&lt;/p&gt;

&lt;p&gt;If something feels uncomfortable it means you are pushing your limits ‚Äî Do it until you get &lt;em&gt;comfortable ‚Äî&lt;/em&gt; &lt;strong&gt;Embrace&lt;/strong&gt; it.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#mile-by-mile-one-hits-the-milestone"&gt;
  &lt;/a&gt;
  Mile by mile one hits the milestone
&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;No matter how great the talent or efforts, some things just take time. You can‚Äôt produce a baby in one month by getting nine women pregnant.&lt;/p&gt;

&lt;p&gt;‚Äî Warren Buffet&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Mary Poppendieck&lt;/strong&gt; has co-created lean software.&lt;/p&gt;

&lt;p&gt;She‚Äôs also co-authored award-winning books.&lt;/p&gt;

&lt;p&gt;In the book &lt;em&gt;Leading Lean Software Developmen_t, Mary Poppendieck notes that &lt;strong&gt;‚Äú&lt;/strong&gt;_it takes elite performers a minimum of 10,000 hours of deliberate, focused practice to become experts.‚Äù&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The expertise arrives gradually over time ‚Äî not all at once in the 10,000th hour!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-do-it"&gt;
  &lt;/a&gt;
  How to do it:
&lt;/h2&gt;

&lt;p&gt;Nevertheless, 10,000 hours is a lot: about 20 hours per week for 10 years.&lt;/p&gt;

&lt;p&gt;Given this level of commitment, you might be worrying that you‚Äôre just not expert material.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;You are&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Greatness is essentially a matter of conscious choice ‚Äî y_our choice._&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Every artist was first an amateur.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;‚Äî Ralph Waldo Emerson&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#you-dont-have-to-see-the-whole-staircase-just-take-the-first-step"&gt;
  &lt;/a&gt;
  You don‚Äôt have to see the whole staircase ‚Äî just take the first step
&lt;/h1&gt;

&lt;p&gt;Over the last two decades, research has proven that deliberate practice is most critical factor in building a skill ‚Äî not ones innate talent.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;There is broad consensus among researchers of expert performance that inborn talent does not account for much more than a threshold. You have to have a minimum amount of natural ability to get started in a sport or profession. After that, &lt;strong&gt;the people who excel are the ones who work the hardest.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Deliberate practice does not mean doing what you are good at. It means challenging yourself, doing what you are not good at. So it‚Äôs not necessarily fun.&lt;/p&gt;

&lt;p&gt;A kid may move his body a lot, but that does not make him a martial artist.&lt;/p&gt;

&lt;p&gt;This is just like this: you have to do it consciously and increase your difficulty every time.&lt;/p&gt;

&lt;p&gt;That doesn‚Äôt mean programming has to feel uncomfortable all the time, but it should regularly confront you with some difficulties.&lt;/p&gt;

&lt;p&gt;Deliberate practice is about learning ‚Äî learning that changes you, learning that changes who you are.&lt;/p&gt;

&lt;p&gt;Also, it is essential to remember that learning is never created equally. There is a world of difference in what you learn by working alone and working among a group of people.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;It is a rough road that leads to the path of greatness.&lt;/p&gt;

&lt;p&gt;‚Äî Seneca&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#how-to-do-it"&gt;
  &lt;/a&gt;
  How to do it:
&lt;/h2&gt;

&lt;p&gt;When you are building something, don‚Äôt do it just for the sake of doing it.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Before you begin your coding session, have a &lt;strong&gt;clear goal&lt;/strong&gt; in your mind &lt;strong&gt;what&lt;/strong&gt; you want to achieve through your coding session.&lt;/li&gt;
&lt;li&gt;  Don‚Äôt get stuck trying to &lt;strong&gt;get it right&lt;/strong&gt; the first time. Instead, start making one or two things everyday.&lt;/li&gt;
&lt;li&gt;  Check where are you before doing something and where are you after doing it ‚Äî is there an &lt;strong&gt;&lt;em&gt;improvement&lt;/em&gt;&lt;/strong&gt;? If not, then &lt;strong&gt;why&lt;/strong&gt; ‚Äî if yes, then &lt;strong&gt;what&lt;/strong&gt;?&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;Make an account&lt;/strong&gt; &lt;em&gt;of your progress&lt;/em&gt;.[Important]&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In any reasonable application, you probably have a lot of really easy stuff. Things like variable assignments, function definitions, or setting up the databases.&lt;/p&gt;

&lt;p&gt;Maybe for you, the edge of your abilities is on more complex algorithms, data structures or mathematical equations.&lt;/p&gt;

&lt;p&gt;However, if you approach practice blindly, you‚Äôll probably spend 90% of your time on the basics with only 10% of your time on the really difficult stuff that pushes you.&lt;/p&gt;

&lt;p&gt;So for every hour you spend practicing, you‚Äôre only really improving for &lt;strong&gt;six minutes&lt;/strong&gt; of that time.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;The solution here is to craft projects, problems, or practice sessions which deliberately eliminate the easy stuff.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Deliberate Practice your programming problem in such a way that it deliberately forces you to learn the new data structure or algorithm.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#10000-rule-is-a-myth"&gt;
  &lt;/a&gt;
  10,000 Rule Is a Myth
&lt;/h1&gt;

&lt;p&gt;There are a lot of people who say that the 10,000 rule is a myth.&lt;/p&gt;

&lt;p&gt;Some people spend thousands of hours learning and executing a craft and stay mediocre, while others become experts in their field with the same time investment&lt;/p&gt;

&lt;p&gt;As we already discussed, Deliberate practice is not how much time you spend doing something ‚Äî It is about how you do it.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;When you are on the path of mastery:&lt;/p&gt;

&lt;p&gt;Conscious Repetition &amp;gt; Inattentive Repetition.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;10,000 figure is a close number where one achieves mastery over something, but it isn‚Äôt absolute.&lt;/p&gt;

&lt;p&gt;If one has a razor-sharp focus, what others do in 10 years; he can do it in 4‚Äì5 years or even less.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#note-of-gratitude"&gt;
  &lt;/a&gt;
  Note of Gratitude
&lt;/h1&gt;

&lt;p&gt;I wanted to take this last opportunity to say thank you.&lt;/p&gt;

&lt;p&gt;Thank you for being here! I would not be able to do what I do without people like you who follow along and take that leap of faith to read my post.&lt;/p&gt;

&lt;p&gt;I hope you‚Äôll &lt;a href="https://polymathsomnath.medium.com/subscribe"&gt;&lt;strong&gt;join me&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://polymathsomnath.medium.com/subscribe"&gt;&lt;strong&gt;my future blog post&lt;/strong&gt;&lt;/a&gt; and stick around because I think we have something great here. And I hope that I will be able to help you along in your career for many more years to come!&lt;/p&gt;

&lt;p&gt;See you next time. Bye!&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>webdev</category>
      <category>programming</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Who needs my help?</title>
      <author>Software Ninja Developer</author>
      <pubDate>Mon, 06 Dec 2021 08:10:16 +0000</pubDate>
      <link>https://dev.to/senioritninja/who-needs-my-help-25lc</link>
      <guid>https://dev.to/senioritninja/who-needs-my-help-25lc</guid>
      <description>&lt;p&gt;Hello, Nice to meet you. My name is Raphael (Full stack developer)&lt;br&gt;
If you need anything (software development), I can help you.&lt;br&gt;
After graduating with my Bachelor‚Äôs degree in Computer Science, I‚Äôve spent the last 6+ years building professional experience as a Software Development.&lt;br&gt;
Have an extremely software developing, engineering's versatile skill set and I understand the importance of being interactive and enjoy communicating with others for the benefit of the company.&lt;br&gt;
I am looking for a Full-time remote job(Part-time, contract, freelancer also is okay).&lt;br&gt;
My main expert skills are following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Front-end technologies: React.js, Redux, React Native, TypeScript, Vue.js, Vuex, Angularjs, HTML/HTML5/CSS, &lt;/li&gt;
&lt;li&gt;Back-end: Python, Django, Flask,  Node.js, Express, MVC, MVT, .NET, C/C++, PHP, Golang&lt;/li&gt;
&lt;li&gt;ORM, MySQL, MongoDB, Google Firebase, GraphQL, AWS, GCP, Azure, Heroku&lt;/li&gt;
&lt;li&gt;Blockchain, Smart Contract, Cryptography, Web3.js&lt;/li&gt;
&lt;li&gt;variety web frameworks: Laravel, CodeIgniter&lt;/li&gt;
&lt;li&gt;AI and Machine Learning&lt;/li&gt;
&lt;li&gt;Strong version control (Github, Gitlab, Bitbucket)&lt;/li&gt;
&lt;li&gt;Good communication
I can be reached anytime by skype(live:.cid.b1a38583392e35b0 ), email ( &lt;a href="mailto:futuresea.dev@gmail.com"&gt;futuresea.dev@gmail.com&lt;/a&gt; ).
I look forward to speaking with you soon.
Sincerely,&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>webdev</category>
      <category>career</category>
      <category>programming</category>
      <category>discuss</category>
    </item>
    <item>
      <title>How I personalized my Hashnode blog and you can too! üåü</title>
      <author>Avneesh Agarwal</author>
      <pubDate>Mon, 06 Dec 2021 08:09:38 +0000</pubDate>
      <link>https://dev.to/avneesh0612/how-i-personalized-my-hashnode-blog-and-you-can-too-4l31</link>
      <guid>https://dev.to/avneesh0612/how-i-personalized-my-hashnode-blog-and-you-can-too-4l31</guid>
      <description>&lt;p&gt;Many people have asked me that how does my blog feels so similar to my portfolio and matches the theme even though it is built using Hashnode and I have done very little work for the blog.&lt;/p&gt;

&lt;p&gt;The answer is with custom CSS!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y-hd0Ak5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://c.tenor.com/GxjCdYluvgQAAAAC/css-css-magic.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y-hd0Ak5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://c.tenor.com/GxjCdYluvgQAAAAC/css-css-magic.gif" alt="CSS Magic" width="498" height="340"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-is-hashnode"&gt;
  &lt;/a&gt;
  What is Hashnode?
&lt;/h1&gt;

&lt;p&gt;For the readers who don't know about hashnode here is a little brief on what is Hashnode.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Hashnode is a free developer blogging platform that allows you to publish articles on your domain and helps you stay connected with a global developer community.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you want to know more about hashnode, check out there &lt;a href="https://hashnode.com/@avneesh0612/joinme"&gt;website&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#become-a-hashnode-ambassador"&gt;
  &lt;/a&gt;
  Become a Hashnode Ambassador
&lt;/h2&gt;

&lt;p&gt;We are going to add custom CSS to our blog, so you need to become an ambassador to be able to do that. You can become an ambassador &lt;a href="https://hashnode.com/ambassador"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Now that we are ready, let's see how I customized my blog and how you can too! ü•≥&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#the-blog-home-page"&gt;
  &lt;/a&gt;
  The blog home page
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#styling-the-header"&gt;
  &lt;/a&gt;
  Styling the header
&lt;/h2&gt;

&lt;p&gt;Go to your blog dashboard and click on Appearance&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--02PamVv6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638712676881/5vv0Wylg1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--02PamVv6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638712676881/5vv0Wylg1.png" alt="image.png" width="529" height="694"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#changing-the-logo"&gt;
  &lt;/a&gt;
  Changing the logo
&lt;/h3&gt;

&lt;p&gt;In the appearance tab, you can select logos for dark mode and light mode.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Aq6lJuc0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638712897880/A7bpgUYsa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Aq6lJuc0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638712897880/A7bpgUYsa.png" alt="image.png" width="880" height="689"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I built these with Figma you can use any tool you like üòÑ&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#changing-the-color-of-the-header"&gt;
  &lt;/a&gt;
  Changing the color of the header
&lt;/h3&gt;

&lt;p&gt;Now let's get to the CSS part.&lt;/p&gt;

&lt;p&gt;There is an option to change the color of the header in the appearance tab itself but I will change it with CSS because I want different colors for light and dark mode. So scroll down and you will see an add custom CSS button. Toggle it on and click on update.&lt;/p&gt;

&lt;p&gt;Now click on &lt;strong&gt;Add Custom CSS&lt;/strong&gt;, you will be redirected to a page where you can write some code.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--snXZeAbg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://c.tenor.com/y2JXkY1pXkwAAAAM/cat-computer.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--snXZeAbg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://c.tenor.com/y2JXkY1pXkwAAAAM/cat-computer.gif" alt="" width="220" height="220"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Add the following-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.blog-header {
  background: #52dee5 !important;
}

.dark .blog-header {
  background: #0a192f !important;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Click on Save styles, then Preview.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D5N7uIqA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638717306760/eLQacewh_.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D5N7uIqA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638717306760/eLQacewh_.png" alt="image.png" width="383" height="86"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On seeing the preview, the header's color will be changed&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ibWtZz9C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638717377032/eP0J8hngV.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ibWtZz9C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638717377032/eP0J8hngV.png" alt="image.png" width="880" height="102"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Feel free to you use your brand color's here instead of mine :)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#customizing-the-layout"&gt;
  &lt;/a&gt;
  Customizing the layout
&lt;/h2&gt;

&lt;p&gt;In the appearance tab, you have 3 layouts to choose from. I use the magazine layout. I would recommend you to use the magazine layout if you have quite a few articles &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zX7MKvXB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638721032858/yKd0oPZp1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zX7MKvXB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638721032858/yKd0oPZp1.png" alt="image.png" width="880" height="328"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#changing-the-theme"&gt;
  &lt;/a&gt;
  Changing the theme
&lt;/h2&gt;

&lt;p&gt;Inside custom CSS I am going to add colors, to different classes&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Background for the articles section-&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.css-2j2uz3,
.blog-body,
.blog-featured-area {
  background: #93f8eb !important;
}

.dark .css-2j2uz3,
.dark .blog-body,
.dark .blog-featured-area {
  background: #222e50 !important;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the preview, it will add colors for light and dark mode-&lt;/p&gt;

&lt;p&gt;Aqua for light mode-&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8qf_JnkA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638757925255/Pf4uDpGvN.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8qf_JnkA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638757925255/Pf4uDpGvN.png" alt="image.png" width="880" height="460"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Blue Gray for dark mode-&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8Lr09t0Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638758114995/98q-ZKVof.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8Lr09t0Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638758114995/98q-ZKVof.png" alt="image.png" width="880" height="455"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;P.S Some CSS classes may differ due to layouts, so if you see that some stylings are not applied then get the class of that section and add it in there.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#the-author-and-footer-section"&gt;
  &lt;/a&gt;
  The author and footer section
&lt;/h3&gt;

&lt;p&gt;I am going to keep the same colors for the header, footer, and author container. So you can use the following-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.blog-author-container,
.blog-header {
  background: #52dee5;
}

.dark .blog-author-container,
.dark .blog-header {
  background: #0a192f;
}

.blog-footer-area {
  border-color: #0a192f !important;
  background: #52dee5 !important;
}

.dark .blog-footer-area {
  border-color: #52dee5 !important;
  background: #0a192f !important;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To remove code duplication you can remove the styles for the &lt;code&gt;blog header&lt;/code&gt; that we added because I have added it together with the author container.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#load-more-button"&gt;
  &lt;/a&gt;
  Load more button
&lt;/h3&gt;

&lt;p&gt;I have also customized the load more button, so it looks like this-&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SlxbEoTz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638759144621/0KtTyGXKz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SlxbEoTz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638759144621/0KtTyGXKz.png" alt="image.png" width="178" height="81"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To get the same button to add the following styles-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.css-1swncjx {
  color: #222e50 !important;
  border-color: #222e50 !important;
}

.css-1swncjx:hover {
  background-color: #222e50 !important;
  color: #52dee5 !important;
}

.dark .css-1swncjx {
  color: #52dee5 !important;
  border-color: #52dee5 !important;
}

.dark .css-1swncjx:hover {
  background-color: #52dee5 !important;
  color: #222e50 !important;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#the-scrollbar"&gt;
  &lt;/a&gt;
  The scrollbar
&lt;/h3&gt;

&lt;p&gt;Finally, on the homepage, I will change the scrollbar as the normal one looks boring-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;::-webkit-scrollbar {
  width: 10px;
}

::-webkit-scrollbar-track {
  border-radius: 10px;
  background-color: #222e50;
}

::-webkit-scrollbar-thumb {
  border-radius: 10px;
  background: #52dee5;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#final-code-for-home-page"&gt;
  &lt;/a&gt;
  Final code for home page
&lt;/h2&gt;

&lt;p&gt;My complete CSS looks like this-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.css-2j2uz3,
.blog-body,
.blog-featured-area {
  background: #93f8eb !important;
}

.dark .css-2j2uz3,
.dark .blog-body,
.dark .blog-featured-area {
  background: #222e50 !important;
}

.blog-author-container,
.blog-header {
  background: #52dee5;
}

.dark .blog-author-container,
.dark .blog-header {
  background: #0a192f;
}

.blog-footer-area {
  border-color: #0a192f !important;
  background: #52dee5 !important;
}

.dark .blog-footer-area {
  border-color: #52dee5 !important;
  background: #0a192f !important;
}

.css-1swncjx {
  color: #222e50 !important;
  border-color: #222e50 !important;
}

.css-1swncjx:hover {
  background-color: #222e50 !important;
  color: #52dee5 !important;
}

.dark .css-1swncjx {
  color: #52dee5 !important;
  border-color: #52dee5 !important;
}

.dark .css-1swncjx:hover {
  background-color: #52dee5 !important;
  color: #222e50 !important;
}

::-webkit-scrollbar {
  width: 10px;
}

::-webkit-scrollbar-track {
  border-radius: 10px;
  background-color: #222e50;
}

::-webkit-scrollbar-thumb {
  border-radius: 10px;
  background: #52dee5;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#the-article-page"&gt;
  &lt;/a&gt;
  The article page
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#header"&gt;
  &lt;/a&gt;
  Header
&lt;/h2&gt;

&lt;p&gt;Since we are changing the header color via CSS and not in the appearance tab we need to add the same code in articles page also-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.blog-header {
  background: #52dee5 !important;
}

.dark .blog-header {
  background: #0a192f !important;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#background-of-the-main-content"&gt;
  &lt;/a&gt;
  Background of the main content-
&lt;/h2&gt;

&lt;p&gt;To change the background of the main content i.e the text, image, reactions button, etc. we need to target the &lt;code&gt;blog-content-wrapper&lt;/code&gt; class&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.blog-content-wrapper {
  background: #52dee5;
}

.dark .blog-content-wrapper {
  background: #0a192f;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#divider-near-author-and-article-details"&gt;
  &lt;/a&gt;
  Divider near author and article details
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lmf05PFA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638765565195/Eiyoevk-G.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lmf05PFA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638765565195/Eiyoevk-G.png" alt="image.png" width="880" height="175"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The contrast in this border is not very good, so I will change it to a brighter color-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.css-1pt9cni {
  border-color: #222e50 !important;
}

.dark .css-1pt9cni {
  border-color: #93f8eb !important;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#newsletter-and-audio"&gt;
  &lt;/a&gt;
  Newsletter and audio
&lt;/h2&gt;

&lt;p&gt;I use a gradient for the background of the two boxes and have some bright colors inside üéâ&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.css-1s4b5hj,
.blog-subscription-article-wrapper {
  background: linear-gradient(
    90deg,
    hsla(235, 100%, 78%, 1) 0%,
    hsla(222, 77%, 33%, 1) 100%
  );
}

.blog-subscription-form-message {
  /* email subscription form message */
  color: white !important;
}

.css-14lmbqe,
.blog-subscription-form-button {
  color: #2b2e35 !important;
}

.dark .css-14lmbqe,
.dark .blog-subscription-form-button {
  color: #93f8eb !important;
}

audio::-webkit-media-controls-play-button,
audio::-webkit-media-controls-panel {
  background-color: #93f8eb;
  color: white !important;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#reaction-button"&gt;
  &lt;/a&gt;
  Reaction button
&lt;/h2&gt;

&lt;p&gt;Let's style our reaction buttons to make them pop a little bit-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.css-4wwro6 {
  border-color: #222e50 !important;
  color: #2b2e35 !important;
}

.dark .css-4wwro6 {
  border-color: #93f8eb !important;
  color: #93f8eb !important;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now the buttons look better. Make sure to smash them üòâ&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BWQtnO2r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638766477040/dnf4ZmUvS.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BWQtnO2r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638766477040/dnf4ZmUvS.png" alt="image.png" width="255" height="341"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sponsor-button"&gt;
  &lt;/a&gt;
  Sponsor button
&lt;/h2&gt;

&lt;p&gt;If you have hashnode sponsors enabled then you can add the stylings for it-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.css-2enc5m {
  background-color: #222e50 !important;
  border-color: #222e50 !important;
  color: #52dee5 !important;
}

.dark .css-2enc5m {
  background-color: #52dee5 !important;
  border-color: #52dee5 !important;
  color: #0a192f !important;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This gives us a nice and simple button&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tfaC0DIg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638775502430/sJioEg9av.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tfaC0DIg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638775502430/sJioEg9av.png" alt="image.png" width="220" height="93"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#comments"&gt;
  &lt;/a&gt;
  Comments
&lt;/h2&gt;

&lt;p&gt;Now our comments look very plain so let us add some colors to it with the following code-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.css-3159x8 {
  background: #93f8eb !important;
}

.dark .css-3159x8 {
  background: #222e50 !important;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#links"&gt;
  &lt;/a&gt;
  Links
&lt;/h2&gt;

&lt;p&gt;To create the links pop up and be more evident I am going to change their colors a bit-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.css-1azsmog a {
  color: #222e50 !important;
}

.dark .css-1azsmog a {
  color: #52dee5 !important;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#replace-white-borders-in-light-mode"&gt;
  &lt;/a&gt;
  Replace white borders in light mode
&lt;/h2&gt;

&lt;p&gt;There were quite a few places in &lt;strong&gt;light mode&lt;/strong&gt; where the white border wasn't looking good so I changed their border color-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.blog-similar-article-wrapper,
.css-6rnkih,
.css-h6a8j6,
.css-1s4b5hj,
.blog-subscription-article-wrapper {
  border-color: #222e50 !important;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#scrollbar"&gt;
  &lt;/a&gt;
  Scrollbar
&lt;/h2&gt;

&lt;p&gt;Like the home page add some styles for the scrollbar-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;::-webkit-scrollbar {
  width: 10px;
}

::-webkit-scrollbar-track {
  border-radius: 10px;
  background-color: #0a192f;
}

::-webkit-scrollbar-thumb {
  border-radius: 10px;
  background: #52dee5;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#footer"&gt;
  &lt;/a&gt;
  Footer
&lt;/h2&gt;

&lt;p&gt;Finally, I am gonna style the footer with some border and background-color-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.blog-footer-area {
  border-color: #222e50 !important;
  background: #93f8eb !important;
}

.dark .blog-footer-area {
  border-color: #93f8eb !important;
  background: #222e50 !important;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;All the CSS for articles page-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.blog-header {
  /* header */
  background: #93f8eb !important;
}

.dark .blog-header {
  /* header dark */
  background: #222e50 !important;
}

.blog-content-wrapper {
  /* main content */
  background: #52dee5;
}

.dark .blog-content-wrapper {
  /* main content dark */
  background: #0a192f;
}

.css-1pt9cni {
   /*divider */
  border-color: #222e50 !important;
}

.dark .css-1pt9cni {
   /*divider dark */
  border-color: #93f8eb !important;
}

.css-1s4b5hj,
.blog-subscription-article-wrapper {
  /* email subscription and audio player background */
  background: linear-gradient(
    90deg,
    hsla(235, 100%, 78%, 1) 0%,
    hsla(222, 77%, 33%, 1) 100%
  );
}

.blog-subscription-form-message {
  /* email subscription form message */
  color: white !important;
}

.css-14lmbqe,
.blog-subscription-form-button {
  /* Newsletter form subscribe button */
  color: #2b2e35 !important;
}

.dark .css-14lmbqe,
.dark .blog-subscription-form-button {
  /* Newsletter form subscribe button dark */
  color: #93f8eb !important;
}

audio::-webkit-media-controls-play-button,
audio::-webkit-media-controls-panel {
  /* audio player */
  background-color: #93f8eb;
  color: white !important;
}

.css-4wwro6 {
  /* Reaction button */
  border-color: #222e50 !important;
  color: #2b2e35 !important;
}

.dark .css-4wwro6 {
  /* Reaction button dark */
  border-color: #93f8eb !important;
  color: #93f8eb !important;
}

.css-2enc5m {
  /* Sponsor button */
  background-color: #222e50 !important;
  border-color: #222e50 !important;
  color: #52dee5 !important;
}

.dark .css-2enc5m {
  /* Sponsor button dark */
  background-color: #52dee5 !important;
  border-color: #52dee5 !important;
  color: #0a192f !important;
}

.css-3159x8 {
  /* Comments */
  background: #93f8eb !important;
}

.dark .css-3159x8 {
  /* Comments dark */
  background: #222e50 !important;
}

.blog-footer-area {
  /* footer */
  border-color: #222e50 !important;
  background: #93f8eb !important;
}

.dark .blog-footer-area {
  /* footer dark */
  border-color: #93f8eb !important;
  background: #222e50 !important;
}

.css-1azsmog a {
  color: #222e50 !important;
}

.dark .css-1azsmog a {
  color: #52dee5 !important;
}

/* scrollbar */
::-webkit-scrollbar {
  width: 10px;
}

::-webkit-scrollbar-track {
  border-radius: 10px;
  background-color: #0a192f;
}

::-webkit-scrollbar-thumb {
  border-radius: 10px;
  background: #52dee5;
}

/* White borders */
.blog-similar-article-wrapper,
.css-6rnkih,
.css-h6a8j6,
.css-1s4b5hj,
.blog-subscription-article-wrapper {
  border-color: #222e50 !important;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I have also added a few comments for you all, so you can understand which class does what üéâ.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;I would recommend you to change the colors a bit, try to tweak a few things, and make your blog unique to yourself so people can know that this is your website as soon as they see it. Also, make sure to hit the publish button when you are done. If you have customized your blog I would love to see them üëá.&lt;/p&gt;

&lt;p&gt;See you next time ‚úåÔ∏è&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#useful-links"&gt;
  &lt;/a&gt;
  Useful links
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://blog.avneesh.tech"&gt;Read more&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://links.avneesh.tech"&gt;Connect with me&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://hashnode.com"&gt;Hashnode&lt;/a&gt;&lt;/p&gt;

</description>
      <category>styling</category>
      <category>css</category>
      <category>hashnode</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Role of APIs in Blockchain and AI</title>
      <author>Rajat Thakur</author>
      <pubDate>Mon, 06 Dec 2021 07:52:05 +0000</pubDate>
      <link>https://dev.to/digitallyrajat/role-of-apis-in-blockchain-and-ai-2g6f</link>
      <guid>https://dev.to/digitallyrajat/role-of-apis-in-blockchain-and-ai-2g6f</guid>
      <description>&lt;p&gt;APIs are very important for websites and applications today and have also become indispensable for blockchain applications. But few people understand what they are and why they are essential for both users and businesses.&lt;/p&gt;

&lt;p&gt;There is nothing conceptually complicated about an API, including a blockchain API. The term stands for Application Programming Interface and represents a tool that hides complexity from developers, giving users the ability to interact with an application or website without problems.&lt;/p&gt;

&lt;p&gt;Reusable application components, send data to and from the application and extend application systems to partners.&lt;/p&gt;

&lt;p&gt;Some Examples of APIs&lt;/p&gt;

&lt;p&gt;APIs are one of the most convenient ways to programmatically interact with a given software component or resource.&lt;/p&gt;

&lt;p&gt;API not only helps users interact with applications but also allows two or more applications to interact with each other. Now that you are more familiar with the general concept, a blockchain API is nothing more than an API linked to a blockchain infrastructure or application.&lt;/p&gt;

&lt;p&gt;For a better and first-hand experience, I would like to share about my recent project- Newsdata.io which is a &lt;a href="https://newsdata.io/"&gt;news API&lt;/a&gt; platform. With the help of news API, users can fetch worldwide news data from the Newsdata.io news database.&lt;/p&gt;

&lt;p&gt;To better understand what an API is, imagine you are in a restaurant and have a menu in front of you. The kitchen, in this case, would be part of the application or system that will prepare your order, how can you communicate with him? Fortunately, there is the server, which acts as an API. It is the messenger who registers your request, forwards it to the kitchen, and then delivers the food or the answer to you.&lt;/p&gt;

&lt;p&gt;Likewise, a blockchain exchange API can help you access cryptocurrency price and performance data from the platform.&lt;br&gt;
Here‚Äôs another real API example: Imagine there are no travel restrictions related to COVID19 and you want to go on vacation. When you search for flights online, you will find many different options regarding destinations, departure and return dates and times, prices, and more.&lt;/p&gt;

&lt;p&gt;If you use an online travel service like Expedia, you will be able to analyze all of the options from a variety of airline databases. This is done through the API.&lt;/p&gt;

&lt;p&gt;An example of a similar blockchain API would be CoinMarketCap. It is one of the most popular and trusted cryptocurrency data providers. The website gets all of its data from APIs of different exchanges like Binance, Coinbase, Kraken, Bistamp, etc. The API for each exchange sends information back and forth.&lt;/p&gt;

&lt;p&gt;Developing blockchain software is quite difficult and involves several sophisticated elements. One of the most essential components is the blockchain API interface.&lt;/p&gt;

&lt;p&gt;You can think of them as services that allow blockchain users and developers to interact with the app in different ways. &lt;/p&gt;

&lt;p&gt;Here are some examples of blockchain API services:&lt;br&gt;
‚óè An easy-to-use Bitcoin-related API that allows any website, for example, an online store, to receive payments in Bitcoin;&lt;br&gt;
‚óè API for payment transactions from digital wallets;&lt;br&gt;
‚óè API for querying blockchain data relating to blocks, transactions, etc.&lt;/p&gt;

&lt;p&gt;Note that decentralized applications (dApps) are nothing more than applications that interact with native blockchains, such as Ethereum or Algorand, via the API. This is why the latter is so important for the blockchain space.&lt;/p&gt;

&lt;p&gt;APIs may be created by others and sold or provided free of charge. Since APIs are essential for dApps and other blockchain use cases, having a decentralized API marketplace is very important. In a way, using blockchain for API management would be a great approach.&lt;/p&gt;

&lt;p&gt;Blockchain and Artificial Intelligence Can Leverage Data Through APIs&lt;/p&gt;

&lt;p&gt;APIs are about data. Many APIs revolve around blockchains or software data that can be categorized, distributed, compared, and analyzed in different ways.&lt;/p&gt;

&lt;p&gt;When it comes to huge amounts of data, the best way to analyze it is with artificial intelligence (AI) systems. A combination that includes blockchain and AI would certainly do the trick. It can enable a decentralized API marketplace for data sharing and processing.&lt;/p&gt;

&lt;p&gt;Although not focused on the blockchain industry, the platform can be used by third-party AI creators who develop systems and data models based on blockchain APIs.&lt;/p&gt;

&lt;p&gt;But above all, artificial intelligence encourages businesses and organizations to harness data and derive maximum benefit from it. Most companies are concerned about sharing data for privacy or regulatory reasons. However, wasting such valuable data is not a reasonable approach.&lt;/p&gt;

&lt;p&gt;AI engineers can develop models based on data shared by consumers of different products and services. Customers can find relevant models in the market. All models are accessible through simple APIs.&lt;/p&gt;

&lt;p&gt;Platforms rely on blockchain and smart contracts to automate various data processes. AI-based platforms use blockchain for API trading, which helps clients to buy and use market-relevant data APIs.&lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>ai</category>
      <category>algorithms</category>
    </item>
    <item>
      <title>How to render a list with React</title>
      <author>Ustariz Enzo</author>
      <pubDate>Mon, 06 Dec 2021 07:49:43 +0000</pubDate>
      <link>https://dev.to/ziratsu/how-to-render-a-list-with-react-281e</link>
      <guid>https://dev.to/ziratsu/how-to-render-a-list-with-react-281e</guid>
      <description>&lt;p&gt;Hey &lt;strong&gt;fellow creators&lt;/strong&gt;,&lt;/p&gt;

&lt;p&gt;You don't know how to &lt;em&gt;render a list with React&lt;/em&gt;? Jump in to learn how to do it!&lt;/p&gt;

&lt;p&gt;If you prefer to watch the video &lt;strong&gt;version&lt;/strong&gt;, it's right here :&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/-4QXMFnFr6g"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-create-a-list"&gt;
  &lt;/a&gt;
  1. Create a list!
&lt;/h2&gt;

&lt;p&gt;Create a simple React app and add an h1 to your app:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;A React List&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To create a list, you need to use the state. Let's import it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;React&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, you need to create some dummy data to feed our state.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setData&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;txt&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Txt 1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;txt&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Txt 2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;txt&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Txt 3&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Creating an ID like that isn't the best way to do it, but we'll see a tool later on that you can use in order to do it better. For now, let's keep it like that!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-render-the-list-with-the-map-method"&gt;
  &lt;/a&gt;
  2. Render the list with the &lt;em&gt;map()&lt;/em&gt; method!
&lt;/h2&gt;

&lt;p&gt;Let's render the list with the &lt;em&gt;map()&lt;/em&gt; method. For each item, you'll render an &lt;em&gt;li&lt;/em&gt; that contains the text from the data:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;A React List&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                  &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;txt&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
                &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;})&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see, it's working, however in the console there'll be an error saying that each child in a list should have a unique "key" prop. &lt;br&gt;
React needs that key to understand what has been created, especially if something is deleted or modified.&lt;/p&gt;

&lt;p&gt;Therefore you can simply add the key prop to the &lt;em&gt;li&lt;/em&gt; tag with the &lt;em&gt;id&lt;/em&gt; from the data:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt; &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you refresh the page, you'll no longer see the error in the console!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-theres-a-better-way-to-have-a-unique-id-for-each-of-the-items-in-your-list"&gt;
  &lt;/a&gt;
  3. There's a better way to have a unique id for each of the items in your list!
&lt;/h2&gt;

&lt;p&gt;As said before, the &lt;em&gt;id&lt;/em&gt; from the data isn't very secure since they're not unique if it's used in a huge app. In order to fix that, you'll add an &lt;em&gt;uuid&lt;/em&gt; package. In your terminal, install it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;npm install uuid
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, import it in your app:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;v4&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;uuidv4&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;uuid&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally, you can simply use that method in your data:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setData&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;txt&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Txt 1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;uuidv4&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;txt&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Txt 2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;uuidv4&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;txt&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Txt 3&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;uuidv4&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can log it to see the unique and strong ids this method creates:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You now know how to render a list with React! &lt;strong&gt;Well done!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Come and take a look at my &lt;strong&gt;Youtube channel&lt;/strong&gt;: &lt;a href="https://www.youtube.com/c/Learntocreate/videos"&gt;https://www.youtube.com/c/Learntocreate/videos&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;See you soon!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Enzo. &lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>I'm Dreaming of a Wild PHP ‚ùÑÔ∏è</title>
      <author>Anders Bj√∂rkland</author>
      <pubDate>Mon, 06 Dec 2021 07:47:12 +0000</pubDate>
      <link>https://dev.to/andersbjorkland/im-dreaming-of-a-wild-php-4b3i</link>
      <guid>https://dev.to/andersbjorkland/im-dreaming-of-a-wild-php-4b3i</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Just the Gist&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
PHP is used for the Web, mostly. Anything from personal websites to large-scale applications are written in PHP. It's also been used for Machine Learning, and in development and deployment tools.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#how-php-is-used-in-the-wild"&gt;
  &lt;/a&gt;
  How PHP is used in the Wild
&lt;/h2&gt;

&lt;p&gt;PHP is the language of the web. That is where it was first to be used, and its primarily where it is used today. From personal websites to enterprise applications, PHP is most places. There are also uses for PHP in other areas, such as the command line, and in the cloud. Would you believe there's a machine learning library for PHP? It sounds unbelievable, but there is. Today we take a look at some of the real world applications of PHP.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#personal-home-page"&gt;
  &lt;/a&gt;
  Personal Home Page
&lt;/h3&gt;

&lt;p&gt;Just PHP by itself can get you very far. It's a simple language, and it's easy to learn. A website owner can get a website up with a simple contact form. All that would be needed is a hosting service where the owner can put their PHP-file, and hook into an email service. Next, the owner may want to add some kind of authentication to their website, either they continue to use "vanilla" PHP or they can get a Content Management System (CMS).&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;A list of a few PHP CMS:&lt;/strong&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://wordpress.org/"&gt;WordPress&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://drupal.org/"&gt;Drupal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://boltcms.io/"&gt;Bolt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.joomla.org/"&gt;Joomla&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://moodle.org/"&gt;Moodle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://getgrav.org/"&gt;Grav&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://getgrav.org/"&gt;SilverStripe&lt;/a&gt;
‚òù And these are all open source!&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#news-sites-and-blogs"&gt;
  &lt;/a&gt;
  News sites and Blogs
&lt;/h3&gt;

&lt;p&gt;On 2nd of December we had a look at why PHP had become so popular. We saw that one of the reasons was WordPress. &lt;a href="https://wordpress.com/notable-users/"&gt;Notable users&lt;/a&gt; are New York Times, CNN and Forbes. Some use it for their profiles' blogs, others for their news sites.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#as-microservices"&gt;
  &lt;/a&gt;
  As micro-services
&lt;/h3&gt;

&lt;p&gt;There are endless possibilities for enterprises to build and combine whatever services they may need in a micro-service architecture. Laravel and Symfony can provide the structure for one of the services. Both are examples of PHP frameworks that can be used to build entire applications, or monoliths, but may as easily be used for a single purpose. Symfony started out with this component mindset from scratch, and Laravel has this potential as well. As long as they can provide an API, be it RESTful or GraphQL, it doesn't matter if the calling code is built in Java och C#. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#machine-learning"&gt;
  &lt;/a&gt;
  Machine Learning
&lt;/h3&gt;

&lt;p&gt;One prominent Machine Learning project is &lt;a href="https://rubixml.com/"&gt;RubixML&lt;/a&gt;. It's got tools for supervised and unsupervised learning, and it's used in a variety of domains. It's open source and free to use. Some use-cases for RubixML are: Image classification, text sentiment analysis, and image segmentation. If you are planning on doing Google's crash course in Machine Learning, perhaps an &lt;a href="https://github.com/RubixML/Iris"&gt;Iris Flower Classifier&lt;/a&gt; would be a good example to take a look at.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#and-so-much-more"&gt;
  &lt;/a&gt;
  And so much more
&lt;/h3&gt;

&lt;p&gt;We have not looked at the specific development tools that exists in PHP, such as unit and integration tests, static analysis tools, deployment tools, and so on. Let's just say, PHP has a great fauna of tools, and many projects are making use of them. We have seen personal sites and companies making use of PHP. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-about-you"&gt;
  &lt;/a&gt;
  What about you?
&lt;/h2&gt;

&lt;p&gt;What uses do you have for PHP? Did I miss any big use cases? Is PHP better suited for monolith systems, or is it better for micro-services? Comment below and let us know what you think ‚úç&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#further-reading"&gt;
  &lt;/a&gt;
  Further Reading
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Crash Course in Machine Learning: &lt;a href="https://developers.google.com/machine-learning/crash-course"&gt;https://developers.google.com/machine-learning/crash-course&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;A list of frameworks for PHP: &lt;a href="https://en.wikipedia.org/wiki/Category:PHP_frameworks"&gt;https://en.wikipedia.org/wiki/Category:PHP_frameworks&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;A list of PHP Content Management Systems: &lt;a href="https://en.wikipedia.org/wiki/List_of_content_management_systems#PHP"&gt;https://en.wikipedia.org/wiki/List_of_content_management_systems#PHP&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Monolith vs microservices: &lt;a href="https://devops.com/microservices-vs-monoliths-which-is-right-for-your-enterprise/"&gt;https://devops.com/microservices-vs-monoliths-which-is-right-for-your-enterprise/&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>php</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Developing A Game Engine with Perl: Part 8 - Vim</title>
      <author>Shawn Holland</author>
      <pubDate>Mon, 06 Dec 2021 07:41:20 +0000</pubDate>
      <link>https://dev.to/ansigameengine/developing-a-game-engine-with-perl-part-8-vim-2gj5</link>
      <guid>https://dev.to/ansigameengine/developing-a-game-engine-with-perl-part-8-vim-2gj5</guid>
      <description>&lt;p&gt;&lt;a href="https://dev.to/ansigameengine/developing-a-game-engine-with-perl-part-2-mouse-input-43nj"&gt;As Always...&lt;/a&gt; &lt;strong&gt;I DO NOT KNOW WHAT I AM DOING.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you want to start reading from the beginning. Check out the &lt;a href="https://dev.to/ansigameengine/developing-a-game-engine-with-perl-3b8"&gt;first article in this series&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's step back from &lt;a href="https://dev.to/ansigameengine/developing-a-game-engine-with-perl-part-6-a-colourful-telnet-server-4i7g"&gt;typing code&lt;/a&gt; for a moment and talk about how that code is typed. There are &lt;a href="https://en.wikipedia.org/wiki/Source-code_editor#Notable_examples"&gt;many options&lt;/a&gt; for a developer to code with, and we all have a preference. It's not so much a matter of right and wrong, as it is of comfort and enjoyment. For me, I code in &lt;a href="https://www.vim.org/download.php"&gt;Vim&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DXxsZ3CF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r64ntezh2wlam11ohdhc.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DXxsZ3CF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r64ntezh2wlam11ohdhc.jpeg" alt="" width="225" height="225"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#and-coding-in-vim-is-fun"&gt;
  &lt;/a&gt;
  ...and Coding in Vim is fun
&lt;/h2&gt;

&lt;p&gt;I was introduced to Vim back in college. Our school used &lt;a href="https://en.wikipedia.org/wiki/IBM_AIX"&gt;AIX&lt;/a&gt; for their server OS and we were taught to use Vim. This was also my first introduction to a Unix environment. Coming from a home Dos/Windows environment and entering the Unix world came with challenges. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://mamchenkov.net/wordpress/2004/05/10/vim-for-perl-developers/"&gt;Using Vim&lt;/a&gt; twisted my brain and took a bit to get use to. But today, after using it for many years, it often feels &lt;a href="https://www.youtube.com/watch?v=0KRxhNrtVIY"&gt;very rhythmic&lt;/a&gt; and &lt;a href="https://www.youtube.com/watch?v=iurhjlBum0o"&gt;fun&lt;/a&gt; to code. Also, not gonna lie, it kinda makes me feel that sense of "coolness" I got when watching &lt;a href="https://www.youtube.com/watch?v=Rn2cf_wJ4f4"&gt;Hackers&lt;/a&gt; for the first time. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LS6FsB3F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7wan5j8kutdpoihzkhsq.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LS6FsB3F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7wan5j8kutdpoihzkhsq.gif" alt="Image description" width="480" height="360"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=p96KIwW5RIc"&gt;Hahaha...&lt;/a&gt; That movie does &lt;strong&gt;NOT&lt;/strong&gt; hold up well! Teenager me was so impressionable.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$me-&amp;gt;hides_face_in_shame();
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can verify my shame level using this code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;use strict;
use warnings;
use Shameful::movies;

my $movie  = shift;
my $me     = new Shameful::movies();
my $shame  = $me-&amp;gt;watched($movie);
my $return = "Great Movie!";

if ($shame) {
    $return = $me-&amp;gt;hides_face_in_shame($movie);
}

print $return;
exit;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Running that code prints out the following.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;localhost:~/Fake_But_Should_Be_Real_Scripts/ # 
perl i_loved_watching.pl Hackers

Hack the planet!... More like Hide your face bro!
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#ansi-in-vim"&gt;
  &lt;/a&gt;
  ANSI in Vim
&lt;/h2&gt;

&lt;p&gt;Working with ANSI codes directly in Vim I see a lot of &lt;code&gt;^[&lt;/code&gt;. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kU2bjP2K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vx03498arazf6pauu39z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kU2bjP2K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vx03498arazf6pauu39z.png" alt="Image description" width="474" height="265"&gt;&lt;/a&gt;&lt;br&gt;
Now this &lt;code&gt;^[&lt;/code&gt; isn't the same as &lt;code&gt;shift+6 and [&lt;/code&gt;. No, this represents the escape character and is highlighted blue in my Vim. If it was &lt;code&gt;shift+6 and [&lt;/code&gt; it would be coloured the same as regular text. Something very useful to know, you can type the escape character in Vim by pressing &lt;code&gt;ctrl+v&lt;/code&gt; and then the &lt;code&gt;escape&lt;/code&gt; key. &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#i-split-vim-up-to-open-multiple-files"&gt;
  &lt;/a&gt;
  I split Vim up to open multiple files
&lt;/h2&gt;

&lt;p&gt;I use the &lt;code&gt;:split&lt;/code&gt; and &lt;code&gt;:vsplit&lt;/code&gt; command in Vim often to load in other files. Using &lt;code&gt;split&lt;/code&gt; will stack files above/below each other (split horizontally) and &lt;code&gt;vsplit&lt;/code&gt; does side by side (vertically). Sometimes I need to combine &lt;code&gt;split&lt;/code&gt; and &lt;code&gt;vsplit&lt;/code&gt; to have 3 files at once. Switching between each file in (v)split can be done with &lt;code&gt;ctrl+w+w&lt;/code&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ufTfubZN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/89gr4cikr966i90xijah.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ufTfubZN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/89gr4cikr966i90xijah.png" alt="Image description" width="880" height="884"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#so-colourful"&gt;
  &lt;/a&gt;
  So Colourful
&lt;/h2&gt;

&lt;p&gt;Vim supports colour schemes. It's something I don't change often, so I always forget and have to look it up. Since I just did it recently after &lt;a href="https://dev.to/ansigameengine/developing-a-game-engine-with-perl-part-3-hardware-failure-server-upgrade-on1"&gt;upgrading the dev/test server&lt;/a&gt;, I'll share here with you all. You can change it with the :colorscheme command. The one I'm using is :colorscheme peachpuff. I also have syntax highlighting turned on with the :syntax on. I made it permanent by adding the commands to ~/.vimrc I code in &lt;a href="https://dev.to/ansigameengine/developing-a-game-engine-with-perl-part-4-uefi-vs-opensuse-installer-5e1c"&gt;OpenSuSE Linux&lt;/a&gt;, Vim config files may vary with your OS. &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#dont-try-this-at-work"&gt;
  &lt;/a&gt;
  Don't try this at work
&lt;/h2&gt;

&lt;p&gt;Running a bulk search and replace can cause unexpected results if you're not careful. I know I'm thankful for &lt;a href="https://en.wikipedia.org/wiki/Undo#History"&gt;whoever invented undo&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WU8WiBEF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y96str6utiqwochk8183.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WU8WiBEF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y96str6utiqwochk8183.png" alt="Image description" width="488" height="408"&gt;&lt;/a&gt;&lt;br&gt;
There are &lt;a href="https://linux.die.net/man/1/sed"&gt;many ways&lt;/a&gt; to &lt;a href="https://linux.die.net/man/1/awk"&gt;search and replace&lt;/a&gt; the contents of a file in Linux and &lt;a href="https://perldoc.perl.org/perlrequick"&gt;Perl&lt;/a&gt;. However, when I'm in Vim, I often find it quickest to use the :%s command. Typically when I need to apply a search and replace to a whole file I use a command like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;:%s/\^[//g
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The format is &lt;code&gt;:%s/search_pattern/replace_with/g&lt;/code&gt; The search pattern I used in the above example is to find the escape character &lt;code&gt;^[&lt;/code&gt; I mentioned earlier and replace every occurrence with nothing &lt;code&gt;//g&lt;/code&gt;. I have to precede &lt;code&gt;^[&lt;/code&gt; with &lt;code&gt;\&lt;/code&gt; so the &lt;a href="http://vimdoc.sourceforge.net/htmldoc/pattern.html"&gt;regular expression search pattern&lt;/a&gt; knows it's a literal escape character. I type &lt;code&gt;^[&lt;/code&gt; using ctrl+v and pressing escape.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-about-you"&gt;
  &lt;/a&gt;
  How about you?
&lt;/h2&gt;

&lt;p&gt;Do you code in Vim? What sort of tricks and tips have you learned? What colorscheme do you prefer?&lt;/p&gt;

&lt;p&gt;If you have any suggestions or comments please share constructively. Also please visit our social media pages for lots of fun videos and pictures showing the game engine in action. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.instagram.com/ANSIGameEngine/"&gt;ANSI Game Engine on Instagram&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.facebook.com/ANSIGameEngine"&gt;ANSI Game Engine on Facebook&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/ansigameengine/developing-a-game-engine-with-perl-part-7-fork-3acm"&gt;Prev &amp;lt;&amp;lt; Part 7 - Fork&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;&lt;em&gt;Next &amp;gt;&amp;gt; Coming Soon&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>perl</category>
      <category>gamedev</category>
      <category>devjournal</category>
      <category>vim</category>
    </item>
    <item>
      <title>React.js: Basic React Hooks.</title>
      <author>Anthony .H</author>
      <pubDate>Mon, 06 Dec 2021 07:40:30 +0000</pubDate>
      <link>https://dev.to/tonydhong/reactjs-basic-react-hooks-508p</link>
      <guid>https://dev.to/tonydhong/reactjs-basic-react-hooks-508p</guid>
      <description>&lt;h3&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h3&gt;

&lt;p&gt;There is no doubt that React.js is the most popular JavaScript library for building user interfaces. React.js was developed at Facebook in 2011 and became popular since it provides tons of functionalities to help developers not repeat the code. React.js is based on reusable component classes whose primary purpose is to be fast, scalable, and simple to use. With the new update React 16.8 introduction of hooks. It is a game-changer because it is easier to write and debug.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#basic-hooks"&gt;
  &lt;/a&gt;
  Basic Hooks
&lt;/h3&gt;

&lt;p&gt;Every React component has three primary phases of lifecycle: mounting, updating and unmounting. Hooks is a state variable that can update those states in its component. We will discuss the basic Hooks and their use cases.&lt;/p&gt;

&lt;p&gt;Rule of thumbs to use Hooks.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Only call Hooks at the top level.&lt;/li&gt;
&lt;li&gt;Only use Hooks from React functions(Components)&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#1-usestate"&gt;
  &lt;/a&gt;
  1. useState
&lt;/h4&gt;

&lt;p&gt;useState is a Hooks that can update each lifecycle phase in Component. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Declare a State variable &lt;/li&gt;
&lt;li&gt;Reading State&lt;/li&gt;
&lt;li&gt;Updating State&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In this example, I will create React.js that can increment by two each time when a user clicks the button and reset to 0 using useState Hook&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,{&lt;/span&gt;&lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;counter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;setCounter&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;counter&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{(()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setCounter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;counter&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Counter&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{(()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setCounter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;))}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Reset&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&amp;gt;     &lt;/span&gt;&lt;span class="err"&gt; 
&lt;/span&gt;  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The app can update the counter and reset to 0 without loading the page. That is the beauty of React. Everything updates in the backend of React components asynchronously.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#2-useeffect"&gt;
  &lt;/a&gt;
  2. useEffect
&lt;/h4&gt;

&lt;p&gt;useEffect is a hook that run every time the page render. It can take a function as an argument and the condition to firing an effect.&lt;/p&gt;

&lt;p&gt;In this example, I will useEffect and fire only one time when the page render&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,{&lt;/span&gt;&lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;counter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;setCounter&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Render&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;},[])&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{(()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setCounter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;counter&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Increment&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{(()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setCounter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;counter&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Increment&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{(()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setCounter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;))}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Reset&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&amp;gt;  &lt;/span&gt;&lt;span class="err"&gt; 
&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;counter&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h2&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/&amp;gt;  &lt;/span&gt;&lt;span class="err"&gt; 
&lt;/span&gt;  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When a user clicks any button, the useEffect never fires because of the firing condition set to empty array.&lt;/p&gt;

&lt;p&gt;In the following example, I will set the firing condition to useState variable. Every time the buttons click, it will fire the useEffect.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,{&lt;/span&gt;&lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;counter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;setCounter&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Render&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;},[&lt;/span&gt;&lt;span class="nx"&gt;counter&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{(()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setCounter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;counter&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Increment&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{(()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setCounter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;counter&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Increment&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{(()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setCounter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;))}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Reset&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&amp;gt;  &lt;/span&gt;&lt;span class="err"&gt; 
&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;counter&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h2&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/&amp;gt;  &lt;/span&gt;&lt;span class="err"&gt; 
&lt;/span&gt;  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above example, useEffect fires whenever a user clicks on the Increment 1 button and the Increment 2 button because of counter value changes. However, if a user clicks on the reset button, it will stop firing useEffect because the counter is always set to zero.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;React Hooks provide many benefits include reusability, readability, and testability. However, useEffect can cause unnecessary rendering or even infinity rendering if placed in the loop callback functions.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>programming</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
