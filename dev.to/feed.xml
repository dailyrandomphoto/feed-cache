<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Why we migrated to TypeScript after all</title>
      <author>Sebastian Rindom</author>
      <pubDate>Fri, 19 Nov 2021 11:13:25 +0000</pubDate>
      <link>https://dev.to/medusajs/why-we-migrated-to-typescript-after-all-3efa</link>
      <guid>https://dev.to/medusajs/why-we-migrated-to-typescript-after-all-3efa</guid>
      <description>&lt;p&gt;Over the past two weeks, we have been working hard on migrating parts of &lt;a href="https://medusa-commerce.com"&gt;Medusa&lt;/a&gt;'s codebase to TypeScript. We are doing this for a couple of reasons all of which have to do with improving the developer experience. Now that we are slowly merging the first parts of this migration we would love to share some insights into why we didn't just go with TypeScript in the first place and why we have decided that the time was right now.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#a-bit-of-background"&gt;
  &lt;/a&gt;
  A bit of background
&lt;/h3&gt;

&lt;p&gt;Before working full-time on Medusa we did agency work for a handful of different e-commerce clients; one of them wanted to migrate away from their solution back then and when we couldn't find a new suitable platform for them we agreed to build a custom solution from scratch. We didn't intend for this to be anything other than a solution that would optimize and automate all the workflows for the client so we went straight into development mode. As the project grew and our client grew, new requirements emerged and we had to go back to the drawing board. This was the first time that we had to weigh our options in the context of the project being maintainable and easy to use in the long term. We evaluated approaches based on a couple of insights:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Growing businesses change (a lot)&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;When you are on a growth path you can get by with basic tools in the beginning, but when processes get more complex you will typically need to adapt the tools in your stack. We wanted to build our architecture to accommodate this insight; making it easy to compose your e-commerce stack with the best-in-breed tools. &lt;em&gt;Note&lt;/em&gt;&lt;em&gt;:&lt;/em&gt;* best-in-breed for a small 2 person team is not the same as best-in-breed for a 25 person team, so your stack has to be dynamic.*&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Growing businesses need control&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;If you are growing rapidly you need to be in control of what happens when; you can't make a feature request and then sit around for 2 years waiting for it to be made available. You must be able to get the process moving straight away.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Customer Experience is king&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;If you are trying to stand out in the crowd of standardized websites you need to have a razor-sharp focus on the customer experience. Customers should feel that they are entering into an on-brand universe when visiting an e-commerce site and to do so you may have to change up the standard browsing, purchasing, and checkout process to truly accommodate the product or brand.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Developers are the key to making all of the above succeed&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;Developers get a bad rap for being expensive, slow, and complicated to work with and this makes sense to a certain extent; however, there is an incredible amount of projects - Medusa being one of them - being built that focus on making developers more efficient, making the requirements for developer capabilities lower and ultimately making it easier for merchants to start leveraging headless technologies earlier than they otherwise would have. As the ecosystem of great developer tools grow it will become increasingly appealing to new merchants to make the switch as early as possible.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The above requirements were foundational for some of the high-level decisions we took in the early days:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We created a simple and modular architecture that gives you all the basics out of the box and provides the interfaces necessary to easily integrate with other tools to give you the optimal stack.&lt;/li&gt;
&lt;li&gt;We open-sourced everything to give users and merchants full control of what gets built&lt;/li&gt;
&lt;li&gt;We provide a great APIs and tooling to create custom e-commerce experiences that move the needle&lt;/li&gt;
&lt;li&gt;We think carefully about how to design things in the most developer-friendly way and &lt;strong&gt;choose tools in our stack that developers like&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#why-we-didnt-go-with-typescript-in-the-first-place"&gt;
  &lt;/a&gt;
  Why we didn't go with TypeScript in the first place
&lt;/h3&gt;

&lt;p&gt;You may be thinking now: okay but why on earth didn't you start with TypeScript if you wanted to use tools that developers like. The truth is that when we started developing we were optimizing for speed; with limited TypeScript experience back then we felt that there would potentially be many unknown issues to overcome if we had decided to go down that route. Furthermore, TypeScript was not as widely established as it is today and it would have been really sad if we had chosen a language that would wane in popularity after a couple of years &lt;a href="https://github.com/jashkenas/coffeescript/wiki/List-of-languages-that-compile-to-JS"&gt;(&lt;strong&gt;cough&lt;/strong&gt; CoffeeScript and friends)&lt;/a&gt;. That isn't to say that we didn't like TypeScript, on the contrary, we have always thought TypeScript was incredibly powerful, however, &lt;a href="https://en.wikipedia.org/wiki/Lindy_effect"&gt;by Lindy&lt;/a&gt;, we decided that it was worth waiting a bit.&lt;/p&gt;

&lt;p&gt;Not going with TypeScript in the first place allowed us to do other amazing things like creating an incredibly powerful core architecture and a handful of great plugins that provided integrations for systems like &lt;a href="https://github.com/medusajs/medusa/tree/master/packages"&gt;Stripe, Segment, Sendgrid, and others&lt;/a&gt;. We were able to do this at an incredible pace and iterate quickly, changing APIs on a day to day basis (one of the privileges of the early days with few customers) without too many complications which eventually got us to this point in time, where we have figured out the ins-and-outs of how data should be flowing and where we have a good understanding of the &lt;strong&gt;types and interfaces&lt;/strong&gt; needed for modularity and composability.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-is-the-time-right-now"&gt;
  &lt;/a&gt;
  Why is the time right now
&lt;/h3&gt;

&lt;p&gt;When you are the lone developer and user of a project you know the APIs intimately because you have written them. Sometimes your memory might be a bit unclear, but generally, it is not a distractor for your workflow, so you don't think that much about IntelliSense not kicking in. That changes a lot, however, when you start working on things that are not your creation and not only from the user perspective also from the contributor perspective. Say you are working on code that calls some function that someone else from your team wrote. While you might have been in talks with your teammate about how the APIs are meant to work and what kind of dataflows should be going on, you might not know the exact implementation details, and that is when it starts being super useful to have all of your tooling in place. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sAvwtDe1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zdmlk2mv1895ibx8cq5e.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sAvwtDe1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zdmlk2mv1895ibx8cq5e.gif" alt="Medusa TypeScript IntelliSense" width="600" height="320"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;We are so happy to see the community around Medusa growing and we are therefore very much aware that we need to improve all the tools in the ecosystem as much as possible to allow for the best developer experience. Furthermore, we feel confident that TypeScript will be around for a long time, and for this reason, now is the time! &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-we-are-going-about-it"&gt;
  &lt;/a&gt;
  How we are going about it
&lt;/h3&gt;

&lt;p&gt;Migrating our entire codebase will take some time so we are starting with the parts that make the most sense and moving along. We are already using TypeORM for the data layer so all of our database entities are typed. We have gone ahead and added TypeScript to all of the core API's controllers typing all payloads and responses. This adds the amazing benefit of being able to share the type definitions between the core project and our JS client essentially ensuring that when you are making calls through our client library &lt;strong&gt;you are seeing the exact class properties that are being used to validate the request payload&lt;/strong&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#whats-next"&gt;
  &lt;/a&gt;
  &lt;strong&gt;What's next&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;We are going to add TypeScript throughout the core package as we go along and our goal is to migrate all of our code eventually. If you are interested in helping out or want to try Medusa go check out our &lt;a href="https://github.com/medusajs/medusa"&gt;GitHub repo&lt;/a&gt; and &lt;a href="https://discord.gg/xpCwq3Kfn8"&gt;join our Discord&lt;/a&gt; where you can get direct access to the engineering team!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>typescript</category>
      <category>webdev</category>
      <category>opensource</category>
    </item>
    <item>
      <title>What to do if you're a bottleneck</title>
      <author>Evgenii Ponomarev</author>
      <pubDate>Fri, 19 Nov 2021 11:12:58 +0000</pubDate>
      <link>https://dev.to/_elergy_/what-to-do-if-youre-a-bottleneck-52n2</link>
      <guid>https://dev.to/_elergy_/what-to-do-if-youre-a-bottleneck-52n2</guid>
      <description>&lt;p&gt;Jackson is a go-to person when it comes to MongoDB.&lt;/p&gt;

&lt;p&gt;You have a problem — you go to Jackson. He’s an expert. Of course, you can go to anyone else – it’s a free world. You can go to Molly if you want. But you know what Molly would recommend, don’t you? She’ll tell you to ask Jackson, that overworked guy with a giant todo list.&lt;/p&gt;

&lt;p&gt;Let’s talk about what to do if you ended up being a Jackson and need a way out.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-kind-of-a-bottleneck-are-you"&gt;
  &lt;/a&gt;
  What kind of a bottleneck are you?
&lt;/h2&gt;

&lt;p&gt;There are two different kinds of overworked Jacksons: knowledge bottlenecks and expertise bottlenecks.&lt;/p&gt;

&lt;p&gt;Knowledge bottlenecks are the ones who answer questions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;Who owns Payment API?&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Which database has client emails?&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;&lt;em&gt;When is our next release?&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you're one of those, write documentation. Sorry for such trivial advice, but boring problems need boring solutions.&lt;/p&gt;

&lt;p&gt;It's worth writing docs even if people don't read them. Sounds stupid, but it will serve as your second brain from where you can quickly copy answers.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Watch out for an urge to share your screen and demonstrate something. It's always better to record a video (or a gif) and share it instead – this way, you will be able to reuse it later.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;That was all about knowledge bottlenecks.&lt;/p&gt;

&lt;p&gt;Expertise bottlenecks are trickier. They don't just answer questions — they solve problems:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;This program crashes for Netherlands users.&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;My DB query is slow.&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Our photo gallery page leaks memory.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This situation is much more complicated because you need more experts to share the load. But unfortunately, there are no books or tutorials you could give to somebody and turn them into an expert – they need to build the expertise themselves. And it takes time.&lt;/p&gt;

&lt;p&gt;But how to accelerate the process?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#limited-opportunities"&gt;
  &lt;/a&gt;
  Limited opportunities
&lt;/h2&gt;

&lt;p&gt;If someone wants to learn how to play the guitar, they need to practice playing the guitar. Likewise, if one wants to learn how to fix memory leaks, they need to fix memory leaks.&lt;/p&gt;

&lt;p&gt;The tricky part is there are much more opportunities to play the guitar than memory leaks to fix. They don't happen every day.&lt;/p&gt;

&lt;p&gt;Zoom out now and look where you ended up: people call you whenever a challenging problem arises because nobody else has a similar experience. And nobody else has a similar experience because you solve all the challenging problems. A chicken and egg situation.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#growing-new-experts"&gt;
  &lt;/a&gt;
  Growing new experts
&lt;/h2&gt;

&lt;p&gt;The naive advice would be to stop doing what you're doing so that others can practice and build necessary expertise in time. But, unfortunately, it's overly utopian – a few companies have the luxury of accumulating unsolved problems while their best specialist sits idle and waits for new experts to emerge.&lt;/p&gt;

&lt;p&gt;But I'm not saying it's impossible – there is a way to grow new experts without slowing down the process. Here it is:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Pick &lt;strong&gt;one&lt;/strong&gt; successor to mentor. &lt;em&gt;Learning opportunities are scarce resource, so resist the temptation to pick more than one.&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;Redirect all requests to this person.
&lt;em&gt;Need help? Ping Nelson, he knows this stuff.&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;Be available for this person.
&lt;em&gt;Answer all their questions as soon as possible, pair program or pair debug when necessary.&lt;/em&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eh36jyUb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://evgenii.info/content/images/2021/11/overview.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eh36jyUb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://evgenii.info/content/images/2021/11/overview.png" alt="What to do if you're a bottleneck" width="711" height="436"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It works because:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The company will not slow down in critical situations – if the time is tight, the mentoree can ask you for help.&lt;/li&gt;
&lt;li&gt;You can tune your involvement depending on the circumstances to manage risks and guide the learning.&lt;/li&gt;
&lt;li&gt;This person starts earning credibility from day one, solving real problems with your invisible help.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In the beginning, be prepared to play broken telephone answering proxied questions:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8fVIW2xu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://evgenii.info/content/images/2021/11/image.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8fVIW2xu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://evgenii.info/content/images/2021/11/image.png" alt="What to do if you're a bottleneck" width="761" height="507"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It may look like a waste of time, but it's far from it. Yes, the future expert acts as a proxy, but they learn about the domain. Even if it's a proxy, it's a caching proxy:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h7I4t55r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://evgenii.info/content/images/2021/11/image-1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h7I4t55r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://evgenii.info/content/images/2021/11/image-1.png" alt="What to do if you're a bottleneck" width="764" height="507"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As their experience grows, they will start asking more complex questions:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CcKGs8QE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://evgenii.info/content/images/2021/11/image-2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CcKGs8QE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://evgenii.info/content/images/2021/11/image-2.png" alt="What to do if you're a bottleneck" width="764" height="507"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is the point where you can return to your expert's duties, which you now can split with another person:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vZfq2tc8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://evgenii.info/content/images/2021/11/image-3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vZfq2tc8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://evgenii.info/content/images/2021/11/image-3.png" alt="What to do if you're a bottleneck" width="671" height="462"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;This is a cross-post from &lt;a href="https://www.getrevue.co/profile/elergy"&gt;Resilient Systems&lt;/a&gt; – a newsletter about strategic software engineering.&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>leadership</category>
      <category>teamwork</category>
    </item>
    <item>
      <title>Using getStaticProps and getStaticPaths for static site generation (ssg) in nextjs</title>
      <author>Bishal Neupane</author>
      <pubDate>Fri, 19 Nov 2021 11:03:13 +0000</pubDate>
      <link>https://dev.to/bishaln/using-getstaticprops-and-getstaticpaths-for-static-site-generation-ssg-in-nextjs-3d4a</link>
      <guid>https://dev.to/bishaln/using-getstaticprops-and-getstaticpaths-for-static-site-generation-ssg-in-nextjs-3d4a</guid>
      <description>&lt;p&gt;This is the sixth blog post on the series of blog post I am posting about strapi,nextjs, and tailwind. We are recreating my portfolio/blogpost page that along the way we'll learn the fundamentals of strapi,nextjs, and tailwind. You can check it out at &lt;a href="https://myportfolioandblog.vercel.app/"&gt;myportfolio&lt;/a&gt; If you know the basics of javascript and react then you should be good to follow this blog post and coming blog post on the series. I hope you'll get something out of this series.&lt;/p&gt;

&lt;p&gt;If you've not gone through the previous blog posts then make sure to check them out&lt;/p&gt;

&lt;p&gt;In this blog post, we're going to build two pages in our blog/portfolio site &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Playlists - This will show all the playlists along with recent three blogs&lt;/li&gt;
&lt;li&gt;Playlist  - This will show all the posts on a particular playlist. We'll use dynamic SSG for this page&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#playlists-page"&gt;
  &lt;/a&gt;
  Playlists page
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---5KO5A_h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n15mjk6r4s9fdpmybs4g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---5KO5A_h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n15mjk6r4s9fdpmybs4g.png" alt="" width="880" height="430"&gt;&lt;/a&gt;&lt;br&gt;
So let's first build the playlists page for that let's write the query which will fetch the required data&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { gql } from 'graphql-request';

export const playlistsQuery = gql`
  query Playlists {
    playlists {
      title
      description
      id
      slug
      posts(sort: "updated_at:desc", limit: 3) {
        updated_at
        title
        slug
        description
        topics
      }
    }
  }
`;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create a file playlists.tsx inside the pages and add the following code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { request } from 'graphql-request';
import { useRouter } from 'next/dist/client/router';
import React from 'react';
import Link from 'next/link';

import { BlogCard } from '../components/BlogCard';
import { PlaylistsQuery } from '../gql/graphql';
import { playlistsQuery } from '../queries/playlists';

export const getStaticProps = async () =&amp;gt; {
  const data: PlaylistsQuery = await request(
    'http://localhost:1337/graphql',
    playlistsQuery
  );

  return { props: data };
};

function playlists({ playlists }: PlaylistsQuery) {
  return (
    &amp;lt;div className='p-2 container sm:mx-auto'&amp;gt;
      &amp;lt;GobackButton /&amp;gt;
      &amp;lt;main&amp;gt;
        &amp;lt;div className='space-y-2'&amp;gt;
          &amp;lt;h1 className='text-4xl'&amp;gt;Welcome to Blog playlist&amp;lt;/h1&amp;gt;
          &amp;lt;h4 className='text-md text-gray-500'&amp;gt;
            A playlist is series of blogpost where I write about particular tool
            or subject
          &amp;lt;/h4&amp;gt;
        &amp;lt;/div&amp;gt;

        &amp;lt;div className='my-10'&amp;gt;
          {playlists?.map((playlist) =&amp;gt; (
            &amp;lt;div className='my-10' key={playlist?.id}&amp;gt;
              &amp;lt;Link href={`/playlist/${playlist?.slug}`} passHref&amp;gt;
                &amp;lt;h3 className='hover:underline cursor-pointer text-3xl capitalize'&amp;gt;
                  {playlist?.title}
                &amp;lt;/h3&amp;gt;
              &amp;lt;/Link&amp;gt;
              &amp;lt;div className='md:grid md:grid-cols-2 md:gap-3 xl:grid-cols-3'&amp;gt;
                {playlist?.posts?.map((post) =&amp;gt; (
                  &amp;lt;div key={post?.slug} className='my-2 mx-2 h-full'&amp;gt;
                    &amp;lt;BlogCard
                      slug={post?.slug!}
                      title={post?.title!}
                      description={post?.description!}
                      topics={post?.topics!}
                      updated_at={post?.updated_at!}
                    /&amp;gt;
                  &amp;lt;/div&amp;gt;
                ))}
              &amp;lt;/div&amp;gt;
            &amp;lt;/div&amp;gt;
          ))}
        &amp;lt;/div&amp;gt;
      &amp;lt;/main&amp;gt;
    &amp;lt;/div&amp;gt;
  );
}

export const GobackButton = () =&amp;gt; {
  const router = useRouter();
  return (
    &amp;lt;button
      onClick={() =&amp;gt; router.back()}
      className='text-green-500 hover:bg-gray-200 rounded-md p-2'
    &amp;gt;
      &amp;amp;larr; go back
    &amp;lt;/button&amp;gt;
  );
};

export default playlists;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#playlist-page"&gt;
  &lt;/a&gt;
  Playlist page
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XWxaxQhI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/45wxgu2uxbs9vgufm016.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XWxaxQhI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/45wxgu2uxbs9vgufm016.png" alt="Image description" width="880" height="428"&gt;&lt;/a&gt;&lt;br&gt;
We'll require two different queries first one to just get the slugs for different playlist page and the second one for the actual data.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { gql } from 'graphql-request';

export const playlistPathsQuery = gql`
  query PlaylistPaths {
    playlists {
      slug
    }
  }
`;

export const playlistQuery = gql`
  query Playlist($slug: String!) {
    playlists(where: { slug: $slug }) {
      title
      description
      slug
      posts(sort: "updated_at:desc") {
        id
        updated_at
        title
        slug
        description
        topics
      }
    }
  }
`;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We'll use the first query to dynamically build the pages and the second one for the actual data that we need&lt;br&gt;
So go ahead and create a folder inside the pages directory and name it playlist and inside the folder create [slug].tsx file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;//[slug].tsx file

import request from 'graphql-request';
import { GetStaticProps } from 'next';
import { BlogCard } from '../../components/BlogCard';

import {
  PlaylistPathsQuery,
  PlaylistQuery,
  PlaylistsQuery,
} from '../../gql/graphql';
import { playlistPathsQuery, playlistQuery } from '../../queries/playlist';
import { GobackButton } from '../playlists';

export async function getStaticPaths() {
  const paths: PlaylistPathsQuery = await request(
    'http://localhost:1337/graphql',
    playlistPathsQuery
  );
  const pathFormat: any = [];
  paths.playlists?.forEach((path) =&amp;gt;
    pathFormat.push({ params: { slug: path?.slug } })
  );
  return {
    paths: pathFormat,
    fallback: false,
  };
}

export const getStaticProps: GetStaticProps = async (context) =&amp;gt; {
  const posts: PlaylistQuery = await request(
    'http://localhost:1337/graphql',
    playlistQuery,
    {
      slug: context?.params?.slug,
    }
  );
  return {
    props: posts,
  };
};

function Playlist({ playlists }: PlaylistsQuery) {
  console.log(playlists);
  const playlist = playlists![0];
  return (
    &amp;lt;div className='p-2'&amp;gt;
      &amp;lt;GobackButton /&amp;gt;
      &amp;lt;div className='space-y-2'&amp;gt;
        &amp;lt;h1 className='text-4xl capitalize'&amp;gt;{playlist?.title}&amp;lt;/h1&amp;gt;
        &amp;lt;h3 className='text-gray-500'&amp;gt;{playlist?.description}&amp;lt;/h3&amp;gt;
      &amp;lt;/div&amp;gt;
      &amp;lt;div className='space-y-2 md:grid md:grid-cols-2 md:gap-4 md:items-center xl:grid-cols-3'&amp;gt;
        {playlist?.posts?.map((post) =&amp;gt; (
          &amp;lt;BlogCard
            key={post?.slug!}
            title={post?.title!}
            description={post?.description!}
            updated_at={post?.updated_at!}
            topics={post?.topics!}
            slug={post?.slug!}
          /&amp;gt;
        ))}
      &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
  );
}

export default Playlist;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;And that is it about Using getStaticProps and getStaticPaths for static site generation (SSG) in nextjs. In another blog post, we'll create the actual blog page. If you have any problem with this code and then let me know in the discussion.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Progressive Web App Development: How to Cook PWA in 2022</title>
      <author>Sergey Rykov</author>
      <pubDate>Fri, 19 Nov 2021 11:00:15 +0000</pubDate>
      <link>https://dev.to/sergeyrykov/progressive-web-app-development-how-to-cook-pwa-in-2022-15g2</link>
      <guid>https://dev.to/sergeyrykov/progressive-web-app-development-how-to-cook-pwa-in-2022-15g2</guid>
      <description>&lt;p&gt;When talking about web development, Progressive Web Apps have been a buzzword for a while. But will your company benefit from going down the PWA road? Read how and when you should use and should NOT use this technology now and in 2022.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction-to-pwa"&gt;
  &lt;/a&gt;
  Introduction to PWA
&lt;/h2&gt;

&lt;p&gt;Progressive Web Apps (PWAs) are a fairly recent trend in web and mobile app development. Coined by Google engineer Alex Russell in 2015, the term refers to web applications that use “progressive” design approaches in order to behave and function similarly to native apps. What that specifically means may not be perfectly clear, as there is no precise definition of what does or does not make a progressive web app.&lt;/p&gt;

&lt;p&gt;However, there are some defining characteristics that are indicative of PWA design patterns. These include the use of ServiceWorkers (background scripts that run in the browser in order to provide features like push notifications) and app manifests (standardized JSON files that instruct the platform how to install and manage your app). There are also several common design themes that are often pointed to as being unique to PWA.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#benefits-and-drawbacks-of-pwa"&gt;
  &lt;/a&gt;
  Benefits and Drawbacks of PWA
&lt;/h2&gt;

&lt;p&gt;Employing progressive web app technology in an application’s development has many benefits, though there are also some drawbacks to consider. The main benefit of PWA design is that it is mostly platform-independent. This means that an app can be developed using a single codebase and deployed on several different platforms.&lt;/p&gt;

&lt;p&gt;Simplifying the development in this way reduces the time and resources necessary to get an app to market. Platform independence combined with the fact that PWAs are inherently installable makes an app’s rollout onto multiple platforms easy. Users can download and install PWAs just like they can with any native app, rather than relying on a browser to access them, making the user experience seamless and intuitive.&lt;/p&gt;

&lt;p&gt;PWAs also enjoy the benefits of modern website design in that they are responsive and lightweight. Modern web browsers allow developers to take advantage of design options that react to changing platforms and screen sizes to give users a consistent experience. The codebases of these modernized apps are smaller and their ability to run in a browser (rather than as a native app) makes them lightweight. An added benefit of PWAs as distinct web apps is that they are discoverable by search engine indexing.&lt;/p&gt;

&lt;p&gt;However, the major drawback to PWA design is that there are some limitations on platform and hardware support. Since PWAs run in a browser, they do not have direct access to all of the capabilities of a platform that a native app built using a platform’s SDK, would have access to. Some platforms also have restricted support for these apps, though support and capabilities are constantly evolving.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-use-pwa"&gt;
  &lt;/a&gt;
  Why Use PWA?
&lt;/h2&gt;

&lt;p&gt;Ultimately using PWA design in an application is for those who want to get an app in the hands of users quickly and affordably. This design is great for early-stage startups with limited funds who want to get an MVP app to market as soon as possible. But any company wishing to take advantage of an evolving trend in modern app development will also see similar benefits from PWA.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#big-brands-that-use-pwa"&gt;
  &lt;/a&gt;
  BIG BRANDS THAT USE PWA
&lt;/h3&gt;

&lt;p&gt;PWAs are not just meant for small companies and cash-strapped startups. On the contrary, many global corporations are seeing tremendous results from switching to a PWA strategy for their users’ benefit. One major brand that raised a lot of attention by doing this is Twitter, which &lt;a href="https://blog.twitter.com/engineering/en_us/topics/open-source/2017/how-we-built-twitter-lite"&gt;designed its Twitter&lt;/a&gt; Lite app with PWA in mind. Following the rollout of Twitter Lite, Twitter saw a &lt;a href="https://developers.google.com/web/showcase/2017/twitter"&gt;75% increase in tweets&lt;/a&gt;, a 65% increase in pages per session, and a 20% decrease in bounce rate.&lt;/p&gt;

&lt;p&gt;Forbes and Pinterest also designed PWAs for their businesses, with Forbes seeing a &lt;a href="https://developers.google.com/web/showcase/2017/forbes"&gt;43% increase in sessions&lt;/a&gt; and a 100% increase in engagement. Pinterest’s PWA brought in a &lt;a href="https://medium.com/dev-channel/a-pinterest-progressive-web-app-performance-case-study-3bd6ed2e6154"&gt;44% increase&lt;/a&gt; in user-driven ad revenue. These are just a few examples of companies adopting PWA design in their apps among other recognizable brands like &lt;a href="https://eng.uber.com/m-uber/"&gt;Uber&lt;/a&gt; and &lt;a href="https://developers.google.com/web/showcase/2016/aliexpress"&gt;AliExpress&lt;/a&gt; who have done the same.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pwa-compared-to-other-technologies"&gt;
  &lt;/a&gt;
  PWA Compared to Other Technologies
&lt;/h2&gt;

&lt;p&gt;PWAs are most easily compared to either native apps or web apps, existing somewhere in between the two. But there is a long list of specific technologies that lie on the spectrum between web and native which can also draw comparisons to PWA.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pwa-vs-native-apps"&gt;
  &lt;/a&gt;
  PWA VS NATIVE APPS
&lt;/h3&gt;

&lt;p&gt;Comparing PWA directly to the general definition of native apps unveils a few differences. Namely, PWAs are built with lighter and simpler codebases (requiring only web languages rather than platform-specific SDK frameworks).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pwa-vs-crossplatform-apps"&gt;
  &lt;/a&gt;
  PWA VS CROSS-PLATFORM APPS
&lt;/h3&gt;

&lt;p&gt;When compared to more hybrid technologies like React Native, PhoneGap or Flutter, there are certain details to highlight for cross-platform apps. For instance, React Native is made for building cross-platform native apps and achieves that with a single codebase, however usually it requires a broader skill set from your development team as they have to deal with various native controls and plugins which are written in different languages like Java or Objective-C (depends on the platform).&lt;/p&gt;

&lt;p&gt;PhoneGap apps are somewhat similar as well. These are just web apps that are wrapped in a native container, which has access to various platform APIs through a set of native plugins. Despite the huge list of available plugins, you might need something custom and will have to implement it on your own, again with the help of Android and iOS developers.&lt;/p&gt;

&lt;p&gt;PWAs are much simpler in this sense and are usually built just in JavaScript, utilizing modern frameworks like React, Angular and Vue.&lt;/p&gt;

&lt;p&gt;To sum it up, the PWAs most closely resemble the hybrid apps built with other cross-platform technologies. PWAs most likely will be cheaper in terms of development and future support, as you might need a smaller team without any specific or unique skills. The downside to PWAs is that they are limited by browser capabilities and may have poor support of some core features required for your app.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pwa-vs-web-apps"&gt;
  &lt;/a&gt;
  PWA VS WEB APPS
&lt;/h3&gt;

&lt;p&gt;When compared to pure web applications, PWAs show several advantages. This is because web applications are strictly limited by the capabilities of the browser. That also means web apps do not offer the kind of installability that makes a PWA so convenient for users. While they can offer similar benefits, such as the responsive and lightweight design seen in many single-page applications (SPA), the key differentiator is a PWA’s standardized approach to simulating the native experience.&lt;/p&gt;

&lt;p&gt;PWA can also be compared to application frameworks like Electron and Flutter. Electron is strictly a web app framework with disadvantages in application size and security that make it generally unsuitable for PWA development. But Flutter is more similar to PWA. Both PWA and Flutter emphasize development in a single codebase with cross-platform native functionality. However, Flutter only uses the new Dart web language whereas a PWA can be written in any language, with many older languages offering more support.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pwa-support-from-major-platforms"&gt;
  &lt;/a&gt;
  PWA Support from Major Platforms
&lt;/h2&gt;

&lt;p&gt;One of the most important things to evaluate about PWA is what kind of support major platforms provide. While PWA generally allows the development of applications that are perfectly capable of running on any platform, there are some limitations to what exactly different platforms will support.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LIte_Dzf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tw1dpmbus7g6sp4ilqbb.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LIte_Dzf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tw1dpmbus7g6sp4ilqbb.jpg" alt="PWA Support Across Browsers and Platforms in 2021" width="880" height="553"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Data from &lt;a href="https://caniuse.com"&gt;caniuse.com&lt;/a&gt;, CC-BY 4.0 license&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pwa-support-on-ios"&gt;
  &lt;/a&gt;
  PWA SUPPORT ON IOS
&lt;/h3&gt;

&lt;p&gt;For iOS devices, PWA support is somewhat limited. Even though the term “progressive web app” was only recently coined by Google, the origins of PWA can actually be traced back to the very first iPhone. Before Apple provided an SDK for iOS devices, the only apps available on iPhone were web apps. This is a decision that Steve Jobs himself was very insistent on.&lt;/p&gt;

&lt;p&gt;Of course, as developers asked for a more consistent workflow Apple eventually released their SDK along with the App Store. This evolution went along with Apple’s notoriously strict regulations for developers around user experience and the security of apps available in the App Store. These regulations unfortunately severely restricted the ability of developers to provide PWAs for iOS.&lt;/p&gt;

&lt;p&gt;As of iOS 11.3, however, PWAs are supported on the Apple platform. However, they must still be wrapped in native code and distributed via the app store. This limits some of the benefits of PWAs like a simplified codebase and easy installation.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pwa-support-on-android"&gt;
  &lt;/a&gt;
  PWA SUPPORT ON ANDROID
&lt;/h3&gt;

&lt;p&gt;Android has much more thorough PWA support. This is mainly thanks to Android’s open-source approach which gives developers the freedom and flexibility to write and distribute apps however they wish. Android also provides PWAs with access to some native platform functionality such as push notifications, enabling developers to provide a more seamless native experience within their apps.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#browser-pwa-support"&gt;
  &lt;/a&gt;
  BROWSER PWA SUPPORT
&lt;/h3&gt;

&lt;p&gt;Although most of the popular browsers support PWAs now, there is no 100% compatibility.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XaVQWItA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vcjk5oibqg6k8403rffx.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XaVQWItA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vcjk5oibqg6k8403rffx.jpg" alt="PWA Features Support Comparison for Major Browsers" width="880" height="708"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Data from &lt;a href="https://caniuse.com"&gt;caniuse.com&lt;/a&gt;, CC-BY 4.0 license&lt;/p&gt;

&lt;p&gt;The browsers that chose NOT to support PWAs are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Desktop Firefox&lt;/li&gt;
&lt;li&gt;Internet Explorer&lt;/li&gt;
&lt;li&gt;Facebook Mobile Browser&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Also, there is a caveat with Safari. Although it provides basic support for the PWAs, not all features are included. Safari does not support push notifications, so the user should install the app manually in order to add it to the home screen.&lt;/p&gt;

&lt;p&gt;In addition to this, in 2020 the WebKit, Safari’s engine &lt;a href="https://webkit.org/tracking-prevention/"&gt;announced&lt;/a&gt; that they are not going to support many of the APIs that give access to the native functionality. Examples of such unsupported features are Web Bluetooth, Web MIDI API, Magnetometer API, Web NFC API among others. They say it’s for privacy reasons, but this hinders the evolution of PWAs on iOS.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-current-state-of-pwa-in-2021"&gt;
  &lt;/a&gt;
  The Current State of PWA in 2021
&lt;/h2&gt;

&lt;p&gt;Progressive web apps are by their nature an evolving trend. As such, new developments and added support by major platforms are constantly contributing to the growth of PWAs. While the imprecise definition of PWA makes it difficult to track an exact market share, estimates based on &lt;a href="https://www.chromestatus.com/metrics/feature/timeline/popularity/990"&gt;Chrome web statistics&lt;/a&gt; put the current number of PWA-like page loads at about 19%.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xhNvSLr3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4cn3umyaml0hh7e2tcrs.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xhNvSLr3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4cn3umyaml0hh7e2tcrs.jpg" alt="The Current State of PWA in 2021" width="880" height="516"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A survey of e-commerce decision makers &lt;a href="https://www.statista.com/statistics/1174534/investing-pwa-ecommerce-companies-worldwide/"&gt;revealed&lt;/a&gt; that 9% of e-commerce companies planned on investing in progressive web apps (PWA) in 2021. Additionally, 8% of e-commerce companies reported that they are already doing it, and 28% of companies did not have plans to invest in PWA in 2021.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_9xMpBdl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ldthyub4gaj0tsqjucre.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_9xMpBdl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ldthyub4gaj0tsqjucre.jpg" alt="Share of E-commerce Companies Worldwide Planning on Investing in Progressive Web Apps (PWA) in 2021" width="880" height="516"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Research &lt;a href="https://www.globenewswire.com/news-release/2021/02/08/2171664/0/en/Progressive-Web-Application-Market-Size-to-Reach-USD-10-44-Billion-by-2027-Global-Analysis-Statistics-Revenue-Industry-Demand-and-Trend-Analysis-Research-Report-by-Emergen-Research.html"&gt;suggests&lt;/a&gt; that the financial value of the progressive web application market will reach a value of 10.77 billion dollars by 2027, representing annual growth of over 30% between now and that time.&lt;/p&gt;

&lt;p&gt;Current support for PWAs is fairly good though there are some limitations. Every major platform including iOS, Mac, Android, and PC now offers some level of PWA support. Android provides the best support, with iOS and Mac being the most limited. Apple’s strict control over the apps available on its platform is the biggest hindrance to PWA’s adoption on iOS.&lt;/p&gt;

&lt;p&gt;Developers and project owners considering PWA in their own applications should consider these limitations. The PWA market is steadily growing, along with platform support, so early adopters may find themselves ahead of their competitors. But it is tough to tell exactly how long this growth could take.&lt;/p&gt;

&lt;p&gt;Interestingly, earlier this year, Instagram Lite was rebuilt from PWA to a native Android app. The reason for this switch back is not clear, but there are some speculations that &lt;a href="https://techcrunch.com/2021/03/10/facebook-targets-emerging-markets-with-instagram-lite-a-new-android-app-that-takes-up-just-2mb-in-170-countries/?guccounter=1&amp;amp;guce_referrer=aHR0cHM6Ly9tb2JpZGV2LmJpei9ibG9nL3doeS13aGVuLXVzZS1wcm9ncmVzc2l2ZS13ZWItYXBwLXB3YS1kZXZlbG9wbWVudA&amp;amp;guce_referrer_sig=AQAAADL7As3jhGP4EqMTVMMKPaQYkKtMFdadLc-VcLFyxUi__mkeTdPXilnPhMG2kk7UXoxzSyv4GW9odo_HIsWH-cqbtkpI_jUiHPYPG6TcYfoH2iSzMNBTcr-hI0NJMgAvOTN_pZdY8bb8AtQ6csIa4DWNMJu5LKr1E8EyhxbPgV-L"&gt;Facebook did this&lt;/a&gt; to test out their internal framework Bloks.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-to-expect-of-pwas-in-2022"&gt;
  &lt;/a&gt;
  What to Expect of PWAs in 2022?
&lt;/h2&gt;

&lt;p&gt;The bright side is that there are some significant improvements in the PWA market. One recent positive development for PWAs is a partnership between Microsoft and Google. Microsoft &lt;a href="https://medium.com/pwabuilder/microsoft-and-google-team-up-to-make-pwas-better-in-the-play-store-b59710e487"&gt;recently announced&lt;/a&gt; that PWABuilder will be using Google’s Bubblewrap technology. PWABuilder is Microsoft’s development tool that makes writing PWAs easier and Bubblewrap helps developers package their apps for distribution on the Google Play app store.&lt;/p&gt;

&lt;p&gt;This announcement came along with the introduction of support for new features including native app shortcuts and advanced Android features now available through PWABuilder. The collaborative efforts of tech giants like Google and Microsoft are extremely promising for the future of PWA adoption.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#should-you-use-pwa-in-2022-and-beyond"&gt;
  &lt;/a&gt;
  Should you use PWA in 2022 and beyond?
&lt;/h2&gt;

&lt;p&gt;The answer is YES, if your product strategy requires fast market entry and coverage of multiple platforms with a single codebase. Progressive web apps allow startup companies to quickly and easily develop and distribute a progressive web app and benefit from the minimal time and money needed to roll out the app in the case of limited resources. Encouraging the first time users to revisit the application and getting them engaged with the help of push notifications and in-app banners make PWAs the powerful tool for marketing strategy implementation.&lt;/p&gt;

&lt;p&gt;Larger corporations can also benefit from providing value to their users with limited access to high-performance platforms or who prefer a more streamlined, lightweight experience. PWA can be a choice for development of an enterprise software tied to a selected single platform to benefit from the important native features supported exactly by this platform.&lt;/p&gt;

&lt;p&gt;Other frequent use cases for PWA are when your application requires support of offline mode, or you need your legacy web application, for example, made with React, to be remade into PWA with the minimal time in comparison to building a new app from scratch, for example, in Flutter for Web.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#when-you-should-not-use-pwa"&gt;
  &lt;/a&gt;
  WHEN YOU SHOULD NOT USE PWA
&lt;/h3&gt;

&lt;p&gt;While there are some drawbacks of PWAs, these are minimal and mostly outweighed by their benefits. The biggest restriction for PWAs is their limited support on iOS, which obviously comprises a significant portion of the mobile app market share. There is some support, however, and Apple’s changing stance on PWA in the past shows that they are willing to evolve with it.&lt;/p&gt;

&lt;p&gt;Another limitation which can prevent you from using PWA is that your app can’t be published in the AppStore, however it’s easy to &lt;a href="https://chromeos.dev/en/publish/pwa-in-play"&gt;list it on Google Play&lt;/a&gt; and already possible to &lt;a href="https://developer.microsoft.com/en-us/microsoft-store/pwa/"&gt;make it live in the Microsoft Store&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;At MobiDev, we start a project from the business analysis stage to identify the key product requirements and help a business owner understand which requirements may provide the most value to the business and which technology stack fits the project goals.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#progressive-web-app-development-at-mobidev"&gt;
  &lt;/a&gt;
  Progressive Web App Development at MobiDev
&lt;/h2&gt;

&lt;p&gt;MobiDev’s web engineering team has gained significant experience in web application development, including progressive web applications, and we are eager to share the best practices we follow:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#8-recommendations-for-pwa-development"&gt;
  &lt;/a&gt;
  8 RECOMMENDATIONS FOR PWA DEVELOPMENT
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;The PWA should feel like a native app – it’s a good practice to show splash screens during the application startup, the app should have a set of icons of different sizes that will be used on the home screen as the app logo and a properly configured theme.&lt;/li&gt;
&lt;li&gt;Some browsers still do not have complete support of manifest.json, so you have to fallback to meta tags, e.g. to specify theme or tile colors in Safari or Microsoft Edge.&lt;/li&gt;
&lt;li&gt;Make sure to always &lt;a href="https://web.dev/customize-install/"&gt;promote the app installation&lt;/a&gt;. The app installation or “add to home screen” functionality along with push notifications are the killer features that dramatically improve conversion rate and users re-engagement.&lt;/li&gt;
&lt;li&gt;If your app needs the offline mode support or you simply want to use enhanced caching strategies in order to reduce the network traffic and decrease page load time – we’d recommend you to check out the official set of libraries from Google, which is specifically designed to solve these problems and ease the PWA development.&lt;/li&gt;
&lt;li&gt;Whenever the new version of PWA app goes live we must let the user know about the available updates. We may achieve that by displaying custom in-app banners or notifications, prompting a user to update the application. Please note, that the ServiceWorker won’t automatically update until all the application windows or tabs that are using the previous version are closed. If we don’t show the banner, the user might not know about the updates for quite some time.&lt;/li&gt;
&lt;li&gt;As we said, some users might not update the app right away and will be using the old versions. In this case, it’s absolutely crucial to have backwards compatible APIs on the server.&lt;/li&gt;
&lt;li&gt;Make sure to thoroughly test the code, especially the app initialization logic. In case the app crashes during its initialization and it hasn’t yet established a subscription for the incoming ServiceWorker updates, the user’s device might be stuck with a buggy app version until it’s manually reinstalled. It’s recommended to always create some fallbacks to automatically unregister the active ServiceWorker in case of unhandled application errors – in this case you’ll be able to quickly deliver fixes to the end user.&lt;/li&gt;
&lt;li&gt;The PWAs should be fast. You may test and debug the performance using &lt;a href="https://developers.google.com/web/tools/lighthouse/"&gt;Lighthouse&lt;/a&gt; and other &lt;a href="https://developer.chrome.com/docs/devtools/"&gt;Chrome DevTools&lt;/a&gt;.
Of course we are following all other best practices applicable to a regular web app development:&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
&lt;li&gt;Create responsive and adaptive web applications that properly work on all platforms regardless if it’s mobile, tablet or desktop.&lt;/li&gt;
&lt;li&gt;Follow the established code style in the team, or establish it yourself by configuring the pre-commit git hook which will invoke code linters and formatters.&lt;/li&gt;
&lt;li&gt;Write strictly typed code if possible (e.g. using TypeScript).&lt;/li&gt;
&lt;li&gt;Design component-based applications. Decouple UI and business logic. Create simple and reusable components that are easy to compose into a complex UI.&lt;/li&gt;
&lt;li&gt;And of course perform code reviews and help each other! &lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>webdev</category>
      <category>pwa</category>
      <category>reactnative</category>
      <category>flutter</category>
    </item>
    <item>
      <title>Let's create a URL expander with Node.JS</title>
      <author>Shuvo</author>
      <pubDate>Fri, 19 Nov 2021 10:50:28 +0000</pubDate>
      <link>https://dev.to/0shuvo0/lets-create-a-url-expander-with-nodejs-963</link>
      <guid>https://dev.to/0shuvo0/lets-create-a-url-expander-with-nodejs-963</guid>
      <description>&lt;h2&gt;
  &lt;a href="#yep-we-are-creating-a-url-expander-not-a-url-shortener"&gt;
  &lt;/a&gt;
  Yep we are creating a URL expander not a URL shortener
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--afdwkDmD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2c7g6xn579txjrlg87zg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--afdwkDmD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2c7g6xn579txjrlg87zg.png" alt="Node.JS URl expander preview" width="880" height="641"&gt;&lt;/a&gt; &lt;br&gt;
There are many tools like &lt;a href="https://bitly.com/"&gt;bitly&lt;/a&gt;, &lt;a href="https://www.shorturl.at/"&gt;shorturl&lt;/a&gt; etc. through which we can convert our long and messy URL into a short and better looking URL. For example &lt;a href="https://www.youtube.com/c/AngleBrace"&gt;https://www.youtube.com/c/AngleBrace&lt;/a&gt; can become &lt;a href="https://shorturl.at/asIW4"&gt;shorturl.at/asIW4&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#but-url-expander-will-do-the-opposite"&gt;
  &lt;/a&gt;
  But URL expander will do the opposite.
&lt;/h3&gt;

&lt;p&gt;So we can get the original long URL from the short URL using it.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#but-why"&gt;
  &lt;/a&gt;
  But why?
&lt;/h2&gt;

&lt;p&gt;Well some bad guy can take this virus download link eg. &lt;a href="https://www.badsite.com/virus.exe"&gt;https://www.badsite.com/virus.exe&lt;/a&gt; and shorten it to &lt;a href="https://shorturl.at/wDPZ5"&gt;https://shorturl.at/wDPZ5&lt;/a&gt;. And now just by seeing the short URL you won't be able to tell that this link downloads a virus. So sometimes to prevent viruses and inappropriate websites we can use a URL Expander.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#lets-start"&gt;
  &lt;/a&gt;
  Lets start.
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;You can also &lt;a href="https://youtu.be/l2La_PmzxQE"&gt;see the video&lt;/a&gt; version on YouTube&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So create a folder for the project. And open it up in the terminal. And then run &lt;code&gt;npm init -y&lt;/code&gt; to create a new node js project. This will also create a &lt;strong&gt;package.json&lt;/strong&gt;.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hSPjBU1W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j3qaygpyxfzf7w6zj5ry.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hSPjBU1W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j3qaygpyxfzf7w6zj5ry.png" alt="Initializing a new Node.JS project" width="880" height="937"&gt;&lt;/a&gt;&lt;br&gt;
After that we need to install some packages. We will need &lt;strong&gt;express&lt;/strong&gt; and &lt;strong&gt;request&lt;/strong&gt;. So install them by running &lt;code&gt;npm i express request&lt;/code&gt;&lt;br&gt;
We will also install nodemon as our dev dependency. So we won't have to rerun the JavaScript file each time we make a change. So install it by running &lt;code&gt;npm i nodemon -D&lt;/code&gt;&lt;br&gt;
Now in the &lt;strong&gt;package.json&lt;/strong&gt; we will delete the &lt;strong&gt;test&lt;/strong&gt; script and create a &lt;strong&gt;start&lt;/strong&gt; script.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"url_expander"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"version"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"1.0.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"description"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"main"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"index.js"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"scripts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"start"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"nodemon index.js"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"keywords"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[],&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"author"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"license"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"ISC"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"dependencies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"express"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^4.17.1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"request"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^2.88.2"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"devDependencies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"nodemon"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^2.0.15"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Okay now lets create a &lt;strong&gt;index.js&lt;/strong&gt; file and setup a basic NodeJS and Express project&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;static&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;public&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sendFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/index.html&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Server is running on port 3000&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;So now we can create a public folder. Inside that we will create our HTML, CSS and JS file. So our folder structure will look something like this&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Gtk1Aq6V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jgqjwe1etudcqe2vvgib.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Gtk1Aq6V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jgqjwe1etudcqe2vvgib.png" alt="NodeJS project folder structure" width="163" height="209"&gt;&lt;/a&gt;&lt;br&gt;
Okay now in out HTML let's write some markup. We will have 3 main elements&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;A input where we can enter the short URL&lt;/li&gt;
&lt;li&gt;Button that will send the request to expand URL&lt;/li&gt;
&lt;li&gt;A element were we will show our expanded URL
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;http-equiv=&lt;/span&gt;&lt;span class="s"&gt;"X-UA-Compatible"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"IE=edge"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1.0"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"style.css"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Node JS URL Expander&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"input-box"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"input"&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"Enter Short URL"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"expand-btn"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;expand&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"result"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/a&amp;gt;&lt;/span&gt;&lt;span class="c"&gt;&amp;lt;!-- Expanded URl will be shown here --&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"main.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Now lets style it in our &lt;strong&gt;style.css&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;rgb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;239&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;131&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;84&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.container&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;320px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;3em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.input-box&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;35px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;flex-grow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;rgb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;233&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;95&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;35&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;text-transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;uppercase&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;1em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;outline&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nf"&gt;#result&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;word-break&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;break-all&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.2em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;So now if we start our server by running &lt;code&gt;npm start&lt;/code&gt; and go to &lt;code&gt;localhost:3000&lt;/code&gt; we should see this page&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FO5rLM75--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wrl3rnldzfrbaa6nd0d9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FO5rLM75--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wrl3rnldzfrbaa6nd0d9.png" alt="Nodejs project on localhost" width="880" height="495"&gt;&lt;/a&gt;&lt;br&gt;
Great Now in our &lt;strong&gt;main.js&lt;/strong&gt; lets make it so when we click on the button it sends a request to &lt;code&gt;/expand&lt;/code&gt; and displays the response.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;input&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#input&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;expandBtn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#expand-btn&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#result&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;expandBtn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Initally set the result to loading&lt;/span&gt;
    &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerText&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Loading ...&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`/expand`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="c1"&gt;// Display the result send from the server&lt;/span&gt;
            &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerText&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerText&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Error&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Now in our &lt;strong&gt;index.js&lt;/strong&gt; lets create the &lt;code&gt;/expand&lt;/code&gt; route.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;static&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;public&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sendFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/index.html&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/expand&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hello&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Server is running on port 3000&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;So now if we click on the button it should display &lt;strong&gt;hello&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GsXTYV0Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7qvwajyzgzvg2194nrtw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GsXTYV0Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7qvwajyzgzvg2194nrtw.png" alt="NodeJS send fetch request from html" width="880" height="495"&gt;&lt;/a&gt;&lt;br&gt;
Okay now in out &lt;strong&gt;main.js&lt;/strong&gt; when sending request to &lt;code&gt;/expand&lt;/code&gt; lets also send our inputs value as a query parameter.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;input&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#input&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;expandBtn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#expand-btn&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#result&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;expandBtn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerText&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Loading ...&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="c1"&gt;// passing the input value to the server as shortUrl query string&lt;/span&gt;
    &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`/expand?shortUrl=&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerText&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerText&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Error&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;So now we can get the input value in our &lt;strong&gt;index.js&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/expand&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;shortUrl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;shortUrl&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hello&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;And now finally we can use the &lt;strong&gt;request&lt;/strong&gt; package we installed earlier to get the original URL of our short URL&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;request&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;static&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;public&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sendFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/index.html&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/expand&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;shortUrl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;shortUrl&lt;/span&gt;
    &lt;span class="c1"&gt;// If the shortUrl doesn't start with http, add add https:// in front of it&lt;/span&gt;
    &lt;span class="c1"&gt;// So eg. example.com becomes https://example.com&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;shortUrl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;startsWith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;http&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="nx"&gt;shortUrl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;shortUrl&lt;/span&gt;
    &lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;shortUrl&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;method&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;HEAD&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;followAllRedirects&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Error&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="c1"&gt;// Sending back the full url&lt;/span&gt;
            &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Server is running on port 3000&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;And now our project is complete. So enter a short URL like &lt;strong&gt;shorturl.at/aoqyO&lt;/strong&gt; and click on expand and it should display the full URL&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AWf85jfJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6g419d3cc8l3rcatwfhn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AWf85jfJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6g419d3cc8l3rcatwfhn.png" alt="Working Node JS URL expander" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#you-can-the-finished-codes-here"&gt;
  &lt;/a&gt;
  You can the finished codes &lt;a href="https://github.com/0shuvo0/url-expander"&gt;here&lt;/a&gt;
&lt;/h2&gt;
&lt;h2&gt;
  &lt;a href="#make-sure-you-checkout-my-other-articles-and-youtube-channel"&gt;
  &lt;/a&gt;
  Make sure you checkout my other articles and YouTube Channel
&lt;/h2&gt;


&lt;div class="ltag__user ltag__user__id__728097"&gt;
  
    .ltag__user__id__728097 .follow-action-button {
      background-color: #000000 !important;
      color: #ffffff !important;
      border-color: #000000 !important;
    }
  
    &lt;a href="/0shuvo0" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wZgMNup---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j0_lvM9_--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/728097/0f6e1da9-f243-42d0-b446-301ac6ea6412.jpeg" alt="0shuvo0 image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/0shuvo0"&gt;Shuvo&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/0shuvo0"&gt;Frontend Developer and YouTuber.
Channel link: https://www.youtube.com/c/AngleBrace&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#was-it-helpful-support-me-on-patreon"&gt;
  &lt;/a&gt;
  Was it helpful? Support me on Patreon
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.patreon.com/0shuvo0"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vln7kszB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7vnw8g7vs5pok3jwgtgv.png" alt="Patreon Logo" width="225" height="225"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>node</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Cheat Sheet Linux Terminal </title>
      <author>Anne Quinkenstein</author>
      <pubDate>Fri, 19 Nov 2021 10:50:03 +0000</pubDate>
      <link>https://dev.to/annequinkenstein/cheat-sheet-linux-terminal-1152</link>
      <guid>https://dev.to/annequinkenstein/cheat-sheet-linux-terminal-1152</guid>
      <description>&lt;p&gt;Terminal &lt;br&gt;
öffnen  [Strg+Alt+T] oder GUI&lt;br&gt;
 Autovervollständig mit [Tab]&lt;br&gt;
•history (Pfeiltasten)&lt;br&gt;
•[Strg] [+] und [Strg] [-]&lt;/p&gt;

&lt;p&gt;Befehl ls&lt;br&gt;
ls [-laLi] Auflisten des Verzeichnisinhalts&lt;br&gt;
-l in Langform&lt;br&gt;
-a einschließlich der .-Dateien&lt;br&gt;
-L symbolische Links auflösen&lt;br&gt;
-i Anzeigen der i-Node-Nummer&lt;/p&gt;

&lt;p&gt;Befehle pwd, cd&lt;br&gt;
pwd Print Working Directory&lt;br&gt;
cd dir Change Directory&lt;br&gt;
cd .. Wechsel ins übergeordnete Verz.&lt;/p&gt;

&lt;p&gt;Befehl man und –help&lt;br&gt;
man [Thema] Manualpages&lt;br&gt;
q (für quit) schließt den Editor wieder.&lt;br&gt;
ls --help --help gibt die Hilfe zu einem Befehl aus.&lt;br&gt;
(hier für &lt;code&gt;ls&lt;/code&gt;)&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Polkadot Cryptocurrency</title>
      <author>Analytics steps</author>
      <pubDate>Fri, 19 Nov 2021 10:44:09 +0000</pubDate>
      <link>https://dev.to/analyticsstepss/polkadot-cryptocurrency-5fc9</link>
      <guid>https://dev.to/analyticsstepss/polkadot-cryptocurrency-5fc9</guid>
      <description>&lt;p&gt;Polkadot is an open-source sharding multichain convention that works with the cross-chain move of any information or resource types, not simply tokens, in this manner making a wide scope of blockchains interoperable with one another. &lt;/p&gt;

&lt;p&gt;This interoperability looks to build up a completely decentralized and private web, constrained by its clients, and improve on the production of new applications, foundations, and administrations. &lt;/p&gt;

&lt;p&gt;The &lt;a href="https://www.analyticssteps.com/blogs/polkadot-cryptocurrency-structure-and-working"&gt;Polkadot&lt;/a&gt; convention interfaces public and private chains, permissionless organizations, prophets, and future advances, permitting these free blockchains to trustlessly share data and exchanges through the Polkadot transfer chain (clarified further down). &lt;/p&gt;

&lt;p&gt;Polkadot's local DOT token fills three clear needs: giving organization administration and activities, and making parachains (equal chains) by holding. &lt;/p&gt;

&lt;p&gt;Polkadot has four center parts: &lt;/p&gt;

&lt;p&gt;Hand-off Chain: Polkadot's "heart," assisting with making an agreement, interoperability, and shared security across the organization of various chains; &lt;/p&gt;

&lt;p&gt;Parachains: autonomous chains that can have their tokens and be enhanced for explicit use cases; &lt;/p&gt;

&lt;p&gt;Parathread: like parachains yet with adaptable network dependent on a practical pay-more only as costs arise model; &lt;/p&gt;

&lt;p&gt;Extensions: permits parachains and parathreads to interface and speak with outer blockchains like Ethereum.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Request for topics</title>
      <author>Abhinav Pandey</author>
      <pubDate>Fri, 19 Nov 2021 10:34:03 +0000</pubDate>
      <link>https://dev.to/abh1navv/request-for-topics-1i5k</link>
      <guid>https://dev.to/abh1navv/request-for-topics-1i5k</guid>
      <description>&lt;p&gt;I need to make a list of system design concepts that I must learn in depth and write about. Will you be able to suggest a few topics?&lt;/p&gt;

&lt;p&gt;You can also suggest technologies and I can try to explain how they work behind the scenes or compare to each other.&lt;/p&gt;

&lt;p&gt;No language specific stuff please.&lt;/p&gt;

</description>
      <category>programming</category>
      <category>discuss</category>
      <category>watercooler</category>
      <category>requestforpost</category>
    </item>
    <item>
      <title>Building the landing page for my portfolio/blog website</title>
      <author>Bishal Neupane</author>
      <pubDate>Fri, 19 Nov 2021 10:33:34 +0000</pubDate>
      <link>https://dev.to/bishaln/building-the-landing-page-for-my-portfolioblog-webiste-4l1m</link>
      <guid>https://dev.to/bishaln/building-the-landing-page-for-my-portfolioblog-webiste-4l1m</guid>
      <description>&lt;p&gt;This is the fifth blog post on the series of blog post I am posting about strapi,nextjs, and tailwind. We are recreating my portfolio/blogpost page that along the way we'll learn the fundamentals of strapi,nextjs, and tailwind. You can check it out at &lt;a href="https://myportfolioandblog.vercel.app/"&gt;myportfolio&lt;/a&gt; If you know the basics of javascript and react then you should be good to follow this blog post and coming blog post on the series. I hope you'll get something out of this series.&lt;/p&gt;

&lt;p&gt;If you've not gone through the previous blog posts then make sure to check them out&lt;/p&gt;

&lt;p&gt;In this blog post, we're going to create the landing page using nextjs and tailwindcss so let's write the graphql query to fetch all the required data&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { gql } from 'graphql-request';

export const homePageQuery = gql`
  query HomePage {
    homepage {
      creditText
      Hero {
        title
        navlinks
        profile {
          url
          height
          width
        }
      }
      About {
        work
        blogs
        watch
        email
      }
      Project {
        title
        description
        tools
        image {
          url
          height
          width
        }
        url
        bg {
          url
        }
      }
      Contact {
        email
        insta
        linkedin
        twitter
        youtube
        title
      }
    }
    posts(sort: "updated_at:desc", limit: 3) {
      updated_at
      title
      slug
      description
      topics
    }
  }
`;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's generate the type information using graphql codegen use&lt;br&gt;
If you've not gone through the generating type info blog post then you can check that out here &lt;a href="https://dev.to/bishaln/generate-type-information-from-gql-graphql-query-using-graphql-generator-3n9k"&gt;Type gen blog post&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn gen
or npm run gen
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It's time to use the nextjs's getStaticProps function which will allow us to make the graphql request on the server during the build process. We can use the getStaticProps like so;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;export const getStaticProps = async () =&amp;gt; {
  const data: HomePageQuery = await request(
    'http://localhost:1337/graphql',
    homePageQuery
  );

  return { props: data };
};
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here the request comes from the graphql-request package and HomePageQuery is the type that was generated by graphql-codegen. This will fetch the data and pass it to the page as a prop.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { request } from 'graphql-request';
import { homePageQuery } from '../queries/homepage';
import { HomePageQuery, Post } from '../gql/graphql';
import React from 'react';
import NextImage from 'next/image';
import { Link } from '../components/Link';
import { Button } from '../components/Button';
import { BlogCard } from '../components/BlogCard';
import {
  AiFillInstagram,
  AiFillYoutube,
  AiOutlineTwitter,
} from 'react-icons/ai';
import { GrMail } from 'react-icons/gr';

export const getStaticProps = async () =&amp;gt; {
  const data: HomePageQuery = await request(
    'http://localhost:1337/graphql',
    homePageQuery
  );

  return { props: data };
};

const Home = ({ homepage, posts }: HomePageQuery) =&amp;gt; {
  return (
    &amp;lt;div&amp;gt;
      &amp;lt;div className='container sm:mx-auto'&amp;gt;
        &amp;lt;main&amp;gt;
          &amp;lt;section id='hero'&amp;gt;
            &amp;lt;div className='rounded-md mt-5 bg-hero'&amp;gt;
              {/* navLinks */}
              &amp;lt;div className='flex space-x-4 justify-end p-4 mx-4'&amp;gt;
                {homepage?.Hero?.navlinks?.split(',').map((nav) =&amp;gt; (
                  &amp;lt;Link href={nav == 'blog' ? '/playlists' : '#'} key={nav}&amp;gt;
                    {nav}
                  &amp;lt;/Link&amp;gt;
                ))}
              &amp;lt;/div&amp;gt;

              {/* titleandprofile */}
              &amp;lt;div className='flex flex-col sm:flex-row mt-10 justify-between'&amp;gt;
                &amp;lt;h1
                  style={{ lineHeight: '1.3' }}
                  className='text-gray-800 xl:ml-32
             text-opacity-95 text-3xl md:text-5xl lg:text-6xl mx-4 max-w-lg'
                &amp;gt;
                  {homepage?.Hero?.title}
                &amp;lt;/h1&amp;gt;
                &amp;lt;NextImage
                  src={homepage?.Hero?.profile?.url!}
                  alt='myprofile'
                  height={`${homepage?.Hero?.profile?.height!}`}
                  width={homepage?.Hero?.profile?.width!}
                /&amp;gt;
              &amp;lt;/div&amp;gt;
            &amp;lt;/div&amp;gt;
          &amp;lt;/section&amp;gt;
        &amp;lt;/main&amp;gt;
        {/* worksection */}
        &amp;lt;section id='work'&amp;gt;
          &amp;lt;div
            className='bg-indigo-300 my-10 rounded-lg
         grid sm:grid-rows-2 sm:grid-cols-2 p-4 gap-2 xl:pl-32'
          &amp;gt;
            &amp;lt;div className='space-y-1 my-4'&amp;gt;
              &amp;lt;h1 className='text-5xl'&amp;gt;Work.&amp;lt;/h1&amp;gt;
              &amp;lt;p className='ml-2 max-w-md text-gray-600'&amp;gt;
                {homepage?.About?.work}
              &amp;lt;/p&amp;gt;
            &amp;lt;/div&amp;gt;
            &amp;lt;div className='space-y-1'&amp;gt;
              &amp;lt;h1 className='text-5xl'&amp;gt;Blogs.&amp;lt;/h1&amp;gt;
              &amp;lt;p className='max-w-md text-gray-600'&amp;gt;{homepage?.About?.blogs}&amp;lt;/p&amp;gt;
            &amp;lt;/div&amp;gt;
            &amp;lt;div className='space-y-1'&amp;gt;
              {/* &amp;lt;h1 className='text-5xl'&amp;gt;Work.&amp;lt;/h1&amp;gt; */}
              &amp;lt;div className='h-10'&amp;gt;&amp;lt;/div&amp;gt;
              &amp;lt;div className='ml-2 max-w-md text-gray-600'&amp;gt;
                &amp;lt;Link
                  className='inline-block text-blue-600'
                  href={`mailto:${homepage?.Contact?.email}`}
                &amp;gt;
                  Email me
                &amp;lt;/Link&amp;gt;{' '}
                {homepage?.About?.email}
              &amp;lt;/div&amp;gt;
            &amp;lt;/div&amp;gt;
            &amp;lt;div className='space-y-1'&amp;gt;
              &amp;lt;h1 className='text-5xl'&amp;gt;Watch.&amp;lt;/h1&amp;gt;
              &amp;lt;p className='ml-2 max-w-md text-gray-600'&amp;gt;
                {homepage?.About?.watch}
              &amp;lt;/p&amp;gt;
            &amp;lt;/div&amp;gt;
          &amp;lt;/div&amp;gt;
        &amp;lt;/section&amp;gt;
      &amp;lt;/div&amp;gt;
      {/* projectsection */}
      &amp;lt;section id='project'&amp;gt;
        {homepage?.Project?.map((project) =&amp;gt; {
          return (
            &amp;lt;div
              key={project?.title}
              className='relative h-screen grid grid-rows-2 grid-cols-1 md:grid-rows-1 md:grid-cols-2 
                text-white justify-items-center place-items-center p-2'
            &amp;gt;
              &amp;lt;NextImage
                src={project?.bg?.url!}
                layout='fill'
                objectPosition='center'
                objectFit='cover'
                className='z-0 bg-blend-overlay bg-gray-600'
              /&amp;gt;
              &amp;lt;div className='z-10 place-self-start p-2 md:p-10'&amp;gt;
                &amp;lt;h3 className='text-4xl sm:text-5xl'&amp;gt;{project?.title}&amp;lt;/h3&amp;gt;
                &amp;lt;p className='text-sm sm:text-lg sm:max-w-sm'&amp;gt;
                  {project?.description}
                &amp;lt;/p&amp;gt;
                &amp;lt;Link href={`${project?.url}`} className='text-blue-400 '&amp;gt;
                  {project?.url}
                &amp;lt;/Link&amp;gt;
                &amp;lt;div className='flex uppercase space-x-4'&amp;gt;
                  {project?.tools?.split(',').map((tool) =&amp;gt; (
                    &amp;lt;p key={tool} className='bg-gray-500 px-1 rounded-sm'&amp;gt;
                      {tool}
                    &amp;lt;/p&amp;gt;
                  ))}
                &amp;lt;/div&amp;gt;
              &amp;lt;/div&amp;gt;
              &amp;lt;div className='-mt-40 md:-mt-0'&amp;gt;
                &amp;lt;NextImage
                  src={`${project?.image?.url!}`}
                  height={project?.image?.height!}
                  width={project?.image?.width!}
                /&amp;gt;
              &amp;lt;/div&amp;gt;
            &amp;lt;/div&amp;gt;
          );
        })}
      &amp;lt;/section&amp;gt;
      {/* recentblogs */}

      &amp;lt;section&amp;gt;
        &amp;lt;div className='p-5 bg-gradient-to-tr from-blue-300 to-indigo-500  my-10'&amp;gt;
          &amp;lt;div
            className='p-2 grid gap-5 grid-cols-1
           grid-rows-1 md:grid-cols-2 lg:grid-cols-3  w-full'
          &amp;gt;
            {posts?.map((post) =&amp;gt; (
              &amp;lt;BlogCard
                key={post?.description!}
                updated_at={post?.updated_at!}
                topics={post?.topics!}
                title={post?.title!}
                slug={post?.slug!}
                description={post?.description!}
              /&amp;gt;
            ))}
          &amp;lt;/div&amp;gt;
          &amp;lt;div className='flex justify-end px-4 pb-2'&amp;gt;
            &amp;lt;Button&amp;gt;More Blogs&amp;lt;/Button&amp;gt;
          &amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
      &amp;lt;/section&amp;gt;

      {/* contact section */}
      &amp;lt;section id='contact'&amp;gt;
        &amp;lt;div className='flex flex-col items-center justify-center my-32'&amp;gt;
          &amp;lt;h4 className='text-6xl'&amp;gt;{homepage?.Contact?.title}&amp;lt;/h4&amp;gt;
          &amp;lt;div className='flex space-x-10 my-4'&amp;gt;
            &amp;lt;Link href={`mailto:${homepage?.Contact?.email}`}&amp;gt;
              &amp;lt;GrMail size={30} color='black' /&amp;gt;
            &amp;lt;/Link&amp;gt;

            &amp;lt;Link href={homepage?.Contact?.insta!}&amp;gt;
              &amp;lt;AiFillInstagram size={30} color='black' /&amp;gt;
            &amp;lt;/Link&amp;gt;

            &amp;lt;Link href={homepage?.Contact?.youtube!}&amp;gt;
              &amp;lt;AiFillYoutube size={30} color='black' /&amp;gt;
            &amp;lt;/Link&amp;gt;

            &amp;lt;Link href={homepage?.Contact?.twitter!}&amp;gt;
              &amp;lt;AiOutlineTwitter size={30} color='black' /&amp;gt;
            &amp;lt;/Link&amp;gt;
          &amp;lt;/div&amp;gt;
          &amp;lt;h3 className='flex items-center justify-center my-10'&amp;gt;
            {homepage?.creditText}
          &amp;lt;/h3&amp;gt;
        &amp;lt;/div&amp;gt;
      &amp;lt;/section&amp;gt;
    &amp;lt;/div&amp;gt;
  );
};

export default Home;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;And that is it about building the landing page using tailwindcss and nodejs google. In another blog post, we'll create a Playlists and Playlist page. If you have any problem with this code and then let me know in the discussion.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>tailwindcss</category>
      <category>nextjs</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Why and Why Not use No-Code?</title>
      <author>Vik 📈</author>
      <pubDate>Fri, 19 Nov 2021 10:24:08 +0000</pubDate>
      <link>https://dev.to/heyvik/why-and-why-not-use-no-code-nd1</link>
      <guid>https://dev.to/heyvik/why-and-why-not-use-no-code-nd1</guid>
      <description>&lt;p&gt;As my no-code blog just blasted off, here's another. So, in this blog, I will tell some reason to use and some reason to not use no-code.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-nocode"&gt;
  &lt;/a&gt;
  What is No-Code?
&lt;/h3&gt;

&lt;p&gt;A no code development platform is a tool for building software applications without coding. No-Code is made for people in every background to create stuff/software. No code platforms have pre-built drag-and-drop elements that have been coded for reuse and scale, so that anyone, even beginners can make anything they want easily.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-does-it-even-works"&gt;
  &lt;/a&gt;
  How does it even works?
&lt;/h3&gt;

&lt;p&gt;As told above, no code tools already got drag-and-drop elements which you can use to create your website. You can then easily see, how will it look in desktop, tablet, phone.&lt;/p&gt;

&lt;p&gt;When you build on a no code platform, you are building with code, you simply don’t have to do any coding, as those drag-and-drop elements ( and the whole software ) is build using code.&lt;/p&gt;

&lt;p&gt;Following me on twitter helps me a lot &lt;a href="https://twitter.com/vikstack"&gt;so consider following&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-use-no-code"&gt;
  &lt;/a&gt;
  Why use no code?
&lt;/h3&gt;

&lt;p&gt;Okay so lets now come to the point, why we should use no code?&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#faster-development"&gt;
  &lt;/a&gt;
  Faster Development
&lt;/h5&gt;

&lt;p&gt;Most development is done via a drag-and-drop interface, so this means building something will be a lot faster than using code.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#low-cost"&gt;
  &lt;/a&gt;
  Low Cost
&lt;/h5&gt;

&lt;p&gt;Developers are expensive, using no code tools will let you reduce it. You can build apps faster and cheaper.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#increased-productivity"&gt;
  &lt;/a&gt;
  Increased Productivity
&lt;/h5&gt;

&lt;p&gt;As the building time of something is way less than using code, it simply means that the thing that was being done in months can now be done in days.&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#there-are-many-more-reasons-to-use-no-code-but-for-this-blog-its-enough"&gt;
  &lt;/a&gt;
  There are many more reasons to use no code, but for this blog, its enough.
&lt;/h6&gt;

&lt;h3&gt;
  &lt;a href="#why-not-use-no-code"&gt;
  &lt;/a&gt;
  Why not use no code?
&lt;/h3&gt;

&lt;p&gt;okay so as I told you the pros of no code lets come to cons of no code.&lt;/p&gt;

&lt;p&gt;One of the most common problem with no code is for more complex use cases, they are too restrictive to produce the desired results. The drag-and-drop elements are inherently more restrictive than the underlying code.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#users-must-have-a-clear-understanding-of-their-requirements"&gt;
  &lt;/a&gt;
  Users must have a clear understanding of their requirements.
&lt;/h5&gt;

&lt;p&gt;while using no code platforms a user first need to thing that if the requirements can be fulfilled by that specific tool?&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#extensive-training-required"&gt;
  &lt;/a&gt;
  Extensive Training Required
&lt;/h5&gt;

&lt;p&gt;As no code tools make development faster, you need extensive training before. Some no code tools are a lot too harder to understand&lt;/p&gt;

&lt;p&gt;There are yet many many other way that stops you from using no code.&lt;/p&gt;

&lt;p&gt;Thanks for reading this blog. Cheers&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>codenewbie</category>
      <category>programming</category>
      <category>discuss</category>
    </item>
    <item>
      <title>What is the difference between UNION and UNION ALL in SQL?</title>
      <author>Bobby Iliev</author>
      <pubDate>Fri, 19 Nov 2021 10:21:48 +0000</pubDate>
      <link>https://dev.to/bobbyiliev/what-is-the-difference-between-union-and-union-all-in-sql-1e8b</link>
      <guid>https://dev.to/bobbyiliev/what-is-the-difference-between-union-and-union-all-in-sql-1e8b</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;If you've ever used SQL, you probably know that &lt;code&gt;UNION&lt;/code&gt;s can be quite confusing at first. In this quick post we are going to learn what the difference between &lt;code&gt;UNION&lt;/code&gt; and &lt;code&gt;UNION ALL&lt;/code&gt; is!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#difference-between-raw-union-endraw-and-raw-union-all-endraw-"&gt;
  &lt;/a&gt;
  Difference between &lt;code&gt;UNION&lt;/code&gt; and &lt;code&gt;UNION ALL&lt;/code&gt;
&lt;/h1&gt;

&lt;p&gt;The main thing to keep in mind is that if you use &lt;code&gt;UNION&lt;/code&gt; it would remove the duplicate records from the two columns, where as &lt;code&gt;UNION ALL&lt;/code&gt; does not remove the duplicates.&lt;/p&gt;

&lt;p&gt;When using &lt;code&gt;UNION&lt;/code&gt;, your database server would need to do some extra operations in order to get rid of the duplicate values, which essentially would be slower compared to using &lt;code&gt;UNION ALL&lt;/code&gt; where the database server would not have to do this extra work. However &lt;code&gt;UNION&lt;/code&gt; is more commonly used as in most cases you do not need the duplicate records.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#example"&gt;
  &lt;/a&gt;
  Example
&lt;/h1&gt;

&lt;p&gt;To keep this simple, let's say that we have the following two tables with matching number of columns:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Users: with columns &lt;code&gt;id&lt;/code&gt;, &lt;code&gt;username&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Admins: with columns &lt;code&gt;id&lt;/code&gt;, &lt;code&gt;username&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The rows in each table are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Users data:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;SELECT id,username FROM users;
// Output:
+----+----------+
| id | username |
+----+----------+
|  1 | bobby    |
|  2 | devdojo  |
|  3 | tony     |
|  4 | greisi   |
+----+----------+
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Admins data:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;SELECT id,username FROM admins;
// Output:
+------+----------+
| id   | username |
+------+----------+
|    1 | bobby    |
|    4 | greisi   |
+------+----------+
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With that out of the way, let's have a couple of examples!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#-raw-union-endraw-example"&gt;
  &lt;/a&gt;
  &lt;code&gt;UNION&lt;/code&gt; Example
&lt;/h2&gt;

&lt;p&gt;When using &lt;code&gt;UNION&lt;/code&gt; your database would do the extra work that we mentioned above, and get rid of the duplicate rows, in our case we have &lt;code&gt;bobby&lt;/code&gt; and &lt;code&gt;greisi&lt;/code&gt; present in both tables, so if we were to run the following query:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;SELECT id,username FROM users UNION SELECT * FROM admins;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The output that we would get would be the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// Output
+------+----------+
| id   | username |
+------+----------+
|    1 | bobby    |
|    2 | devdojo  |
|    3 | tony     |
|    4 | greisi   |
+------+----------+
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see there are no duplicate records.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#-raw-union-all-endraw-example"&gt;
  &lt;/a&gt;
  &lt;code&gt;UNION ALL&lt;/code&gt; Example
&lt;/h2&gt;

&lt;p&gt;Unlike &lt;code&gt;UNION&lt;/code&gt; the &lt;code&gt;UNION ALL&lt;/code&gt; statement would keep the duplicates.&lt;/p&gt;

&lt;p&gt;Let's see what happens when we run the same query as above, but use &lt;code&gt;UNION ALL&lt;/code&gt; instead:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;SELECT id,username FROM users UNION ALL SELECT * FROM admins;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;+------+----------+
| id   | username |
+------+----------+
|    1 | bobby    |
|    2 | devdojo  |
|    3 | tony     |
|    4 | greisi   |
|    1 | bobby    |
|    4 | greisi   |
+------+----------+
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see in this case, the rows from &lt;code&gt;admins&lt;/code&gt; table were directly appended after the &lt;code&gt;users&lt;/code&gt; rows including the duplicated values.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;This is pretty much it! Now you know what the difference between a &lt;code&gt;UNION&lt;/code&gt; and &lt;code&gt;UNION ALL&lt;/code&gt; is!&lt;/p&gt;

&lt;p&gt;In case that you are just getting started with SQL, I would suggest making sure to check out this free eBook here:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/bobbyiliev/introduction-to-sql"&gt;💡 Introduction to SQL eBook&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In case that you are already using SQL on daily basis, and are looking for a way to drastically reduce the latency of your data analytics, make sure to out &lt;a href="https://materialize.com/"&gt;Materialize&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XMy5AXa9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/52d9a6h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XMy5AXa9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/52d9a6h.png" alt="Materialize - a streaming database" width="880" height="448"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Materialize is a Streaming Database for Real-time Analytics. It is a reactive database that delivers incremental view updates and it helps developers easily build with streaming data using standard SQL.&lt;/p&gt;

</description>
      <category>database</category>
      <category>sql</category>
      <category>mysql</category>
      <category>postgres</category>
    </item>
    <item>
      <title>RUNNING OUR FIRST IN-PERSON EVENT IN COVID TIMES</title>
      <author>Ruth Cheesley</author>
      <pubDate>Fri, 19 Nov 2021 10:21:24 +0000</pubDate>
      <link>https://dev.to/rcheesley/running-our-first-in-person-event-in-covid-times-314o</link>
      <guid>https://dev.to/rcheesley/running-our-first-in-person-event-in-covid-times-314o</guid>
      <description>&lt;p&gt;Today I am just heading home from a really wonderful few days full of energy, excitement, collaboration and enthusiasm like I haven’t seen in several years.&lt;/p&gt;

&lt;p&gt;The Mautic Community came together this week in Hasselt, Belgium for our first ever in-person conference, &lt;a href="https://mauticon.mautic.org"&gt;Mautic Conference Europe&lt;/a&gt;. &lt;/p&gt;




&lt;p&gt;We had &lt;a href="https://www.mautic.org/blog/community/first-mautic-community-summit-a-great-success"&gt;one previous in person event&lt;/a&gt; back in 2019 directly after the acquisition of Mautic Inc. by Acquia where we were just setting up our governance models and starting work on Mautic 3, and then the pandemic hit.&lt;/p&gt;

&lt;p&gt;Since then, everything we have organised has had to be virtual, and while it’s better than nothing it simply does not (in my opinion) replace the in-person event in open source communities.  &lt;/p&gt;

&lt;p&gt;In open source, most of the folks involved are volunteers who are contributing because they love the product, the community, but most importantly the relationships we build when we get to know each other.  That simply does not happen in the same way as with virtual conferences and sprints.&lt;/p&gt;

&lt;p&gt;We also found over the last few days that contributions are super-charged during in person events, because folks are all sitting in a room together and can get help quickly. Also most folk were able to step away from their ‘real’ work and other commitments for the majority of the two days, without being distracted - not always possible to do when you’re at home or in the office!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#planning-the-event%C2%A0"&gt;
  &lt;/a&gt;
  Planning the event 
&lt;/h2&gt;

&lt;p&gt;Of course given the situation in regards to the coronavirus pandemic, it was a big decision to go ahead with an in-person event.  We purposely focus on inviting the local community for these events, but naturally because our community is worldwide, often we have folks coming from all over the world. &lt;/p&gt;

&lt;p&gt;How do you balance needing to put in place precautions to keep people safe, with facilitating building those all important relationships and also acknowledging the free choice of the individual when it comes to things like vaccinations?&lt;/p&gt;

&lt;p&gt;We decided to adopt the requirements to enter the country as our basic mandatory requirements to attend the event, which included:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Being fully vaccinated; OR&lt;/li&gt;
&lt;li&gt;  Having proof of a negative PCR test no more than 72 hours before arriving in the country&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It would be sensible to make sure you know the requirements for any country you are planning an event in, and keep up to date with the changes on those requirements.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Top tip: I used &lt;a href="https://changetower.com"&gt;changetower.com&lt;/a&gt; to track changes on the main pages from the Belgian government relating to covid-19 travel requirements. This allowed me to get a daily notification of any changes that had been made and communicate this out to the attendees and team.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We did also struggle with folk who needed to get a visa to attend - two were declined citing that there wasn't a good enough justification for travelling - so that's something to bear in mind if you have international speakers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#during-the-event"&gt;
  &lt;/a&gt;
  During the event
&lt;/h2&gt;

&lt;p&gt;We decided to make it mandatory for every attendee to take a rapid antigen (lateral flow) test each morning of the event as further reassurance.  We asked people to bring their own tests, but most did not - an additional cost we were not expecting but probably should have planned for!&lt;/p&gt;

&lt;p&gt;During the event, masks were required when moving around the venue and in any public spaces, but not during the actual conference and sprints themselves when seated and working together.&lt;/p&gt;

&lt;p&gt;We also had alcohol hand gel throughout the venues and people were encouraged to ensure they were using it regularly.&lt;/p&gt;

&lt;p&gt;We offered attendees the opportunity to show with the colour of their lanyard how comfortable they were with physical contact: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--14LW850x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hl26uxdivkqnr8je4bym.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--14LW850x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hl26uxdivkqnr8je4bym.jpg" alt="Colour coded lanyards" width="880" height="1173"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Green: All good&lt;/li&gt;
&lt;li&gt;  Orange: Happy to shake hands but no closer please!&lt;/li&gt;
&lt;li&gt;  Red: Please keep 2m apart (but we can still chat!)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;While the vast majority of attendees chose a green lanyard, with a few choosing orange, I feel that this was a very helpful way to give people the ability to share their own comfort level with physical closeness without the awkwardness of having to pull back from over-enthusiastic huggers!&lt;/p&gt;

&lt;p&gt;We hypothesised that most folks attending are probably comfortable with close contact, whereas those who are not were probably not ready to attend in-person events at this point.&lt;/p&gt;

&lt;p&gt;The conference centre we chose had a maximum capacity of 70, and we were planning for 50. We ended up having about 30 attendees, which meant that we were able to be quite spaced out in the auditorium and the plaza area (where lunch and breaks took place) without too much difficulty.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#community-sprint"&gt;
  &lt;/a&gt;
  Community Sprint
&lt;/h2&gt;

&lt;p&gt;Following the main conference we organised a Community Sprint and a Leadership Team Summit - both of which were hybrid, in that people could join us virtually via Slack and video call.&lt;/p&gt;

&lt;p&gt;In retrospect we could have held the main event as a hybrid event, however it simply came down to the matter of resources. We did not have enough volunteers to help us with putting on a hybrid event, so we chose to focus just on the in-person experience.&lt;/p&gt;

&lt;p&gt;The community sprint, however, was fully open to anyone.  We had a great range of participation from people working on a pitch deck to help agencies and individuals with pitching Mautic, to developers working on reviewing, testing and adding automated tests to features and bug fixes which were in our backlog, through to the education team working on documentation resources and the community team putting together a blueprint for how to run contribution events in local communities.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ACK9QUCW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wf6x0zi9mwvda9fwek98.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ACK9QUCW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wf6x0zi9mwvda9fwek98.jpeg" alt="Some of the product team working on bugs and new features" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It was great to see people really excited and inspired to contribute, and to see the phenomenal momentum that was generated as a result.&lt;/p&gt;

&lt;p&gt;We organised this by creating a Miro board for each team. This enabled the team leads to identify key tasks that people could pick up and work on during the day, while allowing everyone to see in real time where the tasks were in the workflow and which ones needed working on. &lt;/p&gt;

&lt;p&gt;It also served as a record of what had been accomplished by each team when we did our round-up at the end of the day.&lt;/p&gt;

&lt;p&gt;Lunch was - of course - an epic pizza order!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SbkA6MBh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oafkmb97cd5ccyh29yoz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SbkA6MBh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oafkmb97cd5ccyh29yoz.png" alt="The epic pizza order" width="400" height="533"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#evening-socials%C2%A0"&gt;
  &lt;/a&gt;
  Evening socials 
&lt;/h2&gt;

&lt;p&gt;We organised some informal social gatherings on the evenings where people were going to be in Hasselt, at various venues nearby the hotel where the team and speakers were staying. We found some really fantastic venues who were great at catering to an international audience with varying dietary requirements.&lt;/p&gt;

&lt;p&gt;In Belgium there is a requirement for visiting restaurants or cafes to have a QR code which can be scanned (locally it is called the Covidsafe app) to show you’re fully vaccinated or have a negative PCR test result - this caused a problem for a few people who did not have a scannable vaccine record. Most people had no problems at all with their codes being scanned from all over the world - the app recognised them all without any problems.&lt;/p&gt;

&lt;p&gt;Some places the folks who didn’t have a QR code to be scanned were allowed to enter, some they were not - there didn’t seem to be much in the way of rationale behind whether they were or were not allowed in.  We were also required to provide some form of ID (e.g. a passport, drivers license) to accompany the vaccine or PCR test record to ensure you were the person who the vaccine/test record relates to.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;All in all, we had a really awesome event and I feel that we took all the precautions that we could to ensure that our attendees' health and safety were front and centre.  It was a bit of a novelty to do the covid tests each morning, but I am glad that we enforced that requirement as an additional safety check.&lt;/p&gt;

&lt;p&gt;Everybody who attended really enjoyed the event and gained a lot from coming together in person. We certainly gained a lot as a community from the opportunity to sit around a table together and work through things.&lt;/p&gt;

&lt;p&gt;We were fortunate in that we didn't have anybody experiencing covid-related symptoms during the event, or any confirmed positive tests. I would suggest that as an event organiser, you need to think about what you would do if someone were to test positive, and have plans to deal with that situation - especially if they were a speaker or a member of your team.&lt;/p&gt;

&lt;p&gt;This was originally posted at &lt;a href="https://www.ruthcheesley.co.uk/blog/mautic/running-our-first-in-person-event-in-covid-times"&gt;https://www.ruthcheesley.co.uk/blog/mautic/running-our-first-in-person-event-in-covid-times&lt;/a&gt;&lt;/p&gt;

</description>
      <category>mautic</category>
      <category>events</category>
      <category>covid</category>
      <category>community</category>
    </item>
  </channel>
</rss>
