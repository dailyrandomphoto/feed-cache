<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How we use API's at Arbington.com</title>
      <author>Kalob Taulien</author>
      <pubDate>Tue, 30 Nov 2021 15:49:34 +0000</pubDate>
      <link>https://dev.to/kalobtaulien/how-we-use-apis-at-arbingtoncom-3n5i</link>
      <guid>https://dev.to/kalobtaulien/how-we-use-apis-at-arbingtoncom-3n5i</guid>
      <description>&lt;p&gt;Let's talk about APIs. This is a subject I feel like every developer needs to know about. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;In this article we'll be talking about the API's we use at &lt;a href="https://arbington.com"&gt;Arbington.com&lt;/a&gt;, why we use them, and how they make our lives easier.&lt;/strong&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-on-the-menu"&gt;
  &lt;/a&gt;
  What's on the menu?
&lt;/h2&gt;

&lt;p&gt;Here's a list of API's we'll talk about in this article. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Stripe for receiving payments&lt;/li&gt;
&lt;li&gt;MailChimp and Sendy.co for sending emails&lt;/li&gt;
&lt;li&gt;Airtable for slicing and dicing data and keeping track of tasks&lt;/li&gt;
&lt;li&gt;Dropbox for importing videos from server to server to bypass slow user upload speeds &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;boto3&lt;/code&gt; for AWS S3 management. &lt;/li&gt;
&lt;li&gt;CloudFlare for video streaming&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#but-first-what-is-an-api"&gt;
  &lt;/a&gt;
  But first, what is an API?
&lt;/h3&gt;

&lt;p&gt;I'm going to avoid telling you what it stands for, because it doesn't matter. &lt;/p&gt;

&lt;p&gt;What does matter is how they work and why they exist. &lt;/p&gt;

&lt;p&gt;So.. computers have lots of different programming languages and different ways to communicate with each other. You're likely reading this article on dev.to using a standard browser, which uses the HTTP protocol to send and receive data. (That's an oversimplification) &lt;/p&gt;

&lt;p&gt;With all that variation from computer to computer comes the need to be able to talk to each other, make requests from other computers, and ask them to do things for us. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-you-need-to-know"&gt;
  &lt;/a&gt;
  What you need to know.
&lt;/h3&gt;

&lt;p&gt;API's have different ways to make requests. The most common for us is a RESTful API. That means we make explicit requests to a certain computer (called an endpoint) and sometimes pass data to that endpoint to guide the other computer in its task. &lt;/p&gt;

&lt;p&gt;These often look like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;GET&lt;/code&gt; requests. They GET information and are typically read-only. &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;POST&lt;/code&gt; requests. They SEND information in other to create some data on another computer &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;DELETE&lt;/code&gt; requests. They DELETE information on another computer. &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;PUT/PATCH&lt;/code&gt; requests. They make updates to existing information on another computer. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I have a rad 40 minute course that goes into more depth about RESTful APIs on Arbington. &lt;a href="https://arbington.com/courses/restful-apis-and-how-to-understand-apis/"&gt;Check it out here.&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#payments-with-stripe"&gt;
  &lt;/a&gt;
  Payments with Stripe
&lt;/h3&gt;

&lt;p&gt;Hands down the best API I've ever used. It's simple, supports lots of languages and most importantly the documentation is easy to ready and search through. &lt;/p&gt;

&lt;p&gt;While they offer a bunch of no-code solutions, we prefer to get our hands dirty and handle payments directly. By getting in there and using the Stripe API, we can create subscriptions on the fly when a user does a thing (clicks a page or fills out a form, for instance), and modify existing prices with coupon codes. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Stripe makes life better because...&lt;/strong&gt;&lt;br&gt;
We can accept one-time payments and monthly subscriptions with just a few lines of code. And it's secure! No storing credit card information on our servers and that's great because it's one less thing we need to deal with. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#email-with-mailchimp"&gt;
  &lt;/a&gt;
  Email with Mailchimp
&lt;/h3&gt;

&lt;p&gt;We aren't using this A LOT but we've used it a handful of times to take lists of users that have opted in to our mailing list, and put them all into a Mailchimp list. &lt;/p&gt;

&lt;p&gt;We do the same with Sendy.co. We also host our own campaign management system called Sendy - it uses Amazon SES and gives us 50,000 free emails per day. It comes with a very light endpoint, but not API client - so we wrote our own using Python and the &lt;code&gt;requests&lt;/code&gt; Python package. &lt;/p&gt;

&lt;p&gt;If you've ever gotten an email from us, chances are you went through this API process to send data from our website to our email sending website where the team can write dedicated emails and updates to you. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Mailchimp and Sendy.co makes life better because...&lt;/strong&gt;&lt;br&gt;
We can easily send emails to people expecting to hear from us. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#data-analysis-and-collection-with-airtable"&gt;
  &lt;/a&gt;
  Data analysis and collection with Airtable
&lt;/h3&gt;

&lt;p&gt;My second favorite tool: Airtable. We use &lt;a href="https://airtable-python-wrapper.readthedocs.io/en/airtable-python-wrapper/"&gt;airtable-python-wrapper&lt;/a&gt; to make basic API requests to send data to Airtable for internal use (like tracking courses) and occasionally to pull data down from Airtable. &lt;/p&gt;

&lt;p&gt;In the last post I talked about scraping 10s of thousands of data points and putting them in Airtable. Well, occasionally we need to pull that data out - so we use their API for that.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Airtable makes life better because...&lt;/strong&gt;&lt;br&gt;
It's easier than Google Sheets, has a nice API to work with huge amounts of data, and it's easier to work with the data once it's in Airtable than using Excel. (But it's pricy for big teams with big data) &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#files-with-dropbox"&gt;
  &lt;/a&gt;
  Files with Dropbox
&lt;/h3&gt;

&lt;p&gt;My third favorite tool, but frankly their API is overly complicated. It's ultra powerful, but not very friendly for devs that are new to the Dropbox API. &lt;/p&gt;

&lt;p&gt;We use this to move files to and from servers. &lt;/p&gt;

&lt;p&gt;Have you ever had to upload a video and it took AGES to finish? &lt;/p&gt;

&lt;p&gt;We have also run into that. And it sucks. It's a lot of waiting around and slowing down your internet so you can't do very much while it's happening. &lt;/p&gt;

&lt;p&gt;Thankfully I have gig internet - aka super fast lightning power mode internet - so I can upload insanely fast. And I put everything into Dropbox. &lt;/p&gt;

&lt;p&gt;Using the Dropbox API my team can click through the folders (on our site, not on Dropbox.com) and import entire folders worth of content. &lt;/p&gt;

&lt;p&gt;It creates a unique download link for each video and then a background server can download the file and upload it to wherever it needs to go. In this case, it goes to S3 or CloudFlare. More on those in just a second. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dropbox makes life better because...&lt;/strong&gt;&lt;br&gt;
It lets us move large video files from one server to another without human interference. It makes slow uploads a non-problem for us. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#more-files-with-aws-s3"&gt;
  &lt;/a&gt;
  More files with AWS S3
&lt;/h3&gt;

&lt;p&gt;Ok, I'm not the biggest fan of S3. Frankly, it's expensive compared to other solutions. But it's also one of the oldest unlimited object stores out there and has a decent API. We use &lt;code&gt;boto3&lt;/code&gt; (a Python package) to upload files to S3, and to securely download them too. &lt;/p&gt;

&lt;p&gt;Once a Dropbox file is put into S3, we get a unique URL for video. Then we use CloudFlare Stream's API to copy the video to CloudFlare Stream, where they'll transcode the video and store it for us. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;S3 makes life better because...&lt;/strong&gt;&lt;br&gt;
We can store unlimited files in there and securely pull out files when we need them. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#video-streaming-with-cloudflare-stream"&gt;
  &lt;/a&gt;
  Video streaming with CloudFlare Stream
&lt;/h3&gt;

&lt;p&gt;CloudFlare Stream is how we host our videos. It's powerful, relatively inexpensive and handles a lot of video encoding pain points we didn't want to handle in the early days. &lt;/p&gt;

&lt;p&gt;And it comes with a "copy" feature - pass it a URL and it'll download the video. So we pass it an S3 or Dropbox URL and it magically appears in CloudFlare Stream. &lt;/p&gt;

&lt;p&gt;We use plain Python and the &lt;code&gt;requests&lt;/code&gt; library to make this happen. &lt;/p&gt;

&lt;p&gt;Then we have a background server polling CloudFlare for updates to tell us when a video is done encoding and it's ready for playback. (Or if there was an error) &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;CloudFlare makes life better because...&lt;/strong&gt;&lt;br&gt;
Honestly, I'm a HUGE fan of CloudFlare. Use them for as much as you can! But CloudFlare Stream makes video encoding super easy and we don't have to worry about a custom video player.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#internal-apis"&gt;
  &lt;/a&gt;
  Internal APIs
&lt;/h3&gt;

&lt;p&gt;We have a lot of endpoints that can only be accessed through Ajax/Fetch requests using JavaScript. These use RESTful API methods: GET to get data, POST to create data, and DELETE to delete data. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Internal APIs make life better because...&lt;/strong&gt;&lt;br&gt;
We can use JavaScript to change/add/delete data without refreshing the page. Some pages are heavy with assets and queries, and this lets the user take an action without reloading the page. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#master-apis"&gt;
  &lt;/a&gt;
  Master APIs
&lt;/h2&gt;

&lt;p&gt;I actually have a best selling course to teach you about RESTful APIs. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://arbington.com/courses/restful-apis-and-how-to-understand-apis/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UYGHtKnX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9q6v0ypu79i9od0erxxb.jpg" alt="Restful API crash course" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#learn-all-the-things"&gt;
  &lt;/a&gt;
  Learn all the things!
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://arbington.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nKoazo5s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mr8ujryc524ygu92qbcz.png" alt="Arbington.com" width="880" height="185"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;APIs are important to learn, but so is learning a solid programming language like Python or JavaScript (or Java, C, C#, etc). &lt;/p&gt;

&lt;p&gt;Whichever programming language you think you should learn, take a look for those courses on &lt;a href="https://arbington.com/categories/subcategory/web-development/"&gt;Arbington.com&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#up-next"&gt;
  &lt;/a&gt;
  Up next...
&lt;/h2&gt;

&lt;p&gt;Let's talk about handling payments with Stripe, and why you should 100% use Stripe instead of any other service. &lt;/p&gt;

</description>
      <category>startup</category>
      <category>api</category>
      <category>python</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Full-Stack Monitoring &amp; Incident Response Tendencies 2021</title>
      <author>Sonia Belokur</author>
      <pubDate>Tue, 30 Nov 2021 15:48:33 +0000</pubDate>
      <link>https://dev.to/soniabelokur/full-stack-monitoring-incident-response-tendencies-2021-4jm4</link>
      <guid>https://dev.to/soniabelokur/full-stack-monitoring-incident-response-tendencies-2021-4jm4</guid>
      <description>&lt;p&gt;While figures are persuasive and experiences might be useful (and sometimes painful) - trends might reveal some unexpected facts. We have put them together in a human-readable format to explain the main tendencies in the #monitoring and #incidentresponse niches.&lt;/p&gt;

&lt;p&gt;What are the most frequently used monitoring approaches? What do DevOps struggle with? Why is full-stack monitoring worth investing in?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://insightcat.com/"&gt;InsightCat&lt;/a&gt; has analyzed the survey data from technical experts, the surveys on third-party sources and Social Media, and, of course, our own experience from day-to-day interaction with businesses worldwide, from SMBs to Enterprises.&lt;/p&gt;

&lt;p&gt;There were 100+ respondents in this study, incl. tech experts and managers. The third-party resources are listed below:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://victorops.com/incident.../six-ways-reduce-downtime/"&gt;https://victorops.com/incident.../six-ways-reduce-downtime/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wikibon.com/breaking-analysis-cutting-noise-full.../"&gt;https://wikibon.com/breaking-analysis-cutting-noise-full.../&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Learn more about full-stack monitoring and incident response tendencies in 2021 👇&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.facebook.com/insightcat"&gt;https://www.facebook.com/insightcat&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--23eVP_zU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z5dr8h5v9fubxinonnbf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--23eVP_zU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z5dr8h5v9fubxinonnbf.png" alt="Image description" width="880" height="816"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Yns-Nw1s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/siu3hojqqfgaxq9x0zsy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Yns-Nw1s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/siu3hojqqfgaxq9x0zsy.png" alt="Image description" width="880" height="816"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KfYNL8ns--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sl4w7otplpkfwbxo3jwg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KfYNL8ns--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sl4w7otplpkfwbxo3jwg.png" alt="Image description" width="880" height="816"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QoMhezID--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9goqg2eyuqzyhnn30ojo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QoMhezID--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9goqg2eyuqzyhnn30ojo.png" alt="Image description" width="880" height="816"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ndttp8aM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1401z85bj9lmuz0nzrum.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ndttp8aM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1401z85bj9lmuz0nzrum.png" alt="Image description" width="880" height="816"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--t4ouyyRb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ygdf1c3x48onw88hsqtm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t4ouyyRb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ygdf1c3x48onw88hsqtm.png" alt="Image description" width="880" height="816"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>monitoring</category>
      <category>devops</category>
      <category>performance</category>
    </item>
    <item>
      <title>Flutter Alert Dialog with Close Button </title>
      <author>rrtutors</author>
      <pubDate>Tue, 30 Nov 2021 15:45:24 +0000</pubDate>
      <link>https://dev.to/rrtutors/flutter-alert-dialog-with-close-button-23d0</link>
      <guid>https://dev.to/rrtutors/flutter-alert-dialog-with-close-button-23d0</guid>
      <description>&lt;p&gt;What is an Alert Dialog?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://rrtutors.com/tutorials/alert-dialog-with-close-button-flutter"&gt;Flutter Alert Dialog&lt;/a&gt; is a Popup Box will use to show small messages on Current window. This Alert Box can be of Warning/Info/Network alerts...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;DialogButton&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;StatelessWidget&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="nc"&gt;Widget&lt;/span&gt; &lt;span class="n"&gt;child&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="nc"&gt;Color&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="nc"&gt;Color&lt;/span&gt; &lt;span class="n"&gt;highlightColor&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="nc"&gt;Color&lt;/span&gt; &lt;span class="n"&gt;splashColor&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="nc"&gt;Gradient&lt;/span&gt; &lt;span class="n"&gt;gradient&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="nc"&gt;BorderRadius&lt;/span&gt; &lt;span class="n"&gt;radius&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="nc"&gt;Function&lt;/span&gt; &lt;span class="n"&gt;onPressed&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="nc"&gt;BoxBorder&lt;/span&gt; &lt;span class="n"&gt;border&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="nc"&gt;EdgeInsets&lt;/span&gt; &lt;span class="n"&gt;padding&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="nc"&gt;EdgeInsets&lt;/span&gt; &lt;span class="n"&gt;margin&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;/// DialogButton constructor&lt;/span&gt;
  &lt;span class="nc"&gt;DialogButton&lt;/span&gt;&lt;span class="o"&gt;({&lt;/span&gt;
    &lt;span class="nc"&gt;Key&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
    &lt;span class="nd"&gt;@required&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;child&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;40.0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;highlightColor&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;splashColor&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;gradient&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;radius&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;border&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;padding&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nc"&gt;EdgeInsets&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;only&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;left:&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nl"&gt;right:&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;margin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nc"&gt;EdgeInsets&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;all&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
    &lt;span class="nd"&gt;@required&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;onPressed&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="o"&gt;})&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;super&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;key:&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

  &lt;span class="c1"&gt;/// Creates alert buttons based on constructor params&lt;/span&gt;
  &lt;span class="nd"&gt;@override&lt;/span&gt;
  &lt;span class="nc"&gt;Widget&lt;/span&gt; &lt;span class="nf"&gt;build&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;BuildContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;Container&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
      &lt;span class="nl"&gt;padding:&lt;/span&gt; &lt;span class="n"&gt;padding&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
      &lt;span class="nl"&gt;margin:&lt;/span&gt; &lt;span class="n"&gt;margin&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
      &lt;span class="nl"&gt;width:&lt;/span&gt; &lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
      &lt;span class="nl"&gt;height:&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
      &lt;span class="nl"&gt;decoration:&lt;/span&gt; &lt;span class="nc"&gt;BoxDecoration&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
          &lt;span class="nl"&gt;color:&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="o"&gt;??&lt;/span&gt; &lt;span class="nc"&gt;Theme&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;of&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;accentColor&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
          &lt;span class="nl"&gt;gradient:&lt;/span&gt; &lt;span class="n"&gt;gradient&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
          &lt;span class="nl"&gt;borderRadius:&lt;/span&gt; &lt;span class="n"&gt;radius&lt;/span&gt; &lt;span class="o"&gt;??&lt;/span&gt; &lt;span class="nc"&gt;BorderRadius&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;circular&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
          &lt;span class="nl"&gt;border:&lt;/span&gt; &lt;span class="n"&gt;border&lt;/span&gt; &lt;span class="o"&gt;??&lt;/span&gt; &lt;span class="nc"&gt;Border&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;all&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;color:&lt;/span&gt; &lt;span class="nc"&gt;Colors&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;transparent&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nl"&gt;width:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;)),&lt;/span&gt;
      &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="nc"&gt;Material&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
        &lt;span class="nl"&gt;color:&lt;/span&gt; &lt;span class="nc"&gt;Colors&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;transparent&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="nc"&gt;InkWell&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
          &lt;span class="nl"&gt;highlightColor:&lt;/span&gt; &lt;span class="n"&gt;highlightColor&lt;/span&gt; &lt;span class="o"&gt;??&lt;/span&gt; &lt;span class="nc"&gt;Theme&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;of&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;highlightColor&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
          &lt;span class="nl"&gt;splashColor:&lt;/span&gt; &lt;span class="n"&gt;splashColor&lt;/span&gt; &lt;span class="o"&gt;??&lt;/span&gt; &lt;span class="nc"&gt;Theme&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;of&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;splashColor&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
          &lt;span class="nl"&gt;onTap:&lt;/span&gt; &lt;span class="n"&gt;onPressed&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
          &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="nc"&gt;Center&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
            &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;child&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
          &lt;span class="o"&gt;),&lt;/span&gt;
        &lt;span class="o"&gt;),&lt;/span&gt;
      &lt;span class="o"&gt;),&lt;/span&gt;
    &lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Read More about Flutter Alert Dialog with Close Button in the below link&lt;br&gt;
&lt;a href="https://rrtutors.com/tutorials/alert-dialog-with-close-button-flutter"&gt;Flutter alert Dialog with close button&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QY0GL5ic--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://rrtutors.com/uploads/langpostimg/Alert-dialog-with-close-button.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QY0GL5ic--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://rrtutors.com/uploads/langpostimg/Alert-dialog-with-close-button.png" alt="Flutter alert dialog " width="720" height="1280"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>flutter</category>
      <category>android</category>
      <category>100daysofcode</category>
    </item>
    <item>
      <title>Asciinema actions</title>
      <author>Oscar Nevárez</author>
      <pubDate>Tue, 30 Nov 2021 15:42:56 +0000</pubDate>
      <link>https://dev.to/insan3/asciinema-actions-bga</link>
      <guid>https://dev.to/insan3/asciinema-actions-bga</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bOZAtkZB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ja0okslju77h2jboame0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bOZAtkZB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ja0okslju77h2jboame0.png" alt="Asciinema+Markdown+GithubActions=AWESOMENESS" width="880" height="370"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#my-workflow"&gt;
  &lt;/a&gt;
  My Workflow
&lt;/h3&gt;

&lt;p&gt;So I had this idea of turning code blocks within markdown files  gifs. That's what this Github Action does :D !&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#introducing-action"&gt;
  &lt;/a&gt;
  Introducing action
&lt;/h4&gt;

&lt;p&gt;Turns this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;#Here we go!&lt;/span&gt;
npm i &lt;span class="nt"&gt;-g&lt;/span&gt; @org/awesome-project
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;into this&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tzgVrdX9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://github.com/oscarnevarezleal/awesome-project/raw/main/.asciicast/block-1.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tzgVrdX9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://github.com/oscarnevarezleal/awesome-project/raw/main/.asciicast/block-1.gif" alt="a block of code transformed into a gif image" width="590" height="59"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#usage"&gt;
  &lt;/a&gt;
  Usage
&lt;/h4&gt;

&lt;p&gt;There are actually two actions working here.&lt;/p&gt;

&lt;p&gt;1) &lt;a href="https://github.com/oscarnevarezleal/asccinema/actions/asccicast"&gt;asccicast&lt;/a&gt; parses a mardown file and produces description files that helps to traverse its content.&lt;/p&gt;

&lt;p&gt;2) &lt;a href="https://github.com/oscarnevarezleal/asccinema/actions/asciicast2gif"&gt;asciicast2gif&lt;/a&gt; use json files produced by &lt;a href="https://github.com/oscarnevarezleal/asccinema/actions/asccicast"&gt;asccicast&lt;/a&gt; and turn them into GIF files. this action also accepts JSON files from &lt;a href="https://asciinema.org/"&gt;asciinema.org&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here's a online &lt;a href="https://github.com/oscarnevarezleal/awesome-project"&gt;demo&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;
&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ci&lt;/span&gt;

&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;push&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;branches&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;dev'&lt;/span&gt; &lt;span class="pi"&gt;]&lt;/span&gt;

&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="c1"&gt;# This workflow contains a single job called "build"&lt;/span&gt;
  &lt;span class="na"&gt;build&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;# The type of runner that the job will run on&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;

    &lt;span class="c1"&gt;# Steps represent a sequence of tasks that will be executed as part of the job&lt;/span&gt;
    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="c1"&gt;# Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/checkout@v2&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Asccinema generation&lt;/span&gt;
        &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;asccinema&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;oscarnevarezleal/asciinema-actions/actions/asccicast@dev&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;args&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;generate -s README.template.md -o README.md&lt;/span&gt;
          &lt;span class="na"&gt;config&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;.asciinema.json&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Theme block &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;oscarnevarezleal/asciinema-actions/actions/asciicast2gif@dev&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;theme&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;tango&lt;/span&gt;
          &lt;span class="na"&gt;rows&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5&lt;/span&gt;
          &lt;span class="na"&gt;scale&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
          &lt;span class="na"&gt;files&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;block-0.*"&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Theme block &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;oscarnevarezleal/asciinema-actions/actions/asciicast2gif@dev&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;theme&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;solarized-dark&lt;/span&gt;
          &lt;span class="na"&gt;rows&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;
          &lt;span class="na"&gt;scale&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
          &lt;span class="na"&gt;files&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;block-1.*"&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Theme block &lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;oscarnevarezleal/asciinema-actions/actions/asciicast2gif@dev&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;theme&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;monokai&lt;/span&gt;
          &lt;span class="na"&gt;rows&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;
          &lt;span class="na"&gt;scale&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
          &lt;span class="na"&gt;files&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;block-2.*"&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;stefanzweifel/git-auto-commit-action@v4&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="c1"&gt;# Optional, but recommended&lt;/span&gt;
          &lt;span class="c1"&gt;# Defaults to "Apply automatic changes"&lt;/span&gt;
          &lt;span class="na"&gt;commit_message&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Automated Change&lt;/span&gt;

          &lt;span class="c1"&gt;# Optional. Used by `git-commit`.&lt;/span&gt;
          &lt;span class="c1"&gt;# See https://git-scm.com/docs/git-commit#_options&lt;/span&gt;
          &lt;span class="na"&gt;commit_options&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;--no-verify&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;--signoff'&lt;/span&gt;

          &lt;span class="c1"&gt;# Optional glob pattern of files which should be added to the commit&lt;/span&gt;
          &lt;span class="c1"&gt;# Defaults to all (.)&lt;/span&gt;
          &lt;span class="c1"&gt;# See the `pathspec`-documentation for git&lt;/span&gt;
          &lt;span class="c1"&gt;# - https://git-scm.com/docs/git-add#Documentation/git-add.txt-ltpathspecgt82308203&lt;/span&gt;
          &lt;span class="c1"&gt;# - https://git-scm.com/docs/gitglossary#Documentation/gitglossary.txt-aiddefpathspecapathspec&lt;/span&gt;
          &lt;span class="na"&gt;file_pattern&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;.asciicast/*.gif&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;*.md"&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;My recomended workflow is to keep a markdown template ( the one containing the code fences ) e.g &lt;code&gt;README.template.md&lt;/code&gt; so the final process results in a modified version of that file &amp;gt; &lt;code&gt;README.md&lt;/code&gt;. Keeping both files in the repository will guarantee consistency and prevent any content missmatch.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#submission-category"&gt;
  &lt;/a&gt;
  Submission Category:
&lt;/h3&gt;

&lt;p&gt;Maintainer Must-Haves / Wacky Wildcards&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#yaml-file-or-link-to-code"&gt;
  &lt;/a&gt;
  Yaml File or Link to Code
&lt;/h3&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/oscarnevarezleal"&gt;
        oscarnevarezleal
      &lt;/a&gt; / &lt;a href="https://github.com/oscarnevarezleal/asciinema-actions"&gt;
        asciinema-actions
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
asccinema-action&lt;/h1&gt;
&lt;/div&gt;

  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/oscarnevarezleal/asciinema-actions"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#additional-resources-info"&gt;
  &lt;/a&gt;
  Additional Resources / Info
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://asciinema.org/"&gt;https://asciinema.org/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>actionshackathon21</category>
      <category>github</category>
      <category>opensource</category>
    </item>
    <item>
      <title>10 Things You Didn’t Know You Could Do With Javascript</title>
      <author>Saji Wang</author>
      <pubDate>Tue, 30 Nov 2021 15:35:49 +0000</pubDate>
      <link>https://dev.to/codesphere/10-things-you-didnt-know-you-could-do-with-javascript-3k2l</link>
      <guid>https://dev.to/codesphere/10-things-you-didnt-know-you-could-do-with-javascript-3k2l</guid>
      <description>&lt;p&gt;This Thanksgiving season, I'm especially grateful for Javascript. Since its announcement in December 1995(Javascript's birthday is actually this week!), it has brought life to the web.&lt;/p&gt;

&lt;p&gt;Long gone, however, are the days where all Javascript did was spice up some HTML pages. Today, virtually anything can be done with Javascript. Let's highlight some of the amazing things that you may not have known are possible with JS.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-native-desktop-apps-with-electron"&gt;
  &lt;/a&gt;
  1. Native Desktop Apps with Electron
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HUDBQ-Fl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ydn4burt96todsmmjvk5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HUDBQ-Fl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ydn4burt96todsmmjvk5.png" alt="electron logo" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To start off, plenty of offline, native desktop apps are actually built with Javascript, usually with Electron or the Chromium Embedded Framework. In fact, some of your favorite desktop applications, including VScode, Spotify, and Slack, are all built using Javascript.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-machine-learning"&gt;
  &lt;/a&gt;
  2. Machine Learning
&lt;/h3&gt;

&lt;p&gt;While Javascript and Machine Learning may not be two things that are often put together in the same sentence. Alas, many in the Machine Learning community have found a home in Javascript.&lt;/p&gt;

&lt;p&gt;Libraries like Tensorflow.js allow people to easily create, train, and use machine learning models all in Javascript.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DU9cMrVH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vcpkuxlzcc2b7nmck5uf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DU9cMrVH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vcpkuxlzcc2b7nmck5uf.png" alt="tensorflowjs logo" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-vr-websites"&gt;
  &lt;/a&gt;
  3. VR Websites
&lt;/h3&gt;

&lt;p&gt;If you've been keeping up with our blog, you'll know about Aframe.io, one of many libraries that now allow you to build VR websites with the power of Javascript.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zs1-7V_f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ori9a179srvbq837c348.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zs1-7V_f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ori9a179srvbq837c348.png" alt="vr gif" width="880" height="428"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-mobile-development"&gt;
  &lt;/a&gt;
  4. Mobile Development
&lt;/h3&gt;

&lt;p&gt;Okay, this one may not be that surprising to many of you. Regardless, frameworks like React Native allow you to build native mobile apps all with Javascript. React Native has grown massively in popularity over the past couple of years, primarily because it's empowered those from a Web Development background to enter the world of app development.&lt;/p&gt;

&lt;p&gt;Interested in learning how to get started with React Native? Let us know down below and we'll get to work on a tutorial!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-quantum-computing"&gt;
  &lt;/a&gt;
  5. Quantum Computing
&lt;/h3&gt;

&lt;p&gt;Yes - you can simulate quantum computers in Javascript - well sort of. Obviously running Javascript on your Macbook isn't going to suddenly give you the power of a Quantum computer.&lt;/p&gt;

&lt;p&gt;Nevertheless, if you're looking to play around with Quantum circuits and get your hands dirty with Quantum Computing look no further than Q.js&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--atUp_flQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/us2bln6xu0drd5bz2sy6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--atUp_flQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/us2bln6xu0drd5bz2sy6.png" alt="quantum logo" width="300" height="80"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-trade-stocks"&gt;
  &lt;/a&gt;
  6. Trade Stocks
&lt;/h3&gt;

&lt;p&gt;While Javascript is rarely used professionally (firms usually opt for lower-level languages which are faster), Javascript can in fact be used to trade stocks.&lt;br&gt;
In fact, we wrote an article showing you just how easy it is to write trading algorithms using APIs. You can check out an article we wrote using Python here, but the exact same API can be used with Javascript!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#7-game-development"&gt;
  &lt;/a&gt;
  7. Game Development
&lt;/h3&gt;

&lt;p&gt;Though Browser Games certainly don't have the prominence they once had, they are far from dead. There are loads of Javascript libraries that you can use to create complex games that run right out of the browser. Some of our personal favorites are MelonJS and ImpactJS.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mFK3lBkc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1hggif7p1oo9wrfkxgqz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mFK3lBkc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1hggif7p1oo9wrfkxgqz.png" alt="melonjs logo" width="880" height="488"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#8-smart-watch-w-banglejs"&gt;
  &lt;/a&gt;
  8. Smart Watch w/ Bangle.js
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dV7wUhtZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/88eqzrb7ghw5bphzi6ca.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dV7wUhtZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/88eqzrb7ghw5bphzi6ca.png" alt="smart watch with banglejs" width="880" height="483"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bangle is a programmable, open-source, smartwatch, running completely on Javascript. BangleJS was created by programmer Gordon Williams, who took an off-the-shelf smartwatch, reverse engineered it, and installed a javascript interpreter to create the first batch of BangleJS smartwatches.&lt;/p&gt;

&lt;p&gt;In fact, the Smart Watch runs on Espruino, an open-source Javascript interpreter for microcontrollers also created by Williams. Using Espruino, you can really use Javascript to get many electronics running Javascript!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#9-building-dapps-and-smart-contracts-for-ethereum"&gt;
  &lt;/a&gt;
  9. Building dApps and Smart Contracts for Ethereum
&lt;/h3&gt;

&lt;p&gt;While we spoke a number of weeks ago about building Decentralized Databases with GunJS, Javascript can also be used to directly interact with the Ethereum Blockchain. This means that you can make Ethereum dApps and Smart Contacts with libraries like Ethers.js&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#10-a-web-ide"&gt;
  &lt;/a&gt;
  10. A Web IDE
&lt;/h3&gt;

&lt;p&gt;Finally, at Codesphere, we're using Javascript (mostly Typescript) to build an all-in-one Web IDE and Cloud Platform. Using Web Technologies, we're able to bring the full power of the cloud to any person with a working browser. &lt;a href="https://link.codesphere.com/GM"&gt;Give us a try&lt;/a&gt; and let us know what you think!&lt;/p&gt;

&lt;p&gt;What unconventional Javascript application did we leave out? Let us know down below! Happy Coding!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>machinelearning</category>
      <category>webdev</category>
      <category>gamedev</category>
    </item>
    <item>
      <title>6 Beginner JavaScript Mistakes to Avoid!</title>
      <author>Danish Saleem</author>
      <pubDate>Tue, 30 Nov 2021 15:33:44 +0000</pubDate>
      <link>https://dev.to/mrdanishsaleem/6-beginner-javascript-mistakes-to-avoid-2bcn</link>
      <guid>https://dev.to/mrdanishsaleem/6-beginner-javascript-mistakes-to-avoid-2bcn</guid>
      <description>&lt;p&gt;JavaScript can be a little daunting to a beginner but it’s important to watch out for mistakes. So, I've rounded up 6 common mistakes beginners make and how you can avoid them, along with a little advice for any aspiring developers/programmers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#assignment-vs-equality-operators"&gt;
  &lt;/a&gt;
  Assignment vs equality operators
&lt;/h2&gt;

&lt;p&gt;In JavaScript a single equals sign (=) and double/triple equals sign (==/===) mean very different things so don't get them confused.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Wrong&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;JavaScript&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;JS&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="c1"&gt;// output = JS&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Right&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;JavaScript&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;JS&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="c1"&gt;// no output&lt;/span&gt;

&lt;span class="c1"&gt;// OR&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;JS&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="c1"&gt;// no output&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#not-using-default-values"&gt;
  &lt;/a&gt;
  Not using default values
&lt;/h2&gt;

&lt;p&gt;Setting default values for dynamic or optional variables is good practice to prevent unexpected errors due to undefined values.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Wrong&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;addNumbers&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;addNumbers&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// NaN&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Right&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;addNumbers&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;addNumbers&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// 0&lt;/span&gt;

&lt;span class="nx"&gt;addNumbers&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 5&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#addition-vs-concatenation"&gt;
  &lt;/a&gt;
  Addition vs concatenation
&lt;/h2&gt;

&lt;p&gt;A plus symbol (+) is used for both mathematics addition and for combining string. Keep that in mind to avoid any unexpected issues.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Wrong&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;50&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 3050&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Right&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 80&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Java&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Script&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// JavaScript&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#improper-naming-of-variables"&gt;
  &lt;/a&gt;
  Improper naming of variables
&lt;/h2&gt;

&lt;p&gt;It's important to name variables as precisely and accurately as possible. This will prevent accidental duplication and make the code easier to read and understand.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Wrong&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;600&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;total&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Right&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;price&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;600&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;discount&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;totalPrice&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#undefined-is-not-the-same-as-null"&gt;
  &lt;/a&gt;
  Undefined is not the same as null
&lt;/h2&gt;

&lt;p&gt;Undefined means a variable has not been assigned a value, while null is a special assignment value, which can be assigned to a variable as a representation of no value.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Wrong&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;variable&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;variable&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// undefined&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Right&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;emptyVariable&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;emptyVariable&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// null&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#misunderstanding-scope"&gt;
  &lt;/a&gt;
  Misunderstanding scope
&lt;/h2&gt;

&lt;p&gt;A scope can be global or local and refers to the current context of code, which determines the accessibility of variables to JavaScript.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Wrong&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Error: message is not defined&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Right&lt;/span&gt;

&lt;span class="c1"&gt;// Global scope variable&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;firstName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Dev&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;showMessage&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Local scope variable&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Welcome back&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;showMessage&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// Welcome back, Dev&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#a-little-advice"&gt;
  &lt;/a&gt;
  A little advice
&lt;/h3&gt;

&lt;p&gt;Learning JavaScript (or any programming language) is not all about writing the code or learning the syntax. A big chunk of it is problem-solving and learning the process of identifying and solving the problems you come across. So make sure you don't forget this part and use all the resources available to you to learn how to solve problems. It's what will take you from being a good developer to becoming a great developer!&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#lets-connect"&gt;
  &lt;/a&gt;
  Let's connect 💜
&lt;/h3&gt;

&lt;p&gt;You can follow me on &lt;a href="https://twitter.com/MrDanishSaleem"&gt;Twitter&lt;/a&gt;, &lt;a href="https://www.instagram.com/mrdanishsaleem/"&gt;Instagram&lt;/a&gt; &amp;amp; &lt;a href="https://github.com/mrdanishsaleem/"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you like this post. Kindly support me by &lt;a href="https://www.buymeacoffee.com/mrdanishsaleem"&gt;Buying Me a Coffee&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qyC5Wtwl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fefzbxbnwww7tkght33w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qyC5Wtwl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fefzbxbnwww7tkght33w.png" alt="Buy Me a Coffee" width="880" height="247"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>My Second Hackathon Was Awesome! Here are some tips for a great hackathon.</title>
      <author>Vaarun Sinha</author>
      <pubDate>Tue, 30 Nov 2021 15:30:28 +0000</pubDate>
      <link>https://dev.to/vaarun_sinha/my-second-hackathon-was-awesome-here-are-some-tips-for-a-great-hackathon-320m</link>
      <guid>https://dev.to/vaarun_sinha/my-second-hackathon-was-awesome-here-are-some-tips-for-a-great-hackathon-320m</guid>
      <description>&lt;p&gt;In my previous post, I rambled about how my first hackathon was horrible, but I joined another hackathon! And this time it was awesome! 😃&lt;/p&gt;

&lt;p&gt;So we started with our amazing Idea educrypt, though none of us knew how to make a discord bot, except me I had little knowledge... Our project was based on discord and the web. &lt;/p&gt;

&lt;p&gt;You know why this hackathon was successful?  Because of team work.&lt;/p&gt;

&lt;p&gt;So here are some tips for a successful team:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Be respectful to each other.&lt;/li&gt;
&lt;li&gt;Listen to every idea, then decide.&lt;/li&gt;
&lt;li&gt;Don't be stubborn&lt;/li&gt;
&lt;li&gt;Give your own ideas&lt;/li&gt;
&lt;li&gt;Complete the work assigned to you&lt;/li&gt;
&lt;li&gt;And have fun!&lt;/li&gt;
&lt;li&gt;Contribute&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can see, our project on devpost: &lt;a href="https://devpost.com/software/educrypt"&gt;https://devpost.com/software/educrypt&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Also the organisers were always active in discord, and were really helpful.&lt;/p&gt;

&lt;p&gt;So great team + great organisers are the main elements which identify a great hackathon experience.&lt;/p&gt;

&lt;p&gt;Here are some things to consider before teaming with other people:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Time zone,(if they are dedicated and can meet in early morning or late nights then this does not matter)&lt;/li&gt;
&lt;li&gt;Skills (Do they have skills, similar to yours? Even if they have only some skills, if they can learn new things fast, then this does not matter also.)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So I hope that you win your next hackathon, till then:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Happy Coding&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>programming</category>
      <category>python</category>
      <category>hackathon</category>
      <category>teamwork</category>
    </item>
    <item>
      <title>Complaining about Etsy Emails</title>
      <author>Patrick Kuny</author>
      <pubDate>Tue, 30 Nov 2021 15:30:16 +0000</pubDate>
      <link>https://dev.to/pmkuny/complaining-about-etsy-emails-9pl</link>
      <guid>https://dev.to/pmkuny/complaining-about-etsy-emails-9pl</guid>
      <description>&lt;p&gt;Recently, I've had the idea of &lt;a href="https://theconversation.com/the-rise-of-dark-web-design-how-sites-manipulate-you-into-clicking-168347"&gt;dark web design&lt;/a&gt; in my head. No, that doesn't mean a dark mode theme (of which I am a fan), but more the manipulation of UX elements to get users to interact in a certain way with a website (that is often not to the benefit of the user). &lt;/p&gt;

&lt;p&gt;While opinions may differ on the actual harm this may cause, one thing I hate more than most is when websites attempt to manipulate you into signing up for their platform after you've checked out as guest user.&lt;/p&gt;

&lt;p&gt;Let's take Etsy, for example. The entire order process within Etsy can be completed as a guest (which is great!).&lt;/p&gt;

&lt;p&gt;Unfortunately, tracking your order is a bit more tricky.&lt;/p&gt;

&lt;p&gt;The first email you get from Etsy contains information about your order, with a link to &lt;strong&gt;View Your Order&lt;/strong&gt;:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--q2fCMMsO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8sjut07q9s7pzflhbykk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q2fCMMsO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8sjut07q9s7pzflhbykk.png" alt="Image description" width="880" height="571"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Following that &lt;strong&gt;View Your Order&lt;/strong&gt; link will lead you to a sign up page:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OAs1lbxN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l6xkh9ule0cmgyxj947w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OAs1lbxN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l6xkh9ule0cmgyxj947w.png" alt="Image description" width="801" height="836"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Disappointing. &lt;/p&gt;

&lt;p&gt;The good news is, when the item actually ships, you get a separate email that lets you bypass account signup, for tracking your order. That page looks identical to the signup page, but includes a bypass link:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--De3OagCR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q8n899pa4obgnrph8jw9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--De3OagCR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q8n899pa4obgnrph8jw9.png" alt="Image description" width="880" height="391"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The third email you get, when the item is actually out for delivery, is again disappointing, removing the bypass link:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zbEJ104X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4a2spk9ssr4n27d64b3e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zbEJ104X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4a2spk9ssr4n27d64b3e.png" alt="Image description" width="880" height="371"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qTA5W-7g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/htbx4z8bt3zy9v6bnda0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qTA5W-7g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/htbx4z8bt3zy9v6bnda0.png" alt="Image description" width="880" height="383"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;My argument is that most e-commerce websites should provide what we saw in the second email, the ability to view tracking information and/or order status without having to sign up into another system. If the website is something I want to sign up for, I will do that of my own volition, and shouldn't be manipulated towards that signup process just to track an order I made.&lt;/p&gt;

</description>
      <category>ux</category>
    </item>
    <item>
      <title>Sending emails from your web app using your customers' email addresses </title>
      <author>Ayush Newatia</author>
      <pubDate>Tue, 30 Nov 2021 15:22:17 +0000</pubDate>
      <link>https://dev.to/ayushn21/sending-emails-from-your-web-app-using-your-customers-email-addresses-3m3j</link>
      <guid>https://dev.to/ayushn21/sending-emails-from-your-web-app-using-your-customers-email-addresses-3m3j</guid>
      <description>&lt;p&gt;Almost every web app needs to send email. In some cases, it might be desireable to send emails using your customers' email address. For example, if you're building a mailing list or newsletter app.&lt;/p&gt;

&lt;p&gt;But, how can one send an email from someone's personal email address without asking for their password or accessing their account? Before we can get into that, let's backtrack and bit and go over how email actually works.  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-an-email-anyway"&gt;
  &lt;/a&gt;
  What is an email anyway?
&lt;/h2&gt;

&lt;p&gt;Email's been around since the 70s and initially, it wasn't really designed to be secure. A raw email is just a plain text file and would look something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;From: John Doe &amp;lt;johndoe@example.com&amp;gt;
To: janedoe@example.com
Subject: Lorem ipsum
Content-Type: text/plain;
  charset=us-ascii
Content-Transfer-Encoding: 7bit
Message-Id: &amp;lt;14CC222D-A9F9-43D6-9580-8A62AFC87ECD@example.com&amp;gt;
Date: Thu, 1 Nov 2021 16:46:08 +0000

Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see this file has a number of headers defining who an email is &lt;code&gt;From&lt;/code&gt;, who it's &lt;code&gt;To&lt;/code&gt; and some other stuff followed by the actual content. This file is sent to something called an SMTP ( &lt;strong&gt;S&lt;/strong&gt;imple &lt;strong&gt;M&lt;/strong&gt;ail &lt;strong&gt;T&lt;/strong&gt;ransfer &lt;strong&gt;P&lt;/strong&gt;rotocol) server and that server sends the email to &lt;code&gt;janedoe@example.com&lt;/code&gt; from &lt;code&gt;johndoe@example.com&lt;/code&gt;.   &lt;/p&gt;

&lt;p&gt;In the email specification, there's literally nothing preventing you from impersonating someone else by putting their email in the &lt;code&gt;From&lt;/code&gt; field and sending a &lt;em&gt;forged&lt;/em&gt; email. Obviously this was a big issue and a number of security features have been tacked on top of the email specification to prevent this from happening.  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#authenticating-email-senders"&gt;
  &lt;/a&gt;
  Authenticating email senders
&lt;/h2&gt;

&lt;p&gt;Preventing &lt;a href="https://en.wikipedia.org/wiki/Email_spoofing"&gt;email spoofing&lt;/a&gt; means there needs to be some way to verify whether an email was actually sent by the person in the &lt;code&gt;From&lt;/code&gt; header. Two popular methods of doing this are &lt;a href="https://blog.ohmysmtp.com/blog/whats-a-DKIM-record/"&gt;DKIM&lt;/a&gt; (DomainKeys Identified Mail) and &lt;a href="https://blog.ohmysmtp.com/blog/whats-an-spf-record/"&gt;SPF&lt;/a&gt; (Sender Policy Framework).   &lt;/p&gt;

&lt;p&gt;For the purpose of this post, I'm not going to get too deep into the details of how those methods actually work. At a high level, DKIM authenticates a signature embedded in the email with a signature stored in the &lt;a href="https://en.wikipedia.org/wiki/Domain_Name_System"&gt;Domain Name System&lt;/a&gt; (DNS). A signature match would indicate the email was actually sent by the person it claims to be &lt;code&gt;From&lt;/code&gt;. SPF denotes which mail servers are allowed to send email for a given domain name. This will validate if an email has arrived from a server that's actually allowed to send email for the sender.  &lt;/p&gt;

&lt;p&gt;Between these two methods, it's pretty hard to send an email pretending to be someone else. More to the point, our intention is not to deceive or to break these security features. So how do we go about it?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sending-emails-on-behalf-of-others"&gt;
  &lt;/a&gt;
  Sending emails on behalf of others
&lt;/h2&gt;

&lt;p&gt;The email specification has a header for this very use case. It's the &lt;code&gt;Sender&lt;/code&gt; header. This is the exact wording of the specification for this header:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Specifies the mailbox of the agent responsible for the actual transmission of the message. Defined as standard by RFC 822.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This means DKIM and SPF validation will be done against the value in the &lt;code&gt;Sender&lt;/code&gt; header but in the recipient's Inbox, the sender will show as the value in the &lt;code&gt;From&lt;/code&gt; header. However, some providers like Gmail will show the email was sent "via" another address as shown below.  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mob4Z4T8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.chapter24.blog/1635373075JHd4e2UhR40CLRI4pGbwpQ" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mob4Z4T8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.chapter24.blog/1635373075JHd4e2UhR40CLRI4pGbwpQ" width="880" height="117"&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;
      How Gmail surfaces the "Sender" header&lt;br&gt;
    
    &lt;/p&gt;

&lt;p&gt;In the context of a mailing list or newsletter app, and the fact that we're not trying to do anything sneaky or to decieve the recipient, this behaviour is absolutely fine; I'd even say it's desirable.  &lt;/p&gt;

&lt;p&gt;This is exactly how my app, &lt;a href="https://scattergun.email"&gt;Scattergun&lt;/a&gt; can send emails using your email address. If you've choose to do so, we add in a &lt;code&gt;Sender&lt;/code&gt; header with a &lt;code&gt;ml.scattergun.email&lt;/code&gt; address unique to your mailing list. That's how we send emails using your email address without breaking any security measures!   &lt;/p&gt;

&lt;p&gt;It's important to note though, that the deliverability of these emails could be a bit inconsistent. Some email providers may not like the fact that the &lt;code&gt;Sender&lt;/code&gt; does not match the &lt;code&gt;From&lt;/code&gt; and flag the email as spam.&lt;/p&gt;

&lt;p&gt;At the end of the day, I think it's important to let the customer make that choice!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Scattergun is the easiest way to collect email addresses on your landing page and send emails to your mailing list. &lt;a href="https://scattergun.email"&gt;Get started for free&lt;/a&gt;!&lt;/em&gt;&lt;/p&gt;

</description>
      <category>email</category>
      <category>webdev</category>
      <category>programming</category>
      <category>tooling</category>
    </item>
    <item>
      <title>GitHub Issues to Wechat</title>
      <author>Hollow Man</author>
      <pubDate>Tue, 30 Nov 2021 15:09:56 +0000</pubDate>
      <link>https://dev.to/hollowman6/github-issues-to-wechat-4klk</link>
      <guid>https://dev.to/hollowman6/github-issues-to-wechat-4klk</guid>
      <description>&lt;h3&gt;
  &lt;a href="#my-workflow"&gt;
  &lt;/a&gt;
  My Workflow
&lt;/h3&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/HollowMan6"&gt;
        HollowMan6
      &lt;/a&gt; / &lt;a href="https://github.com/HollowMan6/GitHub-Issues-to-Wechat"&gt;
        GitHub-Issues-to-Wechat
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Send GitHub Issues, PRs or Discussions Updates to Wechat.(将 GitHub Issues, PRs 或者 Discussions 更新消息发送到微信)
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Send timed message to Wechat&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/HollowMan6/GitHub-Issues-to-Wechat/graphs/commit-activity"&gt;&lt;img src="https://camo.githubusercontent.com/94649b494ef7a3e3e5116f1ab2d07001f62754f0a791d6de77711246587cc332/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6173742d636f6d6d69742f486f6c6c6f774d616e362f4769744875622d4973737565732d746f2d576563686174" alt="last-commit"&gt;&lt;/a&gt;
&lt;a href="https://github.com/HollowMan6/GitHub-Issues-to-Wechat/releases"&gt;&lt;img src="https://camo.githubusercontent.com/23e8cf1328573ad53b2f48faf0ce27e7cc7e5c893f0ded412bec934ea6ac0ce8/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652d646174652f486f6c6c6f774d616e362f4769744875622d4973737565732d746f2d576563686174" alt="release-date"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://github.com/HollowMan6/GitHub-Issues-to-Wechat/workflows/Python%20package/badge.svg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7TI_r00A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/HollowMan6/GitHub-Issues-to-Wechat/workflows/Python%2520package/badge.svg" alt="Python package"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/HollowMan6?tab=followers"&gt;&lt;img src="https://camo.githubusercontent.com/8441e22aa4e54675be52375e55951f0aaa6d809964cf71479073768aec57bfd4/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f6c6c6f776572732f486f6c6c6f774d616e363f7374796c653d736f6369616c" alt="Followers"&gt;&lt;/a&gt;
&lt;a href="https://github.com/HollowMan6/GitHub-Issues-to-Wechat/watchers"&gt;&lt;img src="https://camo.githubusercontent.com/964870ec6ba3da671b3fe6d84f5191651bc8094535f85078b810522131538aa1/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f77617463686572732f486f6c6c6f774d616e362f4769744875622d4973737565732d746f2d5765636861743f7374796c653d736f6369616c" alt="watchers"&gt;&lt;/a&gt;
&lt;a href="https://github.com/HollowMan6/GitHub-Issues-to-Wechat/stargazers"&gt;&lt;img src="https://camo.githubusercontent.com/61f30ab1fcd5b6c9931871565b04be13e7f988316b17b064c9d625557eb6eb8d/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f486f6c6c6f774d616e362f4769744875622d4973737565732d746f2d5765636861743f7374796c653d736f6369616c" alt="stars"&gt;&lt;/a&gt;
&lt;a href="https://github.com/HollowMan6/GitHub-Issues-to-Wechat/network/members"&gt;&lt;img src="https://camo.githubusercontent.com/91f9af66ea68d3446b322dca93c6271f0ff3d73b9e1510171b67f0471c2e6492/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f486f6c6c6f774d616e362f4769744875622d4973737565732d746f2d5765636861743f7374796c653d736f6369616c" alt="forks"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hollowman6.github.io/fund.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b527a02f3970d48aa1570c5757c89e88d995616c74259938691a86d0ca26aad0/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d2545322539442541342532304f70656e253230536f757263652d477265656e3f7374796c653d666c61742d737175617265266c6f676f3d476974687562266c6f676f436f6c6f723d7768697465266c696e6b3d68747470733a2f2f686f6c6c6f776d616e362e6769746875622e696f2f66756e642e68746d6c" alt="Open Source Love"&gt;&lt;/a&gt;
&lt;a href="https://opensource.org/licenses/GPL-3.0/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2f706a3275e4a48dc85ec930933303f3417d3b91d20943e25c8b66acdd223d53/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d47504c2d626c7565" alt="GPL Licence"&gt;&lt;/a&gt;
&lt;a href="https://github.com/HollowMan6/GitHub-Issues-to-Wechat/archive/master.zip"&gt;&lt;img src="https://camo.githubusercontent.com/2992a9308444d1405df6e2a3a7ebb935e1357f68664b78846563bc7fa1eb66e0/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f7265706f2d73697a652f486f6c6c6f774d616e362f4769744875622d4973737565732d746f2d5765636861742e737667" alt="Repo-Size"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://lgtm.com/projects/g/HollowMan6/GitHub-Issues-to-Wechat/alerts/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/be9ed6343ad5ff0ae14313fd773c65cb324f901d430db197cd41a42c3f6cc99d/68747470733a2f2f696d672e736869656c64732e696f2f6c67746d2f616c657274732f672f486f6c6c6f774d616e362f4769744875622d4973737565732d746f2d5765636861742e7376673f6c6f676f3d6c67746d266c6f676f57696474683d3138" alt="Total alerts"&gt;&lt;/a&gt;
&lt;a href="https://lgtm.com/projects/g/HollowMan6/GitHub-Issues-to-Wechat/context:python" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4c817969c62ba911dafd3d3aa03597423b9fbf97140431ff6b4c24a60fc77a6f/68747470733a2f2f696d672e736869656c64732e696f2f6c67746d2f67726164652f707974686f6e2f672f486f6c6c6f774d616e362f4769744875622d4973737565732d746f2d5765636861742e7376673f6c6f676f3d6c67746d266c6f676f57696474683d3138" alt="Language grade: Python"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(中文版本在下方)&lt;/p&gt;
&lt;p&gt;Send GitHub Issues, PRs or Discussions Updates to Wechat&lt;/p&gt;
&lt;p&gt;Source Github Repository Link: &lt;a href="https://github.com/HollowMan6/GitHub-Issues-to-Wechat"&gt;https://github.com/HollowMan6/GitHub-Issues-to-Wechat&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
Please &lt;strong&gt;★Star&lt;/strong&gt; if you think it's great!&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/HollowMan6/GitHub-Issues-to-Wechat/network/dependencies"&gt;Python library dependency&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/HollowMan6/GitHub-Issues-to-WechatGitHub-Issues-to-Wechat.py"&gt;Source Code&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
Example &lt;a href="https://github.com/HollowMan6/GitHub-Issues-to-Wechat.github/workflows/message.yml"&gt;Workflow&lt;/a&gt;
&lt;/h3&gt;
&lt;h2&gt;
Usage&lt;/h2&gt;
&lt;p&gt;you can fork this repository first, and then create Actions Secrets and set related settings in your forked repository (click in the order of 1, 2 and 3 as shown in the figure below).&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/HollowMan6/Wechat-Timed-Message/raw/main/img/secrets.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sP15Gwr2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/HollowMan6/Wechat-Timed-Message/raw/main/img/secrets.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can choose one or more of the following three push platforms to receive pushed messages:&lt;/p&gt;
&lt;h3&gt;
PushPlus(Recommended)&lt;/h3&gt;
&lt;p&gt;First &lt;a href="https://www.pushplus.plus/push1.html" rel="nofollow"&gt;log into pushplus&lt;/a&gt;, and then find your token in pushplus website, create a actions secret with the name of &lt;code&gt;PPTOKEN&lt;/code&gt; and the value of your token value, and then one-to-one push the related information results.&lt;/p&gt;
&lt;p&gt;If you need to push the related information to multiple Wechat accounts, that is, one-to-many push, you need to create a group, write down the group code…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/HollowMan6/GitHub-Issues-to-Wechat"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#submission-category"&gt;
  &lt;/a&gt;
  Submission Category:
&lt;/h3&gt;

&lt;p&gt;Maintainer Must-Haves&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#yaml-file-or-link-to-code"&gt;
  &lt;/a&gt;
  Yaml File or Link to Code
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/HollowMan6/GitHub-Issues-to-Wechat/blob/main/.github/workflows/message.yml"&gt;https://github.com/HollowMan6/GitHub-Issues-to-Wechat/blob/main/.github/workflows/message.yml&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#additional-resources-info"&gt;
  &lt;/a&gt;
  Additional Resources / Info
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#the-blog-post-about-the-project"&gt;
  &lt;/a&gt;
  The Blog Post About the Project
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://dev.to/hollowman6/a-workflow-for-sending-github-issues-prs-or-discussions-updates-to-wechat-1b7d"&gt;https://dev.to/hollowman6/a-workflow-for-sending-github-issues-prs-or-discussions-updates-to-wechat-1b7d&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#source-code-for-wechat-message-pushing"&gt;
  &lt;/a&gt;
  Source Code for WeChat Message pushing
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://github.com/HollowMan6/GitHub-Issues-to-Wechat/blob/main/GitHub-Issues-to-Wechat.py"&gt;https://github.com/HollowMan6/GitHub-Issues-to-Wechat/blob/main/GitHub-Issues-to-Wechat.py&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#docker-file"&gt;
  &lt;/a&gt;
  Docker File
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://github.com/HollowMan6/GitHub-Issues-to-Wechat/blob/main/Dockerfile"&gt;https://github.com/HollowMan6/GitHub-Issues-to-Wechat/blob/main/Dockerfile&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#docker-file"&gt;
  &lt;/a&gt;
  Docker File
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://github.com/HollowMan6/GitHub-Issues-to-Wechat/blob/main/Dockerfile"&gt;https://github.com/HollowMan6/GitHub-Issues-to-Wechat/blob/main/Dockerfile&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#view-on-github-marketplace"&gt;
  &lt;/a&gt;
  View on GitHub Marketplace
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://github.com/marketplace/actions/github-issues-to-wechat"&gt;https://github.com/marketplace/actions/github-issues-to-wechat&lt;/a&gt;&lt;/p&gt;

</description>
      <category>actionshackathon21</category>
    </item>
    <item>
      <title>Fun feature update</title>
      <author>typical pawel</author>
      <pubDate>Tue, 30 Nov 2021 14:59:47 +0000</pubDate>
      <link>https://dev.to/paweldotio/fun-feature-update-4pc3</link>
      <guid>https://dev.to/paweldotio/fun-feature-update-4pc3</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2oyN4o4r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qou6f9c5ojzxvx5nd0t9.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2oyN4o4r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qou6f9c5ojzxvx5nd0t9.gif" alt="Image description" width="480" height="480"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Had too much coffee this morning and added a fun animated gesture feature to &lt;a href="https://flat.social"&gt;flat.social&lt;/a&gt;. The GIF with demo might load for a minute or two!&lt;/p&gt;

&lt;p&gt;This work was done quite quickly - fortunately I found &lt;a href="https://github.com/davidfig/pixi-ease"&gt;davidfig/pixi-ease&lt;/a&gt; on Github which made it much easier. &lt;/p&gt;

&lt;p&gt;How does it work?&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;User selected a gesture on the keyboard (each key from 1-&amp;gt;7 is bound to a different gesture).&lt;/li&gt;
&lt;li&gt;App picks it up and sends an event via socket.io to the server. The server picks it up, figures out who sent it and informs everyone in the same room that a gesture has been emitted.&lt;/li&gt;
&lt;li&gt;Gesture event with associated playerId comes back to all of the clients connected to the room.&lt;/li&gt;
&lt;li&gt;Particular animation is triggered on the body of the player using pixi-ease.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Would love to know what you think!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>buildinpublic</category>
      <category>webdev</category>
      <category>gamedev</category>
    </item>
    <item>
      <title>A Workflow for Sending GitHub Issues, PRs, or Discussions Updates to WeChat</title>
      <author>Hollow Man</author>
      <pubDate>Tue, 30 Nov 2021 14:55:22 +0000</pubDate>
      <link>https://dev.to/hollowman6/a-workflow-for-sending-github-issues-prs-or-discussions-updates-to-wechat-1b7d</link>
      <guid>https://dev.to/hollowman6/a-workflow-for-sending-github-issues-prs-or-discussions-updates-to-wechat-1b7d</guid>
      <description>&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/HollowMan6"&gt;
        HollowMan6
      &lt;/a&gt; / &lt;a href="https://github.com/HollowMan6/GitHub-Issues-to-Wechat"&gt;
        GitHub-Issues-to-Wechat
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Send GitHub Issues, PRs or Discussions Updates to Wechat.(将 GitHub Issues, PRs 或者 Discussions 更新消息发送到微信)
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Send timed message to Wechat&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/HollowMan6/GitHub-Issues-to-Wechat/graphs/commit-activity"&gt;&lt;img src="https://camo.githubusercontent.com/94649b494ef7a3e3e5116f1ab2d07001f62754f0a791d6de77711246587cc332/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6173742d636f6d6d69742f486f6c6c6f774d616e362f4769744875622d4973737565732d746f2d576563686174" alt="last-commit"&gt;&lt;/a&gt;
&lt;a href="https://github.com/HollowMan6/GitHub-Issues-to-Wechat/releases"&gt;&lt;img src="https://camo.githubusercontent.com/23e8cf1328573ad53b2f48faf0ce27e7cc7e5c893f0ded412bec934ea6ac0ce8/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652d646174652f486f6c6c6f774d616e362f4769744875622d4973737565732d746f2d576563686174" alt="release-date"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://github.com/HollowMan6/GitHub-Issues-to-Wechat/workflows/Python%20package/badge.svg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7TI_r00A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/HollowMan6/GitHub-Issues-to-Wechat/workflows/Python%2520package/badge.svg" alt="Python package"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/HollowMan6?tab=followers"&gt;&lt;img src="https://camo.githubusercontent.com/8441e22aa4e54675be52375e55951f0aaa6d809964cf71479073768aec57bfd4/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f6c6c6f776572732f486f6c6c6f774d616e363f7374796c653d736f6369616c" alt="Followers"&gt;&lt;/a&gt;
&lt;a href="https://github.com/HollowMan6/GitHub-Issues-to-Wechat/watchers"&gt;&lt;img src="https://camo.githubusercontent.com/964870ec6ba3da671b3fe6d84f5191651bc8094535f85078b810522131538aa1/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f77617463686572732f486f6c6c6f774d616e362f4769744875622d4973737565732d746f2d5765636861743f7374796c653d736f6369616c" alt="watchers"&gt;&lt;/a&gt;
&lt;a href="https://github.com/HollowMan6/GitHub-Issues-to-Wechat/stargazers"&gt;&lt;img src="https://camo.githubusercontent.com/61f30ab1fcd5b6c9931871565b04be13e7f988316b17b064c9d625557eb6eb8d/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f486f6c6c6f774d616e362f4769744875622d4973737565732d746f2d5765636861743f7374796c653d736f6369616c" alt="stars"&gt;&lt;/a&gt;
&lt;a href="https://github.com/HollowMan6/GitHub-Issues-to-Wechat/network/members"&gt;&lt;img src="https://camo.githubusercontent.com/91f9af66ea68d3446b322dca93c6271f0ff3d73b9e1510171b67f0471c2e6492/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f486f6c6c6f774d616e362f4769744875622d4973737565732d746f2d5765636861743f7374796c653d736f6369616c" alt="forks"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hollowman6.github.io/fund.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b527a02f3970d48aa1570c5757c89e88d995616c74259938691a86d0ca26aad0/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d2545322539442541342532304f70656e253230536f757263652d477265656e3f7374796c653d666c61742d737175617265266c6f676f3d476974687562266c6f676f436f6c6f723d7768697465266c696e6b3d68747470733a2f2f686f6c6c6f776d616e362e6769746875622e696f2f66756e642e68746d6c" alt="Open Source Love"&gt;&lt;/a&gt;
&lt;a href="https://opensource.org/licenses/GPL-3.0/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2f706a3275e4a48dc85ec930933303f3417d3b91d20943e25c8b66acdd223d53/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d47504c2d626c7565" alt="GPL Licence"&gt;&lt;/a&gt;
&lt;a href="https://github.com/HollowMan6/GitHub-Issues-to-Wechat/archive/master.zip"&gt;&lt;img src="https://camo.githubusercontent.com/2992a9308444d1405df6e2a3a7ebb935e1357f68664b78846563bc7fa1eb66e0/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f7265706f2d73697a652f486f6c6c6f774d616e362f4769744875622d4973737565732d746f2d5765636861742e737667" alt="Repo-Size"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://lgtm.com/projects/g/HollowMan6/GitHub-Issues-to-Wechat/alerts/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/be9ed6343ad5ff0ae14313fd773c65cb324f901d430db197cd41a42c3f6cc99d/68747470733a2f2f696d672e736869656c64732e696f2f6c67746d2f616c657274732f672f486f6c6c6f774d616e362f4769744875622d4973737565732d746f2d5765636861742e7376673f6c6f676f3d6c67746d266c6f676f57696474683d3138" alt="Total alerts"&gt;&lt;/a&gt;
&lt;a href="https://lgtm.com/projects/g/HollowMan6/GitHub-Issues-to-Wechat/context:python" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4c817969c62ba911dafd3d3aa03597423b9fbf97140431ff6b4c24a60fc77a6f/68747470733a2f2f696d672e736869656c64732e696f2f6c67746d2f67726164652f707974686f6e2f672f486f6c6c6f774d616e362f4769744875622d4973737565732d746f2d5765636861742e7376673f6c6f676f3d6c67746d266c6f676f57696474683d3138" alt="Language grade: Python"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(中文版本在下方)&lt;/p&gt;
&lt;p&gt;Send GitHub Issues, PRs or Discussions Updates to Wechat&lt;/p&gt;
&lt;p&gt;Source Github Repository Link: &lt;a href="https://github.com/HollowMan6/GitHub-Issues-to-Wechat"&gt;https://github.com/HollowMan6/GitHub-Issues-to-Wechat&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
Please &lt;strong&gt;★Star&lt;/strong&gt; if you think it's great!&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/HollowMan6/GitHub-Issues-to-Wechat/network/dependencies"&gt;Python library dependency&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/HollowMan6/GitHub-Issues-to-WechatGitHub-Issues-to-Wechat.py"&gt;Source Code&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
Example &lt;a href="https://github.com/HollowMan6/GitHub-Issues-to-Wechat.github/workflows/message.yml"&gt;Workflow&lt;/a&gt;
&lt;/h3&gt;
&lt;h2&gt;
Usage&lt;/h2&gt;
&lt;p&gt;you can fork this repository first, and then create Actions Secrets and set related settings in your forked repository (click in the order of 1, 2 and 3 as shown in the figure below).&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/HollowMan6/Wechat-Timed-Message/raw/main/img/secrets.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sP15Gwr2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/HollowMan6/Wechat-Timed-Message/raw/main/img/secrets.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can choose one or more of the following three push platforms to receive pushed messages:&lt;/p&gt;
&lt;h3&gt;
PushPlus(Recommended)&lt;/h3&gt;
&lt;p&gt;First &lt;a href="https://www.pushplus.plus/push1.html" rel="nofollow"&gt;log into pushplus&lt;/a&gt;, and then find your token in pushplus website, create a actions secret with the name of &lt;code&gt;PPTOKEN&lt;/code&gt; and the value of your token value, and then one-to-one push the related information results.&lt;/p&gt;
&lt;p&gt;If you need to push the related information to multiple Wechat accounts, that is, one-to-many push, you need to create a group, write down the group code…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/HollowMan6/GitHub-Issues-to-Wechat"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h1&gt;
  &lt;a href="#motivation"&gt;
  &lt;/a&gt;
  Motivation
&lt;/h1&gt;

&lt;p&gt;Many Chinese developers prefer to use &lt;a href="https://en.wikipedia.org/wiki/WeChat"&gt;WeChat&lt;/a&gt; when they are at work, so they seldom check their emails. While GitHub only provides notifications for issues, PRs, or discussions by email, many Chinese developers may delay their response to those updates. As a result, setting up a Workflow for sending GitHub issues, PRs, or discussions updates to WeChat will bring great convenience for Chinese developers.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features
&lt;/h1&gt;

&lt;p&gt;Send GitHub issues, PRs, or discussions updates to WeChat, just like those updates sent by GitHub through emails.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#realization"&gt;
  &lt;/a&gt;
  Realization
&lt;/h1&gt;

&lt;p&gt;This workflow is realized through several WeChat message push platforms, such as &lt;a href="https://www.pushplus.plus/"&gt;PushPlus&lt;/a&gt; and &lt;a href="https://sct.ftqq.com/"&gt;ServerChan&lt;/a&gt;, as well as the native Enterprise version of WeChat (WeCom) message push API.&lt;/p&gt;

&lt;p&gt;The workflow uses python requests library for coding, and Docker for packaging to be used in the GitHub Actions.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#usage"&gt;
  &lt;/a&gt;
  Usage
&lt;/h1&gt;

&lt;p&gt;You can choose a realization for pushing the messages to WeChat, and set the needed GitHub Actions secrets &lt;a href="https://github.com/HollowMan6/GitHub-Issues-to-Wechat#usage"&gt;as the instructions here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;An example use for this workflow is &lt;a href="https://github.com/HollowMan6/GitHub-Issues-to-Wechat/blob/main/.github/workflows/message.yml"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can set at what event the notifications will be sent through Wechat by modifying &lt;a href="https://github.com/HollowMan6/GitHub-Issues-to-Wechat/blob/main/.github/workflows/message.yml#L2-L12"&gt;these headers&lt;/a&gt; and using them in your workflow.&lt;/p&gt;

&lt;p&gt;Then, append the following line in the steps of your workflow.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Send&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;GitHub&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Update&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Message&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;to&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Wechat'&lt;/span&gt;
  &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;HollowMan6/GitHub-Issues-to-Wechat@v1&lt;/span&gt;
  &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;DELAYS&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.DELAYS }}&lt;/span&gt;
    &lt;span class="na"&gt;SERVERCHANSCKEY&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.SERVERCHANSCKEY }}&lt;/span&gt;
    &lt;span class="na"&gt;PPTOKEN&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.PPTOKEN }}&lt;/span&gt;
    &lt;span class="na"&gt;PPTOPIC&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.PPTOPIC }}&lt;/span&gt;
    &lt;span class="na"&gt;CORPID&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.CORPID }}&lt;/span&gt;
    &lt;span class="na"&gt;CORPSECRET&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.CORPSECRET }}&lt;/span&gt;
    &lt;span class="na"&gt;AGENTID&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.AGENTID }}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally, enjoy it!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Gyo4gh44--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/HollowMan6/GitHub-Issues-to-Wechat/main/img/wecom.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Gyo4gh44--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/HollowMan6/GitHub-Issues-to-Wechat/main/img/wecom.jpg" alt="" width="880" height="1956"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>actionshackathon21</category>
    </item>
  </channel>
</rss>
