<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Why your website should work without Javascript. </title>
      <author>Nathaniel</author>
      <pubDate>Wed, 17 Mar 2021 23:27:03 +0000</pubDate>
      <link>https://dev.to/shadowfaxrodeo/why-your-website-should-work-without-javascript-3kko</link>
      <guid>https://dev.to/shadowfaxrodeo/why-your-website-should-work-without-javascript-3kko</guid>
      <description>&lt;p&gt;Recently I started a site of &lt;a href="https://missingdice.com/"&gt;tools for boardgames players&lt;/a&gt;. Simple tools like dice and spinners.&lt;/p&gt;

&lt;p&gt;I wanted the site to be as accessible as possible. So I challenged myself with some rules on how it would work.&lt;/p&gt;

&lt;p&gt;One rule was that &lt;strong&gt;every tool must work without javascript.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I learned a lot by doing it, and started to write posts about building tools without &lt;code&gt;js&lt;/code&gt;. But before I write any more I wanted to answer the question:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Why in 2021 would you bother making a website without &lt;code&gt;js&lt;/code&gt;?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;While researching this post I found two really great sources of information. So, most of this is going to be stolen from &lt;a href="https://adamsilver.io/blog/javascript-isnt-always-available-and-its-not-the-users-fault/"&gt;this article by Adam Silver&lt;/a&gt; and &lt;a href="https://gds.blog.gov.uk/2013/10/21/how-many-people-are-missing-out-on-javascript-enhancement/"&gt;this post from gov.uk.&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;But I'm going to go a little deeper into why some people &lt;strong&gt;block&lt;/strong&gt; &lt;code&gt;js&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The obvious answer to why you should build a website that doesn't need &lt;code&gt;js&lt;/code&gt; is… because some people don't use &lt;code&gt;js&lt;/code&gt;. But how many?!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#how-many-visitors-dont-use-javascript" class="anchor"&gt;
  &lt;/a&gt;
  How many visitors don't use javascript?
&lt;/h2&gt;

&lt;p&gt;The answer to this question is &lt;strong&gt;roughly &lt;code&gt;1%&lt;/code&gt;.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;There's not a lot of information on this but here's what I found:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A 2010 study by &lt;em&gt;yahoo&lt;/em&gt; suggests &lt;code&gt;1.3%&lt;/code&gt; – &lt;a href="http://web.archive.org/web/20131127063017/https://developer.yahoo.com/blogs/ydn/many-users-JavaScript-disabled-14121.html"&gt;web.archive&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;A 2013 study by &lt;em&gt;gov.uk&lt;/em&gt; suggests &lt;code&gt;1.1%&lt;/code&gt; — &lt;a href="https://gds.blog.gov.uk/2013/10/21/how-many-people-are-missing-out-on-javascript-enhancement/"&gt;gov.uk&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;For &lt;em&gt;buzzfeed&lt;/em&gt; in 2018 it was &lt;code&gt;1%&lt;/code&gt; — &lt;a href="https://www.youtube.com/watch?v=L-XLKxIiSvU"&gt;youtube&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;1%&lt;/code&gt; sounds like a lot! is it really possible 1 in 100 people block &lt;code&gt;javascript&lt;/code&gt;? &lt;strong&gt;well...no&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;1%&lt;/code&gt; from these studies is &lt;code&gt;1%&lt;/code&gt; of visits where javascript has failed for &lt;strong&gt;any reason&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;According to &lt;code&gt;gov.uk&lt;/code&gt; the number of people who actively block &lt;code&gt;js&lt;/code&gt; (or use a really really old browser) is &lt;code&gt;0.2%&lt;/code&gt; — 1 in 500.&lt;/p&gt;

&lt;p&gt;Those &lt;code&gt;0.2%&lt;/code&gt; have their reasons, but first let's look at the &lt;code&gt;0.8%&lt;/code&gt; of visits where the &lt;code&gt;js&lt;/code&gt; fails.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#why-does-javascript-fail" class="anchor"&gt;
  &lt;/a&gt;
  Why does javascript fail?
&lt;/h2&gt;

&lt;p&gt;There are lots of reasons your site's javascript might fail:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Your javascript is broken!&lt;/strong&gt; It happens.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;A feature you're using doesn't work on an older browser.&lt;/strong&gt; e.g. &lt;code&gt;ES6&lt;/code&gt; on an old version of &lt;code&gt;internet explorer&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Inteference from a browser extension.&lt;/strong&gt; Some web-extensions alter your site's code - with negative effects.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Network Errors.&lt;/strong&gt; Sometimes things just break.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Mobile users losing signal&lt;/strong&gt; - &lt;em&gt;e.g. from being in a rural area, going through a tunnel, falling down a manhole, etc&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Some browsers block javsacript on slow connections.&lt;/strong&gt; — &lt;a href="https://www.xda-developers.com/google-chrome-android-disable-javascript-2g-connections/"&gt;Android does this&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;CDN going down.&lt;/strong&gt; &lt;a href="https://www.npr.org/sections/thetwo-way/2017/03/03/518322734/amazon-and-the-150-million-typo"&gt;in 2017 AWS went down for 3 hours&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Corporate or local blocking or stripping of Javascript.&lt;/strong&gt; Sometimes organizations block javascript for security reasons.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;ISPs accidentally blocking your CDN&lt;/strong&gt; — &lt;a href="https://www.theguardian.com/technology/2014/jan/28/sky-broadband-blocks-jquery-web-critical-plugin"&gt;Sky Broadband once blocked jQuery&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;mobile networks altering your content&lt;/strong&gt; and breaking it — &lt;a href="https://bugs.jquery.com/ticket/10637"&gt;T-mobile and Orange also broke jQuery!&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There's probably other reasons too.&lt;/p&gt;

&lt;p&gt;That accounts for about &lt;code&gt;0.8%&lt;/code&gt; of visitors not using &lt;code&gt;Javascript&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;But what about the &lt;code&gt;0.2%&lt;/code&gt; who block &lt;code&gt;js&lt;/code&gt;?&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#why-do-people-block-javascript" class="anchor"&gt;
  &lt;/a&gt;
  Why do people block javascript?
&lt;/h2&gt;

&lt;p&gt;Some people block javascript in their browser. Some people choose a browser that doesn't support javascript. There are a number of reasons why:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Accessibility&lt;/li&gt;
&lt;li&gt;Security&lt;/li&gt;
&lt;li&gt;Privacy&lt;/li&gt;
&lt;li&gt;Cost&lt;/li&gt;
&lt;li&gt;Bandwidth&lt;/li&gt;
&lt;li&gt;CPU&lt;/li&gt;
&lt;li&gt;Battery&lt;/li&gt;
&lt;li&gt;are stuck with or prefer an very old or text-based browser&lt;/li&gt;
&lt;li&gt;they just like the web without javascript.&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#accessibility" class="anchor"&gt;
  &lt;/a&gt;
  Accessibility
&lt;/h3&gt;

&lt;p&gt;Some people find it easier to navigate the web with javascript switched off. There's less distractions.&lt;/p&gt;

&lt;p&gt;Others choose text-to-speech browsers that don't support &lt;code&gt;js&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Text-to-speech can work fine with javascript. For instance &lt;code&gt;voiceOver&lt;/code&gt; on &lt;code&gt;MacOS&lt;/code&gt; works within any browser.&lt;/em&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#security" class="anchor"&gt;
  &lt;/a&gt;
  Security
&lt;/h3&gt;

&lt;p&gt;Many people disable &lt;code&gt;js&lt;/code&gt; for security reasons, both professional and personal. No javascript means no malicious javscript too.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Who does this?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;People who work with sensitive or valuable data. &lt;/li&gt;
&lt;li&gt;Journalists and whistleblowers. &lt;a href="https://www.computerworld.com/article/2475978/snowden-at-sxsw--we-need-better-encryption-to-save-us-from-the-surveillance-state.html"&gt;Edward Snowden recommends switching off js&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Cautious people who don't want to get their credit cards stolen. &lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#privacy" class="anchor"&gt;
  &lt;/a&gt;
  Privacy
&lt;/h3&gt;

&lt;p&gt;Lots of people don't like corporations collecting their personal data. You might block ads, and tracking scripts.&lt;/p&gt;

&lt;p&gt;Some people take that a step further and block all javascript. Then, if they trust a site, they'll allow it to run.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#cost-amp-bandwidth" class="anchor"&gt;
  &lt;/a&gt;
  Cost &amp;amp; Bandwidth
&lt;/h3&gt;

&lt;p&gt;Blocking javascript can save a lot of money. &lt;/p&gt;

&lt;p&gt;Downloading &lt;code&gt;d3.js&lt;/code&gt; (a popular graphing library) &lt;a href="https://whatdoesmysitecost.com/test/210315_Ai1V_d64dac022c060cc2ebfe8f3301b605dd#usdCost"&gt;costs &lt;code&gt;1 cent&lt;/code&gt; in Canada. In Mauritania it costs &lt;code&gt;0.06%&lt;/code&gt; of the average daily income.&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;That's may not seem like a lot. But &lt;code&gt;d3.js&lt;/code&gt; is only &lt;code&gt;90kB&lt;/code&gt; — and only one of many scripts someone may have to download to use a site.&lt;/p&gt;

&lt;p&gt;Then javascript can request all kinds of data, images, video, and it adds up fast. Once you've visited a few sites you may find yourself over budget.&lt;/p&gt;

&lt;p&gt;The same logic applies for people with limited bandwidth. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://whatdoesmysitecost.com/test/210317_XiBD_85e51d4bdb1e7cb5901b7fad12e7a196#pppCost"&gt;&lt;code&gt;dev.to&lt;/code&gt; costs 24 cents to visit on mobile in canada!&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#cpu-and-battery" class="anchor"&gt;
  &lt;/a&gt;
  CPU and Battery
&lt;/h3&gt;

&lt;p&gt;Some people switch off javascript to save CPU and Battery. &lt;/p&gt;

&lt;p&gt;Users of low-powered devices — or one that's doing more important tasks in the background — may want to take pressure off their CPU. &lt;/p&gt;

&lt;p&gt;People without easy access to a power supply may want to save battery.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#outdated-browsers-amp-textbased-browsers" class="anchor"&gt;
  &lt;/a&gt;
  Out-dated Browsers &amp;amp; Text-based browsers
&lt;/h3&gt;

&lt;p&gt;Very old browsers like &lt;code&gt;IE &amp;lt; 3&lt;/code&gt;, &lt;code&gt;Netscape 1&lt;/code&gt;, &lt;code&gt;Mosaic&lt;/code&gt;, and others don't support javascript. Almost nobody uses these browsers anymore — but you can bet somebody is.&lt;/p&gt;

&lt;p&gt;Some text-based browsers like &lt;code&gt;Lynx&lt;/code&gt; don't support &lt;code&gt;js&lt;/code&gt;. &lt;code&gt;Lynx&lt;/code&gt; is a browser that runs in terminal applications. So someone browsing the web on a computer without a &lt;code&gt;GUI&lt;/code&gt; may well be using it.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Lynx&lt;/code&gt; has been around since &lt;a href="https://en.wikipedia.org/wiki/Lynx_%28web_browser%29"&gt;1992&lt;/a&gt; and is &lt;a href="https://lynx.invisible-island.net/current/CHANGES.html"&gt;still updated today.&lt;/a&gt; So people are definitely using it.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#some-people-just-prefer-the-web-without-js" class="anchor"&gt;
  &lt;/a&gt;
  Some people just prefer the web without js.
&lt;/h3&gt;

&lt;p&gt;Some people think the web is better browsed with javascript off. It's faster and reduces distractions. &lt;em&gt;See &lt;a href="https://www.wired.com/2015/11/i-turned-off-javascript-for-a-whole-week-and-it-was-glorious/"&gt;I Turned Off JavaScript for a Whole Week and It Was Glorious - Wired 2015&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#should-you-cater-to-raw-02-endraw-" class="anchor"&gt;
  &lt;/a&gt;
  Should you cater to &lt;code&gt;0.2%&lt;/code&gt;?
&lt;/h2&gt;

&lt;p&gt;Yes and no. Personally, I enjoy going out of my way to make things work. I find all this stuff fascinating. But making sure a site works for the &lt;code&gt;0.2%&lt;/code&gt; of people who disable javascript isn't really the point.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#the-curb-cut-effect" class="anchor"&gt;
  &lt;/a&gt;
  The Curb Cut Effect
&lt;/h3&gt;

&lt;p&gt;An analogy that comes up often when talking about web accessibility is curb cuts. &lt;em&gt;Curb cuts are the small concrete ramps on the side of the road.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Curb cuts we're added to sidewalks after a long campaign from disability rights activists. Their purpose was to give wheel-chair users the same freedoms non-disabled people enjoy.&lt;/p&gt;

&lt;p&gt;Now that curb cuts are everywhere — everyone benefits from them. People with strollers, skateboarders, people delvering packages, and more.&lt;/p&gt;

&lt;p&gt;The point? Making the world more accessible for one group of people benefits everyone. That's the &lt;strong&gt;curb cut effect&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://99percentinvisible.org/episode/curb-cuts/"&gt;&lt;em&gt;Here's a great episode of 99% invisible about curb cuts.&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/2DKkoQiEsac06MGiKY96P2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Building sites that function well without javascript doesn't just benefit the &lt;code&gt;0.2%&lt;/code&gt; of people who disable it.&lt;/p&gt;

&lt;p&gt;It improves the &lt;code&gt;0.8%&lt;/code&gt; of vists where javascript fails too.&lt;/p&gt;

&lt;p&gt;Building everything you can without &lt;code&gt;js&lt;/code&gt; will make your site:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;faster&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;smaller&lt;/strong&gt; – (most of the time)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;more reliable&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;more accessible&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;have smoother animations&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;easier to index by search engines&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;less vulnerable to hacks&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;easier to develop&lt;/strong&gt; – personal opinion&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;I'd prefer to write &lt;code&gt;js&lt;/code&gt; all day — but finding &lt;code&gt;html&lt;/code&gt; and &lt;code&gt;css&lt;/code&gt; only solutions has made me a better developer.&lt;/p&gt;

&lt;p&gt;It's forced me to find creative ways of solving problems — and to learn new &lt;code&gt;html&lt;/code&gt; and &lt;code&gt;css&lt;/code&gt; features.&lt;/p&gt;

&lt;p&gt;Then when I do add javascript, it's ends up being a lot smaller and easier to manage.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#how-to-disable-javascript" class="anchor"&gt;
  &lt;/a&gt;
  How to disable Javascript
&lt;/h3&gt;

&lt;p&gt;If you're going to build sites without &lt;code&gt;js&lt;/code&gt; you're going to need to test them. &lt;/p&gt;

&lt;p&gt;Probably the most popular way of disabling javascript is with the browser extension &lt;a href="https://noscript.net/"&gt;&lt;code&gt;NoScript&lt;/code&gt;&lt;/a&gt; — it's available on &lt;a href="https://chrome.google.com/webstore/detail/noscript/doojmbjmlfjjnbmnoijecmcbfeoakpjm"&gt;Google Chrome&lt;/a&gt; and &lt;a href="https://addons.mozilla.org/en-US/firefox/addon/noscript/"&gt;Firefox&lt;/a&gt; and elsewhere too.&lt;/p&gt;

&lt;p&gt;As of writing this &lt;code&gt;noScript&lt;/code&gt; has:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;100,000+&lt;/code&gt; users on Google Chrome&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;404,376&lt;/code&gt; users on Firefox&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That's at least half a million people who use that specific app. There are many more apps and other methods of disabling &lt;code&gt;js&lt;/code&gt;.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#anyway" class="anchor"&gt;
  &lt;/a&gt;
  Anyway
&lt;/h3&gt;

&lt;p&gt;Give browsing the web without &lt;code&gt;js&lt;/code&gt; a try, or maybe even have a go at using &lt;code&gt;Lynx&lt;/code&gt;. Let me know what you think.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>a11y</category>
      <category>javascript</category>
      <category>html</category>
    </item>
    <item>
      <title>I Recreated a Bootstrap Website with Tailwind CSS, And Here Are The Differences</title>
      <author>Shahed Nasser</author>
      <pubDate>Wed, 17 Mar 2021 20:06:59 +0000</pubDate>
      <link>https://dev.to/shahednasser/i-recreated-a-bootstrap-website-with-tailwind-css-and-here-are-the-differences-4744</link>
      <guid>https://dev.to/shahednasser/i-recreated-a-bootstrap-website-with-tailwind-css-and-here-are-the-differences-4744</guid>
      <description>&lt;p&gt;&lt;em&gt;This article was originally published on &lt;a href="https://blog.shahednasser.com/i-recreated-a-bootstrap-website-with-tailwindcss/"&gt;my personal blog&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Every web developer starts with &lt;a href="https://getbootstrap.com/"&gt;Bootstrap&lt;/a&gt;. It's easy to use and saves so much time creating a website. Bootstrap is a necessity that every web developer relies on, whether beginner or advanced.&lt;/p&gt;

&lt;p&gt;However, recently, I've been hearing a lot about &lt;a href="https://tailwindcss.com/"&gt;Tailwind CSS&lt;/a&gt;. I kept seeing people on Twitter and articles talk about it, that I got curious and wanted to try it out.&lt;/p&gt;

&lt;p&gt;So, I decided to recreate the website for &lt;a href="https://github.com/sButtons/sbuttons"&gt;sButtons&lt;/a&gt;, an open-source project I maintain. Originally, it was built with just HTML and Bootstrap. This is how it looked like:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u6Ulcfm8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jcwfjrbssuj1ph42dt29.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u6Ulcfm8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jcwfjrbssuj1ph42dt29.png" alt="Old"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The reason I chose to rebuild it was actually because it was getting hard to maintain all its components as it grew since it was just HTML. As it was easier to make these components reusable, I decided to recreate it with React, and also give it a different, new look as well.&lt;/p&gt;

&lt;p&gt;As great as the first design was, I wanted to try something more flat, simple, and easier to navigate.&lt;/p&gt;

&lt;p&gt;After building it with React and Tailwind CSS, this is the &lt;a href="https://sbuttons.netlify.app/"&gt;new website&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y4TtGnsC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5a63wq4eb6xyo6cvg1ew.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y4TtGnsC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5a63wq4eb6xyo6cvg1ew.png" alt="New"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A much simpler website that conveys the message behind "Simple buttons".&lt;/p&gt;

&lt;p&gt;Although the design changed tremendously, this is not what I will be comparing here. What I will be comparing is my experience working with both Bootstrap and Tailwind CSS and which is better.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#theyre-not-the-same" class="anchor"&gt;
  &lt;/a&gt;
  They're not The Same
&lt;/h2&gt;

&lt;p&gt;Although the purpose of Tailwind CSS and Bootstrap might be similar, however, they're different. Tailwind CSS is more focused on providing easy-to-use utility classes to save you time. As their documentation says: "No more adding silly class names like &lt;code&gt;sidebar-inner-wrapper&lt;/code&gt; just to be able to style something." It also encourages creating reusable components with these utility classes.&lt;/p&gt;

&lt;p&gt;Bootstrap also provides easy-to-use utility classes, however, from its early versions, Bootstrap is focused on helping you create websites quickly by providing you with designed common UI elements. Just by copy-pasting the code, you will get a navigation bar on your website.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#adapting-to-change" class="anchor"&gt;
  &lt;/a&gt;
  Adapting To Change
&lt;/h2&gt;

&lt;p&gt;When I first started trying out Tailwind CSS, I struggled a little as I was used to just use whatever ready-made components Bootstrap provides me then make changes on them accordingly. With Tailwind CSS, I had to create those components myself, which at first I thought would cost me more time and effort.&lt;/p&gt;

&lt;p&gt;However, as I kept learning it and getting the hang of it, it kept getting easier and easier. My thinking directly shifted to the "Tailwind CSS" mindset, and building components got easier. I no longer had to rely on copy-pasting code. The utility classes Tailwind CSS provides help you understand how you are creating and styling your components, and you can do that without having to actually write CSS.&lt;/p&gt;

&lt;p&gt;I got so used to using the classes Tailwind CSS provides, that even when I'm working on other projects my first instinct is to use them.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#responsive-design-and-dark-mode-made-easy" class="anchor"&gt;
  &lt;/a&gt;
  Responsive Design and Dark Mode Made Easy
&lt;/h2&gt;

&lt;p&gt;Among many of Tailwind CSS's available classes, you can easily make any rule or class adhere to responsive design by adding a prefix to it based on the screen size you're targeting.&lt;/p&gt;

&lt;p&gt;For example, if I want to make an element's width 50% on all screens, but make it 100% on small screens, I can do it easily like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"md:w-6/12 w-full"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;I'm responsive!&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;No need to struggle with media queries anymore! You can add prefixes like md:, sm: and others as well to almost all utility classes provided by Tailwind CSS.&lt;/p&gt;

&lt;p&gt;In Bootstrap, this is provided to some utility classes, however, I don't think it's flexible enough and you'll end up having to write your own media queries.&lt;/p&gt;

&lt;p&gt;Next comes dark mode. Dark Mode is now a necessary feature of any website. Making your website dark mode compatible can be a hassle. It depends on how you build components in your website as well.&lt;/p&gt;

&lt;p&gt;Tailwind CSS provides easy to use solution to make your website dark-mode compatible. Simply when styling elements, you can just add the prefix dark: to add styling that will be applied only when dark mode is turned on.&lt;/p&gt;

&lt;p&gt;For example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"bg-white dark:bg-gray-700"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The classes added to the div ensure that by default, the background color should be white. However, if dark mode is turned on on the website, it should change its color to a shade of Gray.&lt;/p&gt;

&lt;p&gt;Bootstrap at the moment of writing this does not provide any utility classes to help make implementing dark mode in your website easier, so this is a big bonus for Tailwind CSS as it also saves you a lot of time.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#modern-feel" class="anchor"&gt;
  &lt;/a&gt;
  Modern Feel
&lt;/h2&gt;

&lt;p&gt;I've been using Bootstrap for many years now, and recently I started noticing that something about the design of components in Bootstrap feels outdated. Whether it's the colors or other design look and feel, it doesn't feel like it's adapting to changes of design pattern with time.&lt;/p&gt;

&lt;p&gt;I really loved the colors that Tailwind CSS provides and how easy it is to customize them to get a bunch of other colors as well. Tailwind CSS provides a set of colors that you can use by default, but you can also change those colors easily from the configuration.&lt;/p&gt;

&lt;p&gt;For example, when making the website, I found that Rose was better than the default Red. I was able to replace the shades of Red with the shades of Rose easily while still using the utility classes Tailwind CSS provides by just one line in the configuration:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;//tailwind.config.js
red: colors.rose,
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#using-it-with-react" class="anchor"&gt;
  &lt;/a&gt;
  Using It With React
&lt;/h2&gt;

&lt;p&gt;There are a lot of ways you can use Bootstrap with React. However, they can be a bit of a hassle. Usually, the library would create different React components that simulate Bootstrap components, and you have to import them to use them in your components.&lt;/p&gt;

&lt;p&gt;Using Tailwind CSS with React is easy. You just need to make some changes in the configurations, then you can use the classes easily in your components.&lt;/p&gt;

&lt;p&gt;The main difference here mostly relies on the fact that, as mentioned before, Bootstrap provides a lot of UI components rather than just utility classes. So, it's understandable why using it in React would be done this way. However, it felt much better to use Tailwind CSS with React, especially since you're constantly creating reusable components.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#conclusion" class="anchor"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Both Bootstrap and Tailwind CSS have their own use cases that make them a better fit for a project. If you're unsure on which to use, assess what your priority is for your project and which option suits it better.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>showdev</category>
      <category>css</category>
      <category>devjournal</category>
    </item>
    <item>
      <title>Goodbye Offline Page</title>
      <author>Molly Struve (she/her)</author>
      <pubDate>Wed, 17 Mar 2021 17:53:35 +0000</pubDate>
      <link>https://dev.to/devteam/goodbye-offline-page-5d98</link>
      <guid>https://dev.to/devteam/goodbye-offline-page-5d98</guid>
      <description>&lt;p&gt;Dear DEV Community Members, &lt;/p&gt;

&lt;p&gt;I wanted to bring you all up to speed on a decision the Forem team recently made to remove our &lt;a href="https://dev.to/devteam/instant-webpages-and-terabytes-of-data-savings-through-the-magic-of-service-workers-1mkc"&gt;Service Worker functionality&lt;/a&gt;, and thus, our offline page. This was not a decision we came to lightly.&lt;/p&gt;

&lt;p&gt;Like many of you, we all thoroughly enjoyed drawing in our browsers using the DEV offline page whenever our internet fritzed on us. Recently however, the cost of maintaining the Service Worker became exceedingly high for our team. Over the past couple of months, we've been having to put out one emergency fire after another, all because of our Service Worker functionality. &lt;/p&gt;

&lt;p&gt;A couple of weeks ago, I took a step back and assessed the situation. Given the fact that we lean heavily into edge caching, I figured that losing the Service Worker would not have a huge impact on performance and could save the Forem engineering team a lot of headaches. However, there still remained the question of the offline page. After chatting with &lt;a class="comment-mentioned-user" href="https://dev.to/ben"&gt;@ben&lt;/a&gt;
 about our options, we decided to strip the Service Worker down so that its only function was to serve the offline page.&lt;/p&gt;


&lt;div class="ltag_github-liquid-tag"&gt;
  &lt;h1&gt;
    &lt;a href="https://github.com/forem/forem/pull/12834"&gt;
      &lt;img class="github-logo" alt="GitHub logo" src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg"&gt;
      &lt;span class="issue-title"&gt;
        Reduce service worker functionality to minimal offline page
      &lt;/span&gt;
      &lt;span class="issue-number"&gt;#12834&lt;/span&gt;
    &lt;/a&gt;
  &lt;/h1&gt;
  &lt;div class="github-thread"&gt;
    &lt;div class="timeline-comment-header"&gt;
      &lt;a href="https://github.com/benhalpern"&gt;
        &lt;img class="github-liquid-tag-img" src="https://res.cloudinary.com/practicaldev/image/fetch/s--Btd6rDfR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars.githubusercontent.com/u/3102842%3Fv%3D4" alt="benhalpern avatar"&gt;
      &lt;/a&gt;
      &lt;div class="timeline-comment-header-text"&gt;
        &lt;strong&gt;
          &lt;a href="https://github.com/benhalpern"&gt;benhalpern&lt;/a&gt;
        &lt;/strong&gt; posted on &lt;a href="https://github.com/forem/forem/pull/12834"&gt;&lt;time&gt;Feb 26, 2021&lt;/time&gt;&lt;/a&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag-github-body"&gt;
      
&lt;h2&gt;
&lt;a id="user-content-what-type-of-pr-is-this-check-all-applicable" class="anchor" href="#what-type-of-pr-is-this-check-all-applicable"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;What type of PR is this? (check all applicable)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[x] Refactor&lt;/li&gt;
&lt;li&gt;[ ] Feature&lt;/li&gt;
&lt;li&gt;[x] Bug Fix&lt;/li&gt;
&lt;li&gt;[ ] Optimization&lt;/li&gt;
&lt;li&gt;[ ] Documentation Update&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
&lt;a id="user-content-description" class="anchor" href="#description"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Description&lt;/h2&gt;
&lt;p&gt;This PR strips out some of our &lt;em&gt;very cool&lt;/em&gt; &lt;a href="https://dev.to/devteam/instant-webpages-and-terabytes-of-data-savings-through-the-magic-of-service-workers-1mkc" rel="nofollow"&gt;ReadableStream&lt;/a&gt; service worker functionality because it has been causing too many bugs related to the deployment of new code.&lt;/p&gt;
&lt;p&gt;The upside of this functionality is &lt;em&gt;very instant&lt;/em&gt; initial page loads, but the downside to the current implementation is too many instances of difficult-to-predict deployment cache issues. These were always painful to deal with, but are exceptionally difficult in a Forem world where our devops cannot act quickly to fix production issues the same way we can with a single deploy.&lt;/p&gt;
&lt;p&gt;The fundamental issue with our current implementation is just that it is &lt;em&gt;not exhaustive&lt;/em&gt; in terms of dealing with certain scenarios, and dealing with edge cases creates a lot of complexity.&lt;/p&gt;
&lt;p&gt;We suspect there are still UX benefits and SEO benefits to handling basic offline functionality...&lt;/p&gt;
&lt;p&gt;&lt;a href="https://user-images.githubusercontent.com/3102842/109359353-56dee900-7853-11eb-92e7-5eacc074f3f2.png" rel="nofollow"&gt;&lt;img width="408" alt="Screen Shot 2021-02-26 at 4 47 54 PM" src="https://res.cloudinary.com/practicaldev/image/fetch/s--erGZpdxN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/3102842/109359353-56dee900-7853-11eb-92e7-5eacc074f3f2.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;And we still have our service worker lifecycle on top of which we may be able to methodically add back certain functionality that this PR removes, but we can do so with much more of an emphasis on ensuring all possible scenarios are accounted for so that we do not allow users to get caught in buggy situations.&lt;/p&gt;
&lt;p&gt;One additional adjustment I made was just removing the "DEV" portion of the image on the offline page (and some code cleanup there)... We may want to offer a new fun way for Forem admins to customize this page, but I figured this small adjustment to make for a more minimal and generalized offline page made sense here.&lt;/p&gt;
&lt;h2&gt;
&lt;a id="user-content-follow-up" class="anchor" href="#follow-up"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Follow up&lt;/h2&gt;
&lt;p&gt;There is additional code that can be removed with this new approach, but due to the nature of how service workers run code already downloaded to user browsers (i.e. the cause of this complexity in the first place), it makes sense to wait at least a few weeks to remove some of the other code that is not needed anymore in case it could break old installs.&lt;/p&gt;
&lt;h2&gt;
&lt;a id="user-content-related-tickets--documents" class="anchor" href="#related-tickets--documents"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Related Tickets &amp;amp; Documents&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/forem/internalEngineering/issues/333"&gt;https://github.com/forem/internalEngineering/issues/333&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
&lt;a id="user-content-qa-instructions-screenshots-recordings" class="anchor" href="#qa-instructions-screenshots-recordings"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;QA Instructions, Screenshots, Recordings&lt;/h2&gt;
&lt;p&gt;This is mostly an adoption of this functionality: &lt;a href="https://web.dev/offline-fallback-page/" rel="nofollow"&gt;https://web.dev/offline-fallback-page/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Eyeball the functionality and test different network conditions to ensure this does not cause new problems.&lt;/p&gt;
&lt;h3&gt;
&lt;a id="user-content-ui-accessibility-concerns" class="anchor" href="#ui-accessibility-concerns"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;UI accessibility concerns?&lt;/h3&gt;
&lt;p&gt;This should not cause new a11y issues.&lt;/p&gt;
&lt;h2&gt;
&lt;a id="user-content-added-tests" class="anchor" href="#added-tests"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Added tests?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[ ] Yes&lt;/li&gt;
&lt;li&gt;[x] No, and this is why: I'm not really sure how to test this.&lt;/li&gt;
&lt;li&gt;[ ] I need help with writing tests&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
&lt;a id="user-content-forem-core-team-only-how-will-this-change-be-communicated" class="anchor" href="#forem-core-team-only-how-will-this-change-be-communicated"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;[Forem core team only] How will this change be communicated?&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Will this PR introduce a change that impacts Forem members or creators, the
development process, or any of our internal teams? If so, please note how you
will share this change with the people who need to know about it.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[x] I've updated the [Developer Docs]&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
&lt;a id="user-content-optional-what-gif-best-describes-this-pr-or-how-it-makes-you-feel" class="anchor" href="#optional-what-gif-best-describes-this-pr-or-how-it-makes-you-feel"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;[optional] What gif best describes this PR or how it makes you feel?&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://camo.githubusercontent.com/443fd4bceb2cf0dd09a5186c0c81fe19bb02e1691c54a077a8a56769256a213b/68747470733a2f2f6d656469612e67697068792e636f6d2f6d656469612f3236753462343562384b6c67414237694d2f67697068792e676966" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/443fd4bceb2cf0dd09a5186c0c81fe19bb02e1691c54a077a8a56769256a213b/68747470733a2f2f6d656469612e67697068792e636f6d2f6d656469612f3236753462343562384b6c67414237694d2f67697068792e676966" alt="goodbye"&gt;&lt;/a&gt;&lt;/p&gt;

    &lt;/div&gt;
    &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/forem/forem/pull/12834"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;We deployed and rejoiced thinking our woes were over. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#we-were-wrong" class="anchor"&gt;
  &lt;/a&gt;
  We were wrong
&lt;/h3&gt;

&lt;p&gt;A few days after this deploy, our emergency Slack channel was once again lit up with users who could not log in from Safari. We put together &lt;a href="https://github.com/forem/forem/pull/12907"&gt;a fix&lt;/a&gt; (and then &lt;a href="https://github.com/forem/forem/pull/12909"&gt;a follow up fix&lt;/a&gt; 🙈) and shipped it. A few days after that, the emergency channel again popped up with a flood of log in problems being reported from users. Once again &lt;a href="https://github.com/forem/forem/pull/12953"&gt;we shipped a fix&lt;/a&gt;. After the &lt;a href="https://github.com/forem/forem/pull/12971"&gt;third day of this happening&lt;/a&gt;, I decided to turn to my engineering leaders to get their thoughts on the whole situation.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;What are folks' thoughts on the continuing issues we are having with the Service Worker? Ben greatly reduced its functionality to only the offline page bc of all the issues it has been causing and the giant sink it has been for developer time but it doesn't feel like things have gotten much better. My heart can't take many more days of coming back to my Slack with #emergency lit up and a 100 reply thread.&lt;/p&gt;

&lt;p&gt;Do we think things are going to get better once we have identified all the exception paths? OR do we still think it's going to be a landmine that will only continue to bite us? The cost of this offline page feature is getting pretty high and I am wondering if it's worth the cost. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;My incredible team and &lt;a class="comment-mentioned-user" href="https://dev.to/ben"&gt;@ben&lt;/a&gt;
 all jumped in with their thoughts.&lt;/p&gt;

&lt;p&gt;But there was another complication thrown into the mix: our offline page was supposed to help our SEO rankings! However, we were not sure &lt;em&gt;how much&lt;/em&gt; it was supposed to help. In the end, we weighed all our options and determined that the best course of action was to remove the Service Worker completely and monitor our incoming traffic using Google's Search Console.&lt;/p&gt;

&lt;p&gt;Making engineering decisions is all about tradeoffs. In this case, the Service Worker feature was disruptive to both our users and to us as developers, which seemed to outweigh any benefits that it had provided. While removing the offline page is a bit disappointing, in the big scheme of things, it will make the Forem platform much more reliable and stable going forward.  &lt;/p&gt;

&lt;p&gt;For more details, check out the removal PR below. 👇&lt;/p&gt;


&lt;div class="ltag_github-liquid-tag"&gt;
  &lt;h1&gt;
    &lt;a href="https://github.com/forem/forem/pull/12974"&gt;
      &lt;img class="github-logo" alt="GitHub logo" src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg"&gt;
      &lt;span class="issue-title"&gt;
        Removed service worker
      &lt;/span&gt;
      &lt;span class="issue-number"&gt;#12974&lt;/span&gt;
    &lt;/a&gt;
  &lt;/h1&gt;
  &lt;div class="github-thread"&gt;
    &lt;div class="timeline-comment-header"&gt;
      &lt;a href="https://github.com/nickytonline"&gt;
        &lt;img class="github-liquid-tag-img" src="https://res.cloudinary.com/practicaldev/image/fetch/s--YvxHyleh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars.githubusercontent.com/u/833231%3Fv%3D4" alt="nickytonline avatar"&gt;
      &lt;/a&gt;
      &lt;div class="timeline-comment-header-text"&gt;
        &lt;strong&gt;
          &lt;a href="https://github.com/nickytonline"&gt;nickytonline&lt;/a&gt;
        &lt;/strong&gt; posted on &lt;a href="https://github.com/forem/forem/pull/12974"&gt;&lt;time&gt;Mar 11, 2021&lt;/time&gt;&lt;/a&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag-github-body"&gt;
      
&lt;h2&gt;
&lt;a id="user-content-what-type-of-pr-is-this-check-all-applicable" class="anchor" href="#what-type-of-pr-is-this-check-all-applicable"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;What type of PR is this? (check all applicable)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[ ] Refactor&lt;/li&gt;
&lt;li&gt;[ ] Feature&lt;/li&gt;
&lt;li&gt;[x] Bug Fix&lt;/li&gt;
&lt;li&gt;[ ] Optimization&lt;/li&gt;
&lt;li&gt;[ ] Documentation Update&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
&lt;a id="user-content-description" class="anchor" href="#description"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Description&lt;/h2&gt;
&lt;p&gt;This removes all of our service worker functionality with a self-destructing service worker which appears to be the best approach for unregistering a service worker. See &lt;a href="https://github.com/NekR/self-destroying-sw#how-to-use"&gt;https://github.com/NekR/self-destroying-sw#how-to-use&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
&lt;a id="user-content-related-tickets--documents" class="anchor" href="#related-tickets--documents"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Related Tickets &amp;amp; Documents&lt;/h2&gt;

&lt;h2&gt;
&lt;a id="user-content-qa-instructions-screenshots-recordings" class="anchor" href="#qa-instructions-screenshots-recordings"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;QA Instructions, Screenshots, Recordings&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Test this in Chrome, Firefox, and Safari. Note in Safari, there may be no service worker registered due to the work done with the service-companion.js file. In that case, ensure that no errors are thrown in the console of the web dev tools in Safari.&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Pull down latest of the main branch and deploy the site locally. Navigate to the home page and validate that the service worker is running by opening the developer tools and navigating to the developer tools.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Chrome&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://user-images.githubusercontent.com/833231/110863755-25bcda80-828f-11eb-98dd-38e9c1a12ce9.png" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XrfMby5s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/833231/110863755-25bcda80-828f-11eb-98dd-38e9c1a12ce9.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Firefox&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://user-images.githubusercontent.com/833231/110955507-ade6c280-8317-11eb-8e3b-d306f4226a0c.png" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TRBrDyzO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/833231/110955507-ade6c280-8317-11eb-8e3b-d306f4226a0c.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Safari&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://user-images.githubusercontent.com/833231/110955743-e7b7c900-8317-11eb-95e7-91935d25cf9d.png" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Mw5Pf6dB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/833231/110955743-e7b7c900-8317-11eb-95e7-91935d25cf9d.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol start="2"&gt;
&lt;li&gt;Pull down the branch for this PR and deploy it locally. Refresh the browser window that is currently open and validate that the service worker gets unregistered.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Chrome&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://user-images.githubusercontent.com/833231/110863832-42591280-828f-11eb-8563-bb959a81d101.png" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LAvZrEfr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/833231/110863832-42591280-828f-11eb-8563-bb959a81d101.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Firefox&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://user-images.githubusercontent.com/833231/110955675-d66ebc80-8317-11eb-99cc-7c20cafcb94c.png" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9n_oiaDa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/833231/110955675-d66ebc80-8317-11eb-99cc-7c20cafcb94c.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Safari&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://user-images.githubusercontent.com/833231/110955754-e9818c80-8317-11eb-9dc8-095c7f6a2eb9.png" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AIFsl20w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/833231/110955754-e9818c80-8317-11eb-9dc8-095c7f6a2eb9.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
&lt;a id="user-content-ui-accessibility-concerns" class="anchor" href="#ui-accessibility-concerns"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;UI accessibility concerns?&lt;/h3&gt;

&lt;p&gt;N/A this is front-end infrastructure&lt;/p&gt;

&lt;h2&gt;
&lt;a id="user-content-added-tests" class="anchor" href="#added-tests"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Added tests?&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;[ ] Yes&lt;/li&gt;
&lt;li&gt;[x] No, and this is why: I've removed tests related to the service worker, so existing tests should continue to pass.&lt;/li&gt;
&lt;li&gt;[ ] I need help with writing tests&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
&lt;a id="user-content-forem-core-team-only-how-will-this-change-be-communicated" class="anchor" href="#forem-core-team-only-how-will-this-change-be-communicated"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;[Forem core team only] How will this change be communicated?&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Will this PR introduce a change that impacts Forem members or creators, the
development process, or any of our internal teams? If so, please note how you
will share this change with the people who need to know about it.&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;[ ] I've updated the &lt;a href="https://docs.forem.com" rel="nofollow"&gt;Developer Docs&lt;/a&gt; and/or
&lt;a href="https://forem.gitbook.io/forem-admin-guide/" rel="nofollow"&gt;Admin Guide&lt;/a&gt;, or
&lt;a href="https://storybook.forem.com/" rel="nofollow"&gt;Storybook&lt;/a&gt; (for Crayons components)&lt;/li&gt;
&lt;li&gt;[ ] I've updated the README or added inline documentation&lt;/li&gt;
&lt;li&gt;[x] I will share this change in a &lt;a href="https://forem.dev/t/changelog" rel="nofollow"&gt;Changelog&lt;/a&gt;
or in a &lt;a href="http://forem.dev" rel="nofollow"&gt;forem.dev&lt;/a&gt; post&lt;/li&gt;
&lt;li&gt;[ ] I will share this change internally with the appropriate teams&lt;/li&gt;
&lt;li&gt;[ ] I'm not sure how best to communicate this change and need help&lt;/li&gt;
&lt;li&gt;[ ] This change does not need to be communicated, and this is why not: &lt;em&gt;please
replace this line with details on why this change doesn't need to be
shared&lt;/em&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
&lt;a id="user-content-optional-are-there-any-post-deployment-tasks-we-need-to-perform" class="anchor" href="#optional-are-there-any-post-deployment-tasks-we-need-to-perform"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;[optional] Are there any post deployment tasks we need to perform?&lt;/h2&gt;

&lt;h2&gt;
&lt;a id="user-content-optional-what-gif-best-describes-this-pr-or-how-it-makes-you-feel" class="anchor" href="#optional-what-gif-best-describes-this-pr-or-how-it-makes-you-feel"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;[optional] What gif best describes this PR or how it makes you feel?&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://camo.githubusercontent.com/5f75067069df05a1c71b11deef9162bc80e1c107c66a7e21b98f39241a78fde9/68747470733a2f2f6d656469612e67697068792e636f6d2f6d656469612f325a336c675a4f6849536b59552f67697068792e676966" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5f75067069df05a1c71b11deef9162bc80e1c107c66a7e21b98f39241a78fde9/68747470733a2f2f6d656469612e67697068792e636f6d2f6d656469612f325a336c675a4f6849536b59552f67697068792e676966" alt='Samuel L. Jackson in Jurassic Park saying "Hold on to your butts"'&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;/div&amp;gt;
&amp;lt;div class="gh-btn-container"&amp;gt;&amp;lt;a class="gh-btn" href="https://github.com/forem/forem/pull/12974"&amp;gt;View on GitHub&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;
 
&lt;/div&gt;

</description>
      <category>changelog</category>
    </item>
    <item>
      <title>Vue.js 101 - Conditional rendering</title>
      <author>Eric Chapman</author>
      <pubDate>Wed, 17 Mar 2021 17:51:56 +0000</pubDate>
      <link>https://dev.to/ericchapman/vue-js-101-conditional-rendering-3hp9</link>
      <guid>https://dev.to/ericchapman/vue-js-101-conditional-rendering-3hp9</guid>
      <description>&lt;p&gt;Everyday, I publish here on Dev.to what I learn from my Vue course the day before.&lt;/p&gt;

&lt;p&gt;Click follow if you want to miss nothing. &lt;/p&gt;

&lt;p&gt;Without further ado here is a summary of my notes for day 3.&lt;/p&gt;

&lt;h2&gt;Conditional rendering&lt;/h2&gt;

&lt;p&gt;Sometime we only want to show content base on certain conditions. For example base on user type (regular or admin) we will show/hide a button, menus or others part of our page.&lt;/p&gt;

&lt;p&gt;In Vue to use conditional we only have to use the v-if directive:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;v-if=&lt;/span&gt;&lt;span class="s"&gt;"isAdmin"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  This content is for user admin only
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If the property isAdmin is true the div will be render, if false the div will not be render&lt;/p&gt;

&lt;p&gt;Of course to make that example work we need to add a isAdmin property to data() method.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello World Vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;number1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;number2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;isAdmin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this case I set the isAdmin to true but in real app that value may come from a database or API. But, the principe will remain the same.&lt;/p&gt;

&lt;p&gt;We can combine what we learn in yesterday lesson with this one and show/hide a section base on the click of a button.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;v-if=&lt;/span&gt;&lt;span class="s"&gt;"showTitle"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    Welcome to my app
&lt;span class="nt"&gt;&amp;lt;/diV&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="na"&gt;click=&lt;/span&gt;&lt;span class="s"&gt;"showTitle = !showTitle"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    Toggle show title
&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We then have to add a showTitle with default value of true to our app.js&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;showTitle&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now each time we click the button the title show/hide repeatedly.&lt;/p&gt;

&lt;p&gt;If the showTitle is false it can be hidden but it is also possible to display something else.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;v-if=&lt;/span&gt;&lt;span class="s"&gt;"showTitle"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    Welcome to my app
&lt;span class="nt"&gt;&amp;lt;/diV&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;v-else&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    Sorry, no title
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="na"&gt;click=&lt;/span&gt;&lt;span class="s"&gt;"showTitle = !showTitle"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    Toggle show title
&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The v-else directive logic use with the same logic as a regular if-else statement in javascript.&lt;/p&gt;

&lt;p&gt;Note if the v-if directive evaluate to false, the div will not be render at all in the DOM. When the directive will switch to true the DOM will be re-render with the div.&lt;/p&gt;

&lt;p&gt;Sometime it could be more efficient or for many other reasons, to always render the div in the DOM but only show or hide in the browser. How to do that? Use the v-show directive,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;v-show=&lt;/span&gt;&lt;span class="s"&gt;"isAdmin"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  This content will always be render but not always show
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The v-show directive work the same as the v-if but the div will always be present in the DOM. At run-time it will &lt;br&gt;
display in the browser or not depend on the value it evaluate.&lt;/p&gt;

&lt;h2&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;That's it for today. Tomorrow the journey continue, see you later! If you want to be sure to miss nothing click follow me here or on twitter!&lt;/p&gt;

&lt;p&gt;Follow me on Twitter: &lt;a href="https://twitter.com/justericchapman?ref_src=twsrc%5Etfw" class="twitter-follow-button"&gt;Follow @justericchapman&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>vue</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>🎉 Zero-config JS Confetti library</title>
      <author>Vladimir Nikitin</author>
      <pubDate>Wed, 17 Mar 2021 16:28:33 +0000</pubDate>
      <link>https://dev.to/loonywizard/js-confetti-40dn</link>
      <guid>https://dev.to/loonywizard/js-confetti-40dn</guid>
      <description>&lt;p&gt;js-confetti is a lightweight zero-config open-source JavaScript library for confetti without any dependencies&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZcT5Imu8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g6yhi12mlj0n8aliwppb.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZcT5Imu8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g6yhi12mlj0n8aliwppb.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;GitHub: &lt;a href="https://github.com/loonywizard/js-confetti"&gt;https://github.com/loonywizard/js-confetti&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#usage" class="anchor"&gt;
  &lt;/a&gt;
  Usage
&lt;/h2&gt;

&lt;p&gt;Install library via yarn or npm&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;yarn add js-confetti
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Initialize instance of JSConfetti class and call addConfetti method&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;JSConfetti&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;js-confetti&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;jsConfetti&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;JSConfetti&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="nx"&gt;jsConfetti&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addConfetti&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Thats it! &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>opensource</category>
      <category>webdev</category>
      <category>frontend</category>
    </item>
    <item>
      <title>Tips for Kubernetes Cost Optimization</title>
      <author>Sara Miteva</author>
      <pubDate>Wed, 17 Mar 2021 14:32:30 +0000</pubDate>
      <link>https://dev.to/microtica/tips-for-kubernetes-cost-optimization-25ih</link>
      <guid>https://dev.to/microtica/tips-for-kubernetes-cost-optimization-25ih</guid>
      <description>&lt;p&gt;Kubernetes is ruling the container market. According to a &lt;a href="https://www.cncf.io/wp-content/uploads/2020/11/CNCF_Survey_Report_2020.pdf"&gt;CNCF survey&lt;/a&gt;, &lt;strong&gt;the use of Kubernetes in production in 2020 was 93%,&lt;/strong&gt; up from 78% in 2019. Moreover, the survey reveals that the use of containers in production in 2020 was 92%. This figure is up 300% from CNCF’s first survey in 2016. &lt;/p&gt;

&lt;p&gt;Due to the adoption of &lt;a href="https://microtica.com/blog/deploy-your-first-microservice-on-kubernetes-in-10-mins/?utm_source=post&amp;amp;utm_medium=devto&amp;amp;utm_campaign=kubernetes_costs"&gt;Kubernetes by DevOps teams&lt;/a&gt; and the open source community’s encouragement, this figure could grow more. And if it stays at present prices, this market share still is a significant portion. This means that even though Kubernetes makes a lot of things easier, challenges will always appear, as the survey confirms. Namely, the problems listed include networking, storage, tracking, surveillance, a lack of preparation, and, of course, cost management.&lt;/p&gt;

&lt;p&gt;Running Kubernetes can be very costly, especially if done inefficiently. When businesses first try to incorporate Kubernetes in their organizations, they usually use the same architecture and setup that performed well with initial research experiments. However, this setup is often unoptimized and companies don’t think about expenses right away. This could save a lot of unnecessary costs and encourage the implementation of good habits from the beginning.&lt;/p&gt;

&lt;p&gt;In this article, we’ll go over several methods for controlling and lowering Kubernetes costs. Moreover, as &lt;a href="https://www.stackrox.com/kubernetes-adoption-security-and-market-share-for-containers/"&gt;Amazon EKS is the most common container management approach after self-managed Kubernetes&lt;/a&gt;, we’ll offer more actionable advice on Kubernetes cost optimization on AWS.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#kubernetes-cost-monitoring" class="anchor"&gt;
  &lt;/a&gt;
  Kubernetes cost monitoring
&lt;/h1&gt;

&lt;p&gt;This is the most logical step towards starting to manage your Kubernetes costs more efficiently. Monitoring should show you how you’re spending your money when it comes to Kubernetes. More importantly, you should identify saving opportunities.&lt;/p&gt;

&lt;p&gt;Cloud vendors offer billing summary that provides information about what you’re paying for.  However, they will usually only include a simple overview that is only slightly useful for multi-tenant Kubernetes clusters. This is inaccessible in private clouds. As a consequence, it’s popular to &lt;strong&gt;use external software to monitor Kubernetes consumption&lt;/strong&gt;. Prometheus, Kubecost, &lt;a href="https://microtica.com/aws-cost/?utm_source=post&amp;amp;utm_medium=devto&amp;amp;utm_campaign=kubernetes_costs"&gt;Microtica&lt;/a&gt;, and Replex are some useful tools in this field.&lt;/p&gt;

&lt;p&gt;Choose the tools you’ll use and how you’re going to monitor your Kubernetes costs. Then, start implementing more concrete actions for Kubernetes cost optimization. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#limiting-resources" class="anchor"&gt;
  &lt;/a&gt;
  Limiting resources
&lt;/h1&gt;

&lt;p&gt;Resource constraints that are effective guarantee that no program or operator of the Kubernetes system uses too much processing power. As a result, they &lt;strong&gt;protect you from unwelcome shocks such as unexpected billing changes&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;A container can’t use more than the resource limit you set. The kubelet (and container runtime) implement the memory cap if you set it to, for example, 4GB for a particular container. The container’s runtime prohibits it from exceeding the configured resource cap. When a process in the container attempts to use more memory than is permitted, the system kernel aborts the process with an out-of-memory (OOM) error.&lt;/p&gt;

&lt;p&gt;Developers can enforce limits in two ways. First, &lt;strong&gt;reactively&lt;/strong&gt;, when the system detects a violation. The second way is by &lt;strong&gt;enforcement&lt;/strong&gt;, which means that the system never allows the container to go over the limit. They can implement the same constraints in various ways for different runtimes.&lt;/p&gt;

&lt;p&gt;Limiting resources is crucial, especially if many of your developers have direct access to Kubernetes. They ensure that &lt;strong&gt;available resources are shared fairly&lt;/strong&gt;, reducing the overall cluster size. Without limitations, one person could use all energy. This would prevent others from working, resulting in a need for more computational resources overall.&lt;/p&gt;

&lt;p&gt;However, be careful not to limit your resources without any balance. Engineers and software cannot function properly if resource limits are too low. On the other hand, they are often worthless if they are too high. Some Kubernetes cost optimization tools, like Prometheus and Kubecost, can help you decide the balance with your resources. &lt;/p&gt;

&lt;p&gt;To find out more about limiting resources for containers, check [this page of the Kubernetes documentation}(&lt;a href="https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"&gt;https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/&lt;/a&gt;). &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#autoscaling" class="anchor"&gt;
  &lt;/a&gt;
  Autoscaling
&lt;/h1&gt;

&lt;p&gt;Autoscaling means paying for what you need. That’s why you have to adjust the size of your clusters to your specific needs. You can allow Kubernetes autoscaling to be able to &lt;strong&gt;adapt to quick variations&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Horizontal and vertical autoscaling are the two types of autoscaling available. In a nutshell, horizontal autoscaling involves inserting and removing pods depending on whether the load is above or below a specified level. The scale of individual pods balances with vertical autoscaling.&lt;/p&gt;

&lt;p&gt;Both methods of autoscaling are useful for dynamically adapting the usable computational capacity to your real needs. This approach, though, is not necessarily ideal as it does not function with all use cases. For example, when something is requiring computational resources it is therefore not automatically downscaled. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#choose-the-right-aws-instance" class="anchor"&gt;
  &lt;/a&gt;
  Choose the right AWS instance
&lt;/h1&gt;

&lt;p&gt;AWS Kubernetes costs are under a direct impact by the AWS instance developers use to manage Kubernetes clusters. Instances come in a number of different forms, with varying memory and compute resource combinations. Kubernetes pods are the same way, with different resource allocation. The key to keeping AWS Kubernetes costs under check is to make sure &lt;strong&gt;pods stack effectively on your AWS instances&lt;/strong&gt;. The AWS instance should match the size of your pod. &lt;/p&gt;

&lt;p&gt;The scale, number, and historical resource utilization trends of pods all play a role in deciding which AWS instance to use. Applications may have different storage or CPU requirements, which affects the type of instance to use.&lt;/p&gt;

&lt;p&gt;Ensuring that the Kubernetes pods’ resource consumption correlates to the overall CPU and memory available on the AWS instances they use is critical for optimizing resource use and lowering AWS costs.&lt;/p&gt;

&lt;p&gt;Check the Amazon EC2 instance types &lt;a href="https://aws.amazon.com/ec2/instance-types/"&gt;here&lt;/a&gt; and choose the one that suits your needs best. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#use-spot-instances" class="anchor"&gt;
  &lt;/a&gt;
  Use spot instances
&lt;/h1&gt;

&lt;p&gt;When it comes to AWS instances, they are available in several billing profiles: on-demand, reserved, and spot instances. On-demand instances are the most costly but have the best degree of flexibility. Spot instances have the lowest price. However, they can be terminated with a 2-minute warning. You may also get reserved instances for a set amount of time to save costs. As a result, the choice of instance form has a direct effect on the cost of operating Kubernetes on AWS. &lt;/p&gt;

&lt;p&gt;You can utilize &lt;a href="https://aws.amazon.com/ec2/spot/?cards.sort-by=item.additionalFields.startDateTime&amp;amp;cards.sort-order=asc"&gt;spot instances&lt;/a&gt; for workloads that you don’t permanently need and that can handle a lot of interruptions. AWS claims that spot instances will help you save up to 90% on your EC2 on-demand instance prices.  &lt;/p&gt;

&lt;p&gt;If spot instances aren’t a choice for your application since it must still run without delay, you may get a discount if you agree to use the services for a fixed period of time. You will get a substantial discount if you agree to a one- or three-year usage term. According to AWS, this could be between 40% and 60%.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#set-sleeping-schedules" class="anchor"&gt;
  &lt;/a&gt;
  Set sleeping schedules
&lt;/h1&gt;

&lt;p&gt;No matter if you run the Kubernetes clusters on on-demand, reserved, or spot instances, ensuring that underutilized clusters are terminated is crucial for cost management. You can calculate the expense of AWS EC2 by the period of time you are provisioning them. Even though underutilized instances have a much greater resource impact than necessary, they still cost you the full expense of running an instance.&lt;/p&gt;

&lt;p&gt;To put it simply, if a development team uses a cloud-based Kubernetes environment, they only use it during business hours. If they work 40 hours a week, and the environment is still working the rest of the time, they don’t have to pay for the remaining 128 hours when they aren’t using it. This, of course, won’t be the case in every team, especially if they have flexible working hours, but turning off the environment when no one is working could significantly enhance Kubernetes cost optimization. &lt;/p&gt;

&lt;p&gt;Developers can set this up by automating a sleeping schedule and &lt;strong&gt;waking up the environments only when they need them&lt;/strong&gt;. Setting up this schedule means that &lt;strong&gt;the system will automatically scale down unused resources&lt;/strong&gt;. This guarantees that the environment’s condition is saved. Moreover, the environment will “wake up” easily and automatically when the engineer needs it again, meaning that there is no disruption in the workflow.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#practice-regular-kubernetes-cleanup" class="anchor"&gt;
  &lt;/a&gt;
  Practice regular Kubernetes cleanup
&lt;/h1&gt;

&lt;p&gt;If you give engineers full access to build namespaces on demand or use Kubernetes for CI/CD, you can end up with a lot of unused objects or clusters that are still costing you money.  And if you have a sleep mode that decreases computational resources, it is only for momentarily inactive resources, still retaining storage and configuration. That’s why, when you notice that some of your resources have been &lt;strong&gt;inactive for a very long time&lt;/strong&gt;, removing them would be a smart thing to do. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#rightsize-your-kubernetes-cluster" class="anchor"&gt;
  &lt;/a&gt;
  Right-size your Kubernetes cluster
&lt;/h1&gt;

&lt;p&gt;Managing a Kubernetes cluster is different for each case. There are various methods for correctly sizing your cluster, and it is important to develop your application for consistency and durability. As a programmer, you’ll frequently need to consider the specifications for the applications you’ll be running on your cluster before building it.&lt;/p&gt;

&lt;p&gt;Right-sizing your nodes is very important when designing apps for scale. A large number of small nodes and a small number of large nodes are two very different things. That’s why the best approach would be to &lt;strong&gt;find the right balance between these two ends&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;However, different requirements of your apps require different numbers and sizes of nodes. &lt;a href="https://betterprogramming.pub/tips-for-rightsizing-your-kubernetes-cluster-e0a8f1093d8d"&gt;Check this article&lt;/a&gt; to find out what size and number you need for various app cases.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#tag-resources" class="anchor"&gt;
  &lt;/a&gt;
  Tag resources
&lt;/h1&gt;

&lt;p&gt;In any environment, whether cloud, on-premises, or containers, tagging resources is a smart idea. Services are bound to go unnoticed in enterprise Kubernetes environments with numerous test, staging, and development environments. These services become a chronic burden on AWS prices, even though they aren’t used. Companies should use tagging to &lt;strong&gt;guarantee that all services are controlled&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;AWS provides &lt;a href="https://docs.aws.amazon.com/eks/latest/userguide/eks-using-tags.html"&gt;a robust tagging scheme&lt;/a&gt; that you can use to mark services belonging to Kubernetes. You may use these tags to stay on top of resources, resource holders, and resource usage. Effective tagging allows you to easily classify and eliminate unused services. You’ll be able to assign costs and view expense breakdowns for various services once these tags are enabled in the AWS Billing dashboard.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion" class="anchor"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;The first step in your Kubernetes cost optimization is to create an outline and begin monitoring them. Then, to avoid unnecessary computational resource usage, you can set limits, which would make the costs more manageable. &lt;/p&gt;

&lt;p&gt;Determining the best size for your resources critical for cost reduction, and autoscaling will also help. If you use AWS, you can check their less costly options, like spot instances. Additional steps to remove idle resources include an automated sleep schedule and cleaning unused Kubernetes resources. Finally, adjust pod size and implement resource tagging for even better Kubernetes cost optimization. &lt;/p&gt;

&lt;p&gt;Incorporating these tips into your processes will result in a &lt;strong&gt;cost-optimized Kubernetes system&lt;/strong&gt;. This will save your money for more crucial business operations and product improvements. &lt;/p&gt;

</description>
      <category>kubernetes</category>
      <category>devops</category>
      <category>cloud</category>
      <category>management</category>
    </item>
    <item>
      <title>Three ways to use Puppeteer and Node.js to screenshot web pages and generate dynamic Open Graph images for social sharing</title>
      <author>Salma Alam-Naylor</author>
      <pubDate>Wed, 17 Mar 2021 14:26:48 +0000</pubDate>
      <link>https://dev.to/contentful/three-ways-to-use-puppeteer-and-node-js-to-screenshot-web-pages-and-generate-dynamic-open-graph-images-for-social-sharing-5fjj</link>
      <guid>https://dev.to/contentful/three-ways-to-use-puppeteer-and-node-js-to-screenshot-web-pages-and-generate-dynamic-open-graph-images-for-social-sharing-5fjj</guid>
      <description>&lt;p&gt;It’s no secret that you drive more engagement when you share beautiful images with links on social media. But generating fresh images each time you publish a new blog post can be incredibly time-consuming. The good news is, we can harness the power of a tool called Puppeteer to take screenshots of browser pages and generate dynamic images to share on your social media accounts. Let’s take a look!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-open-graph" class="anchor"&gt;
  &lt;/a&gt;
  What is Open Graph?
&lt;/h2&gt;

&lt;p&gt;The Open Graph (OG) protocol was created at Facebook in 2010 to enable web page links to become rich objects with similar functionality and appearance to other content posted on Facebook. If you’ve shared a link on social media and have seen the platform automatically show you a large image, title, description and URL for the link you want to share even before you’ve clicked Post — you’ve seen the OG protocol at work.&lt;/p&gt;

&lt;p&gt;Open Graph meta tags are used in the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; of an HTML page to expose information about web pages to social media platforms and other applications that unfurl URL metadata. OG meta tags are identified in the HTML by a property attribute prefixed with &lt;code&gt;og&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This is an example of an Open Graph meta tag. It provides a url to an image that is used to represent the web page.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;property=&lt;/span&gt;&lt;span class="s"&gt;"og:image"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"https://example.com/image.png"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;OG meta tags can also be used to customize the appearance of your web pages according to the platform it’s shared on. For example, Twitter rolled out their own custom implementation of this, built on the OG protocol, and the following code tells Twitter to show the large image web page previews.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"twitter:card"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"summary_large_image"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt;
    &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"twitter:image"&lt;/span&gt;
    &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"https://example.com/image.png
/&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can see this in this image generated from one of my tweets.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c5FqC928--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.ctfassets.net/fo9twyrwpveg/7kgZvo384CMeOURWn9SJil/1dd7b9e1f133b90e385068c0699fc784/tweet-screenshot.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c5FqC928--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.ctfassets.net/fo9twyrwpveg/7kgZvo384CMeOURWn9SJil/1dd7b9e1f133b90e385068c0699fc784/tweet-screenshot.png" alt="Screenshot of a Twitter post by Salma"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://ogp.me/"&gt;Read more about the Open Graph protocol here.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A basic — yet useful — implementation of an Open Graph image tag on your web pages should point to a static image. But in a world of sensory overload, how do you ensure your OG images provide useful context to your audience for the link you are sharing? How do you create automatically generated dynamic OG images for your web pages without having to open up Photoshop each time you want to promote a new post?&lt;/p&gt;

&lt;p&gt;Enter Puppeteer!&lt;/p&gt;

&lt;p&gt;Puppeteer is a Node library that provides a high-level API to control headless Chrome or Chromium. “Headless” browsers allow you to automate your interactions with a browser-like environment via a command-line interface. Most things that you can do manually in the browser can be done using Puppeteer.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://developers.google.com/web/tools/puppeteer/get-started"&gt;Read the Puppeteer documentation.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A great way to elevate your Open-Graph-image game is to harness the power of Puppeteer by providing a link in your OG image tags that calls out to a serverless function that generates a screenshot of a browser page.&lt;/p&gt;

&lt;p&gt;Other uses for the automation of generating screenshots of web pages might include build pipeline tools that check for web page regressions during new feature releases, or to provide richer experiences in the front end for your audience. Vercel had a great example of this. They show a preview of your application in your deployment dashboard.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hxQ2-laD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.ctfassets.net/fo9twyrwpveg/7opMK3vpblGYTrEdK7voFy/fe75e00a59ce8830dbf52417964365bf/vercel_dashboard.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hxQ2-laD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.ctfassets.net/fo9twyrwpveg/7opMK3vpblGYTrEdK7voFy/fe75e00a59ce8830dbf52417964365bf/vercel_dashboard.png" alt="Screenshot of Salma's Vercel production deployment dashboard"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you want to dive straight into some example code, &lt;a href="https://github.com/whitep4nth3r/puppeteer-demo"&gt;this repository demonstrates how you can get started with Puppeteer to generate screenshots of web page pages&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#i-can-take-screenshots-of-webpages-with-code-this-sounds-pretty-magical-how-does-it-work" class="anchor"&gt;
  &lt;/a&gt;
  I can take screenshots of webpages with code? This sounds pretty magical! How does it work?
&lt;/h3&gt;

&lt;p&gt;This &lt;a href="https://github.com/whitep4nth3r/puppeteer-demo"&gt;puppeteer-demo repository&lt;/a&gt; contains a &lt;a href="https://vercel.com/docs/serverless-functions/introduction"&gt;Vercel serverless function&lt;/a&gt; that runs in the browser and accepts a URL parameter of &lt;code&gt;page&lt;/code&gt;. This would be a URL of a web page you want to screenshot, including &lt;code&gt;https://&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Give it a try by visiting this URL: &lt;a href="https://puppeteer-screenshot-demo.vercel.app/api/screenshot?page=https://whitep4nth3r.com"&gt;https://puppeteer-screenshot-demo.vercel.app/api/screenshot?page=https://whitep4nth3r.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here’s what you’ll see in the browser.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--57WeWTyn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.ctfassets.net/fo9twyrwpveg/7eaINtlVqxuH676WVrp595/055cf2d085cf9567e51e0834298bb342/function_url_screenshot.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--57WeWTyn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.ctfassets.net/fo9twyrwpveg/7eaINtlVqxuH676WVrp595/055cf2d085cf9567e51e0834298bb342/function_url_screenshot.png" alt='alt="Screenshot of the puppeteer screenshot demo function url"'&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Switch out the page parameter for a different URL to watch it in action!&lt;/p&gt;

&lt;p&gt;Let’s take a look at what just happened when you called the URL in the browser.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;You called out to a serverless function hosted on Vercel&lt;/li&gt;
&lt;li&gt;The instance of the function installed Puppeteer and spun up a Chrome headless browser in memory&lt;/li&gt;
&lt;li&gt;The installation of Chrome launched, and visited the provided URL with a viewport size specified of 1920 x 1080&lt;/li&gt;
&lt;li&gt;Chrome took a screenshot of the page as a .png file in the viewport and the function saved the file in memory&lt;/li&gt;
&lt;li&gt;The instance of Chrome closed itself&lt;/li&gt;
&lt;li&gt;The function returned the file to the browser with a Content-Type of image/png&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;That’s pretty cool, right?&lt;/p&gt;

&lt;p&gt;If this excites you as much as it excited me when I first discovered the capabilities of Puppeteer, read on to see three ways in which you can use Puppeteer to take screenshots of web pages: on the command line, as a serverless function in the background or in a front-end application.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-generating-screenshots-on-the-command-line" class="anchor"&gt;
  &lt;/a&gt;
  1. Generating screenshots on the command line
&lt;/h2&gt;

&lt;p&gt;First, clone the repo to your local machine.&lt;/p&gt;

&lt;p&gt;Using git HTTPS:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git clone https://github.com/whitep4nth3r/puppeteer-demo.git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Or, using the GitHub CLI:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;gh repo clone whitep4nth3r/puppeteer-demo
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Install dependencies:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;puppeteer-demo
npm &lt;span class="nb"&gt;install&lt;/span&gt;
&lt;span class="c"&gt;#or&lt;/span&gt;
yarn &lt;span class="nb"&gt;install&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Run the following command in your terminal at the root of the project directory. You can also pass in multiple URLs separated by a space.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;puppeteer-demo
node demo.js https://whitep4nth3r.com
&lt;span class="c"&gt;#or e.g.&lt;/span&gt;
node demo.js https://whitep4nth3r.com https://stefanjudis.com
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You’ll notice that a new .png file (or files) will be created in the screenshots directory from the URL provided.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sZR1nBUb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.ctfassets.net/fo9twyrwpveg/2yDht74KQ6uk4V75AJvJl9/4fd7d4e59aa8af0ab1878fac0175b07b/file_tree_screenshots.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sZR1nBUb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.ctfassets.net/fo9twyrwpveg/2yDht74KQ6uk4V75AJvJl9/4fd7d4e59aa8af0ab1878fac0175b07b/file_tree_screenshots.png" alt="Screenshot of the new .png file being visible in the file tree"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let’s look at the code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;puppeteer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;puppeteer&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Take the urls from the command line&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// launch a new headless browser&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;browser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;puppeteer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;launch&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="c1"&gt;// loop over the urls&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

      &lt;span class="c1"&gt;// check for https for safety!&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;browser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;newPage&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

        &lt;span class="c1"&gt;// set the viewport size&lt;/span&gt;
        &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setViewport&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
          &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1920&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1080&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;deviceScaleFactor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;

        &lt;span class="c1"&gt;// tell the page to visit the url&lt;/span&gt;
        &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;goto&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

        &lt;span class="c1"&gt;// take a screenshot and save it in the screenshots directory&lt;/span&gt;

        &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;screenshot&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`./screenshots/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="s2"&gt;.png`&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;

        &lt;span class="c1"&gt;// done!&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`✅ Screenshot of &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;&lt;span class="s2"&gt; saved!`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`❌ Could not save screenshot of &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;&lt;span class="s2"&gt;!`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;// close the browser&lt;/span&gt;
    &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;browser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;close&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;})();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#2-running-a-serverless-function-in-the-browser" class="anchor"&gt;
  &lt;/a&gt;
  2. Running a serverless function in the browser
&lt;/h2&gt;

&lt;p&gt;Vercel serverless functions can have a maximum size of 50MB. The code on the server (&lt;a href="https://github.com/whitep4nth3r/puppeteer-demo/blob/main/api/screenshot.js"&gt;api/screenshot.js&lt;/a&gt;) uses the &lt;code&gt;puppeteer-core&lt;/code&gt; package (which comes without any headless browser installed) instead of the full &lt;code&gt;puppeteer&lt;/code&gt; installation. To take the screenshot, we install a light version of Chrome via &lt;code&gt;chrome-aws-lambda&lt;/code&gt; on the server. This keeps the function size down.&lt;/p&gt;

&lt;p&gt;Additionally, we configure the &lt;code&gt;puppeteer.launch()&lt;/code&gt; options differently for development and production. For safety on the server, we only accept one URL.&lt;/p&gt;

&lt;p&gt;To run the serverless function locally, you’ll need to install the &lt;a href="https://vercel.com/download"&gt;Vercel CLI&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;To install the Vercel CLI globally via npm, run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm i &lt;span class="nt"&gt;-g&lt;/span&gt; vercel
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To start the development server, open your terminal and run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;puppeteer-demo
vercel dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To ensure Puppeteer is given the correct options for the development environment, pass the query parameter &lt;code&gt;isDev=true&lt;/code&gt; to the function. Here’s an example of how to run the serverless function in your local development environment.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;http://localhost:3000/api/screenshot?page&lt;span class="o"&gt;=&lt;/span&gt;https://whitep4nth3r.com&amp;amp;isDev&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here’s the serverless function adapted from the code which runs on the local command line.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;puppeteer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;puppeteer-core&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;chrome&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;chrome-aws-lambda&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="cm"&gt;/** The code below determines the executable location for Chrome to
 * start up and take the screenshot when running a local development environment.
 *
 * If the code is running on Windows, find chrome.exe in the default location.
 * If the code is running on Linux, find the Chrome installation in the default location.
 * If the code is running on MacOS, find the Chrome installation in the default location.
 * You may need to update this code when running it locally depending on the location of
 * your Chrome installation on your operating system.
 */&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;exePath&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
  &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;platform&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;win32&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;C:&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;Program Files (x86)&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;Google&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;Chrome&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;Application&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;chrome.exe&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;platform&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;linux&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/usr/bin/google-chrome&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/Applications/Google Chrome.app/Contents/MacOS/Google Chrome&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getOptions&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isDev&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isDev&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;args&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt;
      &lt;span class="na"&gt;executablePath&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;exePath&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;headless&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;args&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;chrome&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;executablePath&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;chrome&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;executablePath&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;headless&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;chrome&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;headless&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;pageToScreenshot&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;// pass in the isDev=true parameter if you are developing locally&lt;/span&gt;
  &lt;span class="c1"&gt;// to ensure puppeteer picks up your machine installation of&lt;/span&gt;
  &lt;span class="c1"&gt;// Chrome via the configurable options&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isDev&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isDev&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;true&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// check for https for safety!&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;pageToScreenshot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;statusCode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;404&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="na"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Sorry, we couldn't screenshot that page. Did you include https://?&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;// get options for browser&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;getOptions&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isDev&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;// launch a new headless browser with dev / prod options&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;browser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;puppeteer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;launch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;browser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;newPage&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="c1"&gt;// set the viewport size&lt;/span&gt;
    &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setViewport&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1920&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1080&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;deviceScaleFactor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="c1"&gt;// tell the page to visit the url&lt;/span&gt;
    &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;goto&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;pageToScreenshot&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;// take a screenshot&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;screenshot&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;png&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="c1"&gt;// close the browser&lt;/span&gt;
    &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;browser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;close&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;statusCode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setHeader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Content-Type&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;`image/png`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;// return the file!&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;end&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;statusCode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Sorry, Something went wrong!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#3-building-a-slightly-fancier-front-end-to-run-the-serverless-function" class="anchor"&gt;
  &lt;/a&gt;
  3. Building a slightly fancier front end to run the serverless function
&lt;/h2&gt;

&lt;p&gt;Finally, we can call out to the serverless function in a web page application that returns the screenshot to us in the browser. Call the function URL using fetch, &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Blob"&gt;construct a blob from the response&lt;/a&gt; and &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL"&gt;create an object URL&lt;/a&gt; from the blob to be able to display it in the HTML.&lt;/p&gt;

&lt;p&gt;Here’s the functional front-end code built with vanilla JavaScript.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Change this to "true" if you are developing locally&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isDev&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;true&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// Query the elements we need from the DOM&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;form&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;form&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;urlInput&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;[data-url-input]&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;imageHolder&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;[data-image-holder]&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;imageHolderTitle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;[data-image-holder-title]&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;loader&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;[data-loader]&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;buildImageElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;imageEl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;img&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;imageEl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;src&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;imageEl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;id&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;generatedImage&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;imageEl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;clearImageHolder&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;imageEl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;generatedImage&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;imageEl&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;imageHolderTitle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;display&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;none&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;imageEl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;showLoader&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;loader&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;display&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;block&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;hideLoader&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;loader&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;display&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;none&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Call out to the serverless function on form submit&lt;/span&gt;
&lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;submit&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;preventDefault&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="nx"&gt;clearImageHolder&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="nx"&gt;showLoader&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`/api/screenshot?page=&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;urlInput&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;amp;isDev=&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;isDev&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;blob&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;blob&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;URL&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createObjectURL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;blob&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

      &lt;span class="c1"&gt;// build up the image element with the url&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;newImageEl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;buildImageElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;imageHolderTitle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;display&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;block&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

      &lt;span class="c1"&gt;// add the new element to the DOM&lt;/span&gt;
      &lt;span class="nx"&gt;imageHolder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newImageEl&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;hideLoader&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kI0QBEUB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://images.ctfassets.net/fo9twyrwpveg/129TDeeUgvjZ59WLWtmwu6/fc2bfd177d01dbcc9e6c73e7b6a7fcb9/gen_screenshot.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kI0QBEUB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://images.ctfassets.net/fo9twyrwpveg/129TDeeUgvjZ59WLWtmwu6/fc2bfd177d01dbcc9e6c73e7b6a7fcb9/gen_screenshot.gif" alt="GIF of the screenshot generator at work"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://puppeteer-screenshot-demo.vercel.app/"&gt;View the live demo application here&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-i-generate-my-dynamic-open-graph-images-for-whitep4nth3rcom" class="anchor"&gt;
  &lt;/a&gt;
  How I generate my dynamic Open Graph images for whitep4nth3r.com
&lt;/h2&gt;

&lt;p&gt;To create dynamic Open Graph images for &lt;a href="https://whitep4nth3r.com/"&gt;my personal blog site&lt;/a&gt; built with Next.js and Contentful, I forked &lt;a href="https://github.com/vercel/og-image"&gt;this repository from Vercel&lt;/a&gt; that uses Puppeteer in the same way as described above, and created &lt;a href="https://github.com/whitep4nth3r/p4nth3rblog-og-image"&gt;my own custom service&lt;/a&gt; which I host on Vercel.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://p4nth3rblog-og-image.vercel.app/"&gt;View the front-end application here.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The application renders an HTML page based on the title of a blog post or page, which then uses Puppeteer to screenshot the page, and cache it.&lt;/p&gt;

&lt;p&gt;The URL parameters in the request hold the key to the magic being performed here. Here’s a look at the code that generates my dynamic Open Graph images in the head of my web pages, &lt;a href="https://github.com/whitep4nth3r/p4nth3rblog/blob/main/utils/OpenGraph.js"&gt;which you can find in full here&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Get a random light/dark theme to switch things up&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getRandomTheme&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;themes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;light&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dark&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;themes&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;themes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;)];&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Get a random panther SVG to switch things up even more&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getRandomPanther&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;panthers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;cool&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dolla&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;fire&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;heart&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...];&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;panthers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;panthers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;)];&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Get the base panther image uri - it's important to use encodeURIComponent() here to ensure all characters of the image url are encoded&lt;/span&gt;
 &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getBaseImageEncodedUri&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;encodeURIComponent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://examplebaseurl.com/dir/to/images&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// And the magic happens here&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;generateImageUrl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`https://url.to.the.service/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nb"&gt;encodeURI&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="s2"&gt;.png?theme=&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;getRandomTheme&lt;/span&gt;&lt;span class="p"&gt;()}&lt;/span&gt;&lt;span class="s2"&gt;&amp;amp;md=0fontSize=80px&amp;amp;images=&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;getBaseImageEncodedUri&lt;/span&gt;&lt;span class="p"&gt;()}${&lt;/span&gt;&lt;span class="nx"&gt;getRandomPanther&lt;/span&gt;&lt;span class="p"&gt;()}&lt;/span&gt;&lt;span class="s2"&gt;.svg`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// And this code calls the generateImageUrl function in the head of my blog pages&lt;/span&gt;
 &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;meta&lt;/span&gt; &lt;span class="nx"&gt;property&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;og:image&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;generateImageUrl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Harness the magic of Puppeteer in three ways: on the command line, as a serverless function in the background, or in a front-end application. Explore and fork this &lt;a href="https://github.com/whitep4nth3r/puppeteer-demo"&gt;puppeteer-demo repository&lt;/a&gt; to see Puppeteer in action — and have fun creating dynamic Open Graph images for your websites or finding new ways to use Puppeteer!&lt;/p&gt;

&lt;p&gt;If you found this helpful, check out the rest of &lt;a href="https://www.contentful.com/blog/author/salma-alam-naylor/"&gt;my guides&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;And remember, build stuff, learn things and love what you do.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>serverless</category>
      <category>javascript</category>
      <category>node</category>
    </item>
    <item>
      <title>I created my first npm package</title>
      <author>Erick Mack</author>
      <pubDate>Wed, 17 Mar 2021 14:21:02 +0000</pubDate>
      <link>https://dev.to/erickmack/i-created-my-first-npm-package-1ce8</link>
      <guid>https://dev.to/erickmack/i-created-my-first-npm-package-1ce8</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction" class="anchor"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;My name is Erick, I am a self-taught developer from Mexico, while I mainly do Front-end development, I often make Discord bots for fun, and occasionally get commissions from server owners to make their own custom bot. I'm always open to chatting about Discord bots or web dev stuff so feel free to contact me on &lt;a href="https://twitter.com/Eriickmack"&gt;Twitter&lt;/a&gt;.&lt;br&gt;
Why I made this package: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;To learn something new.&lt;/li&gt;
&lt;li&gt;To make my life easier by not having to go back to old projects trying to remember what I did.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;
  &lt;a href="#creatediscordjsapp" class="anchor"&gt;
  &lt;/a&gt;
  create-discordjs-app
&lt;/h1&gt;
&lt;h2&gt;
  &lt;a href="#what-is-it" class="anchor"&gt;
  &lt;/a&gt;
  What is it?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.npmjs.com/package/create-discordjs-app"&gt;create-discordjs-app&lt;/a&gt; is a simple npm package that automatically generates a discord.js bot template, it includes things like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Command handler&lt;/li&gt;
&lt;li&gt;Dynamic help command&lt;/li&gt;
&lt;li&gt;Command Cooldowns&lt;/li&gt;
&lt;li&gt;Command Permissions&lt;/li&gt;
&lt;li&gt;ESLint &lt;/li&gt;
&lt;li&gt;Command Categories&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#why-not-make-it-a-repo" class="anchor"&gt;
  &lt;/a&gt;
  Why not make it a repo?
&lt;/h2&gt;

&lt;p&gt;Mainly 2 reasons:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I wanted to automatically install dependencies after generating the files.&lt;/li&gt;
&lt;li&gt;I wanted to share it with others that might find it useful, and the name is more memorable than a GitHub link.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But like I mentioned earlier, I also wanted to learn something new, and this allowed me to learn how to publish my own npm package, handle versioning more easily, make it automatically download the dependencies needed, and many other things I got to learn from the community's feedback.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#why-discordjs" class="anchor"&gt;
  &lt;/a&gt;
  Why discord.js?
&lt;/h2&gt;

&lt;p&gt;I am aware of the problems discordjs has and that there are other packages out there that are better optimized for memory use, but I decided to go with discord.js because it's the most popular one out there and the truth is: &lt;br&gt;
Most people are perfectly fine with discord.js, yes I know other libraries might use less memory, and they don't cache anything you don't ask them to and this is great for your bot that needs to be optimized as much as possible because it's in thousands of servers, but most bots out there aren't like that, most bots are in a few servers at a time and these optimizations are not needed.&lt;br&gt;
For beginners or an average user who will have their bot in only a few servers, discord.js is a great option, you can easily find answers to questions, find people that use it, and detailed guides on how to get started.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#how-can-i-use-it" class="anchor"&gt;
  &lt;/a&gt;
  How can I use it?
&lt;/h2&gt;

&lt;p&gt;If you're interested in using it for your next project you can install the package globally on your machine and use it&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm i create-discordjs-app &lt;span class="nt"&gt;-g&lt;/span&gt;
create-discordjs-app
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;or you can use it with npx without having to install it globally&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx create-discordjs-app
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After that, you will be prompted with a series of questions like your project name, author, license, and bot prefix.&lt;br&gt;
Once the files are generated you can go into the new folder that was created and in the .env file enter your discord token, and then you can start the bot with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#downloads-in-the-first-week" class="anchor"&gt;
  &lt;/a&gt;
  Downloads in the first week
&lt;/h1&gt;

&lt;p&gt;To my surprise, the npm package was downloaded 300+ times in the first week of being published, thanks to this I got many useful recommendations on how to improve it, things to add, things to remove, and of course the pesky little bugs that went unnoticed during development.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gkuTI6nc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lfkvptp0mbbv0mnn396t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gkuTI6nc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lfkvptp0mbbv0mnn396t.png" alt="screenshot of weekly downloads shows 357"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#plans-and-how-to-get-involved" class="anchor"&gt;
  &lt;/a&gt;
  Plans and how to get involved
&lt;/h1&gt;

&lt;p&gt;My plans for this package are to polish it as much as I can and to add more options that allow customizing the project to fit your needs and be as useful as possible to as many people as possible.&lt;br&gt;
If you're interested in working on or requesting bug fixes, new features, or better code structure, check out the GitHub page: &lt;br&gt;
&lt;a href="https://github.com/erickmack/create-discordjs-app"&gt;https://github.com/erickmack/create-discordjs-app&lt;/a&gt;&lt;br&gt;
or contact me on Twitter&lt;br&gt;
&lt;a href="https://twitter.com/Eriickmack"&gt;@Eriickmack&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>npm</category>
      <category>node</category>
      <category>programming</category>
    </item>
    <item>
      <title>discord.py Project 2: Welcomer 👋🏽</title>
      <author>Mikey</author>
      <pubDate>Wed, 17 Mar 2021 14:12:37 +0000</pubDate>
      <link>https://dev.to/mikeywastaken/discord-py-project-2-welcomer-46p7</link>
      <guid>https://dev.to/mikeywastaken/discord-py-project-2-welcomer-46p7</guid>
      <description>&lt;p&gt;In this article, you're going to learn how to make a welcoming bot!&lt;/p&gt;

&lt;p&gt;It will send a welcome message to a specified channel with the user's avatar and name!&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--K5XCdbi0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mikey.has-no-bra.in/FXbFgY.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K5XCdbi0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mikey.has-no-bra.in/FXbFgY.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;To start, we need to initialize our bot. For this walkthrough, we can use discord.Client instead of commands.Bot, because we aren't going to have any commands.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;discord&lt;/span&gt;

&lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;discord&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We next need to add our &lt;code&gt;on_member_join&lt;/code&gt; event, and tell the bot to send an embed in the channel:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;discord&lt;/span&gt;

&lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;discord&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;
&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;on_message_join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;member&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;channel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_channel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;channel_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;embed&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;discord&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Embed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"Welcome &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;member&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"Thanks for joining &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;member&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;guild&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;!"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# F-Strings!
&lt;/span&gt;    &lt;span class="n"&gt;embed&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_thumbnail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;member&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;avatar_url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# Set the embed's thumbnail to the member's avatar image!
&lt;/span&gt;
    &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;channel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;embed&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;embed&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;Now run the code, grab an alt account or ask a friend to join the server, and boom!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;But wait... It doesn't work!&lt;/em&gt;&lt;br&gt;
That's because we need the members intent enabled!&lt;/p&gt;

&lt;p&gt;After you've &lt;a href="https://discordpy.readthedocs.io/en/latest/intents.html#privileged-intents"&gt;enabled the Privileged Intents in the dashboard&lt;/a&gt;, we need to enable them in the code!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;discord&lt;/span&gt;

&lt;span class="n"&gt;intents&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;discord&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Intents&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;intents&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;members&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;
&lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;discord&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;intents&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;intents&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;
&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;on_message_join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;member&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;channel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_channel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;channel_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;embed&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;discord&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Embed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"Welcome &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;member&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"Thanks for joining &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;member&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;guild&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;!"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# F-Strings!
&lt;/span&gt;    &lt;span class="n"&gt;embed&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_thumbnail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;member&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;avatar_url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# Set the embed's thumbnail to the member's avatar image!
&lt;/span&gt;    &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;channel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;embed&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;embed&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What you've just done is told the &lt;code&gt;discord.Client&lt;/code&gt; to ask for the Members intent when it starts up. Now it will be able to see member events.&lt;/p&gt;

&lt;p&gt;Now run the code to see the bot welcome the user!&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#have-questions-have-a-suggestion-about-what-to-do-for-the-next-post" class="anchor"&gt;
  &lt;/a&gt;
  Have Questions? Have a suggestion about what to do for the next post?
&lt;/h4&gt;

&lt;p&gt;Tell me in the comments and I'll reply as soon as possible!&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#if-you-found-this-useful-make-sure-to-like-the-post-and-share-it-with-a-friend-you-can-also-follow-me-to-get-my-content-in-your-feed-as-soon-as-its-released" class="anchor"&gt;
  &lt;/a&gt;
  If you found this useful, make sure to like the post and share it with a friend! You can also follow me to get my content in your feed as soon as it's released!
&lt;/h5&gt;

</description>
      <category>discord</category>
      <category>discordpy</category>
      <category>python</category>
    </item>
    <item>
      <title>What is cloud computing? A beginner’s guide</title>
      <author>Adit Modi</author>
      <pubDate>Wed, 17 Mar 2021 13:55:21 +0000</pubDate>
      <link>https://dev.to/aditmodi/what-is-cloud-computing-a-beginner-s-guide-37ne</link>
      <guid>https://dev.to/aditmodi/what-is-cloud-computing-a-beginner-s-guide-37ne</guid>
      <description>&lt;p&gt;We have always been storing the programs and data that we need onto our computer’s hard disk and accessing it whenever required. This is computing. But now technology has taken over and the need to store everything on your physical hard disk is no longer there. Here, Cloud Computing comes into picture. Cloud Computing is the method of computing in which the data and programs are stored over the Internet and not on your hard disk. The Internet is referred to as the Cloud in &lt;strong&gt;‘Cloud Computing’&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;My Background: I am Cloud and Big Data Enthusiast , I am here because I love to Talk about Cloud. I am 11x Cloud Certified Expert. 4x AWS Certified , 3x Oracle Cloud Certified , 3x Azure Certified 1x Alibaba Cloud Certified .&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-is-cloud-computing-" class="anchor"&gt;
  &lt;/a&gt;
  What is cloud computing ?
&lt;/h1&gt;

&lt;p&gt;Cloud computing is the delivery of on-demand computing services — from applications to storage and processing power — typically over the internet and on a pay-as-you-go basis.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#how-does-cloud-computing-work" class="anchor"&gt;
  &lt;/a&gt;
  How does cloud computing work?
&lt;/h1&gt;

&lt;p&gt;Rather than owning their own computing infrastructure or data centers, companies can rent access to anything from applications to storage from a cloud service provider.&lt;/p&gt;

&lt;p&gt;One benefit of using cloud computing services is that firms can avoid the upfront cost and complexity of owning and maintaining their own IT infrastructure, and instead simply pay for what they use, when they use it.&lt;/p&gt;

&lt;p&gt;In turn, providers of cloud computing services can benefit from significant economies of scale by delivering the same services to a wide range of customers.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-cloud-computing-services-are-available" class="anchor"&gt;
  &lt;/a&gt;
  What cloud computing services are available?
&lt;/h1&gt;

&lt;p&gt;Cloud computing services cover a vast range of options now, from the basics of storage, networking, and processing power through to natural language processing and artificial intelligence as well as standard office applications. Pretty much any service that doesn’t require you to be physically close to the computer hardware that you are using can now be delivered via the cloud.&lt;/p&gt;

&lt;p&gt;Over the past there years, job searches that included keywords related to the top cloud providers, such as “Google Cloud,” “Azure,” or “AWS,” increased by 223%, the report found. Job listings that included these terms in the description rose by 101% over the same time frame.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#why-is-it-called-cloud-computing" class="anchor"&gt;
  &lt;/a&gt;
  Why is it called cloud computing?
&lt;/h1&gt;

&lt;p&gt;A fundamental concept behind cloud computing is that the location of the service, and many of the details such as the hardware or operating system on which it is running, are largely irrelevant to the user. It’s with this in mind that the metaphor of the cloud was borrowed from old telecoms network schematics, in which the public telephone network (and later the internet) was often represented as a cloud to denote that the just didn’t matter — it was just a cloud of stuff. This is an over-simplification of course; for many customers location of their services and data remains a key issue.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-are-examples-of-cloud-computing" class="anchor"&gt;
  &lt;/a&gt;
  What are examples of cloud computing?
&lt;/h1&gt;

&lt;p&gt;Cloud computing underpins a vast number of services. That includes consumer services like Gmail or the cloud back-up of the photos on your smartphone, though to the services which allow large enterprises to host all their data and run all of their applications in the cloud. Netflix relies on cloud computing services to run its its video streaming service and its other business systems too, and have a number of other organisations.&lt;br&gt;
§Cloud computing is becoming the default option for many apps: software vendors are increasingly offering their applications as services over the internet rather than standalone products as they try to switch to a subscription model. However, there is a potential downside to cloud computing, in that it can also introduce new costs and new risks for companies using it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Os9gbkOC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5xnpdhlfgk73j05lt9ll.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Os9gbkOC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5xnpdhlfgk73j05lt9ll.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Public cloud services serve as the one bright spot in the outlook for IT spending in 2020. Cloud spending in many regions is expected to grow rapidly as economies reopen and more normal economic activity resumes, with regions such as North America expecting to return to higher spending levels as early as 2022.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#what-is-infrastructureasaservice" class="anchor"&gt;
  &lt;/a&gt;
  What is Infrastructure-as-a-Service?
&lt;/h1&gt;

&lt;p&gt;Cloud computing can be broken down into three cloud computing models. Infrastructure-as-a-Service (IaaS) refers to the fundamental building blocks of computing that can be rented: physical or virtual servers, storage and networking. This is attractive to companies that want to build applications from the very ground up and want to control nearly all the elements themselves, but it does require firms to have the technical skills to be able to orchestrate services at that level. Research by Oracle found that two thirds of IaaS users said using online infrastructure makes it easier to innovate, had cut their time to deploy new applications and services and had significantly cut on-going maintenance costs. However, half said IaaS isn’t secure enough for most critical data.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-is-platformasaservice" class="anchor"&gt;
  &lt;/a&gt;
  What is Platform-as-a-Service?
&lt;/h1&gt;

&lt;p&gt;Platform-as-a-Service (PaaS) is the next layer up — as well as the underlying storage, networking, and virtual servers this will also include the tools and software that developers need to build applications on top of: that could include middleware, database management, operating systems, and development tools.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-is-softwareasaservice" class="anchor"&gt;
  &lt;/a&gt;
  What is Software-as-a-Service?
&lt;/h1&gt;

&lt;p&gt;Software-as-a-Service (SaaS) is the delivery of applications-as-a-service, probably the version of cloud computing that most people are used to on a day-to-day basis. The underlying hardware and operating system is irrelevant to the end user, who will access the service via a web browser or app; it is often bought on a per-seat or per-user basis.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZgwnNQvo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lz2jglw2b6uqzcjrdm8g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZgwnNQvo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lz2jglw2b6uqzcjrdm8g.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-is-private-cloud" class="anchor"&gt;
  &lt;/a&gt;
  What is private cloud?
&lt;/h1&gt;

&lt;p&gt;Private cloud allows organizations to benefit from the some of the advantages of public cloud — but without the concerns about relinquishing control over data and services, because it is tucked away behind the corporate firewall. Companies can control exactly where their data is being held and can build the infrastructure in a way they want — largely for IaaS or PaaS projects — to give developers access to a pool of computing power that scales on-demand without putting security at risk. However, that additional security comes at a cost, as few companies will have the scale of AWS, Microsoft or Google, which means they will not be able to create the same economies of scale. Still, for companies that require additional security, private cloud may be a useful stepping stone, helping them to understand cloud services or rebuild internal applications for the cloud, before shifting them into the public cloud.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-is-hybrid-cloud" class="anchor"&gt;
  &lt;/a&gt;
  What is hybrid cloud?
&lt;/h1&gt;

&lt;p&gt;Hybrid cloud is perhaps where everyone is in reality: a bit of this, a bit of that. Some data in the public cloud, some projects in private cloud, multiple vendors and different levels of cloud usage. According to research by TechRepublic, the main reasons for choosing hybrid cloud include disaster recovery planning and the desire to avoid hardware costs when expanding their existing data center.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--X4DwqC7f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/us39kvxujbm3h23irek1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X4DwqC7f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/us39kvxujbm3h23irek1.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(Refer to this article for more Information.](&lt;a href="https://www.zdnet.com/article/what-is-cloud-computing-everything-you-need-to-know-about-the-cloud/"&gt;https://www.zdnet.com/article/what-is-cloud-computing-everything-you-need-to-know-about-the-cloud/&lt;/a&gt;)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Gartner Forecasts Worldwide Public Cloud Revenue to Grow 6.3%&lt;br&gt;
in 2020. It expects much larger growth in years to come.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I hope that this guide helps you in &lt;strong&gt;building your career with Cloud and getting Cloud Certified&lt;/strong&gt;,&lt;br&gt;
If you have any doubt or unable to understand any concept feel free to contact me on &lt;a href="https://www.linkedin.com/in/adit-modi-2a4362191/"&gt;LinkedIn.&lt;/a&gt;&lt;br&gt;
You can view my badges &lt;a href="https://www.youracclaim.com/users/adit-modi/badges"&gt;here.&lt;/a&gt;&lt;br&gt;
I also am working on various AWS Services and Developing various &lt;strong&gt;Cloud , Big Data &amp;amp; Devops Projects&lt;/strong&gt;.&lt;br&gt;
If you are interested in learning AWS Services then follow me on &lt;a href="https://github.com/AditModi"&gt;github.&lt;/a&gt;&lt;br&gt;
If you liked this content then do clap and share it . Thank You .&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;“Choose a job you love, and you will never have to work a day in your life.” — Confucius&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>cloud</category>
      <category>beginners</category>
      <category>computerscience</category>
      <category>career</category>
    </item>
    <item>
      <title>React - Redux In Less Then 7 Minutes</title>
      <author>Matt Eddy</author>
      <pubDate>Wed, 17 Mar 2021 13:37:47 +0000</pubDate>
      <link>https://dev.to/meddy672/react-redux-in-less-then-7-minutes-had</link>
      <guid>https://dev.to/meddy672/react-redux-in-less-then-7-minutes-had</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--INSppWx5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/hk5gsmion78zs3aoxt6j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--INSppWx5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/hk5gsmion78zs3aoxt6j.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#attention" class="anchor"&gt;
  &lt;/a&gt;
  Attention!!!
&lt;/h1&gt;

&lt;p&gt;The code shown in this article is a valid implementation of the redux pattern referenced from the &lt;a href="https://redux.js.org/"&gt;Official Redux.js.org&lt;/a&gt;. However, redux has provided us with an enhanced toolkit which they recommend using when developing with react and redux. It is completely your decesion on which path you take. You can learn more about &lt;a href="https://redux.js.org/redux-toolkit/overview"&gt;reduxjs/toolkit&lt;/a&gt; by checking out the link.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#overview" class="anchor"&gt;
  &lt;/a&gt;
  Overview
&lt;/h1&gt;

&lt;p&gt;In this article, I will cover some fundamental concepts of redux and how to build a simple application(Counter App) using react and redux.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#redux" class="anchor"&gt;
  &lt;/a&gt;
  Redux
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://redux.js.org/introduction/getting-started"&gt;Redux&lt;/a&gt; is predictable state container for javascript applications. This means whenever there are changes within the application including both data and UI changes, those changes are contained in a single javascript object called the &lt;strong&gt;state&lt;/strong&gt;. The state is often referred to as the &lt;em&gt;single-source-of-truth&lt;/em&gt; because it is never mutated or modified, but instead recreated. With a &lt;em&gt;single-source-of-truth&lt;/em&gt; we can better predict the state of the application at a giving moment.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#redux-fundamentals" class="anchor"&gt;
  &lt;/a&gt;
  Redux Fundamentals
&lt;/h1&gt;

&lt;p&gt;Before diving into the application lets cover some Redux fundamentals. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#state" class="anchor"&gt;
  &lt;/a&gt;
  State
&lt;/h4&gt;

&lt;p&gt;The &lt;em&gt;state&lt;/em&gt; is a javascript object that represents the entire state of a redux application. It can be a simple object with a single value or a more complex object.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nl"&gt;counter&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The state is accessible throughout the entire application and is managed by a centralized container known as the store. The only way to access the store is by dispatching an &lt;strong&gt;action&lt;/strong&gt;.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#actions" class="anchor"&gt;
  &lt;/a&gt;
  Actions
&lt;/h4&gt;

&lt;p&gt;An &lt;em&gt;action&lt;/em&gt; is an description of how the store should change the state.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;INCREMENT&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The change within the application is understood by the action's &lt;strong&gt;type&lt;/strong&gt; property. All actions have a type property. The type property explains to the store how to respond and recreate the state. The creation of the state is handled by a &lt;strong&gt;reducer&lt;/strong&gt;.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#reducers" class="anchor"&gt;
  &lt;/a&gt;
  Reducers
&lt;/h4&gt;

&lt;p&gt;A reducer is a javascript function that will create a new state based on some action type.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;reducer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;initialState&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nx"&gt;actionType&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;ADD&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;counter&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;counter&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Reducers are often referred to as pure javascript functions. A &lt;em&gt;pure javascript function&lt;/em&gt; is a function that giving the same input will always return the same output. They are called pure functions because they are &lt;strong&gt;predictable&lt;/strong&gt; and include &lt;em&gt;no side effects&lt;/em&gt; such as network or database calls. The most import job of a reducer is to recreate the state for the &lt;strong&gt;store&lt;/strong&gt;.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#store" class="anchor"&gt;
  &lt;/a&gt;
  Store
&lt;/h4&gt;

&lt;p&gt;A &lt;em&gt;store&lt;/em&gt; is a javascript object that holds the application's state. There should only be a single store in a redux application.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Dispatch&lt;/span&gt;
  &lt;span class="nx"&gt;getState&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;State&lt;/span&gt;
  &lt;span class="nx"&gt;subscribe&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;listener&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt;
  &lt;span class="nx"&gt;replaceReducer&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;reducer&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Reducer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#store-methods" class="anchor"&gt;
  &lt;/a&gt;
  Store Methods
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;dispatch(action)&lt;/code&gt;: Dispatches an action&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;getState()&lt;/code&gt;: Returns the current state&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;subscribe(listener)&lt;/code&gt;: Adds a change listener&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;replaceReducer(nextReducer)&lt;/code&gt;: Replaces the reducer&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#redux-pattern" class="anchor"&gt;
  &lt;/a&gt;
  Redux Pattern
&lt;/h1&gt;

&lt;p&gt;The redux pattern can visualized as below.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5eJfIuvG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/rfazwysmox66gpapbmq0.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5eJfIuvG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/rfazwysmox66gpapbmq0.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#react-and-redux-counter-app" class="anchor"&gt;
  &lt;/a&gt;
  React and Redux (Counter App)
&lt;/h1&gt;

&lt;p&gt;In this section, I will cover the steps to build a simple counter application with react and redux. The application &lt;a href="https://github.com/meddy672/simple-react-redux"&gt;View Code Repository&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#getting-started" class="anchor"&gt;
  &lt;/a&gt;
  Getting Started
&lt;/h4&gt;

&lt;p&gt;First, I'll create a basic react app with &lt;a href="https://reactjs.org/docs/create-a-new-react-app.html#create-react-app"&gt;npx&lt;/a&gt; and install the needed dependencies: &lt;em&gt;react-redux and redux&lt;/em&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npx create-react-app redux-practice
cd redux-practice
npm i react-redux redux
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, I'll create three new directories to manage the files of my application.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mkdir src/store
mkdir src/containers
mkdir src/components
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;src/store&lt;/code&gt; - Reducers and actions needed for redux store&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;src/containers&lt;/code&gt; - Components connected to the redux store&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;src/components&lt;/code&gt; - Presentational level components&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I'll start off by working on the actions and reducers which will be located in the the store directory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;touch src/store/actions.js
touch src/store/reducers.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;First, I'll define my actions. This application wont have very many for the sake of simplicity and demonstration.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#srcstoreactionsjs" class="anchor"&gt;
  &lt;/a&gt;
  src/store/actions.js
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ADD&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ADD&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;SUBTRACT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;SUBTRACT&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, I'll create the reducer function needed for the store.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#srcstorereducersjs" class="anchor"&gt;
  &lt;/a&gt;
  src/store/reducers.js
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;actionType&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./actions&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;initialState&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;counter&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;reducer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;initialState&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nx"&gt;actionType&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;ADD&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;counter&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;counter&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nx"&gt;actionType&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;SUBTRACT&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;counter&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;counter&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nl"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;reducer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above code snippet I've imported all the actions from &lt;em&gt;actions.js&lt;/em&gt; , then created a state variable to initialize the state for this reducer, and created my reducer function. The reducer function takes two arguments &lt;em&gt;state&lt;/em&gt;, which if not initialized will be set to the initialState, and &lt;em&gt;action&lt;/em&gt; which will be passed in once an action is dispatched. I'll use a switch state to determine the action type and using the actions from &lt;em&gt;actions.js&lt;/em&gt; handle each case accordingly.&lt;/p&gt;

&lt;p&gt;Now that I have my reducer and actions created I'll create my store. The store should be created at the top level component  which in this case is &lt;em&gt;index.js&lt;/em&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#srcindexjs" class="anchor"&gt;
  &lt;/a&gt;
  src/index.js
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;ReactDOM&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-dom&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createStore&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;redux&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Provider&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-redux&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;reducer&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./store/reducers&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./index.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./App&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;store&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createStore&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;reducer&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;ReactDOM&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Fragment&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Provider&lt;/span&gt; &lt;span class="na"&gt;store&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;App&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Provider&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Fragment&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;,&lt;/span&gt;
  &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;root&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the &lt;em&gt;index.js&lt;/em&gt; file I imported &lt;em&gt;createStore&lt;/em&gt; from redux, as well as &lt;em&gt;Provider&lt;/em&gt; from react-redux. I also imported my reducers which I will need for my createStore function. The createStore function takes in the reducers and returns the redux store. I use the Provider which has a prop called &lt;em&gt;store&lt;/em&gt; and I pass the store created above to the Provider prop. At this point the redux store is accessible throughout the entire react application.&lt;/p&gt;

&lt;p&gt;Next, I'll create two components to represent the counter application.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mkdir src/components/CounterButton
mkdir src/components/CounterLabel
touch src/components/CounterButton/CounterButton.js
touch src/components/CounterLabel/CounterLabel.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;These components are presentational components so they will be very simple.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#counterbuttonjs" class="anchor"&gt;
  &lt;/a&gt;
  CounterButton.js
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./CounterButton.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;CounterButton&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"CounterButton"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;
                &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;
                &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clicked&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
                &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"btn btn-primary"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;label&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;CounterButton&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#counterlabeljs" class="anchor"&gt;
  &lt;/a&gt;
  CounterLabel.js
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./CounterLabel.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;CounterLabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'CounterLabel'&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;CounterLabel&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, I'll create the counter component which will be connected to the redux store.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;touch src/containers/Counter.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#counterjs" class="anchor"&gt;
  &lt;/a&gt;
  Counter.js
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;connect&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-redux&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;actionType&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../store/actions&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;CounterLabel&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../components/CounterLabel/CounterLabel&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;CounterButton&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../components/CounterButton/CounterButton&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./Counter.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Counter&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Counter"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;CounterLabel&lt;/span&gt; &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ctr&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;CounterButton&lt;/span&gt;
                    &lt;span class="na"&gt;clicked&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onAdd&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
                    &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Add"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;CounterButton&lt;/span&gt;
                    &lt;span class="na"&gt;clicked&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onSubtract&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
                    &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Subtract"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mapStateToProps&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;ctr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;counter&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mapDispatchToProps&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;dispatch&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;onAdd&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;actionType&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ADD&lt;/span&gt; &lt;span class="p"&gt;}),&lt;/span&gt;
        &lt;span class="na"&gt;onSubtract&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;actionType&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;SUBTRACT&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nx"&gt;mapStateToProps&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;mapDispatchToProps&lt;/span&gt;
&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="nx"&gt;Counter&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Within the &lt;em&gt;Counter.js&lt;/em&gt; I import the connect function from &lt;em&gt;react-redux&lt;/em&gt; package which is used directly on the component at the end of the file. The connect function takes two arguments, first &lt;a href="https://react-redux.js.org/using-react-redux/connect-mapstate"&gt;mapStateToProps&lt;/a&gt; which is responsible for selecting a part of the state that the component needs, and second &lt;a href="https://react-redux.js.org/using-react-redux/connect-mapdispatch"&gt;mapDispatchToProps&lt;/a&gt; which is responsible for dispatching actions to the store. The &lt;strong&gt;onAdd&lt;/strong&gt; and &lt;strong&gt;onSubtract&lt;/strong&gt; functions are passed as props to the ControlButtons and when clicked dispatch their respective actions to the store. At this point are simple counter application is complete.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#when-to-use-redux" class="anchor"&gt;
  &lt;/a&gt;
  When To Use Redux
&lt;/h1&gt;

&lt;p&gt;The application in this article is very simple for learning purposes. In most cases you will not need redux for an application of this size. A state management system is good for large scale applications where state management is difficult to understand. Here are a few pointers on when to use redux that I got from Maxillian over at &lt;a href="https://academind.com/"&gt;Academind&lt;/a&gt;.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Local UI State - Redux not recommended&lt;/li&gt;
&lt;li&gt;Persistent State - Redux can be used for the data you need to display&lt;/li&gt;
&lt;li&gt;Client State - Look to use Redux&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R-uW4qYf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dmp1oh1sc3wycrt4nz01.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R-uW4qYf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dmp1oh1sc3wycrt4nz01.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion" class="anchor"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;As always take care and if you found this article helpful please leave a rating or if you have a question leave a comment and I'll try to get back to you as soon as possible.&lt;/p&gt;

</description>
      <category>react</category>
      <category>redux</category>
      <category>javascript</category>
    </item>
    <item>
      <title>AWS Chatbot to the rescue: never miss an AWS Security alert</title>
      <author>Gert Leenders</author>
      <pubDate>Wed, 17 Mar 2021 13:30:53 +0000</pubDate>
      <link>https://dev.to/aws-builders/aws-chatbot-to-the-rescue-never-miss-an-aws-security-alert-b65</link>
      <guid>https://dev.to/aws-builders/aws-chatbot-to-the-rescue-never-miss-an-aws-security-alert-b65</guid>
      <description>&lt;p&gt;To secure our AWS Cloud setup we use quite some tools: &lt;a href="https://aws.amazon.com/security-hub/"&gt;AWS Security Hub&lt;/a&gt;, &lt;a href="https://aws.amazon.com/inspector/"&gt;AWS Inspector&lt;/a&gt;, &lt;a href="https://aws.amazon.com/guardduty/"&gt;AWS Guardduty&lt;/a&gt; and &lt;a href="https://docs.aws.amazon.com/AmazonECR/latest/userguide/image-scanning.html"&gt;ECR Vulnerability Scanning&lt;/a&gt; just to name a few. &lt;/p&gt;

&lt;p&gt;All these tools are both easy to set up and do a very nice job finding weaknesses and treats. The only issue I had, is that often their findings stayed under the radar way too long. I'm not the person to check all these dashboards on a daily basis for new findings, I simply forget to do so. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#chatops" class="anchor"&gt;
  &lt;/a&gt;
  Chatops
&lt;/h2&gt;

&lt;p&gt;On the other side, we heavily use Slack for chat and notifications from build pipelines, service changes, system errors, etc. All these notifications are collected in a dedicated room for which a company policy dictates those should be all read.&lt;/p&gt;

&lt;p&gt;So ideally, we just had to add our security notifications to the same chatroom to get notified and to never miss a security issue again.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#aws-eventbridge-aws-sns-and-aws-chatbot" class="anchor"&gt;
  &lt;/a&gt;
  AWS Eventbridge, AWS SNS and AWS Chatbot
&lt;/h3&gt;

&lt;p&gt;It turns out that showing all your security findings and alerts in your chat client is quite easy. This is how our setup looks like:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XaSgpJ2d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bjm96bfp72petwn9vlsd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XaSgpJ2d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bjm96bfp72petwn9vlsd.png" alt="Security alerts"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Using &lt;a href="https://aws.amazon.com/eventbridge/"&gt;AWS Eventbridge&lt;/a&gt;, we collect all notifications on a single &lt;a href="https://aws.amazon.com/sns"&gt;SNS topic&lt;/a&gt; named 'security-issues'. On top of that &lt;a href="https://aws.amazon.com/chatbot/"&gt;AWS Chatbot&lt;/a&gt; is configured to listen to that SNS topic and to forward all messages to Slack.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Creating the SNS Topic and setting up AWS Chatbot to listen to the SNS Topic and forward the messages to your chat client is very easy and done in a few clicks. The hardest part is capturing the EventBridge events and forwarding them to SNS, so here the CloudFormation to help you out on that part:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;AWSTemplateFormatVersion: '2010-09-09'
Description: Forward EventBridge security events to AWS SNS

Parameters:
  SecurityIssuesSnsTopic:
    Type: String
    Description: Contains the ARN of the SNS topic on which security issues are published.

Resources:
  GuardDutyEventRule:
    Type: AWS::Events::Rule
    Properties:
      Name: detect-guardduty-findings
      Description: A CloudWatch Event Rule that triggers on Amazon GuardDuty findings.
      State: ENABLED
      EventPattern:
        source:
          - aws.guardduty
        detail-type:
          - GuardDuty Finding
      Targets:
        - Arn:
            Ref: SecurityIssuesSnsTopic
          Id: SecurityTopic

  SecurityHubFindingEventRule:
    Type: AWS::Events::Rule
    Properties:
      Name: detect-securityhub-findings
      Description: A CloudWatch Event Rule that triggers on Amazon Security Hub findings.
      State: ENABLED
      EventPattern:
        source:
          -  aws.securityhub
        detail-type:
          - Security Hub Findings - Custom Action
        resources:
          - !Sub arn:aws:securityhub:${AWS::Region}:${AWS::AccountId}:action/custom/reportfindings
      Targets:
        - Arn:
            Ref: SecurityIssuesSnsTopic
          Id: SecurityTopic

  SecurityHubInsightsEventRule:
    Type: AWS::Events::Rule
    Properties:
      Name: detect-securityhub-insights
      Description: A CloudWatch Event Rule that triggers on Amazon Security Hub insights.
      State: ENABLED
      EventPattern:
        source:
          -  aws.securityhub
        detail-type:
          - Security Hub Insight Results
        resources:
          - !Sub arn:aws:securityhub:${AWS::Region}:${AWS::AccountId}:action/custom/reportfindings
      Targets:
        - Arn:
            Ref: SecurityIssuesSnsTopic
          Id: SecurityTopic

  EcrVulnerabilitiesEventRule:
    Type: AWS::Events::Rule
    Properties:
      Name: detect-ecr-vulnerabilities
      Description: A CloudWatch Event Rule that triggers on Amazon ECR vulnerabilities.
      State: ENABLED
      EventPattern:
        source:
          -  aws.ecr
        detail-type:
          - ECR Image Scan
        detail:
          finding-severity-counts:
            CRITICAL:
              - exists: false
              - numeric: [ "&amp;gt;", 0 ]
            HIGH:
              - exists: false
              - numeric: [ "&amp;gt;", 0 ]
            MEDIUM:
              - exists: false
              - numeric: [ "&amp;gt;", 0 ]
            # UNDEFINED:
            #   - exists: false
            #   - numeric: [ "&amp;gt;", 0 ]
      Targets:
        - Arn:
            Ref: SecurityIssuesSnsTopic
          Id: SecurityTopic

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This should get you started in a matter of minutes 😄&lt;/p&gt;

&lt;p&gt;Here's how the result looks like in Slack. Pretty neat, isn't it!?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DF92lvkn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w6idos19yxpg807w6hpo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DF92lvkn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w6idos19yxpg807w6hpo.png" alt="Slack example"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Currently, all of the above message types are &lt;a href="https://docs.aws.amazon.com/chatbot/latest/adminguide/chatbot-troubleshooting.html"&gt;supported by AWS Chatbot&lt;/a&gt; except for the ECR Vulnerabilities. Hopefully this changes in the near future (for now I also have an email subscription on the SNS Topic to cover those).&lt;/p&gt;

&lt;p&gt;Enjoy and until next time!&lt;/p&gt;

</description>
      <category>aws</category>
      <category>security</category>
      <category>devops</category>
      <category>chatops</category>
    </item>
  </channel>
</rss>
