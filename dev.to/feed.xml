<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Confidence Interval Understanding</title>
      <author>AI Pool</author>
      <pubDate>Wed, 09 Jun 2021 17:12:20 +0000</pubDate>
      <link>https://dev.to/aipool3/confidence-interval-understanding-3878</link>
      <guid>https://dev.to/aipool3/confidence-interval-understanding-3878</guid>
      <description>&lt;h3&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h3&gt;

&lt;p&gt;Suppose you are looking for a particular value of a characteristic of a population, firstly data is obtained from a sample of that population(could be the mean), and the parameter is guessed from the sampled data. Due to not using the whole population, one may ask if the sampled data is a reliable estimation of the whole population. This is where confidence interval comes in.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#confidence-interval"&gt;
  &lt;/a&gt;
  Confidence Interval
&lt;/h3&gt;

&lt;p&gt;As earlier mentioned, the &lt;strong&gt;range of values&lt;/strong&gt; that you expect your estimate to lie within, within a certain level of confidence is the confidence interval.  For instance, if you say you have a 90% confidence level, it means you are &lt;strong&gt;very confident that 90% of the time&lt;/strong&gt;, your estimate falls between the lower and upper bounds which are specified by that confidence interval.&lt;/p&gt;

&lt;p&gt;There's a value called the &lt;strong&gt;alpha value&lt;/strong&gt;, which indicates a threshold, for instance, an alpha of 0.1, which means that there's a less than 10% chance that the test could have occurred under the null hypothesis. Coming back to our confidence level, the desired confidence level is normally 1 minus this alpha value used in the statistical testing.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8lNLA-Ox--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://files.ai-pool.com/a/78fcb62f6ed4096377bfb01d63fb30b8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8lNLA-Ox--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://files.ai-pool.com/a/78fcb62f6ed4096377bfb01d63fb30b8.png" alt="img"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Therefore, if an &lt;strong&gt;alpha value of p &amp;lt; 0.1&lt;/strong&gt; is chosen for statistical significance, then the confidence level would ultimately be &lt;strong&gt;1-0.1= 0.9 or 90%&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Confidence intervals are used for various statistical estimates such as &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Proportions&lt;/li&gt;
&lt;li&gt;Mean of a population&lt;/li&gt;
&lt;li&gt;Differences that exist  between the mean and proportions of a population&lt;/li&gt;
&lt;li&gt;the variation estimates among groups&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As the same suggests, these are all estimates of a number and do not give valuable information around that number, but the confidence interval is a good way to know more information about the variations of the number.&lt;/p&gt;

&lt;p&gt;You can find more in the following article &lt;a href="https://ai-pool.com/a/s/confidence-interval-understanding"&gt;Confidence Interval Understanding&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#other-resources"&gt;
  &lt;/a&gt;
  Other Resources
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ai-pool.com/a/s/bias-variance-tradeoff-in-machine-learning"&gt;Bias-Variance Tradeoff in Machine Learning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ai-pool.com/a/s/understanding-of-probability-distribution-and-normal-distribution"&gt;Understanding of Probability Distribution and Normal Distribution&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ai-pool.com/a/s/recommendation-systems-by-matrix-factorization-and-collaborative-filtering"&gt;Recommendation Systems by Matrix Factorization and Collaborative Filtering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ai-pool.com/a/s/understanding-of-regularization-in-neural-networks"&gt;Understanding of Regularization in Neural Networks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>aipool</category>
      <category>ai</category>
      <category>machinelearning</category>
      <category>datascience</category>
    </item>
    <item>
      <title>CSS Flexbox Cheat Sheet 🔥</title>
      <author>Mariana Simon</author>
      <pubDate>Wed, 09 Jun 2021 16:23:17 +0000</pubDate>
      <link>https://dev.to/simonpaix/css-flexbox-cheat-sheet-1g09</link>
      <guid>https://dev.to/simonpaix/css-flexbox-cheat-sheet-1g09</guid>
      <description>&lt;p&gt;Hi dev friends!&lt;/p&gt;

&lt;p&gt;I made this cheat sheet to help my students. I shared it on Twitter &lt;a href="https://twitter.com/simonpaix/status/1402303521047842821"&gt;here&lt;/a&gt; and it got viral   so I thought it could help this amazing community here too :)&lt;/p&gt;

&lt;p&gt;Let me know what you think 🙂&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wZRwgDoY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/simonpaix/images/blob/main/blog/Flexbox_CheatSheet_LearnPine.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wZRwgDoY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/simonpaix/images/blob/main/blog/Flexbox_CheatSheet_LearnPine.png%3Fraw%3Dtrue" alt="learnpine_flexbox_cheat_sheet"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>css</category>
      <category>beginners</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Github, Python and Docker: The Sweet Trio</title>
      <author>Deepjyoti Barman</author>
      <pubDate>Wed, 09 Jun 2021 16:18:05 +0000</pubDate>
      <link>https://dev.to/deepjyoti30/github-python-and-docker-the-sweet-trio-18bc</link>
      <guid>https://dev.to/deepjyoti30/github-python-and-docker-the-sweet-trio-18bc</guid>
      <description>&lt;p&gt;I have been meaning to write about this for a while. Since most of my work revolves around building API's and deploying them, it is pretty important for me (and people like me) to automate as many things as possible in order to get the best out of my time and available resources.&lt;/p&gt;

&lt;p&gt;My current tech stack revolves around the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Python (that wasn't hard to guess, huhh!?)&lt;/li&gt;
&lt;li&gt;FastAPI (For the API)&lt;/li&gt;
&lt;li&gt;Celery (For workers to do tasks in the background)&lt;/li&gt;
&lt;li&gt;Docker (Why not!?)&lt;/li&gt;
&lt;li&gt;GitHub (Version control)&lt;/li&gt;
&lt;li&gt;DigitalOcean (Server)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#how-do-the-above-fit-in-the-bigger-picture"&gt;
  &lt;/a&gt;
  How do the above fit in the bigger picture?
&lt;/h2&gt;

&lt;p&gt;I will try to keep things as simple as possible.&lt;/p&gt;

&lt;p&gt;I use Python as my primary language to build API's. FastAPI is a Python framework that makes building production API's way simpler. Celery is a Python tool/library that queues tasks and does them in the background.&lt;/p&gt;

&lt;p&gt;Using the above three makes my API fast and production ready.&lt;/p&gt;

&lt;p&gt;I use Docker for containerizing my API. The code for the API and Docker is stored on GitHub. Finally, the docker container is deployed on a VPS on DigitalOcean so that my API can be interected with by the people and most importantly, my apps!&lt;/p&gt;

&lt;p&gt;When all of them are used together, I have a fast, production ready API that is accessible by my apps.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#typical-scenario"&gt;
  &lt;/a&gt;
  Typical Scenario
&lt;/h2&gt;

&lt;p&gt;Let's consider two locations:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;My PC (where I write code)&lt;/li&gt;
&lt;li&gt;The server (where the API is deployed)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In order for my code to go from the first destination (my PC) to the second destination (my server), it has to go through a few steps.&lt;/p&gt;

&lt;p&gt;Now, let's say we don't know something called pipeline exists. A typical way for a code change to go from the start point to the destination would be the following steps:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Code pushed to GitHub.&lt;/li&gt;
&lt;li&gt;I ssh into my server.&lt;/li&gt;
&lt;li&gt;Pull the latest code changes.&lt;/li&gt;
&lt;li&gt;Build the latest docker image.&lt;/li&gt;
&lt;li&gt;Deploy.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here's a simple question, out of all the above steps, which ones require me to do them manually or even a part of them manually?&lt;/p&gt;

&lt;p&gt;I need to push the code &lt;strong&gt;myself&lt;/strong&gt;, I need to ssh into my server &lt;strong&gt;myself&lt;/strong&gt;. I need to pull the latest code changes &lt;strong&gt;myself&lt;/strong&gt;. I need to build the docker image &lt;strong&gt;myself&lt;/strong&gt;. I need to deploy the docker image &lt;strong&gt;myself&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;So, as it turns out, all the steps require me to give them some manual input.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#remove-redundant-steps"&gt;
  &lt;/a&gt;
  Remove redundant steps
&lt;/h2&gt;

&lt;p&gt;Now, out of the above, lets try to filter out the redundant steps. Redundant steps are those that can be executed by my computer with minimal interaction (can be passed through env variables) for me.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Redundant steps are those that can be executed by my computer with minimal interaction (can be passed through env variables) for me.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;We can make ssh into server automated since we just need to pass an ssh key.&lt;/li&gt;
&lt;li&gt;We can automate pulling the latest code changes.&lt;/li&gt;
&lt;li&gt;We can automate the docker image build and push process since it's the same step being repeated.&lt;/li&gt;
&lt;li&gt;We can automate the deployment of the latest docker image since that doesn't require any input.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-is-github-actions-or-anything-similar"&gt;
  &lt;/a&gt;
  What is GitHub Actions (or anything similar)?
&lt;/h2&gt;

&lt;p&gt;GitHub Actions is a Continuous Integration service. It is very much similar to Travis CI and Jenkins but it is built by GitHub so that obviously comes with perks if we're using GitHub.&lt;/p&gt;

&lt;p&gt;We pass GitHub Actions a few steps to follow (remember those redundant steps?). It will gracefully follow all the steps and the end result should be our code being deployed.&lt;/p&gt;

&lt;p&gt;Basically, we are defining a path that our code will follow in order to reach their destination (the server) but &lt;strong&gt;without any human interaction&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;One thing we need to keep in mind is that GitHub Actions will actually run the steps we ask it to run in a server somewhere but not in our server neither in our computer. This is why we say &lt;em&gt;pipelines build on the fly&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;We can easily specify which OS GitHub Action uses in order to run the steps. (More on that below).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-do-we-tell-github-actions-to-do-something"&gt;
  &lt;/a&gt;
  How do we tell GitHub Actions to do something?
&lt;/h3&gt;

&lt;p&gt;In order to let GitHub know that we want it to follow a few steps and do an &lt;em&gt;action&lt;/em&gt;, we can do that by passing a &lt;code&gt;yaml&lt;/code&gt; file. This file needs to follow the &lt;a href="https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions"&gt;GitHub workflow syntax&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We can define jobs in the file. Each job can have a few steps that are supposed to be followed. Jobs can be defined in the following way:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="c1"&gt;# Name of the job&lt;/span&gt;
  &lt;span class="na"&gt;push-to-docker&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt; &lt;span class="c1"&gt;# Use latest Ubuntu for the steps&lt;/span&gt;
    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="c1"&gt;# Do something&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Do something&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#removing-redundant-steps"&gt;
  &lt;/a&gt;
  Removing redundant steps
&lt;/h2&gt;

&lt;p&gt;Now that we know that we can use GitHub Actions to automate our steps, let's see how we can make sure that GitHub Actions follows each step.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;NOTE: From now on, we need to keep in mind that the steps are being written for GitHub Actions.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#automate-pulling-the-latest-code-changes"&gt;
  &lt;/a&gt;
  Automate pulling the latest code changes
&lt;/h3&gt;

&lt;p&gt;There is a neat action that is provided by GitHub itself. &lt;a href="https://github.com/actions/checkout"&gt;GitHub Actions Checkout&lt;/a&gt; checks out the latest code from the repository we're running the action on.&lt;/p&gt;

&lt;p&gt;This means, we can just use this package to pull our latest changes. Now in whatever server GitHub Action is running, we will basically clone the latest changes from our repo to that server.&lt;/p&gt;

&lt;p&gt;Following is the code to tell Actions to checkout the latest code from the current repo.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;example-job&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="c1"&gt;# Checkout the code&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Checkout Repo&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/checkout@v2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above code tells action to start a new job named &lt;code&gt;example-job&lt;/code&gt; on the &lt;code&gt;latest version of Ubuntu&lt;/code&gt; and run the following steps.&lt;/p&gt;

&lt;p&gt;The first step pulls the latest changes of the current repo to that OS.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#automate-building-the-docker-image-and-pushing-it"&gt;
  &lt;/a&gt;
  Automate building the docker image and pushing it
&lt;/h3&gt;

&lt;p&gt;Now, since we have the latest code changes avaiable, we can easily build a docker image and push it to Docker Hub or GitHub Container Registry.&lt;/p&gt;

&lt;p&gt;In order to do that, we can use the package &lt;a href="https://github.com/docker/build-push-action"&gt;build-push-action&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;However, docker or GitHub doesn't just let anyone push an image to the container registry. This means, we need to login to docker in order to push the latest built image. We can do that by using the &lt;a href="https://github.com/docker/login-action"&gt;login-action&lt;/a&gt; package from docker.&lt;/p&gt;

&lt;p&gt;Adding the above steps to the yaml file will make it look like following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
   &lt;span class="na"&gt;example-job&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="c1"&gt;# Checkout the code&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Checkout Repo&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/checkout@v2&lt;/span&gt;
      &lt;span class="c1"&gt;# Login to docker&lt;/span&gt;
      &lt;span class="c1"&gt;# This can be used for both Docker Hub and&lt;/span&gt;
      &lt;span class="c1"&gt;# GitHub container registry.&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Login to GitHub Container Registry&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;docker/login-action@v1&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="c1"&gt;# Remove the following line if you want to&lt;/span&gt;
          &lt;span class="c1"&gt;# login to docker hub.&lt;/span&gt;
          &lt;span class="na"&gt;registry&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ghcr.io&lt;/span&gt;
          &lt;span class="na"&gt;username&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ github.repository_owner }}&lt;/span&gt;
          &lt;span class="c1"&gt;# secrets are GitHub actions that can be added&lt;/span&gt;
          &lt;span class="c1"&gt;# from settings of the repo.&lt;/span&gt;
          &lt;span class="na"&gt;password&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.CR_PAT }}&lt;/span&gt;
      &lt;span class="c1"&gt;# Build the docker image and push it.&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Build image&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;docker/build-push-action@v2&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;context&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;.&lt;/span&gt;
          &lt;span class="na"&gt;push&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
          &lt;span class="c1"&gt;# Remove the `gchr.io/` if you're pushing to&lt;/span&gt;
          &lt;span class="c1"&gt;# Docker Hub&lt;/span&gt;
          &lt;span class="na"&gt;tags&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ghcr.io/owner/packageName:latest&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With the above code, we have already removed three steps that we were doing manually. Now we can just ssh into our server, pull the latest image and deploy it. But wait a minute, shouldn't we automate that too?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#automate-ssh-into-server-and-deploy-latest-image"&gt;
  &lt;/a&gt;
  Automate SSH into server and deploy latest image
&lt;/h3&gt;

&lt;p&gt;Now we have just one more step left. We want our GitHub Action to deploy the latest image in our server as well. Since our action is already running on a machine, can't we just pass a few steps to make the machine ssh into the actual server (the destination) and then deploy the changes?&lt;/p&gt;

&lt;p&gt;Yes we can! We will use the &lt;a href="https://github.com/appleboy/ssh-action"&gt;ssh action&lt;/a&gt; package for that. This package will do what we have been doing manually. SSH into the server and deploy.&lt;/p&gt;

&lt;p&gt;Let's add a new job that will wait for our first job to complete and then ssh into our server and deploy the changes:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;  &lt;span class="c1"&gt;# Name of the job is deploy&lt;/span&gt;
  &lt;span class="na"&gt;deploy&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;needs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;job1&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="c1"&gt;# SSH into the server&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;SSH into server&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;appleboy/ssh-action@master&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="c1"&gt;# The server IP of our VPS from DigitalOcean&lt;/span&gt;
          &lt;span class="c1"&gt;# or any other provider. This is again&lt;/span&gt;
          &lt;span class="c1"&gt;# passed in as a secret.&lt;/span&gt;
          &lt;span class="na"&gt;host&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.SERVER_IP }}&lt;/span&gt;
          &lt;span class="c1"&gt;# Username of the user sshing into the server&lt;/span&gt;
          &lt;span class="na"&gt;username&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.SERVER_USERNAME }}&lt;/span&gt;
          &lt;span class="c1"&gt;# The private ssh key in order to get access&lt;/span&gt;
          &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.KEY }}&lt;/span&gt;
          &lt;span class="na"&gt;script&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;docker pull ghcr.io/owner/packageName:latest &amp;amp;&amp;amp; docker run ghcr.io/owner/packageName:latest&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So the above job takes care of deploying as well.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note that you might have a more complex deploy script for Docker in order to consider things like if the container is already running and ports etc.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#final-steps"&gt;
  &lt;/a&gt;
  Final steps
&lt;/h2&gt;

&lt;p&gt;Now that we have our steps file in place, we need to tell GitHub to run it when we push something. We can do that by saving the file in the &lt;code&gt;.github/workflows/&lt;/code&gt; directory of our project. So if the name of the file is &lt;code&gt;build.yml&lt;/code&gt;, we will have the following directory structure.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;-- project
  |-- .github
    |-- workflows
      |-- build.yml
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once the file is located like above, it will be automatically picked up by GitHub. However, we might not want the action to run when we push to certain branches. The file should just run on a few branches (let's say &lt;code&gt;staging&lt;/code&gt; and &lt;code&gt;production&lt;/code&gt;), we can do that by the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;push&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;branches&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;production"&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;staging"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can also give the action a name by the &lt;code&gt;name&lt;/code&gt; syntax:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Build API and Deploy&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#adding-secrets"&gt;
  &lt;/a&gt;
  Adding secrets
&lt;/h3&gt;

&lt;p&gt;Now, you might not want sensitive data to be passed on along with the code. Especially if the repo is public. In a case like this, we can use GitHub's secrets feature to store sensitive data like &lt;code&gt;ssh private key&lt;/code&gt; etc.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://stackoverflow.com/questions/57685065/how-to-set-secrets-in-github-actions"&gt;This question on StackOverflow explains how to add secrets on GitHub&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;We started with 5 steps, each one of them required manual interaction. Now we are left with one step (git commit) that requires interaction. All the other steps are automatically handled by our CI service (GitHub). CI is a very useful aspect of deployment, especially if you're a web developer.&lt;/p&gt;

&lt;p&gt;When we add all the jobs and steps to one file, it turns out as following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Build API and Deploy&lt;/span&gt;

&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;push&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;branches&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;production"&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;staging"&lt;/span&gt;

&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;example-job&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="c1"&gt;# Checkout the code&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Checkout Repo&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/checkout@v2&lt;/span&gt;
      &lt;span class="c1"&gt;# Login to docker&lt;/span&gt;
      &lt;span class="c1"&gt;# This can be used for both Docker Hub and&lt;/span&gt;
      &lt;span class="c1"&gt;# GitHub container registry.&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Login to GitHub Container Registry&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;docker/login-action@v1&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="c1"&gt;# Remove the following line if you want to&lt;/span&gt;
          &lt;span class="c1"&gt;# login to docker hub.&lt;/span&gt;
          &lt;span class="na"&gt;registry&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ghcr.io&lt;/span&gt;
          &lt;span class="na"&gt;username&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ github.repository_owner }}&lt;/span&gt;
          &lt;span class="c1"&gt;# secrets are GitHub actions that can be added&lt;/span&gt;
          &lt;span class="c1"&gt;# from settings of the repo.&lt;/span&gt;
          &lt;span class="na"&gt;password&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.CR_PAT }}&lt;/span&gt;
      &lt;span class="c1"&gt;# Build the docker image and push it.&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Build image&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;docker/build-push-action@v2&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;context&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;.&lt;/span&gt;
          &lt;span class="na"&gt;push&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
          &lt;span class="c1"&gt;# Remove the `gchr.io/` if you're pushing to&lt;/span&gt;
          &lt;span class="c1"&gt;# Docker Hub&lt;/span&gt;
          &lt;span class="na"&gt;tags&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ghcr.io/owner/packageName:latest&lt;/span&gt;
  &lt;span class="c1"&gt;# Name of the job is deploy&lt;/span&gt;
  &lt;span class="na"&gt;deploy&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;needs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;example-job&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="c1"&gt;# SSH into the server&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;SSH into server&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;appleboy/ssh-action@master&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="c1"&gt;# The server IP of our VPS from DigitalOcean&lt;/span&gt;
          &lt;span class="c1"&gt;# or any other provider. This is again&lt;/span&gt;
          &lt;span class="c1"&gt;# passed in as a secret.&lt;/span&gt;
          &lt;span class="na"&gt;host&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.SERVER_IP }}&lt;/span&gt;
          &lt;span class="c1"&gt;# Username of the user sshing into the server&lt;/span&gt;
          &lt;span class="na"&gt;username&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.SERVER_USERNAME }}&lt;/span&gt;
          &lt;span class="c1"&gt;# The private ssh key in order to get access&lt;/span&gt;
          &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.KEY }}&lt;/span&gt;
          &lt;span class="na"&gt;script&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;docker pull ghcr.io/owner/packageName:latest &amp;amp;&amp;amp; docker run ghcr.io/owner/packageName:latest&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Adding the above workflow requires just a few seconds but it highly removes the manual work for me. I can now just make some changes and merge them to a branch and it will be automatically picked up by my pipeline and deployed in a matter of seconds.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/deepjyoti30/ytmdl-web-v2/blob/master/.github/workflows/build-push.yml"&gt;If you'd like to see one of these in action&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;CI can also be used for things like testing. The actions can be run on various events like &lt;em&gt;Pull Requests&lt;/em&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#this-article-was-originally-posted-at-my-personal-blog"&gt;
  &lt;/a&gt;
  &lt;a href="https://blog.deepjyoti30.dev/github-actions-pipeline"&gt;This article was originally posted at my personal blog&lt;/a&gt;
&lt;/h2&gt;

</description>
      <category>python</category>
      <category>devops</category>
      <category>docker</category>
      <category>github</category>
    </item>
    <item>
      <title>App store or web? Why not both!?</title>
      <author>Max Lynch</author>
      <pubDate>Wed, 09 Jun 2021 16:12:23 +0000</pubDate>
      <link>https://dev.to/ionic/app-store-or-web-why-not-both-3fa2</link>
      <guid>https://dev.to/ionic/app-store-or-web-why-not-both-3fa2</guid>
      <description>&lt;p&gt;Most app development technologies force teams  to make hard decisions about where they will distribute their apps, usually either app stores as a native app or the web as a Progressive Web App.&lt;/p&gt;

&lt;p&gt;Building a native Swift (iOS) or Kotlin (Android) app, for example, obviously limits teams to just those respective platforms. But others have more subtle restrictions. Xamarin enables you to build for iOS, Android, and Desktop, but not for the web, meaning no access to a major chunk of mobile traffic and app-consuming users. React Native’s View elements can be abstracted to have the same API on the web but you will need to write completely separate view code for it, avoid using certain standard web features, and use different calls for certain APIs, so it’s an additional investment. Flutter can be used to build iOS, Android, and Web apps, but its web support requires multiple MBs of code for users so it’s not appropriate for high-performance Progressive Web Apps and speed-sensitive web sites like those that depend on search engine rankings and SEO.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://capacitorjs.com/"&gt;Capacitor&lt;/a&gt;, a universal app runtime, avoids these tradeoffs by targeting one universal runtime (the web), and giving you maximum optionality for where you distribute the app that you build. You can deploy your app with one codebase anywhere your users are, even if that happens to change! That might mean the app stores today, but it could mean the web and desktop tomorrow.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-optionality-looks-like"&gt;
  &lt;/a&gt;
  What Optionality Looks Like
&lt;/h2&gt;

&lt;p&gt;I was recently helping a team think through an app project they were going to deploy to the app stores on iOS and Android. They were using Capacitor with React, using a home-grown UI based on Tailwind. &lt;/p&gt;

&lt;p&gt;During development, the team decided that they wanted to have a strong web portion to their app in order to easily acquire users, benefit from instant access and SEO on the web, and avoid app install bounce risk (meaning, the user leaves without ever installing the app, which is very common in the mobile world!)&lt;/p&gt;

&lt;p&gt;Since their app was built with &lt;a href="https://capacitorjs.com/"&gt;Capacitor&lt;/a&gt;, utilizing Capacitor’s &lt;a href="https://capacitorjs.com/docs/plugins"&gt;cross-platform APIs&lt;/a&gt;, they could simply deploy the same app with the same code as a Progressive Web App hosted on a platform like Vercel or Netlify.&lt;/p&gt;

&lt;p&gt;And this decision didn’t preclude them from also shipping a native iOS and Android app. They decided that they would unlock some additional features that depended on native functionality missing from the browser environment for users that were “activated” and likely to stick around.&lt;/p&gt;

&lt;p&gt;Doing so in Capacitor was straightforward because Capacitor APIs are identical on iOS, Android, and the Web, and Capacitor comes with a &lt;a href="https://capacitorjs.com/docs/core-apis/web#isnativeplatform"&gt;number of utilities&lt;/a&gt; for adding conditional platform-specific code if desired.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-this-matters"&gt;
  &lt;/a&gt;
  Why this Matters
&lt;/h2&gt;

&lt;p&gt;For new projects, the greatest risk isn’t technical but rather that no one uses your app and it never gains meaningful traction or scale. One of the best ways to avoid that is to reach the broadest possible segment of your target audience on day one.&lt;/p&gt;

&lt;p&gt;For most companies, their audience isn’t on a single platform, form factor, or environment (such as mobile or web). This is especially true for consumer and enterprise consumer companies. In fact, there’s a good chance a majority of users aren’t even on a platform that you, the developer, actually use primarily (such as Android if you’re an iPhone user or web apps if you’re in the US and used to installed native apps).&lt;/p&gt;

&lt;p&gt;Having optionality might mean the difference between your app project failing or succeeding, and nothing could matter more than that.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-does-this-compare-to-progressive-web-apps"&gt;
  &lt;/a&gt;
  How does this compare to Progressive Web Apps?
&lt;/h2&gt;

&lt;p&gt;One of the things to think about when building a Progressive Web App &lt;em&gt;not&lt;/em&gt; with Capacitor, is that it will constrain your app to running only in a traditional browser context. This means it will only be accessible on the web and not have the option to access native APIs that don't have a browser analog since it cannot be distributed in popular mobile app stores.&lt;/p&gt;

&lt;p&gt;Thus, the decision to build a Progressive Web App can also be limiting. But in this case a very straightforward way to add native iOS and Android support is by installing Capacitor into your Progressive Web App. &lt;/p&gt;

&lt;p&gt;Capacitor has &lt;a href="https://capacitorjs.com/docs/web"&gt;full Progressive Web App support&lt;/a&gt; and apps use the same Capacitor API calls regardless of the platform they are running on. This makes it easy to bring it to iOS and Android with the same code.&lt;/p&gt;

&lt;p&gt;In that sense, Capacitor is "web app virtualization layer" that enables standard web apps to run anywhere with the same APIs, regardless of the "host" platform underneath.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whos-using-capacitor-today"&gt;
  &lt;/a&gt;
  Who's using Capacitor today?
&lt;/h2&gt;

&lt;p&gt;Capacitor is growing quickly (100% YoY) and is installed &lt;a href="https://npmcharts.com/compare/@capacitor/core"&gt;over 500k times per month&lt;/a&gt;. Teams at companies like Burger King, Tim Hortons, Workgrid (Liberty Mutual), and Fidelity, to name a few, are all using Capacitor to enable their web teams to deploy iOS, Android, and Web apps with the same code.&lt;/p&gt;

&lt;p&gt;Capacitor was also rated &lt;a href="https://2020.stateofjs.com/en-US/technologies/mobile-desktop/"&gt;#1 in satisfaction among mobile development tools&lt;/a&gt; on the latest State of JS survey.&lt;/p&gt;

&lt;p&gt;Capacitor was created by the team behind the popular &lt;a href="https://ionicframework.com/"&gt;Ionic Framework&lt;/a&gt; as a  replacement for Cordova for deploying modern &lt;a href="https://webnative.tech"&gt;Web Native&lt;/a&gt; apps on iOS, Android, Desktop, and Web.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#get-started"&gt;
  &lt;/a&gt;
  Get started
&lt;/h2&gt;

&lt;p&gt;Getting started with Capacitor and building full distribution optionality into your mobile-enabled web app is as easy as installing the Capacitor library and running a few commands.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://capacitorjs.com/docs"&gt;Get started&lt;/a&gt; with Capacitor today and &lt;a href="https://twitter.com/capacitorjs"&gt;follow us&lt;/a&gt; for more resources and updates on the project!&lt;/p&gt;

</description>
      <category>ionic</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>My Experience With FreeCodeCamp</title>
      <author>Daniel Medina</author>
      <pubDate>Wed, 09 Jun 2021 16:02:12 +0000</pubDate>
      <link>https://dev.to/dnrm/my-experience-with-freecodecamp-14om</link>
      <guid>https://dev.to/dnrm/my-experience-with-freecodecamp-14om</guid>
      <description>&lt;p&gt;A year ago I joined freeCodeCamp and since I've now gotten 4 certifications, I thought I'd share my personal experience and thoughts about it.&lt;/p&gt;

&lt;blockquote&gt;
&lt;h4&gt;
  &lt;a href="#what-is-freecodecamp"&gt;
  &lt;/a&gt;
  What is freeCodeCamp?
&lt;/h4&gt;

&lt;p&gt;FreeCodeCamp is a free online platform for learning all sorts of topics from Web Development to Machine Learning. Check it out &lt;a href="http://freecodecamp.org/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#my-experience"&gt;
  &lt;/a&gt;
  My experience
&lt;/h2&gt;

&lt;p&gt;My first FreeCodeCamp course was te Responsive Web Design Certification. I found the learning method very interesting. I find this learning method really good because you actually get a hands-on experience with what you're learning. This way I learned a lot about core web technologies such as HTML, CSS, and Javascript. &lt;/p&gt;

&lt;p&gt;Something I like a lot about freeCodeCamp is that you have the flexibility to create your own schedule and practice whenever you want and are able to. There is no penalty for spending a little more time in something. &lt;/p&gt;

&lt;p&gt;I have completed the &lt;strong&gt;Responsive Web Design&lt;/strong&gt;, &lt;strong&gt;Javascript Algorithms and Data Structures&lt;/strong&gt;, &lt;strong&gt;Frontend Libraries&lt;/strong&gt;, and &lt;strong&gt;APIs and Microservices&lt;/strong&gt; Certifications. So I can say I've experienced quite a bit of the freeCodeCamp platform. For the most part I have nothing but positive feedback. I have recommended this several people who have asked me for help in starting their own career in webdev. One of them is now very experienced and has moved onto React. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#suggestions"&gt;
  &lt;/a&gt;
  Suggestions
&lt;/h2&gt;

&lt;p&gt;As much as there is good in this platform, there are some things that could be improved. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-improve-redux-section"&gt;
  &lt;/a&gt;
  1. Improve Redux section.
&lt;/h3&gt;

&lt;p&gt;I struggled the most in the React-Redux section of the Front-end libraries certification because of explanations that i felt assumed previous knowledge of Redux. I felt they went a little too fast.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Overall, I consider freeCodeCamp as one of the best platforms to start your web developer journey. It has clear, concise, and fast-paced explanations that are guaranteed to bump up your skills.&lt;/p&gt;

&lt;p&gt;Thanks for reading my article and make sure to keep in touch for more upcoming articles.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>freecodecamp</category>
      <category>javascript</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>How to handle errors effectively in React JS?</title>
      <author>Jyotishman Saikia</author>
      <pubDate>Wed, 09 Jun 2021 15:48:55 +0000</pubDate>
      <link>https://dev.to/jyotishman/how-to-handle-errors-effectively-in-react-js-dl2</link>
      <guid>https://dev.to/jyotishman/how-to-handle-errors-effectively-in-react-js-dl2</guid>
      <description>&lt;h1&gt;
  &lt;a href="#can-you-guess-what-is-wrong-with-this-code-"&gt;
  &lt;/a&gt;
  Can you guess what is wrong with this code ?
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BUTwBKFH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eq3iisb4j6ufpdk9rq8m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BUTwBKFH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eq3iisb4j6ufpdk9rq8m.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#if-you-ship-this-code-to-production-your-users-will-see-a-white-screen-in-your-entire-application"&gt;
  &lt;/a&gt;
  If you ship this code to production, your users will see a white screen in your entire application.
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8Z3Gdz0a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qgzvibvu0ktkzk4kgbz4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8Z3Gdz0a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qgzvibvu0ktkzk4kgbz4.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And if you run this application in your development server you will get error like this-&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gq7yUaxx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2fv3zq2n2jy6lysj0x8w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gq7yUaxx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2fv3zq2n2jy6lysj0x8w.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;So how to handle such errors so that our application doesn't crash in the production&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;One way is to add try/catch block in all our components inside the render or return statement. This can solve the issue.&lt;/p&gt;

&lt;p&gt;But if our application is large and we have 100 components in our application , adding try/catch to all the components would be tiresome.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#here-comes-the-role-of-react-error-boundary"&gt;
  &lt;/a&gt;
  Here comes the role of React Error Boundary.
&lt;/h3&gt;

&lt;p&gt;Error boundaries are React components that logs runtime errors anywhere in our child components and display a fallback UI instead of the component tree that crashed.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;But to use React Error Boundary it has to be class component.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Fortunately! we have a plugin &lt;a href="https://www.npmjs.com/package/react-error-boundary"&gt;react-error-boundary&lt;/a&gt; to use it in our functional components.&lt;/p&gt;

&lt;p&gt;So, let add react-boundary in our application.&lt;/p&gt;

&lt;p&gt;App.jsx file&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TfVNfzRU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e3zwehq003grh4txehv9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TfVNfzRU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e3zwehq003grh4txehv9.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;errorHandling.jsx&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Js42Rxxp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1cwxgy6dejt60vkdduxc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Js42Rxxp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1cwxgy6dejt60vkdduxc.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After we add the React error boundary plugin in our application, it will start logging for runtime error  and we can add a fallback UI if any error occurs.&lt;/p&gt;

&lt;p&gt;Finally! Instead of bank white screen we are able to see the fallback UI if any runtime error occurs.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--G-Y3bVDP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p71nmoxnxx7x2m7xzwom.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G-Y3bVDP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p71nmoxnxx7x2m7xzwom.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>reactnative</category>
      <category>javascript</category>
    </item>
    <item>
      <title>12 JavaScript Image Manipulation Libraries For Your Next Web App</title>
      <author>Nastassia Ovchinnikova</author>
      <pubDate>Wed, 09 Jun 2021 15:28:01 +0000</pubDate>
      <link>https://dev.to/flatlogic/12-javascript-image-manipulation-libraries-for-your-next-web-app-1e0d</link>
      <guid>https://dev.to/flatlogic/12-javascript-image-manipulation-libraries-for-your-next-web-app-1e0d</guid>
      <description>&lt;p&gt;Today we would like to talk to you on a topic most interesting – JavaScript image manipulation libraries. And, to be more precise – those JavaScript image manipulation libraries that definitely deserve your particular attention when you develop your next spectacular web app. But, let’s not get ahead of ourselves and firstly answer the question “What is an Image Manipulation Library?”&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-an-image-manipulation-library"&gt;
  &lt;/a&gt;
  What is an Image Manipulation Library
&lt;/h2&gt;

&lt;p&gt;Let’s start with a simple description. An image manipulation library or IML is a tool that’s main goal is to help you systemize, organize and manipulate graphic elements of your app in different ways. Different image manipulation libraries typically serve different purposes and can perform such goals as cropping the images, resizing them, converting them from one format to another, improving their quality and many-many more. So, all and all, a tool to use when making a web app. Unless, of course, you want to make a dull monochrome app that contains no images whatsoever, which is an unrealistic scenario in a modern world, where design can make or break an app just as easily as its functionality or usability.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-does-javascript-image-manipulation-libraries-bring-to-the-table"&gt;
  &lt;/a&gt;
  What does JavaScript Image Manipulation Libraries bring to the table?
&lt;/h2&gt;

&lt;p&gt;The next question to discuss when is the reasoning for choosing an image manipulation library, based on JavaScript, for your next web app instead of, for example, C++-based ones. The answer is simple: even though at first glance JavaScript IMLs are metaphorically heavier, they are reliable and can create some simply astounding result.&lt;/p&gt;

&lt;p&gt;The practical usage of some of the entries you are going to see in this article in a short time is a thing of beauty and will do nothing less than improve the development of your next web app by easing the work with the images. So, without any further delays, let’s get down to the list.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#javascript-image-manipulation-libraries"&gt;
  &lt;/a&gt;
  JavaScript Image Manipulation Libraries
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#pica"&gt;
  &lt;/a&gt;
  Pica
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SqCPwS8O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/04/Screen-Shot-2021-04-26-at-16.28.05-1536x724.png%3Flossy%3D1%26strip%3D1%26webp%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SqCPwS8O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/04/Screen-Shot-2021-04-26-at-16.28.05-1536x724.png%3Flossy%3D1%26strip%3D1%26webp%3D1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pica is a prime tool for in-browser image resizing, most useful when you want to reduce an exceedingly large image into a suitable one in order to save upload time. It avoids the pixelation of an image and works at a suitably fast pace. It serves a great amount of server resources on image processing and can reuse your images into thumbnails in the browser. What’s also great about Pica is the fact that it auto selects such technologies as web workers, webassembly, createImageBitmap, pure JS, etc. automatically, so there is no need for you to do it yourself.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/nodeca/pica"&gt;MORE INFO&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lenajs"&gt;
  &lt;/a&gt;
  Lena.js
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--N5JZC3vP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/04/32207948-b2dfcff8-bdd5-11e7-8c83-08b86a7616be.gif%3Flossy%3D1%26strip%3D1%26webp%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--N5JZC3vP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/04/32207948-b2dfcff8-bdd5-11e7-8c83-08b86a7616be.gif%3Flossy%3D1%26strip%3D1%26webp%3D1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Lena.js can be described as a very simple, yet nice and neat image redactor and processor. It has a number (22 to be precise) image filters that you can play around with to improve your image. Lena.js is very small in size and has a killer feature that allows you to add your own filters, as it’s code is open to anyone at GitHub.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/davidsonfellipe/lena.js"&gt;MORE INFO&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#jimp"&gt;
  &lt;/a&gt;
  Jimp
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gOzG2Wqw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/04/Screen-Shot-2021-04-26-at-16.33.25-1536x660.png%3Flossy%3D1%26strip%3D1%26webp%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gOzG2Wqw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/04/Screen-Shot-2021-04-26-at-16.33.25-1536x660.png%3Flossy%3D1%26strip%3D1%26webp%3D1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Jimp stands for JavaScript image manipulation program and it does what it says on the tin a flawless fashion. Written for Node, this entirely JavaScript image processing library has zero native dependencies. It also has no external dependencies either, which makes it quite universal. Jimp can help you with such tasks as blitting, blurring, colouring, containing images and many others. What also advantages Jimp is its &lt;a href="https://flatlogic.com/blog/react-pagination-guide-and-best-react-pagination-libraries/"&gt;Node.js&lt;/a&gt; syntax that is will prove an easy use for people with Python or C++ primary prior experience.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/oliver-moran/jimp"&gt;MORE INFO&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#grade"&gt;
  &lt;/a&gt;
  Grade
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--egajffCf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/04/Frame-2402wEWF-1536x1152.png%3Flossy%3D1%26strip%3D1%26webp%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--egajffCf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/04/Frame-2402wEWF-1536x1152.png%3Flossy%3D1%26strip%3D1%26webp%3D1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Grade (not a big surprise) is another JS library on our list. Its main selling point is producing complementary gradients that are automatically generated based on 2 colours that are determined predominant in the selected images. Such an effect allows your site or app to seem more seamless. Grade is an easy to use plugin that will add an aura of visually pleasing aesthetic to your finished product, which is always nice for both you and the end user.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/benhowdle89/grade"&gt;MORE INFO&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#marvinj"&gt;
  &lt;/a&gt;
  MarvinJ
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5McFv7fz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/04/Screen-Shot-2021-04-26-at-17.04.26-1536x789.png%3Flossy%3D1%26strip%3D1%26webp%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5McFv7fz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/04/Screen-Shot-2021-04-26-at-17.04.26-1536x789.png%3Flossy%3D1%26strip%3D1%26webp%3D1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now let’s get to a more intrinsically complex JavaScript image manipulation library. MarvinJ is a powerful Marvin Framework derivative that offers quite a number of algorithms for the images’ colour and appearance manipulation. It allows you to have an easier working process when it comes to such image processing fundamentals as corners and shapes, as MarvinJ is able to detect these features automatically. This way it simplifies the process of cropping out the image and even makes it more or less automated. And isn’t it, after all, the dream – to leave the tedious and boring thing like cropping the elements out to the machines while you can concentrate on more time-, imagination- and expertise-consuming tasks?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/gabrielarchanjo/marvinj"&gt;MORE INFO&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#compressorjs"&gt;
  &lt;/a&gt;
  Compressor.js
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--N8kw2MQc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/04/Screen-Shot-2021-04-26-at-17.16.23-1536x1040.png%3Flossy%3D1%26strip%3D1%26webp%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--N8kw2MQc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/04/Screen-Shot-2021-04-26-at-17.16.23-1536x1040.png%3Flossy%3D1%26strip%3D1%26webp%3D1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And now back to the simpler stuff. Compressor.js’s whole schtick is in the name – it handles the image compression and does it well. All thanks to the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/toBlob"&gt;canvas.toBlob&lt;/a&gt; API that allows you to set the compression output quality of the image in the range from 0 to 1.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/fengyuanchen/compressorjs"&gt;MORE INFO&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#fabricjs"&gt;
  &lt;/a&gt;
  Fabric.js
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UJ4aYymN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/04/Screen-Shot-2021-04-27-at-11.01.43.png%3Flossy%3D1%26strip%3D1%26webp%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UJ4aYymN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/04/Screen-Shot-2021-04-27-at-11.01.43.png%3Flossy%3D1%26strip%3D1%26webp%3D1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Does your next web app need such simple, yet if used correctly, shapes as rectangles, circles, triangles and other polygons? May it be so that it requires  more complex shapes?  If the answer is “Yes” to any or both of the questions then Fabric.js is your guy – it will not only create all these shapes for you, but also  allow you to manipulate every aspect of it, such as sizes, positions and rotations of the objects. But wait, there is more: control all the attributes of the upper-mentioned objects: colours, level of transparency. level of depth position and so on.&lt;/p&gt;

&lt;p&gt;You might have noticed that we haven’t said a thing about images. But that meal is also on the menu, as Fabric.js allows to convert SVG images into JavaScript data and insert it into the canvas of the project. So, that’s killing two birds with one stone: cool shapes and SVG images in your apps code.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/fabricjs/fabric.js"&gt;MORE INFO&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#camanjs"&gt;
  &lt;/a&gt;
  CamanJS
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BmZ02D_q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/04/Screen-Shot-2021-04-27-at-11.14.27.png%3Flossy%3D1%26strip%3D1%26webp%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BmZ02D_q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/04/Screen-Shot-2021-04-27-at-11.14.27.png%3Flossy%3D1%26strip%3D1%26webp%3D1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And, once again, to the more complex JavaScript image manipulation libraries. CamanJS is a combination of fantastic and sometimes quite advanced techniques and an intuitive interface. You can use presets and filters or tinker around toggling them yourself. The cherry on top is the ability to add your own filters and plugins, as well as constant updating, that bring new features and functions.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/meltingice/CamanJS/"&gt;MORE INFO&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cropperjs"&gt;
  &lt;/a&gt;
  Cropper.js
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Dv0KcFCg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/04/Screen-Shot-2021-04-27-at-11.15.12-1536x683.png%3Flossy%3D1%26strip%3D1%26webp%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Dv0KcFCg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/04/Screen-Shot-2021-04-27-at-11.15.12-1536x683.png%3Flossy%3D1%26strip%3D1%26webp%3D1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We duly hope that you are not tired of the “simple-complex” swings of our list, as here comes another simpler JavaScript image manipulation library. It allows you to crop the needed images, as well as scaling, rotating and zooming around the image. But the nicest thing about this JSIML is the ability to set the aspect ratio on the picture and crop accordingly.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/fengyuanchen/cropperjs"&gt;MORE INFO&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#merge-images"&gt;
  &lt;/a&gt;
  Merge Images
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y3esSJ4d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/04/Screen-Shot-2021-04-27-at-12.05.54.png%3Flossy%3D1%26strip%3D1%26webp%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y3esSJ4d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/04/Screen-Shot-2021-04-27-at-12.05.54.png%3Flossy%3D1%26strip%3D1%26webp%3D1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A unique entree of this list, as Merge Images doesn’t crop or skew or rotate the images. We hope, you’ve already guessed what this one does – it merges the given images onto one canvas, ridding you of the need to &lt;a href="https://flatlogic.com/blog/etl-extract-transform-load-best-practices-etl-process-and-lifehacks/"&gt;transform&lt;/a&gt; them into code and working on a canvas (pun intended).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/lukechilds/merge-images"&gt;MORE INFO&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#blurify"&gt;
  &lt;/a&gt;
  Blurify
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZO5znaeK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/04/blurify.png%3Flossy%3D1%26strip%3D1%26webp%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZO5znaeK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/04/blurify.png%3Flossy%3D1%26strip%3D1%26webp%3D1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This JavaScript image manipulation library is tiny, as it weighs less than 2 kb. But it’s effectiveness doesn’t allow us to not include it on the list, as it downgrades the pictures that you provide it with, and does it gracefully.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/dabanlee/blurify"&gt;MORE INFO&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#doka"&gt;
  &lt;/a&gt;
  Doka
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ryk1208P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/04/Screen-Shot-2021-04-26-at-17.03.12-1536x873.png%3Flossy%3D1%26strip%3D1%26webp%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ryk1208P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/04/Screen-Shot-2021-04-26-at-17.03.12-1536x873.png%3Flossy%3D1%26strip%3D1%26webp%3D1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Doka is a JIML which will provide you with a variety of image editing. It has a rich UI that warms your soul if needed. The support for React, Vue, Svelte, Angular, jQuery is also a nice and needed touch during the working upon the images. You will get around and understand this Library quite quickly.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://pqina.nl/doka/"&gt;MORE INFO&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusions-to-have"&gt;
  &lt;/a&gt;
  Conclusions to have
&lt;/h2&gt;

&lt;p&gt;And that’s the list. Conclusions to have are quite simple: your next project will benefit from using these JavaScript image manipulation libraries, as it will get you free from performing mundane tasks and you will find yourself in love with them in no time.&lt;/p&gt;

&lt;p&gt;Start with one, if you feel cautious, add more if you feel adventurous, as it may actually require some tinkering to work the way you want it to work.&lt;/p&gt;

&lt;p&gt;That’s it for today. Thanks for reading this article and stay tuned for our new ones!&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#about-flatlogic"&gt;
  &lt;/a&gt;
  About Flatlogic
&lt;/h1&gt;

&lt;p&gt;At Flatlogic, we help businesses to speed up web development with our beautifully designed web &amp;amp; mobile application templates built with &lt;a href="https://flatlogic.com/templates/react"&gt;React&lt;/a&gt;, &lt;a href="https://flatlogic.com/templates/vue"&gt;Vue&lt;/a&gt;, &lt;a href="https://flatlogic.com/templates/angular"&gt;Angular&lt;/a&gt;, &lt;a href="https://flatlogic.com/templates/react-native"&gt;React Native&lt;/a&gt;, and &lt;a href="https://flatlogic.com/templates/bootstrap"&gt;Bootstrap&lt;/a&gt;. During the last several years we have successfully delivered more than 100 custom dashboards and data management solutions to various clients starting from innovative startups to established and respected enterprises.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/WpVQsS-Bb3U"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;You might also like these articles:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://dev.to/flatlogic/top-24-free-essential-plugins-to-extend-bootstrap-4mn6"&gt;Top 24 Free Essential Plugins To Extend Bootstrap&lt;/a&gt;&lt;br&gt;
&lt;a href="https://dev.to/flatlogic/37-simple-and-useful-table-templates-examples-for-web-developers-i3j"&gt;37 Simple And Useful Table Templates &amp;amp; Examples For Web Developers&lt;/a&gt;&lt;br&gt;
&lt;a href="https://dev.to/flatlogic/top-13-login-pages-design-examples-57ip"&gt;Top 13+ Login Pages Design Examples&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>frontend</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Getting to know Flutter: Simple audioplayer</title>
      <author>TheOtherDev/s</author>
      <pubDate>Wed, 09 Jun 2021 15:20:40 +0000</pubDate>
      <link>https://dev.to/theotherdevs/getting-to-know-flutter-simple-audioplayer-3g55</link>
      <guid>https://dev.to/theotherdevs/getting-to-know-flutter-simple-audioplayer-3g55</guid>
      <description>&lt;p&gt;Nowadays many apps have audio files inside to listen to, whether they are fitness, music or mental health apps. Let's see a basic approach to build an app with an audio player.&lt;/p&gt;

&lt;p&gt;In this article we will focus on the &lt;em&gt;audioplayers&lt;/em&gt; plugin but there are many other plugins to handle audios like &lt;em&gt;audio_service.&lt;/em&gt; &lt;/p&gt;

&lt;p&gt;So without further ado let's dive into coding! The first thing to do is to add the following packages to your &lt;code&gt;pubspec.yaml&lt;/code&gt;and then run&lt;code&gt;flutter pub get.&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="nl"&gt;dependencies:&lt;/span&gt;
  &lt;span class="nl"&gt;audioplayers:&lt;/span&gt; &lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="mf"&gt;0.19&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
  &lt;span class="nl"&gt;http:&lt;/span&gt; &lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="mf"&gt;0.13&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;
  &lt;span class="nl"&gt;path_provider:&lt;/span&gt; &lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="mf"&gt;2.0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice that &lt;strong&gt;http&lt;/strong&gt; and &lt;strong&gt;path_provider&lt;/strong&gt; are required only if you need to download your audio files.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#platform-specific-setup"&gt;
  &lt;/a&gt;
  Platform Specific Setup
&lt;/h2&gt;

&lt;p&gt;To allow HTTP connections to any site you will need few lines of code:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ios"&gt;
  &lt;/a&gt;
  iOS
&lt;/h3&gt;

&lt;p&gt;Edit the &lt;em&gt;Info.plist&lt;/em&gt; file with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plist"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;k&lt;/span&gt;&lt;span class="mh"&gt;e&lt;/span&gt;&lt;span class="err"&gt;y&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="l"&gt;NSAppTransportSecurity&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/k&lt;/span&gt;&lt;span class="mh"&gt;e&lt;/span&gt;&lt;span class="err"&gt;y&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mh"&gt;d&lt;/span&gt;&lt;span class="err"&gt;i&lt;/span&gt;&lt;span class="mh"&gt;c&lt;/span&gt;&lt;span class="err"&gt;t&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;k&lt;/span&gt;&lt;span class="mh"&gt;e&lt;/span&gt;&lt;span class="err"&gt;y&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="l"&gt;NSAllowsArbitraryLoads&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/k&lt;/span&gt;&lt;span class="mh"&gt;e&lt;/span&gt;&lt;span class="err"&gt;y&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;tru&lt;/span&gt;&lt;span class="mh"&gt;e&lt;/span&gt;&lt;span class="err"&gt;/&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/&lt;/span&gt;&lt;span class="mh"&gt;d&lt;/span&gt;&lt;span class="err"&gt;i&lt;/span&gt;&lt;span class="mh"&gt;c&lt;/span&gt;&lt;span class="err"&gt;t&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#android"&gt;
  &lt;/a&gt;
  Android
&lt;/h3&gt;

&lt;p&gt;Edit &lt;em&gt;AndroidManifest.xml&lt;/em&gt; file located in &lt;code&gt;android/app/src/main/AndroidManifest.xml&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;manifest&lt;/span&gt; &lt;span class="o"&gt;...&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;uses&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;permission&lt;/span&gt; &lt;span class="nl"&gt;android:&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"android.permission.INTERNET"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;application&lt;/span&gt;
        &lt;span class="o"&gt;...&lt;/span&gt;
        &lt;span class="nl"&gt;android:&lt;/span&gt;&lt;span class="n"&gt;usesCleartextTraffic&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"true"&lt;/span&gt;
        &lt;span class="o"&gt;...&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;...&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;application&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;manifest&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#creating-the-widget"&gt;
  &lt;/a&gt;
  Creating the widget
&lt;/h2&gt;

&lt;p&gt;Now, let's start to create our Widget that will handle the audio; First of all, let's import the package in our widget:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import 'package:audioplayers/audioplayers.dart';
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;then create a Stateful Widget that will accept a url as parameter and an &lt;code&gt;isAsset&lt;/code&gt; that will be true only if the audio to be played will be inside assets:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;AudioPlayerWidget&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;StatefulWidget&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="n"&gt;isAsset&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;AudioPlayerWidget&lt;/span&gt;&lt;span class="o"&gt;({&lt;/span&gt;
    &lt;span class="n"&gt;Key&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;required&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;isAsset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="o"&gt;})&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;key:&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

  &lt;span class="nd"&gt;@override&lt;/span&gt;
  &lt;span class="n"&gt;_AudioPlayerWidgetState&lt;/span&gt; &lt;span class="n"&gt;createState&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;_AudioPlayerWidgetState&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In our &lt;code&gt;_AudioPlayerWidgetState&lt;/code&gt; let's setup some properties:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the AudioPlayer itself&lt;/li&gt;
&lt;li&gt;the AudioCache*&lt;em&gt;, mandatory&lt;/em&gt;* if you need to reproduce an asset audio&lt;/li&gt;
&lt;li&gt;our PlayerState that will store the current state of the AudioPlayer&lt;/li&gt;
&lt;li&gt;a commodity computed variable&lt;code&gt;isPlaying&lt;/code&gt; that we'll use to see wether the player is playing or not&lt;/li&gt;
&lt;li&gt;another computed variable&lt;code&gt;_isLocal&lt;/code&gt; that we'll use to see whether the url to play is local or not
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="n"&gt;late&lt;/span&gt; &lt;span class="n"&gt;AudioPlayer&lt;/span&gt; &lt;span class="n"&gt;_audioPlayer&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;late&lt;/span&gt; &lt;span class="n"&gt;AudioCache&lt;/span&gt; &lt;span class="n"&gt;_audioCache&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="n"&gt;PlayerState&lt;/span&gt; &lt;span class="n"&gt;_playerState&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;PlayerState&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;STOPPED&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="kd"&gt;get&lt;/span&gt; &lt;span class="n"&gt;_isPlaying&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;_playerState&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;PlayerState&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;PLAYING&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="kd"&gt;get&lt;/span&gt; &lt;span class="n"&gt;_isLocal&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;widget&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;contains&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'https'&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Since we've declared the &lt;code&gt;_audioPlayer&lt;/code&gt; and &lt;code&gt;_audioCache&lt;/code&gt; as &lt;strong&gt;late&lt;/strong&gt; variables we are going to init them inside the &lt;code&gt;initState&lt;/code&gt; method:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="nd"&gt;@override&lt;/span&gt;
  &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;initState&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;_audioPlayer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;AudioPlayer&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;mode:&lt;/span&gt; &lt;span class="n"&gt;PlayerMode&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;MEDIA_PLAYER&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;_audioCache&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;AudioCache&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;fixedPlayer:&lt;/span&gt; &lt;span class="n"&gt;_audioPlayer&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;AudioPlayer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;logEnabled&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

    &lt;span class="n"&gt;_audioPlayer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;onPlayerError&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;listen&lt;/span&gt;&lt;span class="o"&gt;((&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'audioPlayer error : &lt;/span&gt;&lt;span class="si"&gt;$msg&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
      &lt;span class="n"&gt;setState&lt;/span&gt;&lt;span class="o"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;_playerState&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;PlayerState&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;STOPPED&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
      &lt;span class="o"&gt;});&lt;/span&gt;
    &lt;span class="o"&gt;});&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;initState&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;

  &lt;span class="nd"&gt;@override&lt;/span&gt;
  &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;dispose&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;_audioPlayer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;dispose&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;dispose&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Again, this is a starter guide so I won't handle here duration, seek or background; just remember that if you are going to choose the &lt;code&gt;PlayerMode.LOW_LATENCY&lt;/code&gt;you won't be able to handle seek or duration updates since this mode is crafted for very short audio files.&lt;/p&gt;

&lt;p&gt;The only stream that we're going to listen to will be &lt;code&gt;onPlayerError&lt;/code&gt;, so, if an error is thrown for any reason, we will stop immediately the audio. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Please note:&lt;/strong&gt; always remember to invoke the &lt;code&gt;dispose()&lt;/code&gt; method to close all the streams!!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#play-pause-stop"&gt;
  &lt;/a&gt;
  Play / Pause / Stop
&lt;/h3&gt;

&lt;p&gt;Play/pause actions are managed by the &lt;code&gt;_playPause()&lt;/code&gt; method which checks the player's status and invokes an action accordingly. We won't show the &lt;strong&gt;Stop&lt;/strong&gt; method for the sake of brevity but the logic is exactly the same as for the method below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="n"&gt;_playPause&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="n"&gt;async&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_playerState&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;PlayerState&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;PLAYING&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;playerResult&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_audioPlayer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;pause&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;playerResult&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;setState&lt;/span&gt;&lt;span class="o"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
          &lt;span class="n"&gt;_playerState&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;PlayerState&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;PAUSED&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;});&lt;/span&gt;
      &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_playerState&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;PlayerState&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;PAUSED&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;playerResult&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_audioPlayer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;resume&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;playerResult&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;setState&lt;/span&gt;&lt;span class="o"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
          &lt;span class="n"&gt;_playerState&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;PlayerState&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;PLAYING&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;});&lt;/span&gt;
      &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;widget&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;isAsset&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;_audioPlayer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_audioCache&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;play&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;widget&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;setState&lt;/span&gt;&lt;span class="o"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
          &lt;span class="n"&gt;_playerState&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;PlayerState&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;PLAYING&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;});&lt;/span&gt;
      &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;playerResult&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_audioPlayer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;play&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;widget&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nl"&gt;isLocal:&lt;/span&gt; &lt;span class="n"&gt;_isLocal&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;playerResult&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
          &lt;span class="n"&gt;setState&lt;/span&gt;&lt;span class="o"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;_playerState&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;PlayerState&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;PLAYING&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
          &lt;span class="o"&gt;});&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
      &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#usage"&gt;
  &lt;/a&gt;
  Usage
&lt;/h2&gt;

&lt;p&gt;The usage is pretty straightforward, just implement the&lt;code&gt;AudioPlayerWidget&lt;/code&gt; inside you widget specifying for: &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#assets"&gt;
  &lt;/a&gt;
  Assets
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;specify the &lt;em&gt;filename&lt;/em&gt; + &lt;em&gt;extension&lt;/em&gt; (e.g. my_audio.mp3) of the asset to reproduce&lt;/li&gt;
&lt;li&gt;set &lt;code&gt;isAsset&lt;/code&gt; variable to &lt;em&gt;true&lt;/em&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#remote"&gt;
  &lt;/a&gt;
  Remote
&lt;/h3&gt;

&lt;p&gt;Set the audio widget's url property with the url of the audio.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#local"&gt;
  &lt;/a&gt;
  Local
&lt;/h3&gt;

&lt;p&gt;Download the audio from the url, save it and set the file path as the audio widget's url property.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#bonus-partyingface"&gt;
  &lt;/a&gt;
  Bonus 🥳
&lt;/h4&gt;

&lt;p&gt;You don't how how to fetch and save an audio from a provided url? don't worry we are here for this  Just set &lt;code&gt;_loadFilePath()&lt;/code&gt; as the future of a &lt;code&gt;FutureBuilder.&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="n"&gt;Future&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;_loadFilePath&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="n"&gt;async&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;dir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;await&lt;/span&gt; &lt;span class="n"&gt;getApplicationDocumentsDirectory&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;File&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="si"&gt;${dir.path}&lt;/span&gt;&lt;span class="s"&gt;/the_name.mp3'&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_assetAlreadyPresent&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="o"&gt;))&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;bytes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;await&lt;/span&gt; &lt;span class="n"&gt;readBytes&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Uri&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;parse&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_remoteUrl&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;

    &lt;span class="n"&gt;await&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;writeAsBytes&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bytes&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;

  &lt;span class="n"&gt;Future&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;bool&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;_assetAlreadyPresent&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="n"&gt;filePath&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;async&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;File&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filePath&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;exists&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusions"&gt;
  &lt;/a&gt;
  Conclusions
&lt;/h2&gt;

&lt;p&gt;As you may have noticed a simple implementation of an Audio Player is pretty straightforward and you won't have any problem to implement it in you app.&lt;/p&gt;

&lt;p&gt;You can find the whole code inside this &lt;a href="https://github.com/Alessandro-v/audioplayer_tutorial"&gt;GitHub&lt;/a&gt; repo! &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#where-to-go-now"&gt;
  &lt;/a&gt;
  Where to go now?
&lt;/h2&gt;

&lt;p&gt;You can dig deeper inside &lt;em&gt;audioplayers&lt;/em&gt; plugin and do some experiments with seek and background handling or... just wait my next chapter of this Audio Player series  see you soon!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Article written by the majestic &lt;a href="https://www.linkedin.com/in/alessandro-viviani-404b8a115/"&gt;Alessandro Viviani&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>flutter</category>
      <category>dart</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Re-Order Grid Columns in Bootstrap 5</title>
      <author>BootstrapNews</author>
      <pubDate>Wed, 09 Jun 2021 15:13:59 +0000</pubDate>
      <link>https://dev.to/codeply/re-order-grid-columns-in-bootstrap-5-135k</link>
      <guid>https://dev.to/codeply/re-order-grid-columns-in-bootstrap-5-135k</guid>
      <description>&lt;h2&gt;
  &lt;a href="#a-key-aspect-of-responsive-design-that-bootstrap-provides-is-the-ability-to-change-the-position-of-content-on-different-devices-and-screen-widths"&gt;
  &lt;/a&gt;
  A key aspect of responsive design that Bootstrap provides is the ability to change the position of content on different devices and screen widths.
&lt;/h2&gt;




&lt;h1&gt;
  &lt;a href="#why-change-content-order"&gt;
  &lt;/a&gt;
  Why Change Content Order?
&lt;/h1&gt;

&lt;p&gt;A common use-case is a typical 2-column page layout. Often, the vertical stacking of columns is desired on smaller screen devices (tablets &amp;amp; phones) where horizontal space is limited. Arguably, this may also help with SEO as the main content is closer to the top of the page when search engines like Google crawl the page. &lt;/p&gt;

&lt;p&gt;Using the &lt;a href="https://getbootstrap.com/docs/5.0/utilities/flex/#order"&gt;Bootstrap 5 ordering classes&lt;/a&gt; we’re able to utilize the column ordering feature of the Bootstrap grid. On small (mobile) screens we want to show our main content at the top and then the sidebar nav below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2MNMoBIH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/349/0%2AAlKX212q7aw97Eqo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2MNMoBIH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/349/0%2AAlKX212q7aw97Eqo.png" alt="Change column order in Bootstrap - small devices"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_2rAtYxM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/0%2AOOg6tVKShm55sLxZ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_2rAtYxM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/0%2AOOg6tVKShm55sLxZ.png" alt="Change column order in Bootstrap - larger devices"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#flexbox-parent-amp-children"&gt;
  &lt;/a&gt;
  Flexbox Parent &amp;amp; Children
&lt;/h1&gt;

&lt;p&gt;As you may know the Bootstrap 5 grid utilizes &lt;strong&gt;Flexbox&lt;/strong&gt;. The concept of "parent &amp;amp; children" in Flexbox equates to the "row &amp;amp; columns" of the Bootstrap grid. One &lt;strong&gt;&lt;em&gt;parent&lt;/em&gt;&lt;/strong&gt; row containing one or more &lt;strong&gt;&lt;em&gt;child&lt;/em&gt;&lt;/strong&gt; columns...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div class="row"&amp;gt;
    &amp;lt;div class="col"&amp;gt;
         Child 1
    &amp;lt;/div&amp;gt;
    &amp;lt;div class="col"&amp;gt;
         Child 2
    &amp;lt;/div&amp;gt;
    &amp;lt;div class="col"&amp;gt;
         Child 3
    &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#natural-vs-visual-order"&gt;
  &lt;/a&gt;
  Natural vs. Visual Order
&lt;/h1&gt;

&lt;p&gt;Notice that the &lt;strong&gt;&lt;em&gt;natural order&lt;/em&gt;&lt;/strong&gt; of the columns is:&lt;/p&gt;

&lt;p&gt;|---1---|---2---|---3---|&lt;/p&gt;

&lt;p&gt;Using the flex ordering CSS classes we can change the &lt;strong&gt;&lt;em&gt;visual order&lt;/em&gt;&lt;/strong&gt; of the columns...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div class="row"&amp;gt;
      &amp;lt;div class="col order-2"&amp;gt; Child 1 &amp;lt;/div&amp;gt;
      &amp;lt;div class="col order-1"&amp;gt; Child 2 &amp;lt;/div&amp;gt;
      &amp;lt;div class="col order-3"&amp;gt; Child 3 &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;|---2---|---1---|---3---|&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codeply.com/p/T52wfQIdG6"&gt;Simple Bootstrap Ordering Demo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see, the columns are in the same &lt;em&gt;natural order&lt;/em&gt;, but the &lt;em&gt;visual order&lt;/em&gt; has changed by using the &lt;code&gt;order-*&lt;/code&gt; classes on the columns.&lt;/p&gt;




&lt;p&gt;In practice, we would want to &lt;strong&gt;&lt;em&gt;change the visual order depending on the screen width&lt;/em&gt;&lt;/strong&gt;. For example, suppose I want this order on &lt;em&gt;larger screens&lt;/em&gt;...&lt;/p&gt;

&lt;p&gt;|---3---|---2---|---1---|&lt;/p&gt;

&lt;p&gt;But on &lt;em&gt;smaller screens&lt;/em&gt; I want this (natural) order...&lt;/p&gt;

&lt;p&gt;|---1---|---2---|---3---|&lt;/p&gt;

&lt;p&gt;We can achieve this using the responsive &lt;code&gt;order-lg-*&lt;/code&gt; classes to control the larger (992px and wider) breakpoint:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div class="row"&amp;gt;
    &amp;lt;div class="col border order-lg-3"&amp;gt; Child 1 &amp;lt;/div&amp;gt;
    &amp;lt;div class="col border order-lg-2"&amp;gt; Child 2 &amp;lt;/div&amp;gt;
    &amp;lt;div class="col border order-lg-1"&amp;gt; Child 3 &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://codeply.com/p/T52wfQIdG6"&gt;See row 3 of the demo&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Since Bootstrap provides many &lt;a href="https://getbootstrap.com/docs/5.0/utilities/flex/#order"&gt;ordering classes for all 6 breakpoints&lt;/a&gt; you can manipulate the position of columns in exhaustively many ways...&lt;/p&gt;

&lt;p&gt;Here's the responsive &lt;a href="https://codeply.com/p/XLuC2eGQND"&gt;Codeply with more re-ordering examples&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Before wrapping-up let's revisit the 1st use-case of changing the order of a 2-column layout. The markup is soooo simple...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div class="row"&amp;gt;
    &amp;lt;div class="col-sm-3 order-sm-first order-last"&amp;gt; Sidebar &amp;lt;/div&amp;gt;
    &amp;lt;div class="col-sm"&amp;gt; Main &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://codeply.com/p/T52wfQIdG6"&gt;See row 4 of the demo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The use of &lt;code&gt;order-sm-first order-last&lt;/code&gt; on the Sidebar translates to "order first on small and wider", and "order last on extra small (xs)".&lt;/p&gt;

&lt;p&gt;I hope this has given you a little insight as to how ordering works in Bootstrap 5. Please share your thoughts and questions in the comments. &lt;/p&gt;

&lt;p&gt;😎B5&lt;/p&gt;

</description>
      <category>css</category>
      <category>bootstrap</category>
      <category>webdev</category>
      <category>html</category>
    </item>
    <item>
      <title>10 Best Blogging Tools and Resources with TIPS🎁</title>
      <author>Suraj Vishwakarma</author>
      <pubDate>Wed, 09 Jun 2021 15:13:05 +0000</pubDate>
      <link>https://dev.to/basecampxd/10-best-blogging-tools-and-resources-with-tips-3ali</link>
      <guid>https://dev.to/basecampxd/10-best-blogging-tools-and-resources-with-tips-3ali</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;In learning you will teach, and in teaching, you will learn.&lt;br&gt;
― Phil Collins&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As Phil Collins said you will learn while teaching and one of the best ways for teaching and providing information to you is by writing a blog. Writing a blog will give a lot of opportunities in your career, you interact with many other people just like you and it will boost your confidence.&lt;/p&gt;

&lt;p&gt;If you want to start or already had started, I am going to list down 10 Tools and resource that will surely help you in&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Writing Blog Post&lt;/li&gt;
&lt;li&gt;Finding Blog Post Ideas&lt;/li&gt;
&lt;li&gt;Enhancing Content of your blog post&lt;/li&gt;
&lt;li&gt;Creating Attractive Header Images
. Generating Traffic for Your Blog &lt;/li&gt;
&lt;li&gt;And Many More&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So let's get started&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#grammarly"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.grammarly.com/"&gt;Grammarly&lt;/a&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Communicate With Impact. Ensure Everything You Write Comes Across The Way You Intend. Present Your Best Self Every Time You Type. Make Your Writing Clear and Engaging. Eliminate grammar errors. Easily improve any text.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KiTndzLu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://static.grammarly.com/assets/files/e80911c560f18f1ffdc084f23fe9c715/mobile_opengraph.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KiTndzLu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://static.grammarly.com/assets/files/e80911c560f18f1ffdc084f23fe9c715/mobile_opengraph.png" alt="Grammarly"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I have been using Grammarly for a long time to check grammar mistakes. I helped me a lot in producing better blog post without grammar error and wrong tone of a blog post. In the free plan, it suggests great points to rewrite the sentence to resolve those issues. In premium, it suggests edits that you can just apply by clicking.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#canva"&gt;
  &lt;/a&gt;
  &lt;a href="https://canva.com/"&gt;Canva&lt;/a&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Thousands Of Custom Templates And Stock Images, Easy-To-Use Editing Features, And More! Priority Support. Simple To Use Interface. 200K+ Companies On Board. 100% Happiness Guarantee. Free 30 Day Trial. Services: Brand Kit, Magic Resize Tool.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nGc6AQHW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://static-cse.canva.com/image/76579/stickers.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nGc6AQHW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://static-cse.canva.com/image/76579/stickers.jpg" alt="Canva"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;My go-to web app for creating header images for my blog and other social media. It has tons of template for to start editing and make it own with their editing tools. &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#dropbox-paper"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.dropbox.com/paper"&gt;DropBox Paper&lt;/a&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Dropbox Paper is a new type of document designed for creative work. Collaborate in real-time, assign tasks, make a to-do list, and more. Start today!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--buu4ESdW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://play-lh.googleusercontent.com/mJ64uZzxna8dCg2iqGoeIlRunKOex_CNqDwD13en6Prkb_2XgasAmkB-qZqMCJzzVFHq" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--buu4ESdW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://play-lh.googleusercontent.com/mJ64uZzxna8dCg2iqGoeIlRunKOex_CNqDwD13en6Prkb_2XgasAmkB-qZqMCJzzVFHq" alt="DropBox Paper"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I recently found about DropBox Paper and it's super useful for writing the draft for your blog post. It supports markdown and it has a very easy sharing option. The shared person can edit and comment on a particular line, word, paragraph, or whole document which makes it suitable for getting an initial review on your blog post.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#notion"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.notion.so/"&gt;Notion&lt;/a&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;A new tool that blends your everyday work apps into one. It's the all-in-one workspace for you and your team.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yUHp38vX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/4800/1%2A5fsCs0R8oHnhQ93R5N0Qag.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yUHp38vX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/4800/1%2A5fsCs0R8oHnhQ93R5N0Qag.png" alt="Notion"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Notion helped me a lot in noting all my research for my blog posts such as keyword, reference, goal, and key points for my blog. It can be used for multiple purposes like creating notes, to-do lists, table content, etc. It is highly recommended by many developers.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#google-keyword-planner"&gt;
  &lt;/a&gt;
  &lt;a href="https://ads.google.com/home/tools/keyword-planner/"&gt;Google Keyword Planner&lt;/a&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Find the right keywords to use in your Blog for SEO and reaching more people with our Keyword Planner tool.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BxuCvrvu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://keywordtool.io/sites/all/images/google-ads-keyword-planner.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BxuCvrvu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://keywordtool.io/sites/all/images/google-ads-keyword-planner.png" alt="Google Keyword Planner"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Google Keyword Planner is for finding the right keyword for targeting the right audience for your blog post. You can find keywords from other websites and can research them on the platform. You can see the forecast of keyword weather traffic will rise or decline. &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#mailchimp"&gt;
  &lt;/a&gt;
  &lt;a href="https://mailchimp.com/"&gt;MailChimp&lt;/a&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Mailchimp is the All-In-One integrated marketing platform for small businesses, to grow their business on your terms. It's easy to use - start for free today!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mJt2XC5Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.amocrm.com/static/images/pages/integrations/logo/mailchimp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mJt2XC5Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.amocrm.com/static/images/pages/integrations/logo/mailchimp.png" alt="MailChimp"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;MailChimp is best for building email subscribers and creating a weekly newsletter to update followers about new posts, events or just providing information. I am going to start a newsletter for you all soon.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#typeform"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.typeform.com/"&gt;Typeform&lt;/a&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Build beautiful, interactive forms — get more responses. No coding is needed. Templates for quizzes, research, feedback, lead generation, and more.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9UTN3har--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1200/1%2A7gZX2qRu-ckGAEoxvlVAiw.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9UTN3har--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1200/1%2A7gZX2qRu-ckGAEoxvlVAiw.jpeg" alt="Typeform"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Typeform let you create survey form, quizzes, feedback form, etc. for your subscribers. Forms are interactive and one question at a time with many other features.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#quora"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.quora.com/"&gt;Quora&lt;/a&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Quora is a place to gain and share knowledge. It's a platform to ask questions and connect with people who contribute unique insights and quality answers.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--udeOlGCR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/digest.myhq.in/wp-content/uploads/2018/10/quora1-e1543419626800.png%3Ffit%3D796%252C416%26ssl%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--udeOlGCR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/digest.myhq.in/wp-content/uploads/2018/10/quora1-e1543419626800.png%3Ffit%3D796%252C416%26ssl%3D1" alt="Quora"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Quora is the best place for finding topics for your next blog post. You can look into the different questions and find out what people are interested in knowing. Search for your keyword, and follow topics related to your blog’s focus.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#pinterest"&gt;
  &lt;/a&gt;
  &lt;a href="https://pinterest.com/"&gt;Pinterest&lt;/a&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Discover recipes, home ideas, style inspiration, and other ideas to try.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1-j2Xf2r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.pinimg.com/images/facebook_share_image.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1-j2Xf2r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.pinimg.com/images/facebook_share_image.png" alt="Pinterest"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I think you used Pinterest for searching, saving, and downloading images but it is one of the social media that drive direct traffic to your blog. Pinterest lets you create a pin, add a description and website to direct traffic from Pinterest.&lt;/p&gt;

&lt;p&gt;You can follow &lt;a href="https://www.youtube.com/c/AnastasiaBlogger/videos"&gt;&lt;strong&gt;Anastasia Blogger&lt;/strong&gt;&lt;/a&gt; YouTube Channel to learn more about Pinterest marketing.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#wordpresscom"&gt;
  &lt;/a&gt;
  &lt;a href="https://wordpress.com/"&gt;Wordpress.com&lt;/a&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Responsive Mobile Themes and Dedicated Live Support. Get Started in Minutes! Live Chat and Email Help. Rich, Easy-to-Read Stats. Built-in SEO. Fast, Secure Web Hosting. Ad-Free Site w/ Paid Plan. Scalable and Secure. Upload Photos &amp;amp; Videos. Free Website Templates.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MqK4y2WQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://yoast.com/app/uploads/2021/02/Copy-of-WordPress_FI-2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MqK4y2WQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://yoast.com/app/uploads/2021/02/Copy-of-WordPress_FI-2.png" alt="Wordpress.com"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Wordpress.com is best for hosting your blog for free with a subdomain with wordpress.com. It is best for coders as well as a non coder to create beautiful blogging websites with their templates. Your blog post will be searchable through every search engine and it is recommended to WordPress Readers.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#connect-with-me"&gt;
  &lt;/a&gt;
  🔗 Connect with me:
&lt;/h2&gt;

&lt;p&gt;Currently, on Twitter, I am posting about "How to write and grow blog?". If you want to write a more effective blog with tips, consider the follow button on Twitter.&lt;/p&gt;


&lt;blockquote&gt;
&lt;p&gt;With this completing 500 tweets🥳.&lt;br&gt;&lt;br&gt;Thank you to everyone🤩.&lt;br&gt;&lt;br&gt;As helping more people, I am going to tweet about writing and growing blog especially technical, in the coming days🔥.&lt;br&gt;&lt;br&gt;So if you haven't followed me, please consider🤗.&lt;/p&gt;— Suraj Vishwakarma &lt;a href="https://twitter.com/surajondev"&gt;@surajondev&lt;/a&gt; &lt;a href="https://twitter.com/surajondev/status/1394212368675000321?ref_src=twsrc%5Etfw"&gt;May 17, 2021&lt;/a&gt;
&lt;/blockquote&gt; 

&lt;p&gt;&lt;a href="https://twitter.com/surajondev"&gt;&lt;strong&gt;Twitter&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#support"&gt;
  &lt;/a&gt;
  Support
&lt;/h2&gt;

&lt;p&gt;I hope this resource with tips will help you in acing your blogging career. &lt;/p&gt;

&lt;p&gt;If you like my work please consider &lt;a href="https://www.buymeacoffee.com/surajondev"&gt;Buying me a Coffee&lt;/a&gt; so that I can bring more projects, more articles for you.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Help me to reach $100 so that I can pay for domains and hosting for my websites&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/RETzc1mj7HpZPuNf3e/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/RETzc1mj7HpZPuNf3e/giphy.gif" alt="Buy Me A Coffee"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thank You for reading the blog post. &lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>javascript</category>
    </item>
    <item>
      <title>5 best Node.JS frameworks</title>
      <author>Alex</author>
      <pubDate>Wed, 09 Jun 2021 15:08:18 +0000</pubDate>
      <link>https://dev.to/alexanderkdev/5-best-node-js-frameworks-4a3n</link>
      <guid>https://dev.to/alexanderkdev/5-best-node-js-frameworks-4a3n</guid>
      <description>&lt;p&gt;Node.js is an open-source, cross-platform JavaScript runtime that manages JavaScript code outside the browser.&lt;br&gt;
Mostly JavaScript is used to create client-side scripts are embedded in the HTML of a website page and run by the JavaScript engine in the browser. With Node.js, developers can use JavaScript to get command-line tools. On the server-side, it runs the necessary scripts to process the dynamic content of the web page before it is available in the user's browser. Thus, Node.js embodies the concept of “JavaScript everywhere,” allowing you to develop web applications in the same language for both server-side and client-side scripting.&lt;br&gt;
Features such as better performance, functionality, high speed, and scalability make Node.js the number one choice for developing enterprise-grade applications for large companies.&lt;br&gt;
Developing in Node.js, you can use the same language for both the frontend and backend. This will save you the trouble of learning and applying new languages.&lt;/p&gt;

&lt;p&gt;HOW TO CHOOSE THE BEST FRAMEWORK?&lt;br&gt;
I consider the following criteria:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Scalability.&lt;/li&gt;
&lt;li&gt;Ecosystem.&lt;/li&gt;
&lt;li&gt;Functionality.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;EXPRESS.JS&lt;br&gt;
Express.JS is the most popular one. It makes it much easier to reuse code to process data in web applications, store user sessions, manage cookie files, and handle payloads. If you’re not using Express.Js, Node.js requires you to rewrite many processes from the ground.&lt;br&gt;
Express is well known to evolve, unlike other frameworks that rely heavily on Rails and borrows a lot from another Ruby framework called Sinatra. The concept is simple: the framework provides enough capabilities to launch and work without requiring a lot of preparation time.&lt;br&gt;
This is why Express is a clear favorite for dynamic content. It has a fast response to users’ requests, uploads text, photos, videos, and other content to the page.&lt;br&gt;
Sites built with Express.js&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Uber&lt;/li&gt;
&lt;li&gt;Twitter&lt;/li&gt;
&lt;li&gt;BlaBlaCar&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Advantages of Express.js&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Open-sourced, has a vast and vital community;&lt;/li&gt;
&lt;li&gt;Easy to learn;
A developer can install helpful tools for speed, response, and performance improvement;&lt;/li&gt;
&lt;li&gt;Ability to define with URLs and HTTP protocol;&lt;/li&gt;
&lt;li&gt;Supports multiple template engines;&lt;/li&gt;
&lt;li&gt;Allows creating both static and dynamic content;&lt;/li&gt;
&lt;li&gt;Integration with SQL and NoSQL databases.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;METEOR.JS&lt;br&gt;
Meteor is an open-source MVC framework that allows you to create real-time Web applications. One of the platform’s essential features is using the same code on both the server and client sides. It is data that is usually transferred between the server and the client, but not HTML code. The framework supports OS X, Windows, and Linux. Its reactive programming model allows you to build applications with less JavaScript.&lt;br&gt;
Sites built with Meteor.js&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Mazda&lt;/li&gt;
&lt;li&gt;Accenture&lt;/li&gt;
&lt;li&gt;Deloitte&lt;/li&gt;
&lt;li&gt;Brainhub&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Advantages of Meteor.js&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Suitable for MVP development and prototype;&lt;/li&gt;
&lt;li&gt;Smart packages: you may use a single command to connect multiple features;&lt;/li&gt;
&lt;li&gt;You don’t need huge blocks of code: it’s simple and elegant.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;KOA.JS&lt;br&gt;
The Express.js development team has created another framework called Koa.js: a futuristic next-generation Node.js framework that promises to be more concise and colorful than Express.js.&lt;br&gt;
Koa.js focuses on building web applications and APIs. Its main advantage is generators, which are a great way to avoid callbacks and help developers fix bugs.&lt;br&gt;
Sites built with Koa.js&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Brainhub;&lt;/li&gt;
&lt;li&gt;Bulb;&lt;/li&gt;
&lt;li&gt;GAPO&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Advantages of Koa.js&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A lightweight approach to development&lt;/li&gt;
&lt;li&gt;Easy error handling using try/catch command;&lt;/li&gt;
&lt;li&gt;There’s no built middleware, so nothing makes the application havier or slows down;&lt;/li&gt;
&lt;li&gt;Rich Express ecosystem supports Koa and provides a lot of its translated packages and libraries&lt;/li&gt;
&lt;li&gt;Koa allows simply writing functions instead of spamming middleware.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;NEST.JS&lt;br&gt;
Nest. JS architecture was inspired by Angular. This is the framework created to make life easier for the developer, using the right architectural approaches and dictating its own rules.&lt;br&gt;
Therefore, NestJS is not only a backend framework but also an opportunity to enter the world of advanced concepts such as DDD, Event sourcing, and microservice architecture. Everything is packaged in a lightweight and straightforward form, so the choice is yours - whether you decide to use the entire platform or just use its components.&lt;br&gt;
SITES BUILT WITH NEST.JS&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Adidas&lt;/li&gt;
&lt;li&gt;Autodesk&lt;/li&gt;
&lt;li&gt;Neoteric&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Advantages of Nest.js&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Angular style syntax for the backend&lt;/li&gt;
&lt;li&gt;NodeJS ecosystem&lt;/li&gt;
&lt;li&gt;Integration with Express&lt;/li&gt;
&lt;li&gt;Fast development&lt;/li&gt;
&lt;li&gt;You would quickly switch to Nest if you used Angular or Express before&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;HAPI.JS&lt;br&gt;
We consider Hapi a security focus Node.JS framework. Code quality and verification are prioritized over extensive functionality.&lt;br&gt;
Unlike Express and Restify, it has a slightly different approach, providing more functionality out of the box. The cons include full control over requests getting and detailed help with generating documentation.&lt;br&gt;
Sites built on Hapi.Js&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;BrainHub&lt;/li&gt;
&lt;li&gt;Gozova&lt;/li&gt;
&lt;li&gt;Boodle&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Advantages of Hapi.js:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Powerful input validation&lt;/li&gt;
&lt;li&gt;Functionality&lt;/li&gt;
&lt;li&gt;Caching Implementation&lt;/li&gt;
&lt;li&gt;Improved error handling system&lt;/li&gt;
&lt;li&gt;Suitable for microservice development&lt;/li&gt;
&lt;li&gt;Flexible RSS memory&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;CONCLUSION&lt;br&gt;
Although Node.js frameworks are not necessary for the back-end in terms of functionality, they make a big difference in development, product performance, and code quality.&lt;br&gt;
Accessing predefined models, libraries, and middleware enables developers to save time writing the same code, passing through thousands of callbacks, and struggling with front-end frameworks to implement Node.js.&lt;br&gt;
Our developers use all the frameworks above and can’t say which one is better. Some frameworks are ideally adapted for managing dynamic content, while others are best suited for creating MVP. Also, we (&lt;a href="https://exceed-team.com/tech/5-best-nodejs-frameworks?s=re&amp;amp;a=d"&gt;https://exceed-team.com/tech/5-best-nodejs-frameworks?s=re&amp;amp;a=d&lt;/a&gt;) always base our decision on the product’s requirements and features when a Node.js project comes along. It’s very important to pay attention to business needs.&lt;/p&gt;

</description>
      <category>node</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>app</category>
    </item>
    <item>
      <title>Top 15 Skills Any Successful Web Developer Should Have</title>
      <author>Creative Tim</author>
      <pubDate>Wed, 09 Jun 2021 15:03:48 +0000</pubDate>
      <link>https://dev.to/creativetim_official/top-15-skills-any-successful-web-developer-should-have-1mcf</link>
      <guid>https://dev.to/creativetim_official/top-15-skills-any-successful-web-developer-should-have-1mcf</guid>
      <description>&lt;p&gt;To get hired as a web developer, you need a specific set of skills and abilities to help you achieve high performance and success in this profession. When you’re starting out, it might be difficult to figure out what skills a web developer should have, so we put together a list of the most sought-after skills in this field.&lt;/p&gt;

&lt;p&gt;The web developer required skill set may vary depending on the employer, but you will surely come across many of the essential skills on our list while searching for a web development job. We covered both technical skills and soft skills so you can have a complete understanding of this role. Read on to find out what you need to make it as a web developer.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#technical-skills"&gt;
  &lt;/a&gt;
  Technical Skills
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#html-and-css"&gt;
  &lt;/a&gt;
  &lt;strong&gt;HTML and CSS&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;HTML (HyperText Markup Language) is the core markup language of the internet. Without HTML, a browser would not know how to display the text on a webpage as elements. Most websites are written in HTML, so &lt;a href="https://codeinstitute.net/blog/what-is-html-and-why-should-i-learn-it/"&gt;web developers should be proficient in HTML&lt;/a&gt;. Luckily it is very easy to learn, and it is usually the first language any developer studies.&lt;/p&gt;

&lt;p&gt;CSS is the style sheet language that dictates how page elements should be displayed on the screen. You can use it to add stylings such as background, colors, layouts, animations, and many others. Web pages would look extremely plain without the CSS styling. You can think of CSS as the language that enhances the HTML code by controlling the appearance of a web page, so the two languages go hand in hand.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#javascript"&gt;
  &lt;/a&gt;
  &lt;strong&gt;JavaScript&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Javascript is the programming language that lets you add dynamic functionalities to a webpage (like sliders, pop-ups, photo galleries, etc.). &lt;/p&gt;

&lt;p&gt;Although it is used mainly for front-end, you can also use javascript for back-end development. Node.js is a Javascript framework that makes using Javascript for back-end possible. The idea of having a full-stack Javascript web application is very appealing to many companies, so even back-end developers should be familiar with Javascript.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#testing-and-debugging"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Testing and Debugging&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Developers should know how to test their code, which means verifying and validating that the code is bug-free. If they find errors/bugs, they shall proceed to the debugging stage, which implies fixing them.&lt;/p&gt;

&lt;p&gt;Usually, testing is done by a tester, but the developer himself sometimes does it, so this is a skill you should have. The developer always does the debugging process because he is the one that wrote the code and thus the one who can fix any bugs in it. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vx_gS0Qp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativetimblog.com/blog/wp-content/uploads/2021/06/clement-helardot-95YRwf6CNw8-unsplash-1024x683.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vx_gS0Qp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativetimblog.com/blog/wp-content/uploads/2021/06/clement-helardot-95YRwf6CNw8-unsplash-1024x683.jpg" alt="Testing and Debugging"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#backend-languages"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Back-End Languages&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Since front-end developers are not required to have any back-end language knowledge, this skill only applies to back-end developers and full-stack developers.&lt;/p&gt;

&lt;p&gt;If you want to become a back-end developer or a full-stack developer, you should learn at least one of the most sought-after back-end languages on the market. At the moment, some of the &lt;a href="https://blog.back4app.com/best-backend-language/"&gt;most popular back-end languages&lt;/a&gt; are Java, PHP, Python, Ruby on Rails, and .NET. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#git-code-versioning"&gt;
  &lt;/a&gt;
  &lt;strong&gt;GIT (Code Versioning)&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Code versioning is a way to keep track of changes made to the code by creating different versions of the code any time you or a team member make changes to it. This way, if something goes wrong, you can revert to a previous version of the code. You also have a code history with all the bugs and fixes your original code went through. Every developer must know how to do code versioning, with no exceptions.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://git-scm.com/book/en/v2/Getting-Started-About-Version-Control"&gt;Git&lt;/a&gt; is the most popular open-source software used by developers for code version control, so being able to work in GIT is also a must-have skill for a web developer. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#web-optimization"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Web Optimization&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Website optimization refers to improving the user experience on websites or apps you build. This is an in-demand skill because a good user experience has the potential to convert. Website optimization includes, but is not limited to removing unused CSS and Javascript, improving page speed, image optimization, and website responsiveness.&lt;/p&gt;

&lt;p&gt;Even though it is not a dealbreaker, like other technical skills on this list, web optimization is a skill that front-end developers and full-stack developers should concern themselves with.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#libraries-and-frameworks"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Libraries and Frameworks&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Libraries are sets of frequently used code written by other developers. They are reusable and can help you write your code faster and easier.&lt;/p&gt;

&lt;p&gt;Frameworks are supporting structures that you can use as a starting point for your projects. You fill the given structure with your own code, save time, and ensure your code has a great foundation.&lt;/p&gt;

&lt;p&gt;Both libraries and frameworks speed production and provide a set of best practices and rules that have been tested by countless programmers before. So you should be familiar with &lt;a href="https://www.creative-tim.com/blog/web-development/popular-web-development-frameworks/"&gt;the most popular frameworks&lt;/a&gt; for the programming languages you code in, regardless of them being front-end or back-end.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#keeping-up-to-date-with-the-industry"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Keeping up to date with the Industry&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;The web development industry is dynamic, and it is in continuous change. Because of that, it can be challenging to keep up with the latest new and emerging web technologies. However, you should go out of your way to do this. The industry is moving at a fast pace, and it’s not waiting for anyone who gets behind.&lt;/p&gt;

&lt;p&gt;New frameworks and tools can help you be more productive at your job, but they are valuable assets to your resume. So if you have a job that has you using the same tools and technologies day in and day out, branch out with your projects and do some learning on your own.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#other-skills"&gt;
  &lt;/a&gt;
  Other Skills
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#communication-skills"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Communication Skills&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;While some people may think that communication skills are not that important in the web development field, this could not be farther from the truth. &lt;/p&gt;

&lt;p&gt;All developers need to have good communication skills because they come in handy when communicating with team members and writing documentation. They need to convey complex ideas in a way that even people with less technical skills can understand. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#problem-solving"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Problem Solving&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Developers are in charge of writing code but also of solving problems that appear within that code. Both these tasks require problem-solving skills. &lt;/p&gt;

&lt;p&gt;When you look at a website or an app in its entirety, making it work flawlessly can appear like a daunting task. A skilled programmer should be able to tackle each problem individually and find solutions. So if you aim to work as a web developer, you should be inclined towards problem solving or try to cultivate this skill.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#attention-to-detail"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Attention to Detail&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Being a web developer with attention to detail means that you are very thorough with your code and ensure that everything is up to your highest standards. This skill increases your productivity and makes you less likely to commit errors while coding. &lt;/p&gt;

&lt;p&gt;Attention to detail is considered a desirable skill by all employers. If you list attention to detail on your &lt;a href="https://www.creative-tim.com/blog/education/web-developer-resume/"&gt;web developer resume&lt;/a&gt;, you’ll send the message that you write quality code and are worth hiring. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#teamwork"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Teamwork&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Web development involves a lot of coding by oneself, but there are also many instances requiring considerable collaboration. You might need to do pair programming with someone or collaborate with more than one team member for a certain task.&lt;/p&gt;

&lt;p&gt;Knowing how to &lt;a href="https://hbr.org/2016/06/the-secrets-of-great-teamwork"&gt;work well with colleagues&lt;/a&gt; is essential for any job, including web development. Furthermore, lacking the skill to work well with other web developers could be a dealbreaker for some employers.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mUA43vHP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativetimblog.com/blog/wp-content/uploads/2021/06/marvin-meyer-SYTO3xs06fU-unsplash-1024x683.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mUA43vHP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativetimblog.com/blog/wp-content/uploads/2021/06/marvin-meyer-SYTO3xs06fU-unsplash-1024x683.jpg" alt="teamwork"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#analytical-skills"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Analytical Skills&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Web developers need keen analytical skills to see patterns, draw conclusions, and find solutions to complex problems that might appear during the coding process. Developers also use these skills to analyze the wants and needs of clients and make decisions that align with their interests.  &lt;/p&gt;

&lt;p&gt;A good web developer will be able to think both about the big picture and about the details. Don’t panic if you feel you lack analytical skills because they can be learned or improved, but keep in mind this must be done by exercise.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#critical-thinking"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Critical Thinking&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Critical thinking gives one the ability to think clearly and rationally and understand the connections between ideas. If you are a critical thinker, you can make reliable judgments by questioning, analyzing, and evaluating facts.&lt;/p&gt;

&lt;p&gt;Critical thinking is strongly linked to problem solving, both vital skills in web development. Web developers who possess these skills can approach problems by analyzing all facts and coming up with multiple solutions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#time-management"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Time Management&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Time management is an essential skill in any job. As a developer, you need to organize your schedule and plan your tasks accordingly. Sometimes you may have tight deadlines you need to stick to or multiple tasks you need to juggle. You must also estimate the time dedicated to specific tasks and set deadlines for your projects.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--O28SqXu4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativetimblog.com/blog/wp-content/uploads/2021/06/airfocus-v89zhr0iBFY-unsplash-1024x683.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--O28SqXu4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativetimblog.com/blog/wp-content/uploads/2021/06/airfocus-v89zhr0iBFY-unsplash-1024x683.jpg" alt="time management"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  Final Thoughts
&lt;/h2&gt;

&lt;p&gt;We hope you now have an accurate picture of the skills you require to become a successful web developer. There’s no need to worry if you don’t master these skills when starting out as a web developer. You can improve most of them through practice, so the more you work, the better you will become at working as a web developer.&lt;/p&gt;

&lt;p&gt;Having your personal web development projects definitely helps with cultivating these skills. Try to contribute to open source projects and develop tools or plugins.&lt;/p&gt;

</description>
      <category>tutorial</category>
      <category>skills</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
