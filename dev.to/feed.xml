<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Um Quase Guia de Como Contribuir em Projetos Open Sources</title>
      <author>Augusto Silva</author>
      <pubDate>Mon, 16 Aug 2021 22:02:44 +0000</pubDate>
      <link>https://dev.to/augustoasilva/um-quase-guia-de-como-contribuir-em-projetos-open-sources-5069</link>
      <guid>https://dev.to/augustoasilva/um-quase-guia-de-como-contribuir-em-projetos-open-sources-5069</guid>
      <description>&lt;p&gt;Hoje eu trago um post inspirado em uma thread no twitter: &lt;strong&gt;como começar a contribuir para projetos open-sourc&lt;/strong&gt; . Bom e hoje eu vim trazer um pouco da minha experiência de como comecei a contribuir e assim, talvez, possa te ajudar também.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#por-onde-come%C3%A7ar-a-olhar"&gt;
  &lt;/a&gt;
  Por onde começar a olhar?
&lt;/h2&gt;

&lt;p&gt;Bem, hoje eu vejo que tem 3 caminhos a se seguir daqui:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Você procurar o repositório de algum projeto que você já usa e curti usar e quer contribuir;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Você pode procurar lista de projetos open-sources que muitas pessoas fazem (eu não serei essa pessoa hoje =/);&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Você pode começar a procurar por tags no github, como a &lt;strong&gt;good first issue&lt;/strong&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Bem agora eu explicar cada uma delas e como elas funcionaram para mim.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-contribuindo-em-projetos-que-voc%C3%AA-usa-e-curti"&gt;
  &lt;/a&gt;
  1. Contribuindo em projetos que você usa e curti!
&lt;/h2&gt;

&lt;p&gt;Existem vários projetos open-sources que muita gente usa como GIMP, OBS Studio, Inkscape, Kdenlive, Krita, entre outros, que já trazem uma página em seu site ajudando a como contribuir, os guidelines, até mesmo disponibilizam canais via slack, email e etc para você entrar em contato e aqui mora o pulo do gato: entre em contato!&lt;/p&gt;

&lt;p&gt;Muitas vezes quando você entra em contato com os devs do projeto, e explica que quer contribuir eles podem acabar te ajudando a selecionar uma issue bem bacana e simples para pessoas que estão aprendendo. Isso vale tanto pra stack que eles usam, quanto para o uso do próprio git e repositório online (github, gitlab, bitbucket, etc).&lt;/p&gt;

&lt;p&gt;Esse aqui não foi exatamente o meu caso, e como eu sei disso? Porque hoje eu contribuo para um projeto da Apache e descobri por lá isso. Bem bacana né?! Então de resumo dessa primeira parte fica: **não tenha medo de entrar em contao com os devs do projeto pedindo orientações de como contribuir.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-procurando-lista-de-projetos-opensource-quase-o-meu-caso-de-como-entrei-no-mundo-opensource"&gt;
  &lt;/a&gt;
  2. Procurando lista de projetos open-source (quase o meu caso de como entrei no mundo open-source).
&lt;/h2&gt;

&lt;p&gt;Esse aqui talvez seja um dos métodos que as pessoas mais comentam nos grupos (fonte: minha intuioção). O que mais vi até agora nos grupos, no geral, são compilados de projetos open-sources que uma galera mantem como repo do github.&lt;/p&gt;

&lt;p&gt;O meu caso foi semelhante a isso, mas não foi através de lista de projetos, foi mais uma citação em grupo do Telegram sobre projetos open-source nacionais. E assim começou minha contribuição para o &lt;a href="https://libreflix.org"&gt;Libreflix&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Curiosidade: eu não contribui para o código-fonte em si do projeto diretamente, mas eu criei issues com ideais, participei de debates e rodas de conversas, além de ter uma versão desktop da aplicação em meu repositório(tá publicado também na &lt;a href="https://snapcraft.io/libreflix-desktop"&gt;Snap Store&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Foi com essa turma que dei meu ponta-pé de fato para aderir a stack do Node.js, meses depois cheguei até a pegar uns freelas de sistemas que fiz com MEVN (mongo, express, vue, node).&lt;/p&gt;

&lt;p&gt;Então deixarei agora algumas listas de projetos nacionais para vocês contribuirem:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://github.com/camilatigre/listamaravilhosaopensource"&gt;https://github.com/camilatigre/listamaravilhosaopensource&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/backend-br/opensource-br"&gt;https://github.com/backend-br/opensource-br&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vinicius73/awesome-brasil"&gt;https://github.com/vinicius73/awesome-brasil&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Procurem mais e adicione aqui nos comentários, beleza?&lt;/strong&gt; Vamos nos ajudar!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#procurando-por-tags-no-github"&gt;
  &lt;/a&gt;
  Procurando por tags no github!
&lt;/h2&gt;

&lt;p&gt;Outra maneira muito boa de se começar a contribuir é através de procurar tags no github! Tá, mas como você faz isso? Quando você está na página inicial do github e logado, o campo de pesquisa está no canto superior esquerdo, basta digitar algo como &lt;strong&gt;good first issue&lt;/strong&gt; e depois clicar enter, em seguida basta filtrar por issues e ta-da! &lt;/p&gt;

&lt;p&gt;Vou deixar aqui também, algo que o próprio github disponibiliza no quesito de tópicos de &lt;strong&gt;good first issue&lt;/strong&gt; :&lt;a href="https://github.com/topics/good-first-issue"&gt;https://github.com/topics/good-first-issue&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Outras labels/tags que o pessoal usa para indicar que uma issue é para iniciantes, que eu conheça, são: &lt;strong&gt;first-timers-only&lt;/strong&gt; e &lt;strong&gt;novice&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#mas-e-eu-que-ainda-n%C3%A3o-sei-git"&gt;
  &lt;/a&gt;
  Mas e eu que ainda não sei git?
&lt;/h2&gt;

&lt;p&gt;Bom, ai se você não sabe sobre o uso do git, vou deixar aqui um &lt;a href="https://www.udemy.com/course/git-e-github-na-vida-real/?couponCode=PROMOAGO21"&gt;curso bem bacana de git do Willian Justen&lt;/a&gt;. Existem outros cursos bem bacanas também, e alguns até grátis, então se você conhece um, deixa aqui nos comentários também beleza?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#por-hoje-%C3%A9-s%C3%B3"&gt;
  &lt;/a&gt;
  Por hoje é só!
&lt;/h2&gt;

&lt;p&gt;Se você leu até aqui, queria te agradecer pelo tempo e espero que possa ter te ajudado com esse mini guia de como começar a contribuir com um projeto open-source. Vale ressaltar que contribuir, e aprender, não é apenas codar viu? Acompanhe os chats/grupos/canais que os devs/contribuintes usam para participar e aprender além do código também beleza?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lince%C3%A7as"&gt;
  &lt;/a&gt;
  Linceças
&lt;/h3&gt;

&lt;p&gt;Foto por &lt;a href="https://unsplash.com/@bitcloudphotography"&gt;Bitcloud&lt;/a&gt; no &lt;a href="https://unsplash.com/photos/wKhsnBy1DXc"&gt;Unsplash&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>git</category>
      <category>contributing</category>
      <category>guide</category>
    </item>
    <item>
      <title>Some useful tools for a web developer.</title>
      <author>Naman vyas</author>
      <pubDate>Mon, 16 Aug 2021 21:46:43 +0000</pubDate>
      <link>https://dev.to/namanvyas/some-useful-tools-for-a-web-developer-3d1f</link>
      <guid>https://dev.to/namanvyas/some-useful-tools-for-a-web-developer-3d1f</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_ayKh_1z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7ilbkvjdezhbxpuet0ka.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_ayKh_1z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7ilbkvjdezhbxpuet0ka.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;wappalyzer:&lt;/p&gt;

&lt;p&gt;wappalyzer is a chrome extension to find out the technology stack of any website. Instantly reveal the technology stack any website, such as CMS, ecommerce platform or payment processor, as well as company and contact details.&lt;br&gt;
&lt;a href="https://chrome.google.com/webstore/detail/wappalyzer/gppongmhjkpfnbhagpmjfkannfbllamg?hl=en"&gt;Link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m2Khu7pm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cqpauljgaqmalmvb06j9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m2Khu7pm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cqpauljgaqmalmvb06j9.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;LogoTester by &lt;a href="http://thework.market:"&gt;http://thework.market:&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;LogoTester instantly checks if your logo is up to the top industry standards. It checks industry standards in your logo like - Uniqueness, Scalability, Background tolerance, Colors.&lt;br&gt;
&lt;a href="https://logotester.thework.market/"&gt;Link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BUqFuT9r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vo32uoum9002ptngiw85.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BUqFuT9r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vo32uoum9002ptngiw85.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fake Filler:&lt;/p&gt;

&lt;p&gt;It's another useful chrome extension. Fake Filler is THE form filler to fill all input fields on a page with randomly generated fake data. This productivity-boosting extension is a must for developers and testers who work with forms.&lt;br&gt;
&lt;a href="https://chrome.google.com/webstore/detail/fake-filler/bnjjngeaknajbdcgpfkgnonkmififhfo?hl=en"&gt;Link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--x7wshfna--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/62scbcbhq4n4qd0qxs3w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x7wshfna--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/62scbcbhq4n4qd0qxs3w.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;WhatTheFont:&lt;/p&gt;

&lt;p&gt;With this web tool, you can find a font with just an image. WhatTheFont uses deep learning to search our collection of over 133,000 font styles and find the best match for the fonts in your photo.&lt;br&gt;
&lt;a href="https://www.myfonts.com/WhatTheFont/"&gt;Link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JGghw64T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/csyej3kha3bthvg5h2vq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JGghw64T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/csyej3kha3bthvg5h2vq.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://remove.bg:"&gt;http://remove.bg:&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://Remove.bg"&gt;http://Remove.bg&lt;/a&gt; removes backgrounds from photos Automatically. You just have to upload your photo and wait for a few seconds and boom you got your background removed images without all that photoshop efforts.&lt;br&gt;
&lt;a href="https://www.remove.bg/"&gt;Link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks for reading :)&lt;/p&gt;

</description>
      <category>tooling</category>
      <category>webdev</category>
      <category>writing</category>
    </item>
    <item>
      <title>HOW I WILL USE KODECAMP AND WIN HNG TROPHY.</title>
      <author>Dev-Tonia</author>
      <pubDate>Mon, 16 Aug 2021 21:32:17 +0000</pubDate>
      <link>https://dev.to/devtonia/how-i-will-use-kodecamp-and-win-hng-trophy-3lp5</link>
      <guid>https://dev.to/devtonia/how-i-will-use-kodecamp-and-win-hng-trophy-3lp5</guid>
      <description>&lt;p&gt;During my last post,  I told you how I was accepted into the &lt;strong&gt;HNGi8&lt;/strong&gt; internship and my plan to win the HNG trophy which is the T-shirt.&lt;/p&gt;

&lt;p&gt;After some much wondering on the internet trying to find a helping hand on my journey on the ongoing HNG internship, I came across &lt;strong&gt;KODECAMP&lt;/strong&gt; I immediately hop into their Bootcamp as it is running the same time with the HNGI8 internship, you know it's a bonus for me as I will be learning and at same participating on the on going internship.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Why I Joined KODECAMP BootCamp.&lt;/strong&gt;&lt;br&gt;
The program will run for 16 weeks, so may the end of the 16 weeks I want to &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Master my act in Frontend development.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Be able to take on any project that was thrown my way with fear. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;I have been battling impostor syndrome, by the expiration of the 16 weeks, impostor syndrome is no longer part of me. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It will give the right focus during the ongoing internship as I will be standing on their training to tackle all the tasks thrown my way during the HNGi8 internship. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The truth is that by the end of the internship and this current Bootcamp I'm jumping into a job as a web developer majoring mainly on the frontend stack using REACT. . &lt;/p&gt;

&lt;p&gt;Stay as I will be updating on my journey from the internship and the Bootcamp.. &lt;/p&gt;

</description>
    </item>
    <item>
      <title>My Journey Into Web Development</title>
      <author>Oladipupo Adanikin</author>
      <pubDate>Mon, 16 Aug 2021 21:25:13 +0000</pubDate>
      <link>https://dev.to/deeppsy/my-journey-into-web-development-73n</link>
      <guid>https://dev.to/deeppsy/my-journey-into-web-development-73n</guid>
      <description>&lt;p&gt;Hi.&lt;/p&gt;

&lt;p&gt;I'm Dipo and welcome to my little talk about how my journey into web development has been for about 6 months. &lt;/p&gt;

&lt;p&gt;I am actually writing this article because of an internship role Im currently interested in. And that's the HNG Internship. Many Nigerians and some non-nigerians are familiar with this internship. Anyone can sign up for this internship using this link: &lt;a href="https://internship.zuri.team"&gt;https://internship.zuri.team&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To move from the stage I currently am, I was required to make this write-up as I typically don't like writing. But, here goes nothing.&lt;/p&gt;

&lt;p&gt;Like everybody else who is into software engineering, I started my learning from freecodecamp as it it completely free to use and easily accessible to anyone. But, I honestly got bored and wanted more. So I went on Udemy to look for courses that would help me and I found Colt Steele's bootcamp course into web dev. Here's a link to help if you feel like checking it out &lt;a href="https://www.udemy.com/course/the-web-developer-bootcamp/"&gt;https://www.udemy.com/course/the-web-developer-bootcamp/&lt;/a&gt;. The course covers foundational topics such as HTML, CSS and JavaScript for it's frontend section and for backend, it used NodeJS which really solidify my JavaScript understand.&lt;/p&gt;

&lt;p&gt;I completed this course in 3 months and by then I had done so many projects and also pushed to GitHub. If you're reading this and you don't know what GitHub is. It is a cloud platform that allows developers push their code online whether to a private or public folder. It basically makes life easy for us to share code as developers. Here's a link to help you start out  &lt;a href="https://youtu.be/DVRQoVRzMIY"&gt;https://youtu.be/DVRQoVRzMIY&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Also, developing for the often means we are working with some sort of design and these days there are many softwares used out there to create design. Examples are Figma, Adobe XD and so on.&lt;/p&gt;

&lt;p&gt;Figma is widely used and fairly easy to understand and I'd recommend watching this video to understand what goes on there &lt;a href="https://youtu.be/1MbQaYCCzzI"&gt;https://youtu.be/1MbQaYCCzzI&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I think it would be unfair to you reading this if I don't tell you why I decided to do this internship. Studying and building things alone can be a bit*h and it is often recommended that you learn with people so you can really test out your knowledge on stuff. So, at the end the 8 weeks internship, I hope to have networked with a lot of people in and out of my current technology stack and to give me the confidence to work on project that are genuinely mine. Not something from YouTube or some capstone project at the end of a course.&lt;/p&gt;

&lt;p&gt;So yeah. If you stuck around to this point of the article you're and OG, and I appreciate it. Thank you so much for you time. I hope you learnt a little bit.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>My Training process In KodeCamp</title>
      <author>daveeedu</author>
      <pubDate>Mon, 16 Aug 2021 21:23:34 +0000</pubDate>
      <link>https://dev.to/daveeedu/my-training-process-in-kodecamp-2f7a</link>
      <guid>https://dev.to/daveeedu/my-training-process-in-kodecamp-2f7a</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;I am David Edu, certified in Data analytics/Business Intelligence, presently pursuing a career in decision making using Data science. I'm fascinated about the application of machine learning in solving real life problems and Artificial intelligence in general. My hobbies include Coding, reading, gaming, and networking.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#my-stack"&gt;
  &lt;/a&gt;
  My Stack
&lt;/h1&gt;

&lt;p&gt;Front-End&lt;br&gt;
Python&lt;/p&gt;

&lt;p&gt;I am currently undergoing a web Front-End training course with KodeCamp. KodeCamp is a tech training platform that provides training tracks in web Front-End dev, Back-End dev and UI/UX designs. The training is designed to last for 12 weeks and during this time my goals are to:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Advance my html and css skills&lt;/li&gt;
&lt;li&gt;Get hands on experience by applying my skills on real life 
projects.&lt;/li&gt;
&lt;li&gt;Networking with industry experts and fellow tech enthusiasts.&lt;/li&gt;
&lt;li&gt;Building up my digital portfolio.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Thank you for reading my second article, I will be posting updates on the training process.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Website Setup Essentials</title>
      <author>PRIM4T</author>
      <pubDate>Mon, 16 Aug 2021 21:23:21 +0000</pubDate>
      <link>https://dev.to/prim4t/website-setup-essentials-447o</link>
      <guid>https://dev.to/prim4t/website-setup-essentials-447o</guid>
      <description>&lt;h5&gt;
  &lt;a href="#everything-you-need-to-start-your-minimal-fast-and-secure-blog"&gt;
  &lt;/a&gt;
  Everything you need to start your minimal, fast and secure Blog
&lt;/h5&gt;

&lt;p&gt;&lt;a&gt; &lt;img src="https://i.giphy.com/media/ZgTR3UQ9XAWDvqy9jv/giphy.gif"&gt; &lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;a&gt; &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wFrOX1Ev--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://upload.wikimedia.org/wikipedia/commons/b/bf/GradientPurpleBlue.png"&gt; &lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#envelope-register-email-mailfence-criptext"&gt;
  &lt;/a&gt;
  ✉️ Register E-Mail: &lt;strong&gt;&lt;a href="https://mailfence.com"&gt;Mailfence&lt;/a&gt;&lt;/strong&gt; | &lt;strong&gt;&lt;a href="https://criptext.com"&gt;Criptext&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#link-get-git-github-gitlab"&gt;
  &lt;/a&gt;
  🔗 Get Git: &lt;strong&gt;&lt;a href="https://github.com"&gt;GitHub&lt;/a&gt;&lt;/strong&gt; | &lt;strong&gt;&lt;a href="https://gitlab.com"&gt;GitLab&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#computer-host-your-git-netlify-vercel"&gt;
  &lt;/a&gt;
  💻 Host your Git:  &lt;strong&gt;&lt;a href="https://netlify.com"&gt;Netlify&lt;/a&gt;&lt;/strong&gt; | &lt;strong&gt;&lt;a href="https://vercel.com"&gt;Vercel&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#globewithmeridians-register-domain-namecheap-unstoppabled"&gt;
  &lt;/a&gt;
  🌐 Register Domain : &lt;strong&gt;&lt;a href="https://namecheap.com"&gt;Namecheap&lt;/a&gt;&lt;/strong&gt; | &lt;strong&gt;&lt;a href="https://unstoppabledomains.com/r/151ba14a0087436"&gt;UnstoppableD...&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#art-get-a-themetemplate-hugo-jekyll-gatsby"&gt;
  &lt;/a&gt;
  🎨 Get a Theme/Template: &lt;a href="https://themes.gohugo.io"&gt;Hugo&lt;/a&gt; | &lt;a href="https://jamstackthemes.dev/ssg/jekyll/"&gt;Jekyll&lt;/a&gt; | &lt;a href="https://themejam.gatsbyjs.org/showcase"&gt;Gatsby&lt;/a&gt;
&lt;/h3&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Chalk&lt;/th&gt;
&lt;th&gt;TeXt&lt;/th&gt;
&lt;th&gt;Anatole&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/nielsenramon/chalk"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CHMQAOYQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/nielsenramon/chalk/master/_assets/images/documentation/chalk-intro%25402x.png" alt="Chalk"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kitian616/jekyll-TeXt-theme"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_BHosNlt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/kitian616/jekyll-TeXt-theme/master/screenshots/TeXt-home.jpg" alt="TeXt"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/lxndrblz/anatole"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kLXt34Jo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/lxndrblz/anatole/master/images/screenshot.png" alt="Anatole"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#useful-tools-and-links"&gt;
  &lt;/a&gt;
  Useful Tools and links:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Emoji | &lt;a href="https://emojipedia.org/"&gt;Emojipedia.org&lt;/a&gt; | &lt;a href="https://gist.github.com/rxaviers/7360908"&gt;on Github&lt;/a&gt;| &lt;a href="https://dev.to/nikolab/complete-list-of-github-markdown-emoji-markup-5aia"&gt;on Dev.to&lt;/a&gt; | 😄 😁 😢&lt;/li&gt;
&lt;li&gt;Icons | &lt;a href="https://simpleicons.org/?q=netl"&gt;Simpleicons.org&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;Gif Libraries | &lt;a href="https://gifs.joelglovier.com/"&gt;on Github&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;Badge | &lt;a href="https://shields.io/category/social"&gt;Shield.io&lt;/a&gt; | &lt;a href="https://github.com/aleen42/badges"&gt;Aleen42&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;Pictures/Photos | &lt;a href="https://www.pexels.com/"&gt;Pexels&lt;/a&gt; | &lt;a href="https://commons.wikimedia.org/wiki/Category:Images"&gt;Wikipedia&lt;/a&gt; | 📷&lt;/li&gt;
&lt;li&gt;Markdown Editors | &lt;a href="https://jbt.github.io/markdown-editor/"&gt;jbt&lt;/a&gt; | &lt;a href="https://coolmarkdowneditor.org/"&gt;Cool&lt;/a&gt; | &lt;a href="https://upmath.me/"&gt;Upmath&lt;/a&gt; &lt;/li&gt;
&lt;li&gt; List of Static Site generators | &lt;a href="https://jamstack.org/generators/"&gt;Jamstack.org&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Automation | &lt;a href="https://www.integromat.com"&gt;Integromat&lt;/a&gt; | &lt;a href="https://zapier.com/"&gt;zapier&lt;/a&gt; | &lt;a href="https://ifttt.com/"&gt;ifttt&lt;/a&gt; | ⚙️ &lt;/li&gt;
&lt;li&gt;Cross blog | &lt;a href="https://www.dev.to"&gt;Dev.to&lt;/a&gt; | &lt;a href="https://medium.com/"&gt;Medium&lt;/a&gt; | 📝&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a&gt; &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wFrOX1Ev--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://upload.wikimedia.org/wikipedia/commons/b/bf/GradientPurpleBlue.png"&gt; &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Web Setup Essentials from &lt;a href="https://www.youtube.com/channel/UCMhW7mC8faCqTcRKbO0c7Cw"&gt;Primitive Tutorials&lt;/a&gt; \&lt;br&gt;
Feel free &lt;a href="https://github.com/prim4t/Web-Setup-Essentials"&gt;contribute!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.paypal.me/prim4tdotart"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PMi5QXbp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/PayPal-tip%2520me-1462ab.svg%3Flogo%3Dpaypal" alt="Tip Me via PayPal"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://raw.githubusercontent.com/kitian616/jekyll-TeXt-theme/master/docs/assets/images/3Fkufxcw2xd8HnaRJBNK4ccdtkUDyyNu4V.jpg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--86NSAtQW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/Bitcoin-tip%2520me-f7931a.svg%3Flogo%3Dbitcoin" alt="Tip Me via Bitcoin"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>static</category>
      <category>blog</category>
      <category>hugo</category>
      <category>markdown</category>
    </item>
    <item>
      <title>What Is a URL? 🔗</title>
      <author>Anton</author>
      <pubDate>Mon, 16 Aug 2021 21:21:47 +0000</pubDate>
      <link>https://dev.to/therceman/what-is-a-url-3j9d</link>
      <guid>https://dev.to/therceman/what-is-a-url-3j9d</guid>
      <description>&lt;p&gt;URL (Uniform Resource Locator) is the so-called address of the desired resource on the internet that consists of multiple components/parts. &lt;/p&gt;

&lt;p&gt;Let's take a look at the following URL&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;https://admin:pass@a.b.example.com:888/users/index.php?q=bob&amp;amp;role=2#info
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This URL consist of the following components:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Scheme        &lt;code&gt;https://&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Authority    &lt;code&gt;admin:pass@&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Host             &lt;code&gt;a.b.example.com&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Port             &lt;code&gt;888&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Path            &lt;code&gt;users/index.php&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Query          &lt;code&gt;q=bob&amp;amp;role=2&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Hash             &lt;code&gt;#info&lt;/code&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#scheme-component"&gt;
  &lt;/a&gt;
  Scheme component
&lt;/h2&gt;




&lt;p&gt;&lt;strong&gt;Alternative naming:&lt;/strong&gt;  Protocol&lt;br&gt;
&lt;strong&gt;Required:&lt;/strong&gt; Yes&lt;br&gt;
&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;https://&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The scheme specifies which application will be used by a web server (app on Windows/i0S/Android) to open a URL. &lt;/p&gt;

&lt;p&gt;For example, opening a URL with the scheme &lt;code&gt;mailto://&lt;/code&gt; will open your webmail application.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Common examples: &lt;code&gt;https://&lt;/code&gt;, &lt;code&gt;http://&lt;/code&gt; , &lt;code&gt;ftp://&lt;/code&gt;, &lt;code&gt;mailto://&lt;/code&gt;, &lt;code&gt;file://&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Custom app examples: &lt;code&gt;facetime://&lt;/code&gt;, &lt;code&gt;slack://&lt;/code&gt;, &lt;code&gt;steam://&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Browser specific examples: &lt;code&gt;about://&lt;/code&gt;, &lt;code&gt;chrome://&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Additional browser examples: &lt;code&gt;data://&lt;/code&gt;, &lt;code&gt;javascript://&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#authority-component"&gt;
  &lt;/a&gt;
  Authority component
&lt;/h2&gt;




&lt;p&gt;&lt;strong&gt;Alternative naming:&lt;/strong&gt; HTTP authentication, credentials, authorization&lt;br&gt;
&lt;strong&gt;Required:&lt;/strong&gt; No&lt;br&gt;
&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;admin:pass@&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Basic authorization to a web/app resource indicated by  &lt;code&gt;@&lt;/code&gt; (at) sign.&lt;br&gt;
Login &lt;code&gt;admin&lt;/code&gt; is separated from password &lt;code&gt;pass&lt;/code&gt; using &lt;code&gt;:&lt;/code&gt; (colon) sign&lt;br&gt;
In some cases password is optional (e.g. &lt;code&gt;https://admin@example.com&lt;/code&gt;)&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#host-component"&gt;
  &lt;/a&gt;
  Host component
&lt;/h2&gt;




&lt;p&gt;&lt;strong&gt;Alternative naming:&lt;/strong&gt; Hostname&lt;br&gt;
&lt;strong&gt;Required:&lt;/strong&gt; Yes&lt;br&gt;
&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;a.b.example.com&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The Host consists of multiple domain names separated by &lt;code&gt;.&lt;/code&gt; (dot) sign.&lt;br&gt;
Domain name with level &amp;gt; 2 is called sub-domain&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;a&lt;/code&gt;                   - fourth-level domain (sub-domain)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;b&lt;/code&gt;                   - third-level domain (sub-domain). &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;example&lt;/code&gt;    - second-level domain (domain name)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;com&lt;/code&gt;            - top/first-level domain (TLD)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The host can be an IP address in IPv4 (e.g. &lt;code&gt;193.184.216.34&lt;/code&gt;)&lt;br&gt;
or IPv6 (e.g. &lt;code&gt;[2a00:1450:400e:80a::200e]&lt;/code&gt;) format&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#port-component"&gt;
  &lt;/a&gt;
  Port component
&lt;/h2&gt;




&lt;p&gt;&lt;strong&gt;Required:&lt;/strong&gt; Yes&lt;br&gt;
&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;888&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The port component indicates which server we are referring to on the target host&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;:&lt;/code&gt; (colon) sign indicates port component usage. &lt;code&gt;888&lt;/code&gt; is the port number&lt;/p&gt;

&lt;p&gt;The server can accept connections on multiple ports. E.g. port numbers &lt;code&gt;80&lt;/code&gt; and &lt;code&gt;443&lt;/code&gt; can be used by a single server:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;80&lt;/code&gt;   - port number is used for basic web connection&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;443&lt;/code&gt; - port number is used for secure (TLS/SSL) web connection&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The port &lt;code&gt;:443&lt;/code&gt; or &lt;code&gt;:80&lt;/code&gt; is omitted when a web page has &lt;code&gt;https://&lt;/code&gt; or &lt;code&gt;http://&lt;/code&gt; scheme&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#path-component"&gt;
  &lt;/a&gt;
  Path component
&lt;/h2&gt;




&lt;p&gt;&lt;strong&gt;Required:&lt;/strong&gt; No&lt;br&gt;
&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;/users/index.php&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Usually the Path component indicates a path to target file on a server&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;/&lt;/code&gt;                 -  the root path/folder. Let's imagine it is called &lt;code&gt;htdocs&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;users&lt;/code&gt;              -  folder named &lt;code&gt;users&lt;/code&gt; inside of &lt;code&gt;htdocs&lt;/code&gt; folder&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;/index.php&lt;/code&gt; - file named &lt;code&gt;index.php&lt;/code&gt; inside of &lt;code&gt;users&lt;/code&gt; folder&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In some cases, the Path component can use custom mapping/scheme/rewrite rule. The path segments can be linked to a function/method in different files on a server:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;/users/list&lt;/code&gt;         - function &lt;code&gt;list&lt;/code&gt; in &lt;code&gt;users.php&lt;/code&gt; file.&lt;br&gt;
&lt;em&gt;show list of all users&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;/users/1/read&lt;/code&gt; - function &lt;code&gt;read&lt;/code&gt; with argument &lt;code&gt;ID&lt;/code&gt; in &lt;code&gt;users.php&lt;/code&gt; file. &lt;br&gt;
&lt;em&gt;show info of user with ID = 1&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;/users/images&lt;/code&gt; - function &lt;code&gt;users&lt;/code&gt; in &lt;code&gt;image-collection.php&lt;/code&gt; file. &lt;br&gt;
&lt;em&gt;show images of all users&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#query-component"&gt;
  &lt;/a&gt;
  Query component
&lt;/h2&gt;




&lt;p&gt;&lt;strong&gt;Alternative naming:&lt;/strong&gt; Query string, Search string&lt;br&gt;
&lt;strong&gt;Required:&lt;/strong&gt; No&lt;br&gt;
&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;?q=bob&amp;amp;role=2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The Query component always starts with a &lt;code&gt;?&lt;/code&gt; (question) sign. &lt;br&gt;
It consists of key-value pairs. The value is assigned to a key using the &lt;code&gt;=&lt;/code&gt; (equals) sign. &lt;br&gt;
&lt;br&gt; Key-value pairs are separated using &lt;code&gt;&amp;amp;&lt;/code&gt; (ampersand) sign.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;?&lt;/code&gt;       - starting symbol that indicates presence of Query component &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;q&lt;/code&gt;       - the first key&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;=&lt;/code&gt;       - the sign, that assigns first value to a first key&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;bob&lt;/code&gt;   -  the first value&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;&amp;amp;&lt;/code&gt;       -  the key and value pair separator&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;role&lt;/code&gt;  - the second key&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;=&lt;/code&gt;       - the sign, that assigns second value to a second key&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;2&lt;/code&gt;       - the second value&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Example of logic behind this query: &lt;em&gt;get all users named &lt;code&gt;bob&lt;/code&gt; with role ID &lt;code&gt;2&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#hash-component"&gt;
  &lt;/a&gt;
  Hash component
&lt;/h2&gt;




&lt;p&gt;&lt;strong&gt;Alternative naming:&lt;/strong&gt; Anchor&lt;br&gt;
&lt;strong&gt;Required:&lt;/strong&gt; No&lt;br&gt;
&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;#info&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Usually used by client-side scripting language named &lt;code&gt;Javascript&lt;/code&gt;&lt;br&gt;
By default - the browser will make a focus on an element with &lt;code&gt;id&lt;/code&gt; after &lt;code&gt;#&lt;/code&gt; (hash) sign. In our case, the focus will be made on an element with ID &lt;code&gt;info&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;#&lt;/code&gt;      - starting symbol that indicates the presence of Hash component&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;info&lt;/code&gt; - the value of a Hash component&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Example of logic behind this hash: &lt;em&gt;show tab with basic info for found users&lt;/em&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Thanks for reading 👍&lt;/p&gt;

&lt;p&gt;Follow me on Twitter - &lt;a href="https://twitter.com/therceman"&gt;https://twitter.com/therceman&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>webdev</category>
      <category>programming</category>
      <category>codenewbie</category>
      <category>beginners</category>
    </item>
    <item>
      <title>How to Build Java Applications Today: August 16, 2021</title>
      <author>Karsten Silz</author>
      <pubDate>Mon, 16 Aug 2021 21:21:21 +0000</pubDate>
      <link>https://dev.to/ksilz/how-to-build-java-applications-today-august-16-2021-32je</link>
      <guid>https://dev.to/ksilz/how-to-build-java-applications-today-august-16-2021-32je</guid>
      <description>&lt;h2&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TL;DR
&lt;/h2&gt;

&lt;p&gt;Will Project Loom kill reactive programming, more VS Code Java improvements, JDK Mission Control 8.1.0, Spring Data 2021.0.4 &amp;amp; 2020.0.12, Quarkus 2.1.2, Micronaut 2.5.12.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#readme"&gt;
  &lt;/a&gt;
  README
&lt;/h2&gt;

&lt;p&gt;This is &lt;strong&gt;issue #49&lt;/strong&gt; of my weekly newsletter, “How To Build Java Applications Today”. I read all the Java newsletters, so &lt;strong&gt;you&lt;/strong&gt; don’t have to! And it’s “Java news with a smile”.&lt;/p&gt;

&lt;p&gt;If you like my newsletter, then &lt;a href="https://bpfnl.substack.com"&gt;subscribe to it on Substack&lt;/a&gt;! Or read it on &lt;a href="https://dev.to/ksilz/series/11995"&gt;dev.to&lt;/a&gt;,  the &lt;a href="https://thejavacafe.com/ksilz/series/1"&gt;Java Cafe&lt;/a&gt;, or &lt;a href="https://ksilz.medium.com"&gt;Medium&lt;/a&gt;. Even better: Share it with people who may be interested.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#quote-of-the-week"&gt;
  &lt;/a&gt;
  Quote of the Week
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Venture backed companies fail when they run out of money. Bootstrappers fail when they run out of motivation.&lt;/em&gt;&lt;br&gt;
&lt;a href="https://twitter.com/robwalling/status/1397568680880443393"&gt;Rob Walling&lt;/a&gt;, a &lt;a href="https://en.wikipedia.org/wiki/Rob_Walling"&gt;serial entrepreneur&lt;/a&gt;, has a point - but bootstrappers need money, too.&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#standup"&gt;
  &lt;/a&gt;
  Stand-Up
&lt;/h2&gt;

&lt;p&gt;It’s still August, it’s still vacation time, and there’s still not much happening in Java land. So I hope my readers enjoy the sun and their vacation! And that’s almost an excuse for not reading newsletters like this, “almost” being the important word here! 😉&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#code-review"&gt;
  &lt;/a&gt;
  Code Review
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#issue-48-from-august-9-2021"&gt;
  &lt;/a&gt;
  Issue 48 from August 9, 2021
&lt;/h3&gt;

&lt;p&gt;I wrote &lt;a href="https://bpfnl.substack.com/p/how-to-build-java-applications-today-3b0"&gt;last week&lt;/a&gt; that Java climbed to #2 in the RedMonk Ranking. That is true. I also noted that Java is ahead of Python. That is false: Java and Python share the #2 spot.&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#advertisement"&gt;
  &lt;/a&gt;
  ADVERTISEMENT
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#22-years-of-fullstack-java-for-hire-next-january"&gt;
  &lt;/a&gt;
  22 YEARS OF FULL-STACK JAVA FOR HIRE NEXT JANUARY
&lt;/h3&gt;

&lt;p&gt;I’m a full-stack Java developer with 22 years of experience, looking for a project in January 2022, in Milton Keynes, London, or remote. I’ll work as a contractor or fixed-term employee but don’t take permanent positions. &lt;/p&gt;

&lt;p&gt;Interested? Then check out my resume &amp;amp; work samples!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://ksilz.com/"&gt;CHECK OUT MY RESUME &amp;amp; WORK SAMPLES &lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#bookmarks"&gt;
  &lt;/a&gt;
  Bookmarks
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#java"&gt;
  &lt;/a&gt;
  Java
&lt;/h3&gt;
&lt;h4&gt;
  &lt;a href="#will-project-loom-kill-reactive-programming"&gt;
  &lt;/a&gt;
  Will Project Loom Kill Reactive Programming?
&lt;/h4&gt;

&lt;p&gt;Oracle’s &lt;a href="https://wiki.openjdk.java.net/display/loom/Main"&gt;Project Loom&lt;/a&gt; reinvents threads in Java. That’s why it competes with reactive programming in Java. Project lead Ron Pressler claimed last year, as a fact, that “&lt;a href="https://youtu.be/EDVesJ-yJ6U?t=902"&gt;not many people like&lt;/a&gt;” reactive programming. Earlier this year, he was more mellowed, saying that Project Loom exists because debugging a reactive program is so much harder (see &lt;a href="https://bpfnl.substack.com/p/how-to-build-java-applications-today-068"&gt;issue #39&lt;/a&gt;, section “Why Do We Need Project Loom?”).&lt;/p&gt;

&lt;p&gt;Well, now we’re back to fighting words: Brian Goetz, the architect for the Java language at Oracle, says that “&lt;a href="https://youtu.be/9si7gK94gLo?t=1163"&gt;Project Loom will kill reactive programming&lt;/a&gt;”. Like Ron before, Brian argues that reactive programming scales nicely but is too difficult to program. And once Java threads and their simple usage scale nicely, too, we don’t need reactive programming anymore.&lt;/p&gt;

&lt;p&gt;Here’s the part I don’t understand: With reactive streams, a &lt;a href="https://www.baeldung.com/reactor-core"&gt;consumer receives multiple values over time from a producer&lt;/a&gt;. And the consumer can tell the producer to slow down (“backpressure”). These seem like useful abstractions. Do they disappear with Project Loom? Or will they be a library on top of Project Loom?&lt;/p&gt;

&lt;p&gt;Meanwhile, Ron Pressler gave an insight into why Project Loom &lt;a href="https://youtu.be/EO9oMiL1fFo?t=2133"&gt;“just” reimplemented Java threads&lt;/a&gt;: Java threads have the advantage over “async/await” that the runtime &lt;a href="https://youtu.be/EO9oMiL1fFo?t=921"&gt;can switch between threads everywhere in the code&lt;/a&gt; except for a critical section (“synchronized”). And Oracle can do Project Loom because they &lt;a href="https://youtu.be/EO9oMiL1fFo?t=1101"&gt;can change the internal JVM representation of a thread&lt;/a&gt;. Finally, he described “structured concurrency” as a &lt;a href="https://youtu.be/EO9oMiL1fFo?t=2651"&gt;future Loom feature&lt;/a&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;try (var execute =
  Executors.newVirtualThreadExecutor(factory)
           .withDeadline(Instant.now().plusSeconds(30))) {
    executor.submit(task1);
    executor.submit(task2);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So here we’re submitting two tasks in parallel, wait for both of them to finish, and cancel if we’re not finished within 30 seconds. Today, this requires additional libraries.&lt;/p&gt;

&lt;p&gt;So, when can we try Project Loom? “Soon” is what both said. So that means a preview in Java 18 next March at the earliest, possibly only Java 19 in September 2022. Then it will take probably at least two releases to get finalized. My guess is 2023 for Project Loom in production. Now, most organizations only use the Java LTS releases, so they’ll get their hands on Project Loom in September 2024 with Java 23.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/9si7gK94gLo"&gt;Brian Goetz interview&lt;/a&gt;, &lt;a href="https://youtu.be/EO9oMiL1fFo"&gt;Ron Pressler presentation&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#tools"&gt;
  &lt;/a&gt;
  Tools
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#more-vs-code-java-improvements"&gt;
  &lt;/a&gt;
  More VS Code Java Improvements
&lt;/h4&gt;

&lt;p&gt;Last month I wrote an &lt;a href="https://www.infoq.com/news/2021/07/visual-studio-code-java-ide"&gt;InfoQ article&lt;/a&gt; about how Microsoft’s Visual Studio Code (VS Code) boosted its Java IDE capabilities. Well, Microsoft didn’t stop there: The July release of VS Code makes it easier to run, view and search tests in Java. And from the department of “Duh!”: Microsoft “realized that Maven dependency conflict can be tricky to handle”, so they improved the display of Maven conflict resolution.&lt;/p&gt;

&lt;p&gt;But there’s more: The &lt;a href="https://devblogs.microsoft.com/java/java-on-visual-studio-code-update-june-2021/"&gt;roadmap for the rest of the year&lt;/a&gt; includes a better edit/compile/debug cycle, support for Gradle, more Java versions and Spring for Remote Development(using a container or remote machine &lt;a href="https://code.visualstudio.com/docs/remote/remote-overview"&gt;as a development environment&lt;/a&gt;), and support for Project Loom (see above).&lt;/p&gt;

&lt;p&gt;So it seems VS Code could be a serious competitor for Eclipse and Netbeans early next year. I recently switched from JetBrains WebStorm to VS Code for website development and like VS Code. It certainly feels snappier than WebStorm to me. And unlike JetBrains IDEs, it can update most plugins without a complete restart - yay!&lt;/p&gt;

&lt;p&gt;Another benefit of VS Code for us Java developers could be convenient support for other languages: Python, Rust, Go, … - all in one IDE. It’s probably more robust than what Eclipse currently offers. And with JetBrains, we’d have to run &lt;a href="https://www.jetbrains.com/products/#type=ide"&gt;multiple  IDEs&lt;/a&gt; that - I think - don’t share plugins, configuration settings, or keyboard shortcuts by default.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://foojay.io/today/vs-code-java-july-2021-update-new-testing-experience-maven-improvements-and-product-roadmap-progress-update/"&gt;July update&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#releases"&gt;
  &lt;/a&gt;
  Releases
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#jdk-mission-control-810"&gt;
  &lt;/a&gt;
  JDK Mission Control 8.1.0
&lt;/h4&gt;

&lt;p&gt;This tool visualizes Java Flight Recorder (JFR) data and therefore helps to profile Java in production (see &lt;a href="https://bpfnl.substack.com/p/how-to-build-java-applications-today-b5c"&gt;issue #43&lt;/a&gt;, section “Free Java Production Profiling To Whither Away?”). It now needs Java 11+ and Eclipse 2021-03 to run and reads in JFR data about 25% faster. It also recognizes the memory allocation JFR event from Java 16 (see &lt;a href="https://bpfnl.substack.com/p/how-to-build-java-applications-today-b38"&gt;issue #25&lt;/a&gt;, section “Profiling in Production?”) and has a new view for constant values in the JFR recording.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://foojay.io/today/jdk-mission-control-8-1-0-released/"&gt;Announcement&lt;/a&gt;&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#spring-data-202104-amp-2020012"&gt;
  &lt;/a&gt;
  Spring Data 2021.0.4 &amp;amp; 2020.0.12
&lt;/h4&gt;

&lt;p&gt;Both these libraries require (?) the upcoming Spring Boot 2.4.10 and 2.5.4 releases. It’s business as usual: Bug fixes and dependency upgrades for the 15 (version 2021.0.4) / 16 (2020.0.12) sub-projects, all listed on the announcement page.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://spring.io/blog/2021/08/12/spring-data-2021-0-4-and-2020-0-12-released"&gt;Announcement&lt;/a&gt;&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#quarkus-212"&gt;
  &lt;/a&gt;
  Quarkus 2.1.2
&lt;/h4&gt;

&lt;p&gt;Quarkus marches on with another bugfix release. The changelog has &lt;a href="https://github.com/quarkusio/quarkus/releases/tag/2.1.2.Final"&gt;35 entries&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://quarkus.io/blog/quarkus-2-1-2-final-released/"&gt;Announcement&lt;/a&gt;&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#micronaut-2512"&gt;
  &lt;/a&gt;
  Micronaut 2.5.12
&lt;/h4&gt;

&lt;p&gt;Quarkus isn’t the only Spring Boot challenger in town, though it probably is the fastest-releasing one: This minor release from &lt;a href="https://micronaut.io"&gt;Micronaut&lt;/a&gt; has seven changes, mostly documentation updates.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/micronaut-projects/micronaut-core/releases/tag/v2.5.12"&gt;Changelog&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#about"&gt;
  &lt;/a&gt;
  About
&lt;/h2&gt;

&lt;p&gt;Karsten Silz is the author of this newsletter. He is a full-stack web &amp;amp; mobile developer with 22 years of Java experience, author, speaker, and marathon runner. Karsten got a Master's degree in Computer Science at the Dresden University of Technology (Germany) in 1996.&lt;/p&gt;

&lt;p&gt;Karsten has worked in Europe and the US. He co-founded a software start-up in the US in 2004. Karsten led product development for 13 years and left after the company was sold successfully. He co-founded the UK SaaS start-up "&lt;a href="https://yourhomeingoodhands.co.uk/"&gt;Your Home in Good Hands&lt;/a&gt;" as CTO in 2020. Since 2019, Karsten also works as a contractor in the UK.&lt;/p&gt;

&lt;p&gt;Karsten has &lt;a href="https://bpfnl.substack.com/"&gt;this newsletter&lt;/a&gt;, a &lt;a href="https://betterprojectsfaster.com/"&gt;developer website&lt;/a&gt;, and a &lt;a href="https://ksilz.com/"&gt;contractor site&lt;/a&gt;. He's on &lt;a href="https://www.linkedin.com/in/ksilz/"&gt;LinkedIn&lt;/a&gt;, &lt;a href="https://twitter.com/karsilz"&gt;Twitter&lt;/a&gt;, and &lt;a href="https://github.com/ksilz"&gt;GitHub&lt;/a&gt;. Karsten is also an &lt;a href="https://www.infoq.com/profile/Karsten-Silz"&gt;author at InfoQ&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>java</category>
      <category>bpf</category>
    </item>
    <item>
      <title>Team Topologies: Organizing Business and Technology Teams </title>
      <author>Conor Bronsdon</author>
      <pubDate>Mon, 16 Aug 2021 21:14:06 +0000</pubDate>
      <link>https://dev.to/linearb/team-topologies-organizing-business-and-technology-teams-kb7</link>
      <guid>https://dev.to/linearb/team-topologies-organizing-business-and-technology-teams-kb7</guid>
      <description>&lt;p&gt;Effective software teams are essential for any organization to deliver value continuously and sustainably. But how do you build the best team organization for your specific goals, culture, and needs?&lt;/p&gt;

&lt;p&gt;In the first episode of a two-part series, Matthew Skelton and Manuel Pais, authors of the new book &lt;a href="https://teamtopologies.com/book"&gt;Team Topologies: Organizing Business and Technology Teams for Fast Flow&lt;/a&gt;, join Dev Interrupted to share their secrets to successful team patterns and organization design. They also discuss how to build adaptive team models capable of evolving with technological change and organizational maturity.&lt;/p&gt;

&lt;p&gt;Both guests are DevOps leaders: Matthew coined the term “Team Topologies” and carries a Master’s Degree in Neuroscience from Oxford University while Manuel is a DevOps thought leader and co-founder of DevOps Lisbon.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#listen-to-the-full-episode"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Listen to the full episode&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/3YIQL38DKwllRP5ZRgl7BP"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#episode-highlights-include"&gt;
  &lt;/a&gt;
  Episode Highlights Include:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The four fundamental types of teams&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Why a fast flow of change should be the goal&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;How to achieve faster flow and more effective feedback loops&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Why handoffs between teams are a bad idea&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What are “stream-aligned” teams?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;How to think about trust boundaries between remote teams&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9tnnePBE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q3w8a1hz1i2wtcigszwu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9tnnePBE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q3w8a1hz1i2wtcigszwu.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If you haven't already heard&lt;/strong&gt;, Dev Interrupted is partnering with Dzone to host &lt;strong&gt;INTERACT:&lt;/strong&gt; An interactive, community-driven, digital conference on September 30th - by engineering leaders, for engineering leaders. 1 day, 10 speakers, 100s of engineers and engineering leaders, all free.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#register-now"&gt;
  &lt;/a&gt;
  &lt;a href="https://devinterrupted.com/event/interact/"&gt;Register Now&lt;/a&gt;
&lt;/h2&gt;




&lt;h2&gt;
  &lt;a href="#join-the-dev-interrupted-server"&gt;
  &lt;/a&gt;
  Join the Dev Interrupted Server
&lt;/h2&gt;

&lt;p&gt;With over 1500 members, the Dev Interrupted Discord Community is the best place for Engineering Leaders to engage in daily conversation. No sales people allowed. &lt;a href="https://discord.com/invite/devinterrupted"&gt;Join the community &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--q0DNmje9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2878/0%2Awut45_ZDwqsc279f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q0DNmje9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2878/0%2Awut45_ZDwqsc279f.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Originally published at &lt;a href="https://devinterrupted.com/podcast/team-topologies-1-organizing-business-and-technology-teams/"&gt;https://devinterrupted.com&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>devops</category>
      <category>techtalks</category>
      <category>culture</category>
      <category>management</category>
    </item>
    <item>
      <title>Creating Duplex streams in Node.js</title>
      <author>Matt Angelosanto</author>
      <pubDate>Mon, 16 Aug 2021 20:45:47 +0000</pubDate>
      <link>https://dev.to/logrocket/creating-duplex-streams-in-node-js-4nmb</link>
      <guid>https://dev.to/logrocket/creating-duplex-streams-in-node-js-4nmb</guid>
      <description>&lt;p&gt;&lt;strong&gt;Written by &lt;a href="https://blog.logrocket.com/author/victorjonah/"&gt;Victor Jonah&lt;/a&gt;&lt;/strong&gt; ✏️&lt;/p&gt;

&lt;p&gt;Duplex streams are a fundamental category of streams in Node.js. However, they’re often misunderstood, including the Duplex stream.&lt;/p&gt;

&lt;p&gt;This type of stream is hybrid, meaning it expects a &lt;code&gt;read&lt;/code&gt; and &lt;code&gt;write&lt;/code&gt; method while it’s implemented.&lt;/p&gt;

&lt;p&gt;In this article, we’ll review Duplex streams and how to create one. But before that, let's refresh ourselves on what streams are.&lt;/p&gt;

&lt;p&gt;For this post, knowledge of JavaScript and Node.js can help but it is not necessary.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-a-stream"&gt;
  &lt;/a&gt;
  What is a stream?
&lt;/h2&gt;

&lt;p&gt;Streams are data collected from a source and brought to another location in a sequence. Streaming a video online is an example: while the video content is passed to you in a sequence, the full content is not available yet.&lt;/p&gt;

&lt;p&gt;Streams are divided into four categories: Writable, Readable, Duplex, and Transform.&lt;/p&gt;

&lt;p&gt;Readable streams read data from a file or source and pass it to the main application. &lt;a href="https://blog.logrocket.com/node-js-buffer-a-complete-guide/"&gt;A buffer then stores the data&lt;/a&gt; in case there is a delay passing the data to the application.&lt;/p&gt;

&lt;p&gt;When Writable streams, the functionality is opposite. The data is read from the application to the file. There is also a buffer if the data transfer slows, and it then stores it there.&lt;/p&gt;

&lt;p&gt;Duplex streams, on the other hand, are a mixture of both the readable and writable streams where both streams are independent of each other.&lt;/p&gt;

&lt;p&gt;Transform streams are also like Duplex, but both the readable and writable streams are connected.&lt;/p&gt;

&lt;p&gt;The connection enables the application to write data to the application, but there the data must be manipulated before passing to the readable stream.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#duplex-stream-examples"&gt;
  &lt;/a&gt;
  Duplex stream examples
&lt;/h2&gt;

&lt;p&gt;Just as we explained earlier, the Duplex stream is basically a mixture of the Readable and Writable streams.&lt;/p&gt;

&lt;p&gt;An example of a Duplex stream is a &lt;a href="http://nodejs.org/api/net.html#net_class_net_socket"&gt;Socket&lt;/a&gt;, which provides two channels to send and receive data.&lt;/p&gt;

&lt;p&gt;Other examples of the Duplex streams are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://blog.logrocket.com/websockets-tutorial-how-to-go-real-time-with-node-and-react-8e4693fbf843/"&gt;TCP sockets&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://nodejs.org/api/zlib.html"&gt;zlib streams&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://nodejs.org/api/crypto.html"&gt;crypto streams&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#creating-a-custom-duplex-stream-to-delay-chunk-data"&gt;
  &lt;/a&gt;
  Creating a custom duplex stream to delay chunk data
&lt;/h2&gt;

&lt;p&gt;To create a Duplex stream in Node.js, begin importing the required methods from the stream module:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;PassThrough&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;stream&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;tunnel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;PassThrough&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;PassThrough&lt;/code&gt; stream is a basic type of Duplex stream that acts as a tunnel to pipe our Readable stream to the Writable stream.&lt;/p&gt;

&lt;p&gt;So, with this tunnel, we can check the data processing to the Writable stream.&lt;/p&gt;

&lt;p&gt;Next, let’s read a file using the Readable stream and write it into a Writable stream using &lt;code&gt;writeStream&lt;/code&gt; now:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;PassThrough&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;stream&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createReadStream&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;createWriteStream&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;fs&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;readStream&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createReadStream&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./README.md&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// read data from this file&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;writeStream&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createWriteStream&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./copy.txt&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// write data to this file&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, we can check what is in the buffer to see if the data is passing in the tunnel:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;PassThrough&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;stream&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createReadStream&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;createWriteStream&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;fs&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;readStream&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createReadStream&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./README.md&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;writeStream&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createWriteStream&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./copy.txt&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;tunnel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;PassThrough&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nx"&gt;tunnel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;data&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;chunk&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;bytes:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;chunk&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// bytes: &amp;lt;Buffer 23 20 4a 61 76 61 53 63 72 69 70 74 20 41 6c 67 6f 72 69 74 68 6d 73 20 61 6e 64 20 44 61 74 61 20 53 74 72 75 63 74 75 72 65 73 0a 0a 54 68 69 73 20 ... 1767 more bytes&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;readStream&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pipe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;tunnel&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;pipe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;writeStream&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Besides &lt;code&gt;PassThrough&lt;/code&gt;, we have &lt;code&gt;Throttle&lt;/code&gt; to delay how long data passes from one source to another in the pipeline. We can use Duplex streams to set a delay of when the data is brought into our application:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;PassThrough&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Duplex&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;stream&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createReadStream&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;createWriteStream&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;fs&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;readStream&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createReadStream&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./movie.mp4&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;writeStream&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createWriteStream&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./copy.mp4&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Throttle&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Duplex&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="cm"&gt;/*
   * Class constructor will receive the injections as parameters.
   */&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;delay&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;_read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;

  &lt;span class="c1"&gt;// Writes the data, push and set the delay/timeout&lt;/span&gt;
  &lt;span class="nx"&gt;_write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;chunk&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;encoding&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;chunk&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="c1"&gt;// When all the data is done passing, it stops.&lt;/span&gt;
  &lt;span class="nx"&gt;_final&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;tunnel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;PassThrough&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;throttle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Throttle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;amount&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;tunnel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;data&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;chunk&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;amount&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;chunk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;bytes:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;amount&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;readStream&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pipe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;throttle&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;pipe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;tunnel&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;pipe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;writeStream&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With this code above, we created a Duplex stream that creates &lt;code&gt;throttle(delay)&lt;/code&gt; for our piped data. This sets a delay of 500 milliseconds, and the method within the &lt;code&gt;Throttle&lt;/code&gt; class pushes the chunk.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;_final()&lt;/code&gt; method only pushes null when the data transfer completes.&lt;/p&gt;

&lt;p&gt;We also modified our &lt;code&gt;PassThrough&lt;/code&gt; stream to add up the length of every chunk it reads.&lt;/p&gt;

&lt;p&gt;This is how the response renders in the terminal in increments of 500 milliseconds:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a5J0VTJA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/08/Response-renders-terminal.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a5J0VTJA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/08/Response-renders-terminal.png" alt="Response Renders In Terminal At 500 Millisecond Increments"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;By working with Duplex streams in Node.js, we saw how we can delay passing data from one stream to another.&lt;/p&gt;

&lt;p&gt;Duplex streams are quite important in our digital world and are used most of the time without us knowing, especially in Socket. These are powerful features because of how they implement both the Readable and Writable streams together.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#200s-only-monitor-failed-and-slow-network-requests-in-production"&gt;
  &lt;/a&gt;
  200’s only ✔️ Monitor failed and slow network requests in production
&lt;/h2&gt;

&lt;p&gt;Deploying a Node-based web app or website is the easy part. Making sure your Node instance continues to serve resources to your app is where things get tougher. If you’re interested in ensuring requests to the backend or third party services are successful, &lt;a href="https://logrocket.com/signup/"&gt;try LogRocket&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://logrocket.com/signup/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1zhbpx-x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2019/12/network-request-filter-2-1.png" alt="LogRocket Network Request Monitoring"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://logrocket.com/signup/"&gt;LogRocket&lt;/a&gt; is like a DVR for web apps, recording literally everything that happens on your site. Instead of guessing why problems happen, you can aggregate and report on problematic network requests to quickly understand the root cause.&lt;/p&gt;

&lt;p&gt;LogRocket instruments your app to record baseline performance timings such as page load time, time to first byte, slow network requests, and also logs Redux, NgRx, and Vuex actions/state. &lt;a href="https://logrocket.com/signup/"&gt;Start monitoring for free&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>node</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Bitdefender: My Honest Review</title>
      <author>Maxim King</author>
      <pubDate>Mon, 16 Aug 2021 20:30:02 +0000</pubDate>
      <link>https://dev.to/maximking1/bitdefender-my-honest-review-2haj</link>
      <guid>https://dev.to/maximking1/bitdefender-my-honest-review-2haj</guid>
      <description>&lt;p&gt;Bitdefender is a exceptional AntiVirus for Windows, it starts around $29.99 (This is the on sale price) and the Total Security Home Plan starts at $44.99 on sale. In this review I will be testing using the Total Security Home Plan.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features
&lt;/h2&gt;

&lt;p&gt;Bitdefender offers some great Protection Features for securing your devices, all plans include there Real Time Protection, Network Threats Prevention, Threat Defender, Multi-Layer Ransomware Protection and there VPN (200MB Of Daily Traffic). The Total Security Plan I’m using has a few each features such as the AntiSpam and the Anti-Theft.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#free-plan"&gt;
  &lt;/a&gt;
  Free Plan
&lt;/h2&gt;

&lt;p&gt;You can download there Free Plan from &lt;a href="https://www.bitdefender.com/toolbox/"&gt;https://www.bitdefender.com/toolbox/&lt;/a&gt; it includes all the features above expect the Network Protection, Ransomewere Protection, Rescue Environment, AutoPoilt (Auto Recommendations) and VPN all the details can be found here: &lt;a href="https://www.bitdefender.com/solutions/free.html"&gt;https://www.bitdefender.com/solutions/free.html&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#detection-tests"&gt;
  &lt;/a&gt;
  Detection Tests
&lt;/h2&gt;

&lt;p&gt;When testing out Bitdefender on my Windows 10 Virtual Machine with 10GB RAM, 4 Virtual Cores and VMWare Workstaion Pro. I got a 10 Websites which had malware on, 9 out of the 10 websites were detcted and blocked. When downloading a coulple Malware Samples i got the same results as expetected it blocked all samples i tested on the machine which were live. For anybody looking for a reasonably priced windows AntiVirus i would suggest getting it while on sale.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bitdefender-vpn"&gt;
  &lt;/a&gt;
  Bitdefender VPN
&lt;/h2&gt;

&lt;p&gt;The Bitdefender VPN is a good addon for the Bitdefender Package, it offers the use off over 48 Locations, i used the United Kingdom servers and had great preformane but the speeds were affected a bit. Still not a massive issue but does knock a couple of MBPS of your Internet.. &lt;/p&gt;

</description>
      <category>bitdefender</category>
      <category>antivirus</category>
      <category>security</category>
      <category>cybersecurity</category>
    </item>
    <item>
      <title>From zero to AWS Community Builder in 2 years</title>
      <author>Tom Milner</author>
      <pubDate>Mon, 16 Aug 2021 20:27:07 +0000</pubDate>
      <link>https://dev.to/aws-builders/from-zero-to-aws-community-builder-in-2-years-4g8c</link>
      <guid>https://dev.to/aws-builders/from-zero-to-aws-community-builder-in-2-years-4g8c</guid>
      <description>&lt;h2&gt;
  &lt;a href="#how-i-learned-to-stop-worrying-and-love-the-cloud"&gt;
  &lt;/a&gt;
  How I Learned to Stop Worrying and Love the Cloud!
&lt;/h2&gt;

&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;In April of 2021, I was accepted into the AWS Community Builders program. This was the latest milestone in a 2 year journey (so far) to upskill myself on cloud technologies. I think now is a good time to pause and share how I was able to achieve this.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#aws-community-builders"&gt;
  &lt;/a&gt;
  AWS Community Builders
&lt;/h1&gt;

&lt;p&gt;AWS Community Builders is a program designed to encourage individuals to share their own learnings and experience with others within their network. This can be done via social network platforms, blogging, presenting at meetups or any other method of putting yourself out to the world. If you are doing any of these, I would encourage you to apply via the link below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws.amazon.com/developer/community/community-builders/"&gt;https://aws.amazon.com/developer/community/community-builders/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You get a lot of benefits if you get accepted into the program:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Access to AWS product teams and information about new services and features&lt;/li&gt;
&lt;li&gt;Cool swag kit (pictured above)&lt;/li&gt;
&lt;li&gt;Promotional credits to be used for AWS development&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These are all great but after being a member for 3 months now, I can say the single biggest benefit to me has been access to the AWS Community Builders Slack channel. There you will find a great group of individuals who can really help you up your AWS game. And who you can help too. It is a community and you get back as much as you put in.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#who"&gt;
  &lt;/a&gt;
  Who
&lt;/h1&gt;

&lt;p&gt;A bit of background on myself. I am a 41 year old data engineering manager with 23 years experience in IT. I spent most of the last decade managing data warehousing teams, focused on trying to climb the career ladder and not prioritizing my technical skills. I was always considered technical by my peers and team members and was often been told by developers that they appreciate being managed by someone technical. To be honest, this made me a little lazy. I thought I had the technical side covered and therefore I could focus on being a manager and advancing my career. My strengths lay in organizing the flow of work into the team and protecting them from too many distractions. And that is where I felt I could add most value in a team.&lt;/p&gt;

&lt;p&gt;In the first half of 2019, three things happened that forced me to assess the best way to move forward in IT.&lt;/p&gt;

&lt;p&gt;1) Restructuring within my employer's organization meant I lost half my team. This made me realize that I had to rethink how I wanted to fulfill my career ambitions as a manager.&lt;br&gt;
2) I attended a course on strengths-based goal setting. The basic premise is to focus on your strengths and that will lift your weaknesses. Rather than trying to improve my presentation and networking skills head on, what if I focused on learning the material and message I had to present and socialize. The better you know your material, the better you would be at presenting about it. In turn, this would make you a better presenter.&lt;br&gt;
3) I became a mentor with the Coderdojo association. Initially, this was to help my son learn how to code. I partnered with another parent to set up a dojo in our local town to help teach kids Scratch. Seeing how kids learn really ignited a fire in me to restart my own technical training.&lt;/p&gt;

&lt;p&gt;Around the same time that this was happening, it was starting to become obvious that my employer's existing on-premise data platforms needed to be replaced. I felt that now was a good time to start advocating for a project to upgrade our platform. We wanted to go cloud and this eventually lead me onto AWS.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#how"&gt;
  &lt;/a&gt;
  How
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#certification"&gt;
  &lt;/a&gt;
  Certification
&lt;/h2&gt;

&lt;p&gt;I understand that some people are skeptical of certifications but for me, I wouldn't be where I am without them. My first cert was the AWS Cloud Practitioner. It is the entry level cert and perfect for anyone starting off. It's the easiest AWS certification exam you will sit and gets you familiar with the whole process of studying, scheduling and sitting exams. I had not sat an exam in over 10 years so I felt this was a big step for me. Also, when I say easiest, I don't mean it is easy, just not as hard as the other exams.&lt;br&gt;
From passing the Cloud Practitioner exam, I have passed four more and will hopefully continue with others. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS Certified Cloud Practitioner&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://www.credly.com/badges/8fc559e6-b8c3-42f3-b78e-7daa81ba6b86/public_url"&gt;https://www.credly.com/badges/8fc559e6-b8c3-42f3-b78e-7daa81ba6b86/public_url&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS Certified Solutions Architect – Associate&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://www.credly.com/badges/80e7e22d-af7c-4b73-b3f1-1e95136e42b8/public_url"&gt;https://www.credly.com/badges/80e7e22d-af7c-4b73-b3f1-1e95136e42b8/public_url&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS Certified Big Data – Specialty&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://www.credly.com/badges/f208e2bb-a63b-41d0-addd-555db292c637/public_url"&gt;https://www.credly.com/badges/f208e2bb-a63b-41d0-addd-555db292c637/public_url&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS Certified Data Analytics – Specialty&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://www.credly.com/badges/429e9873-1fd4-43df-b3c1-6b2205e01442/public_url"&gt;https://www.credly.com/badges/429e9873-1fd4-43df-b3c1-6b2205e01442/public_url&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS Certified Developer – Associate&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://www.credly.com/badges/a0c991e4-b007-421b-a00b-403aa2c85903/public_url"&gt;https://www.credly.com/badges/a0c991e4-b007-421b-a00b-403aa2c85903/public_url&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I am spending more time this year getting hands on experience and blogging than working on certifications. However, I wouldn't be at this point without starting with certifications. They provided a structure and a target for me for getting trained up on AWS and I will continue to study for more certifications.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#blogging"&gt;
  &lt;/a&gt;
  Blogging
&lt;/h2&gt;

&lt;p&gt;Publishing my first blog was an even more nerve-wracking experience than sitting my first certification exam. Putting myself out there to the general public was pushing myself far out of my comfort zone. My article did several thousand views and didn't bring the world down crashing on me so that was a good start. Since then, I have published 7 other articles. I set a target at the start of 2021 to publish an article every month. So far, I have published 6 in 8 months. When you apply for the AWS Community Program, you don't get a breakdown of why you were accepted but I believe that blogging is what made my application stand out.&lt;br&gt;
I use &lt;a class="mentioned-user" href="https://dev.to/practicaldev"&gt;@practicaldev&lt;/a&gt;
 to publish my blogs as there is no paywall for the readers. I don't do it for money, I do it to share what I've learned and to help others. Check out my blogs here:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/tom_millner"&gt;https://dev.to/tom_millner&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#social-media"&gt;
  &lt;/a&gt;
  Social Media
&lt;/h2&gt;

&lt;p&gt;Being active on Twitter and/or LinkedIn has been a game-changer for me. Similar to my experience with the AWS Builders Slack channel, being on Twitter exposes you to a community of like minded individuals. I have learned so much from following experts like Jeremy Daly, Sheen Brisals, Yan Cui, Zack Kanter, Chris Munns, James Beswick, etc. The list goes on. Check out who I follow for inspiration.&lt;/p&gt;

&lt;p&gt;Check out &lt;a href="https://twitter.com/tom_millner/following"&gt;https://twitter.com/tom_millner/following&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Even if you don't tweet, being on Twitter is one of the best way of keeping up to date with the latest technical news and releases.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h1&gt;

&lt;p&gt;If you serious about joining the AWS Community Builders program, there is no secret to how you will be accepted. You need to put the time in and learn as much as you can about AWS Cloud. There are different tracks so you can specialize in one or two different areas. Some of those tracks are Data, Development Tools, Game Tech, Frontend Web and Mobile, Machine Learning and Serverless. These allow you the scope to focus on your chosen track. After that, it's down to hard work and spreading the knowledge of what you have learned.&lt;br&gt;
I would have to say it's definitely been worth it for me both professionally and personally. I am enjoying my industry now more than ever and the key to it has been learning and focusing on your strengths. By going all in on cloud and AWS specifically, I am learning so much everyday and I continue to see great scope to grow my technical skills and career.&lt;/p&gt;

</description>
      <category>aws</category>
    </item>
  </channel>
</rss>
