<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Hello World</title>
      <author>Mert Kadir</author>
      <pubDate>Wed, 29 Dec 2021 17:58:37 +0000</pubDate>
      <link>https://dev.to/9mertkadirr/hello-world-3dai</link>
      <guid>https://dev.to/9mertkadirr/hello-world-3dai</guid>
      <description>&lt;p&gt;Hello my name is Mert, I'm Mobil Application Developer&lt;/p&gt;

</description>
    </item>
    <item>
      <title>What is DNS TTL (Time To Live)?</title>
      <author>Vijay Patel</author>
      <pubDate>Wed, 29 Dec 2021 17:41:55 +0000</pubDate>
      <link>https://dev.to/easyawslearn/what-is-dns-ttl-time-to-live-g87</link>
      <guid>https://dev.to/easyawslearn/what-is-dns-ttl-time-to-live-g87</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-timetolive-ttl"&gt;
  &lt;/a&gt;
  What is time-to-live (TTL)?
&lt;/h2&gt;

&lt;p&gt;Time-to-live (TTL) is a value for the period of time that a packet, or data, should exist on a computer or network before being discarded.&lt;/p&gt;

&lt;p&gt;The meaning of TTL, or packet lifetime, depends on the context. For example, TTL is a value in an Internet Protocol (IP) packet that tells a network router when the packet has been in the network too long and should be discarded.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Here's the full video along with a hands-on demo that's based on TTL (time-to-live)üëáüëá&lt;/code&gt;&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=QEmjX9OaGyU"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hSXnhbQk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xbnyuc6qtztnpqrisd56.png" alt="Image description" width="600" height="320"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-does-ttl-work"&gt;
  &lt;/a&gt;
  How Does TTL Work?
&lt;/h2&gt;

&lt;p&gt;TTL's basic function revolves around managing information packets in relation to DNS requests. When one of these packets is created and transmitted through the internet, there is a chance that it will pass, continuously, from router to router forever. To prevent this from happening, each packet has a specific TTL or hop limit. It is also possible to examine the TTL log of a data packet to obtain information on how it has moved through the internet over the course of its travels.&lt;/p&gt;

&lt;p&gt;Within each packet, there is a specified place where the TTL value is stored. This is a numerical value, and it indicates how much longer the packet should move around the internet. When a router receives a data packet, it takes away one unit from the TTL count before sending it on to the next destination within the network. This continues to happen until the TTL count within the packet drops all the way down to zero.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-timetolive-in-http"&gt;
  &lt;/a&gt;
  What is time-to-live in HTTP?
&lt;/h2&gt;

&lt;p&gt;In Hypertext Transfer Protocol (HTTP), time-to-live describes the number of seconds it takes for cached web content to return before the webserver has to check again to ensure that the content is "fresh."&lt;/p&gt;

&lt;p&gt;Settings on the webserver define a default value. Still, cache-control tags, which define the kinds of servers, if any, can cache the data, or expired tags, which represent a date and time when the content is stale, can override it in the HyperText Markup Language page headers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-ttl-values"&gt;
  &lt;/a&gt;
  What Are TTL Values?
&lt;/h2&gt;

&lt;p&gt;When you set TTL values for your website, you choose a value in seconds. For example, a TTL value of 600 is the equivalent of 600 seconds or ten minutes.&lt;/p&gt;

&lt;p&gt;The minimum available TTL is usually 30, equivalent to 30 seconds. You could theoretically set a TTL as low as one second. However, most sites use a default TTL of 3600 (one hour). The maximum TTL that you can apply is 86,400 (24 hours).&lt;/p&gt;

&lt;p&gt;Technically, you can set any TTL value between the minimum and maximum parameters. Later in this article, we‚Äôll discuss how you can choose the best time to live value for your site.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-should-you-choose-a-ttl"&gt;
  &lt;/a&gt;
  How Should You Choose a TTL?
&lt;/h2&gt;

&lt;p&gt;Deciding on a suitable TTL for your needs can be challenging. Fortunately, there are some general guidelines that you can follow to see what fits your site best.&lt;br&gt;
We recommend a TTL of 1-24 hours for most sites. Remember that TTL values are measured in seconds, so this is the equivalent of 3,600 to 86,400 seconds.&lt;/p&gt;

&lt;p&gt;This TTL value can reduce loading time, which improves the user experience for your visitors and can decrease your bounce rate. The longer the better is a general rule, but remember to schedule any website maintenance accordingly.&lt;/p&gt;




&lt;p&gt;‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨ WANT TO LEARN MORE? ‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨&lt;br&gt;
Full Terraform tutorial ‚ñ∫ &lt;a href="https://bit.ly/2GwK8V2"&gt;https://bit.ly/2GwK8V2&lt;/a&gt;&lt;br&gt;
DevOps Tools, like Ansible ‚ñ∫ &lt;a href="https://bit.ly/3iASHuP"&gt;https://bit.ly/3iASHuP&lt;/a&gt;&lt;br&gt;
Docker Tutorial ‚ñ∫ &lt;a href="https://bit.ly/3iAT9Jx"&gt;https://bit.ly/3iAT9Jx&lt;/a&gt;&lt;/p&gt;

</description>
      <category>dns</category>
      <category>ttl</category>
      <category>route53</category>
      <category>aws</category>
    </item>
    <item>
      <title>Detectando Root e Jail Broken no seu aplicativo React Native</title>
      <author>Emerson Stark</author>
      <pubDate>Wed, 29 Dec 2021 17:36:28 +0000</pubDate>
      <link>https://dev.to/starkdev/detectando-root-e-jail-broken-no-seu-aplicativo-react-native-4ang</link>
      <guid>https://dev.to/starkdev/detectando-root-e-jail-broken-no-seu-aplicativo-react-native-4ang</guid>
      <description>&lt;h1&gt;
  &lt;a href="#o-que-%C3%A9-root-e-jailbroken"&gt;
  &lt;/a&gt;
  O que √© root e jail-broken?
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#root"&gt;
  &lt;/a&gt;
  root
&lt;/h2&gt;

&lt;p&gt;Fazer o root no seu aparelho significa se tornar um superusu√°rio, ou administrador do sistema. Isso implica ter acesso a partes do Android que antes ficavam inacess√≠veis para um usu√°rio comum. Sim, a grande vantagem √© ganhar controle total do seu celular e do seu sistema operacional&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#jailbroken"&gt;
  &lt;/a&gt;
  jail-broken
&lt;/h2&gt;

&lt;p&gt;O jailbreak √© uma altera√ß√£o, um hack, no sistema que permite ao usu√°rio adentrar a raiz do equipamento, tendo acesso a todos os arquivos do iOS. Em termos pr√°ticos, isso significa poder personalizar e instalar apps livremente, sem depender da loja oficial da Apple.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#porque-devo-me-preocupar-com-isso"&gt;
  &lt;/a&gt;
  Porque devo me preocupar com isso?
&lt;/h1&gt;

&lt;p&gt;Uma aplica√ß√£o sendo executada em um dispositivo com os privil√©gios do usu√°rio root ou jail broken acess√≠veis pode ter seu fluxo de execu√ß√£o modificado por outro processo sendo executado no mesmo dispositivo.&lt;/p&gt;

&lt;p&gt;Um usu√°rio malicioso pode monitorar as suas requisi√ß√µes, extrair dados salvos no storage do dispositivo, entre outras a√ß√µes.&lt;/p&gt;

&lt;p&gt;Mas bora resolver isso!&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YrHI-yCr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fd3sc4gutyz8u2xjyt5x.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YrHI-yCr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fd3sc4gutyz8u2xjyt5x.jpeg" alt="Image description" width="880" height="528"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#o-que-faz-o-jailmonkey"&gt;
  &lt;/a&gt;
  O que faz o &lt;a href="https://github.com/GantMan/jail-monkey/"&gt;jail-monkey&lt;/a&gt;?
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Identifica se o telefone tem acesso a root ou jail-broken.&lt;/li&gt;
&lt;li&gt;Detecta se o dispositivo possui localiza√ß√£o mockada ( Eu sei que voc√™ usou isso no jogo Pokemon GO üòè).&lt;/li&gt;
&lt;li&gt;Detecta se o aplicativo est√° rodando em um SD Card.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Chega de bl√° bl√° bl√° e bora colocar a m√£o no c√≥digo.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jEzzNFAx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p4opmon5o8mq4qomyca3.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jEzzNFAx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p4opmon5o8mq4qomyca3.jpeg" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Vamos iniciar um projeto utilizando o React Native CLI.&lt;/strong&gt;&lt;/p&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt; react-native init myApp
 ou
 npx react-native init myApp
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Vamos rodar nossa aplica√ß√£o em um emulador&lt;/strong&gt;&lt;/p&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;// para executar em um dispositivo android
yarn android

// para ios
yarn ios
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Se deu tudo certo no processo de build, voc√™ ver√° algo como:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_IWWNY-g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sqpgr6gd1pxghzuuap0g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_IWWNY-g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sqpgr6gd1pxghzuuap0g.png" alt="Image description" width="600" height="780"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;At√© agora, n√≥s criamos nosso app e conseguimos rodar ele no nosso dispositivo/ emulador.&lt;/p&gt;

&lt;p&gt;Se voc√™ fechar o aplicativo e clicar no √≠cone na tela inicial do dispositivo, voc√™ ver√° que o projeto vai startar normalmente.&lt;/p&gt;

&lt;p&gt;Agora vamos adicionar a biblioteca do Jail-monkey no projeto.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;// para instalar usando npm
npm i jail-monkey &lt;span class="nt"&gt;--save&lt;/span&gt;

// usando yarn
yarn add jail-monkey
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Feito isso, vamos linkar a biblioteca no nosso projeto.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;OBS: Voc√™ s√≥ precisa rodar este comando caso esteja utilizando uma vers√£o do react native &amp;lt; 0.60.0&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;react-native &lt;span class="nb"&gt;link&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Em seguida, fa√ßa um novo build do seu projeto.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;yarn android
ou
yarn ios 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Beleza, agora n√≥s temos tudo instalado no projeto.&lt;/p&gt;

&lt;p&gt;Vamos configurar a biblioteca agora no nosso aplicativo, para isso, v√° at√© o seu arquivo principal do seu projeto ( no nosso caso √© o App.js da raiz do projeto ) e adicione o seguinte c√≥digo.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nV3aDyWK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kn0scmg2m3hi66okww63.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nV3aDyWK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kn0scmg2m3hi66okww63.png" alt="Image description" width="880" height="416"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Vamos ver o que fizermos:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;importamos o BackHandler do pr√≥prio React Native para usarmos a fun√ß√£o ExitApp.&lt;/li&gt;
&lt;li&gt;importamos a biblioteca do jail-monkey&lt;/li&gt;
&lt;li&gt;criamos uma condi√ß√£o utilizando uma fun√ß√£o que retorna se o dispositivo possui root/ jail-broken e fechamos a aplica√ß√£o.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Ps: No passo 3, voc√™ poderia simplesmente criar um modal bonitinho explicando que o usu√°rio n√£o possui a seguran√ßa necess√°ria para utilizar a nossa aplica√ß√£o, fica com uma usabilidade bem melhor ‚ò∫Ô∏è.&lt;/p&gt;

&lt;p&gt;Depois de tudo isso, se voc√™ salvar o c√≥digo, fechar o app e tentar abrir em um emulador android, automaticamente a sua aplica√ß√£o fechar√°, isto √© por conta do emulador android possuir root nativamente, mas se voc√™ testar em um dispositivo fisico, a sua aplica√ß√£o ir√° funcionar normalmente.&lt;/p&gt;

&lt;p&gt;Al√©m do exemplo que criamos acima, voc√™ pode explorar um pouco dos recursos do jail-monkey e adicionar de acordo com a sua necessidade.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#alguns-metodos-da-api-do-jailmonkey"&gt;
  &lt;/a&gt;
  Alguns metodos da API do Jail-monkey
&lt;/h1&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Method&lt;/th&gt;
&lt;th&gt;Returns&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;isJailBroken&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;boolean&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;is this device jail-broken/rooted.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;canMockLocation&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;boolean&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Can this device fake its GPS location.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;trustFall&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;boolean&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Checks if the device violates either &lt;code&gt;isJailBroken&lt;/code&gt; or &lt;code&gt;canMockLocation&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;isDebuggedMode&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Promise&amp;lt;boolean&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Is the application is running in debug mode. Note that this method returns a Promise.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Bom, por hoje √© isso, espero que ajude voc√™s a melhorar a seguran√ßa dos aplicativos em React Native. &lt;/p&gt;

&lt;p&gt;Valeu&lt;/p&gt;

</description>
    </item>
    <item>
      <title>peviitor.ro - arhitectura</title>
      <author>Boga Sebastian Nicolae</author>
      <pubDate>Wed, 29 Dec 2021 17:18:50 +0000</pubDate>
      <link>https://dev.to/sebiboga/peviitorro-arhitectura-5dnf</link>
      <guid>https://dev.to/sebiboga/peviitorro-arhitectura-5dnf</guid>
      <description>&lt;p&gt;Arhitectura motorului de cautare &lt;code&gt;peviitor.ro&lt;/code&gt; este simpla.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_ZZvDAfz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zvgo1f424jah15opgml7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_ZZvDAfz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zvgo1f424jah15opgml7.png" alt="arhitectura aplicatiei" width="825" height="740"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#websiteul-companiei"&gt;
  &lt;/a&gt;
  Website-ul companiei
&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;Sursa de date&lt;/code&gt; este sectiunea cariere a website-ului companiei. De aici ne aducem locurile de munca disponibile.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#scraper"&gt;
  &lt;/a&gt;
  Scraper
&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;Fiecare website va avea un scraper&lt;/code&gt;. Rolul scraperului este de a prelua informatia de pe website-ul companiei si de a prelucra informatia astfel incat sa respecte standardul acceptat de API. Tot scraperul se ocupa de a trimite datele spre indexul motorului de cautare.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#ui"&gt;
  &lt;/a&gt;
  UI
&lt;/h4&gt;

&lt;p&gt;UI se refera la interfata utilizator. In fiecare versiune incercam sa aducem functionalitati noi. Incercam sa facem aceasta interfata &lt;code&gt;cat mai simpla&lt;/code&gt; nu doar din perspectiva "Usability" ci si din perspectiva scrierii codului.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#api"&gt;
  &lt;/a&gt;
  API
&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;Interfata aplicatiei programabila&lt;/code&gt; este expusa pentru ca partea de interfata utilizator sa extraga datele si a le prezenta spre utilizator.&lt;br&gt;
Totodata API-ul este responsabil si de acceptarea sau nu a informatiilor furnizate de catre scraper.&lt;br&gt;
Cu fiecare versiune incercam sa aducem imbunatatiri pe partea de securitate de aceea, API-ul va fi organizat pe versiuni.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#index"&gt;
  &lt;/a&gt;
  Index
&lt;/h4&gt;

&lt;p&gt;Am spus de la inceput index si nu baza de date pentru ca informatiile sunt foarte volatile. Sursa de date este practic website-ul companiei si nu ne propunem sa duplicam datele insa e necesar sa aducem anumite informatii in index pentru ca &lt;code&gt;pe index cautarea se face impecabil de repede&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Cam atat am dorit sa dezvaluim despre arhitectura acestui motor de cautare. Ramane sa detaliem fiecare sectiune odata cu promovarea fiecarei versiuni. Tehnologiile implicate pe fiecare sectiune vor fi explicate in articolele despre &lt;code&gt;versiuni&lt;/code&gt;.&lt;/p&gt;

</description>
      <category>searchengine</category>
      <category>peviitor</category>
      <category>job</category>
      <category>locuridemunca</category>
    </item>
    <item>
      <title>Flash of Undefined Custom Elements (FOUCE)</title>
      <author>Cory LaViska</author>
      <pubDate>Wed, 29 Dec 2021 17:15:27 +0000</pubDate>
      <link>https://dev.to/claviska/flash-of-undefined-custom-elements-fouce-3bp4</link>
      <guid>https://dev.to/claviska/flash-of-undefined-custom-elements-fouce-3bp4</guid>
      <description>&lt;p&gt;Web components are &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/CustomElementRegistry/define"&gt;defined and registered&lt;/a&gt; with JavaScript. Depending on how and when you load the scripts that perform registration, you may see a brief flash of unstyled HTML where your custom elements should be when the page loads. This is not dissimilar to &lt;a href="https://en.wikipedia.org/wiki/Flash_of_unstyled_content"&gt;FOUC&lt;/a&gt;, which occurs when HTML is displayed before the stylesheet has loaded.&lt;/p&gt;

&lt;p&gt;For reference, here's an exaggerated example of three custom elements loading at different intervals.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UC68fc88--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8to9lnborhq6mn7gahhk.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UC68fc88--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8to9lnborhq6mn7gahhk.gif" alt="Exaggerated example of FOUCE as custom elements load one by one" width="632" height="800"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Since the world needs more acronyms, and since one doesn't seem to exist yet, I'm calling this phenomenon FOUCE (rhymes with "spouse"), which stands for &lt;em&gt;Flash of Undefined Custom Elements&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Fortunately, the browser gives us some tools to mitigate it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#script-placement"&gt;
  &lt;/a&gt;
  Script placement
&lt;/h2&gt;

&lt;p&gt;The easiest way to prevent FOUCE is to put the &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag(s) that load your custom elements in the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; section of the page. While this approach is simple, it &lt;em&gt;will&lt;/em&gt; block rendering until all scripts are processed which can adversely affect page load times.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Example&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;

    &lt;span class="c"&gt;&amp;lt;!-- Custom elements are loaded here --&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"my-card.js"&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"module"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"my-button.js"&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"module"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"my-rating.js"&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"module"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    ...
  &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I recommend this approach &lt;em&gt;only&lt;/em&gt; if you're loading a handful of small custom elements or if you're building something like an &lt;a href="https://www.electronjs.org/"&gt;Electron&lt;/a&gt; app where resources are loaded locally rather than over HTTP.&lt;/p&gt;

&lt;p&gt;Generally speaking, you probably &lt;em&gt;don't&lt;/em&gt; want to do this in a browser.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-raw-defined-endraw-selector"&gt;
  &lt;/a&gt;
  The &lt;code&gt;:defined&lt;/code&gt; selector
&lt;/h2&gt;

&lt;p&gt;A better approach is to use the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/:defined"&gt;&lt;code&gt;:defined&lt;/code&gt;&lt;/a&gt; CSS pseudo-class to "hide" custom elements that haven't been registered yet. You can scope it to specific tags or you can hide all undefined custom elements as shown below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nd"&gt;:not&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nd"&gt;:defined&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;visibility&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As soon as a custom element is registered, it will immediately appear with all of its styles, effectively eliminating FOUCE. Note the use of &lt;code&gt;visibility: hidden&lt;/code&gt; instead of &lt;code&gt;display: none&lt;/code&gt; to reduce shifting as elements are registered.&lt;/p&gt;

&lt;p&gt;The drawback to this approach is that custom elements can potentially appear one by one instead of all at the same time.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IBIdzC6X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/243qaoljsjav4an724xe.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IBIdzC6X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/243qaoljsjav4an724xe.gif" alt="FOUCE is gone, but elements can appear at random as they are defined" width="630" height="800"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's certainly a lot better, but can we take things even further?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#awaiting-raw-customelementswhendefined-endraw-"&gt;
  &lt;/a&gt;
  Awaiting &lt;code&gt;customElements.whenDefined()&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;The last option is to use &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/CustomElementRegistry/whenDefined"&gt;&lt;code&gt;customElements.whenDefined()&lt;/code&gt;&lt;/a&gt;, which returns a promise that resolves when the specified element gets registered. You'll probably want to use it with &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/all"&gt;&lt;code&gt;Promise.all()&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A clever way to use this method is to hide the &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; with &lt;code&gt;opacity: 0&lt;/code&gt; and add a class that fades it in as soon as all your custom elements are defined.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="nc"&gt;.ready&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;.25s&lt;/span&gt; &lt;span class="n"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"module"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;
    &lt;span class="nx"&gt;customElements&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;whenDefined&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;my-button&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="nx"&gt;customElements&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;whenDefined&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;my-card&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="nx"&gt;customElements&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;whenDefined&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;my-rating&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;]);&lt;/span&gt;

  &lt;span class="c1"&gt;// Button, card, and rating are registered now! Add&lt;/span&gt;
  &lt;span class="c1"&gt;// the `ready` class so the UI fades in.&lt;/span&gt;
  &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ready&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In my opinion, this is the best approach because it subtly fades in the entire page as soon as all your custom elements are registered. After all, what's the point of showing the page before it's ready?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tWZwUMY6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ky3dfttnpddx5lv40t60.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tWZwUMY6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ky3dfttnpddx5lv40t60.gif" alt="No more FOUCE because the body fades in only after all elements are defined" width="630" height="800"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The drawback, of course, is that you need to keep track of which elements you're using and add them to the list. But this can also be an advantage if your initial UI only requires a handful of custom elements. For example, you can load only the ones you need upfront and let the rest of them load asynchronously to make your page load faster.&lt;/p&gt;




&lt;p&gt;Have you used any of these methods to prevent FOUCE? Have you thought of a better way? &lt;a href="https://twitter.com/claviska"&gt;Let me know on Twitter!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This article was originally published on &lt;a href="https://www.abeautifulsite.net/posts/flash-of-undefined-custom-elements/"&gt;the author's blog&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>webcomponents</category>
      <category>css</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Console in JS other than console.log()</title>
      <author>Neel Dedhia</author>
      <pubDate>Wed, 29 Dec 2021 17:09:01 +0000</pubDate>
      <link>https://dev.to/neel_dedhia/console-in-js-other-than-consolelog-32nf</link>
      <guid>https://dev.to/neel_dedhia/console-in-js-other-than-consolelog-32nf</guid>
      <description>&lt;p&gt;Hey JS folks, we all have been using a very popular method console.log() for things apart from genuine logging. Most of us, once in a lifetime would have come across all the methods console object has to offer apart from console.log(), despite these we still tend to use¬†.log() at times!&lt;/p&gt;

&lt;p&gt;Today, once again when I went through the console object docs on MDN, a thought crossed my mind, what could be the reason we aren't adaptable to the other method in normal scenarios?&lt;/p&gt;

&lt;p&gt;To get a better insight on this, I had initiated a poll on LinkedIn to ask my connections their thought and here are the results.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FDgvl2ID--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/od4z0c22ecoxbbzlh89p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FDgvl2ID--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/od4z0c22ecoxbbzlh89p.png" alt="Linkedin Poll" width="505" height="256"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;From the results, it is seen that majority of people have found console.log() easy and quick to use. But, all these votes indirectly hint at one answer that is &lt;strong&gt;Unawareness&lt;/strong&gt;. How? let me explain to you‚Ä¶&lt;/p&gt;

&lt;p&gt;One uses any method which is either well known or has seen them the most while learning (this makes us easy &amp;amp; quick to re-use in real scenarios) the best example for this could be "variable i in loops".&lt;br&gt;
If one is unaware of the ability of a function and how can it make your code robust and look good, then one may never find it needful in using.&lt;/p&gt;

&lt;p&gt;The console.log() is only to put a message which is not strongly bound to the logical part of the code, it can be used as an affirmation to something. Eg: "User landed homepage from google-search". The other methods offered by the console are bound to specific usage under special scenarios. Using them increases our code &amp;amp; console readability.&lt;/p&gt;

&lt;p&gt;Let me show you a few methods which have real meaning and application and I hope it would help you to switch from console.log() then onwards.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#1-consolecount-amp-consolecountreset"&gt;
  &lt;/a&gt;
  1. console.count() &amp;amp; console.countReset()
&lt;/h2&gt;

&lt;p&gt;Let's assume you want to keep a count of how many click the user makes on the button. The code with¬†.log() might look like this üëá&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let userClickCounter = 0;
function watchUserClicks(){
  userClickCounter++;
  console.log(`User Clicked ${userClickCounter}`);
}
function resetCounter(){
  userClickCounter = 0;
  console.log("User Clicked reset");
}
&amp;lt;/script&amp;gt;
&amp;lt;button onclick="watchUserClicks()"&amp;gt;Click Me to without pause&amp;lt;/button&amp;gt;
&amp;lt;button onclick="resetCounter()"&amp;gt;Reset me if you pause&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now. let me show you the other way üëá&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function watchUserClicks(){
  console.count(`User Clicked`);
}
function resetCounter(){
  console.log("User Clicked");
}
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here the need for variable and its related code is eliminated thereby, making the code optimal and readable.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-consoledir"&gt;
  &lt;/a&gt;
  2. console.dir()
&lt;/h2&gt;

&lt;p&gt;This method shows all the properties of the JS Object. The console.log() prints out toString representation whereas console.dir() prints out a navigatable tree. Check out the difference below üëá&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qRiYUPEx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i661tsgm3lf720gcevb4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qRiYUPEx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i661tsgm3lf720gcevb4.png" alt="console.dir() vs console.log() output" width="310" height="97"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This method comes to the real help when you want to show a single Dom Element like this üëá&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D4CBZgvx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/godv89ovgh5rhp5xvqqy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D4CBZgvx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/godv89ovgh5rhp5xvqqy.png" alt="Dom Element in console.dir() and console.log()" width="700" height="308"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-consoletrace"&gt;
  &lt;/a&gt;
  3. console.trace()
&lt;/h2&gt;

&lt;p&gt;If you are working on a very complex code architecture wherein the function you are writing has multiple call sources(it can be called from various methods directly or indirectly). You're function isn't working for some scenario and you don't who is the one calling and how is it called at caller's end. The trace() method will come to the rescue and help you getting to know trace of origin of this function call. This would save your tones of time about getting to know the code architecture just for one single call messing up. Let's see this with the example belowüëá&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const myTask = (task) =&amp;gt; youDoIt(task);
const youDoIt = (task) =&amp;gt; letJuniorDoIt(task);
const letJuniorDoIt = (task) =&amp;gt; forwardToFriend(task);
const forwardToFriend = (task) =&amp;gt; forwardToLoyalFriend(task);
const forwardToLoyalFriend = (task) =&amp;gt; {
 if(!!task){
  console.log('Worked on task: ' + task);
 }
 else{
  // !! will convert undefined, null, false, 0, '',  into false
  console.trace('Invalid task to work on'); 
 } 
}
// You aren't aware of where these lines are written in the project
myTask('Priority Task');
forwardToFriend('Bug in the code');
letJuniorDoIt('Easy Task');
forwardToLoyalFriend('Job Saver task');
youDoIt('');
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's see how trace() method helps you here:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--C1HFng5Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rw6f6y3liz7jb6u63d28.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C1HFng5Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rw6f6y3liz7jb6u63d28.png" alt="Example of console.trace() method" width="376" height="262"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-consoletime-and-consoletimeend"&gt;
  &lt;/a&gt;
  4. console.time() and console.timeEnd()
&lt;/h2&gt;

&lt;p&gt;When you are working on a complex algorithm, time is one of the main factor you need to look on simultaneously. This is where you can use these console methods to know how much time your algorithm is taking to execute.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function Factorial(n) {
    let fact=1;
    console.time('Calculate Factorial');
for (let i = 2; i &amp;lt;= n; i++){
        fact = fact * i;
    }
console.timeEnd('Calculate Factorial');
    return fact;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mslixLWa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hoscox2dv182tpgd1bpb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mslixLWa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hoscox2dv182tpgd1bpb.png" alt="Factorial in JS with console.time() &amp;amp; console.timeEnd()" width="328" height="81"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-consoletable"&gt;
  &lt;/a&gt;
  5. console.table()
&lt;/h2&gt;

&lt;p&gt;The best method vs console.log() to show an object in JS. This method is used to represent complex objects or arrays in tabular format. This method takes away all the hard work of inspecting at an object that console.log gives. With¬†.table() you can easily view the objects sort them based on columns and traverse through.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const teamData = {
    Lead: {
        id: 'L01',
        firstname: "John",
        email: "john@gmail.com"
    },
    manager: {
        id: 'M01',
        firstname: "Alice",
        email: "aliceInwander@gmail.com"
    },
    developer: {
        id: 'D01',
        firstname: "Bob",
        email: "bobthebuilder@gmail.com"
    },
    tester: {
        id: 'T01',
        firstname: 'Dexter',
        email: 'dexterLab@gmail.com'
    }
}
console.table(teamData);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FN0rK_Qt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7133tjjiuh765anglskd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FN0rK_Qt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7133tjjiuh765anglskd.png" alt="console.table() to show team¬†data" width="880" height="137"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This method also gives a cherry for the cake. You can print selective columns from an object like below üëá&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;console.table(teamData, ['id', 'email']);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UQd_Hgd7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fawwzpdzg77s37n0efji.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UQd_Hgd7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fawwzpdzg77s37n0efji.png" alt="Console.table with specific columns" width="880" height="111"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are other methods too and I would like to get to know from you which other methods you find are insightful and better than using console.log. Let me know if you need part 2 of this article discussing the rest of the methods console object has to offer.&lt;/p&gt;

&lt;p&gt;I hope this read was fruitful and now you won't fall in any of the voting options that I had mentioned at the beginning. Share this article with your friends and colleagues at work, to make them aware of the hidden gems JS console has and make their life easier too.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lastly-introducing-myself"&gt;
  &lt;/a&gt;
  Lastly, introducing myself
&lt;/h2&gt;

&lt;p&gt;Hey üëã I'm Neel Dedhia, a full-stack web developer I like to write articles about concepts that are odds but yet important towards growth in knowledge in tech. Also, I like to give and share my knowledge with my connections to mutually grow here with updated resources. If you like reading this article and looking forward to seeing more or to discuss with me on such topics, you can follow me here or connect me from the below sources:&lt;br&gt;
Portfolio‚Ää-‚Ää&lt;a href="http://neeldedhia.bio.link/"&gt;http://neeldedhia.bio.link/&lt;/a&gt;&lt;br&gt;
Linkedin‚Ää-‚Ää&lt;a href="https://www.linkedin.com/in/neel-dedhia/"&gt;https://www.linkedin.com/in/neel-dedhia/&lt;/a&gt;&lt;br&gt;
Twitter‚Ää-‚Ää&lt;a href="https://twitter.com/neel_dedhia"&gt;https://twitter.com/neel_dedhia&lt;/a&gt;&lt;br&gt;
Dev.to‚Ää-‚Ää&lt;a href="https://dev.to/neel_dedhia"&gt;https://dev.to/neel_dedhia&lt;/a&gt;&lt;br&gt;
Instagram‚Ää-‚Ää&lt;a href="https://instagram.com/arsictography"&gt;https://instagram.com/arsictography&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thank you! for reading till this end, wish you all a Merry Christmas and Happy New Year!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>programming</category>
    </item>
    <item>
      <title>MySQL- RDBMS</title>
      <author>Md Yasin Miah</author>
      <pubDate>Wed, 29 Dec 2021 16:54:47 +0000</pubDate>
      <link>https://dev.to/yasin440/mysql-rdbms-3cdb</link>
      <guid>https://dev.to/yasin440/mysql-rdbms-3cdb</guid>
      <description>&lt;h2&gt;
  &lt;a href="#relational-databasemysql"&gt;
  &lt;/a&gt;
  Relational Database(MySQL)
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;RDBMS&lt;/strong&gt; stands for &lt;strong&gt;Relational Database Management System.&lt;/strong&gt;&lt;br&gt;
Relational databases define the relation between different data tables. This relation can be created based on one common data table's column that is the same in both data tables and the data column must be a unique data field.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;MySQL is a free and fast Relational Database Management System. It is ideal for both small and large applications.&lt;/p&gt;

&lt;p&gt;In MySQL, SQL is used to insert, search, update, and delete database records. &lt;strong&gt;All MySQL commands will be in capital letters.&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;In MySQL, most common SQL commands are:&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;SELECT&lt;/strong&gt; - extracts data from a database&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;UPDATE&lt;/strong&gt; - updates data in a database&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;DELETE&lt;/strong&gt; - deletes data from a database&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;INSERT INTO&lt;/strong&gt; - inserts new data into a database&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;CREATE DATABASE&lt;/strong&gt; - creates a new database&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;ALTER TABLE&lt;/strong&gt; - add, delete or modify a database table&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;CREATE TABLE&lt;/strong&gt; - creates a new table&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;DROP DATABASE&lt;/strong&gt;- deletes a table&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;CREATE INDEX&lt;/strong&gt; - creates an index (search key)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;DROP INDEX&lt;/strong&gt; - deletes an index&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;1. SELECT - extracts data from a database.&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;To select the full table&lt;br&gt;
&lt;/p&gt;


&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;FROM&lt;/span&gt; &lt;span class="nx"&gt;tableName&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;To select one or many specific columns(with all column data) from the data table.&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;SELECT&lt;/span&gt; &lt;span class="nx"&gt;column&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;column2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="nx"&gt;FROM&lt;/span&gt; &lt;span class="nx"&gt;tableName&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;To select one or many specific columns(without duplicate column data) from the data table.&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;SELECT&lt;/span&gt; &lt;span class="nx"&gt;DISTINCT&lt;/span&gt; &lt;span class="nx"&gt;column&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;column2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="nx"&gt;FROM&lt;/span&gt; &lt;span class="nx"&gt;tableName&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;2. UPDATE - updates data in a database.&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The UPDATE statement used to modify the existing date of a table.&lt;br&gt;
If you don‚Äôt use WHERE with condition then when all dates in the column will change.&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;UPDATE&lt;/span&gt; &lt;span class="nx"&gt;tableName&lt;/span&gt;
&lt;span class="nx"&gt;SET&lt;/span&gt; &lt;span class="nx"&gt;column&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;column2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;value2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="nx"&gt;WHERE&lt;/span&gt; &lt;span class="nx"&gt;conditions&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;3. DELETE - deletes data from a database.&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The DELETE statement is used to delete records from a data table.&lt;br&gt;
If you don‚Äôt use WHERE then all records will delete.&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;DELETE&lt;/span&gt; &lt;span class="nx"&gt;FROM&lt;/span&gt; &lt;span class="nx"&gt;tableName&lt;/span&gt;
&lt;span class="nx"&gt;WHERE&lt;/span&gt; &lt;span class="nx"&gt;conditions&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;4. INSERT INTO -inserts new data in a database.&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You can write an INSERT INTO statement in two ways.Firstly, you can specify the column name and then specify their values in orderly like this&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;INSERT&lt;/span&gt; &lt;span class="nx"&gt;INTO&lt;/span&gt; &lt;span class="nx"&gt;tableName&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;column&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;column2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;column3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...)&lt;/span&gt;
&lt;span class="nx"&gt;VALUES&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Secondly, you don‚Äôt need to specify the column name but you can specify only the values for each column orderly of your data table.&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;INSERT&lt;/span&gt; &lt;span class="nx"&gt;INTO&lt;/span&gt; &lt;span class="nx"&gt;tableName&lt;/span&gt;
&lt;span class="nx"&gt;VALUES&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;5. CREATE DATABASE -creates a new database.&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;With the CREATE DATABASE statement we can create a new database.&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;CREATE&lt;/span&gt; &lt;span class="nx"&gt;DATABASE&lt;/span&gt; &lt;span class="nx"&gt;tableName&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;6. ALTER TABLE -add, delete or modify a database column.&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;To add a new column and must be specify the dataType.&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;ALTER&lt;/span&gt; &lt;span class="nx"&gt;TABLE&lt;/span&gt; &lt;span class="nx"&gt;tableName&lt;/span&gt;
&lt;span class="nx"&gt;ADD&lt;/span&gt; &lt;span class="nx"&gt;columnName&lt;/span&gt; &lt;span class="nx"&gt;dataType&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;To delete an existing column from a data table&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;ALTER&lt;/span&gt; &lt;span class="nx"&gt;TABLE&lt;/span&gt; &lt;span class="nx"&gt;tableName&lt;/span&gt;
&lt;span class="nx"&gt;DROP&lt;/span&gt; &lt;span class="nx"&gt;COLUMN&lt;/span&gt; &lt;span class="nx"&gt;columnName&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;To change an existing column‚Äôs dataType from a data table.&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;ALTER&lt;/span&gt; &lt;span class="nx"&gt;TABLE&lt;/span&gt; &lt;span class="nx"&gt;tableName&lt;/span&gt;
&lt;span class="nx"&gt;MODIFY&lt;/span&gt; &lt;span class="nx"&gt;COLUMN&lt;/span&gt; &lt;span class="nx"&gt;columnName&lt;/span&gt; &lt;span class="nx"&gt;dataType&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;7. CREATE TABLE -creates a new table.&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;CREATE TABLE statement used to create a new table in a database.&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="nx"&gt;syntex&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;
&lt;span class="nx"&gt;CREATE&lt;/span&gt; &lt;span class="nx"&gt;TABLE&lt;/span&gt; &lt;span class="nx"&gt;tableName&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="nx"&gt;columnName1&lt;/span&gt; &lt;span class="nx"&gt;dataType&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="nx"&gt;columnName2&lt;/span&gt; &lt;span class="nx"&gt;dataType&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="nx"&gt;columnName3&lt;/span&gt; &lt;span class="nx"&gt;dataType&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;  &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="nx"&gt;example&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;
&lt;span class="nx"&gt;CREATE&lt;/span&gt; &lt;span class="nx"&gt;TABLE&lt;/span&gt; &lt;span class="nx"&gt;Persons&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nx"&gt;PersonID&lt;/span&gt; &lt;span class="nx"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;LastName&lt;/span&gt; &lt;span class="nx"&gt;varchar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="nx"&gt;FirstName&lt;/span&gt; &lt;span class="nx"&gt;varchar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="nx"&gt;Address&lt;/span&gt; &lt;span class="nx"&gt;varchar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="nx"&gt;City&lt;/span&gt; &lt;span class="nx"&gt;varchar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Create table using another existing table&lt;br&gt;
With CREATE TABLE you can copy one existing table and create a new one with existing table columns and also can apply conditions to get existing table columns into your new table.&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;CREATE&lt;/span&gt; &lt;span class="nx"&gt;TABLE&lt;/span&gt; &lt;span class="nx"&gt;newTableName&lt;/span&gt; &lt;span class="nx"&gt;AS&lt;/span&gt;
&lt;span class="nx"&gt;SELECT&lt;/span&gt; &lt;span class="nx"&gt;column1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;column2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="nx"&gt;FROM&lt;/span&gt; &lt;span class="nx"&gt;existingTableName&lt;/span&gt;
&lt;span class="nx"&gt;WHERE&lt;/span&gt; &lt;span class="nx"&gt;conditions&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;8. DROP DATABASE -deletes a table.&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;DROP DATABASE statement used to delete an existing database.&lt;br&gt;
Be careful to drop because once delete a table all of data in this table will lost forever&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;DROP&lt;/span&gt; &lt;span class="nx"&gt;DATABASE&lt;/span&gt; &lt;span class="nx"&gt;tableName&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;9. CREATE INDEX - creates an index (search key)&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;To create indexes in a table you can use the CREATE INDEX statement. Indexes allow us to retrieve our data from a table quickly. Usually users can‚Äôt see the indexes. Indexes are just used to speed up our queries.&lt;/p&gt;

&lt;p&gt;Create an index in a table. Duplicate values are allowed.&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;CREATE&lt;/span&gt; &lt;span class="nx"&gt;INDEX&lt;/span&gt; &lt;span class="nx"&gt;indexName&lt;/span&gt;
&lt;span class="nx"&gt;ON&lt;/span&gt; &lt;span class="nx"&gt;tableName&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;column1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;column2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Create an unique index in a table. Duplicate values are not allowed here.&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;CREATE&lt;/span&gt; &lt;span class="nx"&gt;UNIQUE&lt;/span&gt; &lt;span class="nx"&gt;INDEX&lt;/span&gt; &lt;span class="nx"&gt;indexName&lt;/span&gt;
&lt;span class="nx"&gt;ON&lt;/span&gt; &lt;span class="nx"&gt;tableName&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;column1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;column2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;10. DROP INDEX - deletes an index (search key)&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Use DROP INDEX statement to delete an index&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;ALTER&lt;/span&gt; &lt;span class="nx"&gt;TABLE&lt;/span&gt; &lt;span class="nx"&gt;tableName&lt;/span&gt;
&lt;span class="nx"&gt;DROP&lt;/span&gt; &lt;span class="nx"&gt;INDEX&lt;/span&gt; &lt;span class="nx"&gt;indexName&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>mysql</category>
      <category>programming</category>
      <category>beginners</category>
      <category>sql</category>
    </item>
    <item>
      <title>How to Handle App Lifecycle in the Flutter App?</title>
      <author>Pankaj Das</author>
      <pubDate>Wed, 29 Dec 2021 16:54:43 +0000</pubDate>
      <link>https://dev.to/pankajdas0909/how-to-handle-app-lifecycle-in-the-flutter-app-5bii</link>
      <guid>https://dev.to/pankajdas0909/how-to-handle-app-lifecycle-in-the-flutter-app-5bii</guid>
      <description>&lt;p&gt;The most confusing idea transitioning from Android and/or iOS is to understand how Flutter manages its lifecycle. For this, first, you need to know about what is &lt;a href="https://flutteragency.com/what-is-flutter-application-lifecycle/"&gt;Flutter Application Lifecycle&lt;/a&gt;. So now, let us begin with how to handle the App Lifecycle in the Flutter app.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-handle-app-lifecycle-in-the-flutter-app"&gt;
  &lt;/a&gt;
  How to handle App Lifecycle in the flutter App?
&lt;/h2&gt;

&lt;p&gt;The state in which it is described is called enum class &lt;a href="https://docs-flutter-io.firebaseapp.com/flutter/dart-ui/AppLifecycleState-class.html"&gt;AppLifecycleState&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The method called when the system puts the app in the background or returns the app to the foreground is called &lt;a href="https://api.flutter.dev/flutter/widgets/WidgetsBindingObserver/didChangeAppLifecycleState.html"&gt;didChangeAppLifecycleState&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;you can use this as an example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;class AppLifecycleReactor extends StatefulWidget
{
  @override
  _AppLifecycleReactorState createState() =&amp;gt; _AppLifecycleReactorState();
}

class _AppLifecycleReactorState extends State with WidgetsBindingObserver {

  @override
  void initState(){
    super.initState();
    WidgetsBinding.instance!.addObserver(this);
  }

  @override
  void dispose(){
    super.dispose();
    WidgetsBinding.instance!.removeObserver(this);
  }

  @override
  void didChangeAppLifecycleState(AppLifecycleState state) {
    super.didChangeAppLifecycleState(state);
    print("App Lifecycle State : $state");
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold();
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion:
&lt;/h2&gt;

&lt;p&gt;In this article, we learned about How to handle App Lifecycle in the flutter App.&lt;/p&gt;

&lt;p&gt;Also, check the article for &lt;a href="https://flutteragency.com/how-to-check-whether-application-is-in-foreground-or-not-in-flutter/"&gt;checking whether the application is in the foreground or not&lt;/a&gt;‚Ä¶&lt;/p&gt;

&lt;p&gt;Thanks for being with us on a Flutter Journey !!!&lt;/p&gt;

&lt;p&gt;Keep Fluttering!!! Keep Learning!!!&lt;/p&gt;

&lt;p&gt;Let us know about your doubts in the comment section.&lt;/p&gt;

&lt;p&gt;Flutter Agency is a popular &lt;a href="https://flutteragency.com/"&gt;Flutter development company&lt;/a&gt; dedicated to Flutter information, news, updates. The portal is full of cool resources from Flutter like Widget Guide, Flutter Projects, templates, themes and etc.&lt;/p&gt;

</description>
      <category>flutter</category>
      <category>app</category>
      <category>development</category>
    </item>
    <item>
      <title>Linear Search Simple Implementation in Java</title>
      <author>Pratik</author>
      <pubDate>Wed, 29 Dec 2021 16:46:58 +0000</pubDate>
      <link>https://dev.to/pratikdhame/linear-search-simple-implementation-4j32</link>
      <guid>https://dev.to/pratikdhame/linear-search-simple-implementation-4j32</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GEx96wFT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/798fa31gewmfqkjkph49.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GEx96wFT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/798fa31gewmfqkjkph49.png" alt="Image description" width="880" height="537"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>algorithms</category>
    </item>
    <item>
      <title>Some DevOps Terms definitions</title>
      <author>Maxime Guilbert</author>
      <pubDate>Wed, 29 Dec 2021 16:25:34 +0000</pubDate>
      <link>https://dev.to/adaendra/some-devops-terms-definitions-1h8o</link>
      <guid>https://dev.to/adaendra/some-devops-terms-definitions-1h8o</guid>
      <description>&lt;p&gt;In this post, I will list some of the terms used in the DevOps world which must be known &lt;em&gt;(and have a better understanding about all the DevOps posts/books/videos... that you can read/see)&lt;/em&gt;.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#automation"&gt;
  &lt;/a&gt;
  Automation
&lt;/h3&gt;

&lt;p&gt;DevOps automation is the addition of technology that performs tasks with reduced human assistance to processes that facilitate feedback loops between operations and development teams so that iterative updates can be deployed faster to applications in production.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;From RedHat - &lt;a href="https://www.redhat.com/en/topics/automation/what-is-devops-automation"&gt;Full Definition&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#breaking-change"&gt;
  &lt;/a&gt;
  Breaking change
&lt;/h3&gt;

&lt;p&gt;An application/library has a breaking change when your consumers must do a change in their calls to continue to use a feature.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Example&lt;/em&gt;&lt;br&gt;
Changing a route from "/actors" to "/actor/list".&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#container"&gt;
  &lt;/a&gt;
  Container
&lt;/h3&gt;

&lt;p&gt;It is a standardized unit that includes everything needed to run the software, including code and dependencies. Containers enable an application to run in a fast and reliable manner when it‚Äôs moved from one computing environment to another.&lt;/p&gt;

&lt;p&gt;Docker, ContainerD and LXC are tools which create containers.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#cd-continuous-deployment"&gt;
  &lt;/a&gt;
  CD - Continuous Deployment
&lt;/h3&gt;

&lt;p&gt;Continuous Deployment (CD) is a software release process that uses automated testing to validate if changes to a codebase are correct and stable for immediate autonomous deployment to a production environment.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;From Atlassian - &lt;a href="https://www.atlassian.com/continuous-delivery/continuous-deployment"&gt;Full Definition&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#ci-continuous-integration"&gt;
  &lt;/a&gt;
  CI - Continuous Integration
&lt;/h3&gt;

&lt;p&gt;Continuous integration (CI) is the practice of automating the integration of code changes from multiple contributors into a single software project. It‚Äôs a primary DevOps best practice, allowing developers to frequently merge code changes into a central repository where builds and tests then run. Automated tools are used to assert the new code‚Äôs correctness before integration.&lt;/p&gt;

&lt;p&gt;A source code version control system is the crux of the CI process. The version control system is also supplemented with other checks like automated code quality tests, syntax style review tools, and more.  &lt;/p&gt;

&lt;p&gt;&lt;em&gt;From Atlassian - &lt;a href="https://www.atlassian.com/continuous-delivery/continuous-integration"&gt;Full Definition&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#devops"&gt;
  &lt;/a&gt;
  DevOps
&lt;/h3&gt;

&lt;p&gt;A fusion of the words ‚Äúdevelopment‚Äù and ‚Äúoperations,‚Äù describing a design philosophy where development and operations teams collaborate on software development and deployment. The goal of this new process is to increase software production agility while achieving business goals.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#devsecops"&gt;
  &lt;/a&gt;
  DevSecOps
&lt;/h3&gt;

&lt;p&gt;The process of bringing security into DevOps methodology and giving it a significant role.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#docker"&gt;
  &lt;/a&gt;
  Docker
&lt;/h3&gt;

&lt;p&gt;Docker is a set of platform as a service (PaaS) products that use OS-level virtualization to deliver software in packages called containers.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;From Wikipedia - &lt;a href="https://en.wikipedia.org/wiki/Docker_(software)"&gt;Full page&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#iac-infrastructure-as-code"&gt;
  &lt;/a&gt;
  IaC - Infrastructure as Code
&lt;/h3&gt;

&lt;p&gt;Infrastructure as Code (IaC) is the management of infrastructure (networks, virtual machines, load balancers, and connection topology) in a descriptive model, using the same versioning as DevOps team uses for source code. Like the principle that the same source code generates the same binary, an IaC model generates the same environment every time it is applied. IaC is a key DevOps practice and is used in conjunction with continuous delivery.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;From Microsoft - &lt;a href="https://docs.microsoft.com/en-us/devops/deliver/what-is-infrastructure-as-code"&gt;Full definition&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#kubernetes"&gt;
  &lt;/a&gt;
  Kubernetes
&lt;/h3&gt;

&lt;p&gt;Kubernetes, also known as K8s, is an open-source system for automating deployment, scaling, and management of containerized applications.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;From Kubernetes - &lt;a href="https://kubernetes.io/"&gt;Website&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#monitoring"&gt;
  &lt;/a&gt;
  Monitoring
&lt;/h3&gt;

&lt;p&gt;DevOps monitoring entails overseeing the entire development process from planning, development, integration and testing, deployment, and operations. It involves a complete and real-time view of the status of applications, services, and infrastructure in the production environment. Features such as real-time streaming, historical replay, and visualizations are critical components of application and service monitoring.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;From Atlassian - &lt;a href="https://www.atlassian.com/devops/devops-tools/devops-monitoring"&gt;Full Post about DevOps Monitoring&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#pipeline"&gt;
  &lt;/a&gt;
  Pipeline
&lt;/h3&gt;

&lt;p&gt;A pipeline is a set of automated processes and tools to collaborate to an objective &lt;em&gt;(building a project, deploying application to an environment, create/update some infrastructure...)&lt;/em&gt;.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#regression-testing"&gt;
  &lt;/a&gt;
  Regression testing
&lt;/h3&gt;

&lt;p&gt;The testing of a software application to confirm that any recent changes made to an application haven‚Äôt adversely affected any features that were already in place.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#sla-service-level-agreement"&gt;
  &lt;/a&gt;
  SLA - Service Level Agreement
&lt;/h3&gt;

&lt;p&gt;An SLA (service level agreement) is an agreement between provider and client about measurable metrics like uptime, responsiveness, and responsibilities. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;From Atlassian - &lt;a href="https://www.atlassian.com/incident-management/kpis/sla-vs-slo-vs-sli"&gt;SLA vs SLO vs SLI&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#sli"&gt;
  &lt;/a&gt;
  SLI
&lt;/h3&gt;

&lt;p&gt;An SLI (service level indicator) measures compliance with an SLO (service level objective).&lt;/p&gt;

&lt;p&gt;&lt;em&gt;From Atlassian - &lt;a href="https://www.atlassian.com/incident-management/kpis/sla-vs-slo-vs-sli"&gt;SLA vs SLO vs SLI&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#slo"&gt;
  &lt;/a&gt;
  SLO
&lt;/h3&gt;

&lt;p&gt;An SLO (service level objective) is an agreement within an SLA about a specific metric like uptime or response time.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;From Atlassian - &lt;a href="https://www.atlassian.com/incident-management/kpis/sla-vs-slo-vs-sli"&gt;SLA vs SLO vs SLI&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#test-automation"&gt;
  &lt;/a&gt;
  Test automation
&lt;/h3&gt;

&lt;p&gt;Using specialized software to control the execution of tests and compare actual outcomes against predicted outcomes.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;From SimpleLearn - &lt;a href="https://www.simplilearn.com/top-devops-terms-you-should-know-article"&gt;Full post&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#uptime"&gt;
  &lt;/a&gt;
  Uptime
&lt;/h3&gt;

&lt;p&gt;Time during the application is available and works correctly.&lt;/p&gt;




&lt;p&gt;I've surely missed other important terms, so don't hesitate to ask for them in the comments.&lt;/p&gt;

&lt;p&gt;I hope it will help you! üç∫&lt;/p&gt;

</description>
      <category>devops</category>
    </item>
    <item>
      <title>Quantum Computing with Javascript using Q.js</title>
      <author>Saji Wang</author>
      <pubDate>Wed, 29 Dec 2021 15:58:28 +0000</pubDate>
      <link>https://dev.to/codesphere/quantum-computing-with-javascript-using-qjs-31k0</link>
      <guid>https://dev.to/codesphere/quantum-computing-with-javascript-using-qjs-31k0</guid>
      <description>&lt;p&gt;While Quantum Computing may feel like a new buzzword, it‚Äôs been around for quite a long time. What started as a theoretical idea in the 1980s is slowly becoming a reality. &lt;/p&gt;

&lt;p&gt;In this tutorial, we‚Äôll be talking about how Quantum computing works and how you can use Javascript to simulate a simple Quantum circuit that you can play around with.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#what-is-quantum-computing"&gt;
  &lt;/a&gt;
  What is Quantum Computing?
&lt;/h3&gt;

&lt;p&gt;Quantum computing is a form of computation that harnesses the power and potential of Quantum Mechanics. Unlike classical computing that works with transistors and bit values 0 and 1, quantum computing uses the properties exhibited by subatomic particles to perform computations and solve problems too complex for classical computers.&lt;/p&gt;

&lt;p&gt;It utilizes what‚Äôs known as qubits, which can have values 0, 1, or both 0 and 1 at the same time. This property of having two values at the same time is a feature of superposition and is only possible within quantum states and not classical ones.&lt;/p&gt;

&lt;p&gt;Devices that perform quantum computations are known as quantum computers. These are specially designed and maintained to be able to harness the various properties of quantum states. It is seen that quantum computers are gaining tremendous attention and are considered to be the future of computing. &lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#applications-of-quantum-computing"&gt;
  &lt;/a&gt;
  Applications of Quantum Computing
&lt;/h3&gt;

&lt;p&gt;Any problem that can be solved by a classical computer can be solved by a quantum computer. More importantly, some potential applications that become possible or exponentially more efficient with Qubits include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Cryptography&lt;/li&gt;
&lt;li&gt;Quantum Chemistry &amp;amp; computer-aided drug design&lt;/li&gt;
&lt;li&gt;Simulating quantum systems&lt;/li&gt;
&lt;li&gt;Machine learning&lt;/li&gt;
&lt;li&gt;Computational biology&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Since applications in quantum need specialized hardware, we use classical computers to simulate quantum computer behavior with the help of languages like python, JavaScript, etc. Here, we have a short example to create bell state circuits in JavaScript and further simulate the quantum behavior.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#what-well-be-making"&gt;
  &lt;/a&gt;
  What we‚Äôll be making
&lt;/h3&gt;

&lt;p&gt;By using a library called &lt;a href="https://quantumjavascript.app/"&gt;Q.js&lt;/a&gt; we can run basic quantum computing circuits inside the Javascript console and add the results to the HTML page. Q.js is an open-source JavaScript library that helps in creating and simulating various quantum circuits.&lt;/p&gt;

&lt;p&gt;Here we are going to have a look at how to use the Q.js library to create a Bell state circuit and simulate it. The Bell state is a special and important quantum circuit involving two qubits. It creates entangled pairs of qubits which have various uses. This circuit is designed using a Hadamard gate(H) and a Controlled-Not gate(CX).&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#demo-circuit"&gt;
  &lt;/a&gt;
  Demo Circuit
&lt;/h3&gt;

&lt;p&gt;First, download the build folder from the Q.js library repo in GitHub. It has the basic structure to begin building your first quantum circuit using Q.js. It also has a &lt;code&gt;build.sh&lt;/code&gt; file but we will not be using it. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/stewdio/q.js/tree/master/build"&gt;https://github.com/stewdio/q.js/tree/master/build&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next, Create a new JavaScript file in the same folder. You can manipulate the DOM elements and create the circuit from the JavaScript console in your browser itself but we are going to use the file to keep it for future reference.&lt;/p&gt;

&lt;p&gt;In our Javascript file, we can then create the circuit object in text format as mentioned in the code. We can also append this circuit to the webpage‚Äôs body using the &lt;code&gt;toDom()&lt;/code&gt; method.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;You should see something like this on your webpage&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tIUiEDBz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mzw0vno2afi80j7i5vp2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tIUiEDBz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mzw0vno2afi80j7i5vp2.png" alt="Image description" width="367" height="315"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The result of simulating any quantum circuit is the probability of getting a particular combination as the output. You can simulate the above circuit using the &lt;code&gt;report$()&lt;/code&gt; method (It returns the results as a string). &lt;/p&gt;

&lt;p&gt;If you display this on your webpage using the traditional JavaScript way you will get something like this.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nyh9jWvb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lt7gtmhrezx0k378ojdx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nyh9jWvb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lt7gtmhrezx0k378ojdx.png" alt="Image description" width="880" height="34"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To display the results on your webpage in a cleaner way you can use the &lt;code&gt;split()&lt;/code&gt; method (split at newline) and save the probability for each two-qubit combination as an array element. &lt;/p&gt;

&lt;p&gt;Because of how &lt;code&gt;.report$()&lt;/code&gt; works the first and last element of the array will be empty strings. The rest of the elements can be displayed on the webpage by adding them to a div and appending it to the body.&lt;/p&gt;

&lt;p&gt;Your final result will look something like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cNQ2z_QS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mvb70s3h6mrvvjlkotxk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cNQ2z_QS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mvb70s3h6mrvvjlkotxk.png" alt="Image description" width="436" height="172"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;There you go! You‚Äôve made your first Quantum Circuit with Javascript. Play around with it and observe how the results change. You can also create your own circuit from scratch by taking help from the API documentation on the Q.js website.&lt;/p&gt;

&lt;p&gt;There‚Äôs no question that quantum computing is going to forever change the cloud. When that day comes, you want a cloud provider that you can trust to stay at the forefront of computing without making life harder for you. &lt;a href="https://link.codesphere.com/HG"&gt;Codesphere&lt;/a&gt; is the first cloud provider that lets you work directly in the cloud environment through an IDE and terminal. Check us out!&lt;/p&gt;

&lt;p&gt;Happy Coding!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>quantum</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Write Better Python¬†Code</title>
      <author>Dharaneeswaran R</author>
      <pubDate>Wed, 29 Dec 2021 15:38:11 +0000</pubDate>
      <link>https://dev.to/dharaneeswaranr/write-better-python-code-51j0</link>
      <guid>https://dev.to/dharaneeswaranr/write-better-python-code-51j0</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;This article has the collection python coding practices that I have learned over last few months for writing more idiomatic python code.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-multiple-assignment"&gt;
  &lt;/a&gt;
  1. Multiple Assignment
&lt;/h2&gt;

&lt;p&gt;Initialise same value for different variables.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Instead of this
&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
&lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;

&lt;span class="c1"&gt;# Use this
&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#2-variable-unpacking"&gt;
  &lt;/a&gt;
  2. Variable Unpacking
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="c1"&gt;# x = 1, y = 2
&lt;/span&gt;
&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="c1"&gt;# x = 1, y = [2, 3, 4, 5]
&lt;/span&gt;
&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="c1"&gt;# x = 1, y = [2, 3, 4], z = 5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#3-swapping-variables"&gt;
  &lt;/a&gt;
  3. Swapping Variables
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Instead of this
&lt;/span&gt;&lt;span class="n"&gt;temp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;
&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;
&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;temp&lt;/span&gt;

&lt;span class="c1"&gt;# Use this
&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#4-name-casing"&gt;
  &lt;/a&gt;
  4. Name Casing
&lt;/h2&gt;

&lt;p&gt;In python &lt;code&gt;snake_case&lt;/code&gt; is preferred over &lt;code&gt;camelCase&lt;/code&gt; for variables and functions names.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Instead of this
&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;isEven&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;pass&lt;/span&gt;

&lt;span class="c1"&gt;# Use this
&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;is_even&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;pass&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#5-conditional-expressions"&gt;
  &lt;/a&gt;
  5. Conditional Expressions
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Instead of this
&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;is_even&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Even"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Odd"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Use this
&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;is_even&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Even"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Odd"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Or this
&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;is_even&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Even"&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="s"&gt;"Odd"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#6-string-formatting"&gt;
  &lt;/a&gt;
  6. String Formatting
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Dumbledore"&lt;/span&gt;
&lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Socks"&lt;/span&gt;

&lt;span class="c1"&gt;# Instead of this
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%s likes %s."&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="c1"&gt;# Or this
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"{} likes {}"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="c1"&gt;# Use this
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt; likes &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;."&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#7-comparison-operator"&gt;
  &lt;/a&gt;
  7. Comparison Operator
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Instead of this
&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"x is a 3 digit number"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Use this
&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"x is a 3 digit number"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#8-iterating-over-a-list-or-tuple"&gt;
  &lt;/a&gt;
  8. Iterating over a list or tuple
&lt;/h2&gt;

&lt;p&gt;We don't need to use indices to access list elements. Instead we can do this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;collection&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;# Instead of this
&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;collection&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;collection&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="c1"&gt;# Use this
&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;collection&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Both of these yields the same output
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#9-using-enumerate"&gt;
  &lt;/a&gt;
  9. Using enumerate()
&lt;/h2&gt;

&lt;p&gt;When you need both indices and values, we can use &lt;code&gt;enumerate()&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;names&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'Harry'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'Ron'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'Hermione'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'Ginny'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'Neville'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;enumerate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;names&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#10-using-set-for-searching"&gt;
  &lt;/a&gt;
  10. Using Set for searching
&lt;/h2&gt;

&lt;p&gt;Searching in a set is faster(O(1)) compared to list(O(n)).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Instead of this 
&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'a'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'e'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'i'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'o'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'u'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;is_vowel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;char&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;char&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Vowel"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Use this
&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'a'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'e'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'i'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'o'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'u'&lt;/span&gt;&lt;span class="p"&gt;}]&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;is_vowel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;char&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;char&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Vowel"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#11-list-comprehension"&gt;
  &lt;/a&gt;
  11. List comprehension
&lt;/h2&gt;

&lt;p&gt;Consider the following program to multiply the elements of the list into 2 if they are even.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;

&lt;span class="c1"&gt;# Instead of this
&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Use this
&lt;/span&gt;&lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#12-iterating-dictionary"&gt;
  &lt;/a&gt;
  12. Iterating Dictionary
&lt;/h2&gt;

&lt;p&gt;Using &lt;code&gt;dict.items()&lt;/code&gt; to iterate through a dictionary.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;roll_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="mi"&gt;315&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"Dharan"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mi"&gt;705&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"Priya"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;# Instead of this
&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;roll_name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;roll_name&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="c1"&gt;# Do this
&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;roll_name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#sources"&gt;
  &lt;/a&gt;
  Sources
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hub.packtpub.com/write-python-code-or-pythonic-code/"&gt;Do you write Python Code or Pythonic Code?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://realpython.com/python-f-strings/"&gt;Python 3's f-Strings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arielortiz.info/s201911/pycon2019/docs/design_patterns.html"&gt;Design Patterns in Python for the Untrained Eye&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.python-guide.org/writing/style/"&gt;The Hitchhiker's Guide to Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>python</category>
      <category>productivity</category>
      <category>codequality</category>
      <category>programming</category>
    </item>
  </channel>
</rss>
