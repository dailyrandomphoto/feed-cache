<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Finding and trying out hidden gems in Source forge</title>
      <author>Cybear Tron</author>
      <pubDate>Thu, 29 Jul 2021 05:20:12 +0000</pubDate>
      <link>https://dev.to/cybeartron/finding-and-trying-out-hidden-gems-in-source-forge-o7f</link>
      <guid>https://dev.to/cybeartron/finding-and-trying-out-hidden-gems-in-source-forge-o7f</guid>
      <description>&lt;p&gt;So Hwlo there!!! I am Cybear Tron and this is the first post in our series- "Tryin em out!!" Here we try different and sometimes weird things (mostly related to tech like os, programming languages, software, game engines, sites etc.).&lt;br&gt;
In this article we will go through a plethora of hidden gems in sourceforge and maybe find something that we can use in our daily life :D Lets continue:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-sourceforge-so-you-may-ask-what-the-hell-is-this-source-forge-you-are-talking-about-so-sourceforge-is-"&gt;
  &lt;/a&gt;
  What is SourceForge? So you may ask what the hell is this Source Forge you are talking about? So SourceForge is :
&lt;/h2&gt;

&lt;p&gt;SourceForge is a web service that offers software consumers a centralized online location to control and manage open-source software projects and research business software.&lt;/p&gt;

&lt;p&gt;Info: Wikipedia&lt;/p&gt;

&lt;p&gt;So totally, Source forge is a place where developers upload and manage their open source software and also provide a free place to find people who will download your app. I myself use Sourceforge for hosting my little software (which is actually awful). It has got some downloads already (a wonder cuz its actually very bad).&lt;/p&gt;

&lt;p&gt;Criteria on which I will find and consider stuff as gems:&lt;br&gt;
The downloads this week is less than hundred, it won't matter to me how much downloads they have in total&lt;br&gt;
I will not show any app that I can't actually use (Like A js or c++ library thingie)&lt;br&gt;
I will not show any app that I need to compile. Like hey use an https server and install php and run it then.. I won't do it&lt;br&gt;
I will actually show which apps caught my eye... I am sorry but there are thousands of stuff in the place I can't go over and see everything&lt;br&gt;
I will show those whom I will actually USE&lt;br&gt;
P.S. Please don't call me things for deciding whether things are gems or not in the comments.. I will show those which I personally find a gems and that I could actually run and things... Please I am a new blogger and English is not my native language, so please don't roast me... I will state the upsides and the downsides of the apps too!! I will also only choose 3 apps today!!&lt;/p&gt;

&lt;p&gt;So I first went into the open source section of the site and now the adventure begins yay!!!&lt;/p&gt;

&lt;p&gt;1ST APP: SLEEK:-&lt;br&gt;
So I found this little app called Sleek. Its a todo app. I downloaded it... I didn't have much expectations from it....&lt;/p&gt;

&lt;p&gt;WHEN I RAN IT!! I HAD TO EAT MY WORDS!!!!&lt;/p&gt;

&lt;p&gt;The beautiful UI it presented me with!! I fell in love with it at first glance!! It had a dark mode too!&lt;/p&gt;

&lt;p&gt;I Thought of writing a Hwlo World algorithm in it.&lt;/p&gt;

&lt;p&gt;image.png&lt;/p&gt;

&lt;p&gt;The sheer beauty and simplicity!! Ok So this has received a new daily user now!! I will use this for writing algorithms for my tasks now!!! It really was sleek btw!!&lt;/p&gt;

&lt;p&gt;Upsides:&lt;br&gt;
It was damn beautiful&lt;br&gt;
User Friendly UI&lt;br&gt;
Actually easy to use and not hard to work with&lt;br&gt;
Dark Mode POG!!&lt;br&gt;
The Main downside was that I couldn't figure out how to make a new todo.. Thats what I didnt exactly like about it...&lt;br&gt;
Link: Sleek&lt;/p&gt;

&lt;p&gt;2ND APP: CyberFox Web browser:-&lt;br&gt;
This was a web browser as you people had&lt;/p&gt;

&lt;p&gt;Ok during the installer it asked me to import stuff like bookmarks from other browsers... But it only had the options of Chrome and Microsoft Internet explorer. I use Edge, So that was something the devs should pay attention to. Ok after the install 4 damn tabs were opened.&lt;/p&gt;

&lt;p&gt;2 of which didn't actually load and showed an error:&lt;/p&gt;

&lt;p&gt;image.png&lt;/p&gt;

&lt;p&gt;I mean it couldn't connect to its own site's server, that's sad... So I quickly closed the error-ed tabs and started seeing the loaded ones.&lt;/p&gt;

&lt;p&gt;The 1st one was one that allowed me to set preferences up, That seemed nice.&lt;/p&gt;

&lt;p&gt;image.pngAllowing me to Set a menu style, Theme Style and a home style and then syncing....&lt;/p&gt;

&lt;p&gt;After setting them up I am at a start menu that now looks like :&lt;/p&gt;

&lt;p&gt;image.png&lt;/p&gt;

&lt;p&gt;I mean lets search some weird stuff right?&lt;/p&gt;

&lt;p&gt;image.pngOh yea I am there!! So whenever I use a web browser I need bitwarden!! Its my password manager actually!!!&lt;/p&gt;

&lt;p&gt;Lemme try installing it.&lt;/p&gt;

&lt;p&gt;image.pngI was finding it but then found a dark mode, POG! Ah I couldnt find a way to install Bitwarden... Sad... I may use this for testing and all... Still nice actually!&lt;/p&gt;

&lt;p&gt;Upsides:&lt;br&gt;
Its actually a less ram hungry alternate to firefox and chrome&lt;br&gt;
Its free and a little nice actually&lt;br&gt;
It will serve well as an alternate browser for different things and actually testing some things like SEO and Looks of web builds&lt;br&gt;
Downsides:&lt;br&gt;
I couldn't install any extensions actually though it said I could&lt;br&gt;
The UI was actually weird&lt;br&gt;
I couldn't do most of the config I actually can in a browser like Changing the search engine, The default zoom height etc.&lt;br&gt;
My review for it has ended we will move to the next app...&lt;/p&gt;

&lt;p&gt;Link: Cyberfox Download&lt;/p&gt;

&lt;p&gt;3RD APP: JLITE:-&lt;br&gt;
This is a lightweight java ide that I found.. Those who don't know what an IDE is:&lt;/p&gt;

&lt;p&gt;Its an Integrated Development Environment. In layman's terms it is a level up from code editors (Like Vscode and notepad++) and 2 levels up from text editors(Like Notepad) with autocomplete, full debugging support and all those juicy features a dev needs for large projects.. Example: Eclipse, Visual Studio etc.&lt;/p&gt;

&lt;p&gt;So When I ran this JLite I had to first set up java sdk and then I was at this page:&lt;/p&gt;

&lt;p&gt;image.png&lt;/p&gt;

&lt;p&gt;Now I guess I gotta create a new project&lt;/p&gt;

&lt;p&gt;image.pngDone Lemme write a Hwlo World Program&lt;/p&gt;

&lt;p&gt;image.pngNoice worked!!&lt;/p&gt;

&lt;p&gt;Hmmm What about a normal gui with swing?&lt;/p&gt;

&lt;p&gt;image.pngIt works but the downside here is the lack of Keyboard shortcuts to get around easily... I am gonna use this as my main Java IDE from now btw (I use vscode for this and its not good for Java actually so yeah...)&lt;/p&gt;

&lt;p&gt;Upsides:&lt;br&gt;
It was easy to use&lt;br&gt;
It looked nice&lt;br&gt;
Easy setup&lt;br&gt;
I enjoyed writing code in it&lt;br&gt;
Downsides:&lt;br&gt;
No Dark Mode (Sad Cybear Tron noises)&lt;br&gt;
No actually too useful keybinds and no options to set some up&lt;br&gt;
Link: JLite Download&lt;/p&gt;

&lt;p&gt;SO THAT'S IT FOR TODAY! We will come back with more different stuff in the next blog!!&lt;br&gt;
I actually learnt something...... How to make a software more attractive and more eye-catchy and actually user friendly!!&lt;br&gt;
Till Then BYE!!&lt;br&gt;
btw if u want to see my app that i mentioned check it out (its bad actually but u may try): my app&lt;/p&gt;

</description>
      <category>software</category>
      <category>sourceforge</category>
      <category>review</category>
      <category>trying</category>
    </item>
    <item>
      <title>Typescript New Version Features</title>
      <author>Stacksjar</author>
      <pubDate>Thu, 29 Jul 2021 04:44:40 +0000</pubDate>
      <link>https://dev.to/stacksjar/typescript-new-version-features-opc</link>
      <guid>https://dev.to/stacksjar/typescript-new-version-features-opc</guid>
      <description>&lt;p&gt;TypeScript is a programming language developed and maintained by Microsoft. It is a strict syntactical superset of JavaScript and adds optional static typing to the language.&lt;/p&gt;

&lt;p&gt;Typescript announced its Beta version 4.3 on 1st April 2021, to install this version you could use bellow command&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm install typescript@beta&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#template-string-type-improvements"&gt;
  &lt;/a&gt;
  Template String Type Improvements
&lt;/h6&gt;

&lt;p&gt;New version introduces template literal types for contextually typed template literal expressions.Due to which when inferring to a template literal target type, typescript now permits the source type to also be a template literal type. &lt;/p&gt;

&lt;p&gt;Below are some examples of improved assignment relations:&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;type Color = "red" | "blue";&lt;br&gt;
type Quantity = "one" | "two";&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;



&lt;p&gt;&lt;code&gt;type SeussFish = `${Quantity | Color} fish`;&lt;br&gt;
// same as&lt;br&gt;
//  type SeussFish = "one fish" | "two fish"&lt;br&gt;
//         | "red fish" | "blue fish";&lt;br&gt;
…or match patterns of other string-like types.&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;



&lt;p&gt;&lt;code&gt;declare let s1: `${number}-${number}-${number}`;&lt;br&gt;
declare let s2: `1-2-3`;&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;



&lt;p&gt;&lt;code&gt;// Works!&lt;br&gt;
s1 = s2;&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#static-index-signatures"&gt;
  &lt;/a&gt;
  static Index Signatures
&lt;/h6&gt;

&lt;p&gt;Index signatures allow us set more properties on a value than a type explicitly declares. With latest version index signatures can now be declared as static.&lt;/p&gt;

&lt;p&gt;This post was Originally written here:- &lt;a href="https://stacksjar.com/post/typescript-new-version-features"&gt;Typescript New Version Features&lt;/a&gt;&lt;/p&gt;

</description>
      <category>typescript</category>
      <category>programming</category>
      <category>productivity</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Why I'm Not One of the Guys</title>
      <author>Eevis (she/her)</author>
      <pubDate>Thu, 29 Jul 2021 04:41:50 +0000</pubDate>
      <link>https://dev.to/eevajonnapanula/why-i-m-not-one-of-the-guys-14nc</link>
      <guid>https://dev.to/eevajonnapanula/why-i-m-not-one-of-the-guys-14nc</guid>
      <description>&lt;p&gt;"Hey, guys" is a phrase I often hear.  It usually continues with words like "what do you think about this?" And if the context is within a mixed-gender group, I feel left out. I feel like they're talking to everyone else (or, at least, all who identify as a man) but me. &lt;/p&gt;

&lt;p&gt;I know many native English speakers use the phrase as gender-neutral. &lt;br&gt;
But it is not, and in this blog post, I will discuss the problems of using that expression. I will also address some other aspects of the "man-default." One of the things it means is, for example, that if we are talking about a developer, that developer is often referred to as "he" (so, "A developer found a bug. He started fixing it").&lt;/p&gt;

&lt;p&gt;This is a very personal topic for me, as I've had to fight for my spot as a developer, and I'm still facing these assumptions that I'm less of a professional because of my gender. So if you don't recognize the problem, please just believe me and don't start mansplaining how, for example, "you guys" is a gender-neutral term, and I should just suck it up. Please just don't. &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#the-problem-of-mandefault"&gt;
  &lt;/a&gt;
  The Problem of Man-Default
&lt;/h2&gt;

&lt;p&gt;When you refer to a hypothetical person whose gender is unknown, what is the pronoun you use? If the answer is "he," then congrats, you've found the man-default. It means that you default to man when talking about someone whose gender you don't know. &lt;/p&gt;

&lt;p&gt;Man-default can also be found in expressions such as "manning the station," "man-hours," or "chairman." It is visible in other languages as well. For example, in Finnish, despite having only one personal pronoun for all genders, we have words such as "lakimies" (=lawyer, literal translation would be "law man"), "palomies" (fireman), or "miehittää" (same as in "manning the station"). &lt;/p&gt;

&lt;p&gt;Another example of man-default comes from sports. Often men's league is referred to as "the league," and then there is the women's league with the word "women" in it. For example, we have the NBA (National Basketball Association) and WNBA (Women's National Basketball Association). It displays men as default and women as "other," something that needs an explanation. &lt;/p&gt;

&lt;p&gt;But you know, the language we use shapes the reality around us. If we always speak about men doing something and especially default to men when talking about fields where men are the majority, we maintain those structures and keep the image up. &lt;/p&gt;

&lt;p&gt;Ok, this might sound a bit abstract, but let me try to explain it a bit further: If we always refer to software developers as "he," we (unconsciously) build an image where all software developers are men. It leads to situations where men are seen as better developers, because hey, of course. And then women are seen as less of professionals because they aren't &lt;em&gt;men&lt;/em&gt; who are the default. And this is how unconscious bias, which leads to discrimination, builds. &lt;/p&gt;

&lt;p&gt;It is also a topic that has become visible with translation algorithms. Nicolas Kayser-Bril wrote &lt;a href="https://algorithmwatch.org/en/google-translate-gender-bias/"&gt;a piece for Algorithm Watch&lt;/a&gt; about how Google Translate systematically changes the gender for translations when the initial gender doesn't fit the stereotypes. &lt;/p&gt;

&lt;p&gt;There was also an interesting &lt;a href="https://twitter.com/vuokko/status/1369185483683733505?s=20"&gt;Twitter-thread about Google Translate and pronouns&lt;/a&gt; during the International Women's Day in 2021:  &lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ceFbjpNt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/Ev-fL8qWYAAbUX2.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--6DZOwa0A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/737015560970604545/LUqSN9I8_normal.jpg" alt="Vuokko Aro profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Vuokko Aro
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @vuokko
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      In Finnish we don’t have gendered pronouns. &lt;br&gt;&lt;br&gt;These translations from our gender-neutral language into English reveal a lot of bias in the world and in tech RT &lt;a href="https://twitter.com/annabrchisky"&gt;@annabrchisky&lt;/a&gt;: Maailma ei ole vielä valmis. Eikä ole teknologiakaan.&lt;br&gt;&lt;br&gt;&lt;a href="https://twitter.com/hashtag/InternationalWomensDay"&gt;#InternationalWomensDay&lt;/a&gt; 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      07:17 AM - 09 Mar 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1369185483683733505" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1369185483683733505" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1369185483683733505" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;These examples provide some fascinating insight into how language shapes reality. These translations are a direct consequence of the data used to train these algorithms. We, humans, are the same - if the data we get defaults always to, for example, men being the developers, we tend to believe that being a developer is meant only for men.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#guys-is-not-gender-neutral"&gt;
  &lt;/a&gt;
  Guys is Not Gender Neutral
&lt;/h2&gt;

&lt;p&gt;Back to the term "guys." Some argue that it is a gender-neutral term. Well, it is not. It originates from the word "guy," which is singular and means a man. Yes, I know, you might have learned it and been using it believing it is gender-neutral. That is ok - you didn't know. You are not a bad person. But could you please remember from now on that there are people who feel excluded when someone uses the word? Thank you!&lt;/p&gt;

&lt;p&gt;Sara Bent from Hotjar writes about how they had a &lt;a href="https://www.hotjar.com/blog/gender-inclusive-language-workplace/"&gt;"Guys Jar"-challenge&lt;/a&gt;, a version of a swear jar. In their version, every time someone participating used the word 'guys' to refer to a group of mixed (or only-women) people, they had to pay. &lt;/p&gt;

&lt;p&gt;I like how Sara puts the idea of using "guys" (from the blog post linked above):&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Even though most people who use the term don't do so with the intent of it being sexist or exclusive of women, &lt;strong&gt;it can and often does cause women to feel left out of the conversation.&lt;/strong&gt; Imagine you used 'gals' to refer to a room full of men and women—do you think the men would respond?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I've had and read many conversations with people (often with cis-men) about why they think "guys" is a gender-neutral term. One of the "best" arguments I've heard so far is that "we can't change the way soccer-moms in suburbs in the States use this term, so using it is ok for us as well." Well yeah, one thing is correct; we probably can't change that. &lt;/p&gt;

&lt;p&gt;But you know, the conversation where they said this wasn't anywhere near those soccer moms - it was in Finland, in a professional context where English is the language used. And in a group where someone had just said they feel excluded when others use the word "guys" when referring to them. It was about the language used in the said setting. That felt... absurd.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#well-why-dont-i-just-speak-up"&gt;
  &lt;/a&gt;
  Well, Why Don't I Just Speak Up?
&lt;/h2&gt;

&lt;p&gt;I don't know about you, but when I'm in the minority, and I've seen that raising these issues sometimes gets even aggressive responses, it is hard to speak up. &lt;/p&gt;

&lt;p&gt;Another thing that makes speaking up hard is that when I do, people usually assume I'm criticizing them, not their actions. These people tend to feel insulted, and you know how people are when they feel humiliated. The focus shifts to &lt;em&gt;their&lt;/em&gt; feelings and me trying to tell them that no, I'm not assuming you're a terrible person. I'm only trying to bring to the attention things that you probably unconsciously are doing. &lt;/p&gt;

&lt;p&gt;I've had good examples of when people have listened when I've brought this issue to attention. Still, more often, it ends up in an endless conversation about soccer moms and other non-relevant arguments. It gets tiring very soon.&lt;/p&gt;

&lt;p&gt;And you know... It shouldn't be the responsibility of the minority to try to fix these issues alone. If it's something that has been brought up in a community before, the majority has the responsibility to act. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-can-i-use-then"&gt;
  &lt;/a&gt;
  What Can I Use, Then?
&lt;/h2&gt;

&lt;p&gt;So, you've decided to change your vocabulary. Thank you! I really appreciate that! You might be wondering what to use then. Here are some alternatives and considerations.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#alternatives-for-guys"&gt;
  &lt;/a&gt;
  Alternatives for Guys
&lt;/h3&gt;

&lt;p&gt;There are multiple alternatives you can use instead of "hey guys." Here are some examples with &lt;a href="https://twitter.com/krees/status/1106617681116045312?s=20"&gt;Kim Rees' tweet&lt;/a&gt; about some options:&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--G_KSvAMI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/850024283787087872/IHMIo5ak_normal.jpg" alt="Kim Rees (they/she) profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Kim Rees (they/she)
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @krees
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Alternatives to "Hey guys"&lt;br&gt;hey team&lt;br&gt;hey crew&lt;br&gt;hey all&lt;br&gt;hey folks&lt;br&gt;hey people&lt;br&gt;hey peeps&lt;br&gt;hey y'all&lt;br&gt;hey everyone&lt;br&gt;hey pals&lt;br&gt;hey friends&lt;br&gt;&lt;br&gt;hey
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      18:06 PM - 15 Mar 2019
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1106617681116045312" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1106617681116045312" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1106617681116045312" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;h3&gt;
  &lt;a href="#using-they-instead-of-he-or-she-for-that-matter"&gt;
  &lt;/a&gt;
  Using They Instead of He (or She for That Matter)
&lt;/h3&gt;

&lt;p&gt;When talking about a person whose gender you don't know - wheater a real person, or a hypothetical person (such as a hypothetical developer), default to "they"-pronoun. &lt;/p&gt;

&lt;p&gt;It might feel a bit weird at first, but I promise you, you'll get used to it. I speak from experience :) &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#being-aware-of-mandefault"&gt;
  &lt;/a&gt;
  Being Aware of Man-Default
&lt;/h3&gt;

&lt;p&gt;One more thing I want to point out is being aware of the man-default. Start paying attention to the words you use; do they keep up the picture of a man being the default? Yes, it's a challenging task to do because we use language unconsciously and automatically. But you can try anyway.&lt;/p&gt;

&lt;p&gt;There are usually gender-neutral words to use instead of the ones defaulting to man. Here are some examples:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; Fireman -&amp;gt; Firefighter&lt;/li&gt;
&lt;li&gt;Chairman -&amp;gt; Chairperson&lt;/li&gt;
&lt;li&gt;Freshman -&amp;gt; First-year student&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And so on. The internet is full of examples, so go and educate yourself!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping Up
&lt;/h2&gt;

&lt;p&gt;So, TLDR; "Hey guys" is not a gender-neutral expression, and there are lots of people who feel excluded when someone uses it to refer to a group where they belong. I'm one of them. &lt;/p&gt;

&lt;p&gt;There are better alternatives for the expression, and we should use them. Also, using "he" as a default pronoun is problematic, so let's use "they." And let's be aware of the fact that man is seen as a default in many places, so let's pay attention to the words we use.&lt;/p&gt;

&lt;p&gt;You can find more examples of non-sexist language in &lt;a href="https://geekfeminism.wikia.org/wiki/Nonsexist_language"&gt;Geek Feminism Wiki's guide on non-sexist language&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Cover photo by &lt;a href="https://unsplash.com/@etiennegirardet?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Etienne Girardet&lt;/a&gt; on &lt;a href="https://unsplash.com/?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>inclusion</category>
      <category>culture</category>
      <category>webdev</category>
      <category>womenintech</category>
    </item>
    <item>
      <title>React Navigation 6.x</title>
      <author>kpiteng</author>
      <pubDate>Thu, 29 Jul 2021 03:39:21 +0000</pubDate>
      <link>https://dev.to/kpiteng/react-navigation-6-x-29m8</link>
      <guid>https://dev.to/kpiteng/react-navigation-6-x-29m8</guid>
      <description>&lt;p&gt;Hello Developers! Let's see what's new in React Navigation 6.x.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#key-points-"&gt;
  &lt;/a&gt;
  Key Points -
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Installation&lt;/li&gt;
&lt;li&gt;Params are now overwritten on navigation instead of merging&lt;/li&gt;
&lt;li&gt;By default, modals in iOS uses presentation style and in android it uses slide animation&lt;/li&gt;
&lt;li&gt;Drawer now uses a slide animation by default on iOS&lt;/li&gt;
&lt;li&gt;Headers by default in Drawer &amp;amp; Bottom Tab, No more need to add Stack Navigator&lt;/li&gt;
&lt;li&gt;Material Top Tabs now uses ViewPager based implementation with native experience&lt;/li&gt;
&lt;li&gt;UI Elements Library with rich feature component to be used in React Navigation&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Minimum requirements&lt;/strong&gt;&lt;br&gt;
React Navigation 6 requires at least &lt;code&gt;react-native@0.63.0.&lt;/code&gt; If you’re using Expo, your SDK needs to be at least &lt;code&gt;41&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NPM&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install @react-navigation/native@next @react-navigation/stack@next
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;YARN&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn add @react-navigation/native@next @react-navigation/stack@next
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;React Navigation using some core utilities and those are used by navigators to create navigation structures in the app.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Following libraries needs to be install -&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;react-native-gesture-handler
react-native-reanimated
react-native-screens 
React-native-safe-area-context
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Install dependency -&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;NPM&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install react-native-reanimated react-native-gesture-handler react-native-screens react-native-safe-area-context
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;YARN&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn add react-native-reanimated react-native-gesture-handler react-native-screens react-native-safe-area-context
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;From React Native 0.60 and higher, linking is automatic. So you don't need to run &lt;code&gt;react-native link&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If you're on a Mac and developing for iOS, you need to install the pods (via Cocoapods) to complete the linking.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npx pod-install ios&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Older versions of some libraries are longer supported,&lt;/strong&gt; React Navigation requires newer versions of the following libraries:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;react-native-safe-area-context &amp;gt;= 3.0.0
react-native-screens &amp;gt;= 2.15.0
react-native-tab-view &amp;gt;= 3.0.0
react-native &amp;gt;= 0.63.0
expo - 40+ (if you use Expo)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Recommended - &lt;a href="https://www.kpiteng.com/blogs/securing-react-native-application"&gt;Securing React Native Application&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#params-are-now-overwritten-on-navigation-instead-of-merging-"&gt;
  &lt;/a&gt;
  Params are now overwritten on navigation instead of merging -
&lt;/h3&gt;

&lt;p&gt;When navigating to an existing component/screen, params are merged from the initial version. Example - Let’s say there is existing article screen with the following params:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  "articleTitle": "React Navigation",
  "articleBody": "Top React Navigation Library"
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When you navigate with navigation.navigate &lt;code&gt;("Article", { "articleTitle": "Smart Home"})&lt;/code&gt;, so after param merge it will look like&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{ 
  "articleTitle": "Smart Home", 
  "articleBody": "Top React Navigation Library"
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So, Merging behavior is useful in a few scenarios, but it’s problematic in other cases. In React Navigation 6, no more default merge, instead it will be overwritten. If you want merge params then you can do it by explicitly by merge: true like this,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;navigation.navigate({
  name: “Article”,
  params: { articleTitle: 'Smart Home' },
  merge: true,
});   
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Recommended - &lt;a href="https://www.kpiteng.com/blogs/top-10-react-hooks-library"&gt;Top 10 React Hooks Library&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#by-default-modals-in-ios-uses-presentation-style-and-in-android-it-uses-slide-animation-"&gt;
  &lt;/a&gt;
  By default, modals in iOS uses presentation style and in android it uses slide animation -
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;iOS -&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;mode="modal" is removed in favor of presentation: "modal"&lt;/strong&gt;, New presentation options there, allow developers to customer whether screen is modal or screen(basic).&lt;/p&gt;

&lt;p&gt;iOS having &lt;strong&gt;presentation: "modal"&lt;/strong&gt; - which shows a new presentation style modal introduced in iOS 13. It also manages status bar height in the header automatically, that ideally we did manually before.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Android -&lt;/strong&gt;&lt;br&gt;
Previously we didn’t have modal animation in Android, but now there is a slide from the bottom animation. If you don’t want to use new animation then you can change it using &lt;a href="https://reactnavigation.org/docs/6.x/stack-navigator#animations"&gt;animation related options&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;New &lt;strong&gt;presentation: "transparentModal"&lt;/strong&gt; option to make it easier to bulier transparent modals. &lt;strong&gt;Developers can mix regular screens with modal screens in the same stack.&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Recommended - &lt;a href="https://www.kpiteng.com/blogs/improve-react-native-app-performance"&gt;How to improve the performance of React Native Application?&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;
  &lt;a href="#drawer-now-uses-a-slide-animation-by-default-on-ios-"&gt;
  &lt;/a&gt;
  Drawer now uses a slide animation by default on iOS -
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Installation -&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;NPM&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install @react-navigation/drawer@next
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;YARN&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn add @react-navigation/drawer@next
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There is a new implementation based on the Reanimated Library v2, if it’s not available then it will take the old implementation. To force apply to the old implementation using - &lt;code&gt;useLegacyImplementation={true}&lt;/code&gt; to Drawer.Navigator.&lt;/p&gt;

&lt;p&gt;Slide animation is default in iOS, Still you want to keep previous behavior then you can specify, &lt;code&gt;drawerType: "front"&lt;/code&gt; in screenOptions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#headers-by-default-in-drawer-amp-bottom-tab-no-more-need-to-add-stack-navigator-"&gt;
  &lt;/a&gt;
  Headers by default in Drawer &amp;amp; Bottom Tab, No more need to add Stack Navigator -
&lt;/h3&gt;

&lt;p&gt;TabScreen &amp;amp; Drawer now show a header by default similar to the screen in stack navigator.&lt;/p&gt;

&lt;p&gt;If you want previous behavior not to keep the header then you can use, headerShown: false in screenOptions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#material-top-tabs-now-uses-viewpager-based-implementation-with-native-experience-"&gt;
  &lt;/a&gt;
  Material Top Tabs now uses ViewPager based implementation with native experience -
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Installation&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;NPM&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install @react-navigation/material-top-tabs@next react-native-pager-view
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;YARN&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn add @react-navigation/material-top-tabs@next react-native-pager-view
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;react-native-tab-view&lt;/code&gt; dependency is upgraded to the latest version (3.x) which now uses &lt;code&gt;react-native-pager-view&lt;/code&gt; instead of Reanimated and Gesture Handler. Same like bottom tabs, the tabBarOptions prop was removed and the options from there were moved to &lt;strong&gt;screen's options&lt;/strong&gt; instead.&lt;/p&gt;

&lt;p&gt;Previously &lt;code&gt;lazy&lt;/code&gt; props is on stack level now shift to lazy per-screen configuration for material top tabs.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ui-elements-library-with-rich-feature-component-to-be-used-in-react-navigation-"&gt;
  &lt;/a&gt;
  UI Elements Library with rich feature component to be used in React Navigation -
&lt;/h3&gt;

&lt;p&gt;React Navigation added a new package which contains multiple UI Elements related to navigation like, Header, Header Title, Header Background Component and many more. So developers can use those components in all navigations.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Installation&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;NPM&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install @react-navigation/elements@next react-native-safe-area-context
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;YARN&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn add @react-navigation/elements@next react-native-safe-area-context
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;import&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { useHeaderHeight } from '@react-navigation/elements';
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://reactnavigation.org/docs/6.x/elements"&gt;Discover Element Library for more details!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Thanks for reading Blog!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;KPITENG | DIGITAL TRANSFORMATION&lt;br&gt;
&lt;a href="http://www.kpiteng.com/blogs"&gt;www.kpiteng.com/blogs&lt;/a&gt; | &lt;a href="mailto:hello@kpiteng.com"&gt;hello@kpiteng.com&lt;/a&gt;&lt;br&gt;
Connect | Follow Us On - &lt;a href="https://www.linkedin.com/company/kpiteng/"&gt;Linkedin&lt;/a&gt; | &lt;a href="https://www.facebook.com/kpiteng"&gt;Facebook&lt;/a&gt; | &lt;a href="https://www.instagram.com/kpiteng"&gt;Instagram&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>reactnative</category>
      <category>reactnavigation</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Typescript vs Javascript : Which one should you use for your next project ?</title>
      <author>Suhail Kakar</author>
      <pubDate>Thu, 29 Jul 2021 03:36:06 +0000</pubDate>
      <link>https://dev.to/suhailkakar/typescript-vs-javascript-which-one-should-you-use-for-your-next-project-3ei3</link>
      <guid>https://dev.to/suhailkakar/typescript-vs-javascript-which-one-should-you-use-for-your-next-project-3ei3</guid>
      <description>&lt;h3&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h3&gt;

&lt;p&gt;JavaScript is a scripting language for building dynamic web pages. It adhered to client-side development principles, thus it operates entirely within the user's web browser and requires no resources from the web server. Javascript may also be used with other technologies such as REST APIs, XML, and others.&lt;/p&gt;

&lt;p&gt;Typescript is a superset of Javascript. It is a statically built language for writing Javascript code that is straightforward and simple. It may be used with Node.js or any browser that supports ECMAScript 3 or above. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#difference-between-javascript-and-typescript"&gt;
  &lt;/a&gt;
  Difference Between Javascript and Typescript
&lt;/h3&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Typescript&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Javascript&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;td&gt;To make the code comprehensible for browsers, it will convert to JavaScript code.&lt;/td&gt;
&lt;td&gt;Can be directly used in browsers&lt;/td&gt;

&lt;tr&gt;
&lt;td&gt;There is support for ES3, ES4, ES5 and ES6&lt;/td&gt;
&lt;td&gt;No support for compiling additional ES3, ES4, ES5 or ES6 features&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;During the compilation process, errors can be identified and rectified.&lt;/td&gt;
&lt;td&gt;Because it is an interpreted language, errors can only be discovered during runtime.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Since it is a superset, all the JavaScript libraries, and other JavaScript code works without any changes&lt;/td&gt;
&lt;td&gt;JS libraries work by default&lt;/td&gt;
&lt;/tr&gt;
&lt;td&gt;Functions can have optional parameters&lt;/td&gt;
&lt;td&gt;This feature is not possible in JavaScript&lt;/td&gt;

&lt;tr&gt;
&lt;td&gt;Numbers, Strings are considered as interfaces.&lt;/td&gt;
&lt;td&gt;Number, string are objects.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Powerful and intuitive language&lt;/td&gt;
&lt;td&gt;Neat and clean, most suitable for simple web applications&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Supports modules, generics and interfaces to define data&lt;/td&gt;
&lt;td&gt;No support for modules, generics or interface&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;The community support is still growing and not so huge&lt;/td&gt;
&lt;td&gt;Huge community support, including extensive documentation and assistance in resolving issues.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Prototyping is possible&lt;/td&gt;
&lt;td&gt;Prototyping support is not there&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Takes time to learn and code, scripting knowledge is a must.&lt;/td&gt;
&lt;td&gt;Can be learned on the go, no prior scripting experience is needed.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#features-of-javascript"&gt;
  &lt;/a&gt;
  Features of Javascript
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;It's utilised on both the client and server sides.&lt;/li&gt;
&lt;li&gt;It's simple to learn and use, and it's a cross-platform language.&lt;/li&gt;
&lt;li&gt;Strong Testing Workflow&lt;/li&gt;
&lt;li&gt;It's a dynamic language: flexible and powerful&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#features-of-typescript"&gt;
  &lt;/a&gt;
  Features of Typescript
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;It's a dynamic language that's both versatile and strong.&lt;/li&gt;
&lt;li&gt;Offered great productivity for developers &amp;amp; Maintainability&lt;/li&gt;
&lt;li&gt;Code 'discoverability' &amp;amp; refactoring&lt;/li&gt;
&lt;li&gt;Optional Static Type Annotation / Static Typing&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#which-one-is-better-"&gt;
  &lt;/a&gt;
  Which one is better ?
&lt;/h3&gt;

&lt;p&gt;JavaScript is excellent for experienced developers working on relatively small coding tasks. However, if you have a development team with experience and understanding, Typescript is the best alternative.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;I hope you found this article helpful. If you need any help please let me know at comment section&lt;/p&gt;

&lt;p&gt;Let's connect on  &lt;a href="https://twitter.com/suhailkakar"&gt;Twitter&lt;/a&gt;  and  &lt;a href="https://www.linkedin.com/in/suhailkakar/"&gt;LinkedIn&lt;/a&gt;  &lt;/p&gt;

&lt;p&gt;👋 Thanks for reading, See you next time&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>typescript</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>Torrenting from your terminal 💻</title>
      <author>4855062503</author>
      <pubDate>Thu, 29 Jul 2021 03:08:36 +0000</pubDate>
      <link>https://dev.to/4855062503/torrenting-in-the-command-line-5gfa</link>
      <guid>https://dev.to/4855062503/torrenting-in-the-command-line-5gfa</guid>
      <description>&lt;p&gt;One of my favorite ways to torrent is by using &lt;a href="https://lynx.invisible-island.net/"&gt;lynx 🐆&lt;/a&gt; along with &lt;a href="https://github.com/rakshasa/rtorrent"&gt;rtorrent 🌊&lt;/a&gt; to effortlessly download and then torrent files using only my terminal window.&lt;/p&gt;

&lt;p&gt;The benefits of using lynx to source torrents are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;you can manually choose what cookies are saved to your computer (easily tap 'N' to deny all cookies from a domain)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;javascript is disabled&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;no obscene advertisements / malvertisements are shown to you, which are usually common on torrent search engines&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;vim bindings 💪 (if you want them)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The basics of using lynx is something like this:&lt;/p&gt;

&lt;p&gt;To get to the torrent website:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;lynx anytorrentwebsite.com
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once you are at the download page, you only have to press &lt;code&gt;D&lt;/code&gt; to download the torrent file.&lt;/p&gt;

&lt;p&gt;You can then press &lt;code&gt;q&lt;/code&gt; to close lynx.&lt;/p&gt;

&lt;p&gt;The directory which you called lynx from in your terminal will be the directory that the .torrent file is saved to.&lt;/p&gt;

&lt;p&gt;From there, you can call rtorrent with the .torrent file as your argument.&lt;/p&gt;

&lt;p&gt;E.g.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;rtorrent download.torrent
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then press up arrow key to select the torrent followed by &lt;code&gt;ctrl-s&lt;/code&gt; to start the torrent.&lt;/p&gt;

&lt;p&gt;Once the file is 100% downloaded, (it will say), press &lt;code&gt;ctrl-q&lt;/code&gt; to quit rtorrent.&lt;/p&gt;

&lt;p&gt;If you have (IINA)[&lt;a href="https://iina.io/"&gt;https://iina.io/&lt;/a&gt;] installed, and what you downloaded was a video file, then you can call:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;open -a IINA {video-directory}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will start your movie 🍿.&lt;/p&gt;

&lt;p&gt;Enjoy&lt;/p&gt;

</description>
      <category>tutorial</category>
      <category>todayilearned</category>
      <category>vim</category>
    </item>
    <item>
      <title>TDD Conference 2021 - How To Get Started With Test-Driving Your Code - Jov Mit</title>
      <author>Maxi Contieri</author>
      <pubDate>Thu, 29 Jul 2021 03:02:35 +0000</pubDate>
      <link>https://dev.to/mcsee/tdd-conference-2021-how-to-get-started-with-test-driving-your-code-jov-mit-e3f</link>
      <guid>https://dev.to/mcsee/tdd-conference-2021-how-to-get-started-with-test-driving-your-code-jov-mit-e3f</guid>
      <description>&lt;p&gt;First International Test Driven Development took place on July 10th. &lt;/p&gt;

&lt;p&gt;In this series, I will include every talk together with my notes and further reading.&lt;/p&gt;

&lt;p&gt;Hopefully, a lot of readers will watch and rewatch the talks, as they are worth several reviews.&lt;/p&gt;

&lt;p&gt;Let's continue...&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bio"&gt;
  &lt;/a&gt;
  Bio
&lt;/h2&gt;

&lt;p&gt;Jov is a software craftsman and TDD practitioner, working on Android for around 10 years now. He has a big passion for clean code, TDD, software craftsmanship, and knowledge sharing. He co-organized the DevTernity conference. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;TL;DR: TDD is hard to master, with good guidance we can get excellent solutions.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#talk"&gt;
  &lt;/a&gt;
  Talk
&lt;/h2&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/pmsql3qOmNA"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#my-personal-notes"&gt;
  &lt;/a&gt;
  My Personal notes
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;TDD is not a testing strategy or tool.&lt;/li&gt;
&lt;li&gt;TDD is a skill&lt;/li&gt;
&lt;li&gt;It takes a lot of time to master TDD.&lt;/li&gt;
&lt;li&gt;Customers don't care if we write tests, but they do care about the quality.&lt;/li&gt;
&lt;li&gt;Today there are at least two TDD Styles: &lt;a href="https://cleancoders.com/episode/comparativeDesign-episode-1"&gt;London School and Chicago School&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Chicago School is inside-out. It designs on the green.&lt;/li&gt;
&lt;li&gt;London School is outside-in and &lt;a href="https://dev.to/mcsee/code-smell-30-mocking-business-3glm"&gt;abuses mocks&lt;/a&gt;. It designs on the red stage.&lt;/li&gt;
&lt;li&gt;When we plan the tests, we can use &lt;a href="https://dev.to/mcsee/how-i-survived-the-zombie-apocalypse-59gj"&gt;ZOMBIES&lt;/a&gt; guidance.&lt;/li&gt;
&lt;li&gt;We must ensure tests are failing for the right reason. It is not enough to watch them fail.&lt;/li&gt;
&lt;li&gt;In TDD, procrastination is a good thing. The more we delay a decision, the better our solutions are. &lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#speaker-links"&gt;
  &lt;/a&gt;
  Speaker Links
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Twitter &lt;a href="https://twitter.com/jovchem"&gt;@jovchem&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;LinkedIn &lt;a href="https://www.linkedin.com/in/jovmit/"&gt;@jovmit&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;YouTube&lt;a href="https://www.youtube.com/channel/UC71omjio31Esx7LytaZ2ytA"&gt;@https://www.youtube.com/channel/UC71omjio31Esx7LytaZ2ytA&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Site &lt;a href="https://jovmit.io"&gt;https://jovmit.io&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Medium &lt;a href="https://medium.com/@jovmit"&gt;@jovmit&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Please follow TDD Conference on:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCKn-DadPoyYssfAOMk1LSew"&gt;YouTube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/tddconf"&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>oop</category>
      <category>programming</category>
      <category>codenewbie</category>
      <category>tdd</category>
    </item>
    <item>
      <title>Prose for Coding Pros</title>
      <author>Felipe Gasper</author>
      <pubDate>Thu, 29 Jul 2021 02:37:39 +0000</pubDate>
      <link>https://dev.to/fgasper/prose-for-coding-pros-1ck7</link>
      <guid>https://dev.to/fgasper/prose-for-coding-pros-1ck7</guid>
      <description>&lt;p&gt;The ability to express yourself verbally is a useful but oft-overlooked skill for software developers. Here I’m going to explore some guidelines I try to apply in my own writing.&lt;/p&gt;

&lt;p&gt;(In the following I’m using incomplete sentences per convention in software status messages.)&lt;/p&gt;

&lt;p&gt;DISCLAIMER: I am not a professional writer. YMMV.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-avoid-could-not"&gt;
  &lt;/a&gt;
  1. Avoid “could not”.
&lt;/h2&gt;

&lt;p&gt;Consider this phrase:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Could not open the file “foo”.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This means that, at some point in the (assumedly recent) past, the “speaker”—assumedly some computer somewhere—lacked the ability to open &lt;code&gt;foo&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;But does that mean:&lt;/p&gt;

&lt;p&gt;1) The computer &lt;em&gt;observed&lt;/em&gt; its inability to open &lt;code&gt;foo&lt;/code&gt;, and didn’t bother trying?&lt;/p&gt;

&lt;p&gt;2) The computer tried, and failed, to open &lt;code&gt;foo&lt;/code&gt;?&lt;/p&gt;

&lt;p&gt;This is a significant difference, and an important one to disambiguate.&lt;/p&gt;

&lt;p&gt;#1 connotes a sense of ongoing inability: “I can’t do this thing, no matter how many times I try.” For example, I can’t jump over my house. No matter how many times I try, it’s just not going to happen. It was also true last night; thus, “last night I couldn’t jump over my house” is a true statement.&lt;/p&gt;

&lt;p&gt;#2, by contrast, reports on the result of one specific operation at one specific time. Let’s say I &lt;em&gt;did&lt;/em&gt; try last night, for some reason, to jump over my house. This is &lt;em&gt;probably&lt;/em&gt; what folks will infer I say “last night I couldn’t jump over my house”, but logically it’s not the only meaning; thus, the statement is imprecise. We can do better.&lt;/p&gt;

&lt;p&gt;(Linguistically-minded folks may observe a certain parallel with the distinction between “imperfect” and “preterite” past-tense forms.)&lt;/p&gt;

&lt;p&gt;Consider expressions like:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Cannot open the file “foo”.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This connotes ongoing inability, which is the logical way to report cases where, e.g., filesystem permissions impede access to a given resource. (To go back to the house analogy, this would be “I can’t jump over my house.”)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Failed to open the file “foo”.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This states unambiguously that “I tried, but failed.” It doesn’t attempt to communicate ongoing inability; it just gives the outcome of a specific attempt to do something. (Also: “Last night I failed to jump over my house.”)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-prefer-antonyms-over-negation"&gt;
  &lt;/a&gt;
  2. Prefer antonyms over negation.
&lt;/h2&gt;

&lt;p&gt;Consider this phrase:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Not Authorized&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We could interpret this at least two ways:&lt;/p&gt;

&lt;p&gt;1) I cannot access the resource.&lt;/p&gt;

&lt;p&gt;2) I might have access to the resource, but nothing has explicitly authorized me.&lt;/p&gt;

&lt;p&gt;While native English speakers may intuitively understand “Not Authorized” to imply meaning #1, a nonnative speaker may not. Logically, either meaning is an accurate interpretation of the phrase.&lt;/p&gt;

&lt;p&gt;We can be more precise thus:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Access Forbidden&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Sometimes following this principle will lead you to some over-awkward wordings. For example, you &lt;em&gt;could&lt;/em&gt; replace …&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You do not have a file named “foo”.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;… with:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You lack a file named “foo”.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;… but that sounds kind of goofy. Depending on context that may be OK, though!&lt;/p&gt;

&lt;p&gt;(cf. Strunk &amp;amp; White, &lt;em&gt;The Elements of Style&lt;/em&gt;, where it says to ”Put statements in positive form.”)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-prefer-passive-voice-to-active-voice-when-it-makes-more-sense"&gt;
  &lt;/a&gt;
  3. Prefer passive voice to active voice &lt;em&gt;when it makes more sense&lt;/em&gt;.
&lt;/h2&gt;

&lt;p&gt;We should prefer active voice to passive voice in most cases: it’s clearer to state that an actor “does” an action, rather than that the action “is done” by the actor.&lt;/p&gt;

&lt;p&gt;Oftentimes, though, I find myself describing scenarios where the “doer” is either unknown or irrelevant. In those cases, it’s often &lt;em&gt;more logical to use the passive voice&lt;/em&gt; than to contort your phrasing to allow active voice.&lt;/p&gt;

&lt;p&gt;Consider the following:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If the file has been opened in the last hour, delete the file.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;That “has been opened” is classic passive voice: a form of “to be” plus a past participle. We might try to convert it to active voice thus:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If anyone has opened the file in the last hour, delete the file.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This, though, subtly changes the meaning: now our condition—i.e., the “if block” of our phrase—stipulates a “doer”: “anyone”. It’s a pretty generic expression, but might it lead someone to think that it refers to a &lt;em&gt;person&lt;/em&gt;? What if what opens the file is a script?&lt;/p&gt;

&lt;p&gt;OK, so we rephrase it again:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If anyone or anything has opened the file in the last hour, delete the file.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This works logically, but to my sense it’s getting a bit awkward. The original passive form of the expression is simpler and clearer.&lt;/p&gt;

&lt;p&gt;(cf. Yellowlees Douglas, &lt;em&gt;The Reader’s Brain&lt;/em&gt;)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-rather-than-of-consider-a-possessive"&gt;
  &lt;/a&gt;
  4. Rather than “of”, consider a possessive.
&lt;/h2&gt;

&lt;p&gt;In German, Igor Stravinsky’s “Rite of Spring” is “Frühlingsopfer”: literally “Spring’s Rite”. We wouldn’t say that in English because it just sounds awkward, but in other contexts it can yield a slight gain in concision. Consider these:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;the file’s change time&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;… versus …&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;the change time of the file&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The first one is just a &lt;em&gt;bit&lt;/em&gt; more concise.&lt;/p&gt;

&lt;p&gt;Another advantage of the possessive form is its “object-oriented” syntax: the word order corresponds to how that might look in code: &lt;code&gt;file.ctime&lt;/code&gt;. If your target audience is developers, that might facilitate a bit easier understanding, though it’s subtle enough that they may not notice.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-describe-causal-relationships-explicitly"&gt;
  &lt;/a&gt;
  5. Describe causal relationships explicitly.
&lt;/h2&gt;

&lt;p&gt;Compare the following sentences:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You cannot save “foo”. You have exceeded your quota.&lt;/p&gt;

&lt;p&gt;You cannot save “foo” because you have exceeded your quota.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Most folks will probably interpret the above phrases the same way, but note that only the second form &lt;em&gt;unambiguously&lt;/em&gt; gives the relationship between the two ideas (i.e., inability to save “foo” and quota excess). Being explicit reduces the likelihood of misunderstanding.&lt;/p&gt;

&lt;p&gt;Note, however, that the second form includes one larger sentence in lieu of two smaller ones. All things else being equal, longer sentences impede comprehension; thus, one might fear that that loss in comprehensibility outweighs the gain in clarity that “because” yields.&lt;/p&gt;

&lt;p&gt;A third option may yield a “happy medium”:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You cannot save “foo”. This is because you have exceeded your quota.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now there’s more verbiage overall, but we’re back to two small sentences rather than one large one, and we still describe the causal relationship explicitly.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-write-properly"&gt;
  &lt;/a&gt;
  6. Write “properly”.
&lt;/h2&gt;

&lt;p&gt;Like it or not, some people &lt;em&gt;will&lt;/em&gt; judge you—maybe even subconsciously—for neglecting widely-accepted grammar conventions. (But hey, &lt;a href="https://www.youtube.com/watch?v=TnlPtaPxXfc"&gt;that’s life!&lt;/a&gt;) Overall, it’s best to avoid that. Learn and apply the difference between “its” and “it’s”, “who” and “whom”, etc.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-difference-does-this-really-make"&gt;
  &lt;/a&gt;
  What difference does this really make?
&lt;/h1&gt;

&lt;p&gt;Remember the last time you debugged something that just &lt;em&gt;did not&lt;/em&gt; make sense? How many times did you stare at whatever error messages you had, comb through logs looking for clues, or the like? At some point you likely realized that you had misunderstood something—or, at the very least, you spent time &lt;em&gt;wondering&lt;/em&gt; if you had.&lt;/p&gt;

&lt;p&gt;This is the value of unambiguous messaging. If I see “failed to open the file”, I know an attempt was made to do so; if I just see “could not open the file”, though, I may spend time wondering whether that means an attempt was made, or merely that a &lt;code&gt;stat()&lt;/code&gt; revealed improper permissions or ownership.&lt;/p&gt;

&lt;p&gt;Unambiguous communication saves time and frustration for you and your colleagues, present and future. What’s not to love about that?&lt;/p&gt;

</description>
      <category>writing</category>
    </item>
    <item>
      <title>Use Webcam with React easily</title>
      <author>Koji (he/him)</author>
      <pubDate>Thu, 29 Jul 2021 01:35:25 +0000</pubDate>
      <link>https://dev.to/kojikanao/use-webcam-with-react-easily-397f</link>
      <guid>https://dev.to/kojikanao/use-webcam-with-react-easily-397f</guid>
      <description>&lt;h2&gt;
  &lt;a href="#step1-create-a-react-app-with-raw-createreactapp-endraw-"&gt;
  &lt;/a&gt;
  Step1 Create a react app with &lt;code&gt;create-react-app&lt;/code&gt;
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;yarn create react-app webcam-app &lt;span class="nt"&gt;--template&lt;/span&gt; typescript
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#step2-install-raw-reactwebcam-endraw-typesreactwebcam"&gt;
  &lt;/a&gt;
  Step2 Install &lt;code&gt;react-webcam&lt;/code&gt; (@types/react-webcam)
&lt;/h2&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/mozmorris"&gt;
        mozmorris
      &lt;/a&gt; / &lt;a href="https://github.com/mozmorris/react-webcam"&gt;
        react-webcam
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Webcam component
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
react-webcam&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.com/mozmorris/react-webcam" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/77e5b703dfd890d35e97bb4052d63bb8e59f7573ee650595f18839a43af8ff96/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f636f6d2f6d6f7a6d6f727269732f72656163742d77656263616d2e7376673f7374796c653d666c61742d737175617265" alt="Build Status"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/56abb06cd14e15c8c8f5bf9f94e273e9fa62cdbc73c7a610c8ecfeee83b27bfe/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f64772f72656163742d77656263616d2e7376673f7374796c653d666c61742d737175617265"&gt;&lt;img src="https://camo.githubusercontent.com/56abb06cd14e15c8c8f5bf9f94e273e9fa62cdbc73c7a610c8ecfeee83b27bfe/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f64772f72656163742d77656263616d2e7376673f7374796c653d666c61742d737175617265" alt="downloads"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/mozmorris/react-webcam/master/Logotype%20primary.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--40ui2drG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/mozmorris/react-webcam/master/Logotype%2520primary.png" width="70%" height="70%"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;DEMO:&lt;/strong&gt; &lt;a href="https://codepen.io/mozmorris/pen/JLZdoP" rel="nofollow"&gt;https://codepen.io/mozmorris/pen/JLZdoP&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/react-webcam" rel="nofollow"&gt;https://www.npmjs.com/package/react-webcam&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Webcam component for React. See &lt;a href="http://caniuse.com/#feat=stream" rel="nofollow"&gt;http://caniuse.com/#feat=stream&lt;/a&gt;
for browser compatibility.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note: Browsers will throw an error if the page is loaded from insecure origin. I.e. Use https.&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;
Installation&lt;/h2&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; with npm&lt;/span&gt;
npm install react-webcam
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; with yarn&lt;/span&gt;
yarn add react-webcam&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
Demo&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/mozmorris/pen/JLZdoP" rel="nofollow"&gt;https://codepen.io/mozmorris/pen/JLZdoP&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Usage&lt;/h2&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-v"&gt;React&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;"react"&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-v"&gt;Webcam&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;"react-webcam"&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;

&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-v"&gt;WebcamComponent&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt; &lt;span class="pl-c1"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;Webcam&lt;/span&gt; &lt;span class="pl-c1"&gt;/&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
Props&lt;/h3&gt;
&lt;p&gt;The props here are specific to this component but one can pass any prop to the underlying video tag eg &lt;code&gt;className&lt;/code&gt;, &lt;code&gt;style&lt;/code&gt;, &lt;code&gt;muted&lt;/code&gt;, etc&lt;/p&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;prop&lt;/th&gt;
&lt;th&gt;type&lt;/th&gt;
&lt;th&gt;default&lt;/th&gt;
&lt;th&gt;notes&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;audio&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;enable/disable audio&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;audioConstraints&lt;/td&gt;
&lt;td&gt;object&lt;/td&gt;

&lt;td&gt;MediaStreamConstraint(s) for the audio&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;forceScreenshotSourceSize&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;uses size of underlying source video stream (and thus ignores other size related props)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;imageSmoothing&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;pixel smoothing of the screenshot taken&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mirrored&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;show camera preview and get the screenshot mirrored&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;minScreenshotHeight&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;

&lt;td&gt;min&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;…&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/mozmorris/react-webcam"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;yarn add react-webcam @types/react-webcam
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#step3-create-a-simple-component"&gt;
  &lt;/a&gt;
  Step3 Create a simple component
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;src/components/WebCamDisplay/index.tsx&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useRef&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Webcam&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-webcam&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;WebCamDisplay&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;webcam&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useRef&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Webcam&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Webcam&lt;/span&gt; &lt;span class="nx"&gt;audio&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;webcam&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;yarn start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Codesandbox&lt;br&gt;
&lt;a href="https://codesandbox.io/s/agitated-stonebraker-h11sl?file=/src/components/WebCamDisplay/index.tsx"&gt;https://codesandbox.io/s/agitated-stonebraker-h11sl?file=/src/components/WebCamDisplay/index.tsx&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>typescript</category>
      <category>codesandbox</category>
    </item>
    <item>
      <title>PHP Damarau levenstein on Longest Match SubString</title>
      <author>Teddy Zugana</author>
      <pubDate>Thu, 29 Jul 2021 01:18:38 +0000</pubDate>
      <link>https://dev.to/kevinmel2000/php-damarau-levenstein-on-longest-match-substring-4kbh</link>
      <guid>https://dev.to/kevinmel2000/php-damarau-levenstein-on-longest-match-substring-4kbh</guid>
      <description>&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function getLongestMatchingSubstring($str1, $str2)
{
    $len_1 = strlen($str1);
    $longest = '';
    for($i = 0; $i &amp;lt; $len_1; $i++){
        for($j = $len_1 - $i; $j &amp;gt; 0; $j--){
            $sub = substr($str1, $i, $j);
            if (strpos($str2, $sub) !== false &amp;amp;&amp;amp; strlen($sub) &amp;gt; strlen($longest)){
                $longest = $sub;
                break;
            }
        }
    }
    return $longest;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>php</category>
    </item>
    <item>
      <title>Zapp: Runbook Automation</title>
      <author>Doug Bell</author>
      <pubDate>Thu, 29 Jul 2021 00:08:12 +0000</pubDate>
      <link>https://dev.to/preaction/zapp-runbook-automation-451g</link>
      <guid>https://dev.to/preaction/zapp-runbook-automation-451g</guid>
      <description>&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/preaction"&gt;
        preaction
      &lt;/a&gt; / &lt;a href="https://github.com/preaction/Zapp"&gt;
        Zapp
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Create plans for your Minions to run
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;I hate runbooks. I've been an SRE from since we were called webmasters. In all this time, the least helpful part of my job has been the lists of commands to run when there's a problem. Often out-of-date, frequently lacking in context, and altogether useless when production is burning around you and clients and banging on the door. I'm a programmer. I don't perform tedious tasks, I automate them. Why, then, should I like documenting tedious tasks?&lt;/p&gt;

&lt;p&gt;I hate &lt;a href="https://www.jenkins.io"&gt;Jenkins&lt;/a&gt;. No, that's not quite true. I'm disappointed in Jenkins. Parameterized builds could be such a useful tool, but the input forms they provide the end-user is ugly at best, incomprehensible at worst. Jenkins's pipeline syntax opens the door to some truly amazing abilities, but there's no way for me to package those abilities in a way I can simply give to someone without training them on how to navigate Jenkins's UI.&lt;/p&gt;

&lt;p&gt;To solve these problems, I wrote &lt;a href="https://metacpan.org/pod/Zapp"&gt;Zapp&lt;/a&gt;. In Zapp, I can create a plan as a series of tasks, like a Jenkins build. Plans can have input fields, like a Jenkins parameterized build. Users can then run the plan and see the output.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://metacpan.org/pod/Zapp::Task"&gt;Zapp tasks&lt;/a&gt; can be more than a shell command or script. Zapp tasks have their own configuration, so I can provide a friendly form for the user to control what the task will do. Additionally, tasks output typed data that can be used as input to subsequent tasks. When the task executes, it can render its own output to show the end-user what is happening.&lt;/p&gt;

&lt;p&gt;So, I can create a plan that asks a user to input their credentials.&lt;br&gt;
￼&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jdoqYRZg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oju8cu23smeu63n50cgz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jdoqYRZg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oju8cu23smeu63n50cgz.png" alt="Zapp form showing two inputs"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then, the plan can fetch an authentication token from using those credentials.&lt;br&gt;
￼&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TVEh5UVl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3lc9csiticip0wwy3k3r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TVEh5UVl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3lc9csiticip0wwy3k3r.png" alt="Zapp form for GetOAuth2Token task"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finally, with this authentication token, I can perform my request.&lt;br&gt;
￼&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T7MZIXHp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l3ar28jn017sgj4hso64.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T7MZIXHp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l3ar28jn017sgj4hso64.png" alt="Zapp form for Request task"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then when I want to run the plan, I can input my credentials and hit a button. &lt;br&gt;
￼&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--U0hu5Xzh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uicug5womej7sklgvc4w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U0hu5Xzh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uicug5womej7sklgvc4w.png" alt="Zapp form to run the plan"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As the job runs, it updates the job page. If any errors occur, the job stops and the failing task shows an error message. I can choose to re-play the job, or I can go back and fix whatever problem there is.&lt;/p&gt;

&lt;p&gt;Zapp isn't limited to automating runbooks. Zapp provides webhook triggers to perform plans automatically. Build your software after a commit is pushed to Github, respond to Slack commands, or (when a future version adds scheduled tasks) run a nightly SQL report. Not only are these tasks automated, but they are easy to configure so that users can support themselves.&lt;/p&gt;

&lt;p&gt;Finally, if Zapp can't do what you want, you can write your own task classes to perform tasks, type classes to accept input from users, and trigger classes to run plans automatically in response to events. Zapp is written in modern Perl using the Mojolicious web framework and the Minion task runner.&lt;/p&gt;

&lt;p&gt;With Zapp, I can make tedious support processes into a single web form, or even a single click. As needs change, processes can be tweaked using a friendly UI. And new types of tasks can be created to provide ever more options for your users.&lt;/p&gt;

&lt;p&gt;Zapp is very much Alpha-grade software right now: I use it personally, but there are bugs and missing features yet. The plugin APIs are pretty solid, though, so you can write your own tasks, types, and triggers. There are a lot of features that Minion provides that Zapp does not yet take advantage of, so there's plenty of possibilities for future development. If you have any questions, suggestions, issues, or want to know if Zapp can work for you, feel free to let me know at &lt;a href="mailto:doug@preaction.me"&gt;doug@preaction.me&lt;/a&gt; or on &lt;a href="https://web.libera.chat/#mojo-yancy"&gt;irc.libera.chat in #mojo-yancy&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>perl</category>
      <category>mojolicious</category>
    </item>
    <item>
      <title>5 Of The Most Helpful Python List Methods</title>
      <author>Aya Bouchiha</author>
      <pubDate>Wed, 28 Jul 2021 23:40:19 +0000</pubDate>
      <link>https://dev.to/ayabouchiha/5-of-the-most-helpful-python-list-methods-2c31</link>
      <guid>https://dev.to/ayabouchiha/5-of-the-most-helpful-python-list-methods-2c31</guid>
      <description>&lt;p&gt;Hello everybody, &lt;br&gt;
Today we'll discuss &lt;em&gt;5 helpful Python list methods&lt;/em&gt;.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#clear"&gt;
  &lt;/a&gt;
  clear()
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;clear()&lt;/strong&gt;: This method helps you to delete all list elements.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;cities&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'azemmour'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'tanger'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'casablanca'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cities&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;# 3
&lt;/span&gt;&lt;span class="n"&gt;cities&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clear&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cities&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# []
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cities&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;# 0
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#reverse"&gt;
  &lt;/a&gt;
  reverse()
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;reverse()&lt;/strong&gt;: reverse the order of the list's elements.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;cities&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'azemmour'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'tanger'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'casablanca'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;cities&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reverse&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cities&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# ['casablanca', 'tanger', 'azemmour']
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#copy"&gt;
  &lt;/a&gt;
  copy()
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;copy()&lt;/strong&gt;: returns a copy of the specified list.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;cities&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'azemmour'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'tanger'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'casablanca'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;moroccan_cities&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cities&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;cities&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'madrid'&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cities&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# ['madrid', 'tanger', 'casablanca']
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;moroccan_cities&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# ['azemmour', 'tanger', 'casablanca']
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#countvalue"&gt;
  &lt;/a&gt;
  count(value)
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;count()&lt;/strong&gt;: returns the number of repeated items with the given value in a specified list.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;product_prices&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;227&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;54&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;free_products_number&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;product_prices&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;free_products_number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# 2
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;product_prices&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;224578&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;# 0
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#indexvalue"&gt;
  &lt;/a&gt;
  index(value)
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;index(value)&lt;/strong&gt;: this list method returns the position at the first occurrence of the given value in the specified list.in addition, this method raises an error if the given value does not exist in the specified list.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;admins&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'John Doe'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'Aya Bouchiha'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'Simon Heebo'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;admins&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Aya Bouchiha'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;# 1
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;admins&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'this is not an admin'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;# error
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  summary
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;clear()&lt;/strong&gt;: deletes all list's elements.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;reverse()&lt;/strong&gt;: reverse the order of the list's elements.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;copy()&lt;/strong&gt;: returns a copy of the specified list.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;count(&lt;em&gt;value&lt;/em&gt;)&lt;/strong&gt;: returns the number of repeated items with the given value in a specified list.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;index(&lt;em&gt;value&lt;/em&gt;)&lt;/strong&gt;: returns the position at the first occurrence of the given value in the specified list, and raises an error if the given value is not found.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#references-amp-useful-resources"&gt;
  &lt;/a&gt;
  References &amp;amp; useful Resources
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.w3schools.com/python/python_lists_methods.asp"&gt;https://www.w3schools.com/python/python_lists_methods.asp&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=lFzHFUvGL7I"&gt;https://www.youtube.com/watch?v=lFzHFUvGL7I&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=chIRRLxdNVI"&gt;https://www.youtube.com/watch?v=chIRRLxdNVI&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=rrGmQbmTfiA"&gt;https://www.youtube.com/watch?v=rrGmQbmTfiA&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To Contact Me:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;email: &lt;a href="mailto:developer.aya.b@gmail.com"&gt;developer.aya.b@gmail.com&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;telegram: &lt;a href="https://t.me/AyaBouchiha"&gt;Aya Bouchiha&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Have a great day!&lt;/p&gt;

</description>
      <category>python</category>
      <category>beginners</category>
      <category>codenewbie</category>
      <category>programming</category>
    </item>
  </channel>
</rss>
