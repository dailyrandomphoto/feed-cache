<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Extensões para VSCode</title>
      <author>NuryCaroline</author>
      <pubDate>Wed, 03 Nov 2021 20:50:20 +0000</pubDate>
      <link>https://dev.to/devgirlsmentor/extensoes-para-vscode-3g2n</link>
      <guid>https://dev.to/devgirlsmentor/extensoes-para-vscode-3g2n</guid>
      <description>&lt;p&gt;Olá dev! Aqui está uma seleção de extensões para VSCode para te ajudar no dia a dia e trazer mais produtividade. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#medir-produtividade"&gt;
  &lt;/a&gt;
  Medir produtividade
&lt;/h1&gt;

&lt;p&gt;Antes de melhorarmos a nossa produtividade, primeiro precisamos ter dados de como ela está. Para obter esses dados, eu conheço essas três extensões: &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#wakatime"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=WakaTime.vscode-wakatime"&gt;Wakatime&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Assim como a Code Time, essa extensão ajuda a mediar a sua atividade enquanto está desenvolvendo no dia dia, o quanto esta trabalhando em qual linguagem e várias outras informações.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#code-time"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=softwaredotcom.swdc-vscode"&gt;Code Time&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Além de ser uma pata de animal que com certeza á bem fofinha rsrs, com ele você tem um dashboard de como você trabalha no dia a dia, quais horários está mais produtivo, entre várias outras informações.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#100-days-of-code"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=softwaredotcom.swdc-100-days-of-code"&gt;100 days of code&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Os mesmos criadores do Code Time criaram essa extensão para ajudar você a alcançar seus desafios, e ganhando botons a cada conquista.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conjunto-de-atalhos-snippets-"&gt;
  &lt;/a&gt;
  Conjunto de atalhos ( Snippets )
&lt;/h1&gt;

&lt;p&gt;Algo que me deixa bem produtiva no dia a dia, é utilizar alguns atalhos para construção de códigos padrões, por exemplo, criar componentes React, arquivos de estilização, arquivo de configuração de api.&lt;/p&gt;

&lt;p&gt;Para desenvolvimento com React e React Native, tem essas 2 extensões da Rocketseat:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Rocketseat &lt;a href="https://marketplace.visualstudio.com/items?itemName=rocketseat.RocketseatReactJS"&gt;ReactJS&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Rocketseat &lt;a href="https://marketplace.visualstudio.com/items?itemName=rocketseat.RocketseatReactNative"&gt;React Native&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Os atalhos que eu mais uso são:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;rnfc  → React Native Functional Componente: que cria a estrutura de um componente React Native&lt;/li&gt;
&lt;li&gt;rfc → React  Functional Componente: que cria a estrutura de um componente React&lt;/li&gt;
&lt;li&gt;styled-react → Styled React: que cria uma estrutura inicial com styled componentes&lt;/li&gt;
&lt;li&gt;api → Cria uma estrutura de configuração Axios.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Na página de cada extensão tem uma lista de comandos possíveis.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#facilitadores"&gt;
  &lt;/a&gt;
  Facilitadores
&lt;/h1&gt;

&lt;h3&gt;
  &lt;a href="#svg-viewer"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=cssho.vscode-svgviewer"&gt;SVG Viewer&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Quando abrimos um &lt;code&gt;.svg&lt;/code&gt; no VSCode ele nos mostra o seu código, mas na maioria das vezes queremos ver a imagem em si, e é isso que essa extensão faz.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#todo-three"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=Gruntfuggly.todo-tree"&gt;ToDo Three&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Essa é uma extensão que eu gosto de usar bastante, para adicionar comentários no meu código de coisas que ainda tenho que implementar e não esquecer nenhuma regra. Apenas adicionar um comentário como &lt;code&gt;// TODO:&lt;/code&gt; e &lt;code&gt;// FIXME:&lt;/code&gt;, a extensão coloca um destaque, que o torna mais visível e mais difícil de esquecer quando estiver analisando as suas alterações antes de enviar. Além disso ela também cria uma árvore, com os arquivos onde você adicionou.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iNcMLghs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Gruntfuggly/todo-tree/master/resources/screenshot.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iNcMLghs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Gruntfuggly/todo-tree/master/resources/screenshot.png" alt="Image" width="880" height="388"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#template-string-converter"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=meganrogge.template-string-converter"&gt;Template String Converter&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Com a atualização do JS, passamos a poder concatenar string facilmente com o &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals"&gt;Template String&lt;/a&gt;, o que pode ser chato no dia a dia, ficar mudando de aspas ( ' ou " ) para acentos graves (&lt;code&gt;&lt;/code&gt;), e essa extensão vem para nos ajudar nisso, assim que colocamos &lt;code&gt;${}&lt;/code&gt;, dentro de aspas elas mudam para acentos graves.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4Ux83trE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/meganrogge/template-string-converter/master/src/images/demo.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4Ux83trE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/meganrogge/template-string-converter/master/src/images/demo.gif" alt="Image" width="299" height="62"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#brackets-pair"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=CoenraadS.bracket-pair-colorizer"&gt;Brackets Pair&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Sabem quando esquecemos de abrir ou fechar parênteses ou chaves, e não sabemos onde colocar?! Essa extensão coloca uma cor diferente para cada conjunto de &lt;code&gt;Abre e Fecha&lt;/code&gt;, facilitando encontrarmos onde está faltando.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#blockman"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=leodevbro.blockman"&gt;Blockman&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Acredito que essa extensão tenha o mesmo objetivo da &lt;code&gt;Brackets Pair&lt;/code&gt;, mas com uma forma diferente de visualização. Com ela é criado uma borda envolta de cada conjunto de &lt;code&gt;Abre e Fecha&lt;/code&gt;, facilitando um pouco mais descobrir onde está faltando abrir ou fechar algum parênteses ou chaves e também facilitando a visualização de cada bloco&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--akE8OFEn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/leodevbro/vscode-blockman/main/demo-media/video/main-demo---c2-apng.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--akE8OFEn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/leodevbro/vscode-blockman/main/demo-media/video/main-demo---c2-apng.png" alt="Image" width="822" height="544"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#auto-rename"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=formulahendry.auto-rename-tag"&gt;Auto Rename&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;No dia a dia do desenvolvimento web modificamos varias tags e pode ser repetitivo alterar o nome ta tag de abertura e fechamento, e é nisso que essa extensão nos ajuda, ao modificar alguma tag, automaticamente a outra é alterada também.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--btV6ZCG6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://github.com/formulahendry/vscode-auto-rename-tag/raw/HEAD/images/usage.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--btV6ZCG6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://github.com/formulahendry/vscode-auto-rename-tag/raw/HEAD/images/usage.gif" alt="Image" width="880" height="573"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#color-highlight"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=naumovs.color-highlight"&gt;Color Highlight&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Na maioria das vezes ao desenvolver sites e aplicativos usamos cores &lt;code&gt;hexadecimais&lt;/code&gt; ou &lt;code&gt;rgb&lt;/code&gt;, o que dificulta reconhecer qual é a cor. Com essa extensão é criado um destaque em cima do código da cor com a cor&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#live-share"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=MS-vsliveshare.vsliveshare"&gt;Live share&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Está trabalhado com alguém em um mesmo bug, ou criando algo de forma colaborativa, essa extensão vai permitir que ambos compartilharem um mesmo VSCode. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#embelezamento"&gt;
  &lt;/a&gt;
  Embelezamento
&lt;/h1&gt;

&lt;p&gt;Como passamos o dia olhando para o VSCode, podemos deixar ele mais com a nossa cara, aqui eu separei algumas extensões legais.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://vscodethemes.com"&gt;VSCodeThemes - Preview Visual Studio Code Themes.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=rocketseat.theme-omni"&gt;Omni Theme - Visual Studio Marketplace&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=BalleriniServer.ballerini-theme"&gt;Ballerini Theme - Visual Studio Marketplace&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=Equinusocio.vsc-material-theme-icons"&gt;Material Theme Icons - Visual Studio Marketplace&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=ftsamoyed.theme-pink-cat-boo"&gt;Pink-Cat-Boo Theme - Visual Studio Marketplace&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=zhengrenzhe.nyan-cat"&gt;Nyan Cat - Visual Studio Marketplace&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=hoovercj.vscode-power-mode"&gt;Power Mode - Visual Studio Marketplace&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=fleshywaffles.vs-code-clippy"&gt;Clippy - Visual Studio Marketplace&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;E você, quais extensões você mais utiliza? &lt;br&gt;
Deixe aqui nos comentários e até mais. 😄&lt;/p&gt;

</description>
      <category>extensions</category>
      <category>vscode</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Hacktoberfest and Hello</title>
      <author>Lewis Sparlin</author>
      <pubDate>Wed, 03 Nov 2021 20:45:16 +0000</pubDate>
      <link>https://dev.to/lsparlin/hacktoberfest-and-hello-3igf</link>
      <guid>https://dev.to/lsparlin/hacktoberfest-and-hello-3igf</guid>
      <description>&lt;p&gt;Hi 👋, I'm Lewis! In addition to being a Hacktoberfest retro, this is also my DEV introduction. This being my first DEV post I'm tempted to ramble on a bit, but you can learn more about me in my bio if you're interested. This month I'll be doing my best to write more and share my experiences and what I'm learning. Although I have been working in tech for a long time, Hacktoberfest 2021 was my first earnest effort contributing to Open Source.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#hacktoberfest-2021"&gt;
  &lt;/a&gt;
  Hacktoberfest 2021
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z4_HEkuw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/790q6dn38588tivpcw4t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z4_HEkuw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/790q6dn38588tivpcw4t.png" alt="Hacktoberfest 2021 header from DigitalOcean" width="880" height="395"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://hacktoberfest.digitalocean.com"&gt;Hacktoberfest&lt;/a&gt; is:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;a month-long celebration of open source software run by &lt;a href="https://www.digitalocean.com"&gt;DigitalOcean&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In a nutshell, developers were able to authenticate with Github and after 4 confirmed pull requests merged for open source projects, get free swag. Of course for many people, a free tee shirt isn't a huge motivator. Personally I felt it was a great learning experience and it was satisfying to give back to Open Source projects. The personal growth and community involvement were the greatest rewards.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#community"&gt;
  &lt;/a&gt;
  Community 💙
&lt;/h3&gt;

&lt;p&gt;I was introduced to Hacktoberfest by a wonderful online community I joined this year, &lt;a href="https://virtualcoffee.io"&gt;Virtual Coffee&lt;/a&gt;. Aside: you should join Virtual Coffee, they're the most authentic group I've ever met online!! As a community, they challenged members to be involved. They facilitated mentorship and had weekly check-ins to give everyone opportunity to talk about where they were contributing.&lt;/p&gt;

&lt;p&gt;I had the privilege of mentoring &lt;a class="mentioned-user" href="https://dev.to/adiatiayu"&gt;@adiatiayu&lt;/a&gt;
, who is well known here and on CodeNewbies for her excellent writing. I really enjoyed getting to know her and the maintainers I interacted with over the past month. As an introvert, doing Hacktoberfest with a community was the motivation I needed to really get involved.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#things-i-didnt-know-about-github"&gt;
  &lt;/a&gt;
  Things I didn't know about Github
&lt;/h3&gt;

&lt;p&gt;I've used Github for work for years, but there were several cool new things I learned thanks to getting into Hacktoberfest.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Getting a repository contributor-friendly&lt;/strong&gt;&lt;br&gt;
Thanks to &lt;a class="mentioned-user" href="https://dev.to/kirkcodes"&gt;@kirkcodes&lt;/a&gt;
 for this great &lt;a href="https://youtu.be/dH1NwpOtppE"&gt;presentation&lt;/a&gt; on VirtualCoffee's YouTube channel. I haven't had a chance to open source a project myself, so I'll be glad I wrote this down someday. Under the Github Insights tab, the community section has an interactive list of recommended as the ideal setup to start an open source project that is contributor-friendly. I knew about &lt;code&gt;README&lt;/code&gt; of course, but there are so many other great ways for maintainers to guide their contributors.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jH4STSyW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v0r0cilqmvzll88w7t4z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jH4STSyW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v0r0cilqmvzll88w7t4z.png" alt="Githubs community insight checklist" width="880" height="493"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pull Request Templates!&lt;/strong&gt;&lt;br&gt;
Having interacted now with several OSS projects that utilize this, it's now hard to imagine contributing without them. If you're not familiar, you can add the file &lt;code&gt;.github/PULL_REQUEST_TEMPLATE.md&lt;/code&gt; to a repository and contributors will have a starting point when opening up a pull request! A pull request template can communicate to contributors what you expect them to describe in their pull request description. This is extremely helpful and allows contributors (like me) be familiar with expectations. Something simple like this would suffice in most cases.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight markdown"&gt;&lt;code&gt;&lt;span class="gu"&gt;## What Changed&lt;/span&gt;
&lt;span class="c"&gt;&amp;lt;!-- describe what you changed --&amp;gt;&lt;/span&gt;

&lt;span class="gu"&gt;## Issues&lt;/span&gt;
&lt;span class="c"&gt;&amp;lt;!-- mention the issue this addresses --&amp;gt;&lt;/span&gt;

&lt;span class="gu"&gt;## Screenshots&lt;/span&gt;
&lt;span class="c"&gt;&amp;lt;!-- Add some screenshots --&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Templates can also be created for the various types of issues as described by &lt;a href="https://docs.github.com/en/communities/using-templates-to-encourage-useful-issues-and-pull-requests/about-issue-and-pull-request-templates"&gt;Github's documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#building-confidence"&gt;
  &lt;/a&gt;
  Building Confidence
&lt;/h3&gt;

&lt;p&gt;Imposter syndrome is a regular topic in developer communities and it effects me too. Wavering confidence and the tendency to doubt my own abilities has been a consistent struggle throughout my journey as a developer. This last month I found that contributing to open source can be a great confidence boost. It feels good to get involved in projects I care about. There is affirmation in knowing that people I don't know appreciate code I send to them over the internet. I also learned new patterns and ways of approaching things by getting into other people's code. I highly recommend contributing to open source earlier than I did for those who have the ability. It's great for everybody involved.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#contributions"&gt;
  &lt;/a&gt;
  Contributions
&lt;/h2&gt;

&lt;p&gt;The following projects all have excellent maintainers and core teams that were a joy to work with. I am especially fond of Forem (the DEV platform). Shoutout to &lt;a class="mentioned-user" href="https://dev.to/nickytonline"&gt;@nickytonline&lt;/a&gt;
 and &lt;a class="mentioned-user" href="https://dev.to/coffeecraftcode"&gt;@coffeecraftcode&lt;/a&gt;
 for being extremely welcoming members of Forem. I plan to continue being a regular contributor thanks to the great experience I had during Hacktoberfest. &lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/forem"&gt;
        forem
      &lt;/a&gt; / &lt;a href="https://github.com/forem/forem"&gt;
        forem
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      For empowering community 🌱
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;



&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/codethesaurus"&gt;
        codethesaurus
      &lt;/a&gt; / &lt;a href="https://github.com/codethesaurus/codethesaur.us"&gt;
        codethesaur.us
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A polyglot developer reference tool to compare programming language concepts side-by-side! Great for learning new languages or using for reference.
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;



&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Virtual-Coffee"&gt;
        Virtual-Coffee
      &lt;/a&gt; / &lt;a href="https://github.com/Virtual-Coffee/virtualcoffee.io"&gt;
        virtualcoffee.io
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Public site for Virtual Coffee
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;






&lt;p&gt;Thank you to DigitalOcean and Virtual Coffee for the opportunity and encouragement to get involved in open source!&lt;/p&gt;

</description>
      <category>hacktoberfest</category>
      <category>opensource</category>
      <category>devjournal</category>
      <category>github</category>
    </item>
    <item>
      <title>React &amp; React Native: Mainstream In October, 2021</title>
      <author>MeetupFeed</author>
      <pubDate>Wed, 03 Nov 2021 20:26:02 +0000</pubDate>
      <link>https://dev.to/meetupfeedio/react-react-native-mainstream-in-october-2021-4lic</link>
      <guid>https://dev.to/meetupfeedio/react-react-native-mainstream-in-october-2021-4lic</guid>
      <description>&lt;p&gt;React-based dev and meetup videos were in the mainstream this October. Here’s our personal &lt;a href="https://blog.meetupfeed.io/react-and-react-native-october-2021/"&gt;&lt;strong&gt;selection of favourites&lt;/strong&gt;&lt;/a&gt;, check it out!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://meetupfeed.io/talk/daria-caraway-building-considerate-react-component-ap-is-with-type-script-j-sworld-2021"&gt;&lt;strong&gt;Building Considerate React Component APIs with TypeScript | Daria Caraway&lt;/strong&gt;&lt;/a&gt;&lt;br&gt;
How can we use TypeScript in order to improve the readability of our component interfaces for our fellow team members? Find out from this video by Daria Caraway.many more!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://meetupfeed.io/talk/react-native-eu-2021-pawel-trysla-code-splitting-in-react-native"&gt;&lt;strong&gt;Code Splitting in React Native | Paweł Trysła&lt;/strong&gt;&lt;/a&gt;&lt;br&gt;
We could say that it’s difficult to split functionality in native mobile applications. Paweł Trysła uncovers the secrets of code splitting using the power of Webpack.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://meetupfeed.io/talk/react-native-eu-2021-wojciech-kwiatek-creating-a-vo-ip-app-in-react-native-the-beginners-guide"&gt;&lt;strong&gt;Creating a VoIP app in React Native – the beginner’s guide | Wojciech Kwiatek&lt;/strong&gt;&lt;/a&gt;&lt;br&gt;
Dig into the foundations of how to make a mobile be able to actually make a call. A walkthrough of what VoIP actually is, theories of WebRTC connections, ending with the CallKit of iOS vs Android way of handling calls.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://meetupfeed.io/talk/react-native-eu-2021-lars-thorup-sub-second-integration-tests-for-your-rn-app-bluetooth-device"&gt;&lt;strong&gt;Sub-second integration tests for your RN app &amp;amp; Bluetooth device | Lars Thorup&lt;/strong&gt;&lt;/a&gt;&lt;br&gt;
Wondering how you can create any applications for Bluetooth devices? Learn how to code loudspeakers, toothbrushes, dishwashers and many more by Lars Thorup who is introducing you to the technique of mock recording.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://meetupfeed.io/talk/react-native-eu-2021-sanket-sahu-building-accessibility-hooks-for-react-native-web"&gt;&lt;strong&gt;Building Accessibility Hooks for React Native &amp;amp; Web | Sanket Sahu&lt;/strong&gt;&lt;/a&gt;&lt;br&gt;
You can obtain how Sanket Sahu and his team built a set of hooks that make it easy to build accessible React Native and Web components that complies with the WAI-ARIA standards.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://meetupfeed.io/talk/rneu-2021-thor-schaeff-show-me-the-money-securely-accepting-payments-in-react-native-apps"&gt;&lt;strong&gt;“Show Me The Money” – Securely Accepting Payments| Thor Schaeffct Native &amp;amp; Web | Thor Schaeff&lt;/strong&gt;&lt;/a&gt;&lt;br&gt;
Want to integrate payments with React Native? Learn how to provide a great developer experience that’s secure and optimized for mobile purchases from Thor Schaeff through Stripe’s React Native Library.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://meetupfeed.io/talk/how-to-build-a-netflix-clone-with-graph-ql-react-and-data-stax-astra"&gt;&lt;strong&gt;How to Build a Netflix Clone | Jeremy Hanna&lt;/strong&gt;&lt;/a&gt;&lt;br&gt;
Eager to learn how you can create a Netflix homepage yourself? Jeremy digs deep into successfully building it in a simple React.js running on Astra DB. This way, you can leverage a GraphQL API with paging and infinite scrolling.&lt;/p&gt;

</description>
      <category>react</category>
      <category>webdev</category>
      <category>programming</category>
      <category>reactnative</category>
    </item>
    <item>
      <title>Best JavaScript Meetups From October, 2021</title>
      <author>MeetupFeed</author>
      <pubDate>Wed, 03 Nov 2021 20:17:13 +0000</pubDate>
      <link>https://dev.to/meetupfeedio/best-javascript-meetups-from-october-2021-2ap1</link>
      <guid>https://dev.to/meetupfeedio/best-javascript-meetups-from-october-2021-2ap1</guid>
      <description>&lt;p&gt;This October was overloaded with the highest quality &lt;a href="https://blog.meetupfeed.io/javascript-october-2021/"&gt;&lt;strong&gt;JavaScript meetup videos&lt;/strong&gt;&lt;/a&gt;. To make things easier for you folks, we’ve once again decided to share our favorites, handpicked just for you.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://meetupfeed.io/talk/tim-benniks-the-modern-dxp-jsworld-conference-2021"&gt;&lt;strong&gt;The Modern DXP – How JAMstack will change the world | Tim Benniks&lt;/strong&gt;&lt;/a&gt;&lt;br&gt;
Jump into what DXP (Digital Experience Platform) is and how JAMstack is changing the game for developers. From Tim Benniks, who worked with big names like Nike, Chanel, Google, EA and many many more!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://meetupfeed.io/talk/js-monthly-17-ben-butterworth-anonymous-video-calling-app-using-machine-learning"&gt;&lt;strong&gt;Anonymous Video Calling App Using Machine Learning | Ben Butterworth&lt;/strong&gt;&lt;/a&gt;&lt;br&gt;
Find out how anonymous video calls allow you to communicate with someone using your facial expression and animation, without revealing your real identity, physical background or other sensitive information by Ben Butterworth.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://meetupfeed.io/talk/js-monthly-17-daniel-olavio-ferreira-heavily-connected-data-applications"&gt;&lt;strong&gt;Heavily Connected Data Applications | Daniel Olavio Ferreira&lt;/strong&gt;&lt;/a&gt;&lt;br&gt;
Dive into how complex it can get when having to deal with SQL table relations meanwhile finding out more about some mainstream ORMs (e.g. TypeORN &amp;amp; Sequelize). In addition, by using a simple yet powerful schema syntax, Daniel compares them to Prisma.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://meetupfeed.io/talk/js-monthly-17-lewis-prescott-double-up-your-component-integration-tests-with-supertest-nock"&gt;&lt;strong&gt;Double Up Your Component &amp;amp; Integration Tests With Supertest &amp;amp; Nock | Lewis Prescott&lt;/strong&gt;&lt;/a&gt;&lt;br&gt;
Craving to understand how you can build component and integration tests with only one set of scripts? With the help of mocking and the tool Nock! Lewis Prescott shows you the way.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://meetupfeed.io/talk/simplifying-web-accessibility-monthly-js"&gt;&lt;strong&gt;Simplifying Web Accessibility | Meg Shulmister&lt;/strong&gt;&lt;/a&gt;&lt;br&gt;
Meg Shulmister tells you all the details about how you can easily incorporate accessibility-focused design into your work as a JavaScript developer.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>The Feynman Technique</title>
      <author>Ermakhan Sabyrzhan</author>
      <pubDate>Wed, 03 Nov 2021 19:57:39 +0000</pubDate>
      <link>https://dev.to/ermoshka/the-feynman-technique-4di6</link>
      <guid>https://dev.to/ermoshka/the-feynman-technique-4di6</guid>
      <description>&lt;p&gt;Hello here and this is me, Yermakhan. You can simply call me Moha, I'm student who felt in love with digital world and can't resist to explore it. You can consider this post as an intro to all other posts.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you can't explain something to a first year student, then you haven't really understood.&lt;br&gt;
~ Richard P. Feynman.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I guess you're already familiar with the famous lectures and quotes by &lt;a href="https://en.wikipedia.org/wiki/Richard_Feynman"&gt;Richard Feynman&lt;/a&gt;, so as you might have guessed, I'm going to use his &lt;a href="https://en.wikipedia.org/wiki/Feynman_Technique"&gt;technique&lt;/a&gt;. And it's pretty simple! Firstly, you choose the subject, you're studying and then try to explain it in pretty simple words to another person. If this person reacts with the questions, try to answer and then you can find the gaps you should relearn.&lt;/p&gt;

&lt;p&gt;The next topics are all for drafts and abstracts by myself for you, my reader. I'm gonna study computer science and software engineering topics at all. So I hope you will get something helpful and do not forget to react! goodbye!&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>tutorial</category>
      <category>productivity</category>
      <category>opensource</category>
    </item>
    <item>
      <title>Candy Color Button Animation</title>
      <author>Jayant Goel</author>
      <pubDate>Wed, 03 Nov 2021 19:41:45 +0000</pubDate>
      <link>https://dev.to/jayantgoel001/candy-color-button-animation-bgi</link>
      <guid>https://dev.to/jayantgoel001/candy-color-button-animation-bgi</guid>
      <description>&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/yuhomyan/embed/OJMejWJ?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>codepen</category>
    </item>
    <item>
      <title>Download Button Animation</title>
      <author>Jayant Goel</author>
      <pubDate>Wed, 03 Nov 2021 19:41:28 +0000</pubDate>
      <link>https://dev.to/jayantgoel001/download-button-animation-36p9</link>
      <guid>https://dev.to/jayantgoel001/download-button-animation-36p9</guid>
      <description>&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/aaroniker/embed/MWgNKGr?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>codepen</category>
    </item>
    <item>
      <title>bootstrap 4 navbar</title>
      <author>Jayant Goel</author>
      <pubDate>Wed, 03 Nov 2021 19:37:16 +0000</pubDate>
      <link>https://dev.to/jayantgoel001/bootstrap-4-navbar-3hb2</link>
      <guid>https://dev.to/jayantgoel001/bootstrap-4-navbar-3hb2</guid>
      <description>&lt;p&gt;With Bootstrap, a navigation bar can extend or collapse, depending on the screen size. A standard navigation bar is created with the .navbar class, followed by a responsive collapsing class: .navbar-expand-xl. ... sm (stacks the navbar vertically on extra large, large, medium or small screens).&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/piyushpd/embed/gOYvZPG?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>codepen</category>
    </item>
    <item>
      <title>Simple CSS Waves | Mobile &amp; Full width</title>
      <author>Jayant Goel</author>
      <pubDate>Wed, 03 Nov 2021 19:34:03 +0000</pubDate>
      <link>https://dev.to/jayantgoel001/simple-css-waves-mobile-full-width-265c</link>
      <guid>https://dev.to/jayantgoel001/simple-css-waves-mobile-full-width-265c</guid>
      <description>&lt;p&gt;Lightweight animation between header &amp;amp; content. Easy to customize and apply into any website! Works with all devices and screen sizes.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/goodkatz/embed/LYPGxQz?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>codepen</category>
    </item>
    <item>
      <title>Caching - 101</title>
      <author>Uzair</author>
      <pubDate>Wed, 03 Nov 2021 19:02:36 +0000</pubDate>
      <link>https://dev.to/uzairali10/caching-101-3agp</link>
      <guid>https://dev.to/uzairali10/caching-101-3agp</guid>
      <description>&lt;p&gt;&lt;a href="https://dev.to/uzairali10/load-balancer-101-4jl9"&gt;Load Balancing&lt;/a&gt; helps you to scale horizontally by increasing resources (increasing number of servers) while caching enables you to make better use the existing resource you have.&lt;/p&gt;

&lt;p&gt;Caching works on the principle that recently requested data is likely to be requested again&lt;/p&gt;

&lt;p&gt;Cache is a hardware or a software component which helps in serving the data which is either frequently requested or is resource expensive to compute, So cache stores the response and serves it when asked to do so.&lt;/p&gt;

&lt;p&gt;Caches can exist at all levels in architecture, but are often found at the level nearest to the client where they are implemented to return data quickly without taxing downstream levels.&lt;/p&gt;

&lt;p&gt;For example: &lt;/p&gt;

&lt;p&gt;A client requests image from a server, Initially the server looks through DB for the image and return it to client but however there are the following possibilities&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The response can be cached in server side (Eg: in reverse proxy)&lt;/li&gt;
&lt;li&gt;The response can be cached client side (Eg: Browser cache, Forward proxy)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This way we are saving the copy of response and client do not have to request the server frequently for the same data, This even decrease the time to load data for client and even decreases load for the server.&lt;/p&gt;

&lt;p&gt;If the response for a particular request is saved in cache it is called &lt;code&gt;cache hit&lt;/code&gt; or else it is called &lt;code&gt;cache miss&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Improves read Performance (aka Latency)&lt;/li&gt;
&lt;li&gt;Reduce the Load (aka Throughput)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Increase complexity of System&lt;/li&gt;
&lt;li&gt;Consumes Resources&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#cache-invalidation-amp-eviction"&gt;
  &lt;/a&gt;
  Cache Invalidation &amp;amp; Eviction
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#cache-invalidation"&gt;
  &lt;/a&gt;
  Cache Invalidation:
&lt;/h2&gt;

&lt;p&gt;Updating the cached data is known as cache invalidation. The most common technique used for this purpose is known as TTL (Time To live). A certain time period is defined for cache to live in the memory and after that interval of time cache expires. And new data is requested from server&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cache-eviction"&gt;
  &lt;/a&gt;
  Cache Eviction:
&lt;/h2&gt;

&lt;p&gt;As cache memory is limited so we have to decide which cached data to keep or not.&lt;/p&gt;

&lt;p&gt;Eg: our storage is capable of only storing only 100 keys and currently all of them are filled and now we want to add an additional key so we have to kick out an older cached key so that room for a new one can be made. This process is know as cache Eviction.&lt;/p&gt;

&lt;p&gt;Below are some parameters considered while Eviction of a cached key:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;FIFO: First In First Out, In this the oldest cached key gets removed so that latest one can be occupied.&lt;/li&gt;
&lt;li&gt;LRU: Least Recently Used, In this the cached key which hasn't been used in recent time and was used a long time ago gets discarded.&lt;/li&gt;
&lt;li&gt;LFU: Least Frequently Used, In this the cached is used the most less number of times is discarded. Eg: there are 3 keys k1, k2, k3 and they are used 7,3,9 times respectively so k3 will be discarded first as it is used only 3 times which is the least number.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#cache-patterns"&gt;
  &lt;/a&gt;
  Cache Patterns
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#cache-aside-pattern"&gt;
  &lt;/a&gt;
  Cache Aside pattern:
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Hbwp9R93--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zt6k16ihp7hd95qognzs.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Hbwp9R93--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zt6k16ihp7hd95qognzs.jpg" alt="Image description" width="445" height="549"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;This is the most commonly used technique in this the cache does not interact with DB or Server it only interacts with Application.&lt;/p&gt;

&lt;p&gt;When a client request some data through application, Application looks for it in cache if found then returns it or else request the same to server and then returns to client and also caches it.&lt;/p&gt;

&lt;p&gt;Here there was no interaction between cache and server or DB &lt;/p&gt;

&lt;p&gt;When the data in DB changes corresponding data in cached memory also have to be modified either through some code by application or through TTL method or combination of both can be used&lt;/p&gt;

&lt;p&gt;Pros of cache aside:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Caches only what is needed&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Cons of cache Aside:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Cache Miss are Expensive&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#read-through-pattern"&gt;
  &lt;/a&gt;
  Read Through pattern:
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H7Ok-RZz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7hatvrac2wge2kbfan7g.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H7Ok-RZz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7hatvrac2wge2kbfan7g.jpg" alt="Image description" width="485" height="539"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here the cache resides between application and server, in this case application never interacts with server or cache.&lt;/p&gt;

&lt;p&gt;When a client request some data it is first looked by the application in cache and if not found the cache itself request data to server and returns to the application.&lt;/p&gt;

&lt;p&gt;Pros of cache aside:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Caches only what is needed&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Cons of cache Aside:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Cache Miss are Expensive&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#write-through-pattern"&gt;
  &lt;/a&gt;
  Write Through pattern:
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b6KN1wYP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mi79b0ruuicotj38pqnk.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b6KN1wYP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mi79b0ruuicotj38pqnk.jpg" alt="Image description" width="495" height="228"&gt;&lt;/a&gt;     &lt;/p&gt;

&lt;p&gt;The write-through strategy adds data or updates data in the cache whenever data is written to the database. Because the data in the cache is updated every time it's written to the database, the data in the cache is always current.&lt;/p&gt;

&lt;p&gt;Pros of Write Through:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Up to Date Data&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Cons of cache Aside:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Writes are Expensive are Expensive&lt;/li&gt;
&lt;li&gt;There is a chance that we may add certain data to cache that no one ever reads&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#write-behind-pattern"&gt;
  &lt;/a&gt;
  Write Behind pattern:
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5YEQXpRl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rr6hujk16stfe9ykl0mg.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5YEQXpRl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rr6hujk16stfe9ykl0mg.jpg" alt="Image description" width="495" height="231"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It is similar to write through and just instead of updating cache instantaneously it waits for some time and sends requests in bulk&lt;/p&gt;

&lt;p&gt;Pros of Write Through:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;No Write penalty&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Cons of cache Aside:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Reliability&lt;/li&gt;
&lt;li&gt;Lack of consistency&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#where-do-cache-resides"&gt;
  &lt;/a&gt;
  Where Do Cache Resides
&lt;/h2&gt;

&lt;p&gt;Depending on the pattern used for caching and some other parameters cache can be embedded at various levels such as.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Client Side (Like Browser cache or OS Cache)&lt;/li&gt;
&lt;li&gt;Forward proxy&lt;/li&gt;
&lt;li&gt;Reverse proxy&lt;/li&gt;
&lt;li&gt;Application layer itself&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>systems</category>
      <category>performance</category>
      <category>redis</category>
      <category>computerscience</category>
    </item>
    <item>
      <title>Deno script for adding Tailwind CSS to Next.js project in 4 seconds</title>
      <author>Max</author>
      <pubDate>Wed, 03 Nov 2021 19:01:51 +0000</pubDate>
      <link>https://dev.to/comingalive/deno-script-for-adding-tailwind-css-to-nextjs-project-in-4-seconds-24hg</link>
      <guid>https://dev.to/comingalive/deno-script-for-adding-tailwind-css-to-nextjs-project-in-4-seconds-24hg</guid>
      <description>&lt;p&gt;In your project folder run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;deno run --allow-write --allow-read --allow-run https://denos.xyz/add-tailwind-to-next.ts
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;By default it uses yarn. If you don't have yarn, it will use npm. You can force it by adding --npm after the module name.&lt;/p&gt;

</description>
      <category>nextjs</category>
      <category>deno</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>C++ from the beginning - your first program</title>
      <author>Chris Noring</author>
      <pubDate>Wed, 03 Nov 2021 18:49:06 +0000</pubDate>
      <link>https://dev.to/azure/c-from-the-beginning-2o2l</link>
      <guid>https://dev.to/azure/c-from-the-beginning-2o2l</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;TLDR; welcome to this series on C++, it will take you through the basics of C++ so you at the end of the series is able to use the language in a professional manner.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;C++ was invented by Bjarne Stroustrup in 1985. It's estimated to have more than 5.5 million users. &lt;/p&gt;

&lt;p&gt;Where is it used though?&lt;/p&gt;

&lt;p&gt;It's used by major corporations like Google, Facebook, Microsoft and so on and here's some areas:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Medical industry&lt;/li&gt;
&lt;li&gt;Gaming&lt;/li&gt;
&lt;li&gt;Video editing&lt;/li&gt;
&lt;li&gt;Backend systems&lt;/li&gt;
&lt;li&gt;Compilers&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All of these areas needs highly performant languages where you are able to ensure speed, control memory usage and more. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%C2%A0how-do-i-get-started"&gt;
  &lt;/a&gt;
   How do I get started
&lt;/h2&gt;

&lt;p&gt;First, you need a compiler. Check out the below guides to make sure you are set up for your OS:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://code.visualstudio.com/docs/cpp/config-linux"&gt;Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://code.visualstudio.com/docs/cpp/config-clang-mac"&gt;Mac&lt;/a&gt; Mac usually have g++ installed already but this guide shows you how to install clang and use it with Visual Studio Code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://code.visualstudio.com/docs/cpp/config-mingw"&gt;Windows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once you are setup, you are ready to create your first program in C++.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%C2%A0your-first-program"&gt;
  &lt;/a&gt;
   Your first program
&lt;/h2&gt;

&lt;p&gt;In this first program, you'll take some code, use the compiler to create a program that you can run.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create a file &lt;em&gt;app.cpp&lt;/em&gt; and add this code:
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;   &lt;span class="cp"&gt;#include &amp;lt;iostream&amp;gt;
&lt;/span&gt;   &lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

   &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
   &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"First program in C++&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
     &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above code prints out "First program in C++". Before we can see the output, let's compile the program.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Use the compiler calling &lt;code&gt;g++ app.cpp&lt;/code&gt;:
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;   g++ app.cpp
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note how it takes the name of your file as input. What happens now are many things:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;preprocessing&lt;/strong&gt;. A preprocessor deals with directives like your first line &lt;code&gt;#include&lt;/code&gt; and tries to resolve what they mean. In this case, your first line brings a streaming library &lt;code&gt;iostream&lt;/code&gt; into scope that allows you to print to the screen. The output is a C++ without preprocessor directives.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;compilation&lt;/strong&gt;. Next, the compiler takes the C++ output from the first step and turns it into an object file.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;linking&lt;/strong&gt;. This is the last step, in which the object file is turned into either a library or an executable file that you can run.&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Look at the output, you should have an &lt;em&gt;a.out&lt;/em&gt; file in the same directory as you ran &lt;code&gt;g++&lt;/code&gt;. It's a runnable file, exe file on Windows and a file with permission X(executable) on Linux/macOS.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Run the file:&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;   ./a.out &lt;span class="c"&gt;# Linux, macOS&lt;/span&gt;
   a.out.exe &lt;span class="c"&gt;# windows&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You should see "First program in C++". Next, let's try to modify the code by adding a new row:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Modify the code like so (add the part in bold):&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;
#include 
using namespace std;

int main()
{
  cout &amp;lt;&amp;lt; "First program in C++\n";
  &lt;b&gt;cout &amp;lt;&amp;lt; "Here's another row";&lt;/b&gt; 
  return 0;
}
&lt;/pre&gt; 

&lt;ol&gt;
&lt;li&gt;Compile and run the code again:
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;   g++ app.cpp
   ./a.out
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You should see:&lt;/p&gt;

&lt;p&gt;"First program in C++"&lt;br&gt;
   "Here's another row"&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%C2%A0explain-the-code"&gt;
  &lt;/a&gt;
   Explain the code:
&lt;/h2&gt;

&lt;p&gt;Let's go through the code, line by line:&lt;/p&gt;

&lt;pre&gt;
#include 
&lt;/pre&gt;

&lt;p&gt;The above bring in the streaming library &lt;code&gt;iostream&lt;/code&gt; that's able to manage reading and writing to the console.&lt;/p&gt;

&lt;pre&gt;
#include 
&lt;b&gt;using namespace std;&lt;/b&gt;
&lt;/pre&gt;

&lt;p&gt;Next line brings in the namespace &lt;code&gt;std&lt;/code&gt; which enables you to type &lt;code&gt;cout&lt;/code&gt;, instead of &lt;code&gt;std::cout&lt;/code&gt;. A namespace is logical grouping where you usually place all programming constructs that goes together.&lt;/p&gt;

&lt;pre&gt;
#include 
using namespace std;

&lt;b&gt;int main()
{
}&lt;/b&gt;
&lt;/pre&gt;

&lt;p&gt;In this code, a function &lt;code&gt;main()&lt;/code&gt; is defined. A function groups programming statements into a named reference that you can call. In the case of &lt;code&gt;main()&lt;/code&gt;, it's called by the program by itself when the program is started at the console. The &lt;code&gt;main()&lt;/code&gt; function is also known as the &lt;em&gt;entry point&lt;/em&gt;, where the program begins.&lt;/p&gt;

&lt;pre&gt;
#include 
using namespace std;

int main()
{
  &lt;b&gt;cout &amp;lt;&amp;lt; "First program in C++\n";
  cout &amp;lt;&amp;lt; "Here's another row";&lt;/b&gt; 
}
&lt;/pre&gt; 

&lt;p&gt;Here two calls to &lt;code&gt;cout&lt;/code&gt; is made, which means it writes out strings to the console that the user can see.&lt;/p&gt;

&lt;pre&gt;
#include 
using namespace std;

int main()
{
  cout &amp;lt;&amp;lt; "First program in C++\n";
  cout &amp;lt;&amp;lt; "Here's another row"; 
  &lt;b&gt;return 0;&lt;/b&gt;
}
&lt;/pre&gt; 

&lt;p&gt;Lastly, a &lt;code&gt;return&lt;/code&gt; statement is added to the &lt;code&gt;main()&lt;/code&gt; function which means it fulfills the contract of the &lt;code&gt;main()&lt;/code&gt; function, which says to return a number &lt;code&gt;int main()&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;This was your first look into C++, stay tuned for more parts on C++ in this beginner series.  &lt;/p&gt;

</description>
      <category>cpp</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
  </channel>
</rss>
