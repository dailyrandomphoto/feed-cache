<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>What are the coolest coding + music projects out there?</title>
      <author>Ben Halpern</author>
      <pubDate>Thu, 18 Nov 2021 22:28:45 +0000</pubDate>
      <link>https://dev.to/ben/what-are-the-coolest-coding-music-projects-out-there-3kno</link>
      <guid>https://dev.to/ben/what-are-the-coolest-coding-music-projects-out-there-3kno</guid>
      <description>&lt;p&gt;Take this question any way you want, but what projects marry scripting and coding, or just music projects that lend themselves to development in any way.&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>music</category>
    </item>
    <item>
      <title>The Developer's Guide TO Building Notification Systems: Part 3 - Routing &amp; Preferences</title>
      <author>Micah Zayner</author>
      <pubDate>Thu, 18 Nov 2021 22:21:41 +0000</pubDate>
      <link>https://dev.to/courier/the-developers-guide-to-building-notification-systems-part-3-routing-preferences-3g27</link>
      <guid>https://dev.to/courier/the-developers-guide-to-building-notification-systems-part-3-routing-preferences-3g27</guid>
      <description>&lt;p&gt;Your CTO handed you a project to revamp or build your product’s notification system recently. You realized the complexity of this project around the same time as you discovered that there’s not a lot of information online on how to do it. Companies like LinkedIn, Uber, and Slack have large teams of over 25 employees working just on notifications, but smaller companies like yours don’t have that luxury. So how can you meet the same level of quality with a team of one? This is the third post in our series on how you, a developer, can build or improve the best notification system for your company. It follows the first post about identifying &lt;a href="https://www.courier.com/blog/the-developers-guide-user-requirements"&gt;user requirements&lt;/a&gt; and designing with &lt;a href="https://www.courier.com/blog/scalability-and-reliability"&gt;scalability and reliability&lt;/a&gt; in mind. In this piece, we will learn about setting up routing and preferences.&lt;/p&gt;

&lt;p&gt;Notifications serve a range of purposes, from delivering news to providing crucial security alerts that require immediate attention. A reliable notification system both enables valuable interactions between an organization and its customers and prospects and also drives user engagement. These systems combine software engineering with the art of marketing to the right people at the right time.&lt;/p&gt;

&lt;p&gt;Building a service capable of dynamically routing notifications and managing preferences is vital to any notification system. But if you’ve never built a system like this, it might be difficult to figure out what the requirements are and where the edge cases lie. &lt;/p&gt;

&lt;p&gt;In this article, you’ll learn invaluable points to consider when building your own routing service.  You’ll understand the requirements for multi-channel support and in choosing the right API providers. You’ll also learn how to design user preferences so that you can make the most out of each message. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#multichannel-support-a-necessity"&gt;
  &lt;/a&gt;
  Multi-channel support: a necessity
&lt;/h2&gt;

&lt;p&gt;Let’s say that you have just built a web-based application. The first channel that you’ll use to connect with your users is likely email because of how ubiquitous it is. However, with the diversification of channels and depending on your use case, email might not be the most efficient notification channel for you. Compared to other channels, emails typically have a low delivery rate, a low open rate, and a high time to open rate. It’s not uncommon for people to take a full day to even notice your email. If your email gets to the user, it might take awhile before they open it, if at all. &lt;/p&gt;

&lt;p&gt;To engage with your users more effectively, you’ll want to support channels across a broad range of systems not limited to any one application or device. It’s vital to understand not only which channels are most relevant for you but also for your users. If you opt to use Telegram and your users don’t have it, it won’t be a very useful channel to interact with them. Multi-channel support is also vital because while you might pick appropriate channels today, you won’t know which channels you will need to support in the future. Typically, the more appropriate channels you support, the higher the chances of intersecting with applications your users actually use now and in the future.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#choosing-notification-channels-and-providers"&gt;
  &lt;/a&gt;
  Choosing notification channels and providers
&lt;/h2&gt;

&lt;p&gt;You’ll have to select relevant channels and appropriate providers for each channel. For example, two core providers for mobile push notifications are &lt;a href="https://developer.apple.com/library/archive/documentation/NetworkingInternet/Conceptual/RemoteNotificationsPG/APNSOverview.html#//apple_ref/doc/uid/TP40008194-CH8-SW1"&gt;Apple Push Notification Service (APNs)&lt;/a&gt; and &lt;a href="https://firebase.google.com/docs/cloud-messaging"&gt;Firebase Cloud Messaging (FCM)&lt;/a&gt;. APNs only supports Apple devices while Firebase supports both Android and iOS as well as Chrome web apps. &lt;/p&gt;

&lt;p&gt;In the world of email providers, SendGrid, Mailgun, and Postmark are all popular but there are hundreds more. All email APIs differ in what they offer, both in supported functionality and API flexibility. Some providers, like Mailgun, only support transactional emails triggered by user activity. Other providers, like SendGrid and Sendinblue, offer both transactional and marketing emails. If your company opts for a provider that can handle both, you’ll still want to separate the traffic sources, by using different email addresses or domains, to aid email deliverability. If you only have one domain for sending both types of emails and the domain gets flagged as spam, your critical transactional emails will also be affected. Whichever provider you choose, you’ll still want to meticulously verify your DKIM, SPF, and DMARC checks, and domain and IP blacklisting using your own tools or a site like &lt;a href="https://www.mail-tester.com/"&gt;Mail-Tester&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Making requests and receiving responses also differs with each email API provider. Some providers, like Amazon SES, require the developer to &lt;a href="https://www.courier.com/blog/send-email-attachments-aws-s3"&gt;handle sending attachments&lt;/a&gt;, while others, like Mailgun, &lt;a href="https://documentation.mailgun.com/en/latest/api-sending.html#sending"&gt;provide fields in the API schema&lt;/a&gt; for including attachment files directly. &lt;/p&gt;

&lt;p&gt;There are minute variances in formatting HTTPS requests. The maximum payload sizes range from 10MB with Amazon SES API and up to 50MB with Postmark. There are also differences between the rate limits for requests.&lt;/p&gt;

&lt;p&gt;In terms of API responses, Amazon SES &lt;a href="https://docs.aws.amazon.com/ses/latest/APIReference-V2/API_SendEmail.html"&gt;provides&lt;/a&gt; a message identifier when an email is sent successfully through the API, but, for example, SendGrid &lt;a href="https://docs.sendgrid.com/api-reference/mail-send/mail-send"&gt;returns an empty response&lt;/a&gt; in that situation. The HTTP response codes also differ slightly depending on the provider. For example, AWS SES uses the response code &lt;a href="https://docs.aws.amazon.com/ses/latest/APIReference-V2/API_SendEmail.html#API_SendEmail_Errors"&gt;200&lt;/a&gt; for successful email send operations, while Sendinblue uses &lt;a href="https://developers.sendinblue.com/reference/sendtransacemail"&gt;201&lt;/a&gt;, and SendGrid uses &lt;a href="https://docs.sendgrid.com/api-reference/mail-send/mail-send#responses"&gt;202&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;No matter which provider you end up choosing, don’t build your application solely to fit &lt;em&gt;their&lt;/em&gt; logic and specifications. If you do so, it will be much more difficult to change providers in the future as you’ll have to overhaul your backend. It’s crucial to invest in a layer of abstraction based on your own paradigm. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dynamically-routing-notifications-between-channels"&gt;
  &lt;/a&gt;
  Dynamically routing notifications between channels
&lt;/h2&gt;

&lt;p&gt;How do you determine which channels to use and when? Just because you’re able to use email, SMS and mobile push doesn’t mean that you should use all of them simultaneously, since doing so carries a high risk of annoying your users. This is where you begin to formulate an algorithm to route messages between the different channels and the different providers within each channel. The algorithm needs to be robust to handle delivery failures and other errors. For example, if the user hasn’t engaged with a push notification after a day, do you resend it or use email instead? &lt;/p&gt;

&lt;p&gt;You can begin constructing the algorithm using basic criteria. For example, if there is no phone number, eliminate SMS as an option for that user. If email is the primary channel, opting to send at 10 a.m. or 1 p.m. local time typically improves read rates. If the user is present or active in the app, consider sending an in-app push notification instead of an email. Finally, and especially important, get your user’s preferences for how and when they want to be contacted and integrate these preferences into your routing service. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adding-user-preferences-to-your-system"&gt;
  &lt;/a&gt;
  Adding user preferences to your system
&lt;/h2&gt;

&lt;p&gt;Once you’ve got your channels, providers, and routing algorithm figured out, you need to think about providing users with granular control over notification preferences instead of just a binary opt-in/opt-out switch.&lt;/p&gt;

&lt;p&gt;Consider this: if you only allow opting in to or out of all notifications at once, your users might unsubscribe from all your communications because they find one specific notification annoying. As a result, you will lose out on valuable user engagement.&lt;/p&gt;

&lt;p&gt;With granular control over preferences, a user identifies exactly how and when they hear from you. If a user doesn’t like email but wants SMS messages (not common, but possible!), they can adjust their preferences and keep the SMS line of communication open. Every enabled notification channel is another opportunity to engage the user in a way that’s productive for them. From the end user’s perspective, it’s empowering to control how and when they are contacted.&lt;/p&gt;

&lt;p&gt;Note that for some channels, the user’s preferences should be ignored. For instance, two-factor authentication should go to SMS or mobile push regardless of the user’s preference for email. The possibility to override the default logic should be incorporated into your algorithm while you are designing your routing engine. &lt;/p&gt;

&lt;p&gt;If you want to take user engagement further, allow users to opt-in/opt-out of specific channels, frequency, timing and topics. You can allow them to set up their preferences based on time of day, frequency per period, or to specify more than one email address. You can give them the option to receive transactional, digest emails, daily newsletters, or only the critical ones. You can also allow them to redirect their notifications to another address, for example if the user is out of office. &lt;/p&gt;

&lt;p&gt;Granular preferences also extend past the dominion of developers and the user’s experience. Granularity of consent is becoming part of privacy &lt;a href="https://edpb.europa.eu/sites/default/files/files/file1/edpb_guidelines_202005_consent_en.pdf"&gt;compliance laws in Europe&lt;/a&gt; and in the &lt;a href="https://src.bna.com/MVJ?utm_source=ANT&amp;amp;utm_medium=ANP"&gt;state of California&lt;/a&gt; and might follow elsewhere in the future. Separately, granular preferences are an extremely advantageous analytical tool for the marketing team to improve brand strategy and personalization efforts. Is there a particular channel or topic that seems to be more popular? That information can be highly helpful to pivot in line with your users and grow your company. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tips-for-futureproof-maintenance"&gt;
  &lt;/a&gt;
  Tips for future-proof maintenance
&lt;/h2&gt;

&lt;p&gt;When you’re starting with notifications for a new product, there is nothing wrong with sticking to one channel and one provider. The most important principle to keep in mind is to design your notification system so that you can expand it in the future. You should leave the door open to include more providers when you need them. &lt;/p&gt;

&lt;p&gt;Don’t assume that &lt;strong&gt;API paradigms&lt;/strong&gt; are the same for each provider or notification type. For example, you want to send an email, and if delivery fails to send a push notification instead. But you won’t get a 400 HTTP response from the email provider in case of failure. The provider will retry your email over a couple of days. Instead, you’ll want to include &lt;a href="https://docs.github.com/en/developers/webhooks-and-events/webhooks/about-webhooks"&gt;webhooks&lt;/a&gt; or queues to notify you of the failure, and you’ll need to track the state of the message here. If you make blanket assumptions about how API calls work or how errors are returned, you’ll have trouble adapting to a different paradigm in the future. Instead, you can add a layer of abstraction on top of the API.&lt;/p&gt;

&lt;p&gt;It’s also invaluable to &lt;strong&gt;centralize the way you call the provider APIs&lt;/strong&gt;. If you spread out calls to an API throughout your code base, it will be more difficult to integrate other channels or API providers in the future. Let’s say you’re starting with email and &lt;a href="https://docs.courier.com/docs/setup-email-using-aws-ses"&gt;AWS SES&lt;/a&gt; as the provider. In two years’ time, you might decide to integrate mobile push notifications as well. What might that look like? The incurred technical debt will include scouring the code base for all instances of calls to the AWS SES API before you can integrate mobile push as an additional channel. But with centralized calls, you’ll have more consistent, cleaner, and reusable code as you grow.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-many-notification-channels-should-you-have"&gt;
  &lt;/a&gt;
  How many notification channels should you have?
&lt;/h2&gt;

&lt;p&gt;Typically, having three or four channels that are relevant to your product is an ideal scenario for a mature product. When you intersect channels with the preferences and availability of users, you create higher levels of complexity for your algorithm. Offering many channels for notifications might become too complex to maintain. But offering too few channels might harm your chances of interacting with users since some channels might not be viable for all users. For instance, you might decide to offer email and push notifications. But if a user didn’t download your product, your interaction with them is limited only to email. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#best-technologies-for-routing-and-preferences-engines"&gt;
  &lt;/a&gt;
  Best technologies for routing and preferences engines
&lt;/h2&gt;

&lt;p&gt;It ultimately pays to choose technologies that will be a good fit for your routing and preferences needs. There will be a great deal of &lt;a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Asynchronous/Concepts"&gt;asynchronous programming&lt;/a&gt;, as the routing service will often be waiting to receive responses for each function. You’ll want to pick a language or a framework that allows you to respond to async events at scale. &lt;/p&gt;

&lt;p&gt;The routing service also involves considerable state tracking, as most of the routing will depend on waiting on a response for each notification before changing state. The routing service will also need to be re-activated every time it receives a response from a provider and will need to determine if the notification was sent successfully or if it has to pursue next steps. See the example below of how a notification function’s state might be tracked.&lt;/p&gt;

&lt;p&gt;&lt;a href="//images.contentful.com/z7iqk1q8njt4/5VU4MymXGGHdDqPJPJtr4J/5096e7e427e0838b89969927f207f4c7/image1.png" class="article-body-image-wrapper"&gt;&lt;img src="//images.contentful.com/z7iqk1q8njt4/5VU4MymXGGHdDqPJPJtr4J/5096e7e427e0838b89969927f207f4c7/image1.png" alt="routing-and-preferences-rough-1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;At Courier, we use &lt;a href="https://aws.amazon.com/lambda/"&gt;AWS Lambda&lt;/a&gt;. Since our usage tends to come in bursts, serverless technology allows us to adjust and scale for changes in demand throughout each day as well as handle asynchronous operations efficiently. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dont-forget-compliance-in-notification-routing"&gt;
  &lt;/a&gt;
  Don’t forget: compliance in notification routing
&lt;/h2&gt;

&lt;p&gt;When creating your own routing and preferences service, you will need to ensure that whichever channels you implement are fully compliant with applicable laws. For example, there are legal mandates on how users may be contacted or how they can unsubscribe from contact.&lt;/p&gt;

&lt;p&gt;For commercial email messages, the &lt;a href="https://www.ftc.gov/sites/default/files/documents/cases/2007/11/canspam.pdf"&gt;CAN-SPAM Act&lt;/a&gt; of 2003 is a federal United States law that spells out distinct rules and gives recipients a way to stop all contact. Penalties can cost as much as $16,000 per email in violation. This law also outlines requirements such as not using misleading header information or subject lines, identifying ads, and telling recipients how they can opt out of all future email from you. The opt-out process itself is strictly regulated.&lt;/p&gt;

&lt;p&gt;For SMS, the United States &lt;a href="https://www.fdic.gov/resources/supervision-and-examinations/consumer-compliance-examination-manual/documents/8/viii-5-1.pdf"&gt;Telephone Consumer Protection Act (TCPA)&lt;/a&gt; of 1991 sets forth rules against telemarketing and SMS marketing. Under this law, businesses cannot send messages to a recipient without their consent. This consent needs to be explicit and documented. The consent is also twofold: recipients need to consent to receiving SMS marketing messages and they need to consent to receiving them on their mobile device. Recipients need to be provided a description of what they are subscribing to, how many messages they should expect, a link to the terms and conditions of the privacy policy, and instructions on how to opt-out. &lt;/p&gt;

&lt;p&gt;In California especially, the &lt;a href="https://leginfo.legislature.ca.gov/faces/codes_displayText.xhtml?division=3.&amp;amp;part=4.&amp;amp;lawCode=CIV&amp;amp;title=1.81.5"&gt;California Consumer Privacy Act (CCPA)&lt;/a&gt; of 2018 provides additional rights for California residents only. These rights include the right to know which information a company has collected about them and how it’s used as well as the right to delete it or to opt-out of the sale of this information. Information that qualifies under the consumers’ right-to-know includes names, email addresses, products purchased, browsing history, geolocation information, fingerprints, and anything else that can be used to infer preferences. Should a consumer request this information, the company has to share the preceding 12 months of records, and also include sources of this information and with whom it was shared and why. In 2020, &lt;a href="https://src.bna.com/MVJ?utm_source=ANT&amp;amp;utm_medium=ANP"&gt;California Privacy Rights Act (CPRA)&lt;/a&gt; of 2020 amended the CCPA. The CRPA provides further consumer rights to limit the use and disclosure of their personal information.&lt;/p&gt;

&lt;p&gt;Other countries have their own compliance laws for businesses reaching out to leads and customers. Canada has its &lt;a href="https://laws-lois.justice.gc.ca/eng/acts/E-1.6/index.html"&gt;Anti-Spam Legislation (CASL)&lt;/a&gt;. The European Union has the &lt;a href="https://eur-lex.europa.eu/legal-content/EN/TXT/PDF/?uri=CELEX:32016R0679"&gt;General Data Protection Regulation (GDPR)&lt;/a&gt; which now also covers granularity of consent. The United Kingdom has its own regulations along with the GDPR, the &lt;a href="https://www.legislation.gov.uk/uksi/2003/2426/pdfs/uksi_20032426_en.pdf"&gt;Privacy and Electronic Communications Regulations (PECR)&lt;/a&gt; and &lt;a href="https://www.legislation.gov.uk/ukpga/2018/12/contents/enacted"&gt;Data Protection Act&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Compliance itself needs to be integrated at the developer level. Providers, like SendGrid, don’t know what you’re sending. It’s up to the developer to ensure that all applicable compliance laws are followed for their choice of channels. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Building a notification system into a product is not for everyone. The process is time-consuming, complex, and expensive. The level of notification customizability and routing options you decide to implement will ultimately dictate a preference for either maximizing user engagement or optimizing cost. A startup with a product that hasn’t yet found its product-market fit has to focus on finding early customers and getting their feedback. But established companies with a proven customer base will have concerns related to more complex routing logic, future-proofing and compliance. This would require more functionality and higher maintenance costs.&lt;/p&gt;

&lt;p&gt;This piece taught us about the necessity of sending data for notifications to the right people, at the right frequency, at the right time and how this can be done through routing and customized preferences. Tune in for the next post in this series to learn about observability and analytics to monitor the functioning and performance of your in-house notifications system. To stay in the loop about the upcoming content, subscribe below or follow us &lt;a href="https://twitter.com/trycourier?lang=en"&gt;@trycourier&lt;/a&gt;!&lt;/p&gt;

</description>
      <category>startup</category>
      <category>operations</category>
      <category>programming</category>
      <category>devops</category>
    </item>
    <item>
      <title>Release 0.3 - Part 2 Internal Project Contribution</title>
      <author>Kevan Y</author>
      <pubDate>Thu, 18 Nov 2021 22:01:39 +0000</pubDate>
      <link>https://dev.to/pandanoxes/release-03-part-2-internal-project-contribution-4e70</link>
      <guid>https://dev.to/pandanoxes/release-03-part-2-internal-project-contribution-4e70</guid>
      <description>&lt;p&gt;For release 0.3, I worked on &lt;a href="https://github.com/Seneca-ICTOER/IPC144"&gt;IPC144&lt;/a&gt; as my internal project contribution. The issue is &lt;a href="https://github.com/Seneca-ICTOER/IPC144/issues/11"&gt;Add Progressive Web App (PWA) support&lt;/a&gt;.  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#process"&gt;
  &lt;/a&gt;
  Process
&lt;/h2&gt;

&lt;p&gt;I started to install PWA plugin, but Docusaurus, I had some version not matching issue. It turns out that the current project is using an older version of Docusaurus (2.0.0-beta.2). The PWA plugin version has to match the version of Docusaurus to work.&lt;/p&gt;

&lt;p&gt;I created another &lt;a href="https://github.com/Seneca-ICTOER/IPC144/pull/20"&gt;pull request&lt;/a&gt; for upgrading Docusaurus to version (2.0.0-beta.8). After the pull request got merged, I can start working on the PWA feature.&lt;/p&gt;

&lt;p&gt;To implement PWA, we first need an icon for 192x192  and 512x512. After that, we need to create a &lt;code&gt;manifest.json&lt;/code&gt; to add all the settings for PWA.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"theme_color"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"#DA291C"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"background_color"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"#FFFFFF"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"display"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"standalone"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"scope"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"./"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"start_url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"./"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"IPC144 - Course Notes"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"short_name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"IPC144"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"description"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"IPC144 course notes"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"icons"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"src"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"img/pwa/manifest-icon-192.png"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"sizes"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"192x192"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"image/png"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"purpose"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"any maskable"&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"src"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"img/pwa/manifest-icon-512.png"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"sizes"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"512x512"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"image/png"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"purpose"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"any maskable"&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After that we add some more config in &lt;code&gt;docusaurus.config.js&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="nx"&gt;plugins&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@docusaurus/plugin-pwa&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="na"&gt;offlineModeActivationStrategies&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;standalone&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;queryString&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                &lt;span class="na"&gt;pwaHead&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
                    &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="na"&gt;tagName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;link&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="na"&gt;rel&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;icon&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;img/pwa/manifest-icon-512.png&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="p"&gt;},&lt;/span&gt;
                    &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="na"&gt;tagName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;link&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="na"&gt;rel&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;manifest&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/manifest.json&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="p"&gt;},&lt;/span&gt;
                    &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="na"&gt;tagName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;meta&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;theme-color&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#DA291C&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="p"&gt;},&lt;/span&gt;
                    &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="na"&gt;tagName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;meta&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;apple-mobile-web-app-capable&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;yes&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="p"&gt;},&lt;/span&gt;
                    &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="na"&gt;tagName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;meta&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;apple-mobile-web-app-status-bar-style&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#DA291C&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="p"&gt;},&lt;/span&gt;
                    &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="na"&gt;tagName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;link&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="na"&gt;rel&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;apple-touch-icon&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;img/pwa/manifest-icon-192.png&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="p"&gt;},&lt;/span&gt;
                    &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="na"&gt;tagName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;link&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="na"&gt;rel&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mask-icon&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;img/pwa/manifest-icon-512.png&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#DA291C&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="p"&gt;},&lt;/span&gt;
                    &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="na"&gt;tagName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;meta&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;msapplication-TileImage&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;img/pwa/manifest-icon-512.png&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="p"&gt;},&lt;/span&gt;
                    &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="na"&gt;tagName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;meta&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;msapplication-TileColor&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#DA291C&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="p"&gt;},&lt;/span&gt;
                &lt;span class="p"&gt;],&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After that PWA is set up. &lt;/p&gt;

</description>
      <category>opensource</category>
    </item>
    <item>
      <title>Contributing to Telescope 🔭</title>
      <author>Luke Nguyen</author>
      <pubDate>Thu, 18 Nov 2021 21:39:24 +0000</pubDate>
      <link>https://dev.to/mqnguyen/contributing-to-telescope-k1</link>
      <guid>https://dev.to/mqnguyen/contributing-to-telescope-k1</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;While waiting for reviews in my recent &lt;a href="https://dev.to/mqnguyen/contribution-to-course-curriculum-2eb9"&gt;pull request&lt;/a&gt;, I decided to find a different project. After hours of searching for issues on GitHub, I suddenly remembered the first repository where I made my first pull request, Telescope. Since then, the project has undergone many changes with different features and bug fixes, so I think it is time to make another contribution.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-issue"&gt;
  &lt;/a&gt;
  The issue
&lt;/h2&gt;

&lt;p&gt;A quick overview about &lt;a href="https://github.com/Seneca-CDOT/telescope"&gt;Telescope&lt;/a&gt;: it is a web server and application developed by professors and students at Seneca College to track students/faculties' blogs about anything open-source. &lt;/p&gt;

&lt;p&gt;For my &lt;a href="https://github.com/Seneca-CDOT/telescope/issues/2461"&gt;task&lt;/a&gt;, I had to customize Telescope's build log page to match the design and layout of the main dashboard, specifically:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Add header and side navigation bar&lt;/li&gt;
&lt;li&gt;Change side navigation default logo into Telescope logo&lt;/li&gt;
&lt;li&gt;Update link in side navigation logo to redirect to &lt;code&gt;./&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#working-on-the-issue"&gt;
  &lt;/a&gt;
  Working on the issue
&lt;/h2&gt;

&lt;p&gt;After setting up the development environment using Telescope's documentation, I began looking at the UI to figure out what I should do. Lucky for me, there was also a different &lt;a href="https://github.com/Seneca-CDOT/telescope/issues/2433"&gt;issue&lt;/a&gt; that addressed the dashboard page UI, so I decided to use that as a reference.&lt;/p&gt;

&lt;p&gt;I began by adding each UI component one by one, re-rendering the page every time I added in new code to make sure I didn't break anything. Once I was satisfied with my changes, I opened up a &lt;a href="https://github.com/Seneca-CDOT/telescope/pull/2480"&gt;pull request&lt;/a&gt; on Telescope, explaining what I did and providing screenshots of the result. &lt;/p&gt;

&lt;p&gt;Since I was referencing another issue, I had to keep track of the updated changes in the other PR and update mine accordingly. The other PR also had many requested changes, so I tried my best to read through all the reviews, adding comments when I needed help and clarification to ensure that I wouldn't break or miss anything.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Similar to the other PR, when this post is online, the PR is currently under review. I will constantly keep an eye on new notifications regarding this PR and add more commits if needed.&lt;/p&gt;

&lt;p&gt;Cheers! 🍻&lt;/p&gt;

</description>
      <category>opensource</category>
    </item>
    <item>
      <title>Release 0.3 - Part 1 External Project Contribution</title>
      <author>Kevan Y</author>
      <pubDate>Thu, 18 Nov 2021 21:08:44 +0000</pubDate>
      <link>https://dev.to/pandanoxes/release-03-part-1-external-project-contribution-1oij</link>
      <guid>https://dev.to/pandanoxes/release-03-part-1-external-project-contribution-1oij</guid>
      <description>&lt;p&gt;For release 0.3, I started to contribute on &lt;a href="https://github.com/Heptagram-Bot"&gt;Heptagram&lt;/a&gt; repo. The notice that they migrated their website into React. I found out that they do not have prettier set up for the new React project. So I created an issue and asked to be assigned to work on that issue &lt;a href="https://github.com/Heptagram-Bot/heptagram.xyz/issues/98"&gt;✨❓ Feature Request: Add Prettier config&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;I first started to install prettier, and add a script for it, one for checking and the other one for writing.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"prettier"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"prettier --write &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;./**/*.{md,jsx,json,html,css,js,yml}&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="nl"&gt;"prettier-check"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"prettier --check &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;./**/*.{md,jsx,json,html,css,js,yml}&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After that, I made &lt;code&gt;.prettierrc.json&lt;/code&gt; and add some rules.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"arrowParens"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"always"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"bracketSpacing"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"embeddedLanguageFormatting"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"auto"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"endOfLine"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"lf"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"htmlWhitespaceSensitivity"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"css"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"insertPragma"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"jsxSingleQuote"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"proseWrap"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"preserve"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"quoteProps"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"as-needed"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"requirePragma"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"singleQuote"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"tabWidth"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"trailingComma"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"es5"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"useTabs"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"vueIndentScriptAndStyle"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"printWidth"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I committed and pushed my change to remote, then I created a PR for asking if the prettier format is ok before I run a prettier on all files which change the whole project file format. &lt;/p&gt;

&lt;p&gt;After receiving confirmation that everything is okay. I run &lt;code&gt;npm run prettier&lt;/code&gt; to change all the files and commit my change then after a few hours my &lt;a href="https://github.com/Heptagram-Bot/heptagram.xyz/pull/100"&gt;PR&lt;/a&gt; got merged.&lt;/p&gt;

</description>
      <category>opensource</category>
    </item>
    <item>
      <title>Micro Frontend, but it's chaos!</title>
      <author>Muhammad | עזרא</author>
      <pubDate>Thu, 18 Nov 2021 21:05:53 +0000</pubDate>
      <link>https://dev.to/0xf10yd/micro-frontend-but-its-chaos-68j</link>
      <guid>https://dev.to/0xf10yd/micro-frontend-but-its-chaos-68j</guid>
      <description>&lt;h2&gt;
  &lt;a href="#but-why-do-we-need-it"&gt;
  &lt;/a&gt;
  But why do we need it?
&lt;/h2&gt;

&lt;p&gt;As the frontend becomes larger, while holding multiple domains of responsibilities (for example — navigation, user, authorization, e. g. ), the frontend application is developed, deployed and hosted as a single application. &lt;/p&gt;

&lt;p&gt;Micro-frontends allows us to use those different applications not just on the code base, but also in development, deployment and serve, in order to provide:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Loosely coupled applications&lt;/li&gt;
&lt;li&gt;Faster development, debugging, and testing flows&lt;/li&gt;
&lt;li&gt;Performance — smaller chunks&lt;/li&gt;
&lt;li&gt;Full Isolation while testing, developing, and deploying&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DmCGzait--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.indepth.dev/images/2021/10/microfrontend.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DmCGzait--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.indepth.dev/images/2021/10/microfrontend.png" alt="E2E Domains held by different teams" width="880" height="503"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;During this article we will review the frontend application that is built out of the shell and 3 applications that represent a domain:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Shell — Used as the entry point for loading each of our micro-applications based on the URL path. The shell application will also trigger authorization for route guards.&lt;/li&gt;
&lt;li&gt;Navigation — Responsible for navigation logic and state, including the nav-bar component, navigation service&lt;/li&gt;
&lt;li&gt;User — Responsible for user logic and state, including the user query and store logic, user info component, and user management page&lt;/li&gt;
&lt;li&gt;Feed — Responsible for fetching and presenting the feed items, each item contains the user logic and state, including the user query and store logic.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Each application built out the following layers: &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RVBW6PS1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.indepth.dev/images/2021/10/1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RVBW6PS1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.indepth.dev/images/2021/10/1.png" alt="Micro frontends layers" width="591" height="341"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Composition layer — This layer holds a set of application pages with their corresponding routes&lt;/li&gt;
&lt;li&gt;Widgets layer — This layer holds a set of domain-related components used to build the different pages found on the composition layer&lt;/li&gt;
&lt;li&gt;Business logic layer — This layer holds a set of services and utilities responsible for the domain business logic.&lt;/li&gt;
&lt;li&gt;Communication layer — This layer holds a set of services that are used to communicate with the different service providers (Backend services for example).&lt;/li&gt;
&lt;li&gt;Storage layer — This layer holds the logic to persist data into the storage objects&lt;/li&gt;
&lt;li&gt;In memory — State, hooks e.g.&lt;/li&gt;
&lt;li&gt;Disk — local-storage, indexedDB, cookies e.g.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#wait-but-where-is-the-chaos"&gt;
  &lt;/a&gt;
  Wait, but where is the chaos?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--317w9C7w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.indepth.dev/images/2021/10/2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--317w9C7w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.indepth.dev/images/2021/10/2.png" alt="The Chaos" width="851" height="771"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks to module-federation, we can load Micro-frontends applications during run time without the need to build the entire dependency graph. &lt;/p&gt;

&lt;p&gt;This introduces a whole new aspect of stability issues of frontend applications:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What happens when we are deploying a new version of our application (User in our scenario)?&lt;/li&gt;
&lt;li&gt;How can we identify affected areas?&lt;/li&gt;
&lt;li&gt;How can we guarantee there are no breaking changes hidden behind each deployment?&lt;/li&gt;
&lt;li&gt;How can we prevent tight coupling between multiple applications that are hosted together?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In our example, imagine a developer changed one of the widgets from the User application, this widget is consumed by both the Feed and the Navigation applications. Now, let's imagine the change the developer done is breaking the contract (component API — inputs/outputs, aka. props).&lt;/p&gt;

&lt;p&gt;This will lead to a runtime error while loading the new version within the existing applications.&lt;/p&gt;

&lt;p&gt;And the result? Cascading failure of our frontend application after deployment of the new User application.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1nvzBSzE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.indepth.dev/images/2021/10/3-1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1nvzBSzE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.indepth.dev/images/2021/10/3-1.png" alt="Big Failure" width="880" height="775"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tackling the problem&lt;br&gt;
First, let’s review the requirements we have from the micro-frontend applications:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Each application should be built, tested and served as a standalone unit.&lt;/li&gt;
&lt;li&gt;A modification of a single application should be available to be used by any other application.&lt;/li&gt;
&lt;li&gt;Application widgets and services should be reusable and interchangeable.&lt;/li&gt;
&lt;li&gt;Encapsulation of application internal models and business logic — Modifications shouldn’t affect application consumers.&lt;/li&gt;
&lt;li&gt;Identify dependency graph per modification — will help us to trigger only the relevant tests suites and builds.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Following those items, lets’ review the approach from the previous section:&lt;br&gt;
The approach covers bullets 1 to 3 from the requirements list. But, it still fails for both bullets 4 and 5 which promise us the stability of our product.&lt;/p&gt;

&lt;p&gt;Let’s review the different approaches to handle this chaos.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#the-libraries-approach"&gt;
  &lt;/a&gt;
  The libraries approach
&lt;/h2&gt;

&lt;p&gt;In order to increase the stability of the application, we need to prevent hidden breaking changes.&lt;br&gt;
With the libraries approach, this can achieve easily while using the npm package version. As each build of our applications is sealing the library version it’s using we can prevent consumption of library versions that might contain breaking changes.&lt;/p&gt;

&lt;p&gt;Using module federation, we can set the shared libraries, as part of this configuration we can set the satisfied package version using the npm package versioning convention.&lt;/p&gt;

&lt;p&gt;This approach helps us to break our monolith into 4 layers:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IGOHtzWB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.indepth.dev/images/2021/10/4-1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IGOHtzWB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.indepth.dev/images/2021/10/4-1.png" alt="libs approach" width="880" height="670"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Core Library — This layer contains domain agnostic libraries, those libraries provide us the building block for our feature libraries layer.&lt;/li&gt;
&lt;li&gt;Feature libraries layer — This layer contains domain-specific business logic, storage logic, and widgets. Those widgets are developed based on the core libraries component kit and additional components that are part of the specific domain of responsibility.&lt;/li&gt;
&lt;li&gt;Composition applications — This layer contains domain-specific routes and pages. Those pages are built based on widgets, services, and business logic developed as part of the “Feature libraries” layer.&lt;/li&gt;
&lt;li&gt;Shell — The entry point of the application, usually acts as a container and a router to load each of the micro-applications based on the path.&lt;/li&gt;
&lt;li&gt;The shell application might also trigger authorization logic.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Structure:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;- apps
  - user
  - feed
  - navigation
  - shell
- libs
  - users-lib
  - feed-lib
  - navigation-lib
  - auth
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Webpack configuration:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;plugins&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;ModuleFederationPlugin&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;user&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;remoteEntry.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;exposes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./bootstrap&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./apps/user/bootstrap.module.ts&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="na"&gt;shared&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;share&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@angular/core&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;singleton&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;strictVersion&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;requiredVersion&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;^12.0.0&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@angular/common&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;singleton&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;strictVersion&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;requiredVersion&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;^12.0.0&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@angular/common/http&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;singleton&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;strictVersion&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;requiredVersion&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;^12.0.0&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@angular/router&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;singleton&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;strictVersion&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;requiredVersion&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;^12.0.0&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@mfe/auth&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;singleton&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;strictVersion&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;requiredVersion&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;^1.0.0&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@mfe/user&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;singleton&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;strictVersion&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;requiredVersion&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;^1.5.0&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;        &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;sharedMappings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getDescriptors&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
      &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;}),&lt;/span&gt;
  &lt;span class="nx"&gt;sharedMappings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getPlugin&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;],&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#advantages"&gt;
  &lt;/a&gt;
  Advantages
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Shareable widgets, services, and pages (compositions) across applications.&lt;/li&gt;
&lt;li&gt;Breaking changes prevention — Using a sealed version of the consumed library during the build.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#disadvantages"&gt;
  &lt;/a&gt;
  Disadvantages
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Data corruption — Possible due to collision between multiple versions of the same library (override the state, local storage e.g.).&lt;/li&gt;
&lt;li&gt;Bundle size increase — Libraries might be loaded more than once due to different versions.&lt;/li&gt;
&lt;li&gt;Deployment graph complexity — critical modifications require rebuilding and redeploying the entire dependency graph.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#the-anticorruption-layer-approach"&gt;
  &lt;/a&gt;
  The anti-corruption layer approach
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#what-is-the-anticorruption-layer"&gt;
  &lt;/a&gt;
  What is the anti-corruption layer?
&lt;/h3&gt;

&lt;p&gt;An anti-corruption layer is a set of Public-APIs exposed by an application for integration use, those Public-APIs are acting as contracts in order to isolate the application internal models and business logic complexity, and are used as exported modules, components, façade*, and adapters* classes.&lt;/p&gt;

&lt;p&gt;This layer can be uni-directional or bi-directional (fetch or ingest data).&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Façade&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;A service that provides a simple interface to a complex application, encapsulates the complexity of initiating the application.&lt;br&gt;
A façade might provide limited functionality, those are the required sub-set for integrating with the micro-frontend application&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Adapter&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;A service that is responsible for covert the interface and the data model of an object to another structure/interface which is accepted by the consumers.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LO-e9-Db--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.indepth.dev/images/2021/10/5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LO-e9-Db--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.indepth.dev/images/2021/10/5.png" alt="" width="652" height="411"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-updated-4layers-approach"&gt;
  &lt;/a&gt;
  The updated 4-layers approach
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DuzAX1Ug--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.indepth.dev/images/2021/10/6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DuzAX1Ug--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.indepth.dev/images/2021/10/6.png" alt="Updated Approach" width="880" height="670"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The only modification is casting the Feature layer from libraries to applications, this allows us to serve those widgets and services seamlessly to the consumers. Having said that we will still need to protect from breaking changes, here is where the anti-corruption layer is taking place&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Core Library — This layer contains domain agnostic libraries, those libraries provide us the building block for our feature libraries layer.&lt;/li&gt;
&lt;li&gt;Feature application layer — This layer contains domain-specific business logic, storage logic, and widgets.
Those widgets are developed based on the core libraries component kit and additional components that are part of the specific domain.&lt;/li&gt;
&lt;li&gt;The exposed logic and components are protected with an anti-corruption layer to prevent breaking changes.&lt;/li&gt;
&lt;li&gt;Composition applications — This layer contains domain-specific routes and pages. Those pages are built based on widgets, services, and business logic developed as part of the “Feature application” layer.&lt;/li&gt;
&lt;li&gt;Shell — The entry point of the application, usually acts as a container and a router to load each of the micro-applications based on the path. The shell application might also trigger authorization logic.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#structure"&gt;
  &lt;/a&gt;
  Structure:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;- apps
  - user
    - src
      - modules
        - bootstrap
          - bootstrap.module.ts
    - public-api.ts
    - public-api.d.ts
  - feed
     - src
      - modules
        - bootstrap
          - bootstrap.module.ts
    - public-api.ts
    - public-api.d.ts
  - navigation
    - src
      - modules
        - bootstrap
          - bootstrap.module.ts
    - public-api.ts
    - public-api.d.ts
  - shell
- libs
  - auth
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#webpack-configuration"&gt;
  &lt;/a&gt;
  Webpack Configuration
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;plugins&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;ModuleFederationPlugin&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;user&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;remoteEntry.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;exposes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./public-api&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./apps/user/public-api.ts&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="na"&gt;shared&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;share&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@angular/core&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;singleton&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;strictVersion&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;requiredVersion&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;^12.0.0&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@angular/common&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;singleton&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;strictVersion&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;requiredVersion&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;^12.0.0&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@angular/common/http&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;singleton&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;strictVersion&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;requiredVersion&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;^12.0.0&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@angular/router&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;singleton&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;strictVersion&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;requiredVersion&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;^12.0.0&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@mfe/auth&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;singleton&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;strictVersion&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;requiredVersion&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;^1.0.0&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;sharedMappings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getDescriptors&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
      &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;}),&lt;/span&gt;
  &lt;span class="nx"&gt;sharedMappings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getPlugin&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;],&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#advantages"&gt;
  &lt;/a&gt;
  Advantages
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Shareable widgets, services, and pages (compositions) across applications&lt;/li&gt;
&lt;li&gt;Seamless propagation of an upgrade&lt;/li&gt;
&lt;li&gt;Breaking changes prevention using Anti-Corruption layer.&lt;/li&gt;
&lt;li&gt;Refactor is becoming more simple thanks to encapsulation.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Disadvantages&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Another layer to be maintain&lt;/li&gt;
&lt;li&gt;Education and learning curve&lt;/li&gt;
&lt;li&gt;Integration testing is required to promise unbreaking changes&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HaBHvuok--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.indepth.dev/images/2021/10/7.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HaBHvuok--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.indepth.dev/images/2021/10/7.jpeg" alt="Bonus" width="687" height="500"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>microservices</category>
      <category>architecture</category>
      <category>webdev</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Flask API Boilerplate - Simple Starter in Action</title>
      <author>Sm0ke</author>
      <pubDate>Thu, 18 Nov 2021 21:04:24 +0000</pubDate>
      <link>https://dev.to/sm0ke/flask-api-boilerplate-simple-starter-in-action-283e</link>
      <guid>https://dev.to/sm0ke/flask-api-boilerplate-simple-starter-in-action-283e</guid>
      <description>&lt;p&gt;Hello coders!&lt;/p&gt;

&lt;p&gt;This article presents an open-source &lt;a href="https://appseed.us/boilerplate-code/flask-api-boilerplate"&gt;Flask API Boilerplate&lt;/a&gt; that any developer with basic programming knowledge might use to bootstrap fast a full-stack project with React, Vue, or any other Frontend Framework. The product implements a &lt;code&gt;simple API interface&lt;/code&gt; that covers &lt;strong&gt;login&lt;/strong&gt;, &lt;strong&gt;logout&lt;/strong&gt; and &lt;strong&gt;register&lt;/strong&gt; actions using &lt;code&gt;JSON Web Tokens&lt;/code&gt;. For newcomers, &lt;strong&gt;Flask&lt;/strong&gt; is a leading web framework written in Python used to code from a simple website, APIs, or complex eCommerce solutions.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Thanks for reading!&lt;/em&gt; - Content provided by &lt;strong&gt;&lt;a href="https://appseed.us/"&gt;App Generator&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;ul&gt;
&lt;li&gt;✨ &lt;a href="https://appseed.us/boilerplate-code/flask-api-boilerplate"&gt;Flask API Boilerplate&lt;/a&gt; - product page hosted by AppSeed&lt;/li&gt;
&lt;li&gt;✨ &lt;a href="https://github.com/app-generator/api-server-flask"&gt;Flask API Boilerplate&lt;/a&gt; - source code (MIT License)&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#codebase-features"&gt;
  &lt;/a&gt;
  Codebase Features
&lt;/h2&gt;

&lt;p&gt;Simple API Starter enhanced with JWT authentication, SqlAlchemy, SQLite persistence, and deployment scripts via Docker.  It has all the ready-to-use bare minimum essentials. Features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;Up-to-date dependencies&lt;/code&gt;: &lt;strong&gt;Flask 2.0.2&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://docs.appseed.us/boilerplate-code/api-unified-definition"&gt;API Definition&lt;/a&gt; - the unified API structure implemented by this server&lt;/li&gt;
&lt;li&gt;Simple, intuitive codebase - can be extended with ease.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Flask-RestX&lt;/code&gt;, &lt;code&gt;Flask-jwt_extended&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Docker&lt;/code&gt;, Unitary tests&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The Interface provides a simple, intuitive authentication interface that manages the registration and authentication using JWT tokens.&lt;/p&gt;

&lt;p&gt;Probably the most easier way to start and use the product locally is via Docker, a popular virtualization software.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #1&lt;/strong&gt; - Clone Sources from GH&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git clone https://github.com/app-generator/api-server-flask.git
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;api-server-flask 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #2&lt;/strong&gt; - Start the API in Docker&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose pull  &lt;span class="c"&gt;# download dependencies &lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose build &lt;span class="c"&gt;# local set up&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose up    &lt;span class="c"&gt;# start the API &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;Once all the above commands are executed, the API should be accessible in the browser at &lt;code&gt;http://localhost:5000&lt;/code&gt; (the default address). To test and interact with the interface we have multiple choices: &lt;code&gt;POSTMAN&lt;/code&gt;, &lt;code&gt;curl&lt;/code&gt; or the embedded &lt;code&gt;Swagger Dashboard&lt;/code&gt; exposed natively by Flask-RestX.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4QNP35rn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3g7d20ys6nvor90deu86.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4QNP35rn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3g7d20ys6nvor90deu86.png" alt="Flask Boilerplate API - Swagger Dashboard." width="800" height="236"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;From this point, we can code our own frontend to interact and use this minimal authentication API or use other projects already compatible to communicate with this interface:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;👉 &lt;a href="https://github.com/app-generator/react-soft-ui-dashboard"&gt;React Soft Dashboard&lt;/a&gt; - source code&lt;/li&gt;
&lt;li&gt;👉 &lt;a href="https://github.com/app-generator/react-berry-dashboard"&gt;React Berry Dashboard&lt;/a&gt; - source code&lt;/li&gt;
&lt;li&gt;👉 &lt;a href="https://github.com/app-generator/react-datta-able"&gt;React Datta Able&lt;/a&gt; - source code&lt;/li&gt;
&lt;li&gt;👉 &lt;a href="https://github.com/app-generator/react-purity-dashboard"&gt;React Purity Dashboard&lt;/a&gt; - source code&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;We can choose any product from the above list to compile and start in the local environment manually or via Docker. Let's pick &lt;a href="https://appseed.us/product/flask-react-soft-dashboard"&gt;React Soft Dashboard&lt;/a&gt;, a really nice Material-UI design crafted by &lt;code&gt;Creative-Tim&lt;/code&gt;.&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #1&lt;/strong&gt; - Clone Sources (Github)&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git clone https://github.com/app-generator/react-soft-ui-dashboard.git
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;react-soft-ui-dashboard 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #2&lt;/strong&gt; - Start the React UI in Docker&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose pull  &lt;span class="c"&gt;# download dependencies &lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose build &lt;span class="c"&gt;# local set up&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose up    &lt;span class="c"&gt;# start the React App &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The React UI by default, redirects the guest users to authenticate and we should see in the browser the login page.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pcP6w1Wa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aaulyn57ud61ssxrv3d2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pcP6w1Wa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aaulyn57ud61ssxrv3d2.png" alt="Flask React Soft Dashboard - Login Page" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Flask React Soft Dashboard - Widgets Page&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--O5qOFyfo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wti4r0aotivnk1c3a69l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--O5qOFyfo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wti4r0aotivnk1c3a69l.png" alt="Flask React Soft Dashboard - Widgets Page" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;In a similar way, we can compile and start the rest of the samples using Docker or a classic manual build by typing &lt;code&gt;yarn&lt;/code&gt; and &lt;code&gt;yarn start&lt;/code&gt; in the root of each product.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#flask-react-berry"&gt;
  &lt;/a&gt;
  &lt;a href="https://appseed.us/product/flask-react-berry-dashboard"&gt;Flask React Berry&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Berry is a creative-free React Admin Dashboard build using the Material-UI by CodedThemes. It is meant to provide a nice User Experience with highly customizable feature-riched pages now available in a full-stack product.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;👉 &lt;a href="https://appseed.us/product/flask-react-berry-dashboard"&gt;Flask React Berry&lt;/a&gt; - product page&lt;/li&gt;
&lt;li&gt;👉 &lt;a href="https://flask-react-berry-dashboard.appseed-srv1.com/"&gt;Flask React Berry&lt;/a&gt; - LIVE Demo&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Berry Dashboard is a complete game-changer React Dashboard Template with an easy and intuitive responsive design as on retina screens or laptops.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--janC_lFC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/atyk9xvotn0whwapcmqe.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--janC_lFC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/atyk9xvotn0whwapcmqe.png" alt="Flask Dashboard Berry - Charts Page" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#flask-react-datta-able"&gt;
  &lt;/a&gt;
  &lt;a href="https://appseed.us/product/flask-react-datta-able"&gt;Flask React Datta Able&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Datta Able is a colorful free React Admin Dashboard crafted by CodedThemes. It comes with high feature-rich pages and components with fully developer-centric code.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;👉 &lt;a href="https://appseed.us/product/flask-react-datta-able"&gt;Flask React Datta Able&lt;/a&gt; - product page&lt;/li&gt;
&lt;li&gt;👉 &lt;a href="https://flask-react-datta-able.appseed-srv1.com/"&gt;Flask React Datta Able&lt;/a&gt; - LIVE Demo&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Datta Able React comes with error/bug-free, well structured, well-commented code and regularly with all latest updated code.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SQkjMDv7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zrouproavoq16moogqn9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SQkjMDv7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zrouproavoq16moogqn9.png" alt="Flask React Berry - Charts Page" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Thanks for reading!&lt;/strong&gt; For more resources, feel free to access:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;AppSeed for &lt;a href="https://appseed.us/support"&gt;support&lt;/a&gt; via email and &lt;a href="https://discord.gg/fZC6hup"&gt;Discord&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;More &lt;a href="https://appseed.us/apps/react"&gt;React Apps&lt;/a&gt; crafted with &lt;code&gt;Django&lt;/code&gt;, &lt;code&gt;Flask&lt;/code&gt; and &lt;code&gt;Node JS&lt;/code&gt; APIs. &lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>webdev</category>
      <category>react</category>
      <category>flask</category>
      <category>opensource</category>
    </item>
    <item>
      <title>How to Convince Your Boss to Open Source a Project</title>
      <author>Rizel Scarlett</author>
      <pubDate>Thu, 18 Nov 2021 20:54:15 +0000</pubDate>
      <link>https://dev.to/github/how-to-convince-your-boss-to-open-source-a-project-2kb8</link>
      <guid>https://dev.to/github/how-to-convince-your-boss-to-open-source-a-project-2kb8</guid>
      <description>&lt;p&gt;Changing your company's culture can be difficult, especially if you are persuading your boss, company, or leadership team to open source a project. The hard truth is that businesses care about finances, specifically how to acquire and retain money.  Their concerns are valid. Without financial stability and growth, the company is at risk of coming to a halt, which affects its employees and customers. The goal of a business is to stay in business. Perhaps, you understand that, and you see that open sourcing a project will help the company thrive more, but you're unsure how to help your employer recognize the value in open sourcing a project.&lt;/p&gt;

&lt;p&gt;Here are four concerns your boss may have and responses you can use to alleviate their worries:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-im-afraid-of-the-legal-copyright-and-security-risks"&gt;
  &lt;/a&gt;
  1. I’m afraid of the legal, copyright, and security risks.
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Your response&lt;/strong&gt;: Licensing is confusing, but we don't have to try to understand it alone. We can work with an Open Source Program Office (OSPO). The goal of an Open Source Office Program Office consists of individuals with expertise in open source strategy. Their goal is to oversee open source software management and strategy. OSPOs handle:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Licensing&lt;/li&gt;
&lt;li&gt;Security vulnerabilities&lt;/li&gt;
&lt;li&gt;Open source business partnerships&lt;/li&gt;
&lt;li&gt;Tracking metrics&lt;/li&gt;
&lt;li&gt;Distribution &lt;/li&gt;
&lt;li&gt;Supporting communication between external and internal contributors&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Many companies, including Spotify, BMW, and Netflix, lean on an OSPO to manage their open source strategy. See the exhaustive list of companies with OSPOs &lt;a href="https://landscape.todogroup.org/"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can learn more in detail about the responsibilities and benefits of an OSPO at the resources below: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://dev.to/wassimchegham/21-reasons-why-open-source-is-good-for-your-business-5e74"&gt;21 Reasons Why Open Source is Good for Your Business&lt;/a&gt; by Wassim Chegham&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.slideshare.net/AshleyWolf/a-tale-of-two-cities-merging-yahoo-and-aols-open-source-programs"&gt;A Tale of Two Cities: Merging Yahoo and AOL's Open Source Programs&lt;/a&gt; by Ashley Wolf&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#2-open-sourcing-our-repository-will-reduce-our-code-quality"&gt;
  &lt;/a&gt;
  2. Open sourcing our repository will reduce our code quality.
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Your response&lt;/strong&gt;: Our code quality will increase! In this article, &lt;a href="https://www.ycombinator.com/library/56-why-the-best-companies-and-developers-give-away-almost-everything-they-do"&gt;Why the Best Companies and Developers Give Away Almost Everything They Do&lt;/a&gt;, &lt;a href="https://www.ybrikman.com/"&gt;Yevgeniy Brikman&lt;/a&gt; states, “When is your home cleanest? My guess is that you do the most cleaning just before guests arrive. The same is true of anything that you share with others. One of the unexpected benefits of open sourcing your code is that the mere act of preparing the code for open source often leads to higher-quality code because you know that "guests" will be looking at it. You'll probably take the time to clean up the code, add tests, write documentation, and generally make the project more presentable to the rest of the world." Additionally, more contributors can mean you'll have more users reporting bugs and more developers fixing them quickly.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-will-open-sourcing-our-projects-hurt-our-reputation-and-our-relevance-in-the-industry-enterprise-organizations-arent-going-open-source"&gt;
  &lt;/a&gt;
  3. Will open sourcing our projects hurt our reputation and our relevance in the industry? Enterprise organizations aren’t going open source.
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Your response&lt;/strong&gt;: As we've seen, on the &lt;a href="https://landscape.todogroup.org/"&gt;list of companies that have OSPOs&lt;/a&gt;, enterprise companies such as Google, Facebook, and Goldman Sachs are heavily involved in open source. Many of these companies recognize that open sourcing a project improves the organization's reputation. Open sourcing a project can help us with:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Marketing&lt;/strong&gt; - Users who love our product will feel more compelled and excited to help us make our product better. Contributing will fuel their passion even more, and they will start encouraging those in their network to use and/or contribute to our project. Some contributors may even talk about our project at conferences, on Twitch livestreams, in blog posts, and in YouTube tutorials. That's free marketing to help the organization acquire customers and developers!&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Hiring&lt;/strong&gt; - Developers admire companies that are transparent about their technological growth and processes. As contributors increase awareness of our product and our own company documents its journey, we will attract highly-skilled, community-driven, empathetic developers. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Longevity&lt;/strong&gt; - With increased collaboration, our organization will gain access to developers with varied technological experiences. They can help keep our project up to date with the latest technological tools, and contributors can help to add integrations at a faster pace. For example, before the rise of container orchestration, both Spotify and Google developed their own systems called Helios and Kubernetes. Google chose to open source Kubernetes, while Spotify kept Helios as an internal project. Unfortunately, Spotify didn't have enough capacity to continue the project internally. Over the past seven years, Kubernetes has been a top choice for container orchestration; even Spotify migrated their containerization to Kubernetes.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#4-how-will-we-make-money-if-we-open-source-our-code"&gt;
  &lt;/a&gt;
  4. How will we make money if we open source our code?
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Your response&lt;/strong&gt;: Open source software doesn't always mean free. Some open source companies such as MongoDB, Elastic, and HashiCorp have multi-billion dollar valuations. This is another opportunity for the experts of an OSPO to advise us. We can choose to embrace an open source model that works for us.&lt;/p&gt;

&lt;p&gt;If your employer is &lt;strong&gt;still&lt;/strong&gt; hesitant about open sourcing a project, the methods below can help your company gradually embrace the open source community:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Suggest open source products that can help improve your team's workflow&lt;/li&gt;
&lt;li&gt;Create awareness of the open source tools your company currently uses&lt;/li&gt;
&lt;li&gt;Contribute to existing open source projects &lt;/li&gt;
&lt;li&gt;Motivate your teammates to contribute to open source&lt;/li&gt;
&lt;li&gt;Sponsor an open source project&lt;/li&gt;
&lt;li&gt;Encourage your company to sponsor a project that's beneficial to the company&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;If you found this helpful or you've convinced your company to adopt an open source model, share your experience below!&lt;/em&gt;&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>startup</category>
      <category>career</category>
      <category>leadership</category>
    </item>
    <item>
      <title>10 takeaways from my first software developers Meetup </title>
      <author>Damian Demasi</author>
      <pubDate>Thu, 18 Nov 2021 20:53:22 +0000</pubDate>
      <link>https://dev.to/colocodes/10-takeaways-from-my-first-software-developers-meetup-1kec</link>
      <guid>https://dev.to/colocodes/10-takeaways-from-my-first-software-developers-meetup-1kec</guid>
      <description>&lt;p&gt;Yesterday evening I went to my first software development Meetup. I was hesitating in going because I'm sort of an introvert and going into a room full of strangers is not what I imagine when I think about doing something &lt;em&gt;fun&lt;/em&gt;. Fortunately, I pushed myself to go, thinking that, at least, I would listen to what the speakers had to say.&lt;/p&gt;

&lt;p&gt;To my surprise, I enjoyed the experience quite much. I didn't do much networking, but I could see and hear about people from different backgrounds trying to start (and continue) their careers in software development. The Meetup was focused on junior developers, so the discussion was focused on how to get jobs and the first steps after getting a job. I was glad to know many recommended a process to land jobs that are very similar to the one I followed to get my first job as a software developer, of which you can read more here:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/colocodes" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iYbdtIsq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--2sZPQzQE--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/420036/7f62b9dd-71f0-4e06-9466-1340b5d8a038.png" alt="colocodes"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/colocodes/how-ive-got-a-web-development-job-one-week-after-publishing-my-portfolio-3o6g" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;How I’ve got a web development job one week after publishing my portfolio&lt;/h2&gt;
      &lt;h3&gt;Damian Demasi ・ Nov 1 ・ 13 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#portfolio&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#my-takeaways"&gt;
  &lt;/a&gt;
  My takeaways
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1-no-one-regrets-being-brave"&gt;
  &lt;/a&gt;
  1. No one regrets being brave
&lt;/h3&gt;

&lt;p&gt;There is a saying that I heard on the Netflix show &lt;em&gt;Luis Miguel&lt;/em&gt; (a great show, by the way) in which one of the characters says:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;No one regrets being brave&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I used that phrase as my mantra, and that is what pushed me beyond my introversion and allowed me to face the uncomfortable situation of facing strangers (in a strange language, as English is not my mother tongue).&lt;/p&gt;

&lt;p&gt;I knew I would regret not going more than the regret of going and, potentially, making a fool of myself. In the end, it was a great experience, although I didn't manage to extract all the juice out of it (maybe next time!).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-the-importance-of-culture"&gt;
  &lt;/a&gt;
  2. The importance of culture
&lt;/h3&gt;

&lt;p&gt;There was a general consensus among speakers and the senior developer to whom I talked to that, for junior developers, culture fit is more important than knowledge. This is something that I experienced myself during the interview I had for my current position.&lt;/p&gt;

&lt;p&gt;Having the right mindset, caring about the craftsmanship of building things with your code, and having emotional and social intelligence to become a positive addition to a team, is what companies are looking for, and something they won't be teaching you. On the other hand, knowing the right framework or Git workflow (and other technical skills) is something you can learn on the job.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/l0MYt5jPR6QX5pnqM/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/l0MYt5jPR6QX5pnqM/giphy.gif" width="370" height="208"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When it comes to more senior positions, technical knowledge is often more important, as you will have to know your stuff really well.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-job-posts-are-wish-lists"&gt;
  &lt;/a&gt;
  3. Job posts are wish lists
&lt;/h3&gt;

&lt;p&gt;Junior developers may find it difficult to land their first job because most of the job postings demand too many skills. The speakers at the Meetup agreed that the job posts are sometimes not well written, and they just list, from more to less important, all the skills they wish a junior had for that position. Chances are that, if you don't know all the skills they are asking for, many other juniors will also lack those, so you should apply for the role.&lt;/p&gt;

&lt;p&gt;In my case, I applied to a job position that was looking for a senior developer, but I was familiar with, roughly, half the skills they asked for. They ended up hiring me, and continue looking for that senior position later on.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-meetups-are-great-places-to-find-companies-to-work-at"&gt;
  &lt;/a&gt;
  4. Meetups are great places to find companies to work at
&lt;/h3&gt;

&lt;p&gt;I could see that the Meetup was packed with people from different companies looking for developers. So, if you want to start working in this industry, or change jobs, going to this kind of Meetups could be your best investment.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/t6lGyl8QLylqFQJkiA/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/t6lGyl8QLylqFQJkiA/giphy.gif" width="500" height="280"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Someone told me that, in his company, they are actually struggling to find developers. The job market for software developers seems to be in good health, as there is a high demand for developers.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-the-interview-goes-both-ways"&gt;
  &lt;/a&gt;
  5. The interview goes both ways
&lt;/h3&gt;

&lt;p&gt;Regarding the interview process, the speakers emphasised that an interview is not only the chance for a company to know more about you but the opportunity for you to know more about the company (research the company before going to the interview!). You should ask about the culture, the professional development plan, salary, what you should be doing to succeed at the position, and any other relevant questions.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/dJxiI2Tmgxsi9irVpQ/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/dJxiI2Tmgxsi9irVpQ/giphy.gif" width="500" height="281"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Regarding coding challenges, you should be wary of companies that give you a coding challenge to test how intelligent you are. A good company will give you the challenge to see how you work out problems, how you work in teams, and how you react to feedback. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-dont-chase-shiny-objects"&gt;
  &lt;/a&gt;
  6. Don't chase shiny objects
&lt;/h3&gt;

&lt;p&gt;Some companies will offer you a lot of perks, but you shouldn't let that blind you. Instead of chasing shiny objects, chase culture fit and growth opportunities. Are you going to be a better developer if you work at that company?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#7-opensource-contribution"&gt;
  &lt;/a&gt;
  7. Open-source contribution
&lt;/h3&gt;

&lt;p&gt;Things that will help you to land an interview (and a job) are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Build side projects, from start to finish.&lt;/li&gt;
&lt;li&gt;Display those projects on a portfolio.&lt;/li&gt;
&lt;li&gt;Use an online repository, like GitHub, to display your code.&lt;/li&gt;
&lt;li&gt;Have an updated LinkedIn account.&lt;/li&gt;
&lt;li&gt;Build a compelling resume showing all your skills, especially if you are coming from a different industry and they are transferable to a software development position.&lt;/li&gt;
&lt;li&gt;Contribute to open-source projects. I was surprised how many of the speakers said that this is really important.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#8-selfthought-vs-university-degree"&gt;
  &lt;/a&gt;
  8. Self-thought vs university degree
&lt;/h3&gt;

&lt;p&gt;None of the speakers said that their companies will prefer a uni graduate over a self-thought developer (or the other way around). Instead, they focus on what is your thinking process, how you tackle problems, and how well you react to feedback.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#9-to-succeed-show-interest"&gt;
  &lt;/a&gt;
  9. To succeed, show interest
&lt;/h3&gt;

&lt;p&gt;To succeed in your recent position as a software developer (assuming you landed a job), you should get interested in the different departments the company may have. Try to learn a bit about everything, put yourself in the client's shoes, chat with other coworkers, etc.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#10-good-companies-are-social"&gt;
  &lt;/a&gt;
  10. Good companies are social
&lt;/h3&gt;

&lt;p&gt;By the end of the Meetup, the idea of how a good company looks like was becoming clearer. Cool companies build social relationships in their communities. They host or talk at Meetups. They are interested in how you can become a great software developer. They are more human-like than cold entity-like.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/2FayYXU90QS9MmAIo/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/2FayYXU90QS9MmAIo/giphy.gif" width="350" height="250"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#closing-thoughts"&gt;
  &lt;/a&gt;
  Closing thoughts
&lt;/h2&gt;

&lt;p&gt;I'm amazed about how much value you can extract from these Meetups. If you have the chance to go to one, do it. Put aside your doubts and anxiety, and just go. We are all humans, we share the same struggles, so you are not alone. Remember: &lt;strong&gt;no one regrets being brave&lt;/strong&gt;.&lt;/p&gt;




&lt;p&gt;🗞️ &lt;strong&gt;NEWSLETTER -&lt;/strong&gt; &lt;em&gt;If you want to hear about my latest articles and interesting software development content, &lt;a href="https://chipper-designer-8106.ck.page/1a819bffe8"&gt;subscribe to my newsletter&lt;/a&gt;. &lt;strong&gt;I will be giving away a Udemy course among my newsletter subscribers&lt;/strong&gt; if we go over 100 during the month of November 2021!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;🐦 &lt;strong&gt;TWITTER -&lt;/strong&gt; &lt;em&gt;Follow me on &lt;a href="https://twitter.com/DamianDemasi"&gt;Twitter&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>discuss</category>
      <category>watercooler</category>
    </item>
    <item>
      <title>How to deploy your Python Django project</title>
      <author>Adam Miedema</author>
      <pubDate>Thu, 18 Nov 2021 20:37:27 +0000</pubDate>
      <link>https://dev.to/armiedema/how-to-deploy-your-python-django-project-28dl</link>
      <guid>https://dev.to/armiedema/how-to-deploy-your-python-django-project-28dl</guid>
      <description>&lt;p&gt;&lt;a href="https://www.djangoproject.com/"&gt;Django&lt;/a&gt; is a top Python web-framework known for its features, scalability, and flexibility.&lt;/p&gt;

&lt;p&gt;In this guide, we'll walk through how you can deploy your Django projects with &lt;a href="https://cleavr.io"&gt;Cleavr.io&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;p&gt;Before proceeding, you'll need to have an active &lt;a href="https://cleavr.io"&gt;Cleavr.io&lt;/a&gt; account and have a server provisioned and ready-to-go.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-1-add-a-nodejs-ssr-app"&gt;
  &lt;/a&gt;
  Step 1 - Add a NodeJS SSR app
&lt;/h2&gt;

&lt;p&gt;Add a new NodeJS SSR site to your server in Cleavr.&lt;/p&gt;

&lt;p&gt;We're using NodeJS SSR as the site's app type as it will install Node AND PM2 to the server. PM2 manages more than just node applications, so we'll take advantage of this to serve our Django app and keep it alive.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-2-configure-allowed-hosts"&gt;
  &lt;/a&gt;
  Step 2 - Configure allowed hosts
&lt;/h2&gt;

&lt;p&gt;In the Django project, locate the &lt;code&gt;settings.py&lt;/code&gt; file, or wherever you have &lt;code&gt;ALLOWED_HOSTS&lt;/code&gt; defined, and add the domain used in the previous step to the list of allowed hosts.&lt;/p&gt;

&lt;p&gt;For example, this is what our example looks like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ALLOWED_HOSTS = ['127.0.0.1', 'localhost', 'c2lbzu22oxujfgnr2848.cleaver.rocks']
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Push your changes to your GIT repo.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-3-configure-app-repo"&gt;
  &lt;/a&gt;
  Step 3 - Configure app repo
&lt;/h2&gt;

&lt;p&gt;Once the site has successfully been added to the server, click the &lt;strong&gt;Setup and deploy&lt;/strong&gt; link to configure the web app.&lt;/p&gt;

&lt;p&gt;On the settings &amp;gt; repo tab, add &lt;code&gt;armgitaar/django-helloworld&lt;/code&gt; to the repo and keep branch as &lt;code&gt;master&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In this example, we're using a Django repo originally by &lt;a href="https://github.com/django-ve"&gt;Django Venezuela&lt;/a&gt; that I've modified a bit to make the port number use the one automatically assigned by Cleavr. &lt;a href="https://github.com/armgitaar/django-helloworld"&gt;View the example repo here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To view the modification, open the &lt;a href="https://github.com/armgitaar/django-helloworld/blob/master/manage.py"&gt;manage.py&lt;/a&gt; file and take note of the following lines:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from django.core.management.commands.runserver import Command as runserver
runserver.default_port = os.environ.get('PORT', 8000)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Django apps default to run on port &lt;code&gt;8000&lt;/code&gt; and the above configuration will first check what the environment port is and will select that port if available.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-4-configure-entry-and-pm2-ecosystem"&gt;
  &lt;/a&gt;
  Step 4 - Configure entry and PM2 ecosystem
&lt;/h2&gt;

&lt;p&gt;On the &lt;strong&gt;Build&lt;/strong&gt; tab, set &lt;strong&gt;Entry Point&lt;/strong&gt; to &lt;code&gt;manage.py&lt;/code&gt; and &lt;strong&gt;Arguments&lt;/strong&gt; to &lt;code&gt;runserver&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In the PM2 ecosystem, we'll need to set the interpreter to Python3 as well as remove a couple of configs that aren't compatible with Python apps.&lt;/p&gt;

&lt;p&gt;Add interpreter:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"interpreter": "/usr/bin/python3",
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Remove the following lines:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; "instances": "max",
 "exec_mode": "cluster_mode",
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The ecosystem should look similar to the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  "name": "your.domain.com",
  "script": "manage.py",
  "args": "runserver",
  "log_type": "json",
  "cwd": "/home/cleavr/your.domain.com/current",
  "interpreter": "/usr/bin/python3",
  "env": {
    "PORT": assigned port number,
    "CI": 1,
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#step-5-configure-deployment-hooks"&gt;
  &lt;/a&gt;
  Step 5 - Configure deployment hooks
&lt;/h2&gt;

&lt;p&gt;On the deployment hooks page,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Disable &lt;strong&gt;Install NPM Packages&lt;/strong&gt; hook&lt;/li&gt;
&lt;li&gt;Disable &lt;strong&gt;Build Assets&lt;/strong&gt; hook&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Add a new hook to install Python dependencies:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pip install -r requirements.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Add a new hook for migration:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;python3 manage.py migrate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Order the above hooks to run before the activation deployment hook.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-6-deploy"&gt;
  &lt;/a&gt;
  Step 6 - deploy!
&lt;/h2&gt;

&lt;p&gt;Once all of the above is complete, deploy the app!&lt;/p&gt;

&lt;p&gt;For this example, there is one more thing we need to do, which is create an admin. The easiest way is to SSH into the server and run the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;python3 manage.py createsuperuser --username admin --email admin@mail.com
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You will be prompted to add and confirm a password.&lt;/p&gt;

&lt;p&gt;Once completed, you should now see 'Hello World' render on the app's domain.&lt;/p&gt;

</description>
      <category>django</category>
      <category>python</category>
    </item>
    <item>
      <title>DevOps &amp; SRE Words Matter: How Our Language has Evolved</title>
      <author>Emily Arnott</author>
      <pubDate>Thu, 18 Nov 2021 20:31:15 +0000</pubDate>
      <link>https://dev.to/blameless/devops-sre-words-matter-how-our-language-has-evolved-dp5</link>
      <guid>https://dev.to/blameless/devops-sre-words-matter-how-our-language-has-evolved-dp5</guid>
      <description>&lt;p&gt;As the tech world changes, language changes with it. New technologies will always introduce new terms and descriptions to provide clear understanding. For example, the emergence of the cloud introduced language to describe the changing relationship between servers and clients. Then, of course, product providers will also dictate how their products are to be described, i.e. describing services as “cloud-native”.&lt;/p&gt;

&lt;p&gt;On other occasions, language changes through deliberate effort to influence behavior. Thought leaders will often invent alternative words to describe existing ideas in order to effect cultural change. Even a slight change in diction can massively affect one’s engagement, attitude, and even their worldview. In this blog, we’ll look at how language colours how we perceive our environments, and we’ll break down three examples of how language has evolved in tech.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-language-affects-and-shifts-world-perspectives"&gt;
  &lt;/a&gt;
  How language affects and shifts world perspectives
&lt;/h2&gt;

&lt;p&gt;We all have associations with language. Because of our past experiences and culture, different types of messages will trigger different emotional responses. The language we use thus &lt;a href="https://www.psychologytoday.com/ca/blog/the-biolinguistic-turn/201702/how-the-language-we-speak-affects-the-way-we-think"&gt;influences the way we think&lt;/a&gt;. Whether our associations are positive or negative can impact things such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Whether we dread something or get excited by it&lt;/li&gt;
&lt;li&gt;How important we perceive something to be&lt;/li&gt;
&lt;li&gt;If we perceive something to be collaborative or combative...&lt;/li&gt;
&lt;li&gt;Innovative or legacy&lt;/li&gt;
&lt;li&gt;Bleeding-edge or mainstream&lt;/li&gt;
&lt;li&gt;Safe or provocative&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#postmortem-vs-retrospective"&gt;
  &lt;/a&gt;
  “Postmortem” vs. “Retrospective”
&lt;/h2&gt;

&lt;p&gt;Both of these terms refer to &lt;a href="https://www.blameless.com/sre/what-are-blameless-postmortems-do-they-work-how"&gt;a document&lt;/a&gt; that summarizes a past incident and the steps that were taken to resolve it. “Postmortem” was originally a medical term dating back to the 1820s. The metaphorical usage of examining other things after their “death” has been widely used in many industries, including tech.&lt;/p&gt;

&lt;p&gt;In recent years, many organizations are differentiating the idea of a retrospective from a postmortem as the culture mindset shifts to the ongoing learning from events and failures. The two practices are commonly considered to have some small differences, such as the timing and content of the documents. However, just as important as these differences are the psychological effects of the terminology being used, especially when these may be conducted in a high-pressure environment. Here are some of the reasons we’re using “retrospective” instead of &lt;a href="https://www.blameless.com/sre/what-are-blameless-postmortems-do-they-work-how"&gt;“postmortem” at Blameless&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The negativity of postmortems:&lt;/strong&gt; death has a negative association in most people’s minds. As responders attend to incidents, the negative connotation lingers. Engineers may feel worried about the consequences of an incident, and the idea of “death” surrounding this process may encourage feelings of guilt and fear. By removing negative associations, people will be more eager to review and look back at what actually occurred and take the time to revisit it as a team. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The finality of postmortems:&lt;/strong&gt; at Blameless, we don’t see failure as the end. We see it as an opportunity to learn and grow, a starting point for positive change. Postmortems are very final; no examination happens “post-postmortem”. A retrospective implies that you’re looking back at something that just happened or occured a while ago, that still could have a purpose in the future.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The wide scope of retrospectives:&lt;/strong&gt; a postmortem is defined by the single moment of failure and works backwards to determine the causes. A retrospective is concerned with more than just the direct causes of failure. Instead, it seeks to tell the complete story of the service, systems, and people, up to and beyond the incident.&lt;/p&gt;

&lt;p&gt;We want our &lt;a href="https://www.blameless.com/blog/incident-retrospective-postmortem-template"&gt;incident retrospectives&lt;/a&gt; to be documents that we are proud to contribute to, that serve as hubs of learning and impetus for change going forward. We believe that by using the word “retrospective”, it conveys this intent much better than “postmortem”.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#root-cause-analysis-vs-contributing-factors-analysis"&gt;
  &lt;/a&gt;
  “Root Cause Analysis” vs “Contributing Factors Analysis”
&lt;/h2&gt;

&lt;p&gt;When determining why something went wrong, there are several competing schools of thought. The root cause analysis, or RCA, is a popular tool for uncovering the reason for failure. The idea of a “root cause” as being the primary factor causing failure dates back to the early 1900s, with “root cause analysis” emerging as a concept in engineering companies in the 1930s. It is commonly attributed to Kiichiro Toyota, founder of the Toyota Motors Corporation, who developed the &lt;a href="https://en.wikipedia.org/wiki/Five_whys"&gt;Five Whys&lt;/a&gt; technique to find root causes.&lt;/p&gt;

&lt;p&gt;Contributing factor analysis is a more recent term that has been growing in popularity. It also seeks to understand the causes of an incident, but with a different mindset. That mindset is reflected in the language itself as much as any specific practice. Let’s look at some examples of these differences, and why we at Blameless feel the contributing factors analysis is more useful.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The singularity of RCAs:&lt;/strong&gt; the most obvious difference is that a root cause analysis refers to a singular root cause, where contributing factors emphasizes multiple factors. This is more important than it may seem. If you set out looking for a singular cause, you’ll resist branching out to other impactful areas. For example, if you only look for an engineering cause, you’ll disregard factors arising from product design or team culture.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The hierarchy of RCAs:&lt;/strong&gt; the idea of a “root” cause is that it is the source from which other causes grow and branch off. Understanding what causes are more significant for the incident is necessary to properly prioritize follow-up items, but it isn’t the full story. You have to also consider how these changes will affect the team and system as a whole. Thinking about each factor’s contribution without trying to determine which is the “root” keeps you more open-minded.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The neutrality of contribution:&lt;/strong&gt; when considering the cause of an incident, you’ll be inclined to find failures, mistakes, and other negative things. Instead you can think about every factor that contributed to the story of the incident - including things that went well, like helpful playbooks and good communication. The totality of this factor analysis gives you a more complete picture of how to respond to incidents going forward.&lt;/p&gt;

&lt;p&gt;Blameless advocates SRE as a holistic practice, one that incorporates learning from all available sources. The Contributing Factors Analysis brings in as many sources as possible to best understand incidents.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#disaster-recovery-vs-incident-response"&gt;
  &lt;/a&gt;
  “Disaster Recovery” vs “Incident Response”
&lt;/h2&gt;

&lt;p&gt;The overall process initiated by something going wrong has gone by different names over the years. The attitudes people have towards this have changed alongside the evolution of language and terminology. At first, organizations typically referred to this as disaster recovery. This terminology dates back to the 1970s, where it focused on how systems would recover if natural (or other) disasters wiped out infrastructure and its ability to operate.&lt;/p&gt;

&lt;p&gt;As IT systems became more virtual, outages started to be caused by a much wider range of technical aspects other than natural disasters. Organizations moved to referring to this process as incident response to reflect the range of problems and new processes and tools. Also, the processes themselves evolved along with the technology changes. Let’s look at how these terms reflect the attitudes of each era, and why we now use incident response.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The singularity of recovery:&lt;/strong&gt; incident response, sometimes referred to as incident management, is much more than just restoring the environment to its previous state. After services are back online, you still need to gather information from the incident itself and build a retrospective, develop action items to carry the learning forward, and review the effectiveness of the response steps and procedures. Recovery is really only the first step towards resolution, and doesn’t convey how you can get the most learning and improvement from each incident.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The severity of disasters:&lt;/strong&gt; people see disasters as major catastrophic events. Setting up policies and procedures to trigger only in the event of a “disaster” is a very high bar. However,  your incident response process should work just as efficiently for all incidents In other words, not all incidents are ‘Sev 1” and so knowing the right steps to take depending on each incident is equally important. We believe there’s learning in every incident, and so every incident is worth responding to properly.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The inevitability of incidents:&lt;/strong&gt; disasters are also thought of as something to avoid at all costs. Any effort spent on reducing the chances of a disaster would be justified, given how severe disasters can be to both customers and engineering teams. A goal of zero disasters is reasonable. However, we know that 100% reliability is impossible. By recognizing the inevitability of incidents, you embrace them and avoid overspending on infrastructure and other resources in trying to prevent them. Using the term “incidents'' vs “disasters” helps team-members understand their true inevitability and impact.&lt;/p&gt;

</description>
      <category>sre</category>
      <category>devops</category>
    </item>
    <item>
      <title>How to install Apache Tomcat 9 on Ubuntu 20.04 LTS</title>
      <author>Dhanusha Perera</author>
      <pubDate>Thu, 18 Nov 2021 20:21:19 +0000</pubDate>
      <link>https://dev.to/dhanushaperera07/how-to-install-apache-tomcat-9-on-ubuntu-2004-lts-b5m</link>
      <guid>https://dev.to/dhanushaperera07/how-to-install-apache-tomcat-9-on-ubuntu-2004-lts-b5m</guid>
      <description>&lt;h2&gt;
  &lt;a href="#about-this-article"&gt;
  &lt;/a&gt;
  About This Article
&lt;/h2&gt;

&lt;p&gt;This article is about how to install Apache Tomcat 9 using 'tar.gz' on Ubuntu 20.04 LTS. Hope you will learn something. Cheers!&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisite"&gt;
  &lt;/a&gt;
  Prerequisite
&lt;/h2&gt;

&lt;p&gt;You need to have Java 8 installed on your machine. &lt;br&gt;
Tomcat 9 works on only Java 8. &lt;a href="https://tomcat.apache.org/whichversion.html"&gt;More Information&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can confirm the java version with the following command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="go"&gt;java -version
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lets-install-apache-tomcat-9"&gt;
  &lt;/a&gt;
  Let's install Apache Tomcat 9
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Visit &lt;a href="https://tomcat.apache.org/download-90.cgi"&gt;Apache Tomcat Site&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Download Apache Tomcat 9.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Download &lt;code&gt;tar.gz (pgp, sha512)&lt;/code&gt;  the Core Binary Distributions of the Apache Tomcat.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Open up your terminal and &lt;code&gt;cd&lt;/code&gt; into the directory where you have downloaded the Apache Tomcat &lt;code&gt;tar.gz&lt;/code&gt; file.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; You can open up the terminal by pressing Ctrl + Alt + T on your keyboard.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="gp"&gt;cd /home/&amp;lt;type-username-here&amp;gt;&lt;/span&gt;/Downloads
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Extract the &lt;code&gt;tar.gz&lt;/code&gt; file to &lt;code&gt;/opt&lt;/code&gt; directory with the following command.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="go"&gt;sudo tar -xf apache-tomcat-9.0.55.tar.gz -C /opt
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#setting-up-the-catalina-environment-variable"&gt;
  &lt;/a&gt;
  Setting up the Catalina environment variable.
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Let's cd into the Tomcat directory.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="go"&gt;cd /opt/apache-tomcat-9.0.55/
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;You can see the current directory by running the following command. Copy the path of the current directory. This is the path of the tomcat 9.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="go"&gt;pwd
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Now open up the terminal and type the following command to get the root access. You will need to provide the password if needed.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="go"&gt;sudo su
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Open up the ~/.bashrc file using gedit and the Catalina environment variable.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="go"&gt;gedit ~/.bashrc
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Scroll down to the end of the document and set the Catalina environment variable. &lt;code&gt;/opt/apache-tomcat-9.0.55&lt;/code&gt; is the path of the tomcat which you copied earlier.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;export CATALINA_HOME=/opt/apache-tomcat-9.0.55
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Save the &lt;code&gt;~/.bashrc&lt;/code&gt; file and close gedit window.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#run-tomcat-9"&gt;
  &lt;/a&gt;
  Run Tomcat 9
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;You can run Tomcat 9 by running the following command.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="go"&gt;sh startup.sh
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Now you can open up a web browser and navigate to the tomcat URL. If you can see the Tomcat initial page. Then you have successfully installed and the tomcat 9 server is up and running.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;http://localhost:8080/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;If you want to shut down the Tomcat server, you can do so by running the following command.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="go"&gt;sh shutdown.sh
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt; &lt;br&gt;
Below you can find a screenshot of my terminal.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TLYH7pBB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ybgmr0ntn6hlcifc6hs8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TLYH7pBB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ybgmr0ntn6hlcifc6hs8.png" alt="Screenshot of the terminal" width="880" height="483"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>tutorial</category>
      <category>tomcat</category>
      <category>beginners</category>
      <category>ubuntu</category>
    </item>
  </channel>
</rss>
