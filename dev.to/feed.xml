<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Building Vocabulary</title>
      <author>vindhya Hegde </author>
      <pubDate>Sun, 29 Aug 2021 10:01:41 +0000</pubDate>
      <link>https://dev.to/vindhyasadanand/building-vocabulary-257m</link>
      <guid>https://dev.to/vindhyasadanand/building-vocabulary-257m</guid>
      <description>&lt;p&gt;Hello, Daily I will come up with a post consisting of new 5 words that I have learned and which are frequently asked in GRE exams with Pictorial representation.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Calumny&lt;/strong&gt;(noun) :  Making of a false statement meant to injure a person's reputation.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yLNdpOWk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://compote.slate.com/images/cc162fc7-dce4-42cd-a796-d3f3331c96d7.jpg%3Fwidth%3D960" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yLNdpOWk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://compote.slate.com/images/cc162fc7-dce4-42cd-a796-d3f3331c96d7.jpg%3Fwidth%3D960" alt="alt text" title="Logo Title Text 1"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.google.com/search?q=calumny&amp;amp;oq=ca&amp;amp;aqs=chrome.0.69i59l3j69i57j69i60l4.2381j0j9&amp;amp;sourceid=chrome&amp;amp;ie=UTF-8"&gt;Checkout Pronunciation&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;egrigious&lt;/strong&gt;(adjective) : Outstandingly bad, Shocking &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PrCm38VN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.pinimg.com/originals/9e/69/cf/9e69cfa6ae55b432709d169999de85a8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PrCm38VN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.pinimg.com/originals/9e/69/cf/9e69cfa6ae55b432709d169999de85a8.png" alt="alt text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.google.com/search?q=egregious+meaning&amp;amp;oq=egregious&amp;amp;aqs=chrome.1.69i57j0i433i512j0i512l8.7174j0j4&amp;amp;sourceid=chrome&amp;amp;ie=UTF-8"&gt;Checkout Pronunciation&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;acrimony&lt;/strong&gt;(noun) : bitterness and ill will &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RPvOpCIg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ytimg.com/vi/6DKyhqcJaWY/maxresdefault.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RPvOpCIg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ytimg.com/vi/6DKyhqcJaWY/maxresdefault.jpg" alt="alt text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.google.com/search?q=acrimony&amp;amp;oq=acr&amp;amp;aqs=chrome.0.69i59l2j69i57j0i271l3j69i61.2852j0j9&amp;amp;sourceid=chrome&amp;amp;ie=UTF-8"&gt;Checkout Pronunciation&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;betray&lt;/strong&gt;(Verb) : To reveal or make known something, usually unintentionally&lt;br&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FPc_ejO---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://static.toiimg.com/photo/60473899.cms" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FPc_ejO---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://static.toiimg.com/photo/60473899.cms" alt="alt text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.google.com/search?q=betray&amp;amp;oq=be&amp;amp;aqs=chrome.0.69i59l2j69i61j69i60l2j69i65l3.1816j0j9&amp;amp;sourceid=chrome&amp;amp;ie=UTF-8"&gt;Checkout Pronunciation&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;iconoclast&lt;/strong&gt;(noun) : somebody who attacks cherished beliefs or institutions.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7YzzUt23--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1200/1%2AjZf6Q00pgcKiDlnm_so0SQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7YzzUt23--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1200/1%2AjZf6Q00pgcKiDlnm_so0SQ.png" alt="alt text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.google.com/search?q=iconoclast&amp;amp;source=lmns&amp;amp;bih=722&amp;amp;biw=1536&amp;amp;hl=en-GB&amp;amp;sa=X&amp;amp;ved=2ahUKEwiM26TK-tXyAhXUznMBHd8mCnMQ_AUoAHoECAEQAA"&gt;Checkout Pronunciation&lt;/a&gt;&lt;br&gt;
I hope this helps to you if you are preparing for GRE exams..&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>day1</category>
    </item>
    <item>
      <title>Announcing A Complete Blazor Mastery Course</title>
      <author>Ankit</author>
      <pubDate>Sun, 29 Aug 2021 09:56:59 +0000</pubDate>
      <link>https://dev.to/ankitsharma007/announcing-a-complete-blazor-mastery-course-23if</link>
      <guid>https://dev.to/ankitsharma007/announcing-a-complete-blazor-mastery-course-23if</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Blazor is a .NET web framework that allows us to create client-side applications using C#, Razor syntax, and HTML. It allows us to create a rich and modern  &lt;strong&gt;Single Page Application&lt;/strong&gt; (&lt;strong&gt;SPA&lt;/strong&gt;), using C#, and run it on the browser of our choice.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Browser + Razor = Blazor&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The name “Blazor” comes from the ability of the framework to run C# and Razor in the browser. Combining “browser” and “Razor” gives us the name “Blazor.” Code running in the browser executes in the same security sandbox as JavaScript frameworks.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#get-the-course-now"&gt;
  &lt;/a&gt;
  Get the course now
&lt;/h2&gt;

&lt;p&gt;The course is published by Codered from EC-council. Get the course  &lt;a href="https://codered.eccouncil.org/course/getting-started-with-blazor"&gt;Getting Started with Blazor&lt;/a&gt;  and start your journey to become a complete Blazor developer.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#course-overview"&gt;
  &lt;/a&gt;
  Course overview
&lt;/h2&gt;

&lt;p&gt;The overview video for this course is available on  &lt;a href="https://www.youtube.com/watch?v=PniJNS6UuG8"&gt;YouTube&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#source-code"&gt;
  &lt;/a&gt;
  Source Code
&lt;/h2&gt;

&lt;p&gt;The source code of the project which we have built in this course is available at  &lt;a href="https://github.com/codered-by-ec-council/Getting-Started-with-Blazor"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#try-out-the-application"&gt;
  &lt;/a&gt;
  Try out the application
&lt;/h2&gt;

&lt;p&gt;The live demo of the project is available at  &lt;a href="https://movieappdemo.azurewebsites.net/"&gt;https://movieappdemo.azurewebsites.net/&lt;/a&gt;. Navigate to the URL and see what we are going to build in this course.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#key-features-of-the-blazor-course"&gt;
  &lt;/a&gt;
  Key Features of the Blazor course
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;  This Blazor course will cover the Blazor concepts such as component and component communication, data binding, forms and validations, routing, debugging, and JavaScript Interop in detail. You do not need any previous knowledge of Blazor in order to take up this course.&lt;/li&gt;
&lt;li&gt;  You will learn how to create a real-world, full-stack web application with the help of Blazor WebAssembly, Entity Framework Core, and SQL Server. The app will support CRUD operation, authentication, authorization, and client-side state management.&lt;/li&gt;
&lt;li&gt;  By the end of this course, you will have a complete understanding of working with the Blazor framework. You will be able to create real-world web applications using Blazor.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#the-approach-followed-in-this-blazor-course"&gt;
  &lt;/a&gt;
  The approach followed in this Blazor course
&lt;/h2&gt;

&lt;p&gt;This course is divided into 4 chapters.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; The first chapter will introduce you to the Blazor framework. You will learn about the different Blazor hosting models and how to set up the Blazor development environment in your machine.&lt;/li&gt;
&lt;li&gt; The second chapter will cover the core concepts of Blazor such as Blazor components, data binding, event handling, forms and validations, routing, debugging, and JavaScript Interop.&lt;/li&gt;
&lt;li&gt; In the third chapter, we will create a full-stack, real-world application using Blazor WebAssembly, Entity Framework Core, and SQL Server.&lt;/li&gt;
&lt;li&gt; In the fourth chapter, we will learn how to deploy the full-stack Blazor WebAssembly application to IIS and Azure.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The course is full of hands-on instructions. Each concept and topic is explained with the help of code samples. Get the source code from GitHub and play around to understand what we are going to build in this course.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#looking-for-a-discount"&gt;
  &lt;/a&gt;
  Looking for a discount!!!
&lt;/h2&gt;

&lt;p&gt;As an introductory offer, you can also avail of a special discount of 20% on CodeRed Pro subscription.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Use Coupon Code  &lt;strong&gt;SPECIAL20&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The offer is valid for a limited period only.&lt;/p&gt;

&lt;p&gt;Register Now:  &lt;a href="https://bit.ly/Getting_Started_with_Blazor"&gt;https://bit.ly/Getting_Started_with_Blazor&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;If you like my course on Blazor, share it with your friends. You can also connect with me on &lt;a href="https://twitter.com/ankitsharma_007"&gt;Twitter&lt;/a&gt; and &lt;a href="https://www.linkedin.com/in/ankitsharma-007/"&gt;LinkedIn&lt;/a&gt;. My DMs are always open.&lt;/p&gt;

</description>
      <category>dotnet</category>
      <category>blazor</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Dark Mode with HTML, CSS &amp; Javascript Only</title>
      <author>Kelven Rubalaine</author>
      <pubDate>Sun, 29 Aug 2021 09:52:46 +0000</pubDate>
      <link>https://dev.to/rubalaine/dark-mode-with-html-css-javascript-only-4nb9</link>
      <guid>https://dev.to/rubalaine/dark-mode-with-html-css-javascript-only-4nb9</guid>
      <description>&lt;p&gt;There are different ways to implement dark mode on websites, from the simplest to the most complex, and the approach I show in this short tutorial I consider as the simplest and painless possible, for this we will implement using only HTML, CSS and Javascript.&lt;/p&gt;

&lt;p&gt;Two key concepts will be used for implementing dark mode, &lt;strong&gt;CSS Variables&lt;/strong&gt; for colors, and &lt;strong&gt;localStorage&lt;/strong&gt; to store the user's current theme.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#css-variables"&gt;
  &lt;/a&gt;
  CSS Variables
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;CSS variables&lt;/strong&gt; work like variables from any other language, where we assign values to it and we can modify it later, for implementation of dark mode we will assign the values of our colors to &lt;strong&gt;CSS variables&lt;/strong&gt;, with that we can modify them later depending on the context.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="c"&gt;/*creating a css variable */&lt;/span&gt;
&lt;span class="nt"&gt;--bg-grey-light&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nf"&gt;#f5f5f5&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="c"&gt;/*using the css variable */&lt;/span&gt;
&lt;span class="nt"&gt;background-color&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;var&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;--bg-grey-light&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A special feature of &lt;strong&gt;CSS variables&lt;/strong&gt; that makes it a good alternative to implementing &lt;strong&gt;dark mode&lt;/strong&gt; is that all elements that are declared inside the parent element will&lt;br&gt;
inherits them, so we'll define our variables directly in the &lt;code&gt;body&lt;/code&gt; so that all elements within it can inherit them.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#localstorage-api"&gt;
  &lt;/a&gt;
  localStorage API
&lt;/h2&gt;

&lt;p&gt;For a better user experience, we will use localStorage which will store the user's current theme, that way when the user comes back to the website, their favorite theme will be applied automatically.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// storing the theme on the user's machine&lt;/span&gt;
&lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;theme&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dark&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;//accessed the user's machine theme&lt;/span&gt;
&lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;theme&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// dark&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#document-structure"&gt;
  &lt;/a&gt;
  Document Structure
&lt;/h2&gt;

&lt;p&gt;Being a very small project, our document will consist of two buttons and two blocks of text, the buttons will have the function of changing the theme and updating the page.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;index.html&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;  &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
     &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"heading"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
         How to make dark mode with HTML, CSS and Javascript only
       &lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"buttons"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
         //button to switch dark/light states
         &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"toggle"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;toggle&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
         //button to refresh the page
         &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"refresh"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;refresh&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text-wrapper"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
         &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"paragraph"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
           The United States shall be President of the....
         &lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text-wrapper"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
         &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"paragraph"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
           Why, there's hardly enough of me left...
         &lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
     &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
     &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"script.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#defining-the-colors"&gt;
  &lt;/a&gt;
  Defining the colors
&lt;/h2&gt;

&lt;p&gt;Since we are dealing with two different contexts, for each color in the light theme there must be a variant for the dark theme, and the colors have to be defined according to your responsibilities, thus having colors for text, background colors…&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Definition of variables&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="c"&gt;/* Definition of colors */&lt;/span&gt;
&lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="c"&gt;/* text colors */&lt;/span&gt;
   &lt;span class="py"&gt;--text-white&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#ffffff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="py"&gt;--text-dark&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#142136&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

   &lt;span class="c"&gt;/* background colors */&lt;/span&gt;
   &lt;span class="py"&gt;--bg-grey-light&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#f5f5f5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="py"&gt;--bg-white&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#ffffff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="py"&gt;--bg-blue-dark&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#142136&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="py"&gt;--bg-indigo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#6366f1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

   &lt;span class="c"&gt;/*
...
*/&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After defining the variables, we will create a class named &lt;code&gt;.dark&lt;/code&gt;, which will contain the definition of the same variables, but with the value of the colors changed to the dark theme, so when we want to change the context to the dark theme, we just add the &lt;code&gt;.dark&lt;/code&gt; class to the body via &lt;code&gt;javascript&lt;/code&gt; so the variables previously defined will be overwritten by the ones defined in the &lt;code&gt;.dark&lt;/code&gt; class.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Variables for the dark theme&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.dark&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="py"&gt;--text-white&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#e6e6e6&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="py"&gt;--text-dark&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#ffffff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

   &lt;span class="py"&gt;--bg-grey-light&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#142136&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="py"&gt;--bg-white&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#22395d&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="py"&gt;--bg-blue-dark&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#142136&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="py"&gt;--bg-indigo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#7577e1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;note that the &lt;code&gt;--text-dark&lt;/code&gt; variable which had its value: &lt;code&gt;#142136&lt;/code&gt;, was changed to &lt;code&gt;#ffffff&lt;/code&gt; in the context of the dark theme, keeping that in mind, you just need to repeat the same process for all other colors of your code.&lt;/p&gt;

&lt;p&gt;How did the final &lt;code&gt;.css&lt;/code&gt; file look like:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;style.css&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;box-sizing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;border-box&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c"&gt;/* Definition of colors */&lt;/span&gt;
&lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c"&gt;/* text colors */&lt;/span&gt;
  &lt;span class="py"&gt;--text-white&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#ffffff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--text-dark&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#142136&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c"&gt;/* background colors */&lt;/span&gt;
  &lt;span class="py"&gt;--bg-grey-light&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#f5f5f5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--bg-white&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#ffffff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--bg-blue-dark&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#142136&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--bg-indigo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#6366f1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;"Inter"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;line-height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.7&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--bg-grey-light&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.dark&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="py"&gt;--text-white&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#e6e6e6&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--text-dark&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#ffffff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--bg-grey-light&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#142136&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--bg-white&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#22395d&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--bg-blue-dark&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#142136&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--bg-indigo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#7577e1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.container&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;600px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;40px&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;flex-direction&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;column&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.text-wrapper&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--bg-white&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;margin-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;40px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.paragraph&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;16px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--text-dark&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.heading&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;40px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;letter-spacing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;900&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;40px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--text-dark&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.buttons&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;space-between&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;40px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.button&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;200px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;40px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;inherit&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--bg-indigo&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--text-white&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;16px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;400&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;text-transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;capitalize&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see in the code, no color was used directly, instead we used the previously defined variables.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#changing-theme"&gt;
  &lt;/a&gt;
  Changing Theme
&lt;/h2&gt;

&lt;p&gt;To switch the theme, we will use javascript, and the script will first check in localStorage if the previously stored theme is dark and apply it to &lt;code&gt;body&lt;/code&gt; as soon as it loads.&lt;br&gt;
We add an &lt;code&gt;eventListener&lt;/code&gt; to the toggle button so when it is clicked it will remove or add the &lt;code&gt;.dark&lt;/code&gt; class and also change the theme stored in localstorage depending on context.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;script.js&lt;br&gt;
&lt;/p&gt;


&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;toggle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;toggle&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;refresh&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;refresh&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;theme&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;theme&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="cm"&gt;/* checks if the theme stored in localStorage is dark
if yes apply the dark theme to the body */&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;theme&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dark&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dark&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// event listener stops when the change theme button is clicked&lt;/span&gt;
&lt;span class="nx"&gt;toggle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toggle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dark&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;theme&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dark&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;theme&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;light&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;theme&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dark&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;refresh&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reload&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Demo: &lt;a href="https://dark-mode.kelven.dev"&gt;dark-mode.kelven.dev&lt;/a&gt;&lt;br&gt;
Source code: &lt;a href="https://github.com/Rubalaine/howto-dark-mode"&gt;Github Repo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thank you so much for reading this far, I hope my text somehow helped you.&lt;br&gt;
This is my second article/blog post, so feel free to give your opinion about it, which helps me improve.&lt;br&gt;
Take a look at my &lt;a href="https://kelven.dev"&gt;Portfolio&lt;/a&gt; I have some interesting projects there.&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
      <category>beginners</category>
    </item>
    <item>
      <title>I Create Dev Content, YOU SHOULD TOO [And Here's why]!</title>
      <author>Clean Code Studio</author>
      <pubDate>Sun, 29 Aug 2021 08:19:37 +0000</pubDate>
      <link>https://dev.to/cleancodestudio/i-create-dev-content-you-should-too-and-here-s-why-4329</link>
      <guid>https://dev.to/cleancodestudio/i-create-dev-content-you-should-too-and-here-s-why-4329</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;I create dev content, you should too!&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This is a reply I left in response to a YouTube comment left on one of my videos. The video was about dependency injection and dependency inversion, but this reply I wrote up was - in my opinion - more important than any design principle out there. &lt;/p&gt;

&lt;p&gt;I hope my impassioned rant will encourage you to start sharing the knowledge you learn on a daily basis as a dev (or learning dev). With 41.3% of the world about to get internet, it's really a great idea!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Here's my impassioned monologue about why you should start sharing the tech knowledge!&lt;/strong&gt;  &lt;/p&gt;
&lt;/blockquote&gt;




&lt;h2&gt;
  &lt;a href="#my-reply"&gt;
  &lt;/a&gt;
  My Reply
&lt;/h2&gt;

&lt;p&gt;"Absolutely true! Dependency Injection and Dependency Inversion can definitely feel like one heck of a topic to explain well. And yet, there are so many out there teaching it in so many differing ways that click with different types of learners.&lt;/p&gt;

&lt;p&gt;That's incredible in my opinion, and shows the power of knowledge sharing through the platforms empowering us in today's day of age.&lt;/p&gt;

&lt;p&gt;I encourage all developers to kick start a blog, youtube channel, or some sort of knowledge sharing platform that they truly enjoy sharing through. &lt;/p&gt;

&lt;p&gt;Everyone has something to share that others have yet to understand. With an industry growing as fast as ours, sharing the knowledge you learn on your journey has huge potential. &lt;/p&gt;

&lt;p&gt;Already growing, we now have technologies via advancements in space technology like Star Link that will provide the 41.3% of the world who currently have NO Internet with Internet ACCESS. &lt;/p&gt;

&lt;p&gt;Star Link is a Space X project that is already providing internet to a small number of people via satellites. &lt;/p&gt;

&lt;p&gt;Within 7 years (or something like that) Star Link is planning on launching 30,000 satellites to provide global internet access. &lt;/p&gt;

&lt;p&gt;On top of an already growing industry, we will have billions of new learners who will be looking to learn how to use technology like computers FOR THE FIRST TIME EVER. &lt;/p&gt;

&lt;p&gt;41.3% of the world is A LOT of new learners. With 21 million estimated programmers globally in 2018 estimated to jump up to 27 million estimated programmers globally by 2023 (Two years from now in 2021) we are an industry growing at a rapid pace. &lt;/p&gt;

&lt;p&gt;Now add that 41.3% of the world into the equation that has never had internet? We could pretty safely assume that we'll be nearing 35 million programmers globally - if not more - by 2025 and probably closer to 40 million+ programmers by 2030.&lt;/p&gt;

&lt;p&gt;9 years from now, we'll have double the number of programmers we have now. That's 20 million more NEW programmers looking to learn, absorb, and understand how to change their families as well as their own lives through the power of software engineering.&lt;/p&gt;

&lt;p&gt;As learning engineers, we're taking notes and learning constantly. We mine as well start sharing the knowledge now in preparation for the doubling of our industry size! &lt;/p&gt;

&lt;p&gt;You'll start slow, for sure. But after a year you'll have a small following that will be sprinkled with people who have learned based on the way you teach - that's an awesome feeling.&lt;/p&gt;

&lt;p&gt;Soon you start to grow a bit faster. Then you start to realize you have some potential building up and who knows you may be more passionate about the elegance of simplifying for others more so than building the code. Heck, maybe you love the creative art of presentation. Or what if your creative side yearns for video creation?&lt;/p&gt;

&lt;p&gt;By simply documenting what you know and investing a bit of time to present it in a way that is more digestible to others, you may have quite possibly learned that you yourself have another passion you wish to pursue. Not only that, but you are now earning an additional revenue stream that grows as you add to your knowledge base of resources you share to the world through the platform(s) in which you enjoy sharing it!&lt;/p&gt;

&lt;p&gt;Now you potentially have 20 million new students who may just dive into your knowledge base and all of the sudden you have all kinds of freedom to decide what you truly care about, how you want to present your story to the world, and if all else fails an above average online brand that will catch the attention of LinkedIn recruiters and get you into the software engineering job interviews you want to be in.&lt;/p&gt;

&lt;p&gt;Anyways, apologies for my rant - I'm excited for what the future holds and I really I love the way you phrased your comment and appreciate you taking the time to write it up. &lt;/p&gt;

&lt;p&gt;I'm excited that the way I explained this topic clicked in a way that helped you understand it.&lt;/p&gt;

&lt;p&gt;I Love hearing those kind of comments and enjoy sharing the knowledge - I'm glad it was helpful!"&lt;/p&gt;


&lt;div class="ltag__user ltag__user__id__386677"&gt;
  
    .ltag__user__id__386677 .follow-action-button {
      background-color: #343c35 !important;
      color: #f5f5f5 !important;
      border-color: #343c35 !important;
    }
  
    &lt;a href="/cleancodestudio" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YeAAvjHT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--GeGRizPU--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_66%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/386677/4f170830-7e2c-4f3e-81fe-b666a90b7e3f.gif" alt="cleancodestudio image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/cleancodestudio"&gt;Clean Code Studio&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/cleancodestudio"&gt;Clean Code Clean Life ~ Simplify&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


</description>
      <category>devjournal</category>
      <category>writing</category>
      <category>career</category>
      <category>discuss</category>
    </item>
    <item>
      <title>Vue and Docx file</title>
      <author>Shaked</author>
      <pubDate>Sun, 29 Aug 2021 07:51:17 +0000</pubDate>
      <link>https://dev.to/shaked46763744/vue-and-docx-file-mdm</link>
      <guid>https://dev.to/shaked46763744/vue-and-docx-file-mdm</guid>
      <description>&lt;p&gt;Hey, my name is Shaked, and I want you to have the easiest time learning how to create and save a docx file client side.  So without more talking, let's start. &lt;br&gt;
By the way, this code is with Vue js, but this example can be used in any other framework, like React Angular and Svelte.&lt;br&gt;
One last thing if you are using a server side framework like nuxt.js/ next.js, please use client-side rending for this component, so you do not have any issues with that (only when you create the file in the server-side life cycle hook)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;template&amp;gt;
  &amp;lt;div&amp;gt;
    &amp;lt;div @click="exportDocx"&amp;gt;
      Generate .docx file
    &amp;lt;/div&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/template&amp;gt;

&amp;lt;script&amp;gt;
import { Document, Packer, Paragraph, TextRun } from "docx";
// import { saveAs } from 'file-saver'; // you can use this also
const FileSaver = require("file-saver");

export default {
  methods: {
    exportDocx() {
      // Create a new Document an save it in a variable
      const doc = new Document({
        sections: [
          {
            properties: {},
            children: [
              new Paragraph({
                children: [
                  new TextRun("Hello World"),
                  new TextRun({
                    text: "Foo Bar",
                    bold: true,
                  }),
                  new TextRun({
                    text: "אני אדם כמו כל אדם אחר בעולם חחחחחחחחחח הצחקתי את עצמי ",
                    bold: true,
                  }),
                ],
              }),
            ],
          },
        ],
      });
      const mimeType =
        "application/vnd.openxmlformats-officedocument.wordprocessingml.document";
      const fileName = "test.docx";
      Packer.toBlob(doc).then((blob) =&amp;gt; {
        const docblob = blob.slice(0, blob.size, mimeType);
        FileSaver.saveAs(docblob, fileName);
      });
    },
  },
};
&amp;lt;/script&amp;gt;

&amp;lt;style lang="scss" scoped&amp;gt;
&amp;lt;/style&amp;gt;```



&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

</description>
      <category>vue</category>
      <category>docx</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Fylgja a new CSS framework, WHY!</title>
      <author>Ruud van Zuidam</author>
      <pubDate>Sun, 29 Aug 2021 07:40:14 +0000</pubDate>
      <link>https://dev.to/fylgja/fylgja-a-new-css-framework-why-3b0n</link>
      <guid>https://dev.to/fylgja/fylgja-a-new-css-framework-why-3b0n</guid>
      <description>&lt;p&gt;Time to introduce Fylgja a new CSS framework, there are already a lot of CSS frameworks, almost everybody knows Bootstrap, Material and Tailwind.&lt;/p&gt;

&lt;p&gt;None of them is bad, each of them does the job, and if one of them fits the way you are working, you're probably happy.&lt;/p&gt;

&lt;p&gt;Looking around on dev.to you find several artikels, describing CSS frameworks and their pros and cons, for example;&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/chetan_atrawalkar" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rbDD3vTL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--4cjBkpzC--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/655054/319c19c5-c069-4692-b50d-dd887a6e6e57.png" alt="chetan_atrawalkar"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/chetan_atrawalkar/20-best-css3-library-for-developers-58p" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;🚀20 Best CSS3 Library For Developers.&lt;/h2&gt;
      &lt;h3&gt;Chetan Atrawalkar👉CA. ・ Jul 27 ・ 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#codenewbie&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/vetheedixit" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Tg4SsLt7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--g0kw435V--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/385377/23e1b650-9034-4eb3-accc-15c28bf4f9fe.jpg" alt="vetheedixit"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/vetheedixit/11-best-css-frameworks-to-look-forward-in-2020-3p3p" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;11 Best CSS Frameworks To Look Forward In 2020&lt;/h2&gt;
      &lt;h3&gt;Vethee Dixit ・ Jun 3 '20 ・ 17 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#framework&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#design&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/theme_selection" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KfopPUEP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s---c-0NR02--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/307204/326109cb-a894-412a-b963-1cf36950736d.jpg" alt="theme_selection"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/theme_selection/best-css-frameworks-in-2020-1jjh" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Best CSS Frameworks in 2021&lt;/h2&gt;
      &lt;h3&gt;themeselection ・ Sep 8 '20 ・ 15 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#opensource&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/pravunathsingh" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RyJPMY_t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--Y6wpZ1l1--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/239473/7f70634b-f2f0-429f-994a-fd4565bac65b.png" alt="pravunathsingh"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/pravunathsingh/battle-of-the-frameworks-which-one-to-choose-and-why-27ke" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Battle of the Frameworks, Which one to choose and why.&lt;/h2&gt;
      &lt;h3&gt;Pravunath Singh ・ Apr 26 ・ 6 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tailwindcss&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#frontend&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;The Best is of course opinionated, choose what works for you&lt;br&gt;
And always check Github to see if there is active development&lt;br&gt;
A dead framework is not a great investment&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So why! Fylgja, well because its a very good tool for frontenders who understand CSS and need a consistent basis for there projects.&lt;/p&gt;

&lt;p&gt;Some history, years ago we started working with Bootstrap 2, using it for frontend design we developed it as an extend / utility pack to give us tools to work better and faster.&lt;/p&gt;

&lt;p&gt;Initially developed with LESS and Grunt we switched to SCSS and GULP, and it became a daily tool for us, &lt;a href="https://fylgja.dev/about"&gt;read the full story here&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;On the road we learned from others and we had continuous development improving it, and since we are only human and are proud of our product we like to share it with you all.&lt;/p&gt;

&lt;p&gt;We put it on Github and released version 1 on 22 June this year, you can find  the Website with the documentation on &lt;a href="https://fylgja.dev"&gt;Fylgja.dev&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Off course we could fill this article with exaggerated marketing texts, telling you how good it is, and why we’re the best (we are 😁) but no BS here, Take a look, try it out, use it and contribute if you like.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/fylgja"&gt;
        fylgja
      &lt;/a&gt; / &lt;a href="https://github.com/fylgja/fylgja"&gt;
        fylgja
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A Modular and customizable front-end framework for building UI components for the web.
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


</description>
      <category>fylgjacss</category>
      <category>css</category>
      <category>framework</category>
      <category>frontend</category>
    </item>
    <item>
      <title>TensorFlow Visualization Framework</title>
      <author>Mansoor Ahmed</author>
      <pubDate>Sun, 29 Aug 2021 07:05:13 +0000</pubDate>
      <link>https://dev.to/ahmedmansoor012/tensorflow-visualization-framework-322k</link>
      <guid>https://dev.to/ahmedmansoor012/tensorflow-visualization-framework-322k</guid>
      <description>&lt;p&gt;Introduction&lt;br&gt;
To do good research or develop good models, we need rich, frequent feedback about what’s going on inside our models during our experiments. That’s the point of running experiments: to get information about how well a model performs—as much information as possible. Making progress is an iterative process or loop: we start with an idea and express it as an experiment, attempting to validate or invalidate our idea. We run this experiment and process the information it generates. This inspires our next idea. The more iterations of this loop we’re able to run, the more refined and powerful our ideas become. Keras helps us go from idea to experiment in the least possible time, and fast GPU s can help us get from experiment to result as quickly as possible. But what about processing the experiment results? That’s where Tensor-Board comes in.&lt;/p&gt;

&lt;p&gt;Description&lt;br&gt;
TensorBoard, a browser-based visualization tool that comes packaged with TensorFlow. Note that it’s only available for Keras models when we’re using Keras with the TensorFlow backend. The key purpose of TensorBoard is to help us visually monitor everything that goes on inside our model during training. If we’re monitoring more information than just the model’s final loss, we can develop a clearer vision of what the model does and doesn’t do, and we can make progress more quickly. TensorBoard gives us access to several neat features, all in our browser:&lt;/p&gt;

&lt;p&gt;Visually monitoring metrics during training&lt;br&gt;
Visualizing our model architecture&lt;br&gt;
Visualizing histograms of activations and gradients&lt;br&gt;
Exploring embeddings in 3D&lt;br&gt;
Let’s demonstrate these features in a simple example. We’ll train a 1D convnet on the IMDB sentiment-analysis task. We’ll consider only the top 2,000 words in the IMDB vocabulary, to make visualizing word embeddings more tractable.&lt;br&gt;
Text-classification model to use with TensorBoard&lt;br&gt;
import keras&lt;br&gt;
from keras import layers&lt;br&gt;
from keras.datasets import imdb&lt;br&gt;
from keras.preprocessing import sequence&lt;br&gt;
Number of words to&lt;br&gt;
consider as features&lt;br&gt;
max_features = 2000&lt;br&gt;
max_len = 500&lt;br&gt;
Cuts off texts after this number of words (among max_features most common words)&lt;br&gt;
(x_train, y_train), (x_test, y_test) = imdb.load_data(num_words=max_features)&lt;br&gt;
x_train = sequence.pad_sequences(x_train, maxlen=max_len)&lt;br&gt;
x_test = sequence.pad_sequences(x_test, maxlen=max_len)&lt;br&gt;
model = keras.models.Sequential()&lt;br&gt;
model.add(layers.Embedding(max_features, 128,&lt;br&gt;
input_length=max_len,&lt;br&gt;
name=’embed’))&lt;br&gt;
model.add(layers.Conv1D(32, 7, activation=’relu’))&lt;br&gt;
model.add(layers.MaxPooling1D(5))&lt;br&gt;
model.add(layers.Conv1D(32, 7, activation=’relu’))&lt;br&gt;
model.add(layers.GlobalMaxPooling1D())&lt;br&gt;
model.add(layers.Dense(1))&lt;br&gt;
model.summary()&lt;br&gt;
model.compile(optimizer=’rmsprop’,&lt;br&gt;
loss=’binary_crossentropy’,&lt;br&gt;
metrics=[‘acc’])&lt;br&gt;
Before we start using TensorBoard, we need to create a directory where we’ll store the log files it generates.&lt;br&gt;
Creating a directory for TensorBoard log files&lt;br&gt;
$ mkdir my_log_dir&lt;br&gt;
Let’s launch the training with a TensorBoard callback instance. This callback will write&lt;br&gt;
log events to disk at the specified location.&lt;br&gt;
Training the model with a TensorBoard callback&lt;br&gt;
callbacks = [&lt;br&gt;
                                                               Log files will be written at this location.&lt;br&gt;
keras.callbacks.TensorBoard(&lt;br&gt;
log_dir=’my_log_dir’,&lt;br&gt;
histogram_freq=1,&lt;br&gt;
                                                                Records activation histograms every 1 epoch&lt;br&gt;
embeddings_freq=1, ) ]&lt;br&gt;
                                                                Records embedding data every 1 epoch&lt;br&gt;
history = model.fit(x_train, y_train,&lt;br&gt;
epochs=20,&lt;br&gt;
batch_size=128,&lt;br&gt;
validation_split=0.2,&lt;br&gt;
callbacks=callbacks)&lt;br&gt;
At this point, we can launch the TensorBoard server from the command line, instructing it to read the logs the callback is currently writing. The tensorboard utility should have been automatically installed on our machine the moment we installed&lt;br&gt;
TensorFlow (for example, via pip ):&lt;br&gt;
$ tensorboard –logdir=my_log_dir&lt;br&gt;
We can then browse to &lt;a href="http://localhost:6006"&gt;http://localhost:6006&lt;/a&gt; and look at our model training. In addition, to live graphs of the training and validation metrics, we get access to the Histograms tab, where we can find pretty visualizations of histograms of activation values taken by our layers.&lt;br&gt;
For more details visit:&lt;a href="https://www.technologiesinindustry4.com/2021/05/tensorflow-visualization-framework.html"&gt;https://www.technologiesinindustry4.com/2021/05/tensorflow-visualization-framework.html&lt;/a&gt;&lt;/p&gt;

</description>
      <category>programming</category>
    </item>
    <item>
      <title>Create React App from Scratch like a Pro</title>
      <author>Tapajyoti Bose</author>
      <pubDate>Sun, 29 Aug 2021 06:55:27 +0000</pubDate>
      <link>https://dev.to/ruppysuppy/create-react-app-from-scratch-like-a-pro-de0</link>
      <guid>https://dev.to/ruppysuppy/create-react-app-from-scratch-like-a-pro-de0</guid>
      <description>&lt;p&gt;Creating a &lt;strong&gt;React App&lt;/strong&gt; is a very difficult feat, even when you are an &lt;em&gt;experienced developer&lt;/em&gt;. That led to the development of &lt;code&gt;create-react-app&lt;/code&gt;, a &lt;strong&gt;Command Line Tool&lt;/strong&gt; to streamline the process of creating a &lt;strong&gt;React app&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Using &lt;code&gt;create-react-app&lt;/code&gt; comes with &lt;em&gt;several added benefits&lt;/em&gt; such as &lt;strong&gt;rapid prototyping&lt;/strong&gt; and making the development of React Apps &lt;strong&gt;accessible to beginners&lt;/strong&gt;, but there are some &lt;em&gt;disadvantages&lt;/em&gt; as well.&lt;/p&gt;

&lt;p&gt;Since &lt;code&gt;create-react-app&lt;/code&gt; aims to generate more or less an &lt;strong&gt;all-purpose app&lt;/strong&gt;, leading to a lot of additional &lt;strong&gt;not-so-necessary dependencies&lt;/strong&gt; for any given &lt;strong&gt;niche case&lt;/strong&gt;. Another &lt;em&gt;con&lt;/em&gt; for using &lt;code&gt;create-react-app&lt;/code&gt; is &lt;strong&gt;customizing&lt;/strong&gt; it might be a &lt;em&gt;pain&lt;/em&gt; at times.&lt;/p&gt;

&lt;p&gt;So let's dive into how to create your &lt;strong&gt;React Apps&lt;/strong&gt; from scratch that allow you to &lt;strong&gt;customize the app&lt;/strong&gt; to your &lt;strong&gt;heart's content&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QTkS3cVq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bagtytckfi16pxbut4nu.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QTkS3cVq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bagtytckfi16pxbut4nu.gif" alt="Let's begin"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#step-0-installing-node"&gt;
  &lt;/a&gt;
  Step 0: Installing Node
&lt;/h1&gt;

&lt;p&gt;This goes without saying, you need &lt;strong&gt;Node.js&lt;/strong&gt; and &lt;strong&gt;npm&lt;/strong&gt; or &lt;strong&gt;yarn&lt;/strong&gt; (in this article I would be using &lt;strong&gt;npm&lt;/strong&gt;). To test if you have them installed, run the following commands:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;node &lt;span class="nt"&gt;-v&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nt"&gt;-v&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In case you don't have them installed, I trust you with being able to install them, so I am moving on to the next step.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tpSKhc_T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s6r0c79dbi1d680qezcf.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tpSKhc_T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s6r0c79dbi1d680qezcf.gif" alt="I believe in you"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#1-initializing-the-project"&gt;
  &lt;/a&gt;
  1. Initializing the project
&lt;/h1&gt;

&lt;p&gt;Create a new folder and navigate into it. To initialize a node project use:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm init
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;or if you are lazy like me, use:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm init &lt;span class="nt"&gt;-y&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and modify the generated &lt;code&gt;package.json&lt;/code&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#2-installing-dependencies"&gt;
  &lt;/a&gt;
  2. Installing dependencies
&lt;/h1&gt;

&lt;p&gt;Now we would be adding the necessary &lt;strong&gt;Dependencies&lt;/strong&gt; to our project.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-react-dependencies"&gt;
  &lt;/a&gt;
  1. &lt;strong&gt;React Dependencies&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;These are the only &lt;em&gt;dependencies&lt;/em&gt; that are &lt;strong&gt;NOT&lt;/strong&gt; &lt;em&gt;dev dependencies&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install &lt;/span&gt;react react-dom
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's take a look at the libraries:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;react&lt;/code&gt;: &lt;strong&gt;library&lt;/strong&gt; we'll be working with.&lt;br&gt;
&lt;code&gt;react-dom&lt;/code&gt;: package to &lt;em&gt;manage&lt;/em&gt; &lt;strong&gt;DOM elements&lt;/strong&gt;.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#2-webpack-dependencies"&gt;
  &lt;/a&gt;
  2. &lt;strong&gt;Webpack Dependencies&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Webpack&lt;/strong&gt; is the &lt;em&gt;most popular bundler&lt;/em&gt; in the world of &lt;strong&gt;Node.js&lt;/strong&gt;. It &lt;em&gt;bundles&lt;/em&gt; and even &lt;em&gt;minifies&lt;/em&gt; the JavaScript files in the project.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-save-dev&lt;/span&gt; webpack webpack-cli
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Taking a look at the libraries:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;webpack&lt;/code&gt;: the &lt;strong&gt;bundler&lt;/strong&gt;.&lt;br&gt;
&lt;code&gt;webpack-cli&lt;/code&gt;: &lt;strong&gt;CLI&lt;/strong&gt; for &lt;strong&gt;Webpack&lt;/strong&gt;.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#3-webpack-loaders"&gt;
  &lt;/a&gt;
  3. &lt;strong&gt;Webpack Loaders&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Webpack&lt;/strong&gt; needs &lt;strong&gt;loaders&lt;/strong&gt; to &lt;strong&gt;preprocess&lt;/strong&gt; files. They allow the user customize &lt;strong&gt;Webpack&lt;/strong&gt; to bundle &lt;strong&gt;static resources&lt;/strong&gt; beyond &lt;strong&gt;JavaScript&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;--save-dev&lt;/span&gt; babel-loader
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For now, let's start with the absolutely necessary &lt;code&gt;babel-loader&lt;/code&gt; (&lt;strong&gt;loader&lt;/strong&gt; for &lt;strong&gt;Babel&lt;/strong&gt;) and later add additional functionality based on need.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-babel-dependencies"&gt;
  &lt;/a&gt;
  4. &lt;strong&gt;Babel Dependencies&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Babel&lt;/strong&gt; is a JavaScript compiler that converts (or rather &lt;strong&gt;transpiles&lt;/strong&gt;) &lt;strong&gt;JavaScript ES6&lt;/strong&gt; to targeted version of &lt;strong&gt;JavaScript&lt;/strong&gt; since &lt;em&gt;not all browsers&lt;/em&gt; support &lt;strong&gt;ECMAScript 6&lt;/strong&gt; features. We would be using it to &lt;strong&gt;transpile&lt;/strong&gt; the &lt;strong&gt;JSX&lt;/strong&gt; code in our project to regular &lt;strong&gt;JavaScript&lt;/strong&gt; that browsers can understand.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;--save-dev&lt;/span&gt; @babel/core @babel/preset-react
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The dependencies:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;@babel/core&lt;/code&gt;: Babel compiler core.&lt;br&gt;
&lt;code&gt;@babel/preset-react&lt;/code&gt;: package with a &lt;em&gt;set of plugins&lt;/em&gt; used to support &lt;strong&gt;React features&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Phew! We are finally done with the dependencies!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XRfwFHKO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mfzdhfwo59lgo7d05sg2.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XRfwFHKO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mfzdhfwo59lgo7d05sg2.gif" alt="Phew"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#3-configuring-babel"&gt;
  &lt;/a&gt;
  3. Configuring Babel
&lt;/h1&gt;

&lt;p&gt;To configure &lt;strong&gt;Babel&lt;/strong&gt;, we need to add &lt;code&gt;.babelrc&lt;/code&gt; in the &lt;em&gt;root level&lt;/em&gt; of our project&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"presets"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"@babel/preset-react"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#4-configuring-webpack"&gt;
  &lt;/a&gt;
  4. Configuring Webpack
&lt;/h1&gt;

&lt;p&gt;Now its time to configure &lt;strong&gt;Webpack&lt;/strong&gt;. Add the &lt;code&gt;webpack.config.js&lt;/code&gt; at the &lt;em&gt;root level&lt;/em&gt; of the project and add the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;path&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;webpack&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;webpack&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./src/index.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;development&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;output&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;bundle.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dist&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="na"&gt;publicPath&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;module&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;rules&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;test&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;\.(&lt;/span&gt;&lt;span class="sr"&gt;js|jsx&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="sr"&gt;$/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;exclude&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/node_modules/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;use&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;babel-loader&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt; 
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And let’s see what all of this is doing:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;entry&lt;/code&gt;: The &lt;strong&gt;entry point&lt;/strong&gt; for our application. In &lt;strong&gt;React&lt;/strong&gt;, this is the file where we use our &lt;strong&gt;renderer&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;mode&lt;/code&gt;: The &lt;strong&gt;mode&lt;/strong&gt; in which the application is being run (&lt;strong&gt;development&lt;/strong&gt; or &lt;strong&gt;production&lt;/strong&gt;).&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;output&lt;/code&gt;: Informing &lt;strong&gt;Webpack&lt;/strong&gt; where to put our &lt;strong&gt;bundled code&lt;/strong&gt; and the name of the file.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;module&lt;/code&gt;: Informing &lt;strong&gt;Webpack&lt;/strong&gt; how and when to use the &lt;strong&gt;loaders&lt;/strong&gt; we installed. We’re using regex to tell each loader which file extensions to target.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#5-html-body"&gt;
  &lt;/a&gt;
  5. HTML Body
&lt;/h1&gt;

&lt;p&gt;Add an &lt;code&gt;/public/index.html&lt;/code&gt; and the basic body:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;http-equiv=&lt;/span&gt;&lt;span class="s"&gt;"X-UA-Compatible"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"IE=edge"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1.0"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;React From Scratch&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"root"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

        &lt;span class="c"&gt;&amp;lt;!-- The bundle-name should be same as you defined in webpack config file --&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"../dist/bundle.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#6-creating-the-react-app"&gt;
  &lt;/a&gt;
  6. Creating the React App
&lt;/h1&gt;

&lt;p&gt;Finally, we now start working on our app. Add &lt;code&gt;/src/index.js&lt;/code&gt; (the entry point for the app mentioned in &lt;code&gt;webpack.config.js&lt;/code&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;ReactDOM&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-dom&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./App&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="nx"&gt;ReactDOM&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;App&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;,&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#root&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and the &lt;strong&gt;App&lt;/strong&gt; file &lt;code&gt;/src/App.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;React from Scratch&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#7-adding-scripts"&gt;
  &lt;/a&gt;
  7. Adding Scripts
&lt;/h1&gt;

&lt;p&gt;We are done making the app, but how do we run it?&lt;/p&gt;

&lt;p&gt;Glad you asked. we need to add 2 scripts for ease of use:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="nl"&gt;"scripts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"build"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"webpack --mode production"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"start"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"webpack --mode development"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now you can use &lt;code&gt;npm run build&lt;/code&gt; or &lt;code&gt;npm run start&lt;/code&gt; to bundle the &lt;strong&gt;React App&lt;/strong&gt; and run the app from &lt;code&gt;/public/index.html&lt;/code&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;Now you too know how to Create an absolute basic &lt;strong&gt;React App&lt;/strong&gt; from Scratch. &lt;strong&gt;YAY!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NjHrNbPE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dmqxc9eq98czg3gdc2pn.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NjHrNbPE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dmqxc9eq98czg3gdc2pn.gif" alt="Yay!"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can extend the functionality with &lt;strong&gt;additional plugins&lt;/strong&gt; and &lt;strong&gt;loaders&lt;/strong&gt; such as installing &lt;code&gt;style-loader&lt;/code&gt; &amp;amp; &lt;code&gt;css-loader&lt;/code&gt; and adding:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;test&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;\.&lt;/span&gt;&lt;span class="sr"&gt;css$/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;style-loader&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;css-loader&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;in your &lt;code&gt;webpack.config.js&lt;/code&gt;, you can implement &lt;strong&gt;CSS&lt;/strong&gt; support in your &lt;strong&gt;React App&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can add &lt;code&gt;webpack-dev-server&lt;/code&gt; to serve the website instead of opening the &lt;strong&gt;HTML&lt;/strong&gt; file (and potentially more optimized &lt;code&gt;start&lt;/code&gt; script), use &lt;code&gt;HotModuleReplacementPlugin&lt;/code&gt; to enable &lt;strong&gt;Hot Reload&lt;/strong&gt; and much more. The possibilities are endless. Now you can create &lt;strong&gt;React Apps&lt;/strong&gt; that cater to your individual requirements.&lt;/p&gt;

&lt;p&gt;All the best in your &lt;strong&gt;React&lt;/strong&gt; Development journey! :)&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#thanks-for-reading"&gt;
  &lt;/a&gt;
  Thanks for reading
&lt;/h1&gt;

&lt;p&gt;Want to work together? Contact me on &lt;a href="https://www.upwork.com/o/profiles/users/~01c12e516ee1d35044/"&gt;Upwork&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Want to see what I am working on? Check out my &lt;a href="https://github.com/ruppysuppy"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I am a freelancer who will start off as a Digital Nomad in mid-2022. Want to catch the journey? Follow me on &lt;a href="https://www.instagram.com/tapajyotib/"&gt;Instagram&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Follow my blogs for weekly new tidbits on &lt;a href="https://dev.to/ruppysuppy"&gt;Dev&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;FAQ&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;These are a few commonly asked questions I get. So, I hope this &lt;strong&gt;FAQ&lt;/strong&gt; section solves your issues.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;I am a beginner, how should I learn Front-End Web Dev?&lt;/strong&gt;&lt;br&gt;
Look into the following articles:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://dev.to/ruppysuppy/front-end-developer-roadmap-zero-to-hero-4pkf"&gt;Front End Development Roadmap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/ruppysuppy/5-projects-to-master-front-end-development-57p"&gt;Front End Project Ideas&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Would you mentor me?&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
Sorry, I am already under a lot of workload and would not have the time to mentor anyone.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Would you like to collaborate on our site?&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
As mentioned in the &lt;em&gt;previous question&lt;/em&gt;, I am in a time crunch, so I would have to pass on such opportunities.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Connect to me on&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://www.linkedin.com/in/tapajyoti-bose-429a601a0"&gt;LinkedIn&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://tapajyoti-bose.vercel.app"&gt;Portfolio&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.upwork.com/o/profiles/users/~01c12e516ee1d35044/"&gt;Upwork&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://github.com/ruppysuppy"&gt;GitHub&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.instagram.com/tapajyotib/"&gt;Instagram&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>react</category>
      <category>webpack</category>
      <category>babel</category>
      <category>webdev</category>
    </item>
    <item>
      <title>How to start with Kubernetes for begginer</title>
      <author>Dhiraj Patra</author>
      <pubDate>Sun, 29 Aug 2021 06:22:12 +0000</pubDate>
      <link>https://dev.to/dhirajpatra/how-to-start-with-kubernetes-for-begginer-309e</link>
      <guid>https://dev.to/dhirajpatra/how-to-start-with-kubernetes-for-begginer-309e</guid>
      <description>&lt;p&gt;Prior knowledge require: Python or any other language development knowledge. Knows about what is GIT and how it works. Good if you know about Docker.&lt;/p&gt;

&lt;p&gt;What can Kubernetes do for you?&lt;/p&gt;

&lt;p&gt;With modern web services, users expect applications to be available 24/7, and developers expect to deploy new versions of those applications several times a day. Containerization helps package software to serve these goals, enabling applications to be released and updated in an easy and fast way without downtime. Kubernetes helps you make sure those containerized applications run where and when you want, and helps them find the resources and tools they need to work. Kubernetes is a production-ready, open source platform designed with Google’s accumulated experience in container orchestration, combined with best-of-breed ideas from the community.&lt;/p&gt;

&lt;p&gt;So in short, when you need to run your application all round the clock. You need to deploy and update release your application any time or several times. Then Kubernetes comes to rescue it. And now most of the cloud hosting supports it and very easy to deploy as well.&lt;/p&gt;

&lt;p&gt;Kubernetes is an open-source platform for automating deployment, scaling, and operations of application containers across clusters of hosts, providing container-centric infrastructure.&lt;/p&gt;

&lt;p&gt;The Kubernetes Master is a collection of three processes that run on a single node in your cluster, which is designated as the master node. Those processes are: kube-apiserver, kube-controller-manager and kube-scheduler.&lt;/p&gt;

&lt;p&gt;Each individual non-master node in your cluster runs two processes:&lt;/p&gt;

&lt;p&gt;kubelet, which communicates with the Kubernetes Master.&lt;br&gt;
kube-proxy, a network proxy which reflects Kubernetes networking services on each node.&lt;/p&gt;

&lt;p&gt;The basic Kubernetes objects include:&lt;/p&gt;

&lt;p&gt;Pod&lt;br&gt;
Service&lt;br&gt;
Volume&lt;br&gt;
Namespace&lt;br&gt;
Kubernetes Master&lt;/p&gt;

&lt;p&gt;The Kubernetes master is responsible for maintaining the desired state for your cluster. When you interact with Kubernetes, such as by using the kubectl command-line interface, you're communicating with your cluster's Kubernetes master.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zsSArznH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7shryggemyryra4zcprv.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zsSArznH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7shryggemyryra4zcprv.jpeg" alt="Kubernetes master"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Kubernetes Nodes&lt;/p&gt;

&lt;p&gt;The nodes in a cluster are the machines (VMs, physical servers, etc) that run your applications and cloud workflows. The Kubernetes master controls each node; you’ll rarely interact with nodes directly.&lt;/p&gt;

&lt;p&gt;What is container&lt;/p&gt;

&lt;p&gt;Containers are a technology for packaging the (compiled) code for an application along with the dependencies it needs at run time. Each container that you run is repeatable; the standardization from having dependencies included means that you get the same behavior wherever you run it.&lt;/p&gt;

&lt;p&gt;What is container image&lt;/p&gt;

&lt;p&gt;A container image is a ready-to-run software package, containing everything needed to run an application: the code and any runtime it requires, application and system libraries, and default values for any essential settings.&lt;/p&gt;

&lt;p&gt;What is container runtime&lt;/p&gt;

&lt;p&gt;The container runtime is the software that is responsible for running containers.&lt;/p&gt;

&lt;p&gt;Kubernetes supports several container runtimes: Docker, containerd, CRI-O, and any implementation of the Kubernetes CRI (Container Runtime Interface).&lt;/p&gt;

&lt;p&gt;Master&lt;br&gt;
Manage, build, deploy and operate&lt;/p&gt;

&lt;p&gt;Node&lt;/p&gt;

&lt;p&gt;Run containers and registries&lt;/p&gt;

&lt;p&gt;Let see how to install and run in local system&lt;br&gt;
I am using Ubuntu you can use any linux.&lt;/p&gt;

&lt;p&gt;Steps&lt;/p&gt;

&lt;p&gt;Installing kubectl&lt;/p&gt;

&lt;p&gt;Download a pre-compiled release[1] and unzip it — — kubectl should be located in the&lt;br&gt;
platforms// directory.&lt;/p&gt;

&lt;p&gt;[1] &lt;a href="https://github.com/kubernetes/kubernetes/releases"&gt;https://github.com/kubernetes/kubernetes/releases&lt;/a&gt;&lt;br&gt;
Add kubectl to your path. Note, you can simply copy it into a directory that is already in your $PATH (e.g. /usr/local/bin).&lt;/p&gt;

&lt;p&gt;For example:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$ sudo cp kubernetes/platforms/linux/amd64/kubectl /usr/local/bin/kubectl&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;You also need to ensure it’s executable:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$ sudo chmod +x /usr/local/bin/kubectl&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;administration&lt;/p&gt;

&lt;p&gt;To administer and interact with any given Kubernetes cluster (local or remote), you must set&lt;br&gt;
up your kubeconfig file. By default, kubectl configuration lives at&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$ ~/.kube/config&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;You can also create a cluster in your local machine via Minikube (See section 3: Running Locally via Minikube)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a4WZrpBk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e6kuxtz4l0ztlhl0rxmx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a4WZrpBk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e6kuxtz4l0ztlhl0rxmx.png" alt="code block"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Prerequisit for minikube&lt;/p&gt;

&lt;p&gt;Minikube requires that VT-x/AMD-v virtualization is enabled in BIOS on all platforms.&lt;/p&gt;

&lt;p&gt;For example:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$ cat /proc/cpuinfo | grep ‘vmx\|svm’&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Make sure if the setting is enabled where this command should output something.&lt;/p&gt;

&lt;p&gt;Install an x86 virtualization software package in your local machine:&lt;/p&gt;

&lt;p&gt;Linux: The latest VirtualBox&lt;/p&gt;

&lt;p&gt;Install minikube&lt;/p&gt;

&lt;p&gt;Feel free to leave off the sudo mv minikube /usr/local/bin if you would like to add minikube to your path manually.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$ curl -Lo minikube https://storage.googleapis.com/minikube/releases/v0.12.2/minikube-&lt;br&gt;
linux-amd64 &amp;amp;&amp;amp; chmod +x minikube &amp;amp;&amp;amp; sudo mv minikube /usr/local/bin/&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Install kubectl&lt;/p&gt;

&lt;p&gt;You will need to download and install the kubectl client binary to run commands against the&lt;br&gt;
cluster. For example:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$ curl -Lo kubectl http://storage.googleapis.com/kubernetes-release/release/v1.3.0/bin/&lt;br&gt;
linux/amd64/kubectl &amp;amp;&amp;amp; chmod +x kubectl &amp;amp;&amp;amp; sudo mv kubectl /usr/local/bin/&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Getting started&lt;/p&gt;

&lt;p&gt;Note that the IP below is dynamic and can change. It can be retrieved with minikube ip.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_NK_8OxK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/10zhjirgbnv6kdifvl5w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_NK_8OxK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/10zhjirgbnv6kdifvl5w.png" alt="code block"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#to-access-the-kubernetes-dashboard-run-this-command-in-a-shell-after-starting-minikube-to-get-the-address"&gt;
  &lt;/a&gt;
  To access the Kubernetes Dashboard, run this command in a shell after starting minikube to get the address:
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;$ minikube dashboard&lt;/code&gt;&lt;br&gt;
&lt;code&gt;$ minikube stop&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Stopping local Kubernetes cluster…&lt;br&gt;
Stopping “minikube”…&lt;/p&gt;

&lt;p&gt;kubectl CLI&lt;/p&gt;

&lt;p&gt;kubectl [command] [TYPE] [NAME] [flags]&lt;/p&gt;

&lt;p&gt;Viewing, Finding Resources&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#get-commands-with-basic-output"&gt;
  &lt;/a&gt;
  Get commands with basic output
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;$ kubectl get pod&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HDM-tB2W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4pdun6sukqkb1edlk700.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HDM-tB2W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4pdun6sukqkb1edlk700.png" alt="code block"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To know more about the usage kindly visit &lt;br&gt;
&lt;a href="https://kubernetes.io/"&gt;Link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To know how to use Kubernetes in Google Cloud&lt;/p&gt;

&lt;p&gt;&lt;a href="https://cloud.google.com/kubernetes-engine"&gt;Link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To know how to use Kubernetes in AWS&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws.amazon.com/eks/?nc2=h_ql_prod_ct_eks"&gt;Link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;

</description>
      <category>kubernetes</category>
      <category>docker</category>
      <category>microservices</category>
      <category>python</category>
    </item>
    <item>
      <title>Why You Should Use Arrow Functions For Validation Functions</title>
      <author>Yogesh Chavan</author>
      <pubDate>Sun, 29 Aug 2021 06:17:46 +0000</pubDate>
      <link>https://dev.to/myogeshchavan97/why-you-should-use-arrow-functions-for-validation-functions-2bdb</link>
      <guid>https://dev.to/myogeshchavan97/why-you-should-use-arrow-functions-for-validation-functions-2bdb</guid>
      <description>&lt;p&gt;Arrow Functions are one of the greatest additions in ES6, whether it's regarding the &lt;code&gt;this&lt;/code&gt; keyword or regarding the shorter syntax.&lt;/p&gt;

&lt;p&gt;Today we will see, how using arrow functions makes our code much simpler and shorter while creating validation functions.&lt;/p&gt;

&lt;p&gt;Suppose, you have written a function which returns &lt;code&gt;true&lt;/code&gt; if the email is valid otherwise returns an error message as shown below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;validateEmail&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="sr"&gt;/^&lt;/span&gt;&lt;span class="se"&gt;[^&lt;/span&gt;&lt;span class="sr"&gt;@ &lt;/span&gt;&lt;span class="se"&gt;]&lt;/span&gt;&lt;span class="sr"&gt;+@&lt;/span&gt;&lt;span class="se"&gt;[^&lt;/span&gt;&lt;span class="sr"&gt;@ &lt;/span&gt;&lt;span class="se"&gt;]&lt;/span&gt;&lt;span class="sr"&gt;+&lt;/span&gt;&lt;span class="se"&gt;\.[^&lt;/span&gt;&lt;span class="sr"&gt;@ &lt;/span&gt;&lt;span class="se"&gt;\.]&lt;/span&gt;&lt;span class="sr"&gt;+$/&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isValidEmail&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;validateEmail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Please enter a valid email address&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;isValid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;isValidEmail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;abc@gmail.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isValid&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// true&lt;/span&gt;
&lt;span class="nx"&gt;isValid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;isValidEmail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;abc@@gmail.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isValid&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Please enter a valid email address&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The same function can be written in just one line using ES6 arrow functions syntax as shown below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;validateEmail&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="sr"&gt;/^&lt;/span&gt;&lt;span class="se"&gt;[^&lt;/span&gt;&lt;span class="sr"&gt;@ &lt;/span&gt;&lt;span class="se"&gt;]&lt;/span&gt;&lt;span class="sr"&gt;+@&lt;/span&gt;&lt;span class="se"&gt;[^&lt;/span&gt;&lt;span class="sr"&gt;@ &lt;/span&gt;&lt;span class="se"&gt;]&lt;/span&gt;&lt;span class="sr"&gt;+&lt;/span&gt;&lt;span class="se"&gt;\.[^&lt;/span&gt;&lt;span class="sr"&gt;@ &lt;/span&gt;&lt;span class="se"&gt;\.]&lt;/span&gt;&lt;span class="sr"&gt;+$/&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isValidEmail&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;validateEmail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Please enter a valid email address.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;isValid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;isValidEmail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;abc@gmail.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isValid&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// true&lt;/span&gt;
&lt;span class="nx"&gt;isValid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;isValidEmail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;abc@@gmail.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isValid&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Please enter a valid email address&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;Suppose you have written a generic validation function that checks if the input field is empty or not as shown below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isNotEmpty&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fieldName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fieldValue&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fieldValue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;fieldName&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;toUpperCase&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;fieldName&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; is required.&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fieldName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;isNotEmpty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;isValid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;fieldName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;David&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isValid&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// true&lt;/span&gt;
&lt;span class="nx"&gt;isValid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;fieldName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isValid&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Name is required&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The same function can be written in just one line using ES6 arrow functions syntax as shown below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isNotEmpty&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;fieldName&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;fieldValue&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;fieldValue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;fieldName&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;toUpperCase&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;fieldName&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt; is required.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fieldName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;isNotEmpty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;isValid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;fieldName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;David&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isValid&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// true&lt;/span&gt;
&lt;span class="nx"&gt;isValid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;fieldName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isValid&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Name is required&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;These are just two examples of validation functions but as you can see, you can create all validation functions using this ES6 arrow function syntax which allows us to write code in a simpler and shorter way.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thanks-for-reading"&gt;
  &lt;/a&gt;
  Thanks for reading!
&lt;/h3&gt;

&lt;p&gt;Check out my recently published &lt;a href="https://master-redux.yogeshchavan.dev/"&gt;Mastering Redux&lt;/a&gt; course.&lt;/p&gt;

&lt;p&gt;In this course, you will build 3 apps along with food ordering app and you'll learn:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Basic and advanced Redux&lt;/li&gt;
&lt;li&gt;How to manage the complex state of array and objects&lt;/li&gt;
&lt;li&gt;How to use multiple reducers to manage complex redux state&lt;/li&gt;
&lt;li&gt;How to debug Redux application&lt;/li&gt;
&lt;li&gt;How to use Redux in React using react-redux library to make your app reactive.&lt;/li&gt;
&lt;li&gt;How to use redux-thunk library to handle async API calls and much more&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;and then finally we'll build a complete &lt;a href="https://www.youtube.com/watch?v=2zaPDfCKAvM"&gt;food ordering app&lt;/a&gt; from scratch with stripe integration for accepting payments and deploy it to the production.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/3w0DGum"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Taa9-Eif--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gist.github.com/myogeshchavan97/98ae4f4ead57fde8d47fcf7641220b72/raw/c3e4265df4396d639a7938a83bffd570130483b1/banner.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Want to stay up to date with regular content regarding JavaScript, React, Node.js? &lt;a href="https://www.linkedin.com/in/yogesh-chavan97/"&gt;Follow me on LinkedIn&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/myogeshchavan97"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xG4nnUnu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/default-yellow.png"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>codenewbie</category>
      <category>node</category>
    </item>
    <item>
      <title>How to setup SSL with Docker</title>
      <author>Dhiraj Patra</author>
      <pubDate>Sun, 29 Aug 2021 05:54:20 +0000</pubDate>
      <link>https://dev.to/dhirajpatra/how-to-setup-ssl-with-docker-4bgh</link>
      <guid>https://dev.to/dhirajpatra/how-to-setup-ssl-with-docker-4bgh</guid>
      <description>&lt;p&gt;I am trying to tell you the easiest way to set up SSL for your domain on any server. I have used this test &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#googlecloudplatform"&gt;
  &lt;/a&gt;
  googlecloudplatform
&lt;/h1&gt;

&lt;p&gt;Create your instance [&lt;a href="https://cloud.google.com/ai-platform/deep-learning-vm/docs/quickstart-cli"&gt;https://cloud.google.com/ai-platform/deep-learning-vm/docs/quickstart-cli&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;Setup your domain name to instance [&lt;a href="https://cloud.google.com/dns/docs/tutorials/create-domain-tutorial"&gt;https://cloud.google.com/dns/docs/tutorials/create-domain-tutorial&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;Log in to your instance with SSH or similar facilities&lt;br&gt;
Go to the root of your application folder. Create a network by&lt;br&gt;
docker network create nginx&lt;/p&gt;

&lt;p&gt;Update your docker-compose file similar to this however nginx-prod and certbot is require&lt;/p&gt;

&lt;p&gt;version: "3.4"&lt;br&gt;
services:&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#nginx-reverse-proxy"&gt;
  &lt;/a&gt;
  Nginx reverse proxy
&lt;/h1&gt;

&lt;p&gt;nginx-prod:&lt;br&gt;
  container_name: nginx-prod&lt;br&gt;
  restart: always&lt;br&gt;
  build:&lt;br&gt;
    context: ./nginx&lt;br&gt;
    dockerfile: Dockerfile&lt;br&gt;
  ports:&lt;br&gt;
    - 80:80 # for production&lt;br&gt;
    - 443:443&lt;br&gt;
  volumes:&lt;br&gt;
    - ./nginx/public_html:/public_html&lt;br&gt;
    - ./nginx/dhparam:/etc/nginx/dhparam&lt;br&gt;
    - ./certbot/conf/:/etc/nginx/ssl/&lt;br&gt;
    - ./certbot/data:/usr/share/nginx/html/letsencrypt&lt;br&gt;
  networks:&lt;br&gt;
    - nginx&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#certbot-to-create-ssl-certificate"&gt;
  &lt;/a&gt;
  certbot to create ssl certificate
&lt;/h1&gt;

&lt;p&gt;certbot:&lt;br&gt;
  image: certbot/certbot&lt;br&gt;
  volumes:&lt;br&gt;
    - ./certbot/conf/:/etc/letsencrypt&lt;br&gt;
    - ./certbot/logs/:/var/log/letsencrypt&lt;br&gt;
    - ./certbot/data:/usr/share/nginx/html/letsencrypt&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#your-web-application-it-may-differ-for-you"&gt;
  &lt;/a&gt;
  your web application it may differ for you
&lt;/h1&gt;

&lt;p&gt;web:&lt;br&gt;
  build:&lt;br&gt;
    context: ./api&lt;br&gt;
    dockerfile: Dockerfile&lt;br&gt;
  container_name: web&lt;br&gt;
  image: orderbot&lt;br&gt;
  restart: always&lt;br&gt;
  env_file:&lt;br&gt;
    - ./.env&lt;br&gt;
  ports:&lt;br&gt;
    - "5000:5000"&lt;br&gt;
networks:&lt;br&gt;
  nginx:&lt;br&gt;
    external: true&lt;br&gt;
Hope you have already the nginx folder in the root with this structure&lt;br&gt;
nginx/&lt;br&gt;
  conf.d/&lt;/p&gt;

&lt;p&gt;Now create these folders at the root&lt;/p&gt;

&lt;p&gt;dhparam&lt;br&gt;
public_html&lt;/p&gt;

&lt;p&gt;Add configuration file below to nginx/local.conf&lt;/p&gt;

&lt;p&gt;server {&lt;br&gt;
    listen 80;&lt;br&gt;
    server_name YOUR_DOMAIN;&lt;br&gt;
    root /public_html/;&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;location ~ /.well-known/acme-challenge{
  allow all;
  root /usr/share/nginx/html/letsencrypt;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;Go to dhparam folder and run the command below&lt;br&gt;
openssl dhparam -out ~/nginx/dhparam/dhparam-2048.pem 2048&lt;br&gt;
Now fire up the docker-compose&lt;/p&gt;

&lt;p&gt;docker-compose up --build -d&lt;/p&gt;

&lt;p&gt;Now run the certbot container [kindly replace YOUR_EMAIL and YOUR_DOMAIN]&lt;/p&gt;

&lt;p&gt;docker-compose run certbot certonly --webroot --webroot-path=/usr/share/nginx/html/letsencrypt --email YOUR_EMAIL --agree-tos --no-eff-email -d YOUR_DOMAIN&lt;/p&gt;

&lt;p&gt;Now stop/down the docker-compose by&lt;/p&gt;

&lt;p&gt;docker-compose down&lt;/p&gt;

&lt;p&gt;Modify your nginx/conf.d/local.conf [replace YOUR_DOMAIN]&lt;/p&gt;

&lt;p&gt;server {&lt;br&gt;
    listen 80;&lt;br&gt;
    server_name YOUR_DOMAIN;&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;location ~ /.well-known/acme-challenge{
  allow all;
  root /usr/share/nginx/html/letsencrypt;
}

location / {
  return 301 https://YOUR_DOMAIN$request_uri;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;server {&lt;br&gt;
     listen 443 ssl http2;&lt;br&gt;
     server_name YOUR_DOMAIN;&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; ssl on;
 server_tokens off;
 ssl_certificate /etc/nginx/ssl/live/YOUR_DOMAIN/fullchain.pem;
 ssl_certificate_key /etc/nginx/ssl/live/YOUR_DOMAIN/privkey.pem;
 ssl_dhparam /etc/nginx/dhparam/dhparam-2048.pem;

 ssl_buffer_size 8k;
 ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
 ssl_prefer_server_ciphers on;
 ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;

location / {
    proxy_pass http://frontend:3000;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;Now fire up the docker-compose along with your other application containers. Now you can comment out the whole certbot section in the docker-compose.yml file and then run&lt;/p&gt;

&lt;p&gt;docker-compose up --build -d&lt;br&gt;
docker ps&lt;/p&gt;

&lt;p&gt;Now you can run your domain with&lt;br&gt;
https://&lt;/p&gt;

&lt;p&gt;More help here&lt;br&gt;
&lt;a href="https://cloud.google.com/community/tutorials/nginx-reverse-proxy-docker"&gt;https://cloud.google.com/community/tutorials/nginx-reverse-proxy-docker&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;About: I am a Technical Architect and Social Entrepreneur. You can find out more on &lt;a href="https://dhirajpatra.github.io/"&gt;https://dhirajpatra.github.io/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>security</category>
      <category>docker</category>
      <category>ssl</category>
    </item>
    <item>
      <title>How to get started with Pipenv?</title>
      <author>Raghavendra Khare</author>
      <pubDate>Sun, 29 Aug 2021 05:26:46 +0000</pubDate>
      <link>https://dev.to/raghavxk/how-to-get-started-with-pipenv-obl</link>
      <guid>https://dev.to/raghavxk/how-to-get-started-with-pipenv-obl</guid>
      <description>&lt;p&gt;*This blog has been republished from Hashnode blog.&lt;br&gt;
In this blog post I will discuss how to get started with &lt;a href="https://pipenv.pypa.io/en/latest/"&gt;Pipenv&lt;/a&gt; - a python packaging tool. The blog post follows Ubuntu workflow which can be easily replicated in MacOS and Windows. Let's get started.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#what-is-pipenv-"&gt;
  &lt;/a&gt;
  What is &lt;a href="https://pipenv.pypa.io/en/latest/"&gt;Pipenv&lt;/a&gt; ?
&lt;/h3&gt;

&lt;p&gt;Pipenv is  a python packaging tool for Python and an upgrade over using &lt;a href="https://pip.pypa.io/en/stable/"&gt;Pip&lt;/a&gt; , &lt;a href="https://docs.python.org/3/library/venv.html"&gt;Venv&lt;/a&gt; and requirements.txt . Pipenv is a great way to combine package management with virtual environments. &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#why-do-we-need-package-management-and-virtual-environments"&gt;
  &lt;/a&gt;
  Why do we need Package Management and Virtual environments?
&lt;/h3&gt;

&lt;p&gt;According to Wlkipedia ,&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A package manager or package-management system is a collection of software tools that automates the process of installing, upgrading, configuring, and removing computer programs for a computer's operating system in a consistent manner.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A package manager automates the process of installing, uninstalling, maintaining a package. This helps developers easily manage a project's dependencies.&lt;/p&gt;

&lt;p&gt;You can read more about package managers &lt;a href="https://en.wikipedia.org/wiki/Package_manager#Functions"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Now let's discuss virtual environments,&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A virtual environment is a self-contained directory tree that contains a Python installation for a particular version of Python, plus a number of additional packages.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A virtual environment enables us to have a specific unique python installation for each project. This prevents us from overloading the global python installation and enables us to use different versions of python for each project. &lt;br&gt;
A python virtual environment also helps segregate individual dependencies for each project and prevents code from breaking in case if any project was specifically configured to a version of Python.&lt;br&gt;
You can read about virtual environments in detail &lt;a href="https://docs.python.org/3/tutorial/venv.html"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Now, that we understand what are package managers and why we need them let's get started with installation of Pipenv.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#how-to-install-pipenv"&gt;
  &lt;/a&gt;
  How to install Pipenv?
&lt;/h3&gt;

&lt;p&gt;To install pipenv, open a terminal window and run the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ pip install pipenv
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#how-to-create-a-virtual-environment-using-pipenv"&gt;
  &lt;/a&gt;
  How to create a virtual environment using PIpenv?
&lt;/h3&gt;

&lt;p&gt;Navigate into the directory you want to create a virtual environment in and open a terminal window and type the following command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ mkdir my_project
$ cd my_project/
$ pipenv install
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#how-to-start-a-virtual-environment-using-pipenv"&gt;
  &lt;/a&gt;
  How to start a virtual environment using PIpenv?
&lt;/h3&gt;

&lt;p&gt;To start a virtual environment, type the following command while being in the directory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ pipenv shell
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You will see a project name within parenthesis indicating we have successfully entered the required python virtual environment.&lt;/p&gt;

&lt;p&gt;To exit the virtual environment we can type,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ exit
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#how-to-check-the-which-python-installation-is-in-active-use-"&gt;
  &lt;/a&gt;
  How to check the which Python installation is in active use ?
&lt;/h3&gt;

&lt;p&gt;To check which python installation in use we can use the following 3 methods,&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#method-1"&gt;
  &lt;/a&gt;
  Method 1:
&lt;/h4&gt;

&lt;p&gt;While the python shell is active type the following command,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ which python
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will return the path of current python environment in active use.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#method-2"&gt;
  &lt;/a&gt;
  Method 2:
&lt;/h4&gt;

&lt;p&gt;Type this in an active python shell,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ import sys
$ sys.executable
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will return the path of python installation in active use.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#method-3"&gt;
  &lt;/a&gt;
  Method 3:
&lt;/h4&gt;

&lt;p&gt;To find path of executable without activating shell following command can we used :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ pipenv --venv
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#how-to-install-packages-using-pipenv"&gt;
  &lt;/a&gt;
  How to install packages using Pipenv?
&lt;/h3&gt;

&lt;p&gt;Type the following code to install a package usign Pipenv.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ pipenv install &amp;lt;package-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#how-to-run-a-python-command-without-activating-virtual-environment-within-the-current-environment"&gt;
  &lt;/a&gt;
  How to run a Python command without activating virtual environment within the current environment?
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ pipenv run python
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To run a file, use the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ pipenv run  python &amp;lt;file-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#how-to-use-requirementstxt-file-with-pipenv"&gt;
  &lt;/a&gt;
  How to use requirements.txt file with Pipenv?
&lt;/h3&gt;

&lt;p&gt;To install dependencies and packages using pip's requirements.txt , use the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ pipenv install -r &amp;lt;path-of-requirements.txt&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#how-to-create-a-requirementstxt-using-pipenv"&gt;
  &lt;/a&gt;
  How to create a requirements.txt using Pipenv?
&lt;/h3&gt;

&lt;p&gt;Following command can be used to generate the content of requirements.txt :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ pipenv lock -r 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To create a requirements.txt we can redirect this output to our requirements.txt :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ pipenv lock -r &amp;gt; requirements.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#how-to-uninstall-a-package-using-pipenv"&gt;
  &lt;/a&gt;
  How to uninstall a package using Pipenv?
&lt;/h3&gt;

&lt;p&gt;Following command can be used to uninstall a package using pipenv :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ pipenv uninstall &amp;lt;package-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To uninstall all packages use &lt;code&gt;-all&lt;/code&gt; flag.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-remove-a-virtual-environment-using-pipenv"&gt;
  &lt;/a&gt;
  How to remove a virtual environment using Pipenv?
&lt;/h3&gt;

&lt;p&gt;Following command can be used to safely remove a package using pipenv :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ pipenv -rm
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#additional-points-to-know-about-pipenv-"&gt;
  &lt;/a&gt;
  Additional points to know about Pipenv :
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;By default, pipenv install virtual environments at &lt;code&gt;~/.local/share/virtualenvs/&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;To install a package that shouldn't be included in production build we can use &lt;code&gt;--dev&lt;/code&gt; flag at end of install command.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;To check security vulnerabilities in a virtual environment we can use following command :&lt;br&gt;
&lt;code&gt;$ pipenv check&lt;/code&gt; .&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;All dependencies of project can be tracked using following command:&lt;br&gt;
&lt;code&gt;$ pipenv graph&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;




&lt;p&gt;This was first blog on pipenv and I will be writing in detail on pipenv in a few more blogs.&lt;/p&gt;

&lt;p&gt;Do leave a thumbs up if this was helpful.&lt;br&gt;
You can follow me on twitter &lt;a href="https://twitter.com/raghavxk"&gt;@raghavxk&lt;/a&gt; to stay posted about my future blogs.&lt;br&gt;
Thanks for reading!&lt;/p&gt;

</description>
      <category>python</category>
      <category>programming</category>
      <category>beginners</category>
    </item>
  </channel>
</rss>
