<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Python : OS Module </title>
      <author>Anjali Kumawat</author>
      <pubDate>Wed, 10 Nov 2021 18:07:33 +0000</pubDate>
      <link>https://dev.to/anjalikumawat2002/python-os-module-ccb</link>
      <guid>https://dev.to/anjalikumawat2002/python-os-module-ccb</guid>
      <description>&lt;p&gt;The os module is a part of the standard library, or stdlib, within Python 3.&lt;/p&gt;

&lt;p&gt;Python &lt;strong&gt;os&lt;/strong&gt; module provides methods that help us to perform file processing operations. Let‚Äôs explore these basic functions one by one.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-os"&gt;
  &lt;/a&gt;
  Using os
&lt;/h2&gt;

&lt;p&gt;Before you use the os module, you first need to bring it up by means of the Python import command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import os
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you try to run os without importing it, you will see an error message:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;NameError: name 'os' is not defined
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To get a list of functions supported by os module, run the below command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;print(dir(os))
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#files"&gt;
  &lt;/a&gt;
  Files
&lt;/h2&gt;

&lt;p&gt;Some of the methoods of the &lt;strong&gt;os&lt;/strong&gt; module to work with files.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#rename-method-"&gt;
  &lt;/a&gt;
  rename() method :
&lt;/h3&gt;

&lt;p&gt;It is used to rename a file or directory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;os.rename(old_filename,new_filename)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;os.rename(‚Äúfile.txt‚Äù, ‚Äúuser.txt‚Äù)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#remove-method-"&gt;
  &lt;/a&gt;
  remove() method :
&lt;/h3&gt;

&lt;p&gt;It is used to delete the file.&lt;br&gt;
&lt;strong&gt;Path&lt;/strong&gt; : This is a path-like object which represents a file system path. This path-like object is either a string or bytes object.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;os.remove(path_of_file)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;os.remove(‚Äúd1/user.txt‚Äù)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#directories"&gt;
  &lt;/a&gt;
  Directories
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#cwd-"&gt;
  &lt;/a&gt;
  CWD :
&lt;/h3&gt;

&lt;p&gt;CWD == "Current working directory"&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#getcwd-method-"&gt;
  &lt;/a&gt;
  getcwd() method :
&lt;/h3&gt;

&lt;p&gt;returns current directory.&lt;br&gt;
or &lt;br&gt;
To check the path of the current working directory, we will use the getcwd method.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;print(os.getcwd())
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;  The folder where the Python script is running is known as the Current Directory. This is not the path where the Python script is located.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mkdir-method-"&gt;
  &lt;/a&gt;
  mkdir() method :
&lt;/h3&gt;

&lt;p&gt;It is used to create a directory in current directory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;os.mkdir("d1")
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This method raises FileExistsError if the directory to be created already exists.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#chdir-method-"&gt;
  &lt;/a&gt;
  chdir() method :
&lt;/h3&gt;

&lt;p&gt;Suppose, we have a folder, for example, info, inside our current directory, we can switch to the info folder, using the chdir function. or It is used to change the current directory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;os.chdir("info")
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#rmdir-method-"&gt;
  &lt;/a&gt;
  rmdir() method :
&lt;/h3&gt;

&lt;p&gt;It is used to delete a directory. The directory must be empty before it is deleted.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;os.rmdir("dirname")
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#listdir-method-"&gt;
  &lt;/a&gt;
  listdir() method :
&lt;/h3&gt;

&lt;p&gt;Returns a list containing names of files and subdirectories in the specified directory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;print(os.listdir())
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Keep Learning!!&lt;br&gt;
Keep Coding....‚ù§Ô∏èüë©‚Äçüíª&lt;/p&gt;

</description>
      <category>programming</category>
      <category>beginners</category>
      <category>tutorial</category>
      <category>python</category>
    </item>
    <item>
      <title>Listen to the Season 7 Premiere of DevDiscuss: "Deeply Human Stories in Software with The Changelog"</title>
      <author>dev.to staff</author>
      <pubDate>Wed, 10 Nov 2021 17:52:18 +0000</pubDate>
      <link>https://dev.to/devteam/listen-to-the-season-7-premiere-of-devdiscuss-deeply-human-stories-in-software-with-the-changelog-ip1</link>
      <guid>https://dev.to/devteam/listen-to-the-season-7-premiere-of-devdiscuss-deeply-human-stories-in-software-with-the-changelog-ip1</guid>
      <description>&lt;h2&gt;
  &lt;a href="#were-super-excited-to-share-that-season-7-of-the-devdiscuss-podcast-is-finally-here-and-you-can-listen-right-here-on-dev"&gt;
  &lt;/a&gt;
  We're super excited to share that season 7 of the DevDiscuss podcast is finally here ‚Äî and you can listen right here on DEV!
&lt;/h2&gt;


&lt;div class="podcastliquidtag"&gt;
  &lt;div class="podcastliquidtag__info"&gt;
    &lt;a href="/devdiscuss/s7-e1-deeply-human-stories-in-software-with-the-changelog"&gt;
      &lt;h1 class="podcastliquidtag__info__episodetitle"&gt;S7:E1 - Deeply Human Stories in Software with The Changelog&lt;/h1&gt;
    &lt;/a&gt;
    &lt;a href="/devdiscuss"&gt;
      &lt;h2 class="podcastliquidtag__info__podcasttitle"&gt;
        DevDiscuss
      &lt;/h2&gt;
    &lt;/a&gt;
  &lt;/div&gt;
  &lt;div id="record-s7-e1-deeply-human-stories-in-software-with-the-changelog" class="podcastliquidtag__record"&gt;
    &lt;img class="button play-butt" id="play-butt-s7-e1-deeply-human-stories-in-software-with-the-changelog" src="https://res.cloudinary.com/practicaldev/image/fetch/s--1SirfZpJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/playbutt-5e444a2eae28832efea0dec3342ccf28a228b326c47f46700d771801f75d6b88.png" alt="play"&gt;
    &lt;img class="button pause-butt" id="pause-butt-s7-e1-deeply-human-stories-in-software-with-the-changelog" src="https://res.cloudinary.com/practicaldev/image/fetch/s--8YU2a2mP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/pausebutt-bba7cb5f432cfb16510e78835378fa22f45fa6ae52a624f7c9794fefa765c384.png" alt="pause"&gt;
    &lt;img class="podcastliquidtag__podcastimage" id="podcastimage-s7-e1-deeply-human-stories-in-software-with-the-changelog" alt="DevDiscuss" src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZtvK04RF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j-SdIkjZ--/c_fill%2Cf_auto%2Cfl_progressive%2Cq_auto/https://dev-to-uploads.s3.amazonaws.com/uploads/podcast/image/235/08786d8b-7ef4-4c00-bc40-f4b3cbca5834.jpg"&gt;
  &lt;/div&gt;

  &lt;div class="hidden-audio" id="hidden-audio-s7-e1-deeply-human-stories-in-software-with-the-changelog"&gt;
  
    
    Your browser does not support the audio element.
  
  &lt;div id="progressBar" class="audio-player-display"&gt;
    &lt;a href="/devdiscuss/s7-e1-deeply-human-stories-in-software-with-the-changelog"&gt;
      &lt;img id="episode-profile-image" alt="S7:E1 - Deeply Human Stories in Software with The Changelog" width="420" height="420" src="https://res.cloudinary.com/practicaldev/image/fetch/s--zTELFWpP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--otY2jCJh--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_420%2Cq_auto%2Cw_420/https://dev-to-uploads.s3.amazonaws.com/uploads/podcast/image/235/08786d8b-7ef4-4c00-bc40-f4b3cbca5834.jpg"&gt;
      &lt;img id="animated-bars" src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZzrPEFmt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev.to/assets/animated-bars-4e8c57c8b58285fcf7d123680ad8af034cd5cd43b4d9209fe3aab49d1e9d77b3.gif" alt="animated volume bars"&gt;
    &lt;/a&gt;
    &lt;span id="barPlayPause"&gt;
      &lt;img class="butt play-butt" alt="play" src="https://res.cloudinary.com/practicaldev/image/fetch/s--1SirfZpJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/playbutt-5e444a2eae28832efea0dec3342ccf28a228b326c47f46700d771801f75d6b88.png"&gt;
      &lt;img class="butt pause-butt" alt="pause" src="https://res.cloudinary.com/practicaldev/image/fetch/s--8YU2a2mP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/pausebutt-bba7cb5f432cfb16510e78835378fa22f45fa6ae52a624f7c9794fefa765c384.png"&gt;
    &lt;/span&gt;
    &lt;span id="volume"&gt;
      &lt;span id="volumeindicator" class="volume-icon-wrapper showing"&gt;
        &lt;span id="volbutt"&gt;
          &lt;img alt="volume" class="icon-img" height="16" width="16" src="https://res.cloudinary.com/practicaldev/image/fetch/s--vTou7JP3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/volume-cd20707230ae3fc117b02de53c72af742cf7d666007e16e12f7ac11ebd8130a7.png"&gt;
        &lt;/span&gt;
        &lt;span class="range-wrapper"&gt;
          
        &lt;/span&gt;
      &lt;/span&gt;
      &lt;span id="mutebutt" class="volume-icon-wrapper hidden"&gt;
        &lt;img alt="volume-mute" class="icon-img" height="16" width="16" src="https://res.cloudinary.com/practicaldev/image/fetch/s--OX5NjT0t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/volume-mute-8f08ec668105565af8f8394eb18ab63acb386adbe0703afe3748eca8f2ecbf3b.png"&gt;
      &lt;/span&gt;
      &lt;span class="speed" id="speed"&gt;1x&lt;/span&gt;
    &lt;/span&gt;
    &lt;span class="buffer-wrapper" id="bufferwrapper"&gt;
      &lt;span id="buffer"&gt;&lt;/span&gt;
      &lt;span id="progress"&gt;&lt;/span&gt;
      &lt;span id="time"&gt;initializing...&lt;/span&gt;
      &lt;span id="closebutt"&gt;√ó&lt;/span&gt;
    &lt;/span&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;


&lt;p&gt;&lt;em&gt;Quick refresher since it's been a minute ‚Äî DevDiscuss is the first original podcast from DEV all about the burning topics that impact all our lives as developers.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Episode Info&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;In the season premiere, we‚Äôre talking about deeply human stories in software ‚Äî with some pretty fantastic guests from &lt;a href="https://changelog.com/"&gt;The Changelog&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#hosts"&gt;
  &lt;/a&gt;
  Hosts:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a class="mentioned-user" href="https://dev.to/ben"&gt;@ben&lt;/a&gt;
 ‚Äî Creator of DEV &amp;amp; Co-Founder of Forem&lt;/li&gt;
&lt;li&gt;
&lt;a class="mentioned-user" href="https://dev.to/coffeecraftcode"&gt;@coffeecraftcode&lt;/a&gt;
 ‚Äî Developer Advocate at Forem&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#guests"&gt;
  &lt;/a&gt;
  Guests:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://twitter.com/adamstac"&gt;Adam Stacoviak&lt;/a&gt;, Founder and Editor-in-Chief of Changelog Media.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://twitter.com/jerodsanto"&gt;Jerod Santo&lt;/a&gt;, Managing Editor of Changelog Media&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let us know your thoughts on this show in the comments below ‚Äî or on Twitter (&lt;a href="https://twitter.com/thepracticaldev"&gt;@thepracticaldev&lt;/a&gt; ).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Q0zcTd9r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/qZelsWAXfWpAA/giphy.gif%3Fcid%3Decf05e47ddu6jql6tkj8kvdmj4z5ofal65l38f235ruuinlo%26rid%3Dgiphy.gif%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q0zcTd9r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/qZelsWAXfWpAA/giphy.gif%3Fcid%3Decf05e47ddu6jql6tkj8kvdmj4z5ofal65l38f235ruuinlo%26rid%3Dgiphy.gif%26ct%3Dg" alt="Speakers" width="480" height="480"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;em&gt;You can &lt;a href="//dev.to/devdiscuss"&gt;follow DevDiscuss&lt;/a&gt; to get episode notifications and listen right in your feed&lt;/em&gt; ‚Äî or subscribe on your platform of choice! Plus, if you leave us a review, we'll send you a free pack of thank-you stickers. Details &lt;a href="https://airtable.com/shr8oKAIMZgdYnBxx"&gt;here&lt;/a&gt;. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#quick-listening-links"&gt;
  &lt;/a&gt;
  Quick Listening Links
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://podcasts.apple.com/us/podcast/s7-e1-deeply-human-stories-in-software-with-the-changelog/id1513053883?i=1000541361862"&gt;Apple Podcasts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://open.spotify.com/show/4Jae2mPUqx0XnGychucsE4"&gt;Spotify&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://podcasts.google.com/feed/aHR0cHM6Ly9mZWVkcy5kZXZwb2RzLmRldi9kZXZkaXNjdXNzX3BvZGNhc3QueG1s/episode/aHR0cHM6Ly9kZXZwb2RzLmRldi9wb2RjYXN0cy9kZXZkaXNjdXNzLzUw?sa=X&amp;amp;ved=0CAQQkfYCahcKEwjQzIevrY70AhUAAAAAHQAAAAAQCg"&gt;Google&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.listennotes.com/podcasts/devdiscuss/s7e1-deeply-human-stories-in-zND98OeCPQg/"&gt;Listen Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tunein.com/podcasts/Technology-Podcasts/DevDiscuss-p1324596/?topicId=167643015"&gt;TuneIn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://feeds.codenewbie.org/devnews_podcast.xml"&gt;RSS Feed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://devpods.herokuapp.com/podcasts/devdiscuss/episodes/228"&gt;DEV Pods Site&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;em&gt;Acknowledgements&lt;/em&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;a class="mentioned-user" href="https://dev.to/levisharpe"&gt;@levisharpe&lt;/a&gt;
 for producing &amp;amp; mixing the show&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Our season seven sponsors: &lt;a href="https://www.microsoft.com/en-us/dev-community/Event/Register?eventId=DevDiscussPodcast_o7nllI4cp4Vg&amp;amp;ocid=aid3038582"&gt;Microsoft&lt;/a&gt;, &lt;a href="https://developer.newrelic.com/"&gt;New Relic&lt;/a&gt;, &amp;amp; &lt;a href="https://dev.toource=devdiscuss&amp;amp;utm_medium=syndication&amp;amp;utm_campaign=october21"&gt;Vultr&lt;/a&gt;!&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>discuss</category>
      <category>podcast</category>
    </item>
    <item>
      <title>6 Repos github you should marked as web developper!</title>
      <author>CodeOz</author>
      <pubDate>Wed, 10 Nov 2021 17:47:49 +0000</pubDate>
      <link>https://dev.to/codeoz/6-repos-github-you-should-marked-as-web-developper-36eo</link>
      <guid>https://dev.to/codeoz/6-repos-github-you-should-marked-as-web-developper-36eo</guid>
      <description>&lt;p&gt;Today I will share with you some repository Github that will help you to be more efficient for every developper!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#css"&gt;
  &lt;/a&gt;
  üé® CSS
&lt;/h2&gt;

&lt;p&gt;A collection of tips to help take your CSS skills pro.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;a href="https://github.com/AllThingsSmitty/css-protips"&gt;https://github.com/AllThingsSmitty/css-protips&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cheatlists"&gt;
  &lt;/a&gt;
  üìö Cheatlists
&lt;/h2&gt;

&lt;p&gt;Awesome cheatsheets for popular programming languages, frameworks and development tools. They include everything you should know in one single file.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;a href="https://github.com/LeCoupa/awesome-cheatsheets"&gt;https://github.com/LeCoupa/awesome-cheatsheets&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;There is a website that gather all sheets if you prefer: &lt;em&gt;&lt;a href="https://lecoupa.github.io/awesome-cheatsheets/"&gt;https://lecoupa.github.io/awesome-cheatsheets/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#algo"&gt;
  &lt;/a&gt;
  üë®‚Äçüî¨ Algo
&lt;/h2&gt;

&lt;p&gt;This repository contains JavaScript based examples of many popular algorithms and data structures.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;a href="https://github.com/trekhleb/javascript-algorithms"&gt;https://github.com/trekhleb/javascript-algorithms&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#clean-code"&gt;
  &lt;/a&gt;
  üßπ Clean code
&lt;/h2&gt;

&lt;p&gt;Clean code for javascript&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;a href="https://github.com/ryanmcdermott/clean-code-javascript"&gt;https://github.com/ryanmcdermott/clean-code-javascript&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-web-works"&gt;
  &lt;/a&gt;
  üåé How web works
&lt;/h2&gt;

&lt;p&gt;What happens behind the scenes when we type google.com in a browser?&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;a href="https://github.com/vasanthk/how-web-works"&gt;https://github.com/vasanthk/how-web-works&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#free-programming-books"&gt;
  &lt;/a&gt;
  üìñ Free programming books
&lt;/h2&gt;

&lt;p&gt;Get free programming ebooks.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;a href="https://github.com/EbookFoundation/free-programming-books"&gt;https://github.com/EbookFoundation/free-programming-books&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;




&lt;p&gt;I hope you like this reading!&lt;/p&gt;

&lt;p&gt;üéÅ You can get my new book &lt;code&gt;Underrated skills in javascript, make the difference&lt;/code&gt; for FREE if you follow me on &lt;a href="https://twitter.com/code__oz"&gt;Twitter&lt;/a&gt; and MP me üòÅ&lt;/p&gt;

&lt;p&gt;Or get it &lt;a href="https://codeoz.gumroad.com/l/RXLYp"&gt;HERE&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;üá´üá∑ü•ñ For french developper you can check my &lt;a href="https://www.youtube.com/channel/UCC675U1ZUPFASsK9-FjawtA"&gt;YoutubeChannel&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;üéÅ &lt;a href="https://www.getrevue.co/profile/code__oz"&gt;MY NEWSLETTER&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;‚òïÔ∏è You can &lt;a href="https://www.buymeacoffee.com/CodeoZ"&gt;SUPPORT MY WORKS&lt;/a&gt; üôè&lt;/p&gt;

&lt;p&gt;üèÉ‚Äç‚ôÇÔ∏è You can follow me on üëá&lt;/p&gt;

&lt;p&gt;üïä Twitter : &lt;a href="https://twitter.com/code__oz"&gt;https://twitter.com/code__oz&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;üë®‚Äçüíª Github: &lt;a href="https://github.com/Code-Oz"&gt;https://github.com/Code-Oz&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And you can mark üîñ this article!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>codenewbie</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Optimizing fonts for the web</title>
      <author>Cheemz</author>
      <pubDate>Wed, 10 Nov 2021 17:33:43 +0000</pubDate>
      <link>https://dev.to/cheemzkun/optimizing-fonts-for-the-web-2ja5</link>
      <guid>https://dev.to/cheemzkun/optimizing-fonts-for-the-web-2ja5</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;This post was originally published on my blog page at &lt;a href="https://try.catch.wtf/blog/optimizing-fonts-for-the-web"&gt;try.catch.wtf&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Adding fonts to your site can make it look better. And they come with some side effects leading to degraded performance. In this post, I will share how to use fonts without taking away a huge bite of your lighthouse scores üò§.&lt;/p&gt;

&lt;p&gt;But before we jump into it, let's analyze some of these side effects.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Delayed text rendering&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If a web font has not yet loaded, it can delay text rendering. Resulting in delayed First Contentful Paint (FCP) or even delayed Largest Contentful Paint (LCP) in some cases.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Layout shifts&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When fonts are loaded and swapped, they can cause layout shifts. These layout shifts occur when a web font and its fallback font take up different amounts of space on the page.&lt;/p&gt;

&lt;p&gt;What can we do to fix these issues ü§î?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#getting-the-font-ready-to-serve"&gt;
  &lt;/a&gt;
  Getting the font ready to serve
&lt;/h2&gt;

&lt;p&gt;Before we go ahead with anything, let's see how we can optimally serve our font files as fast as possible. If you are using a 3rd party font provider (like Google Fonts), you cannot do much in this case. However, if you are serving the fonts yourself, make sure to serve them (or any static assets) over a CDN and HTTP/2.&lt;/p&gt;

&lt;p&gt;A small font file will always be early to the party ü•≥. Downloading multiple font styles (eg. weight, slant) will also hinder the UX. Wouldn't it be great if we could get away without downloading these other styles of the font and use only 1 font to rule them all üò¨?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#synthetic-weights"&gt;
  &lt;/a&gt;
  Synthetic weights
&lt;/h3&gt;

&lt;p&gt;SHH ü§´! Designers hate this simple trick ü§¨.&lt;/p&gt;

&lt;p&gt;Instead of downloading multiple weights of the same font, we can load a regular variant (400 weight) and rely on the browser to synthetically create other weights. If the browser can create synthetic variants, then why do designers hate this trick? It seems to be working perfectly fine, right?&lt;/p&gt;

&lt;p&gt;In the image below, the red text is the bold variant (500 weight) of &lt;a href="https://indestructibletype.com/Jost.html"&gt;Jost*&lt;/a&gt; font, and the blue text is created synthetically from the regular variant (400 weight). The difference might look subtle, but they can impair the UI and UX.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qOnnDWdP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pug9jmgwwps62vvizo2l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qOnnDWdP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pug9jmgwwps62vvizo2l.png" alt="Jost font synthetic 700 weight vs actual 700 weight" width="548" height="237"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If this doesn't bother you (or your designers), you can go ahead and use synthetic styles.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#variable-fonts"&gt;
  &lt;/a&gt;
  Variable fonts
&lt;/h3&gt;

&lt;p&gt;A variable font has multiple styles like weight, width, slant, optical size, and italics (called axis) of the fonts. The font creator can create several axes, reducing the number of styles you need to download. For this case, we will use the weight axis. If you want to learn more about the other axes or variable fonts, &lt;a href="https://web.dev/variable-fonts/"&gt;web.dev&lt;/a&gt; has a great article on it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9YxmrgnC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nn5a8a9rvodbife2yhgv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9YxmrgnC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nn5a8a9rvodbife2yhgv.png" alt="Jost variable font 700 weight vs actual 700 weight" width="548" height="237"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You can use &lt;a href="https://v-fonts.com/"&gt;Variable Fonts&lt;/a&gt; for finding and trying variable fonts&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#font-subsetting"&gt;
  &lt;/a&gt;
  Font subsetting
&lt;/h3&gt;

&lt;p&gt;Font subsetting is the process of taking a font file and reducing the number of characters (or character sets). For example, let's say you have a font with Japanese characters like &lt;code&gt;Êúà&lt;/code&gt;. You are serving a page that is in English. It is unlikely that you will render Japanese characters. So we can remove them from our font and make a profit!&lt;/p&gt;

&lt;p&gt;Let's subset &lt;code&gt;Jost-400-Book.ttf&lt;/code&gt; (&lt;code&gt;88.7 kb&lt;/code&gt;) from &lt;a href="https://indestructibletype.com/Jost.html"&gt;Jost *&lt;/a&gt; using &lt;a href="https://github.com/zachleat/glyphhanger"&gt;glyphhanger&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# install glyphhanger&lt;/span&gt;
npm i &lt;span class="nt"&gt;-g&lt;/span&gt; glyphhanger

&lt;span class="c"&gt;# install fonttools&lt;/span&gt;
pip &lt;span class="nb"&gt;install &lt;/span&gt;fonttools

&lt;span class="c"&gt;# subsetting Jost-400-Book.ttf font to Latin charset&lt;/span&gt;
glyphhanger &lt;span class="nt"&gt;--LATIN&lt;/span&gt; &lt;span class="nt"&gt;--subset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;Jost-400-Book.ttf
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above script results in a &lt;code&gt;Jost-400-Book-subset.ttf&lt;/code&gt; (&lt;code&gt;40.5 kb&lt;/code&gt;) file. Already a reduction of 54% üò±!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;There are online tools like &lt;a href="https://www.alphabet-type.com/tools/charset-checker"&gt;Charset checker&lt;/a&gt; to check the charset of fonts. You can use this to verify if the subsetted font matches your required charset or not.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#woff2-compression"&gt;
  &lt;/a&gt;
  WOFF2 compression
&lt;/h3&gt;

&lt;p&gt;WOFF2 is a compressed font format that can compress a TTF font.&lt;/p&gt;

&lt;p&gt;Let's use our subset font &lt;code&gt;Jost-400-Book-subset.ttf&lt;/code&gt; (&lt;code&gt;40.5 kb&lt;/code&gt;) file and compress it to woff2.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# clone woff2&lt;/span&gt;
git clone &lt;span class="nt"&gt;--recursive&lt;/span&gt; https://github.com/google/woff2.git

&lt;span class="c"&gt;# enter into the cloned repo&lt;/span&gt;
&lt;span class="nb"&gt;cd &lt;/span&gt;woff2

&lt;span class="c"&gt;# build&lt;/span&gt;
make clean all

&lt;span class="c"&gt;# convert the font&lt;/span&gt;
./woff2_compress ~/Jost-400-Book-subset.ttf
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This results in a &lt;code&gt;Jost-400-Book-subset.woff2&lt;/code&gt; (&lt;code&gt;15.3 kb&lt;/code&gt;) file. A whopping decrease of 62% compared to the subset font (&lt;code&gt;Jost-400-Book-subset.ttf&lt;/code&gt;) and an 82% decrease compared to the original font (&lt;code&gt;Jost-400-Book.ttf&lt;/code&gt;) üò±!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you are using &lt;code&gt;glyphhanger&lt;/code&gt; for font subsetting, you can also compress to woff2 directly in a single command!&lt;/p&gt;

&lt;p&gt;&lt;code&gt;glyphhanger --LATIN --subset=Jost-400-Book.ttf --formats=woff2&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#loading-the-fonts"&gt;
  &lt;/a&gt;
  Loading the fonts
&lt;/h2&gt;

&lt;p&gt;Now that we have reduced the font file size, let's see how we can load the font.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@font-face&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Jost&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;400&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;font-display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;swap&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-style&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;normal&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;src&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sx"&gt;url("/fonts/Jost/Jost-400.woff2")&lt;/span&gt; &lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;"woff2"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.custom-font&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Jost&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This specifies that a font located at &lt;code&gt;/fonts/Jost/Jost-400.woff2&lt;/code&gt;, of &lt;code&gt;woff2&lt;/code&gt; type, with &lt;code&gt;400&lt;/code&gt; weight, and &lt;code&gt;normal&lt;/code&gt; style is referenced as &lt;code&gt;Jost&lt;/code&gt;. Now we can use our font anywhere by setting &lt;code&gt;font-family: Jost;&lt;/code&gt;. Browsers download fonts only if a styling on the page references them. In this case, the browser will only download the Jost font if the page has an element with class &lt;code&gt;.custom-font&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;@font-face&lt;/code&gt; rule changes a bit when loading variable fonts.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@font-face&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Jost&lt;/span&gt; &lt;span class="n"&gt;VF&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;300&lt;/span&gt; &lt;span class="m"&gt;800&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;/* specify weight range of the font */&lt;/span&gt;
  &lt;span class="py"&gt;font-display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;swap&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-style&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;normal&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;src&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sx"&gt;url("/fonts/Jost/Jost-VF.woff2")&lt;/span&gt; &lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;"woff2 supports variations"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="sx"&gt;url("/fonts/Jost/Jost-VF.woff2")&lt;/span&gt;
      &lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;"woff2-variations"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.custom-font&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Jost&lt;/span&gt; &lt;span class="n"&gt;VF&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;font-display&lt;/code&gt; property tells the browser when to render the font once it is loaded. It accepts the following values:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-auto-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;auto&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;This is browser default.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-swap-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;swap&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;The fallback font will be used immediately. Once the custom font downloads, it swaps the font. It can cause 'Flash of Unstyled Text' or &lt;a href="https://css-tricks.com/fout-foit-foft/"&gt;FOUT&lt;/a&gt;. Use &lt;code&gt;swap&lt;/code&gt; only when the font is absolutely necessary. Make sure to deliver the font early enough to prevent layout shifts.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Zk0EUPM2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w1blqs0bq6mabpobsaxb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Zk0EUPM2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w1blqs0bq6mabpobsaxb.png" alt="Timeline" width="880" height="240"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-block-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;block&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;Displays invisible text for a. Once the custom font downloads, it swaps the font. It can cause 'Flash of Invisible Text' or &lt;a href="https://css-tricks.com/fout-foit-foft/"&gt;FOIT&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XMWmOEPy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8zyvz79nb6e2zj1nldr7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XMWmOEPy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8zyvz79nb6e2zj1nldr7.png" alt="Success timeline 1" width="880" height="359"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MHZ6y6Lp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ht2ib9b2fgrrx26etah8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MHZ6y6Lp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ht2ib9b2fgrrx26etah8.png" alt="Success timeline 2" width="880" height="264"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-fallback-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;fallback&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;Blocks rendering for a short time (100ms). If the font is still not downloaded, use the fallback font. Gives a swap period of about 3 seconds for the custom font to load. If it doesn't load within the swap period, it will not be used.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1N9BMiex--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v7pnhddudggjqt4g0rpz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1N9BMiex--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v7pnhddudggjqt4g0rpz.png" alt="Success timeline 1" width="880" height="359"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HDuLsYU9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wh4t7ilkthtpx6n6s5kk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HDuLsYU9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wh4t7ilkthtpx6n6s5kk.png" alt="Success timeline 2" width="880" height="264"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kZIZ6RIQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jyqg67n8x05qr7mrot60.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kZIZ6RIQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jyqg67n8x05qr7mrot60.png" alt="Failure timeline" width="880" height="383"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-optional-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;optional&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;Like &lt;code&gt;fallback&lt;/code&gt;, it blocks for a while and displays the fallback if the custom font is not yet downloaded. But, the browser decides whether to swap the downloaded custom font depending on the connection speed.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#preloading"&gt;
  &lt;/a&gt;
  Preloading?
&lt;/h2&gt;

&lt;p&gt;Sometimes, the absence of fonts can make your page unusable. It might be a no-brainer to load them asap because you know you WILL use them. We can &lt;code&gt;preload&lt;/code&gt; fonts by adding a &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; in the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; with &lt;code&gt;preload&lt;/code&gt; hint. This way, instead of the font to be discovered via stylesheet and downloaded, the browser will download the font at the earliest.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Preloaded resources are cached on the browsers for future requests.&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt;
    &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"preload"&lt;/span&gt;
    &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"/fonts/Jost/Jost-400.woff2"&lt;/span&gt;
    &lt;span class="na"&gt;as=&lt;/span&gt;&lt;span class="s"&gt;"font"&lt;/span&gt;
    &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"font/woff2"&lt;/span&gt;
    &lt;span class="na"&gt;crossorigin&lt;/span&gt;
  &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But this comes at a cost üòî. &lt;code&gt;preload&lt;/code&gt;ing resources might obstruct other critical resources for the page. If at all you end up &lt;code&gt;preload&lt;/code&gt;ing fonts, make sure your longest critical chain is short.&lt;/p&gt;

&lt;p&gt;When loading fonts from a 3rd party origin, you can &lt;code&gt;preconnect&lt;/code&gt; to establish an early connection. Below is an example with Google Fonts.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class="c"&gt;&amp;lt;!-- preconnect origin serving stylesheets --&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"preconnect"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://fonts.googleapis.com"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

  &lt;span class="c"&gt;&amp;lt;!-- preconnect origin serving fonts --&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"preconnect"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://fonts.gstatic.com"&lt;/span&gt; &lt;span class="na"&gt;crossorigin&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

  &lt;span class="c"&gt;&amp;lt;!-- loading stylesheets --&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt;
    &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://fonts.googleapis.com/css2?family=Jost&amp;amp;display=swap"&lt;/span&gt;
    &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt;
  &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note that links with &lt;code&gt;prefetch&lt;/code&gt; and &lt;code&gt;preconnect&lt;/code&gt; hints are executed as the browser sees fit. Whereas &lt;code&gt;preload&lt;/code&gt; is mandatory. Modern web browsers already have good prioritization and do not need &lt;code&gt;preload&lt;/code&gt;s. But if you want some critical resource to be downloaded at the earliest, you can use it sparingly.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;preconnect&lt;/code&gt; for fonts needs a &lt;code&gt;crossorigin&lt;/code&gt; attribute because, unlike stylesheets, font files are served over &lt;a href="https://www.w3.org/TR/css-fonts-3/#font-fetching-requirements"&gt;CORS connection&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;How does all this fix the 2 issues we discussed in the beginning?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Faster text rendering&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A font will render faster if it is downloaded faster. Use variable fonts when needing multiple font styles. Subset and convert fonts to woff2 for the smallest font file size. Serve them over a CDN and HTTP/2 protocol for the fastest and most reliable speeds. &lt;code&gt;preload&lt;/code&gt; fonts when serving them or &lt;code&gt;preconnect&lt;/code&gt; fonts/stylesheets when using 3rd party services. When preloading, make sure your longest critical chain is the smallest possible&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Layout shifts&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If the custom font is not a top priority, use &lt;code&gt;font-display: optional&lt;/code&gt;. This guarantees no layout shifts. But if the custom font is a top priority, use &lt;code&gt;font-display: swap&lt;/code&gt; with the above optimizations for the font delivery.&lt;/p&gt;

&lt;p&gt;Hope you find this post helpful! SA-YO-NA-RA! üëãüòΩ&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>frontend</category>
      <category>performance</category>
    </item>
    <item>
      <title>1 line of code: How to get every even item of an Array</title>
      <author>martin krause</author>
      <pubDate>Wed, 10 Nov 2021 17:17:29 +0000</pubDate>
      <link>https://dev.to/martinkr/1-line-of-code-how-to-get-every-even-item-of-an-array-3pl3</link>
      <guid>https://dev.to/martinkr/1-line-of-code-how-to-get-every-even-item-of-an-array-3pl3</guid>
      <description>&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;evenItems&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Returns an array which contains every even item of the original array.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#the-repository-amp-npm-package"&gt;
  &lt;/a&gt;
  The repository &amp;amp; npm package
&lt;/h2&gt;

&lt;p&gt;You can find the all the utility functions from this series at &lt;a href="https://github.com/martinkr/onelinecode"&gt;github.com/martinkr/onelinecode&lt;/a&gt;&lt;br&gt;
The library is also published to &lt;a href="https://www.npmjs.com/package/@onelinecode/onelinecode"&gt;npm as @onelinecode&lt;/a&gt; for your convenience.&lt;/p&gt;

&lt;p&gt;The code and the npm package will be updated every time I publish a new article.&lt;/p&gt;




&lt;p&gt;Happy coding and consider to &lt;a href="https://www.buymeacoffee.com/martinkr"&gt;buy me a coffee&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@zoo_monkey"&gt;zoo_monkey&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/fuji"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;




</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>performance</category>
      <category>codequality</category>
    </item>
    <item>
      <title>Review: Eddie Jaoude Course - How to customize your GitHub Profile</title>
      <author>Michael J. Larocca</author>
      <pubDate>Wed, 10 Nov 2021 17:07:37 +0000</pubDate>
      <link>https://dev.to/michaellarocca/review-eddie-jaoude-course-how-to-customize-your-github-profile-35cl</link>
      <guid>https://dev.to/michaellarocca/review-eddie-jaoude-course-how-to-customize-your-github-profile-35cl</guid>
      <description>&lt;h3&gt;
  &lt;a href="#we-spent-a-lot-of-time-on-github-participating-in-hacktoberfest-2021-but-did-you-know-you-can-customize-your-github-profile-in-this-article-eddie-jaoude-shows-us-how-to-make-our-profiles-stand-out"&gt;
  &lt;/a&gt;
  We spent a lot of time on GitHub participating in Hacktoberfest 2021. But did you know you can customize your GitHub profile? In this article, Eddie Jaoude shows us how to make our profiles stand out!
&lt;/h3&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--B5KN89ll--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://selftaughttxg.com/static/7791abdde88d00fbc0411645ff9b82cb/1cfc2/Thumbnail-GitHubProfieCourse-02.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B5KN89ll--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://selftaughttxg.com/static/7791abdde88d00fbc0411645ff9b82cb/1cfc2/Thumbnail-GitHubProfieCourse-02.png" alt="GitHub Profile Course" width="880" height="422"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#about-eddie-jaoude"&gt;
  &lt;/a&gt;
  About Eddie Jaoude
&lt;/h3&gt;

&lt;p&gt;Eddie Jaoude is a full-stack developer and an advocate for open-source.&lt;br&gt;
He is also the founder of the &lt;a href="https://github.com/EddieHubCommunity"&gt;Eddie Hub Community&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Recognizing his contributions and influence in the open-source community, Eddie was nominated as a &lt;a href="https://stars.github.com/profiles/eddiejaoude/"&gt;GitHub Star&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.blog/2020-09-03-introducing-the-github-stars-program/"&gt;Introducing the GitHub Stars Program ‚≠êÔ∏è&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LfpHtGfK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://selftaughttxg.com/static/8ce943d14c53d6c1948d832a3ae829a4/6c115/Hubber-new.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LfpHtGfK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://selftaughttxg.com/static/8ce943d14c53d6c1948d832a3ae829a4/6c115/Hubber-new.png" alt="Hubber" width="353" height="200"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#meet-hubber-eddiehubs-mascot"&gt;
  &lt;/a&gt;
  &lt;em&gt;Meet Hubber! EddieHub's Mascot! ü§ù&lt;/em&gt;
&lt;/h4&gt;


&lt;h3&gt;
  &lt;a href="#why-you-should-customize-your-github-profile"&gt;
  &lt;/a&gt;
  Why you should customize your GitHub Profile
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Eddie tells us, GitHub has turned into a social platform. With over 55 million users, it is in our best interest to customize our profiles to help us stand out from the crowd.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Not only does our GitHub profile showcase our portfolio, skills, and contributions, our portfolio can also present our other content, such as Youtube videos, blog posts, and more!&lt;/p&gt;

&lt;p&gt;To give us examples of what a customized GitHub profile can look like, Eddie provides us with a link to &lt;a href="https://github.com/EddieHubCommunity/awesome-github-profiles"&gt;Awesome GitHub profiles&lt;/a&gt;, which is part of his &lt;a href="https://github.com/EddieHubCommunity"&gt;EddieHubCommunity&lt;/a&gt;.&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;Eddie Tips: Create a GitHub username as close as you can to your actual name. Doing so will make it easier for others to discover you from other platforms.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#here-is-my-current-github-profile-before-any-changes"&gt;
  &lt;/a&gt;
  Here is my current GitHub profile before any changes
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Rg37xjCZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://selftaughttxg.com/static/de7c7d4c41f48d11186eb1a7731fd687/1cfc2/GitHub-Profile-Before.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rg37xjCZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://selftaughttxg.com/static/de7c7d4c41f48d11186eb1a7731fd687/1cfc2/GitHub-Profile-Before.png" alt="GitHub Profile Before" width="880" height="434"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#to-customize-your-github-profile"&gt;
  &lt;/a&gt;
  To customize your GitHub Profile
&lt;/h3&gt;

&lt;p&gt;Eddie's course provides instructions on creating a GitHub account if you have not already set one up. As I already have a GitHub account, I will skip to first step of creating it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;To customize your GitHub Profile, you first need to create a new repository. The newly created repository needs to be the same name as your GitHub username.&lt;/strong&gt;&lt;/p&gt;



&lt;p&gt;&lt;em&gt;Eddie provided step-by-step instructions that I will follow now.&lt;/em&gt;&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#create-a-new-repository"&gt;
  &lt;/a&gt;
  Create a new repository
&lt;/h3&gt;

&lt;p&gt;The first step is to create a new repository in our GitHub account by clicking the plus symbol, located at the top right, and then click New Repository.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pqMQPi8N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://selftaughttxg.com/static/4ba562816b6ec437a36ca0b6adb23972/5fce1/New-Repo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pqMQPi8N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://selftaughttxg.com/static/4ba562816b6ec437a36ca0b6adb23972/5fce1/New-Repo.png" alt="New Repo" width="271" height="227"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#the-next-step-is-to-name-the-repository"&gt;
  &lt;/a&gt;
  The next step is to name the repository
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt; You need to use your GitHub user name as the name for this repository. ( &lt;strong&gt;Owner&lt;/strong&gt; must match &lt;strong&gt;Repository Name&lt;/strong&gt; )&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;You will know you did it correctly when a special message appears! Make sure to follow the instructions in the special message next.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Wx84OTgT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://selftaughttxg.com/static/2da0fa83532e3d046ced530bfc5bcc63/c67d4/Name-New-Repo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wx84OTgT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://selftaughttxg.com/static/2da0fa83532e3d046ced530bfc5bcc63/c67d4/Name-New-Repo.png" alt="Name New Repo" width="723" height="855"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;Special message instructions&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Make sure Public is selected&lt;/li&gt;
&lt;li&gt;Click the Add a README file&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After naming the repository and following the special message instructions, click "&lt;strong&gt;Create repository&lt;/strong&gt;."&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#your-new-repository"&gt;
  &lt;/a&gt;
  Your New Repository
&lt;/h3&gt;

&lt;p&gt;You will be taken to your new repository after clicking "&lt;strong&gt;Create repository&lt;/strong&gt;."&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6cnVHz-h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://selftaughttxg.com/static/9e2f0cce97df9211f41b880c87cacacd/1cfc2/Your-New-Repo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6cnVHz-h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://selftaughttxg.com/static/9e2f0cce97df9211f41b880c87cacacd/1cfc2/Your-New-Repo.png" alt="Your New Repo" width="880" height="323"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Your new repository is a special Markdown file that will appear on your profile page on GitHub.&lt;/strong&gt;&lt;/p&gt;



&lt;p&gt;To edit this special Markdown file, click on the edit button that resembles a pencil.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qdW1jYUQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://selftaughttxg.com/static/885b1324ba0359169f8143cd222fd12d/1cfc2/Your-New-Repo-MD-file.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qdW1jYUQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://selftaughttxg.com/static/885b1324ba0359169f8143cd222fd12d/1cfc2/Your-New-Repo-MD-file.png" alt="Your New Repo Markdown file" width="880" height="337"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Feel free to make changes to the file by following the suggested ideas to get you started.&lt;/p&gt;

&lt;p&gt;Click on the &lt;strong&gt;Preview&lt;/strong&gt; tab to see the results of your changes, and then click the &lt;strong&gt;Commit changes&lt;/strong&gt; button when you are satisfied.&lt;/p&gt;



&lt;p&gt;&lt;em&gt;Here are the changes I made:&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight markdown"&gt;&lt;code&gt;&lt;span class="gu"&gt;### üëã Hello, I'm Michael, a self-taught web developer &amp;amp; blogger.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt; In order to commit your changes, you will need to make changes to the special Markdown. The &lt;strong&gt;Commit changes&lt;/strong&gt; button is inactive until changes are made to the file.&lt;/p&gt;




&lt;p&gt;Eddie's course also teaches you how to write in the &lt;a href="https://en.wikipedia.org/wiki/Markdown"&gt;Markdown&lt;/a&gt; language, which is needed to customize your GitHub profile.&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;&lt;em&gt;To learn more about writing Markdown files, you can read my article: &lt;a href="https://dev.to/michaellarocca/learn-markdown-with-scrimba-dylan-israel-24ng"&gt;Learn Markdown, With Scrimba &amp;amp; Dylan Israel!&lt;/a&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#your-profile-page"&gt;
  &lt;/a&gt;
  Your Profile Page
&lt;/h3&gt;

&lt;p&gt;You will now see your new special Markdown file/repository displayed at the top of your profile page.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NJ4Oea0S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://selftaughttxg.com/static/a1aac1ccce45a8cfd86d8e27071daefa/1cfc2/Profile-After.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NJ4Oea0S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://selftaughttxg.com/static/a1aac1ccce45a8cfd86d8e27071daefa/1cfc2/Profile-After.png" alt="Profile After" width="880" height="388"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#eddies-invitation"&gt;
  &lt;/a&gt;
  Eddie's invitation
&lt;/h3&gt;

&lt;p&gt;At this point in Eddie's free "&lt;strong&gt;&lt;a href="https://www.eddiejaoude.io/portal"&gt;How to customize your GitHub Profile&lt;/a&gt;&lt;/strong&gt;" course, he invites us to take a screenshot of our new profile so far and share it on social media. He instructs us to list two tips we learned and tag him ( &lt;strong&gt;&lt;a class="mentioned-user" href="https://dev.to/eddiejaoude"&gt;@eddiejaoude&lt;/a&gt;
&lt;/strong&gt; ) so that he can re-share them on his network!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Steps&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Write about yourself&lt;/li&gt;
&lt;li&gt;Add images/photos&lt;/li&gt;
&lt;li&gt;Share on your social media&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ylmnIW71--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://selftaughttxg.com/static/c474fff8719ce83a30f54b24077f860b/1cfc2/My-profile-so-far.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ylmnIW71--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://selftaughttxg.com/static/c474fff8719ce83a30f54b24077f860b/1cfc2/My-profile-so-far.png" alt="Profile so far" width="880" height="390"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;&lt;em&gt;Eddie did share my tweet. I received positive feedback from the community and gained a few new Twitter followers along the way!&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#widgets"&gt;
  &lt;/a&gt;
  Widgets
&lt;/h3&gt;

&lt;p&gt;Your special GitHub Markdown file that is used to create your custom profile supports Widgets.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A Widget is a reusable component that allows you to perform a function and access a service.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Eddie's course provides us with a Widget that you can easily implement with one line of the following HTML code.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;( Just replace my GitHub username with your GitHub username ) Replace "michaellarocca" with your username.&lt;/em&gt;&lt;/p&gt;






&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://github-readme-stats.vercel.app/api?username=michaellarocca&amp;amp;show_icons=true&amp;amp;theme=tokyonight"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;&lt;strong&gt;This Widget, created by &lt;a href="https://github.com/anuraghazra"&gt;Anurag Hazara&lt;/a&gt;, is used to display your current GitHub stats.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Here is the README file for the Widget: &lt;a href="https://github.com/anuraghazra/github-readme-stats"&gt;https://github.com/anuraghazra/github-readme-stats&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cC53r5IC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://selftaughttxg.com/static/4f29332a5ec2a37d0bbbec0faac5a52f/2d7ab/Widget-GitHub-Stats.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cC53r5IC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://selftaughttxg.com/static/4f29332a5ec2a37d0bbbec0faac5a52f/2d7ab/Widget-GitHub-Stats.png" alt="Widget GitHub Stats" width="526" height="216"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#github-actions"&gt;
  &lt;/a&gt;
  GitHub Actions
&lt;/h3&gt;

&lt;p&gt;Similar to Widgets, you can also use GitHub Actions to customize your profile.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;GitHub describes,&lt;/strong&gt; &lt;em&gt;"GitHub Actions makes it easy to automate all your software workflows, now with world-class CI/CD. Build, test, and deploy your code right from GitHub. Make code reviews, branch management, and issue triaging work the way you want."&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Here is a link to the GitHub Actions Marketplace&lt;/strong&gt; &lt;a href="https://github.com/marketplace?category=&amp;amp;query=&amp;amp;type=actions&amp;amp;verification="&gt;https://github.com/features/actions&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;em&gt;I found a GitHub Action I'm particularly interested in; it creates a list of your latest Hashnode articles!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/marketplace/actions/hashnode-blog"&gt;Hashnode Blogs - Github Action&lt;/a&gt;, created by: &lt;a href="https://github.com/varunsridharan"&gt;Varun Sridharan&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;Eddie mentions during his course that some of the GitHub profile customizations are beyond the scope of the course. I now understand why.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To implement the "&lt;strong&gt;Hashnode Blogs - Github Action&lt;/strong&gt;," you need to learn how to create Github Action's and work with YAML files ( which I have not learned yet ). Now is a good time for me to learn, as I want to display my latest Hashnode blogs on my GitHub profile.&lt;/p&gt;




&lt;p&gt;&lt;em&gt;Eddie encourages us to make small adjustments to our GitHub profiles. Even a few small adjustments will help our profiles to stand out. As we continue to learn, we can continue to make more changes to our GitHub profiles later.&lt;/em&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#my-new-github-profile"&gt;
  &lt;/a&gt;
  My new GitHub profile
&lt;/h3&gt;

&lt;p&gt;Here is my finished GitHub profile!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m4hxBIhn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://selftaughttxg.com/static/91b1fcb435677a643f3c5fa64b298a89/1cfc2/GitHub-Profile-Finished.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m4hxBIhn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://selftaughttxg.com/static/91b1fcb435677a643f3c5fa64b298a89/1cfc2/GitHub-Profile-Finished.png" alt="GitHub Profile Finished" width="880" height="435"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;With a few simple adjustments, my GitHub profile will now stand out from the crowd!&lt;/strong&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#txg-review-results"&gt;
  &lt;/a&gt;
  TXG Review Results:
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;5 out of 5 Stars!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;"‚≠ê ‚≠ê ‚≠ê ‚≠ê ‚≠ê"&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#eddie-jaoudes-how-to-customize-your-github-profile-is-a-must-take-free-course"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;"Eddie Jaoude's 'How to customize your GitHub Profile' is a MUST TAKE free course!"&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;-Michael Jude Larocca&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h3&gt;
  &lt;a href="#eddies-links"&gt;
  &lt;/a&gt;
  Eddie's links
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;üîó&lt;a href="https://www.eddiejaoude.io/"&gt;Website: eddiejaoude&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;üîó&lt;a href="https://github.com/eddiejaoude"&gt;GitHub: eddiejaoude&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;üîó&lt;a href="https://github.com/EddieHubCommunity"&gt;EddieHubCommunity&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;üîó&lt;a href="https://www.youtube.com/c/eddiejaoude"&gt;YouTube: eddiejaoude&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;üîó&lt;a href="https://twitter.com/eddiejaoude"&gt;Twitter: eddiejaoude&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;With over 55 million users, not only is GitHub a provider of internet hosting for software development and version control, it has turned into a social platform, and it is in our best interest to customize our profiles to help us stand out from the crowd.&lt;/p&gt;

&lt;p&gt;Eddie's FREE "How to customize your GitHub Profile" course is so well put together that a complete beginner will be able to customize their profile, helping them to stand out from the crowd before they even learn version control! &lt;/p&gt;

&lt;p&gt;Eddie also teaches Markdown language in his course, which is required to customize a GitHub Profile. Furthermore, Markdown language is also an essential skill for developers to learn for other means, such as writing blog articles like the one you are reading!&lt;/p&gt;




&lt;h6&gt;
  &lt;a href="#are-you-now-interested-in-customizing-your-github-profile-have-you-already-customized-your-github-profile-with-widgets-and-github-actions-please-share-the-article-and-comment"&gt;
  &lt;/a&gt;
  Are you now interested in customizing your GitHub profile? Have you already customized your GitHub profile with widgets and GitHub Actions? Please share the article and comment!
&lt;/h6&gt;




</description>
      <category>opensource</category>
      <category>tutorial</category>
      <category>github</category>
      <category>markdown</category>
    </item>
    <item>
      <title>How To Display Low Stock Warning In WooCommerce</title>
      <author>CodeWatchers</author>
      <pubDate>Wed, 10 Nov 2021 17:01:42 +0000</pubDate>
      <link>https://dev.to/codewatchers_en/how-to-display-low-stock-warning-in-woocommerce-4i47</link>
      <guid>https://dev.to/codewatchers_en/how-to-display-low-stock-warning-in-woocommerce-4i47</guid>
      <description>&lt;p&gt;Showing a low stock alert on your online store creates urgency and demand for your product. The consumer feels as if the product is amazing and has been sold enough times that it is now about to end.&lt;/p&gt;

&lt;p&gt;It is a proven way of boosting your sales and that is why almost every other online store uses this technique to push their consumers further into buying their product.&lt;/p&gt;

&lt;p&gt;In this tutorial, we will help you understand the benefits of &lt;strong&gt;Low Stock Warning&lt;/strong&gt; and the way of enabling it on your WooCommerce store.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#why-should-you-display-low-stock-warnings" class="anchor"&gt;
  &lt;/a&gt;
  Why Should You Display Low Stock Warnings
&lt;/h2&gt;

&lt;p&gt;Online stores have been using this technique for a while now to increase their conversions. Even the biggest of online stores such as &lt;strong&gt;Amazon&lt;/strong&gt;, use this technique to increase their sales.&lt;/p&gt;

&lt;p&gt;These low stock alerts appear as a popup on your website alerting the users that the product is about to end and they should buy it as soon as possible.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uYdcwpdh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2021/02/Amazon-Low-Stock-Alerrt.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uYdcwpdh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2021/02/Amazon-Low-Stock-Alerrt.jpg" alt="" width="484" height="123"&gt;&lt;/a&gt;It is proven that Low Stock Warnings can boost your sales up to 15% and that is exactly why you should start using them now.&lt;/p&gt;

&lt;p&gt;These type of popups trigger human behaviour by displaying scarcity and creating urgency, both of which demand the consumer to act.&lt;/p&gt;

&lt;p&gt;By creating &lt;strong&gt;urgency&lt;/strong&gt;, you demand your consumer to speed up their decision making. You make them feel that the product they want to buy is not going to be there for long and they need to be quick and decisive in hitting the &lt;strong&gt;Buy Now&lt;/strong&gt; button.&lt;/p&gt;

&lt;p&gt;Simultaneously, &lt;strong&gt;scarcity&lt;/strong&gt; implements that the product they want to buy is short in supply and if they don't buy it now, they might not be able to buy it afterwards.&lt;/p&gt;

&lt;p&gt;Both of these scenarios blend in to urge the consumer in taking a positive decision and hence, help you increase your sales.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#how-to-display-low-stock-warnings-in-woocommerce" class="anchor"&gt;
  &lt;/a&gt;
  How To Display Low Stock Warnings In WooCommerce
&lt;/h2&gt;

&lt;p&gt;Now that you know why is it important to display Low Stock Warnings on your Online store. Let us help you in the process of enabling it.&lt;/p&gt;

&lt;p&gt;We will be using the &lt;strong&gt;&lt;a href="https://trustpulse.com/"&gt;Trust Pulse&lt;/a&gt;&lt;/strong&gt; plugin to display Low Stock alerts.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#trust-pulse" class="anchor"&gt;
  &lt;/a&gt;
  &lt;a href="https://trustpulse.com/"&gt;Trust Pulse&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZVZ9jeE1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2021/02/Trust-Pulse.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZVZ9jeE1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2021/02/Trust-Pulse.jpg" alt="" width="880" height="332"&gt;&lt;/a&gt;&lt;a href="https://trustpulse.com/"&gt;Trust Pulse&lt;/a&gt; is a very popular tool to help you build Low Stock alerts for your website. It is very simple to use and you don't have to worry about your coding skills.&lt;/p&gt;

&lt;p&gt;With &lt;strong&gt;Trust Pulse,&lt;/strong&gt; you can create Low Stock warnings with some simple tweaks here and there, without using any codes. It is highly user-friendly and can be connected to WooCommerce easily.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://trustpulse.com/"&gt;Details&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://trustpulse.com/"&gt;Demo&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://codewatchers.com/aff/hostings/go"&gt;Hosting&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;First of all, you will need to create an account on Trust Pulse as it is a premium plugin.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Mpl45Udg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2021/02/Trust-Pulse-pricing.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Mpl45Udg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2021/02/Trust-Pulse-pricing.jpg" alt="" width="880" height="332"&gt;&lt;/a&gt;Once you have created your account, you need to &lt;strong&gt;Sign in&lt;/strong&gt; and press &lt;strong&gt;Create Campaign&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6urDtZyg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2021/02/Create-Campaign.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6urDtZyg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2021/02/Create-Campaign.jpg" alt="" width="744" height="159"&gt;&lt;/a&gt;Then, you need to name your campaign and &lt;strong&gt;connect it to the website you used while signing up.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y7qRb-7b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2021/02/Name-your-campaign.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y7qRb-7b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2021/02/Name-your-campaign.jpg" alt="" width="734" height="302"&gt;&lt;/a&gt;&lt;strong&gt;Trust Pulse&lt;/strong&gt; allows you to create two types of notifications i.e. &lt;strong&gt;Recent Activity&lt;/strong&gt; and &lt;strong&gt;On-Fire.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Recent Activity&lt;/strong&gt; alerts the visitor whenever someone takes an action on your website.&lt;br&gt;&lt;br&gt;
&lt;strong&gt;On-Fire&lt;/strong&gt; combines all the actions taken on your site and displays them together.&lt;/p&gt;

&lt;p&gt;For this tutorial, you need to go with the &lt;strong&gt;Recent Activity&lt;/strong&gt; option.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zLqdGZ_O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2021/02/Select-Campaign-Type.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zLqdGZ_O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2021/02/Select-Campaign-Type.jpg" alt="" width="744" height="442"&gt;&lt;/a&gt;Select &lt;strong&gt;Recent Activity&lt;/strong&gt; and press &lt;strong&gt;Next Step&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Next, you will need to design your &lt;strong&gt;Low Stock Notification&lt;/strong&gt; and you can move ahead by enabling &lt;strong&gt;Display a Default Notification&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z_L0LS9s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2021/02/Enable-Display-Default-Notificiation.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z_L0LS9s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2021/02/Enable-Display-Default-Notificiation.jpg" alt="" width="742" height="240"&gt;&lt;/a&gt;Now, you can &lt;strong&gt;Customize&lt;/strong&gt; your &lt;strong&gt;Low Stock&lt;/strong&gt; &lt;strong&gt;Alert&lt;/strong&gt; by selecting options from the &lt;strong&gt;Drop-Down Menu&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Qjd1f17W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2021/02/Customize-Notification.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Qjd1f17W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2021/02/Customize-Notification.jpg" alt="" width="717" height="427"&gt;&lt;/a&gt;&lt;strong&gt;Title Text&lt;/strong&gt; will be the title of your notification.&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Message Text&lt;/strong&gt; refers to the body of your popup.&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Notification Image&lt;/strong&gt; serves as the image you want to display on the popup.&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Message Link&lt;/strong&gt; will be the page where your users will be directed when they press the notification.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codewatchers.com/en/blog/how-to-display-low-stock-warning-in-woocommerce?utm_campaign=content-trimming&amp;amp;utm_source=dev.to&amp;amp;utm_medium=link"&gt;Read The Full Tutorial.&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Getting Started with Decorators in Python</title>
      <author>Adarsh Rawat</author>
      <pubDate>Wed, 10 Nov 2021 16:55:18 +0000</pubDate>
      <link>https://dev.to/adarshrawat7400/getting-started-with-decorators-in-python-4kpi</link>
      <guid>https://dev.to/adarshrawat7400/getting-started-with-decorators-in-python-4kpi</guid>
      <description>&lt;p&gt;To get started with Decorators , First we have to understand few things :-&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;everything we see in python is an object.&lt;/li&gt;
&lt;li&gt;function in python is also an object.&lt;/li&gt;
&lt;li&gt;we can declare function within a function.&lt;/li&gt;
&lt;li&gt;we these inner function have access to local variables in th e enclosing function. &lt;/li&gt;
&lt;li&gt;a function can return any value, including a function&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;to understand the above point let us take an example&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#example-"&gt;
  &lt;/a&gt;
  Example :-
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; def hello(name):
...     return f"Hello {name}"
...
&amp;gt;&amp;gt;&amp;gt; a = hello
&amp;gt;&amp;gt;&amp;gt; # as we can see variable a referencing to a function object
&amp;gt;&amp;gt;&amp;gt; a("Ram")
'Hello Ram'
&amp;gt;&amp;gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;with the above example we can,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;functions are objects &lt;/li&gt;
&lt;li&gt;they can be assigned/reference by other name ,such as variable &lt;em&gt;a&lt;/em&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;let's take another example to clear other remaining &lt;br&gt;
points&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; def foo(name):
...     def bar():
...             print(f"Hey I'm the inner function bar enclosed inside foo function , {name}")
...     return bar
...
&amp;gt;&amp;gt;&amp;gt; f = foo("Ram")
&amp;gt;&amp;gt;&amp;gt; f.__name__
'bar'
&amp;gt;&amp;gt;&amp;gt; type(f)
&amp;lt;class 'function'&amp;gt;
&amp;gt;&amp;gt;&amp;gt; f()
Hey I'm the inner function bar enclosed inside foo function , Ram
&amp;gt;&amp;gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above example we have declared a function &lt;em&gt;foo&lt;/em&gt; which contains another function &lt;em&gt;bar&lt;/em&gt;, and when we called the outer function &lt;em&gt;foo&lt;/em&gt; we get back reference to &lt;em&gt;bar&lt;/em&gt; function object,&lt;br&gt;
we also verified the same by,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;checking &lt;em&gt;f.&lt;strong&gt;name&lt;/strong&gt;&lt;/em&gt; attribute which return name of the function&lt;/li&gt;
&lt;li&gt;&lt;p&gt;checked &lt;em&gt;type(f)&lt;/em&gt; to see that it is of type &lt;em&gt;function&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Inner function &lt;em&gt;bar&lt;/em&gt; has access to  all varibles of enclosing function like variable &lt;em&gt;name&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The concepts that we have covered in the above example&lt;br&gt;
will help in the understanding of Decorators&lt;/p&gt;

&lt;p&gt;Now we see some examples of special type of decorator&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#function-wrapper"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Function Wrapper&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Wrappers around the functions are also knows as decorators which are a very powerful and useful tool in Python since it allows programmers to modify the behavior of function or class.&lt;/p&gt;

&lt;p&gt;Let's understand with an example&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#example-"&gt;
  &lt;/a&gt;
  Example :-
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;lines = '-' * 60 + '\n'

def with_lines(func):
    def wrapper():
        return f'{lines}{func()}{lines}'
    return wrapper

def a():
    return f'I am in a!\n'
new_a = with_lines(a)


def b():
    return f'I am in b!\n'
new_b = with_lines(b)

print(a())
print(b())
print(new_a())
print(new_b())

Output :-
I am in a!

I am in b!

------------------------------------------------------------
I am in a!
------------------------------------------------------------

-----------------------------------------------------------------
I am in b!
-----------------------------------------------------------------


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above example we created a &lt;em&gt;with_lines&lt;/em&gt; function which takes &lt;em&gt;func&lt;/em&gt; (callable object ) as and argument and &lt;em&gt;with_lines&lt;/em&gt; function has an inner function &lt;em&gt;wrapper&lt;/em&gt;&lt;br&gt;
which has access to the outer function variable, &lt;br&gt;
So we call the function passed by outer function inside the &lt;strong&gt;wrapper&lt;/strong&gt; function by adding &lt;em&gt;global varible&lt;/em&gt; lines at the start and end and return wrapper function object.&lt;/p&gt;

&lt;p&gt;With this now we have a &lt;em&gt;with_lines&lt;/em&gt; function wrapper which can we used with any function to change behiviour of the function,&lt;/p&gt;

&lt;p&gt;As we used it with  &lt;em&gt;new_a&lt;/em&gt; and &lt;em&gt;new_b&lt;/em&gt; functions that have some formating added to them using &lt;em&gt;with_lines&lt;/em&gt; wrapper function.&lt;/p&gt;

&lt;p&gt;Wrapper are one of the most powerful tools of python which can we used to change or added some extra behiviour to the existing function.&lt;/p&gt;

&lt;p&gt;Now we have gathered enough information to understand &lt;em&gt;Decorators&lt;/em&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-a-decorator"&gt;
  &lt;/a&gt;
  What is a Decorator?
&lt;/h3&gt;

&lt;p&gt;In simple terms :-&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A function&lt;/li&gt;
&lt;li&gt;that takes function as an argument &lt;/li&gt;
&lt;li&gt;and return a function as its output&lt;/li&gt;
&lt;li&gt;Because of the &lt;strong&gt;@&lt;/strong&gt; syntax in Python, decorating a function replaces that function with the result of calling the decorator on the function.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#what-can-i-use-a-decorator-for"&gt;
  &lt;/a&gt;
  What can I use a Decorator For?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Anything that is repeated across multiple functions&lt;/li&gt;
&lt;li&gt;Grab / modify / filter input arguments&lt;/li&gt;
&lt;li&gt;Grab / modify / filter outputs&lt;/li&gt;
&lt;li&gt;Change the state&lt;/li&gt;
&lt;li&gt;Stop a function from being called under certain conditions&lt;/li&gt;
&lt;li&gt;Choose a different function to be called instead&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now we will understand decorators with couple of examples&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#example-"&gt;
  &lt;/a&gt;
  Example :-
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;lines = '-' * 60 + '\n'

def with_lines(func):
    def wrapper(*args, **kwargs):
        return f'{lines}{func(*args, **kwargs)}{lines}'
    return wrapper

@with_lines
def a():
    return f'I am in a!\n'
# a = with_lines(a)   # this line (after) is the same as @with_lines (before)


@with_lines
def b():
    return f'I am in b!\n'
# b = with_lines(b)  # this line (after) is the same as line 14

@with_lines
def add(x, y):
    return f'{x} + {y} = {x+y}\n'

print(a())
print(b())
print(add(3,5))  # add is actually wrapper! so when I call add(3,5), it's saying wrapper(3,5)

OUTPUT :- 

-----------------------------------------------------------------
I am in a!
-----------------------------------------------------------------

-----------------------------------------------------------------
I am in b!
-----------------------------------------------------------------

-----------------------------------------------------------------
3 + 5 = 8
-----------------------------------------------------------------

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Using the same &lt;em&gt;with_lines&lt;/em&gt; wrapper function used in the above example we added this decorator with the existing method &lt;em&gt;a()&lt;/em&gt; ,&lt;em&gt;b()&lt;/em&gt; and &lt;em&gt;add()&lt;/em&gt; method using using &lt;strong&gt;@&lt;/strong&gt; Symbol which replaces that function with the result of calling the decorator on the function.&lt;/p&gt;

&lt;p&gt;Let's take another example to see how we can filter the input using decorator :-&lt;br&gt;
We have given a list of int from which we have to all numbers which are only even, let's see how we can do it using &lt;em&gt;decorator&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#example-"&gt;
  &lt;/a&gt;
  Example :-
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;

# Wrapper that filter even from list of ints
def only_evens(func):
    def wrapper(*args):
        even_numbers = [num for num in args if num % 2 == 0]
        print("\n\nWrapper added")
        print(f"even numbers {even_numbers}")
        result = f"sum of even numbers :- {func(*even_numbers)}"
        return result

    return wrapper



def add_nums(*numbers):
    sum = 0
    for num in numbers:
        sum += num
    return sum


print("Original add_nums function output :-",add_nums(1,2,3,4,5,6,7,8,9,10))

@only_evens
def add_nums(*numbers):
    sum = 0
    for num in numbers:
        sum += num
    return sum


print("Original add_nums function output :-",add_nums(1,2,3,4,5,6,7,8,9,10))

Output :-
Original add_nums function output :- 55


Wrapper added
even numbers [2, 4, 6, 8, 10]
Original add_nums function output :- sum of even numbers :- 30

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above example &lt;br&gt;
first we called the orignal method &lt;em&gt;add_nums()&lt;/em&gt; which add all the numbers.&lt;br&gt;
then we declared the &lt;em&gt;add_nums()&lt;/em&gt; function again but this time &lt;br&gt;
added &lt;strong&gt;@only_evens&lt;/strong&gt; wrapper to it , the  wrapper &lt;em&gt;only_evens&lt;/em&gt; filter the list of values first then the filters values passed to the original method &lt;em&gt;add_nums()&lt;/em&gt; which return the sum of only even values.&lt;/p&gt;

&lt;p&gt;with this example we have come to an end,&lt;br&gt;
hope you all have learn some basis of &lt;em&gt;decorators&lt;/em&gt;&lt;br&gt;
this topic , at first is not easy to grasp,&lt;br&gt;
but as you explore more about &lt;em&gt;decorators&lt;/em&gt;&lt;br&gt;
you will know how useful it is.&lt;br&gt;
See you next time :-)&lt;/p&gt;

</description>
      <category>progamming</category>
      <category>python</category>
      <category>beginners</category>
      <category>decorators</category>
    </item>
    <item>
      <title>üí° .filter() &amp; .find(): JavaScript Array Methods</title>
      <author>-</author>
      <pubDate>Wed, 10 Nov 2021 16:48:47 +0000</pubDate>
      <link>https://dev.to/iamatifriaz/filter-find-javascript-array-methods-3g6e</link>
      <guid>https://dev.to/iamatifriaz/filter-find-javascript-array-methods-3g6e</guid>
      <description>&lt;p&gt;When working with an array in JavaScript, we may need to locate a single item within the collection. This may appear tiresome, but if we apply the right methods/procedures/techniques, it shouldn't be too tough.&lt;/p&gt;

&lt;p&gt;There are various ways to extract the needed values from an array, but we'll utilize JavaScript's .find() and .filter() methods here.&lt;/p&gt;

&lt;p&gt;A coding example&lt;br&gt;
We have an array of appsArray:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const appsArray = [{  
    Name: 'Canva',  
    ID: 10  
}, {  
    Name: 'VS Code',  
    ID: 12  
}, {  
    Name: 'Github',  
    ID: 52  
}, {  
    Name: 'Adobe',  
    ID: 23  
}];
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We need an app with an ID of 12&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#find"&gt;
  &lt;/a&gt;
  .find()
&lt;/h2&gt;

&lt;p&gt;The find() method returns the first value from the collection that matches. It will not examine the other values in the array collection after it matches the value in findings.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;appsArray.find(function(item) {  
    return item.Name === 12  
});  

//output: {Name: "VS Code", ID: 12}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#filter"&gt;
  &lt;/a&gt;
  .filter()
&lt;/h2&gt;

&lt;p&gt;The filter() method returns the collection's matched values as an array. It will verify all of the values in the collection and return an array of the matching values.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;appsArray.filter(function(item) {  
    return item.Name === "VS Code"  
});  

//output: [ {Name: "VS Code", ID: 12} ]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In Internet Explorer 11, the find() method does not work. All browsers, including Internet Explorer 9+, support the filter() method.&lt;/p&gt;

&lt;p&gt;Using the snippet below, you can obtain the first matched value from the collection of filter() method results. This solution solves the find() method's IE compatibility problem.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;appsArray.filter(function(item) {  
    return item.Name === "VS Code"  
})[0];  

//output: {Name: "VS Code", ID: 12}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;The find() technique is preferable for newer browsers, but if you care about Internet Explorer, you should use the filter() method.&lt;/p&gt;

&lt;p&gt;.find() returns the first matching element, while .filter() returns an array of all matching elements.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m4sZglza--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/FD2FuWeWUAY8hpe.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--grrUDOzJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1422286620498309132/m3FX0agM_normal.jpg" alt="Atif Riaz profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Atif Riaz
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/iamatifriaz"&gt;@iamatifriaz&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      üí° .filter() &amp;amp; .find(): JavaScript Array Methods&lt;br&gt;&lt;br&gt;When working with an array in JavaScript, we may need to locate a single item within the collection. This may appear tiresome, but if we apply the right methods/procedures/techniques, it shouldn't be too tough.&lt;br&gt;&lt;br&gt;üßµ 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      16:33 PM - 10 Nov 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1458472863929876488" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1458472863929876488" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1458472863929876488" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;Hope you found this article useful, if you did, shoot me a comment to let me know. If you think I did something wrong, please also let me know in the comments.&lt;/p&gt;

&lt;p&gt;Happy coding.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Tutorial on Chartist.js and custom tooltips.</title>
      <author>Jonathon Ringeisen</author>
      <pubDate>Wed, 10 Nov 2021 16:44:47 +0000</pubDate>
      <link>https://dev.to/jringeisen/tutorial-on-chartistjs-and-custom-tooltips-2lje</link>
      <guid>https://dev.to/jringeisen/tutorial-on-chartistjs-and-custom-tooltips-2lje</guid>
      <description>&lt;p&gt;The Chartist JavaScript library provides a high-level API to draw charts in various ways. It makes it easy to create the most common types of charts, and with its simple configuration options, you can get beautiful results quickly. In this tutorial, we‚Äôll create a chart from scratch, step by step. You can also take a look at the &lt;a href="https://codesandbox.io/s/custom-tooltip-with-chartist-js-41mk4"&gt;codesandbox example&lt;/a&gt; for this tutorial to see the final result. This tutorial assumes that you have some basic knowledge of HTML and JavaScript but no prior experience with Chartist.js.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setup"&gt;
  &lt;/a&gt;
  Setup
&lt;/h2&gt;

&lt;p&gt;To get Chartist working with your project, you‚Äôll need to import the Chartist.js files.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;link rel="stylesheet" href="//cdn.jsdelivr.net/chartist.js/latest/chartist.min.css"&amp;gt;
&amp;lt;script src="//cdn.jsdelivr.net/chartist.js/latest/chartist.min.js"&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Make sure to add these between the &lt;code&gt;&amp;lt;head&amp;gt;&amp;lt;/head&amp;gt;&lt;/code&gt; tag. The charts will render as SVG, which means they scale infinitely and can be printed or animated for use in infographics or presentations.&lt;/p&gt;

&lt;p&gt;Next, you'll need to add the following snippet of code in the body of your html.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div class="ct-chart"&amp;gt;&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And finally, you'll need the javascript.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var data = {
  // A labels array that can contain any sort of values
  labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri'],
  // Our series array that contains series objects or in this case series data arrays
  series: [
    [5, 2, 4, 2, 0]
  ]
};

// Create a new line chart object where as first parameter we pass in a selector
// that is resolving to our chart container element. The Second parameter
// is the actual data object.
new Chartist.Line('.ct-chart', data);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is the bare minimum of what you need to start working with Chartist, pretty simple, right.&lt;/p&gt;

&lt;p&gt;I was recently working on a project where I needed a tooltip to display every-time I hovered over a point, and it needed to display the series data. Chartist has a tooltip plugin, but I found this plugin to have a lot of issues and it didn't work well for me, so I decided to implement my own tooltip. Let's discuss customizing our chart and then I will cover how to create and customize a tooltip.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#customizing-chartist"&gt;
  &lt;/a&gt;
  Customizing Chartist
&lt;/h2&gt;

&lt;p&gt;Here is what we're going to build. A stats card that displays a chart of daily user signups.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4_NpShtt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w378qbvkf4x4mvceokej.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4_NpShtt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w378qbvkf4x4mvceokej.png" alt="Chartist daily users chart" width="714" height="356"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To build this, I'm using &lt;a href="https://tailwindcss.com"&gt;Tailwindcss&lt;/a&gt; for styling, you can build your own classes and use those, but I love Tailwind so I'm using it.&lt;/p&gt;

&lt;p&gt;The HTML:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div class="relative w-1/3 mx-auto mt-20 h-40 bg-white rounded-md overflow-hidden overflow-y-scroll shadow"&amp;gt;
  &amp;lt;div class="p-6 w-full"&amp;gt;Daily Users&amp;lt;/div&amp;gt;
  &amp;lt;div class="absolute w-full ct-chart"&amp;gt;
    // This part is important! We will cover this when we customize the tooltip.
    &amp;lt;div class="hidden absolute inline-block chartist-tooltip bg-white text-xs shadow text-center px-3 py-1 rounded-md w-28"&amp;gt;
       &amp;lt;span class="chartist-tooltip-meta"&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;br /&amp;gt;
       &amp;lt;span class="chartist-tooltip-value"&amp;gt;&amp;lt;/span&amp;gt;
    &amp;lt;/div&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Our series or chart data:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var data = {
  series: [
    [
      { meta: "2021-01-01", value: 0 },
      { meta: "2021-01-02", value: 5 },
    ]
  ]
};

// The meta and value will display in the tooltip.
// The value is what's used to create the line on the chart.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, are the chart options:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var options = {
  // extends the chart the full width of the div
  fullWidth: true,

  // removes any padding
  chartPadding: 0,

  // options for the x axis
  axisX: {
    // the chart was display outside the card.
    // to fix that we move it up with the offset.
    offset: 64,

    // turns off the grid
    showGrid: false,

    // turns off the labels
    showLabel: false
  },
  // options for the y axis
  axisY: {
    // no offset was needed so we set it to 0
    offset: 0,

    // turns off the grid
    showGrid: false,

    // turns off the labels
    showLabel: false
  }
};
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Handeling the tooltip:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;new Chartist.Line(".ct-chart", data, options).on("draw", function (data) {
    // We only want the tooltip to apply to the point.
    if (data.type === "point") {
      // What want the tooltip to display on mouseenter so we listen for that event.
      data.element._node.addEventListener("mouseenter", (e) =&amp;gt; {

        // I'm getting the tooltip by its class name.
        const tooltip = document.getElementsByClassName("chartist-tooltip");

        // This is how we're setting the position of the tooltip.
        // This will set the top of the tool tip.
        tooltip[0].style.top = data.y - 50 + "px";

        // This will set the left of the tooltip. What this does is if you're on the
        // right side of the card the tooltip display left of the cursor, if you're on
        // the left side of the card the tooltip displays right of the cursor.
        tooltip[0].style.left =
          data.x &amp;gt; 200 ? data.x - 100 + "px" : data.x + "px";

        // Here we're removing the hidden class so that the tooltip will display.
        tooltip[0].classList.remove("hidden");

        // This gets the tooltip meta div.
        const meta = document.getElementsByClassName(
          "chartist-tooltip-meta"
        );

        // This sets the data for the meta information on the tooltip
        meta[0].innerHTML = data.meta;

        // This gets the tooltip value div.
        const value = document.getElementsByClassName(
          "chartist-tooltip-value"
        );

        // This sets the data for the value.
        value[0].innerHTML =
          data.value.y === 1
          ? data.value.y + " view"
          : data.value.y + " views";
    });

    // here we're listening for when the mouse leaves, and when it does
    // we add the class hidden to hide the tooltip.
    data.element._node.addEventListener("mouseleave", (e) =&amp;gt; {
        const tooltip = document.getElementsByClassName("chartist-tooltip");
        tooltip[0].classList.add("hidden");
    });
  }
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion-and-summary"&gt;
  &lt;/a&gt;
  Conclusion and Summary
&lt;/h2&gt;

&lt;p&gt;Chartist.js is a javascript library that makes it simple to create beautiful charts using HTML5 canvas, without requiring any knowledge of how JavaScript works under-the-hood. With Chartist, you can get away with only knowing basic HTML and CSS syntax, while your data automatically turns into professional looking charts! While Chartists doesn‚Äôt have any pre-made chart types built in, you can always customize one to fit your needs by combining multiple elements in unique ways.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>tailwindcss</category>
      <category>programming</category>
      <category>graphs</category>
    </item>
    <item>
      <title>Building a Dot Matrix Animator</title>
      <author>Kenny Fitzgerald (he/him)</author>
      <pubDate>Wed, 10 Nov 2021 16:44:30 +0000</pubDate>
      <link>https://dev.to/fitzgeraldkd/building-a-dot-matrix-animator-4edm</link>
      <guid>https://dev.to/fitzgeraldkd/building-a-dot-matrix-animator-4edm</guid>
      <description>&lt;p&gt;Whenever I start learning a new skill, I like to come up with a project I can use to apply the skill, test my knowledge, and push myself to find areas where I need to improve. As helpful as tutorials and walkthroughs are, I find that I always get the most experience when I can struggle through a project I start from scratch and apply the knowledge I've learned without explicit instructions. I decided to write this blog about my first Ruby project because I really enjoyed this project and think the results are pretty cool! I won't get into the details about the code here, but it is all available on my &lt;a href="https://github.com/fitzgeraldkd/dot-matrix"&gt;GitHub&lt;/a&gt;!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-idea"&gt;
  &lt;/a&gt;
  The Idea
&lt;/h2&gt;

&lt;p&gt;The idea I came up with was to write a program that creates a dot matrix animation based on input images. Here were my goals for the project:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The user can provide any number of images for the animation

&lt;ul&gt;
&lt;li&gt;Each image acts as a &lt;a href="https://en.wikipedia.org/wiki/Key_frame"&gt;keyframe&lt;/a&gt; in the animation&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;The user can specify the size of the dot matrix (rows, columns, and dot size)&lt;/li&gt;
&lt;li&gt;The user can specify how long each keyframe is displayed, as well as how long the transition between keyframes lasts&lt;/li&gt;
&lt;li&gt;The user will receive an animation based on the inputs where dots are rendered on each frame with a size that relates to the pixel's color&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For the purpose of having a set of images to start with, I made some simple, bitonal, vector images of my initials. I will be using these three images as the keyframes for my test animation.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RFUEsT16--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/6WDhHC0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RFUEsT16--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/6WDhHC0.png" alt="My initials as keyframes" width="880" height="314"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-implementation"&gt;
  &lt;/a&gt;
  The Implementation
&lt;/h2&gt;

&lt;p&gt;Before writing the code, I wanted to come up with a plan so I could determine which tools I should implement. Here's what I came up with:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Process&lt;/strong&gt; the input images

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;Reduce the image size&lt;/em&gt; down to the dot matrix size so one pixel is represented by one dot (processing a full-size image would take longer, use more memory, and provide no benefit)&lt;/li&gt;
&lt;li&gt;For each pixel in the image, &lt;em&gt;determine the size&lt;/em&gt; a dot would need to be to represent a close approximation of the shade/tint&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Interpolate&lt;/strong&gt; between keyframes so the dots' sizes transition smoothly&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;Generate frames&lt;/strong&gt; of the GIF animation

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;Render a dot&lt;/em&gt; for each pixel with a size based on the pixel's color&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Save&lt;/strong&gt; the final GIF file&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#processing-the-input-images"&gt;
  &lt;/a&gt;
  &lt;em&gt;Processing the Input Images&lt;/em&gt;
&lt;/h3&gt;

&lt;p&gt;To accomplish this project, I knew I would need some way to process the input images. Resizing the images was the easy bit. The more complex (and more important) task was to find the best way to relate a pixel's color in the source image to a dot's size in final animation. I felt that the &lt;strong&gt;relative luminance&lt;/strong&gt; as described &lt;a href="https://www.w3.org/TR/WCAG/#dfn-relative-luminance"&gt;in this W3 accessibility document&lt;/a&gt; was a logical property to use in this case, and can be easily calculated with a color's RGB components. After determining what tasks I needed to fulfill, I determined that the &lt;a href="https://rmagick.github.io/"&gt;RMagick library&lt;/a&gt; would be a good choice for this project.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#rendering-a-gif"&gt;
  &lt;/a&gt;
  &lt;em&gt;Rendering a GIF&lt;/em&gt;
&lt;/h3&gt;

&lt;p&gt;Since I already decided to use RMagick to process the images, it makes sense to continue using it to generate a new GIF file for the animation as well. Luckily most of the process is pretty straightforward:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Create an instance&lt;/strong&gt; of the &lt;code&gt;ImageList&lt;/code&gt; class (a class defined in the RMagick library) to hold each frame of the animation&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;For each frame&lt;/strong&gt;:

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;Create an instance&lt;/em&gt; of the &lt;code&gt;Image&lt;/code&gt; class (also from RMagick)&lt;/li&gt;
&lt;li&gt;Provide a &lt;em&gt;background color&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;For each pixel/dot:

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;Draw a circle&lt;/em&gt; in the corresponding location with a radius determined by the relative luminance&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Add&lt;/em&gt; the &lt;code&gt;Image&lt;/code&gt; instance to the &lt;code&gt;ImageList&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Provide a duration&lt;/em&gt; for how long the &lt;code&gt;Image&lt;/code&gt; just added should last (this allows us to pause longer on a keyframe compared to the transitional/animation frames)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Save&lt;/strong&gt; the &lt;code&gt;ImageList&lt;/code&gt; instance to a &lt;code&gt;.gif&lt;/code&gt; file&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The more challenging piece is the &lt;strong&gt;transition between keyframes&lt;/strong&gt;. To do this, I decided to write a method that would generate a new, weighted average image between two keyframes. As time progresses, the weight will shift towards the end keyframe to allow me to interpolate and generate a frame &lt;em&gt;at any point in time&lt;/em&gt;. This new image can then be processed just like the keyframes. Below is an image demonstrating what I need to accomplish:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5hCC1h-M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/905DSal.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5hCC1h-M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/905DSal.png" alt="Transitioning between two keyframes" width="880" height="191"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With any of these transitional images a new frame can be processed to create a frame of the dot matrix animation.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-classes"&gt;
  &lt;/a&gt;
  The Classes
&lt;/h2&gt;

&lt;p&gt;With a library selected and a plan set, I had to determine how to actually write the program. Leaning more towards an object-oriented approach, I decided I wanted to use three classes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;An &lt;code&gt;Animation&lt;/code&gt; class that holds most of the information/logic for the animation as a whole&lt;/li&gt;
&lt;li&gt;A &lt;code&gt;Frame&lt;/code&gt; class that holds the data for a single image in the animation&lt;/li&gt;
&lt;li&gt;A &lt;code&gt;Dot&lt;/code&gt; class that holds the information for a single dot/pixel in an image&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When the program is initiated, it creates an instance of the &lt;code&gt;Animation&lt;/code&gt; class. It then resizes all of the input images down to the desired dot matrix size and adds them to an array in the &lt;code&gt;Animation&lt;/code&gt; instance. The next step is to create &lt;code&gt;Frame&lt;/code&gt; instances for each keyframe and all the transitional frames. Then each pixel of each &lt;code&gt;Frame&lt;/code&gt; is used to instantiate a &lt;code&gt;Dot&lt;/code&gt;, which is then used to render the animation. This is a bit of a simplification, but the source code is available on my &lt;a href="https://github.com/fitzgeraldkd/dot-matrix"&gt;repository on GitHub&lt;/a&gt; for those who want to dive a little deeper!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-interface"&gt;
  &lt;/a&gt;
  The Interface
&lt;/h2&gt;

&lt;p&gt;I wanted to provide a command-line interface for the user that was &lt;strong&gt;easy to use&lt;/strong&gt;, and I also wanted to provide the &lt;strong&gt;flexibility&lt;/strong&gt; with the options used to render the animation. After looking around online I found that &lt;a href="https://github.com/rails/thor"&gt;Thor&lt;/a&gt; was a good tool to utilize. It allowed me to easily create a number of options that make this program much more versatile. An example below shows how a user can select which folder the source images are in, as well as what the background and foreground colors should be:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;bin/run render_gif &lt;span class="nt"&gt;--subfolder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;demo &lt;span class="nt"&gt;--bg_color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;black &lt;span class="nt"&gt;--fg_color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;red
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There are more options than that as well, and a default value is provided for each one. There is also a separate Ruby file that holds all the defaults to make it easy for a user to set their own preferences.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-results"&gt;
  &lt;/a&gt;
  The Results
&lt;/h2&gt;

&lt;p&gt;I'm really proud of the results! I was able to get the program to do exactly what I was looking for, and I enjoy seeing the animation. For the first example, here are three images I used as keyframes: one image for each of my initials.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RFUEsT16--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/6WDhHC0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RFUEsT16--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/6WDhHC0.png" alt="My initials as keyframes" width="880" height="314"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After using these images in the script, here is the animation I got:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9z6lPIFk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/zEfihJk.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9z6lPIFk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/zEfihJk.gif" alt="Dot matrix animation of my initials" width="256" height="256"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Awesome! After seeing the results for a very simple bitonal image, I wanted to see how it looked for more complex examples. I decided to generate a static dot matrix with a width of 100 pixels for these examples. I used &lt;a href="https://unsplash.com/photos/MGDIKg9Bw5U"&gt;this black &amp;amp; white photo of the Eiffel Tower&lt;/a&gt; by Lisa BR on Unsplash and ran my script to see some nice results: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--G50enR84--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/mV3w35E.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G50enR84--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/mV3w35E.png" alt="Dot matrix of a photo of Paris" width="880" height="1100"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I also tried it out on &lt;a href="https://unsplash.com/photos/3v9CFkIKw_c"&gt;this photo of a dog and a pumpkin&lt;/a&gt; by Nathan Guzman on Unsplash and saw similarly promising results:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LBUNe_NS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/HrvseLH.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LBUNe_NS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/HrvseLH.png" alt="Dot matrix of a photo of a dog and a pumpkin" width="880" height="1320"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Obviously a lot of detail was lost since the original pictures were almost 2000 pixels in width each and were being reduced to 100 pixels (also all color is removed), but all things considered I think the results are great! The pumpkin next to the dog may not be recognizeable at this resolution and with the absense of color, but other than that both images still retain enough detail to be made sense of.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-future"&gt;
  &lt;/a&gt;
  The Future
&lt;/h2&gt;

&lt;p&gt;Here's a few things I'd like to add in the future:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Have the foreground/background colors be dynamically set by the dominant colors in the source image&lt;/li&gt;
&lt;li&gt;Provide the option to generate an SVG instead of (or in addition to) a GIF&lt;/li&gt;
&lt;li&gt;Allow an animated GIF to be an input image and have each frame be processed (it currently reads only a single frame from animated GIFs)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I hope you found this project as interesting as I did! I had a lot of fun making it and feel a lot more comfortable with Ruby's syntax after going through it. &lt;em&gt;Thanks for reading!&lt;/em&gt;&lt;/p&gt;

</description>
      <category>showdev</category>
      <category>ruby</category>
      <category>programming</category>
    </item>
    <item>
      <title>Transform tabular data with composable workflows</title>
      <author>David Mezzetti</author>
      <pubDate>Wed, 10 Nov 2021 16:34:41 +0000</pubDate>
      <link>https://dev.to/neuml/transform-tabular-data-with-composable-workflows-3lh4</link>
      <guid>https://dev.to/neuml/transform-tabular-data-with-composable-workflows-3lh4</guid>
      <description>&lt;p&gt;&lt;a href="https://colab.research.google.com/github/neuml/txtai/blob/master/examples/22_Transform_tabular_data_with_composable_workflows.ipynb"&gt;&lt;img src="https://camo.githubusercontent.com/84f0493939e0c4de4e6dbe113251b4bfb5353e57134ffd9fcab6b8714514d4d1/68747470733a2f2f636f6c61622e72657365617263682e676f6f676c652e636f6d2f6173736574732f636f6c61622d62616467652e737667" alt="" width="117" height="20"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This article is part of a tutorial series on &lt;a href="https://github.com/neuml/txtai"&gt;txtai&lt;/a&gt;, an AI-powered semantic search platform.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;txtai executes machine-learning workflows to transform data and build AI-powered semantic search applications. txtai has support for processing both unstructured and structured data. Structured or tabular data is grouped into rows and columns. This can be a spreadsheet, an API call that returns JSON or XML or even list of key-value pairs.&lt;/p&gt;

&lt;p&gt;This article will walk through examples on how to use workflows with the tabular pipeline to transform and index structured data.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#install-dependencies"&gt;
  &lt;/a&gt;
  Install dependencies
&lt;/h1&gt;

&lt;p&gt;Install &lt;code&gt;txtai&lt;/code&gt; and all dependencies. We will install the api, pipeline and workflow optional extras packages.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;pip &lt;span class="nb"&gt;install &lt;/span&gt;txtai[api,pipeline,similarity]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#csv-workflow"&gt;
  &lt;/a&gt;
  CSV Workflow
&lt;/h1&gt;

&lt;p&gt;The first example will transform and index a CSV file. The &lt;a href="https://allenai.org/data/cord-19"&gt;COVID-19 Open Research Dataset&lt;/a&gt; (CORD-19) is a repository of medical articles covering COVID-19. This workflow reads the input CSV and builds a semantic search index.&lt;/p&gt;

&lt;p&gt;The first step is downloading the dataset locally.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# Get CORD-19 metadata file
!wget https://ai2-semanticscholar-cord-19.s3-us-west-2.amazonaws.com/2021-11-01/metadata.csv
!head -1 metadata.csv &amp;gt; input.csv
!tail -10000 metadata.csv &amp;gt;&amp;gt; input.csv
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The next section creates a simple workflow consisting of a tabular pipeline. The tabular pipeline builds a list of (id, text, tag) tuples that can be easily loaded into an Embeddings index. For this example, we'll use the &lt;code&gt;url&lt;/code&gt; column as the id and the &lt;code&gt;title&lt;/code&gt; column as the text column. The textcolumns parameter takes a list of columns to support indexing text content from multiple columns. &lt;/p&gt;

&lt;p&gt;The file input.csv is processed and the first 5 rows are shown.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;txtai.pipeline&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Tabular&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;txtai.workflow&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Workflow&lt;/span&gt;

&lt;span class="c1"&gt;# Create tabular instance mapping input.csv fields
&lt;/span&gt;&lt;span class="n"&gt;tabular&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Tabular&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"url"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="c1"&gt;# Create workflow
&lt;/span&gt;&lt;span class="n"&gt;workflow&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Workflow&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tabular&lt;/span&gt;&lt;span class="p"&gt;)])&lt;/span&gt;

&lt;span class="c1"&gt;# Print 5 rows of input.csv via workflow
&lt;/span&gt;&lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;workflow&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s"&gt;"input.csv"&lt;/span&gt;&lt;span class="p"&gt;]))[:&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[('https://doi.org/10.1016/j.cmpb.2021.106469; https://www.ncbi.nlm.nih.gov/pubmed/34715516/',
  'Computer simulation of the dynamics of a spatial susceptible-infected-recovered epidemic model with time delays in transmission and treatment.',
  None),
 ('https://www.ncbi.nlm.nih.gov/pubmed/34232002/; https://doi.org/10.36849/jdd.5544',
  'Understanding the Potential Role of Abrocitinib in the Time of SARS-CoV-2',
  None),
 ('https://doi.org/10.1186/1471-2458-8-42; https://www.ncbi.nlm.nih.gov/pubmed/18234083/',
  "Can the concept of Health Promoting Schools help to improve students' health knowledge and practices to combat the challenge of communicable diseases: Case study in Hong Kong?",
  None),
 ('https://www.ncbi.nlm.nih.gov/pubmed/32983582/; https://www.sciencedirect.com/science/article/pii/S2095809920302514?v=s5; https://api.elsevier.com/content/article/pii/S2095809920302514; https://doi.org/10.1016/j.eng.2020.07.018',
  'Buying time for an effective epidemic response: The impact of a public holiday for outbreak control on COVID-19 epidemic spread',
  None),
 ('https://doi.org/10.1093/pcmedi/pbab016',
  'The SARS-CoV-2 spike L452R-E484Q variant in the Indian B.1.617 strain showed significant reduction in the neutralization activity of immune sera',
  None)]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, we take the workflow output, build an Embeddings index and run a search query.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;txtai.embeddings&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Embeddings&lt;/span&gt;

&lt;span class="c1"&gt;# Embeddings with sentence-transformers backend
&lt;/span&gt;&lt;span class="n"&gt;embeddings&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Embeddings&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s"&gt;"method"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"transformers"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"path"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"sentence-transformers/paraphrase-mpnet-base-v2"&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="c1"&gt;# Index subset of CORD-19 data
&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;workflow&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s"&gt;"input.csv"&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
&lt;span class="n"&gt;embeddings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;uid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;embeddings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"insulin"&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;uid&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;uid&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Importance of diabetes management during the COVID-19 pandemic. https://doi.org/10.1080/00325481.2021.1978704; https://www.ncbi.nlm.nih.gov/pubmed/34602003/
Position Statement on How to Manage Patients with Diabetes and COVID-19 https://www.ncbi.nlm.nih.gov/pubmed/33442169/; https://doi.org/10.15605/jafes.035.01.03
Successful blood glucose management of a severe COVID-19 patient with diabetes: A case report https://www.ncbi.nlm.nih.gov/pubmed/32590779/; https://doi.org/10.1097/md.0000000000020844
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The example searched for the term &lt;code&gt;insulin&lt;/code&gt;. The top results mention diabetes and blood glucose which are a closely associated terms for diabetes.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#json-service-workflow"&gt;
  &lt;/a&gt;
  JSON Service Workflow
&lt;/h1&gt;

&lt;p&gt;The next example builds a workflow that runs a query against a remote URL, retrieves the results, then transforms and indexes the tabular data. This example gets the top results from the &lt;a href="https://news.ycombinator.com/"&gt;Hacker News front page&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Below shows how to build the ServiceTask and prints the first JSON result. Details on how to configure the ServiceTask can be found in &lt;a href="https://neuml.github.io/txtai/workflows/"&gt;txtai's documentation&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;txtai.workflow&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;ServiceTask&lt;/span&gt;

&lt;span class="n"&gt;service&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ServiceTask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"https://hn.algolia.com/api/v1/search"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"get"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"tags"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="n"&gt;batch&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;extract&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"hits"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;workflow&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Workflow&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;service&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;workflow&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s"&gt;"front_page"&lt;/span&gt;&lt;span class="p"&gt;]))[:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[{'_highlightResult': {'author': {'matchLevel': 'none',
    'matchedWords': [],
    'value': 'withzombies'},
   'title': {'matchLevel': 'none',
    'matchedWords': [],
    'value': 'An opinionated guide on how to reverse engineer software'},
   'url': {'matchLevel': 'none',
    'matchedWords': [],
    'value': 'https://margin.re/media/an-opinionated-guide-on-how-to-reverse-engineer-software-part-1.aspx'}},
  '_tags': ['story', 'author_withzombies', 'story_29084716', 'front_page'],
  'author': 'withzombies',
  'comment_text': None,
  'created_at': '2021-11-02T17:43:47.000Z',
  'created_at_i': 1635875027,
  'num_comments': 25,
  'objectID': '29084716',
  'parent_id': None,
  'points': 254,
  'story_id': None,
  'story_text': None,
  'story_title': None,
  'story_url': None,
  'title': 'An opinionated guide on how to reverse engineer software',
  'url': 'https://margin.re/media/an-opinionated-guide-on-how-to-reverse-engineer-software-part-1.aspx'}]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next we'll map the JSON data using the tabular pipeline. &lt;code&gt;url&lt;/code&gt; will be used as the id column and &lt;code&gt;title&lt;/code&gt; as the text to index.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;txtai.workflow&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt;

&lt;span class="c1"&gt;# Recreate service applying the tabular pipeline to each result
&lt;/span&gt;&lt;span class="n"&gt;service&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ServiceTask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;action&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tabular&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"https://hn.algolia.com/api/v1/search"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"get"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"tags"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="n"&gt;batch&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;extract&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"hits"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;workflow&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Workflow&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;service&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;workflow&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s"&gt;"front_page"&lt;/span&gt;&lt;span class="p"&gt;]))[:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[('https://margin.re/media/an-opinionated-guide-on-how-to-reverse-engineer-software-part-1.aspx',
  'An opinionated guide on how to reverse engineer software',
  None)]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As we did previously, let's build an Embeddings index and run a search query.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Embeddings with sentence-transformers backend
&lt;/span&gt;&lt;span class="n"&gt;embeddings&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Embeddings&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s"&gt;"method"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"transformers"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"path"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"sentence-transformers/paraphrase-mpnet-base-v2"&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="c1"&gt;# Index Hacker News front page
&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;workflow&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s"&gt;"front_page"&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
&lt;span class="n"&gt;embeddings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;uid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;embeddings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"cloud"&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;uid&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;uid&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;How Temporal Workload Shifting Can Reduce Carbon Emissions in the Cloud https://arxiv.org/abs/2110.13234
Hetzner Cloud Goes US (Ashburn/VA) https://twitter.com/Hetzner_Online/status/1455837994259210242
Hetzner cloud servers are now available in Ashburn USA https://www.hetzner.com/news/11-21-usa-cloud
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#xml-service-workflow"&gt;
  &lt;/a&gt;
  XML Service workflow
&lt;/h1&gt;

&lt;p&gt;txtai's ServiceTask can consume both JSON and XML. This example runs a query against the &lt;a href="https://arxiv.org/"&gt;arXiv API&lt;/a&gt;, transforms the results and indexes them for search.&lt;/p&gt;

&lt;p&gt;Below shows how to build the ServiceTask and prints the first XML result.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;service&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ServiceTask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"http://export.arxiv.org/api/query"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"get"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"search_query"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"max_results"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="n"&gt;batch&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;extract&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"feed"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"entry"&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;workflow&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Workflow&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;service&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;workflow&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s"&gt;"all:aliens"&lt;/span&gt;&lt;span class="p"&gt;]))[:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[OrderedDict([('id', 'http://arxiv.org/abs/2102.01522v3'),
              ('updated', '2021-09-06T14:18:23Z'),
              ('published', '2021-02-01T18:27:12Z'),
              ('title',
               'If Loud Aliens Explain Human Earliness, Quiet Aliens Are Also Rare'),
              ('summary',
               "If life on Earth had to achieve n 'hard steps' to reach humanity's level,\nthen the chance of this event rose as time to the n-th power. Integrating this\nover habitable star formation and planet lifetime distributions predicts &amp;gt;99%\nof advanced life appears after today, unless n&amp;lt;3 and max planet duration\n&amp;lt;50Gyr. That is, we seem early. We offer this explanation: a deadline is set by\n'loud' aliens who are born according to a hard steps power law, expand at a\ncommon rate, change their volumes' appearances, and prevent advanced life like\nus from appearing in their volumes. 'Quiet' aliens, in contrast, are much\nharder to see. We fit this three-parameter model of loud aliens to data: 1)\nbirth power from the number of hard steps seen in Earth history, 2) birth\nconstant by assuming a inform distribution over our rank among loud alien birth\ndates, and 3) expansion speed from our not seeing alien volumes in our sky. We\nestimate that loud alien civilizations now control 40-50% of universe volume,\neach will later control ~10^5 - 3x10^7 galaxies, and we could meet them in\n~200Myr - 2Gyr. If loud aliens arise from quiet ones, a depressingly low\ntransition chance (~10^-4) is required to expect that even one other quiet\nalien civilization has ever been active in our galaxy. Which seems bad news for\nSETI. But perhaps alien volume appearances are subtle, and their expansion\nspeed lower, in which case we predict many long circular arcs to find in our\nsky."),
              ('author',
               [OrderedDict([('name', 'Robin Hanson')]),
                OrderedDict([('name', 'Daniel Martin')]),
                OrderedDict([('name', 'Calvin McCarter')]),
                OrderedDict([('name', 'Jonathan Paulson')])]),
              ('arxiv:comment',
               OrderedDict([('@xmlns:arxiv', 'http://arxiv.org/schemas/atom'),
                            ('#text', 'To appear in Astrophysical Journal')])),
              ('link',
               [OrderedDict([('@href', 'http://arxiv.org/abs/2102.01522v3'),
                             ('@rel', 'alternate'),
                             ('@type', 'text/html')]),
                OrderedDict([('@title', 'pdf'),
                             ('@href', 'http://arxiv.org/pdf/2102.01522v3'),
                             ('@rel', 'related'),
                             ('@type', 'application/pdf')])]),
              ('arxiv:primary_category',
               OrderedDict([('@xmlns:arxiv', 'http://arxiv.org/schemas/atom'),
                            ('@term', 'q-bio.OT'),
                            ('@scheme', 'http://arxiv.org/schemas/atom')])),
              ('category',
               [OrderedDict([('@term', 'q-bio.OT'),
                             ('@scheme', 'http://arxiv.org/schemas/atom')]),
                OrderedDict([('@term', 'physics.pop-ph'),
                             ('@scheme',
                              'http://arxiv.org/schemas/atom')])])])]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next we'll map the XML data using the tabular pipeline. &lt;code&gt;id&lt;/code&gt; will be used as the id column and &lt;code&gt;title&lt;/code&gt; as the text to index.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;txtai.workflow&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt;

&lt;span class="c1"&gt;# Create tablular pipeline with new mapping
&lt;/span&gt;&lt;span class="n"&gt;tabular&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Tabular&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="c1"&gt;# Recreate service applying the tabular pipeline to each result
&lt;/span&gt;&lt;span class="n"&gt;service&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ServiceTask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;action&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tabular&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"http://export.arxiv.org/api/query"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"get"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"search_query"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"max_results"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="n"&gt;batch&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;extract&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"feed"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"entry"&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;workflow&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Workflow&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;service&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;workflow&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s"&gt;"all:aliens"&lt;/span&gt;&lt;span class="p"&gt;]))[:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[('http://arxiv.org/abs/2102.01522v3',
  'If Loud Aliens Explain Human Earliness, Quiet Aliens Are Also Rare',
  None)]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As we did previously, let's build an Embeddings index and run a search query.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Embeddings with sentence-transformers backend
&lt;/span&gt;&lt;span class="n"&gt;embeddings&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Embeddings&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s"&gt;"method"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"transformers"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"path"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"sentence-transformers/paraphrase-mpnet-base-v2"&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="c1"&gt;# Index Hacker News front page
&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;workflow&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s"&gt;"all:aliens"&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
&lt;span class="n"&gt;embeddings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;uid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;embeddings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"alien radio signals"&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;uid&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;uid&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Calculating the probability of detecting radio signals from alien
  civilizations http://arxiv.org/abs/0707.0011v2
Field Trial of Alien Wavelengths on GARR Optical Network http://arxiv.org/abs/1805.04278v1
Aliens on Earth. Are reports of close encounters correct? http://arxiv.org/abs/1203.6805v2
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#build-a-workflow-with-no-code"&gt;
  &lt;/a&gt;
  Build a workflow with no code!
&lt;/h1&gt;

&lt;p&gt;The next example shows how one of the same workflows above can be constructed via API configuration. This is a no-code way to build a txtai indexing workflow!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# Index settings
writable: true
embeddings:
    path: sentence-transformers/nli-mpnet-base-v2

# Tabular pipeline
tabular:
  idcolumn: url
  textcolumns: 
    - title

# Workflow definitions
workflow:
  index:
    tasks:
      - task: service
        action: tabular
        url: https://hn.algolia.com/api/v1/search
        method: get
        params:
          tags: null
        batch: false
        extract: hits
      - action: upsert
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This workflow connects to the Hacker News API, gets the data for the front page and indexes it. The workflow configures the same actions that were configured in Python previously.&lt;/p&gt;

&lt;p&gt;Let's start an API instance&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;!killall -9 uvicorn
!CONFIG=workflow.yml nohup uvicorn "txtai.api:app" &amp;amp;&amp;gt; api.log &amp;amp;
!sleep 30
!cat api.log
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;INFO:     Started server process [911]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
INFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next we'll execute the workflow. txtai has API bindings for &lt;a href="https://github.com/neuml/txtai.js"&gt;JavaScript&lt;/a&gt;, &lt;a href="https://github.com/neuml/txtai.java"&gt;Java&lt;/a&gt;, &lt;a href="https://github.com/neuml/txtai.rs"&gt;Rust&lt;/a&gt; and &lt;a href="https://github.com/neuml/txtai.go"&gt;Golang&lt;/a&gt;. But to keep things simple, we'll just run the commands via cURL.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# Execute workflow via API call
!curl -X POST "http://localhost:8000/workflow" -H  "accept: application/json" -H  "Content-Type: application/json" -d "{\"name\":\"index\",\"elements\":[\"front_page\"]}"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[["https://margin.re/media/an-opinionated-guide-on-how-to-reverse-engineer-software-part-1.aspx","An opinionated guide on how to reverse engineer software",null],["https://jichu4n.com/posts/how-x-window-managers-work-and-how-to-write-one-part-i/","How X Window Managers Work, and How to Write One (2014)",null],["https://mattferraro.dev/posts/geometric-algebra","What is the inverse of a vector?",null],["https://www.hetzner.com/news/11-21-usa-cloud","Hetzner cloud servers are now available in Ashburn USA",null],["https://zigmonthly.org/letters/2021/october/","Zig monthly, October 2021: Games, gamedev, Elixir, tools and more",null],["https://twitter.com/Hetzner_Online/status/1455837994259210242","Hetzner Cloud Goes US (Ashburn/VA)",null],["https://zig.news/sobeston/using-zig-and-translate-c-to-understand-weird-c-code-4f8","Using Zig's translate-C to understand weird C code",null],["https://real-italian-coffee.herokuapp.com/home","Show HN: A generator of Fake Italian Coffee names",null],["https://www.sciencealert.com/useless-specks-of-dust-turn-out-to-be-ancient-building-blocks-of-all-vertebrate-genomes","'Useless Specks of Dust' Turn Out to Be Building Blocks of All Vertebrate Genome",null],["https://olivierlacan.com/posts/high-fidelity-remote-communication/","High-fidelity remote communication",null],["https://github.com/Qinti/nazca","Nazca ‚Äì New GUI for the Web",null],["https://susam.in/blog/microcentury.html","Microcentury (2020)",null],["https://addons.mozilla.org/de/firefox/addon/downthemall/","DownThemAll",null],["https://arxiv.org/abs/2110.13234","How Temporal Workload Shifting Can Reduce Carbon Emissions in the Cloud",null],["https://ideas.krishnan.ca/are-daily-standups-hurting-your-team","Are daily standups hurting your team?",null],["https://sethkim.me/l/thesolutionspace/","Automation != Leverage",null],["https://www.listennotes.com/blog/the-boring-technology-behind-a-one-person-23/","The boring technology behind a one-person Internet company",null],["https://www.vox.com/the-goods/22725031/buying-less-supply-chain-holiday-shopping","It‚Äôs time for Americans to buy less stuff",null],["https://blog.ilograph.com/posts/beyond-whiteboarding-creating-expert-system-architecture-diagrams/","Beyond Whiteboarding: Creating Expert System Architecture Diagrams",null],["https://www.sciencemuseumgroup.org.uk/blog/covid19-effect-on-the-vaccinated/","Covid-19: How the virus spreads among vaccinated people",null]]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The data is now indexed. Note that the index configuration has an &lt;code&gt;upsert&lt;/code&gt; action. Each workflow call will insert new rows or update existing rows. This call could be scheduled with a system cron to execute periodically and build an index of top stories on Hacker News over time. &lt;/p&gt;

&lt;p&gt;Now that the index is ready, let's run a search.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# Run a search
!curl -X GET "http://localhost:8000/search?query=cloud&amp;amp;limit=3" -H  "accept: application/json"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[{"id":"https://twitter.com/Hetzner_Online/status/1455837994259210242","score":0.475553035736084},{"id":"https://arxiv.org/abs/2110.13234","score":0.3434651494026184},{"id":"https://olivierlacan.com/posts/high-fidelity-remote-communication/","score":0.2550020217895508}]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#add-a-translation-step-to-workflow"&gt;
  &lt;/a&gt;
  Add a translation step to workflow
&lt;/h1&gt;

&lt;p&gt;Next we'll recreate the workflow, adding one additional step, translating the text into French before indexing. This workflow gets the top results from Hacker News, translates the results and builds an semantic index of titles in French.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# Index settings
writable: true
embeddings:
    path: sentence-transformers/nli-mpnet-base-v2

# Tabular pipeline
tabular:
  idcolumn: url
  textcolumns: 
    - title

# Translation pipeline
translation:

# Workflow definitions
workflow:
  index:
    tasks:
      - task: service
        action: tabular
        url: https://hn.algolia.com/api/v1/search
        method: get
        params:
          tags: null
        batch: false
        extract: hits
      - action: translation
        args: [fr]
      - action: upsert
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;!killall -9 uvicorn
!CONFIG=workflow.yml nohup uvicorn "txtai.api:app" &amp;amp;&amp;gt; api.log &amp;amp;
!sleep 30
!cat api.log
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;INFO:     Started server process [935]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
INFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Same as before, we'll run the index workflow and a search.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# Execute workflow via API call
!curl -s -X POST "http://localhost:8000/workflow" -H  "accept: application/json" -H  "Content-Type: application/json" -d "{\"name\":\"index\",\"elements\":[\"front_page\"]}" &amp;gt; /dev/null

# Run a search
!curl -X GET "http://localhost:8000/search?query=nuage&amp;amp;limit=3" -H  "accept: application/json"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[{"id":"https://arxiv.org/abs/2110.13234","score":0.46083423495292664},{"id":"https://twitter.com/Hetzner_Online/status/1455837994259210242","score":0.37807518243789673},{"id":"https://jichu4n.com/posts/how-x-window-managers-work-and-how-to-write-one-part-i/","score":0.36641401052474976}]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping up
&lt;/h1&gt;

&lt;p&gt;This notework demonstrated how to transform, index and search tabular data from a variety of sources. txtai offers maximum flexibility in building composable workflows to maximize the number of ways data can be indexed for semantic search. &lt;/p&gt;

</description>
      <category>showdev</category>
      <category>machinelearning</category>
      <category>nlp</category>
      <category>python</category>
    </item>
  </channel>
</rss>
