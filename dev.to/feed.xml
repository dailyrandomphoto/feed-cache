<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Solving Advent of Code Puzzles in Idiomatic Kotlin</title>
      <author>Svetlana Isakova</author>
      <pubDate>Thu, 15 Jul 2021 12:41:37 +0000</pubDate>
      <link>https://dev.to/kotlin/solving-advent-of-code-puzzles-in-idiomatic-kotlin-1m62</link>
      <guid>https://dev.to/kotlin/solving-advent-of-code-puzzles-in-idiomatic-kotlin-1m62</guid>
      <description>&lt;p&gt;What’s the best way to learn a language other than writing some code with it? Solving fun and short tasks like the ones from &lt;a href="https://adventofcode.com/"&gt;Advent of Code&lt;/a&gt; might be a great opportunity to practice your language skills, and you can learn a lot if you compare your solutions with how others have solved the same problem.&lt;/p&gt;

&lt;p&gt;Lots of developers from around the world, including some from the Kotlin team, take part in the Advent of Code challenges created by &lt;a href="https://twitter.com/ericwastl"&gt;Eric Wastl&lt;/a&gt;. Advent of Code is a series of tasks published every December, which you solve and compete with others. Many would agree that it’s the best advent calendar to celebrate Christmas and New Year!&lt;/p&gt;

&lt;p&gt;To help the community learn idiomatic Kotlin, and motivate more developers to solve Advent of Code tasks in Kotlin in the future, we decided to prepare solutions for the tasks from Advent of Code 2020. It doesn’t matter if you solved it back in December, you’re ready to solve it now, or you just want to check the solutions – we hope you’ll find something useful in these materials. Of course, it works best if you try to solve the same task first yourself!&lt;/p&gt;

&lt;p&gt;Below is the solution and video for the first task. If you find this format useful and want us to cover more tasks in a similar fashion, please share in the comments!&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/o4emra1xm88"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#day-1-report-repair"&gt;
  &lt;/a&gt;
  Day 1. Report Repair
&lt;/h2&gt;

&lt;p&gt;We’re fixing an expense report! Find the full task description at &lt;a href="https://adventofcode.com/2020/day/1"&gt;https://adventofcode.com/2020/day/1&lt;/a&gt;*.&lt;/p&gt;

&lt;p&gt;You need to find the two (and in the second part, three) entries from the list of numbers that sum to 2020 and then multiply those two (or three) numbers together.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-solve-the-task"&gt;
  &lt;/a&gt;
  How to solve the task
&lt;/h3&gt;

&lt;p&gt;Register at &lt;a href="https://adventofcode.com/"&gt;https://adventofcode.com/&lt;/a&gt;, open the task at &lt;a href="https://adventofcode.com/2020/day/1"&gt;https://adventofcode.com/2020/day/1&lt;/a&gt;, write your solution in Kotlin, and check the result on the site. You can either write Kotlin code &lt;a href="https://play.kotlinlang.org/"&gt;online&lt;/a&gt; or using an IDE:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;download the  free Community Edition of &lt;a href="https://www.jetbrains.com/idea/download/"&gt;IntelliJ IDEA&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;create &lt;a href="https://kotlinlang.org/docs/jvm-get-started.html"&gt;a Kotlin project&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;write your solution there&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Finally, compare your solution with the solution below.&lt;/p&gt;

&lt;p&gt;We &lt;a href="https://github.com/svtk/advent-of-code-2020/blob/master/build.gradle.kts"&gt;marked&lt;/a&gt; the &lt;code&gt;src&lt;/code&gt; folder as a source set to put the code directly there. We copied input files, like &lt;code&gt;src/day1/input.txt&lt;/code&gt;,  to the source folder for convenience. You can find the solutions in &lt;a href="https://github.com/Kotlin-hands-on/advent-of-code-2020"&gt;this project&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#solution"&gt;
  &lt;/a&gt;
  Solution
&lt;/h3&gt;

&lt;p&gt;Here’s the sample input:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;1721
979
366
299
675
1456
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;First, we need to read and parse the input. We can use the Kotlin &lt;code&gt;readLines()&lt;/code&gt; function for reading a list of lines from a given file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="nc"&gt;File&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"src/day1/input.txt"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;readLines&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;readLines()&lt;/code&gt; returns a list of Strings, and we convert it to a list of numbers:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.io.File&lt;/span&gt;
&lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;numbers&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;File&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"src/day1/input.txt"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
       &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;readLines&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
       &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;toInt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You put this code inside the &lt;code&gt;main&lt;/code&gt; function, the entry point for your program. When you start typing, IntelliJ IDEA imports the &lt;code&gt;java.io.File&lt;/code&gt; automatically.&lt;/p&gt;

&lt;p&gt;Now we can simply iterate through the list, and then for each number repeat the iteration and check the sum:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;first&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;second&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;first&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="n"&gt;second&lt;/span&gt; &lt;span class="p"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;2020&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
           &lt;span class="nf"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;first&lt;/span&gt; &lt;span class="p"&gt;*&lt;/span&gt; &lt;span class="n"&gt;second&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
           &lt;span class="k"&gt;return&lt;/span&gt;
       &lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You put this code inside &lt;code&gt;main&lt;/code&gt;, so &lt;code&gt;return&lt;/code&gt; returns from &lt;code&gt;main&lt;/code&gt; when the required numbers are found.&lt;/p&gt;

&lt;p&gt;In a similar way, you check the sum of three numbers:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;first&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;second&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;third&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
           &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;first&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="n"&gt;second&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="n"&gt;third&lt;/span&gt; &lt;span class="p"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;2020&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
               &lt;span class="nf"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;first&lt;/span&gt; &lt;span class="p"&gt;*&lt;/span&gt; &lt;span class="n"&gt;second&lt;/span&gt; &lt;span class="p"&gt;*&lt;/span&gt; &lt;span class="n"&gt;third&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
               &lt;span class="k"&gt;return&lt;/span&gt;
           &lt;span class="p"&gt;}&lt;/span&gt;
       &lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can run it and get the result for a given input. That’s it! The first task is really a simple one.&lt;/p&gt;

&lt;p&gt;However, we iterate over the same list again and again for each of the elements. Having two nested loops for finding two numbers makes it N&lt;sup&gt;2&lt;/sup&gt; operations, where N is the number of elements. When we need to find three numbers, that’s three nested loops, and N&lt;sup&gt;3&lt;/sup&gt; operations. If the list of numbers is large, that’s not the most efficient way to solve this type of problem. Surely there is a better way, right?&lt;/p&gt;

&lt;p&gt;There definitely is and the Kotlin standard library can help us express that concisely. As often happens, we can replace the long calculation with some kind of smart storage used to find the result.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#solving-the-task-for-two-numbers"&gt;
  &lt;/a&gt;
  Solving the task for two numbers
&lt;/h3&gt;

&lt;p&gt;First, let’s build a map for number “complements” – numbers that together with the given number sum up to 2020:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;complements&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;associateBy&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="mi"&gt;2020&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We use the Kotlin &lt;code&gt;associateBy&lt;/code&gt; function to build the map. Its lambda argument returns a key in this map, by which the list element is getting stored. For the sample input it’ll be the following map:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1721&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;979&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;366&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;299&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;675&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1456&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;complements&lt;/span&gt; &lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;299&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1721&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1041&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;979&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1654&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;366&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1721&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;299&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1345&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;675&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;564&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1456&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After this procedure, you can clearly see the answer! The very first number &lt;code&gt;1721&lt;/code&gt; from the list is present in the &lt;code&gt;complements&lt;/code&gt; map as a key: &lt;code&gt;1721=299&lt;/code&gt;, which means it’s the complement for the number &lt;code&gt;299&lt;/code&gt;, and they sum to &lt;code&gt;2020&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Having stored this information in a map, we can check if any number from the list has a complement in this map. The following code finds the first number with an existing complement:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;pair&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;mapNotNull&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt; &lt;span class="p"&gt;-&amp;gt;&lt;/span&gt;
   &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;complement&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;complements&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
   &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;complement&lt;/span&gt; &lt;span class="p"&gt;!=&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nc"&gt;Pair&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;complement&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;
&lt;span class="p"&gt;}.&lt;/span&gt;&lt;span class="nf"&gt;firstOrNull&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We transform each number into a pair consisting of the number and its complement (if the complement exists) and then find the first non-null result.&lt;/p&gt;

&lt;p&gt;We use &lt;code&gt;mapNotNull&lt;/code&gt;, which transforms each element in a list and filters out all the resulting &lt;code&gt;null&lt;/code&gt;s. It’s shorthand for calling first &lt;code&gt;map&lt;/code&gt;, and then &lt;code&gt;filterNotNull&lt;/code&gt; on the result.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;firstOrNull&lt;/code&gt; returns the first element in the list or &lt;code&gt;null&lt;/code&gt; if the list is empty. Kotlin standard library often uses the &lt;code&gt;OrNull&lt;/code&gt; suffix to mark functions returning &lt;code&gt;null&lt;/code&gt; on failure rather than throwing an exception (like &lt;code&gt;elementAtOrNull&lt;/code&gt;, &lt;code&gt;singleOrNull&lt;/code&gt;, or &lt;code&gt;maxOrNull&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Starting with Kotlin 1.5.0, you can also replace the two consequent operations &lt;code&gt;mapNotNull&lt;/code&gt; and &lt;code&gt;first(OrNull)&lt;/code&gt; with one function call: &lt;code&gt;firstNotNullOf(OrNull)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;After building the auxiliary structure, we managed to find the resulting two numbers in N operations, not in N&lt;sup&gt;2&lt;/sup&gt; as before!&lt;/p&gt;

&lt;p&gt;We need a multiplication of these numbers, so here’s the last step:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="nf"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pair&lt;/span&gt;&lt;span class="o"&gt;?.&lt;/span&gt;&lt;span class="nf"&gt;let&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="p"&gt;*&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;pair&lt;/code&gt; variable contains a nullable &lt;code&gt;Pair&lt;/code&gt; of two numbers and is &lt;code&gt;null&lt;/code&gt; if the initial list contains no numbers that sum up to 2020. We use safe access &lt;code&gt;?.&lt;/code&gt; together with the &lt;code&gt;let&lt;/code&gt; function and destructuring in a lambda syntax to display the result in case &lt;code&gt;pair&lt;/code&gt; is not &lt;code&gt;null&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#solving-the-task-for-three-numbers"&gt;
  &lt;/a&gt;
  Solving the task for three numbers
&lt;/h3&gt;

&lt;p&gt;The next step is solving this problem for three numbers. Let’s reuse what we’ve done so far and extract the logic of finding a pair of numbers summing up to a given number into a separate function:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;List&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;.&lt;/span&gt;&lt;span class="nf"&gt;findPairOfSum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nc"&gt;Pair&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;?&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="c1"&gt;// Map: sum - x -&amp;gt; x&lt;/span&gt;
   &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;complements&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;associateBy&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;sum&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;firstNotNullOfOrNull&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt; &lt;span class="p"&gt;-&amp;gt;&lt;/span&gt;
       &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;complement&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;complements&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
       &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;complement&lt;/span&gt; &lt;span class="p"&gt;!=&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nc"&gt;Pair&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;complement&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We also used the &lt;code&gt;firstNotNullOfOrNull&lt;/code&gt; function.&lt;/p&gt;

&lt;p&gt;Now, we use &lt;code&gt;findPairOfSum&lt;/code&gt; to build a helper map that stores the complement &lt;em&gt;pair of values&lt;/em&gt; for each number which together with this number sums up to 2020:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Map: x -&amp;gt; (y, z) where y + z = 2020 - x&lt;/span&gt;
&lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;complementPairs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Map&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;Pair&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;?&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;
   &lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;associateWith&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;findPairOfSum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2020&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For the same initial input, here’s the complement pairs map:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1721&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;979&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;366&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;299&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;675&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1456&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;complement&lt;/span&gt; &lt;span class="n"&gt;pairs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1721&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;979&lt;/span&gt;&lt;span class="p"&gt;=(&lt;/span&gt;&lt;span class="mi"&gt;366&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;675&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;366&lt;/span&gt;&lt;span class="p"&gt;=(&lt;/span&gt;&lt;span class="mi"&gt;979&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;675&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;299&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;675&lt;/span&gt;&lt;span class="p"&gt;=(&lt;/span&gt;&lt;span class="mi"&gt;979&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;366&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;1456&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As before, you already can see the answer! It’s the number that corresponds to a non-null pair in a map.&lt;/p&gt;

&lt;p&gt;However, we don’t really need to build the whole map — we only need to find the first number that corresponds to a non-null pair! Let’s find it using the already familiar &lt;code&gt;firstNotNullOfOrNull&lt;/code&gt; function:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;List&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;.&lt;/span&gt;&lt;span class="nf"&gt;findTripleOfSum&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="nc"&gt;Triple&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;?&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;
   &lt;span class="nf"&gt;firstNotNullOfOrNull&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="p"&gt;-&amp;gt;&lt;/span&gt;
       &lt;span class="nf"&gt;findPairOfSum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2020&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;?.&lt;/span&gt;&lt;span class="nf"&gt;let&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;pair&lt;/span&gt; &lt;span class="p"&gt;-&amp;gt;&lt;/span&gt;
           &lt;span class="nc"&gt;Triple&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pair&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;first&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pair&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;second&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
       &lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note Kotlin’s concise syntax – the function can return an expression directly.&lt;/p&gt;

&lt;p&gt;The final step is to find the multiplication if the resulting triple is non-null, similar to how we did it before:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="nf"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;triple&lt;/span&gt;&lt;span class="o"&gt;?.&lt;/span&gt;&lt;span class="nf"&gt;let&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="p"&gt;*&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="p"&gt;*&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That’s all!&lt;/p&gt;

&lt;p&gt;In the next part, we’ll discuss how to solve the second task. Please let us know if you find this content useful and would like us to provide solutions for more tasks!&lt;/p&gt;




&lt;p&gt;*Used with the permission of &lt;a href="https://adventofcode.com/"&gt;Advent of Code&lt;/a&gt; (&lt;a href="https://twitter.com/ericwastl"&gt;Eric Wastl&lt;/a&gt;).&lt;/p&gt;

</description>
      <category>kotlin</category>
      <category>adventofcode</category>
      <category>codenewbie</category>
      <category>100daysofcode</category>
    </item>
    <item>
      <title>Different Types Of Automated Tests</title>
      <author>Jessica Wood</author>
      <pubDate>Thu, 15 Jul 2021 12:24:34 +0000</pubDate>
      <link>https://dev.to/woodjessica/different-types-of-automated-tests-384l</link>
      <guid>https://dev.to/woodjessica/different-types-of-automated-tests-384l</guid>
      <description>&lt;p&gt;In the software testing domain, automated testing has catapulted to new heights. There are many organizations that clearly understand the sheer power of automated testing. &lt;/p&gt;

&lt;p&gt;These organizations know how test automation can benefit them immensely in their software development projects in the form of reduced costs, improved efficiency and enhanced quality of the software application. &lt;/p&gt;

&lt;p&gt;In this article, you will get to know about the different types of automated tests. &lt;/p&gt;

&lt;p&gt;&lt;b&gt;What is automated testing?&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;It is a testing process where automation tools are used to test and control the execution of test cases. Then the actual test results are compared with the expected test results.  &lt;/p&gt;

&lt;p&gt;&lt;b&gt;Following are the different types of automated tests:&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;1.API tests:&lt;/b&gt; It is possible for software to talk to other software applications through the medium of an Application Programming Interface (API). Just like any other software is tested, there is a need to test APIs as well. &lt;/p&gt;

&lt;p&gt;The compliance, functionality and security issues are tested. In the case of web applications, request and response of an application can be tested, to ascertain whether they are encrypted and secure or not.&lt;/p&gt;

&lt;p&gt;One of the popular tools for &lt;a href="https://www.testingxperts.com/blog/api-testing-criticality/"&gt;API testing&lt;/a&gt; is SOAP UI, which comes in both free and paid versions. You can use other tools depending upon your specific needs.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;2.Unit tests:&lt;/b&gt; To test the code level, automated unit tests are written. Bugs are identified in methods, functions and routines.&lt;/p&gt;

&lt;p&gt;There are some organizations that are interested to perform unit testing through their own developers, while other organizations go with the idea of hiring test automation experts. &lt;/p&gt;

&lt;p&gt;The source code can be accessed by these experts, who will in turn write unit tests to break the production code.&lt;/p&gt;

&lt;p&gt;In the case of unit tests, whenever the compilation of code takes place, all the unit tests are being run in order to ascertain whether all the functionalities are working properly or not. &lt;/p&gt;

&lt;p&gt;If any of the unit tests doesn’t function properly or fails, then there are chances of bug or bugs present in the production code. &lt;/p&gt;

&lt;p&gt;&lt;b&gt;3.GUI tests:&lt;/b&gt; In this type of automated test, the user interface of the application is being tested. There is change taking place every now and then in the GUI’s. &lt;/p&gt;

&lt;p&gt;How the users will use the application will also be carefully scrutinized. Users take the support of mouse and keyboard and thus mimicking the same behavior by using the mouse and keyboard to write or click to objects present on the user interface is done by automated GUI tests.&lt;/p&gt;

&lt;p&gt;Due to the above mentioned scenario, bugs can be found at an early stage and then it can be used in many scenarios such as filling up forms or regression testing.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;4.Smoke tests:&lt;/b&gt; After any build is given out of the application, smoke tests are executed immediately, to ensure that the application is functioning properly. &lt;/p&gt;

&lt;p&gt;It is considered to be a small test suite and is considered to be executed a few times depending upon the test scenario. &lt;/p&gt;

&lt;p&gt;&lt;b&gt;5.Regression tests:&lt;/b&gt; This type of test is performed on a new module to ensure that all the existing modules have not been affected by it. &lt;/p&gt;

&lt;p&gt;After each new iteration of testing, this test is repeated. After a new iteration, the main test cases stay fixed with a few new additions. Regression tests are almost frequently run by the testing teams.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Conclusion:&lt;/b&gt;If you are looking forward for a deeper know-how on the efficacy of the different types of automated tests, then do get connected with a premium software testing services company, who will take you through the entire process of the &lt;a href="https://www.testingxperts.com/blog/test-automation-frameworks"&gt;test automation framework&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;About the author:&lt;/b&gt;I am a technical content writer focused on writing technology specific articles. I strive to provide well-researched information on the leading market savvy technologies.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>GitLive 13.0: Codeshare now supports sharing via Live Share and Code With Me</title>
      <author>SuDa2103</author>
      <pubDate>Thu, 15 Jul 2021 12:18:19 +0000</pubDate>
      <link>https://dev.to/gitlive/gitlive-13-0-codeshare-now-supports-sharing-via-live-share-and-code-with-me-331</link>
      <guid>https://dev.to/gitlive/gitlive-13-0-codeshare-now-supports-sharing-via-live-share-and-code-with-me-331</guid>
      <description>&lt;p&gt;Once on a call with a teammate, starting GitLive's codeshare will now offer you the choice of Live Share or Code With Me depending on which IDE you and your teammate are using.&lt;/p&gt;

&lt;p&gt;Live Share for VS Code and Code With Me for JetBrains are great tools for pair programming and work in a very similar way to GitLive's built-in codeshare. The major difference is that the built-in codeshare is IDE agnostic and works even when one participant is using VS Code and the other JetBrains. It also quicker to start than Live Share or Code With Me as it reuses your current open IDE window.&lt;/p&gt;

&lt;p&gt;But if both participants are using the same IDE and don't mind waiting for the project to load, Live Share and Code With Me offer a superior pair programming experience, with full support for the features of the IDE such as code completion and shared terminals. That's why we decided to integrate them into GitLive! &lt;/p&gt;

&lt;p&gt;This feature requires all team members to update to the latest version. If you have not installed the GitLive plugin yet head to the &lt;a href="https://marketplace.visualstudio.com/items?itemName=TeamHub.teamhub"&gt;VS Code&lt;/a&gt; or &lt;a href="https://plugins.jetbrains.com/plugin/11955-gitlive"&gt;JetBrains&lt;/a&gt; marketplace to get started.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#selecting-a-project-to-share"&gt;
  &lt;/a&gt;
  Selecting a project to share &lt;br&gt;
&lt;/h2&gt;

&lt;p&gt;While on a call, selecting Share Code will show the new codeshare dialog.&lt;br&gt;
  &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ys034kZX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626335133891/OUsOMdO7A.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ys034kZX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626335133891/OUsOMdO7A.jpeg" alt="2-share-code-option.jpeg"&gt;&lt;/a&gt;&lt;br&gt;
The dialog shows all the projects you currently have open, which you can choose to share via GitLive, Live Share, or Code With Me depending on the IDE the project is open in (and if you have the Live Share extension or Code With Me plugin installed). Under the GitLive tab you also have the option to share all open projects, where other participants can follow you from one project to another.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---yPk_TO2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626335159367/dCURubL-D.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---yPk_TO2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626335159367/dCURubL-D.jpeg" alt="3-codeshare-gitlive-options.jpeg"&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sharing-with-live-share-or-code-with-me"&gt;
  &lt;/a&gt;
  Sharing with Live Share or Code With Me &lt;br&gt;
&lt;/h2&gt;

&lt;p&gt;Once you have selected a project you will be prompted to switch back to your IDE.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EFDppz2j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626335173628/U2SiF2lUc.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EFDppz2j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626335173628/U2SiF2lUc.jpeg" alt="4-codeshare-open-repo.jpeg"&gt;&lt;/a&gt;&lt;br&gt;
If you are using Live Share and you haven't signed in yet, you will be prompted to sign in. If using Code With Me, you will be prompted to accept your teammate's request to join. &lt;br&gt;&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
      &lt;tr&gt;
  &lt;th&gt; VS Code&lt;/th&gt;
  &lt;th&gt; JetBrains&lt;/th&gt;
&lt;/tr&gt;
    &lt;td&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SqRcXJst--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626335192951/kFXnKav0d.jpeg"&gt;
            &lt;/td&gt;
    &lt;td&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m32mdqW7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626335205811/lm-d9SWPF.jpeg"&gt;
            &lt;/td&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Finally, once your teammate has accepted on their end you are good to go!&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sharing-with-gitlive"&gt;
  &lt;/a&gt;
  Sharing with GitLive
&lt;/h2&gt;

&lt;p&gt;Sharing with the built-in codeshare and then realise you need the extra power of Live Share or Code With Me? No problem, you can switch from the built-in codeshare to Live Share or Code With Me at any time in the IDE.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;strong&gt;VS Code&lt;/strong&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jHRI2U6_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626335225410/4KIN107Wt.jpeg"&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;strong&gt;JetBrains&lt;/strong&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
    &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--juHupmPC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626335236909/5MrdmJmFs.jpeg"&gt;
      &lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#joining-a-codeshare"&gt;
  &lt;/a&gt;
  Joining a codeshare &lt;br&gt;
&lt;/h2&gt;

&lt;p&gt;When your teammate starts codesharing via LiveShare or CodeWithMe and you have a compatible IDE already open you will see a prompt to switch to that IDE window. &lt;br&gt;&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
  &lt;tbody&gt;
  &lt;th&gt; VS Code&lt;/th&gt;
  &lt;th&gt; JetBrains&lt;/th&gt;
    &lt;tr&gt;
    &lt;td&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s7uKkUAc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626335251635/3uOimxO8t.jpeg"&gt;
            &lt;/td&gt;
    &lt;td&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MB5NP23T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626335266157/ny7n4yT4r.jpeg"&gt;
            &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
Here you'll see any notifications regarding joining the codeshare. &lt;br&gt;&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
    &lt;th&gt;VS Code&lt;/th&gt;
    &lt;th&gt;JetBrains&lt;/th&gt;
        &lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DNwwexWH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626335281948/NNH7An7jn.jpeg"&gt;
            &lt;/td&gt;
            &lt;td&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iC7Fbpro--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626335292896/W37TWjflq.jpeg"&gt;
            &lt;/td&gt;
        &lt;/tr&gt;
    
  &lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
Then your teammate's project will open in a new IDE window and you are good to go!&lt;br&gt;
If you didn't have a compatible IDE already open you will be prompted to open the sharing link in the browser instead. &lt;br&gt;&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
    &lt;th&gt;VS Code&lt;/th&gt;
    &lt;th&gt;JetBrains&lt;/th&gt;
        &lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A-WivYM6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626335306676/62p6RCC93.jpeg"&gt;
            &lt;/td&gt;
            &lt;td&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BV_lU1kX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626335318387/NyFi2joTA.jpeg"&gt;
            &lt;/td&gt;
        &lt;/tr&gt;
    
  &lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
From here you can open a compatible IDE if you already have one installed or even join via the browser (Live Share) or using the thin desktop client (Code With Me) &lt;br&gt;&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
  &lt;tbody&gt;
  &lt;th&gt; VS Code&lt;/th&gt;
  &lt;th&gt; JetBrains&lt;/th&gt;
    &lt;tr&gt;
    &lt;td&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9wRHddSu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626335330739/cX8Uwfu7V.jpeg"&gt;
            &lt;/td&gt;
    &lt;td&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o3so87y7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626335340617/qVSRrxAYt.jpeg"&gt;
            &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

</description>
      <category>webdev</category>
      <category>productivity</category>
      <category>programming</category>
      <category>vscode</category>
    </item>
    <item>
      <title>Vue Academy #0: What is VueJs ? (Fastly)</title>
      <author>CodeOzz</author>
      <pubDate>Thu, 15 Jul 2021 11:39:51 +0000</pubDate>
      <link>https://dev.to/codeozz/vue-academy-0-what-is-vuejs-fastly-2eha</link>
      <guid>https://dev.to/codeozz/vue-academy-0-what-is-vuejs-fastly-2eha</guid>
      <description>&lt;h3&gt;
  &lt;a href="#what-is-vuejs-"&gt;
  &lt;/a&gt;
  What is VueJs ?
&lt;/h3&gt;

&lt;p&gt;Vue is a progressive framework for building user interfaces. It's based on component re-use logic.&lt;/p&gt;

&lt;p&gt;You can easily bind your data to the UI (DOM). When you update your data, the dom will be updated automatically (synchronised).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ecosystem"&gt;
  &lt;/a&gt;
  Eco-system
&lt;/h3&gt;

&lt;p&gt;Vue has other module that you can add to your project, for exemple you have &lt;code&gt;vue router&lt;/code&gt; (Routing), &lt;code&gt;vuex&lt;/code&gt; (state manager store), &lt;code&gt;vue cli&lt;/code&gt; (to create easily vuejs project)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#virtual-dom"&gt;
  &lt;/a&gt;
  Virtual DOM
&lt;/h3&gt;

&lt;p&gt;Vue use virtual DOM (VDOM), that is a copy of a DOM in a object (VDOM has no visual).&lt;/p&gt;

&lt;p&gt;If we need to update a value in the DOM, we just need to update this value in the VDOM, after the update we check the difference between DOM &amp;amp; VDOM, and we update the &lt;code&gt;portion&lt;/code&gt; of the current DOM with the new value without impaction the current dom performance !&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#syntax"&gt;
  &lt;/a&gt;
  Syntax
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight vue"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"app"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="si"&gt;{{&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt; &lt;span class="si"&gt;}}&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Vue&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;el&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#app&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello Vue!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Magic ! You data is synchronised in the view ! So if you change message data, dom will be updated&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#directives"&gt;
  &lt;/a&gt;
  Directives
&lt;/h3&gt;

&lt;p&gt;Vue use &lt;strong&gt;directive&lt;/strong&gt; that will improve your code, they are prefixed with &lt;code&gt;v-&lt;/code&gt; to indicate that they are special attributes provided by Vue.&lt;/p&gt;

&lt;p&gt;For exemple you can use &lt;code&gt;v-if&lt;/code&gt; directive to create a component if the condition is true :&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight vue"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;v-if=&lt;/span&gt;&lt;span class="s"&gt;"isShow"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Hey&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;You can also use v-else-if, v-else.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight vue"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;v-if=&lt;/span&gt;&lt;span class="s"&gt;"isCool"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Is Cool&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;v-else&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Not Cool&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;code&gt;v-for&lt;/code&gt; -&amp;gt; We can use it to render a list of items based on an array.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight vue"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;v-for=&lt;/span&gt;&lt;span class="s"&gt;"item in [1, 2, 3]"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; {{ item }} &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;We can easily catch event like &lt;code&gt;click&lt;/code&gt; with v-on !&lt;/p&gt;


  &lt;span&gt; click on me &lt;/span&gt;

&lt;h3&gt;
  &lt;a href="#component-basics"&gt;
  &lt;/a&gt;
  Component basics
&lt;/h3&gt;

&lt;p&gt;A common component will have these specific attribute:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Props:&lt;/strong&gt; Passing Data to Child Components&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Data:&lt;/strong&gt; Data linked to the component&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Methods:&lt;/strong&gt; Methods linked to the component&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Lifecycle hooks:&lt;/strong&gt; Lifecycle hooks allow you to know when your component is created, added to the DOM, updated, or destroyed.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I hope that you learn something and that article will motivate you to try Vue !&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



</description>
      <category>vue</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>10+ Ways To Make Side Income Online as a Developer </title>
      <author>Shreya Purohit</author>
      <pubDate>Thu, 15 Jul 2021 11:30:59 +0000</pubDate>
      <link>https://dev.to/shreya/10-ways-to-make-side-income-online-as-a-developer-hl8</link>
      <guid>https://dev.to/shreya/10-ways-to-make-side-income-online-as-a-developer-hl8</guid>
      <description>&lt;p&gt;Hey there! Today we'll discuss 10+ ways by which you can make a side income as a developer. So without further ado, let's get started!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#contribute-to-open-source-projects-or-make-one"&gt;
  &lt;/a&gt;
  Contribute to Open Source Projects / Or Make One
&lt;/h2&gt;

&lt;p&gt;1.You an contribute to millions of open source projects available on GitHub. It could be resolving issues or improving the documentation. This way you can :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Be a part of awesome communities&lt;/li&gt;
&lt;li&gt;Establish an online presence&lt;/li&gt;
&lt;li&gt;Make your portfolio&lt;/li&gt;
&lt;li&gt;You might end up getting a job if you have an awesome portfolio!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;2.If you love building open source projects, GitHub is an amazing way to make a side income while doing what you love. People out there are willing to give back, you can ask for sponsors on GitHub or support &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ApvQ8-cd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4ecmp2eprs9y8enbxivo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ApvQ8-cd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4ecmp2eprs9y8enbxivo.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#write-blogs"&gt;
  &lt;/a&gt;
  Write blogs
&lt;/h2&gt;

&lt;p&gt;Writing blogs is one of the best thing you can do for yourself as a developer. If you have knowledge, why not help others too? You can write tutorials, tips, advices or your personal stories (how you became a developer). The major profit of having a blog is that it can help you as a portfolio or in freelancing projects . &lt;/p&gt;

&lt;p&gt;There are some websites that pay you to write articles too! Here are some of them: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;hashnode&lt;/li&gt;
&lt;li&gt;medium&lt;/li&gt;
&lt;li&gt;vocal media&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#open-a-yt-channel"&gt;
  &lt;/a&gt;
  Open a YT channel
&lt;/h2&gt;

&lt;p&gt;Opening a YouTube channel of your own is another great way to teach and learn. You can give step-by-step tutorials, share your experiences, give tips and advices.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;BONUS&lt;/strong&gt;: If you've a developer blog already, use it as a script for your videos. You can give a video walkthrough of your blog 😉&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sell-video-courses"&gt;
  &lt;/a&gt;
  Sell Video Courses
&lt;/h2&gt;

&lt;p&gt;If you've enough knowledge to teach someone, you can make courses of your own. There are many platforms that allow you to do the same while making a handsome amount of money.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Udemy&lt;/li&gt;
&lt;li&gt;Skillshare&lt;/li&gt;
&lt;li&gt;Teachable&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#coding-tutor"&gt;
  &lt;/a&gt;
  Coding Tutor
&lt;/h2&gt;

&lt;p&gt;If you love to teach, this can be the perfect method for you to make a living by teaching others for as short as an hour. Some of the platforms where you can teach as a coding tutor are:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Codementor : &lt;a href="https://www.codementor.io/tutors"&gt;Visit here&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Id Tech : &lt;a href="https://www.idtech.com/coding-tutors"&gt;Visit here&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Programming lessons on Fiverr : &lt;a href="https://www.fiverr.com/categories/programming-tech/online-coding-lessons"&gt;Visit here&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;If you're feeling skeptical, read this blog post by Yogesh on &lt;a href="https://blog.yogeshchavan.dev/how-i-made-dollar408-as-an-extra-income-on-codementor-in-one-month"&gt;How he Made $408 As an Extra Income on Codementor In One Month&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#freelancing-work-on-small-projects"&gt;
  &lt;/a&gt;
  Freelancing / Work on small projects
&lt;/h2&gt;

&lt;p&gt;Freelancing is something very big today. There are many people who make full time living working for few hours a day. Some of the great freelancing sites are: &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Fiverr : &lt;a href="https://www.fiverr.com/?source=top_nav"&gt;Visit here&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Upwork : &lt;a href="https://www.upwork.com/"&gt;Visit here&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;People Per Hour : &lt;a href="https://www.peopleperhour.com/"&gt;Visit here&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#ask-for-support"&gt;
  &lt;/a&gt;
  Ask for Support
&lt;/h2&gt;

&lt;p&gt;If you provide quality content to your audience, they will be more than happy to support you in return. You can ask them for support in many ways. Some of them are:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Buy me a coffee: &lt;a href="//buymeacoffee.com/?via=shreyapurohit"&gt;Visit here&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;KoFi : &lt;a href="https://ko-fi.com/"&gt;Visit here&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Paypal Donation : &lt;a href="https://www.paypal.com/in/webapps/mpp/account-selection?refBy=RMZAVFywR51610003394783"&gt;Visit here&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Patreon : &lt;a href="https://www.patreon.com/"&gt;Visit here&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#content-creator"&gt;
  &lt;/a&gt;
  Content Creator
&lt;/h2&gt;

&lt;p&gt;You can be a content creator. Now this includes some of the ways I mentioned above like creating content on YouTube and writing blogs. But do you know Twitter is a powerful tool as a developer for being a content creator? You can build your online presence and promote some good resources to your audience. In return you'll be getting commissions for the share. Pretty good deal, right!  Affiliate marketing can be a powerful strategy to use here.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sell-your-products"&gt;
  &lt;/a&gt;
  Sell Your Products
&lt;/h2&gt;

&lt;p&gt;When you have established a sufficient online presence, you can roll out digital products as per your niche. Now this can include eBooks, 1:1 sessions, snippets and codes, etc.  The best platform to put these products is Gumroad. &lt;a href="https://app.gumroad.com/signup?referrer=shry"&gt;Check it out here.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Like for me, even though I don't have a good online presence for now, I did a experiment by publishing a very own FREE product of developer tools. And believe me, I did earned a good amount here. Tech twitter community is a great place to be in.&lt;/p&gt;

&lt;p&gt;If you're interested, check out my free product Developer tools here: &lt;a href="https://gum.co/devtools"&gt;gum.co/devtools&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sell-themes-and-plugins"&gt;
  &lt;/a&gt;
  Sell Themes and Plugins
&lt;/h2&gt;

&lt;p&gt;This one is my favorite. You can sell many code resources if you love coding. This can include selling code scripts, web plugins, website themes, templates, etc.&lt;/p&gt;

&lt;p&gt;Here are some platforms for the same:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Themeforest&lt;/li&gt;
&lt;li&gt;Theme Snap&lt;/li&gt;
&lt;li&gt;Template Monster&lt;/li&gt;
&lt;li&gt;Code Canyon&lt;/li&gt;
&lt;li&gt;Creative Market&lt;/li&gt;
&lt;li&gt;Codester&lt;/li&gt;
&lt;li&gt;Envato Marketplace&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;The most important key factor to become successful in any of the ways mentioned above is to be consistent. Stay positive!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;That's all for this one. I hope I was able to help you. Thank you for your time!&lt;/p&gt;

&lt;p&gt;Let's connect on &lt;a href="http://twitter.com/eyeshreya"&gt;Twitter&lt;/a&gt;!&lt;/p&gt;

</description>
      <category>developer</category>
      <category>opensource</category>
      <category>onlinepresence</category>
      <category>sideincome</category>
    </item>
    <item>
      <title>New Release: Hazelcast Go Client v1.0.0</title>
      <author>Yüce Tekol</author>
      <pubDate>Thu, 15 Jul 2021 11:18:57 +0000</pubDate>
      <link>https://dev.to/hazelcast/new-release-hazelcast-go-client-v1-0-0-2g5n</link>
      <guid>https://dev.to/hazelcast/new-release-hazelcast-go-client-v1-0-0-2g5n</guid>
      <description>&lt;p&gt;We released &lt;a href="https://github.com/hazelcast/hazelcast-go-client/releases/tag/v1.0.0"&gt;Hazelcast Go Client v1.0.0&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This is the first major release of the revamped Go client. Of course the biggest news is, the client is compatible with Hazelcast 4.x and the upcoming Hazelcast 5.x. Here are the features included in this release:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Distributed Data Structures: &lt;a href="https://pkg.go.dev/github.com/hazelcast/hazelcast-go-client@v1.0.0#Map"&gt;Map&lt;/a&gt;, &lt;a href="https://pkg.go.dev/github.com/hazelcast/hazelcast-go-client@v1.0.0#ReplicatedMap"&gt;Replicated Map&lt;/a&gt;, &lt;a href="https://pkg.go.dev/github.com/hazelcast/hazelcast-go-client@v1.0.0#Queue"&gt;Queue&lt;/a&gt;, &lt;a href="https://pkg.go.dev/github.com/hazelcast/hazelcast-go-client@v1.0.0#Topic"&gt;Topic&lt;/a&gt;, &lt;a href="https://pkg.go.dev/github.com/hazelcast/hazelcast-go-client@v1.0.0#List"&gt;List&lt;/a&gt;, &lt;a href="https://pkg.go.dev/github.com/hazelcast/hazelcast-go-client@v1.0.0#Set"&gt;Set&lt;/a&gt;, &lt;a href="https://pkg.go.dev/github.com/hazelcast/hazelcast-go-client@v1.0.0#PNCounter"&gt;PNCounter&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;Map &lt;a href="https://pkg.go.dev/github.com/hazelcast/hazelcast-go-client@v1.0.0/aggregate"&gt;aggregations&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;Improved Map locks,&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://pkg.go.dev/github.com/hazelcast/hazelcast-go-client/cluster@v1.0.0#hdr-Load_Balancer"&gt;Load balancer&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://pkg.go.dev/github.com/hazelcast/hazelcast-go-client@v1.0.0/cluster#hdr-External_Client_Public_Address_Discovery"&gt;External client public address discovery&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;Lifecycle, cluster membership and &lt;a href="https://pkg.go.dev/github.com/hazelcast/hazelcast-go-client@v1.0.0#hdr-Listening_for_Distributed_Object_Events"&gt;distributed object listeners&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;Smart routing,&lt;/li&gt;
&lt;li&gt;Ownerless client,&lt;/li&gt;
&lt;li&gt;JSON, Identified Data, Portable and Global &lt;a href="https://pkg.go.dev/github.com/hazelcast/hazelcast-go-client@v1.0.0/serialization"&gt;serialization&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;SSL connections (requires Hazelcast Enterprise),&lt;/li&gt;
&lt;li&gt;Username/password credentials (requires Hazelcast Enterprise),&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://pkg.go.dev/github.com/hazelcast/hazelcast-go-client@v1.0.0#hdr-Management_Center_Integration"&gt;Hazelcast Management Center integration&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://pkg.go.dev/github.com/hazelcast/hazelcast-go-client@v1.0.0/cluster#hdr-Hazelcast_Cloud_Discovery"&gt;Hazelcast Cloud integration&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;JSON &lt;a href="https://pkg.go.dev/github.com/hazelcast/hazelcast-go-client@v1.0.0#hdr-Configuration"&gt;configuration&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are some missing features which exist in Go Client v0.6.0, such as the &lt;a href="https://docs.hazelcast.com/imdg/4.2/performance/near-cache.html"&gt;Near Cache&lt;/a&gt;, but we will complete them in the coming months, prioritized by the needs of our users.&lt;/p&gt;

&lt;p&gt;Apart from Hazelcast 4.x+ compatibility, we aimed to implement conventions and best practices of the Go ecosystem. Here are some of the highlights:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Go context: Enables Go client to play well with other libraries that support the context package. Any client function call can be canceled manually or after a deadline. This was one of the most wanted features of the new Go client.&lt;/li&gt;
&lt;li&gt;Go modules: Enables depending on a specific release without third party tools.&lt;/li&gt;
&lt;li&gt;Idiomatic errors: The client library returns errors which can be easily unwrapped using the standard errors package.&lt;/li&gt;
&lt;li&gt;Zero value configuration: The zero value of client configuration is the default configuration. Apart from being encouraged in idiomatic Go, it helps us provide a natural way of supporting JSON configuration.&lt;/li&gt;
&lt;li&gt;Package based code layout: The client code is split into logical packages which collect relevant code together, such as cluster, aggregate, serialization, types and others.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Some useful links:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hazelcast/hazelcast-go-client"&gt;Official repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pkg.go.dev/github.com/hazelcast/hazelcast-go-client"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.hazelcast.com/home/index.html"&gt;Hazelcast main documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We are looking forward to feedback in order to provide the features our users want. Join us at our &lt;a href="https://hazelcastcommunity.slack.com/channels/go-client"&gt;Slack channel at Hazelcast Community&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Good Developer vs. Bad Developer</title>
      <author>Mr. Unity Buddy</author>
      <pubDate>Thu, 15 Jul 2021 11:09:10 +0000</pubDate>
      <link>https://dev.to/unitybuddy/good-developer-vs-bad-developer-1h79</link>
      <guid>https://dev.to/unitybuddy/good-developer-vs-bad-developer-1h79</guid>
      <description>&lt;p&gt;Hello, buddies! No one really wants to be labeled as a bad developer, but the sad reality is that a lot of developers aren’t even aware that they’re bad. So, today is the day to know whether you are a good developer or a Bad developer. Be genuine! &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bad-developer"&gt;
  &lt;/a&gt;
  Bad Developer
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pzwUynvV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622032105734/vwCQw5YO-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pzwUynvV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622032105734/vwCQw5YO-.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
If you’re still a beginner to coding and you’re worried if you’re producing bad code, in terms of ability you are naturally not good right now. However, don’t feel discouraged as there is one major characteristic that makes a developer bad, and as long as you don’t fall into that trap, you have room for improvement (i.e. You’re green, not bad).&lt;/p&gt;

&lt;p&gt;So simply, I'm going to show you some characteristics of Bad coders.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#codes-very-quickly"&gt;
  &lt;/a&gt;
  Codes Very Quickly
&lt;/h3&gt;

&lt;p&gt;Usually these types of bad devs can churn out new features far more quickly than the average dev, and unfortunately people who don’t know code would think these speedy coders are awesome (which only further bolsters the cowboy’s ego). These devs work best alone and for clients with extremely tight deadlines and who are only looking to get feature out as soon as possible.&lt;/p&gt;

&lt;p&gt;Bad coders code very fast because they usually code on the fly — meaning, they code without any planning for future maintainability. Which leads to…&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#messy-unreadable-code"&gt;
  &lt;/a&gt;
  Messy, Unreadable Code
&lt;/h3&gt;

&lt;p&gt;The code design of quickly built projects would be a complete mess (or rather, code design is non-existent). This sort of messy code is often referred to as “Spaghetti Code”, which is not at all as tasty as it sounds.&lt;/p&gt;

&lt;p&gt;Spaghetti code is difficult to understand and is usually unnecessarily large and complex to the point where others will find it difficult to understand what the programmer does, and thus it is usually a nightmare to maintain. This means decreased productivity for the whole team if anyone is unfortunate enough to have to work with a bad coder.&lt;/p&gt;

&lt;p&gt;The result of messy code is…&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#bugs-bugs-everywhere"&gt;
  &lt;/a&gt;
  Bugs. Bugs, Everywhere
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FwqE8cUS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622032206029/8nLN6EkgwE.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FwqE8cUS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622032206029/8nLN6EkgwE.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
If a company’s software grows larger and more complex and their code is still a pile of spaghetti, then it’s just a ticking bomb waiting to explode. &lt;/p&gt;

&lt;p&gt;What’s more, spaghetti code is not extensible. This means that adding new features to a Spaghetti code is like walking in a minefield that will explode, no matter how large or small the step and what direction you take. This is usually because a bad coder jumbled every functionality together, so any change would break the software altogether. This could be prevented with better code design and/or unit tests, but of course, cowboys don’t give a care for whether their code is usable and also don’t care for writing tests (something that takes time). Not to mention, with the way their code is structured thanks to bad design decisions, it’s hardly going to be testable or even debuggable anyway. &lt;/p&gt;

&lt;p&gt;All in all, every bug and error created by a bad developer would cause negative productivity. At first it seems that this cowboy is being super productive by always meeting deadlines other developers won’t dare to promise, but this is at the cost of loads of “unexpected” errors that could have been prevented by well-designed and clean code programmed by a good dev.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#arrogance"&gt;
  &lt;/a&gt;
  Arrogance
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--81zTNpIx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622032254901/NnKcrrTQg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--81zTNpIx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622032254901/NnKcrrTQg.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;As long as you are willing to take responsibility for your mistakes and as long as you are learning from your mistakes, you’re not a bad developer&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The most important attribute that makes  programmers bad is &lt;strong&gt;arrogance&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Bad programmers think their code is perfect and would blame customers for being stupid and for crashing their program rather than reflect on why their software crashed. Cowboy coders are usually selfish devs who don’t have a shred of empathy for others who have to clean up after all the problems they’ve created.&lt;/p&gt;

&lt;p&gt;What’s more, these arrogant programmers also think others are beneath them in terms of intelligence. They’d usually assume people who need comments and who don’t understand their code are too dumb to work with them, but never try to think about why people don’t understand their code. As a result of always thinking they’re right and always thinking other people are inferior, they are uncommunicative when they build features, which can cause a lot of problems for a team. Some may think they’re so good that they would sometimes shun “best practices” or “standards” as they assume their own code is better (without good reason).&lt;/p&gt;

&lt;p&gt;Worst of all, bad programmers are unwilling to listen or learn from mistakes because they don’t acknowledge that they’ve made mistakes — as mentioned before, they usually play the blaming game instead.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#good-developer"&gt;
  &lt;/a&gt;
  Good Developer
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_vSDxHOU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622032269252/KmZcrzxxsS.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_vSDxHOU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622032269252/KmZcrzxxsS.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
After rambling about bad developers for long enough, you probably already have an idea of what makes a good developer. Good developers should make up the bulk of the development workforce, and they usually have the following characteristics:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Awareness that there is always going to be a better developer&lt;/li&gt;
&lt;li&gt;Humbleness and a willingness to take responsibility for mistakes as well as to learn from mistakes&lt;/li&gt;
&lt;li&gt;Writes readable, structured code&lt;/li&gt;
&lt;li&gt;Solid code design that can be debugged easily&lt;/li&gt;
&lt;li&gt;Strives to understand how things work&lt;/li&gt;
&lt;li&gt;Communicates/cooperates well with others in a team&lt;/li&gt;
&lt;li&gt;Open to criticism and different approaches&lt;/li&gt;
&lt;li&gt;Able to keep up with learning new technologies&lt;/li&gt;
&lt;li&gt;Likes solving problems&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Good devs are humble, responsible good buddies who will get things done and make sure everything works as it should, but they lack the curiosity and passion for coding that will make them “great”. That’s ok, however. Most employers only need good devs and they don’t really have a need for “great” developers. You don’t have to feel pressured to be a “great” developer, as you can’t force yourself to be who you aren’t.&lt;/p&gt;

&lt;p&gt;After reading Bad Developer Part, you can understand more about Good Developer. Let's compare both.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#good-developer-vs-bad-developer"&gt;
  &lt;/a&gt;
  Good Developer vs Bad Developer
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--paY31hPB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622072389170/p8EUdn1xT.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--paY31hPB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622072389170/p8EUdn1xT.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A good developer tries to understand their users, is involved in feature design and spec from conception (if possible). A bad developer feels that anything that is not coding is a waste of time.&lt;/li&gt;
&lt;li&gt;A good developer is able to instrument, tune and measure performance. A bad developer doesn’t know what those things are.&lt;/li&gt;
&lt;li&gt;A good developer is obsessed with learning new things, improving processes and voicing concerns. A bad developer is resistant to change.&lt;/li&gt;
&lt;li&gt;A good developer can give accurate estimates and timelines on work and be diligent with status updates. A bad developer makes you chase them up constantly.&lt;/li&gt;
&lt;li&gt;A good developer always puts the team and organisation before themselves. A bad developer only cares about delivering their own work.&lt;/li&gt;
&lt;li&gt;A good developer knows how to break down complex functionality into small deliverable pieces. A bad developer gets bogged down in problems and no progress can be seen “until it’s all done”.&lt;/li&gt;
&lt;li&gt;A good developer understands their work only has value once it reaches production and satisfies customers needs. A bad developer painstakingly agonises about writing code which is only ever works on their machine.&lt;/li&gt;
&lt;li&gt;A good developer will always look to write the minimum amount of code possible to solve a problem. A bad developer believes their worth is related to the amount of code they write.&lt;/li&gt;
&lt;li&gt;Good developers understand the value of code reviews and pair programming. Bad developers get offended when someone critiques their work.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So buddies, honestly, I have 3 characteristics of a Bad developer and I'm trying to change them. Hey see? That's a good developer's characteristic! What about you? Bad Developer or a Good Developer? &lt;/p&gt;

</description>
      <category>python</category>
      <category>programming</category>
    </item>
    <item>
      <title>Opensource... NO more free?!</title>
      <author>Tech Guy</author>
      <pubDate>Thu, 15 Jul 2021 11:02:02 +0000</pubDate>
      <link>https://dev.to/computergeek/opensource-no-more-free-39m6</link>
      <guid>https://dev.to/computergeek/opensource-no-more-free-39m6</guid>
      <description>&lt;p&gt;So, few days ago a new technology  entered in industry github copilot.&lt;/p&gt;

&lt;p&gt;Github copilot is basically a code suggestion software like other software like tabnine and kite but copilot is much more than that, it actually gives you the whole function of code just with one tab button on your keyboard. &lt;/p&gt;

&lt;p&gt;What is point of concern then?&lt;br&gt;
The problem  is that github copilot will  auto-complete your code if it has previously written somewhere on github.&lt;/p&gt;

&lt;p&gt;Then what?&lt;br&gt;
Github is web-based version control software, its free of cost all the people in whole world use this thing to save all their programs there so that everyone can work on same thing. It is believed that open source applications are free and everyone can use it but here comes game changing move from microsoft they are trying to commercialize copilot! &lt;/p&gt;

&lt;p&gt;The time ivested by billions of people  in writing code for opensource just to help each other and to grow developer community will all be monetized, Microsoft wanted to make profit from these people!&lt;/p&gt;

&lt;p&gt;So, i wanted to know what you guys think about this github copilot thing as many developers then would not be able to work on opensource as now and if microsoft commercialized github copilot and further github will this affect the developer community? &lt;/p&gt;

</description>
      <category>opensource</category>
      <category>github</category>
      <category>copilot</category>
    </item>
    <item>
      <title>Why React Developer Tools Required For Programming Productivity?
</title>
      <author>Amelia Smith</author>
      <pubDate>Thu, 15 Jul 2021 10:50:37 +0000</pubDate>
      <link>https://dev.to/amelias26018837/why-react-developer-tools-required-for-programming-productivity-2e1d</link>
      <guid>https://dev.to/amelias26018837/why-react-developer-tools-required-for-programming-productivity-2e1d</guid>
      <description>&lt;p&gt;Today's application and website developers need the most solid tools. As in the digital world the demand for new websites, applications and software is increasing with continuous process. Developers and programmers need to create more user-friendly Web content and sources better managed by tools.&lt;/p&gt;

&lt;p&gt;With this in remembrance, let's take a look at the most competent React developer tools in 2021. We first quickly introduced React, what developer tools are, how to use &lt;em&gt;React developer tools&lt;/em&gt;. &lt;/p&gt;

&lt;p&gt;Let's sink in!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What is React Developer Tools&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;React Developer Tools are a sequence of libraries, Frameworks and extensions that simplify React improvement. Developers use trying out utilities, code generators, debugging extensions, and different React Tools to build greater robust, more dignified strong code while conserving precious development time.&lt;/p&gt;

&lt;p&gt;Most of React developer tools can use as extensions on Chrome and Firefox browser.  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Why React Developer Tools Required For Programming Productivity?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Conceivably "required" is too strong a word. Apparently, developers aren't obliged to apply to React developer tools, in step with. The most productive developers who want to create more reliable code and do it quicker should use React tools. &lt;/p&gt;

&lt;p&gt;So yes, we're creating a case for developers to apply to React tools. Let us discuss is why they may be an indispensable part of any DevOps project.&lt;/p&gt;

&lt;p&gt;You can look at and debug your software a long way less complicated and greater conveniently.&lt;/p&gt;

&lt;p&gt;You can set up developer tools seamlessly onto your browser so that you have an effective resource inside clean attain each time you want it.&lt;/p&gt;

&lt;p&gt;The "components" tab allows you a briefly review your root React components rendered on a provided page. You can view and edit your components without a fuss.&lt;/p&gt;

&lt;p&gt;You can see a precis of how your software re-renders through the use of the provided "profiler" tab. This functionality offers you neat visualization of your re-renders with color-coded flame graphs and correct timing information.&lt;/p&gt;

&lt;p&gt;In short, React developer tools are an important part of any developer toolkit because they can see how changing one component affects the rest. With the development of React, its benefits become more obvious. During the software testing phase, the tool identifies problems and allows developers to fix them before final testing.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How to Use React Developer Tools&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Let's discuss How we can use React developer tools in Chrome and Firefox browsers. &lt;/p&gt;

&lt;p&gt;First, you need to download   Extensions/add-ons for Firefox can be found here, and Chrome can be found here. Download and install it in your system browser.&lt;/p&gt;

&lt;p&gt;After it is installed and downloaded, you will see a new tab called React in Chrome DevTools. Clicking on this tab will provide you with a list of root React components present on the page, as well as the child components of each root. Make. You can quickly open React Devtools by right-clicking on the corresponding page and selecting the Checkout option.&lt;/p&gt;

&lt;p&gt;If you choose a component on this tab, you can view and edit its attachments and their status in the appropriate area. In addition, you can use the breadcrumb function below to check selected components,  components created by creators, etc.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VCwXbVzh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a6kvn07h93yj2gnn7b8q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VCwXbVzh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a6kvn07h93yj2gnn7b8q.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;              Image: [Source](https://reactjs.org/blog/2014/01/02/react-chrome-developer-tools.html) 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;When using the Elements tab to inspect DOM elements, you can switch to the Respond tab, automatically selecting the corresponding components. If the component has a breakpoint during the rendering phase, the component will also be selected automatically. Once selected, we can browse the render tree and see components affect another &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Take Away&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;There are so many React developer tools with different functionalities and uses. These tools make programming productivity faster, reliable, and secure, and you can see the rapid boost in the development of applications. If you want to leverage the more benefits of the tools, you can also connect with &lt;a href="https://www.bacancytechnology.com/reactjs-development"&gt;Reactjs development services&lt;/a&gt; for the best usage of React Tools. &lt;/p&gt;

</description>
    </item>
    <item>
      <title>Basic Bash Automation: A script to organize my downloads folder</title>
      <author>Patrick Wendo</author>
      <pubDate>Thu, 15 Jul 2021 10:26:56 +0000</pubDate>
      <link>https://dev.to/w3ndo/basic-bash-automation-a-script-to-organize-my-downloads-folder-44e3</link>
      <guid>https://dev.to/w3ndo/basic-bash-automation-a-script-to-organize-my-downloads-folder-44e3</guid>
      <description>&lt;p&gt;Recently, I dual booted my PC with Ubuntu and Windows and for the first couple of days on Ubuntu, I was doing a lot of downloads to set things up and also cause school is in full swing and that just means a lot of PDFs, word documents and power point presentations. &lt;/p&gt;

&lt;p&gt;Now my downloads folder is a mess, so naturally, instead of spending 5 minutes organizing it, I spent 30 minutes writing a bash script to organize it for me. &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ibrEEkWK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z03slbwhwjjthm0jfmll.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ibrEEkWK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z03slbwhwjjthm0jfmll.png" alt="Drake MEME"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So let's talk bash.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-bash"&gt;
  &lt;/a&gt;
  What is Bash?
&lt;/h2&gt;

&lt;p&gt;It's an acronym  for the Bourne-Again SHell.&lt;/p&gt;

&lt;p&gt;By Definition, it's the command language for the GNU operating system. Whenever you open a terminal on Ubuntu, those commands like mv, cp and others are bash terminal commands. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lets-write-some-bash"&gt;
  &lt;/a&gt;
  Let's write some Bash
&lt;/h2&gt;

&lt;p&gt;Create a file called &lt;code&gt;organize.sh&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;As with most scripts, we first need to specify that the script we're about to write is bash. To do this, we use the shebang &lt;code&gt;#!/bin/bash&lt;/code&gt;&lt;br&gt;
This indicates that the contents of this file will be a bash script.&lt;/p&gt;

&lt;p&gt;After this, we need to specify where we will move all my data during the organization. For context, I have images, audio, videos, PDFs, power points, other bash scripts, zip files and others. So for simplicity's sake, we will only do 6 folders; Images, Audio, Video, PDFs, Scripts &amp;amp; Compressed Files. We can create all these folders using the &lt;code&gt;mkdir&lt;/code&gt; command like so;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mkdir Image_Files Audio_Files Video_Files PDFs Scripts Compressed_Files
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now that we have this, all that is left is to move the files into these folders. Here's where we need to get kinda smart. For something like image files, we identify them using different file extensions like &lt;code&gt;.png .jpg .gif .tif&lt;/code&gt; and others. So we need our script to look for anything with that specific extension and move it to the folder labelled Image_Files. A command like that would look something like this;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mv *.png *.jpg *.jpeg *.tif *.tiff *.bpm *.gif *.eps *.raw Image_Files
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The asterisk(*) will match any character that precedes the extension. It is part of a regular expression syntax, but that's beyond the scope of this article.&lt;/p&gt;

&lt;p&gt;So similarly, we match the file extensions for the other file types. We end up with something like this;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#Image Files
mv *.png *.jpg *.jpeg *.tif *.tiff *.bpm *.gif *.eps *.raw Image_Files

# Audio Files 
 mv *.mp3 *.m4a *.flac *.aac *.ogg *.wav Audio_Files

 # Video Files 
 mv *.mp4 *.mov *.avi *.mpg *.mpeg *.webm *.mpv *.mp2 *.wmv Video_Files

# PDFs 
mv *.pdf PDFs

# Scripts
mv *.py *.rb *.sh Scripts

#Compressed Files
mv *.rar *.zip Compressed_Files
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Under Scripts, I added Python(.py) and Ruby(.rb) files because they can also be used to do some system scripting. We can also add some echo commands to let us know where the script is at while it's running. This doesn't need to be anything fancy, we can just add a single line at the end like this;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;echo "All done organizing your messy messy downloads Folder"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once you save the file, you will need to do a one more thing. The file doesn't have execute privileges just yet, but that's not a hard thing to solve. On your Linux terminal, type;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;chmod u+x organize.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;where organize.sh is the name of the file. &lt;br&gt;
Now you can move this file into your downloads folder and run &lt;code&gt;./organize.sh&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Did it work? Maybe a bit too well. The organize.sh file sorted itself into the scripts folder. To solve that, I decided to add these 3 lines at &lt;em&gt;the end&lt;/em&gt; of my script.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd Scripts 
mv organize.sh ..
cd ..
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;so the final file should look like this;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#!/bin/bash

#Create Folders
mkdir Image_Files Audio_Files Video_Files PDFs Scripts Compressed_Files

#Image Files
mv *.png *.jpg *.jpeg *.tif *.tiff *.bpm *.gif *.eps *.raw Image_Files

# Audio Files 
 mv *.mp3 *.m4a *.flac *.aac *.ogg *.wav Audio_Files

 # Video Files 
 mv *.mp4 *.mov *.avi *.mpg *.mpeg *.webm *.mpv *.mp2 *.wmv Video_Files

# PDFs 
mv *.pdf PDFs

# Scripts
mv *.py *.rb *.sh Scripts

#Compressed Files
mv *.rar *.zip Compressed_Files

cd Scripts 
mv organize.sh .. 
cd ..

echo "All done organizing your messy messy downloads Folder"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What this does, is that it moves into the Scripts folder, removes the organize.sh script and moves it to the Downloads folder and then changes the current directory back to the Downloads folder. Now whenever you organize your downloads folder, the organize.sh script will not sort itself into the scripts folder.&lt;/p&gt;

&lt;p&gt;Technically, we're done with the organize script. But if you want to learn how to make it into a system alias, keep reading.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#aliases-and-bashrc"&gt;
  &lt;/a&gt;
  Aliases and Bashrc
&lt;/h2&gt;

&lt;p&gt;Why don't I want the organize script in the scripts folder? Because I want to add an alias to the .bashrc file. This would allow me to run a single command at any time, in any directory and have it sort my Downloads folder. A bit over-engineered, but that's how you learn. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#so-what-are-aliases"&gt;
  &lt;/a&gt;
  So what are Aliases?
&lt;/h3&gt;

&lt;p&gt;An alias in general English is defined as a false name that someone is identified by. In programming, it is defined as &lt;em&gt;A nickname for something, which behaves in all ways as though you’d used the original name instead of the nickname.&lt;/em&gt; &lt;/p&gt;

&lt;p&gt;A common command in bash is the ls command. But people can mistype it as sl. To avoid the shell telling you that it doesn't understand what you're saying, you can have an alias such that whenever you type sl, it executes the ls command. Such an alias would be like;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;alias sl=ls
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Another use of aliases is to execute verbose command with as few words as possible. For instance, instead of typing &lt;code&gt;npx create-react-app newApp&lt;/code&gt; you could have an alias as &lt;code&gt;cra newApp&lt;/code&gt;. This would be defined by:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;alias cra="npx create-react-app"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You get the point. So now our alias to organize would have to be;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;alias organize="cd ~/Downloads &amp;amp;&amp;amp; ./organize.sh"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But this alias is only good for the currently running terminal. If we close this terminal, we lose this alias. So we need some permanence. We can do this by putting it in our .bashrc file. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#bashrc"&gt;
  &lt;/a&gt;
  Bashrc???
&lt;/h3&gt;

&lt;p&gt;The .bashrc is a configuration file that is run whenever the user logs in. It includes setting up or enabling: coloring, completion, shell history, command aliases.&lt;/p&gt;

&lt;p&gt;To edit your .bashrc using vim, you can just use&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;vim ~/.bashrc
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then go to the final line and insert this command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;alias organize="cd ~/Downloads &amp;amp;&amp;amp; ./organize.sh"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Save the file and then don't forget to run &lt;code&gt;source ~/.bashrc&lt;/code&gt; so that you can have those changes enacted on the current terminal. &lt;/p&gt;

&lt;p&gt;Now everything is set up and you can always organize your downloads folder by running the organize command. &lt;/p&gt;

&lt;p&gt;You can find the github repo &lt;a href="https://github.com/W3NDO/Organize"&gt;Here&lt;/a&gt;&lt;/p&gt;

</description>
      <category>bash</category>
      <category>linux</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Schema-driven development in 2021</title>
      <author>Eddy Nguyen</author>
      <pubDate>Thu, 15 Jul 2021 10:25:28 +0000</pubDate>
      <link>https://dev.to/eddeee888/schema-driven-development-in-2021-2708</link>
      <guid>https://dev.to/eddeee888/schema-driven-development-in-2021-2708</guid>
      <description>&lt;p&gt;Schema-driven development is an important concept to know in 2021. A lot of full-stack applications are built with schema-driven technologies. Schema-driven development could help teams build products better and faster. What exactly is schema-driven development? What are the benefits of schema-driven development? We will explore the answers to these questions in this article.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-schemadriven-development"&gt;
  &lt;/a&gt;
  What is schema-driven development?
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#the-schema-is-a-contract"&gt;
  &lt;/a&gt;
  The schema is a contract
&lt;/h3&gt;

&lt;p&gt;First, let's understand what a schema is. A schema is a &lt;em&gt;contract&lt;/em&gt; between two sides of a system. The schema communicates the type of requests that can be made and the expected type of response. &lt;/p&gt;

&lt;p&gt;Depending on the context where the schema is used, each side could play a different role. For example, in traditional web applications, the side making a request is the client or browser. The side returning a response is the application server.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DM4h33TJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h7byqt1ej1oc1ppf9v5s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DM4h33TJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h7byqt1ej1oc1ppf9v5s.png" alt="Diagram of a Client making request to a Server following schema specifications"&gt;&lt;/a&gt;Example of a client making request to a server based on schema specification&lt;/p&gt;

&lt;p&gt;A schema follows a specific, unambiguous type of language defined by the technology that you use. Schema language is usually programming-language agnostic that communicates common software ideas such as objects, enumeration, field types (e.g. string, integer). Some common schema languages you may have encountered before are YAML and JSON. The client and server should understand these concepts to fulfil their part of the contract. &lt;/p&gt;

&lt;p&gt;If we think a system works like a restaurant where the client is the "customer" and the server is the "wait staff". Then, the schema is the "menu". Given a menu, the customer can quickly scan through to find the "dish" (or resource) to consume. In some cases, the customer could see the ingredients and tell to the wait staff to remove items from the final dish.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zIebHvvr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4xr7vp4x0tn13uxfuu2v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zIebHvvr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4xr7vp4x0tn13uxfuu2v.png" alt="SDL-first vs code-first"&gt;&lt;/a&gt;The schema is the menu. Via &lt;a href="https://unsplash.com/photos/Ba93EBcUVMg"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#schemadriven-development-sdd-definition"&gt;
  &lt;/a&gt;
  Schema-driven development ( SDD ) definition
&lt;/h3&gt;

&lt;p&gt;SDD prioritises the design of the schema and uses it as the first-class citizen to communicate the responsibilities of the client and the server. This contract usually becomes the API.&lt;/p&gt;

&lt;p&gt;Let’s say we have a web application being built by two teams: Frontend and Backend.&lt;/p&gt;

&lt;p&gt;A non-SDD development process may look like this:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Frontend team contacts Backend team for data that Backend team owns.&lt;/li&gt;
&lt;li&gt;Backend team receives the request and starts to create the endpoint that returns the data Frontend team needs.&lt;/li&gt;
&lt;li&gt;Backend team finishes the endpoint and lets Frontend team know.&lt;/li&gt;
&lt;li&gt;Frontend team tries out the endpoint but it may not have what they need.&lt;/li&gt;
&lt;li&gt;Backend team goes back and fixes the endpoint.&lt;/li&gt;
&lt;li&gt;Repeat steps 3-6 until Frontend team gets what they need.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;On the other hand, the SSD process may look like this:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Frontend team proposes changes to the schema.&lt;/li&gt;
&lt;li&gt;Backend team understands exactly what they need to implement.&lt;/li&gt;
&lt;li&gt;While Backend team is creating an endpoint that fulfil their part of the contract, Frontend team already knows what that looks like and can mock it out.&lt;/li&gt;
&lt;li&gt;Both teams finish their side of the contract.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Just because you are working with a technology that has a schema does &lt;em&gt;not&lt;/em&gt; mean you are applying SDD. The schema design and discussions must be front and centre for the process to be called SDD.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#benefits-of-schemadriven-development"&gt;
  &lt;/a&gt;
  Benefits of schema-driven development
&lt;/h2&gt;

&lt;p&gt;There are many benefits of schema-driven development, which allows teams to build better and faster applications.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-better-crossteam-communications"&gt;
  &lt;/a&gt;
  1. Better cross-team communications
&lt;/h3&gt;

&lt;p&gt;Effective communication is unambiguous, concise and intentional. These are also the attributes of a schema language. When a team proposes changes to a schema, the team on the other side should know what must be done.&lt;/p&gt;

&lt;p&gt;In fact, I was in numerous projects where complicated changes can be understood from reading the schema proposals.&lt;/p&gt;

&lt;p&gt;Without writing a single line of code. &lt;br&gt;
Without countless chat messages. &lt;br&gt;
Without tortuous video call meetings. &lt;/p&gt;

&lt;p&gt;We just nodded at each other, and knew exactly what must be done. We understood each other as if we somehow develop &lt;a href="https://en.wikipedia.org/wiki/Professor_X"&gt;Professor X&lt;/a&gt;'s level of telepathic power.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#2-better-api-design"&gt;
  &lt;/a&gt;
  2. Better API design
&lt;/h3&gt;

&lt;p&gt;SDD forces developers to think about designing the contract in abstract schema language. This frees up any implementation details from the conversation. If two teams are involved, they can see whether they can fulfil their part of the contract and suggest changes early. This usually results in well thought out API design for both sides of the system.&lt;/p&gt;

&lt;p&gt;If a side cannot fulfil their part of the schema after the implementation phase has started, they can let the other side know and propose different schema changes. This saves a lot of time and money because errors caught in the design process or early in the implementation phase are much cheaper to fix.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#3-independent-client-and-server-development"&gt;
  &lt;/a&gt;
  3. Independent client and server development
&lt;/h3&gt;

&lt;p&gt;Each side of a schema should know exactly what the other side can provide. This knowledge allows development to happen at the same time because we can mock out each side’s payload. In a scenario of a SDD web application, the frontend team should know an endpoint’s response from the schema and therefore can mock said response to code their part without needing to wait for the backend team to do any work.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#4-clear-entity-relationships"&gt;
  &lt;/a&gt;
  4. Clear entity relationships
&lt;/h3&gt;

&lt;p&gt;In software development, we usually need to identify various entities and how they interact with each other. Schema is a great way to represent said relationships. &lt;/p&gt;

&lt;p&gt;For example, a &lt;code&gt;Farm&lt;/code&gt; entity may house many &lt;code&gt;Bull&lt;/code&gt; entities and one &lt;code&gt;Bull&lt;/code&gt; entity can only stay in one &lt;code&gt;Farm&lt;/code&gt; entity at a time. This relationship can be written in the following made-up &lt;strong&gt;Bull Schema Language&lt;/strong&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight graphql"&gt;&lt;code&gt;&lt;span class="err"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Bull&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Schema&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Language&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;BS&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Language&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;entity&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Bull&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="err"&gt;entity&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Farm&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;bulls&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Bull&lt;/span&gt;&lt;span class="err"&gt;[]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;An&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Bulls&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#5-typesafety"&gt;
  &lt;/a&gt;
  5. Type-safety
&lt;/h3&gt;

&lt;p&gt;Type-safety is important when building medium to large applications. A lot of bugs can be caught at compile time by using languages like Go or TypeScript.&lt;/p&gt;

&lt;p&gt;A schema has information about the types and interfaces of entities, requests and responses. There are usually tooling in the ecosystem that could help generate code which conforms to the types declared in the schema.&lt;/p&gt;

&lt;p&gt;When code can be generated from the schema, it helps cut down a lot of time and effort in development as developers can focus on the business logic, rather than writing boilerplate-y code to send requests and responses. Some examples of code generators are: &lt;a href="https://www.graphql-code-generator.com/"&gt;GraphQL Code Generator&lt;/a&gt;, &lt;a href="https://github.com/swagger-api/swagger-codegen"&gt;Swagger Codegen&lt;/a&gt; etc.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#examples-of-schemadriven-development-technologies"&gt;
  &lt;/a&gt;
  Examples of schema-driven development technologies
&lt;/h2&gt;

&lt;p&gt;In 2021, SDD can be applied end-to-end when building applications. In this section, let’s look at some examples of SDD technologies.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#graphql"&gt;
  &lt;/a&gt;
  GraphQL
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://graphql.org/"&gt;GraphQL&lt;/a&gt; is developed by Facebook initially for their mobile app and has been adopted widely across web apps.&lt;/p&gt;

&lt;p&gt;GraphQL's schema is called &lt;strong&gt;Schema Definition Language (SDL)&lt;/strong&gt;. Given a schema, GraphQL clients can declare the fields they want to query. This drastically reduces the amount of data that is sent over the internet because the client usually only needs a subset of an entity attributes. Learn more about &lt;a href="https://graphql.org/learn/schema/"&gt;GraphQL schema&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;There are numerous implementations of GraphQL clients and servers. You will be spoiled for choice when you are in this space. You can check out a list of outstanding GraphQL related libraries &lt;a href="https://graphql.org/code/"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To build clients and servers, you will need consistent tooling and support. The GraphQL open-source community is truly astonishing in this regard. &lt;a href="https://twitter.com/TheGuildDev"&gt;The Guild&lt;/a&gt; is the main powerhouse coordinating a myriad of GraphQL projects.&lt;/p&gt;

&lt;p&gt;Remember how I was telling you code can be generated from the schema? &lt;a href="https://twitter.com/dotansimha"&gt;@dotansimha&lt;/a&gt; takes home the cake for creating a highly versatile plugin-based &lt;a href="https://www.graphql-code-generator.com/"&gt;GraphQL Code Generator&lt;/a&gt; that works for various clients and servers.&lt;/p&gt;

&lt;p&gt;There is also &lt;a href="https://gqlgen.com/"&gt;gqlgen&lt;/a&gt; which is a Go-based server and a code generator. If you want the performance of Go, in a qualified GraphQL server, with type-safety and heaps of other functionalities, gqlgen is the one you’d want. 🤩&lt;/p&gt;

&lt;p&gt;Here's an example in GraphQL schema:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight graphql"&gt;&lt;code&gt;&lt;span class="k"&gt;query&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;bull&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ID&lt;/span&gt;&lt;span class="p"&gt;!)&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Bull&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;farm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ID&lt;/span&gt;&lt;span class="p"&gt;!)&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Farm&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="k"&gt;type&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Bull&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;ID&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="k"&gt;type&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Farm&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;ID&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;bulls&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Bull&lt;/span&gt;&lt;span class="p"&gt;!]!&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
  &lt;tr&gt;
    &lt;td&gt;&lt;b&gt;Common use case&lt;/b&gt;&lt;/td&gt;
    &lt;td&gt;Browser/Mobile to Server/s communication&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;&lt;b&gt;Clients&lt;/b&gt;&lt;/td&gt;
    &lt;td&gt;
&lt;a href="https://relay.dev/"&gt;Relay&lt;/a&gt;, &lt;a href="https://www.apollographql.com/docs/react/"&gt;Apollo Client&lt;/a&gt;, &lt;a href="https://formidable.com/open-source/urql/docs/"&gt;urql&lt;/a&gt;, &lt;a href="https://graphql.org/code/"&gt;and more&lt;/a&gt;
&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;&lt;b&gt;Servers&lt;/b&gt;&lt;/td&gt;
    &lt;td&gt;
&lt;a href="https://www.apollographql.com/docs/apollo-server/"&gt;Apollo Server&lt;/a&gt;, &lt;a href="https://gqlgen.com/"&gt;gqlgen&lt;/a&gt;, &lt;a href="https://nexusjs.org/"&gt;Nexus&lt;/a&gt;, &lt;a href="https://graphql.org/code/"&gt;and more&lt;/a&gt;
&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt; 

&lt;h4&gt;
  &lt;a href="#a-quick-note-about-graphql-and-sdd"&gt;
  &lt;/a&gt;
  A quick note about GraphQL and SDD
&lt;/h4&gt;

&lt;p&gt;If you are coming from the wonderful world of GraphQL, you might hear the terms &lt;strong&gt;schema-first development&lt;/strong&gt;, &lt;strong&gt;Schema Definition Language first ( SDL-first )&lt;/strong&gt; and &lt;strong&gt;code-first&lt;/strong&gt; being thrown around a lot. I will use this section to clarify what each term means.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Schema-first development&lt;/strong&gt; is the process of building software where schema-design is prioritised. This is the same as &lt;strong&gt;schema-driven development&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;SDL-first&lt;/strong&gt; is an implementation approach where code is often generated from the schema.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Code-first&lt;/strong&gt; is an implementation approach where resolvers are created first and the schema is generated from the code.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Both &lt;strong&gt;SDL-first&lt;/strong&gt; and &lt;strong&gt;code-first&lt;/strong&gt; approaches in the context of GraphQL &lt;em&gt;can be&lt;/em&gt; schema-driven development if the schema design is the number one focus. It &lt;em&gt;might&lt;/em&gt; seem like you are doing SDD by using the &lt;strong&gt;SDL-first&lt;/strong&gt; approach because both processes start from making changes to the schema. However, it is not SDD if the team providing the resource ( i.e. the Backend team in the example in "schema-driven development definition" section ) does not want to discuss the schema changes up front with the team consuming the resource ( i.e. the Frontend team ).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RrmTD5fp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xunzxs4xhcgsjovz6s81.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RrmTD5fp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xunzxs4xhcgsjovz6s81.png" alt="SDL-first vs code-first"&gt;&lt;/a&gt;SDL-first, code-first and schema-driven development - By &lt;a href="https://twitter.com/nikolasburk"&gt;@nikolasburk&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For those who are not familiar with GraphQL, you have just stumbled upon something that I'd like to called &lt;strong&gt;GraphQL: Civil War&lt;/strong&gt;. You can do a &lt;a href="https://www.google.com/search?q=sdl-first+vs+code+first&amp;amp;rlz=1C5CHFA_enAU879AU879&amp;amp;oq=sdl-&amp;amp;aqs=chrome.0.69i59j69i57j69i59l2j0l3j69i60.1511j0j7&amp;amp;sourceid=chrome&amp;amp;ie=UTF-8"&gt;Google search on SDL-first vs code-first&lt;/a&gt; to learn more about the ideology of each approach.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#grpctwirp"&gt;
  &lt;/a&gt;
  gRPC/Twirp
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://grpc.io/"&gt;gRPC&lt;/a&gt; and &lt;a href="https://twitchtv.github.io/twirp/docs/intro.html"&gt;Twirp&lt;/a&gt; are Remote Procedure Call frameworks. gRPC is developed by Google and Twirp is developed by &lt;a href="https://www.twitch.tv/"&gt;Twitch&lt;/a&gt;. They both use &lt;a href="https://developers.google.com/protocol-buffers"&gt;Protocol Buffers&lt;/a&gt; (Protobuf) as the &lt;strong&gt;Interface Definition Language&lt;/strong&gt;. Protobuf is also the serialisation protocol for structured data.&lt;/p&gt;

&lt;p&gt;gRPC and Twirp are commonly used in a &lt;a href="https://en.wikipedia.org/wiki/Microservices"&gt;micro-service architecture&lt;/a&gt;. The client is the service making the request and the server is the service returning the response. Services can choose to send data encoded using Protobuf or JSON. Protobuf can be serialised and sent faster than JSON. JSON is useful if you need to debug calls between services.&lt;/p&gt;

&lt;p&gt;They both support code generation for clients and servers in many languages: Go, PHP, Ruby, TypeScript, etc. You can see &lt;a href="https://grpc.io/docs/languages/"&gt;gRPC supported languages here&lt;/a&gt; and &lt;a href="https://github.com/twitchtv/twirp#implementations-in-other-languages"&gt;Twirp supported languages here&lt;/a&gt;. This works out great as companies with micro-service architecture may choose different languages for each service.&lt;/p&gt;

&lt;p&gt;At &lt;a href="https://99designs.com"&gt;99designs&lt;/a&gt;, we have backends in different languages: Go, PHP and Ruby. By using Twirp, we allow teams to code in their preferred language while maintaining a consistent, type-safe and convenient way to send data from one service to another.&lt;/p&gt;

&lt;p&gt;Here's an example in Protobuf:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight protobuf"&gt;&lt;code&gt;&lt;span class="kd"&gt;service&lt;/span&gt; &lt;span class="n"&gt;FarmingApi&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;rpc&lt;/span&gt; &lt;span class="n"&gt;GetBull&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;GetBullRequest&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;returns&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Bull&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;rpc&lt;/span&gt; &lt;span class="n"&gt;GetFarm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;GetFarmRequest&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;returns&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Farm&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;message&lt;/span&gt; &lt;span class="nc"&gt;Bull&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;message&lt;/span&gt; &lt;span class="nc"&gt;GetBullRequest&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;message&lt;/span&gt; &lt;span class="nc"&gt;Farm&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;repeated&lt;/span&gt; &lt;span class="n"&gt;Bull&lt;/span&gt; &lt;span class="na"&gt;bulls&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;message&lt;/span&gt; &lt;span class="nc"&gt;GetFarmRequest&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
  &lt;tr&gt;
    &lt;td&gt;&lt;b&gt;Common use case&lt;/b&gt;&lt;/td&gt;
    &lt;td&gt;Server to server communication&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;&lt;b&gt;Clients&lt;/b&gt;&lt;/td&gt;
    &lt;td&gt;Automatically generated for different languages&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;&lt;b&gt;Servers&lt;/b&gt;&lt;/td&gt;
    &lt;td&gt;Automatically generated for different languages&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#prisma"&gt;
  &lt;/a&gt;
  Prisma
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.prisma.io/"&gt;Prisma&lt;/a&gt; is an Object–relational mapping ( ORM ) library which represents database models through a central schema written in &lt;strong&gt;Prisma Schema Language ( PSL )&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The Prisma schema is effortlessly easy to read. It clearly shows model relationships and field types. On top of that, other important information such as database connection is also stored in the schema. Learn more about &lt;a href="https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference"&gt;Prisma schema&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;From the schema, a &lt;a href="https://www.prisma.io/docs/concepts/components/prisma-client"&gt;TypeScript Prisma Client&lt;/a&gt; can be generated that can be used in Node.js applications - including Next.js! A &lt;a href="https://github.com/prisma/prisma-client-go"&gt;Go Prisma Client&lt;/a&gt; is also in the works.&lt;/p&gt;

&lt;p&gt;On the other side of the schema, Prisma has a sophisticated &lt;a href="https://www.prisma.io/docs/concepts/components/prisma-Migrate"&gt;Prisma Migrate&lt;/a&gt; feature to keep the database in sync with the schema. What's great about this is that it works for multiple types of database: PostgreSQL, MySQL and SQLite with support coming for other types!&lt;/p&gt;

&lt;p&gt;Personally, I normally don't care for traditional ORMs. I think they are a type of abstraction that requires a lot of work to maintain while hardly making the relationships of entities clearer to developers. I'm a &lt;a href="https://eddy.works/blog/i-have-worked-with-lazy-impatient-and-opinionated-software-engineers#the-lazy-engineer"&gt;lazy developer&lt;/a&gt; so anything that's remotely hard is a turn off. &lt;/p&gt;

&lt;p&gt;Prisma is the only ORM that hits the sweet spot for me. It is easy to see the relationships of entities without connecting to the database and click through 200 tables to build up a mental map to connect all the pieces together. The TypeScript Prisma Client is generated with strong type-safety. It's almost like I have two other senior developers watching over me. And when I'm about to do something silly they would be like: "Tsk tsk don't do that, do this!". 😍&lt;/p&gt;

&lt;p&gt;Here's an example in Prisma schema:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight graphql"&gt;&lt;code&gt;&lt;span class="err"&gt;datasource&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;db&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;provider&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;"&lt;/span&gt;&lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="err"&gt;"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="err"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;"&lt;/span&gt;&lt;span class="n"&gt;PRISMA_DATABASE_URL&lt;/span&gt;&lt;span class="err"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="err"&gt;generator&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;client&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;provider&lt;/span&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="err"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;"&lt;/span&gt;&lt;span class="n"&gt;prisma&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="n"&gt;js&lt;/span&gt;&lt;span class="err"&gt;"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="err"&gt;model&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Bull&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;@id&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;@default&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;uuid&lt;/span&gt;&lt;span class="err"&gt;(&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;farm&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="n"&gt;Farm&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;farmId&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="err"&gt;model&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Farm&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;@id&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;@default&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;uuid&lt;/span&gt;&lt;span class="err"&gt;(&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;bulls&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Bull&lt;/span&gt;&lt;span class="err"&gt;[]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
  &lt;tr&gt;
    &lt;td&gt;&lt;b&gt;Common use case&lt;/b&gt;&lt;/td&gt;
    &lt;td&gt;Server to database communication&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;&lt;b&gt;Clients&lt;/b&gt;&lt;/td&gt;
    &lt;td&gt;TypeScript Prisma Client, Go Prisma Client&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;&lt;b&gt;Supported databases&lt;/b&gt;&lt;/td&gt;
    &lt;td&gt;PostgreSQL, MySQL and SQLite ( as of July 2021 )&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  🙌 Summary
&lt;/h2&gt;

&lt;p&gt;Schema-driven development is becoming more relevant in 2021 with many benefits: better cross-team communications, better API design, independent client and server development, clear entity relationships and type-safety. You can easily build a full-stack application with SDD technologies such as GraphQL, Twirp and Prisma. &lt;/p&gt;

&lt;p&gt;I hope you had fun reading this article as much as I did researching and writing it. For similar posts about software engineering, follow me on Twitter &lt;a href="https://twitter.com/eddeee888"&gt;@eddeee888&lt;/a&gt;. 🤙&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>graphql</category>
      <category>protobuf</category>
      <category>prisma</category>
    </item>
    <item>
      <title>Best Top 3 Themes for VSCODE</title>
      <author>CoderZ90</author>
      <pubDate>Thu, 15 Jul 2021 10:24:58 +0000</pubDate>
      <link>https://dev.to/official_fire/best-top-3-themes-for-vscode-12lk</link>
      <guid>https://dev.to/official_fire/best-top-3-themes-for-vscode-12lk</guid>
      <description>&lt;p&gt;Hello 👋 guys hope you all are fine and safe so today in this blog I will show you the best TOP 3 Themes for VSCODE &lt;/p&gt;

&lt;p&gt;Top of the list comes One Dark Pro&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#1-one-dark-pro"&gt;
  &lt;/a&gt;
  1. &lt;strong&gt;One Dark Pro&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P6U-62cd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6svwgdpidkk71sxz64fd.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P6U-62cd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6svwgdpidkk71sxz64fd.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This theme is very very popular and is one of my favorite theme 😍&lt;br&gt;
Here is the look of this theme &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Qnqt_e0S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a5mvp4fyxbuinmlty43l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Qnqt_e0S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a5mvp4fyxbuinmlty43l.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=zhuangtongfa.Material-theme"&gt;Download This theme&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#2-fresh-material"&gt;
  &lt;/a&gt;
  2. &lt;strong&gt;Fresh Material&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;This theme is best for those who love color 😍 &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4QyMB5CM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p2lwmi04dy662ojsi0pe.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4QyMB5CM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p2lwmi04dy662ojsi0pe.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The look and feel of this theme is very satisfying 😌👌 here how it looks its similar to one Dark Pro &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kzCFxYzV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0jz16504patwv954qf3s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kzCFxYzV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0jz16504patwv954qf3s.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--q-ePAeF4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zl8vyt4qbguux2xsbyti.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q-ePAeF4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zl8vyt4qbguux2xsbyti.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=2ndshift.fresh-material"&gt;Download This theme&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#3-synthwave-84"&gt;
  &lt;/a&gt;
  3. &lt;strong&gt;Synthwave '84&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IzK568lp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dqwxq95r1y2uzed5qs1h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IzK568lp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dqwxq95r1y2uzed5qs1h.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This colour scheme is influenced by the music and the cover artwork of modern Synthwave bands like FM-84, Timecop 1983 and The Midnight. By association, that means I've also taken heavy influence from the excellent retro-tinged artwork of James White (check out his work, it's awesome).&lt;/p&gt;

&lt;p&gt;It also has glow effects ✨ which is very insane &lt;/p&gt;

&lt;p&gt;Here is the look of the theme&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--l9xALROy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/la3aghsgkb36wled6wya.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--l9xALROy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/la3aghsgkb36wled6wya.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;😊 Thankyou for giving your time to read this blog hope you found it useful and interesting &lt;/p&gt;

&lt;p&gt;I have my own youtube channel please 🙏🙂subscribe &lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtube.com/codingfire?sub_confirmation=1"&gt;https://youtube.com/codingfire?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
  </channel>
</rss>
