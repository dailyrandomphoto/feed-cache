<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>10 Useful APIs for Your Next Project</title>
      <author>Harsh Sinha</author>
      <pubDate>Mon, 25 Oct 2021 11:45:09 +0000</pubDate>
      <link>https://dev.to/harshsinha17/10-useful-apis-for-your-next-project-1nog</link>
      <guid>https://dev.to/harshsinha17/10-useful-apis-for-your-next-project-1nog</guid>
      <description>&lt;h1&gt;
  &lt;a href="#what-is-an-api"&gt;
  &lt;/a&gt;
  What is an API?
&lt;/h1&gt;

&lt;p&gt;An API or application Programming Interface is a set of functions that allows applications to access data and interact with external software components, operating systems, or microservices. To simplify, an API delivers a user response to a system and sends the system's response back to a user.&lt;/p&gt;

&lt;p&gt;Here is a list of 10 useful APIs that you might want to use in your next project. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#1nasa-apis"&gt;
  &lt;/a&gt;
  1)&lt;a href="https://api.nasa.gov/"&gt;NASA APIs&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;The objective of these APIs is to make NASA data, including imagery, eminently accessible to application developers.&lt;/p&gt;

&lt;p&gt;These APIs Include:&lt;/p&gt;

&lt;p&gt;i)APOD: Astronomical Picture Of The Day&lt;/p&gt;

&lt;p&gt;ii)Insight: Mars Weather Service API&lt;/p&gt;

&lt;p&gt;iii)Mars Rover Photos: Image data gathered by NASA's Curiosity, Opportunity, and Spirit rovers on Mars. &lt;/p&gt;

&lt;p&gt;And more of them&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#2random-fact"&gt;
  &lt;/a&gt;
  2)&lt;a href="https://www.programmableweb.com/api/random-useless-facts"&gt;Random Fact&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;Get Random Facts! &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#3giphy-api"&gt;
  &lt;/a&gt;
  3)&lt;a href="https://developers.giphy.com/"&gt;GIPHY API&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;GIPHY API helps you integrate the world's largest GIF library, customize a suite of powerful features, and boost engagement with just a few lines of code.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#4openweathermap-api"&gt;
  &lt;/a&gt;
  4)&lt;a href="https://openweathermap.org/current"&gt;OpenWeatherMap API&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;Access current weather data for any location on Earth including over 200,000 cities! The API collects and processes weather data from different sources such as global and local weather models, satellites, radars and a vast network of weather stations. Data is available in JSON, XML, or HTML format&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#5bitly-api"&gt;
  &lt;/a&gt;
  5)&lt;a href="https://dev.bitly.com/"&gt;BitLy API&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;Bitly is the most widely trusted link management platform in the world. By using the Bitly API, you will exercise the full power of your links through automated link customization, mobile deep linking, and click analytics.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#6sunrise-sunset-api"&gt;
  &lt;/a&gt;
  6)&lt;a href="https://sunrise-sunset.org/api"&gt;Sunrise - Sunset API&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;It is a very simple REST api, you only have to do a GET request to get sunset and sunrise times for a given latitude and longitude.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#7spacex-api"&gt;
  &lt;/a&gt;
  7)&lt;a href="https://github.com/r-spacex/SpaceX-API"&gt;SpaceX API&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;Open Source REST API for launch, rocket, core, capsule, starlink, launchpad, and landing pad data.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#8international-space-station-location-api"&gt;
  &lt;/a&gt;
  8)&lt;a href="http://open-notify.org/Open-Notify-API/ISS-Location-Now/"&gt;International Space Station Location API&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;This is a simple api to return the current location of the ISS. It returns the current latitude and longitude of the space station with a unix timestamp for the time the location was valid. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#9google-fonts-api"&gt;
  &lt;/a&gt;
  9)&lt;a href="https://developers.google.com/fonts/docs/developer_api"&gt;Google Fonts API&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;About the API:&lt;br&gt;
The Developer API gives access to the metadata for all families served by Google Fonts. It allows apps to query Google Fonts for the available font families. The REST API supplies data in the JSON format that includes the styles and scripts (called subsets in Google Fonts) in each family. The API can sort the list of families alphabetically, by date added, by number of styles, by trend, or by popularity.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#10marvel-comics-api"&gt;
  &lt;/a&gt;
  10)&lt;a href="https://developer.marvel.com/"&gt;Marvel Comics API&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;If you are a Marvel Comics fan you might want to check out this API! &lt;br&gt;
Anyone with an API key can access the vast library of 1000+ Marvel Comics' data, from what's coming, to 70 years ago! &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;I hope this article was helpful for you&lt;br&gt;
(˵ ͡° ͜ʖ ͡°˵)&lt;br&gt;
Also this was my first &lt;br&gt;
post here on dev.to&lt;/p&gt;

&lt;p&gt;Thank you&lt;br&gt;
( ͡ ͜ʖ ͡ )&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>apis</category>
    </item>
    <item>
      <title>Top 10 dev.to articles of the week🌺.</title>
      <author>Kavindu Santhusa</author>
      <pubDate>Mon, 25 Oct 2021 11:36:45 +0000</pubDate>
      <link>https://dev.to/ksengine/top-10-devto-articles-of-the-week-294d</link>
      <guid>https://dev.to/ksengine/top-10-devto-articles-of-the-week-294d</guid>
      <description>&lt;p&gt;DEV is a community of software developers getting together to help one another out. The software industry relies on collaboration and networked learning. They provide a place for that to happen.&lt;br&gt;
Here is the most popular articles published on this platform.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#1"&gt;
  &lt;/a&gt;
  #1
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://dev.to/0shuvo0/lets-create-a-screen-recorder-with-js-3leb"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VijeTxaS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--p8pbExaT--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_500%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/duxwuftie1d2dnvlv7fi.png" alt="Image of post"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/0shuvo0" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wZgMNup---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j0_lvM9_--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/728097/0f6e1da9-f243-42d0-b446-301ac6ea6412.jpeg" alt="0shuvo0"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/0shuvo0/lets-create-a-screen-recorder-with-js-3leb" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Lets create a screen recorder with JS&lt;/h2&gt;
      &lt;h3&gt;Shuvo ・ Oct 21 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
,
&lt;h2&gt;
  &lt;a href="#2"&gt;
  &lt;/a&gt;
  #2
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://dev.to/tarunfy/how-i-created-and-deployed-another-full-stack-app-in-just-3-days-41eo"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xE9Wbtzb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--Wb1ruaIA--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_500%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k43196iptnrhuo0d9bnl.PNG" alt="Image of post"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/tarunfy" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VawjVvOO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s---eNJry0---/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/305697/ae70f3da-dd2b-44a8-a9f9-02448b523bf7.jpeg" alt="tarunfy"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/tarunfy/how-i-created-and-deployed-another-full-stack-app-in-just-3-days-41eo" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;How I created and deployed another full stack app in just 3 days  &lt;/h2&gt;
      &lt;h3&gt;Tarun Sharma ・ Oct 18 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#react&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#showdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
,
&lt;h2&gt;
  &lt;a href="#3"&gt;
  &lt;/a&gt;
  #3
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://dev.to/ankit01oss/7-github-projects-to-supercharge-your-docker-practices-2i80"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8mjh8eRU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--3y43jITw--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_500%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qj1rzt2u19qwffwgi2gw.png" alt="Image of post"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/ankit01oss" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IqsGe261--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--ul7XbSg_--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/642348/c10c17aa-2556-49b8-9ffa-1c31cc9675e4.png" alt="ankit01oss"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/ankit01oss/7-github-projects-to-supercharge-your-docker-practices-2i80" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;7 GitHub projects to supercharge your Docker practices 🚀🧑‍💻&lt;/h2&gt;
      &lt;h3&gt;Ankit Anand ✨ ・ Oct 23 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#devops&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#docker&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#kubernetes&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#cloud&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
,
&lt;h2&gt;
  &lt;a href="#4"&gt;
  &lt;/a&gt;
  #4
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://dev.to/sagarbarapatre/how-to-turn-google-sheets-into-a-rest-api-and-use-it-with-a-react-application-1pbb"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PtuVFJ02--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--N_M7P9k7--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_500%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y82y53lwk0wrb8drs2x1.png" alt="Image of post"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/sagarbarapatre" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kxr02seM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--Nnun1FpK--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/470482/74b368d4-9604-42ed-ad75-d5a1fc9a6aa2.png" alt="sagarbarapatre"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/sagarbarapatre/how-to-turn-google-sheets-into-a-rest-api-and-use-it-with-a-react-application-1pbb" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;How to Turn Google Sheets into a REST API and Use it with a React Application&lt;/h2&gt;
      &lt;h3&gt;Sagar Barapatre ・ Oct 22 ・ 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#react&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
,
&lt;h2&gt;
  &lt;a href="#5"&gt;
  &lt;/a&gt;
  #5
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://dev.to/j471n/10-css-resources-that-you-should-bookmark-46l6"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eJ2tMNnq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--SS-JfJCQ--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_500%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n4p9rciydqd880rjw6jc.png" alt="Image of post"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/j471n" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BBYX3NMU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--c3GArzgL--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/495014/71a61e33-e7af-4096-a8c7-db8e34db04e7.png" alt="j471n"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/j471n/10-css-resources-that-you-should-bookmark-46l6" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;10 CSS Resources that you should bookmark&lt;/h2&gt;
      &lt;h3&gt;Jatin Sharma ・ Oct 24 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
,
&lt;h2&gt;
  &lt;a href="#6"&gt;
  &lt;/a&gt;
  #6
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://dev.to/javascriptacademy/master-css-positioning-in-5-minutes-2n18"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xOxl0HV5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--hwk5z5jD--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_500%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qerwno1xnu0fv33pyt3n.png" alt="Image of post"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/javascriptacademy" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5hibFiYf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--ehxqwaKf--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/721655/cf6268db-f6d4-4eee-ad3e-7c2970dede90.jpeg" alt="javascriptacademy"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/javascriptacademy/master-css-positioning-in-5-minutes-2n18" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Master CSS positioning in 5 minutes&lt;/h2&gt;
      &lt;h3&gt;Adam Nagy ・ Oct 19 ・ 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
,
&lt;h2&gt;
  &lt;a href="#7"&gt;
  &lt;/a&gt;
  #7
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://dev.to/aviyel/51-git-commands-that-youll-ever-need-to-get-started-with-git-34d5"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oQWHaTP1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--iEBeumEI--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_500%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c3awskbkou0xo4tjlajp.png" alt="Image of post"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/aviyel" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__org__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Jk48Byhz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--8ml24Y9z--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/organization/profile_image/3818/2fd02162-3471-44cd-8f8f-5336ddc7abc1.png" alt="Aviyel Inc"&gt;
      &lt;div class="ltag__link__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X1bzjyno--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--co8MU9_n--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/413418/f04996e5-b2bc-48b2-b362-dbe716bb5b38.JPG" alt=""&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/aviyel/51-git-commands-that-youll-ever-need-to-get-started-with-git-34d5" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;51 git commands that you'll ever need to get started with Git 🔥&lt;/h2&gt;
      &lt;h3&gt;Pramit Marattha for Aviyel Inc ・ Oct 20 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#github&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#git&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
,
&lt;h2&gt;
  &lt;a href="#8"&gt;
  &lt;/a&gt;
  #8
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://dev.to/0shuvo0/python-javascript--1nd6"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wVLignnQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--Q5CdR8do--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_500%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fc439sauu5yr1fwqs0gr.png" alt="Image of post"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/0shuvo0" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wZgMNup---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j0_lvM9_--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/728097/0f6e1da9-f243-42d0-b446-301ac6ea6412.jpeg" alt="0shuvo0"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/0shuvo0/python-javascript--1nd6" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Python + JavaScript = 🔥🔥🔥&lt;/h2&gt;
      &lt;h3&gt;Shuvo ・ Oct 21 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#node&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#python&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
,
&lt;h2&gt;
  &lt;a href="#9"&gt;
  &lt;/a&gt;
  #9
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://dev.to/ali6nx404/cheat-sheets-that-always-save-my-time-during-web-development-2ga4"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zWD_sq6m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--gHB4MrUc--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_500%2Cq_auto%2Cw_1000/https://ivumwcqobobsryuftwyv.supabase.co/storage/v1/object/public/posts/d6c8f63f-467f-4de1-863e-6efc3fce4d90/cover_image/795a36e6-b01b-429d-ba1d-b24c09ecaeaa.png" alt="Image of post"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/ali6nx404" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6eKJHV5k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--lDAn59NE--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/718375/5d79790f-4842-4a47-9082-e98b90319589.png" alt="ali6nx404"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/ali6nx404/cheat-sheets-that-always-save-my-time-during-web-development-2ga4" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Cheat Sheets that always save my time during web development 🚀&lt;/h2&gt;
      &lt;h3&gt;Mahesh Patidar ・ Oct 22 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#react&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdeveloper&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
,
&lt;h2&gt;
  &lt;a href="#10"&gt;
  &lt;/a&gt;
  #10
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://dev.to/cesscode/useful-websites-every-web-developer-should-know-about-3n4n"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jcBwWwvz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--AMtUKDr2--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_500%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zyd8q1d5y49zk8jb9ae7.png" alt="Image of post"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/cesscode" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5m9qrtHx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--Wro6iFlY--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/588139/30a1db5b-8b3a-42ee-88c6-a15a86c24ad9.jpg" alt="cesscode"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/cesscode/useful-websites-every-web-developer-should-know-about-3n4n" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Useful Websites Every Web developer Should Know About.&lt;/h2&gt;
      &lt;h3&gt;Cess ・ Oct 23 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#productivity&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;Orginal authors of this articles are &lt;a class="mentioned-user" href="https://dev.to/0shuvo0"&gt;@0shuvo0&lt;/a&gt;
, &lt;a class="mentioned-user" href="https://dev.to/tarunfy"&gt;@tarunfy&lt;/a&gt;
, &lt;a class="mentioned-user" href="https://dev.to/ankit01oss"&gt;@ankit01oss&lt;/a&gt;
, &lt;a class="mentioned-user" href="https://dev.to/sagarbarapatre"&gt;@sagarbarapatre&lt;/a&gt;
, &lt;a class="mentioned-user" href="https://dev.to/j471n"&gt;@j471n&lt;/a&gt;
, &lt;a class="mentioned-user" href="https://dev.to/javascriptacademy"&gt;@javascriptacademy&lt;/a&gt;
, &lt;a class="mentioned-user" href="https://dev.to/pramit_armpit"&gt;@pramit_armpit&lt;/a&gt;
, 0shuvo0, ali6nx404, cesscode&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Enjoy these articles.&lt;br&gt;
Follow me for more articles.&lt;br&gt;
Thanks 💖💖💖&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title> free HTTP public APIs </title>
      <author>Sijey</author>
      <pubDate>Mon, 25 Oct 2021 11:29:43 +0000</pubDate>
      <link>https://dev.to/sijeypraveen/free-http-public-apis-20gi</link>
      <guid>https://dev.to/sijeypraveen/free-http-public-apis-20gi</guid>
      <description>&lt;h1&gt;
  &lt;a href="#documentation"&gt;
  &lt;/a&gt;
  📚 Documentation
&lt;/h1&gt;

&lt;p&gt;Full documentation will be updated in &lt;a href="https://api.sijey.repl.co/"&gt;api.sijey.repl.co&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lyrics"&gt;
  &lt;/a&gt;
  Lyrics
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;curl https://api.sijey.repl.co/lyrics?song=
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#web-search"&gt;
  &lt;/a&gt;
  Web Search
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;curl https://api.sijey.repl.co/search?q=
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#weather"&gt;
  &lt;/a&gt;
  Weather
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;curl https://api.sijey.repl.co/weather?location=
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#dictionary"&gt;
  &lt;/a&gt;
  Dictionary
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;curl https://api.sijey.repl.co/dictionary?word=
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#support"&gt;
  &lt;/a&gt;
  🤝 Support
&lt;/h1&gt;

&lt;p&gt;If this APIs are useful for your projects you can give a star ⭐ on the repo and support .&lt;/p&gt;

&lt;p&gt;GitHub repository: &lt;a href="https://github.com/sijey-praveen/http-api"&gt;https://github.com/sijey-praveen/http-api&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>How to Use OpenAPI for Secure and Robust API Integration</title>
      <author>Michael Bogan</author>
      <pubDate>Mon, 25 Oct 2021 11:23:39 +0000</pubDate>
      <link>https://dev.to/mbogan/how-to-use-openapi-for-secure-and-robust-api-integration-1olg</link>
      <guid>https://dev.to/mbogan/how-to-use-openapi-for-secure-and-robust-api-integration-1olg</guid>
      <description>&lt;p&gt;Standards are awesome.&lt;/p&gt;

&lt;p&gt;What kind of world would this be if programming languages allowed &lt;code&gt;()&lt;/code&gt; and &lt;code&gt;[]&lt;/code&gt; and &lt;code&gt;{}&lt;/code&gt; to be used interchangeably or even mixed together? Chaos would ensue.&lt;/p&gt;

&lt;p&gt;What if the port on the side of your computer was simply a jumble of loose wires and contacts, waiting for you to find the right combination of connections to power up your webcam? Thank goodness for the USB standard.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;APIs need standards, too.&lt;/strong&gt; Building your application on top of unpredictable and unreliable APIs is a time-killer. It’s just one headache after another. That’s why &lt;strong&gt;API development has moved toward broad adoption of the &lt;a href="https://spec.openapis.org/oas/latest.html"&gt;OpenAPI Specification (OAS)—&lt;/a&gt;&lt;/strong&gt;the industry standard used by both builders &lt;em&gt;and&lt;/em&gt; consumers of APIs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How might OAS help as you build systems that consume APIs? What are the pitfalls you’ll avoid by using APIs that adhere to OAS?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Ultimately, an API is most usable when it conforms to a standard. In addition to OAS-conformant APIs being more usable, OAS has led to several tools—like &lt;a href="https://swagger.io/"&gt;Swagger&lt;/a&gt; and &lt;a href="https://apiclarity.io/"&gt;APIClarity&lt;/a&gt;—built for developers to better understand the APIs they’re working with. Swagger comprises a suite of tools used for the design, development, documentation, and testing of APIs. APIClarity observes real-time traffic to and from an API, and then compares &lt;em&gt;actual&lt;/em&gt; usage against the API’s specification.&lt;/p&gt;

&lt;p&gt;Let’s look at how the OpenAPI Specification came about and then dive into how adopting OAS will remove the headaches and bring confidence back to your integration of third-party APIs. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-the-openapi-initiative"&gt;
  &lt;/a&gt;
  What is the OpenAPI Initiative?
&lt;/h2&gt;

&lt;p&gt;The OpenAPI Initiative (OAI) is “&lt;em&gt;a consortium of forward-looking industry experts who recognize the immense value of standardizing on how APIs are described&lt;/em&gt;.” The OAI &lt;a href="https://www.openapis.org/membership/members"&gt;consortium members&lt;/a&gt; include big hitters like IBM, Google, Oracle, MuleSoft, and Kong.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hAQ0srR3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ucrrua6je1mbnjrag2pt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hAQ0srR3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ucrrua6je1mbnjrag2pt.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;OAI Members as of October, 2021 (&lt;a href="https://www.openapis.org/membership/members"&gt;source&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;When establishing the standard, the goal of the OAI is to bring value to developers on both sides of an API. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For developers constructing the API&lt;/strong&gt;, the standard provides a framework for building reliable services that interact with others. That framework nudges you toward best practices for security and future-proofing your development. The APIs you &lt;em&gt;build&lt;/em&gt; can become predictable and reliable. By using a standard format to document your API, your API becomes more discoverable.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For developers consuming APIs&lt;/strong&gt;, the benefits are even greater: interacting with an API that conforms with a standard provides assurance that the API you &lt;em&gt;use&lt;/em&gt; will be &lt;strong&gt;predictable&lt;/strong&gt; and &lt;strong&gt;reliable&lt;/strong&gt;. You &lt;em&gt;also&lt;/em&gt; reap the benefit of API &lt;strong&gt;discoverability&lt;/strong&gt;, as APIs documented according to OAS will be more easily findable in API marketplaces or exchanges.&lt;/p&gt;

&lt;p&gt;OAI operates under the Linux Foundation as a partnership between many industry-leading companies. Developers and consumers of APIs that adhere to OAS can take comfort in knowing that those APIs are vendor-neutral and rely on well-known web technologies.&lt;/p&gt;

&lt;p&gt;OAS itself was initially based on the &lt;a href="https://swagger.io/"&gt;Swagger Specification&lt;/a&gt; and continues to have many elements drawn from Swagger’s popular API documentation tool. Additionally, OAS targets RESTful API development and the resource-driven API model.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2y9p0hNv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xtx0qpk99y7aeoeiqv3c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2y9p0hNv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xtx0qpk99y7aeoeiqv3c.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The “Swagger Petstore” is the “Hello World” for OpenAPI Specifications (&lt;a href="https://app.swaggerhub.com/apis/Colon-Org/Swagger-PetStore-3.0/1.1"&gt;source&lt;/a&gt;) &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-use-oas"&gt;
  &lt;/a&gt;
  Why Use OAS?
&lt;/h2&gt;

&lt;p&gt;When an API is designed, built, and consumed in adherence to a standard, this benefits both the maintainers &lt;em&gt;and&lt;/em&gt; the users of the API. There’s no more lost time or guess-work, trying to figure out whether the params were supposed to be in the query string or in the request body, or whether authentication in the header was basic auth or bearer auth. Developer confidence and velocity—for builders and consumers—increases, since conventions lead to code consistency.&lt;/p&gt;

&lt;p&gt;With the OpenAPI Specification, developers enjoy many benefits and avoid common pitfalls.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#benefits-enjoyed"&gt;
  &lt;/a&gt;
  Benefits enjoyed
&lt;/h3&gt;

&lt;p&gt;One of the biggest benefits of the OAS is the definition of a convention—a standard, &lt;strong&gt;language-agnostic interface&lt;/strong&gt;. OAS-conformant APIs can be implemented in any language and with any number of services underlying them. The specification is &lt;strong&gt;completely decoupled from the implementation details&lt;/strong&gt; of the API which it describes. The specification simply details the function of the API.&lt;/p&gt;

&lt;p&gt;This separation from the implementation is a benefit to both developers and consumers of an API service, as it &lt;strong&gt;eases the discoverability of different functions of the system&lt;/strong&gt;. With a specification in hand, an API consumer can &lt;strong&gt;easily understand the API&lt;/strong&gt; without needing to know the language or framework in which the API was developed. Consumers will not need access to any source code or specialized documentation. For example, consumers of the &lt;a href="https://dev.twitch.tv/docs/api"&gt;Twitch API&lt;/a&gt; would have all they need for API usage from an OAS document, without needing to learn Ruby on Rails or Go, which are part of the Twitch tech stack. Similarly, users of the &lt;a href="https://developer.spotify.com/documentation/web-api/"&gt;Spotify API&lt;/a&gt; don’t need to learn Python or Java to use the API. This is the benefit of OAS being language-agnostic.&lt;/p&gt;

&lt;p&gt;Because the OpenAPI Specification is so widely used and agreed upon across the industry, numerous &lt;strong&gt;tools have been built to simplify the task of API development&lt;/strong&gt;. There are tools to validate requests (such as &lt;a href="https://dredd.org/en/latest/"&gt;Dredd&lt;/a&gt; or &lt;a href="https://github.com/isa-group/RESTest"&gt;RESTest&lt;/a&gt;), automate the writing of API documentation (such as &lt;a href="https://stoplight.io/api-documentation/"&gt;Stoplight&lt;/a&gt; or &lt;a href="https://developerhub.io/api-docs"&gt;DeveloperHub&lt;/a&gt;), and even generate SDK code for many client languages (such as &lt;a href="https://www.apimatic.io/continuous-code-generation/"&gt;APIMatic CodeGen&lt;/a&gt; or &lt;a href="https://openapi-generator.tech/"&gt;OpenAPI Generator&lt;/a&gt;). While an API developer can certainly go it alone and build without any assistance, it’s certainly helpful to have many toolchain options when building an OAS-conformant API.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pitfalls-avoided"&gt;
  &lt;/a&gt;
  Pitfalls avoided
&lt;/h3&gt;

&lt;p&gt;Additionally, using an OAS-conformant API ensures you don’t fall victim to many common pitfalls. &lt;strong&gt;Endpoints across an API are guaranteed to be consistent&lt;/strong&gt; because the standard ensures the usage of HTTP methods.&lt;/p&gt;

&lt;p&gt;You also won’t need to worry about running into deprecated APIs (sometimes called “zombie APIs”), as the &lt;strong&gt;standard ensures reasonable versioning of the API&lt;/strong&gt;. OAS-conformant APIs won’t introduce breaking changes within the same version; instead, breaking changes would require a version change in the API.&lt;/p&gt;

&lt;p&gt;Undocumented APIs (or “shadow APIs”) are also avoided when using OAS-conformant APIs, because the standard requires developers to &lt;strong&gt;use an understandable and agreed-upon structure&lt;/strong&gt; in their APIs. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#enforcing-oas-adherence"&gt;
  &lt;/a&gt;
  Enforcing OAS Adherence
&lt;/h2&gt;

&lt;p&gt;With all that the OpenAPI Specification promises, it may seem daunting to ensure that the APIs you consume are OAS-conformant. The task of building an API that adheres to OAS may seem equally formidable.&lt;/p&gt;

&lt;p&gt;It doesn’t need to be.&lt;/p&gt;

&lt;p&gt;To begin with, the tools around the OpenAPI Specification are a huge asset for any developer working in the space. Since OAS was originally based on the Swagger Specification, there are still &lt;a href="https://swagger.io/tools/"&gt;many tools&lt;/a&gt; from Swagger that can help any developer working on an API.&lt;/p&gt;

&lt;p&gt;For API developers, the OpenAPI Initiative provides a &lt;a href="https://openapi.tools/"&gt;list of tools&lt;/a&gt; useful for building robust OAS-conformant APIs. Whether you need code generation or documentation assistance, there’s probably something for you there.&lt;/p&gt;

&lt;p&gt;When building API-consuming client applications, helpful tools include those used for &lt;a href="https://openapi.tools/#learning"&gt;learning more about the APIs you consume&lt;/a&gt;. Some of these tools can run against that API you want to use, generating a description of the API according to the OAS standard.&lt;/p&gt;

&lt;p&gt;For example, &lt;a href="https://apiclarity.io/"&gt;APIClarity&lt;/a&gt; is a tool that observes all of the API traffic within your Kubernetes environment. Based on traffic observation, APIClarity infers an OpenAPI description for those APIs. This is especially helpful if the API creator never defined or provided such a description. It also surfaces potential problems with existing APIs, such as requests made to undocumented, shadow APIs or continued use of deprecated, zombie APIs. If you’re getting started on the path toward OAS compliance, then tools like APIClarity can be a great source of insight and observability.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QkUuXqJ6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3bmpuyc5cyhrpafnrslz.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QkUuXqJ6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3bmpuyc5cyhrpafnrslz.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;In summary, the OpenAPI Specification exists to make a developer’s work much easier—whether they build or consume APIs. Rather than making design decisions on the fly based on past experience, you can build on the shared wisdom of industry experts to make a great API or client application. &lt;a href="https://oai.github.io/Documentation/start-here.html"&gt;Getting started&lt;/a&gt; on building an API using the OAS standard isn’t out of reach and is something you could begin today!&lt;/p&gt;

</description>
      <category>architecture</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Amazon EC2 Reserved Instances 
and Other AWS Reservation Models
</title>
      <author>Ahmed Adel</author>
      <pubDate>Mon, 25 Oct 2021 10:41:04 +0000</pubDate>
      <link>https://dev.to/awsmenacommunity/amazon-ec2-reserved-instances-and-other-aws-reservation-models-25ad</link>
      <guid>https://dev.to/awsmenacommunity/amazon-ec2-reserved-instances-and-other-aws-reservation-models-25ad</guid>
      <description>&lt;h2&gt;
  &lt;a href="#%E2%97%8F-amazon-ec2-reserved-instances"&gt;
  &lt;/a&gt;
  ● Amazon EC2 Reserved Instances:
&lt;/h2&gt;

&lt;p&gt;➥ By purchasing RIs, you make a &lt;code&gt;one-year&lt;/code&gt; or &lt;code&gt;three-year&lt;/code&gt; commitment and receive billing discount of up to &lt;code&gt;72%&lt;/code&gt;. &lt;br&gt;
➥ RI is not an instance dedicated to your organization. It is a billing discount applied to the use of On-Demand Instances.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%E2%9E%A4-reserved-instances-payment-options"&gt;
  &lt;/a&gt;
  ➤ Reserved Instances payment options:
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;1-No Upfront:&lt;/strong&gt; You are billed a discounted hourly rate for every hour within the term, regardless of whether the Reserved Instance is being used (&lt;code&gt;Lowest discount&lt;/code&gt;).&lt;br&gt;
&lt;strong&gt;2-Partial Upfront:&lt;/strong&gt; A portion of the cost must be paid up front and the remaining hours in the term are billed at a discounted hourly rate, regardless of whether you’re using the RI.&lt;br&gt;
&lt;strong&gt;3-All Upfront:&lt;/strong&gt; Full payment is made at the start of the term, with no other costs or additional hourly charges, regardless of hours used (&lt;code&gt;Highest discount&lt;/code&gt;).&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#%E2%9E%A4-standard-vs-convertible-offering-classes"&gt;
  &lt;/a&gt;
  ➤ Standard vs. Convertible offering classes:
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Standard Reserved Instance&lt;/th&gt;
&lt;th&gt;Convertible Reserved Instance&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Enables you to modify Availability Zone, scope, networking type, and instance size (within the same instance type) of your RI.&lt;/td&gt;
&lt;td&gt;Enables you to exchange one or more Convertible RIs for another with a different configuration, including instance family, OS, and tenancy. There are no limits to how many times you perform an exchange, as long as the target instance is of an equal or higher value than the new instances.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Can be sold in Marketplace&lt;/td&gt;
&lt;td&gt;Cannot be sold in Marketplace.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Higher discount&lt;/td&gt;
&lt;td&gt;Lower discount (One-year Standard has similar discount to three-year Convertible)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;✅ When to use Convertible Reserved Instances:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Workloads are likely to change. &lt;/li&gt;
&lt;li&gt;You want to hedge against possible future price drops. &lt;/li&gt;
&lt;li&gt;You can’t or don’t want to ask teams to do capacity planning or forecasting. &lt;/li&gt;
&lt;li&gt;You expect compute usage to remain at the committed amount over the commitment period.&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#%E2%9E%A4-regional-and-zonal-reserved-instances"&gt;
  &lt;/a&gt;
  ➤ Regional and zonal Reserved Instances:
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;Regional Reserved Instance&lt;/th&gt;
&lt;th&gt;Zonal Reserved Instance&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Availability Zone flexibility&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;When you purchase a Reserved Instance for a Region&lt;/td&gt;
&lt;td&gt;When you purchase a Reserved Instance for a specific Availability Zone&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Capacity reservation&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Discount applies to instance usage in any availability zone in the specified region&lt;/td&gt;
&lt;td&gt;A zonal Reserved Instance provides a capacity reservation in the specified Availability Zone.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Instance size flexibility&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;The Reserved Instance discount applies to instance usage within the instance family, regardless of size. Only supported on Amazon Linux/Unix Reserved Instances with default tenancy. For more information, see &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/apply_ri.html#ri-normalization-factor"&gt;Instance size flexibility determined by normalization factor.&lt;/a&gt;
&lt;/td&gt;
&lt;td&gt;No instance size flexibility: The Reserved Instance discount applies to instance usage for the specified instance type and size only.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;➤ Instance size flexibility does not apply to the following Reserved Instances:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;RIs that are purchased for a specific Availability Zone (zonal Reserved Instances) &lt;/li&gt;
&lt;li&gt;RIs with dedicated tenancy &lt;/li&gt;
&lt;li&gt;RIs for Windows Server, Windows Server with SQL Standard, Windows Server with SQL Server Enterprise, Windows Server with SQL Server Web, RHEL, and SUSE Linux Enterprise Server &lt;/li&gt;
&lt;li&gt;RIs for G4 instances.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;➤ Maximizing Utilization with Size Flexibility in Regional Reserved Instances:&lt;/strong&gt;&lt;br&gt;
All Regional Linux RIs with shared tenancy apply to all sizes of instances within an instance family and a Region. The only attributes that must be matched are the instance type (ex. m4), tenancy (must be default), and platform (must be Linux). All new and existing Reserved Instances are sized according to a normalization factor based on instance size, as follows:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zaMynI43--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7mmmp9be79crxresdeps.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zaMynI43--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7mmmp9be79crxresdeps.png" alt="RI 1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;➤ Let’s have some Examples to explain this:&lt;/strong&gt;&lt;br&gt;
1-If you have RI for a c4.8xlarge, it applies to any usage of a Linux c4 instance with shared tenancy in region as: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;One c4.8xlarge instance. &lt;/li&gt;
&lt;li&gt;Two c4.4xlarge instance.&lt;/li&gt;
&lt;li&gt;Four c4.2xlarge instances. &lt;/li&gt;
&lt;li&gt;Sixteen c4.large instances.
2-It also includes combinations of instances, a t2.medium has a normalization factor of 2. If you purchase a t2.medium default tenancy Linux/Unix Rin the US East (N. Virginia) Region and you have two running t2.sm.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F1bCBqfu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uqggb3w6irex21dst1t5.JPG" alt="RI 2"&gt;
3-If you have one t2.large instance in the US East (N. Virginia), the billing benefit is applied to 50% of the usage instance.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_n8rG3Up--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/phlzihk5tpj5y67bp57l.JPG" alt="RI 3"&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#%E2%9E%A4-normalization-factor-for-dedicated-ec2-instances"&gt;
  &lt;/a&gt;
  ➤ Normalization factor for dedicated EC2 instances:
&lt;/h2&gt;

&lt;p&gt;For size inflexible RIs, the normalization factor is always 1. The purpose of it  is to provide an ability to match various instances to each other within a family so that you can exchange one type for another.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;➤ Normalization factor for bare metal instances:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;For regional Amazon Linux/Unix Reserved Instances with shared tenancy on bare metal instances, you can benefit from the Reserved Instance savings within the same instance family. &lt;/li&gt;
&lt;li&gt;Also, For regional Amazon Linux/Unix Reserved Instances with shared tenancy on instances in the same family as a bare metal instance. A bare metal instance is the same size as the largest instance within the same family.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x1eZtM7I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/da0d8xr8gpqdp35x03pb.JPG" alt="RI 4"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ex, If you purchase an i3.metal default tenancy Linux/Unix RI in the US East (N. Virginia) Region, the billing benefit can apply as follows: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If you have one running i3.16xlarge in your account in that Region, the billing benefit is applied in full to the i3.16xlarge instance (i3.16xlarge normalization factor = 128). &lt;/li&gt;
&lt;li&gt;Or, if you have two running i3.8xlarge instances in your account in that Region, the billing benefit is applied in full to both i3.8xlarge instances (i3.8xlarge normalization factor = 64). &lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#savings-plans"&gt;
  &lt;/a&gt;
  Savings Plans:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Another flexible pricing model that provides savings of up to &lt;code&gt;72%&lt;/code&gt; lower prices on instances usage, regardless of instance family, size, OS, tenancy or AWS Region, and also applies to AWS Fargate and Lambda.&lt;/li&gt;
&lt;li&gt;Savings Plans offer significant savings in exchange for a commitment to use a specific amount of compute power (measured in $/hour) for a one or three-year period.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;➤ AWS offers two types of Savings Plans:&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;1-Compute Savings Plans:&lt;/strong&gt;&lt;br&gt;
• Provide the most flexibility and help to reduce your costs by up to &lt;code&gt;66%&lt;/code&gt; regardless of instance family, size, AZ, Region, OS, or tenancy. Ex., you can change from C4 to M5 instances, shift a workload from EU (Ireland) to EU (London), or move a workload from Amazon EC2 to Fargate or Lambda.&lt;br&gt;
&lt;strong&gt;2-EC2 Instance Savings Plans:&lt;/strong&gt;&lt;br&gt;
• Offers savings up to &lt;code&gt;72%&lt;/code&gt; for commitment to usage of individual instance families in a Region (ex. M5 usage in N. Virginia) with the flexibility to change between instances within a family in that Region, ex. you can move from c5.xlarge running Windows to c5.2xlarge running Linux and benefit from the Savings Plans prices.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#reservation-models-for-other-aws-services"&gt;
  &lt;/a&gt;
  Reservation models for other AWS services:
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;1-Amazon RDS reserved DB instances:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Three payment options: No Upfront, Partial Upfront, and All Upfront. &lt;/li&gt;
&lt;li&gt;All reserved DB instance types are available for Aurora, MySQL, MariaDB, PostgreSQL, Oracle, and SQL Server database engines. Size-flexible reserved DB instances are available for Amazon Aurora, MariaDB, MySQL, PostgreSQL, and the “Bring Your Own License” (BYOL) edition of the Oracle database engine.
&lt;strong&gt;2-Amazon ElastiCache reserved nodes:&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Gives you the option to make a low, one-time payment for each cache node. In turn, you receive a significant discount on the hourly charge for that node. &lt;/li&gt;
&lt;li&gt;Amazon ElastiCache provides three reserved cache node types (Light Utilization, Medium Utilization, and Heavy Utilization) that enable you to balance the amount you pay up front with your effective hourly price. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;3-Amazon Elasticsearch Service Reserved Instances:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ES RIs offer significant discounts, Instances are identical, RIs are just discount applied to On-Demand Instances. &lt;/li&gt;
&lt;li&gt;Amazon ES RIs require one- or three-year terms and have three payment options that affect the discount rate.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;4- Amazon Redshift reserved nodes:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The best choice if you intend to keep an Amazon Redshift cluster running continuously for a prolonged period. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;5-Amazon DynamoDB reservations:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You can pay a one-time upfront fee and commit to paying for a minimum usage level at specific hourly rates for the duration of the reserved capacity term.&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#reserved-instances-billing"&gt;
  &lt;/a&gt;
  Reserved Instances Billing:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;You can pay for your RI upfront, partially upfront, or monthly, depending on the payment option specified.&lt;/li&gt;
&lt;li&gt;When Reserved Instances expire, you are charged On-Demand Instance rate.&lt;/li&gt;
&lt;li&gt;You can set up a billing alert to warn you when your bill exceeds a threshold that you define.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;➤ Usage Billing:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Reservations are billed for every clock-hour during the term selected, whether an instance is running or not.&lt;/li&gt;
&lt;li&gt;A Reserved Instance billing benefit can be applied to a running instance on a per-second basis. Per second billing is available for instances using an open-source Linux distribution, such as Amazon Linux and Ubuntu. &lt;/li&gt;
&lt;li&gt;A RI billing benefit can apply to a max of 3600 sec (one hour) of instance usage per clock-hour. You can run multiple instances concurrently, but can only receive benefit of the RI discount for a total of 3600 seconds per clock-hour.&lt;/li&gt;
&lt;li&gt;Example : if you purchase one m4.xlarge RI and run four m4.xlarge instances concurrently for one hour, one instance is charged at one hour of RI usage and the other three instances are charged at three hours of On-Demand Instance usage.&lt;/li&gt;
&lt;li&gt;However, if you purchase one m4.xlarge RI and run four m4.xlarge instances for 15 minutes (900 seconds) each within the same hour, the total running time for the instances is one hour, which results in one hour of RI usage and 0 hours of On-Demand Instance usage.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rWkfB7_g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ox3bpx0219o6c3dgbnqf.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rWkfB7_g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ox3bpx0219o6c3dgbnqf.JPG" alt="RI 5"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;➤ Consolidated Billing:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;AWS Organizations includes consolidated billing and account management capabilities that enable you to better meet the budgetary, security, and compliance needs of your business.&lt;/li&gt;
&lt;li&gt;The pricing benefits of Reserved Instances are shared when the purchasing account is billed under a consolidated billing payer account. The instance usage across all member accounts is aggregated in the payer account every month.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;1-Reserved Instances:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;AWS also offers discounted hourly rates in exchange for an upfront fee and term contract. Services such as Amazon EC2 and Amazon RDS use this approach to sell reserved capacity for hourly use of Reserved Instances.&lt;/li&gt;
&lt;li&gt;When you reserve capacity with Reserved Instances, your hourly usage is calculated at a discounted rate for instances of the same usage type in the same Availability Zone (AZ).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;2-Blended rates:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A line item for the blended rate of that instance is displayed on the bill of any member account that is running an instance that matches the specifications of a reservation in the organization. &lt;/li&gt;
&lt;li&gt;The payer of an organization can turn off Reserved Instance sharing for member accounts in that organization via the AWS Billing Preferences. This means that RIs are not shared between that member account and other member accounts.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;How discounts are applied:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The application of Amazon EC2 Reserved Instances is based on instance attributes, including the following: &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;1- Instance type:&lt;/strong&gt;  Instance types comprise varying combinations of CPU, memory, storage, and networking capacity This gives you the flexibility to choose the mix of resources for your applications.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2-Platform:&lt;/strong&gt; You can purchase RIs running on Linux, Unix, SUSE or Red Hat Linux, Windows Server, or MSSQL Server.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3-Tenancy:&lt;/strong&gt; Reserved Instances can be default tenancy or dedicated tenancy. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4- Regional or zonal:&lt;/strong&gt; As discussed before.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#maximizing-the-value-of-reservations"&gt;
  &lt;/a&gt;
  Maximizing the value of reservations
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;➤ Measure success:&lt;/strong&gt;&lt;br&gt;
• Means measuring your reservation coverage and utilization.&lt;br&gt;
• Establish a standardized review cadence in which you focus on the following questions: &lt;br&gt;
1.Do you need to modify any of our existing reservations to increase utilization? &lt;br&gt;
2.Are any currently utilized reservations expiring? &lt;br&gt;
3.Do you need to purchase any reservations to increase your coverage?&lt;br&gt;
&lt;strong&gt;➤ Maximize discounts by standardizing instance type:&lt;/strong&gt;&lt;br&gt;
• By standardizing the instance types that your organization uses, you can ensure that deployments match the characteristics of your reservations to maximize your discounts.&lt;br&gt;
• Three services that can help you standardize your instances are:&lt;br&gt;
&lt;strong&gt;1-AWS Config:&lt;/strong&gt; to monitors and records your resource config and lets you automate the evaluation of recorded configurations against desired configurations.&lt;br&gt;
&lt;strong&gt;2-AWS Service Catalog:&lt;/strong&gt; to create and manage catalogs of IT services that are approved for use on AWS.&lt;br&gt;
&lt;strong&gt;3-AWS Compute Optimizer:&lt;/strong&gt; recommends optimal AWS compute resources for your workloads to reduce costs and improve performance by using Machine Learning algorithms to analyze historical utilization metrics.&lt;br&gt;
&lt;strong&gt;➤ Reservation management techniques:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LOjEwwQn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1bq65rh0i72h33g6ezsa.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LOjEwwQn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1bq65rh0i72h33g6ezsa.JPG" alt="RI 6"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;➤ Reserved Instance Marketplace:&lt;/strong&gt;&lt;br&gt;
• supports the sale of third-party and AWS customers' unused Standard RIs, which vary in lengths and pricing options.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;➤ AWS Cost Explorer:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;lets you visualize, understand, and manage your AWS costs and usage over time.&lt;/li&gt;
&lt;li&gt;Provides the following prebuilt reports:
&lt;em&gt;1-EC2 RI Utilization %&lt;/em&gt; offers relevant data to identify and act on opportunities to increase your RI usage efficiency.
&lt;em&gt;2-EC2 RI Coverage %&lt;/em&gt; shows how much of your overall instance usage is covered by Reserved Instances.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;➤ AWS Cost and Usage Report:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;contains the most comprehensive set of data about your AWS costs and usage, including additional information regarding AWS services, pricing, and reservations.&lt;/li&gt;
&lt;li&gt;It can help you Calculate savings and Track the allocation of Reserved Instance discounts.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TtI7KnzN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/55efkt6xkcg4l60izbrr.JPG" alt="RI 6"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;➤ AWS Trusted Advisor:&lt;/strong&gt;&lt;br&gt;
Online resource to help you reduce cost, increase performance, and improve security by optimizing your AWS environment. AWS Trusted Advisor provides real-time guidance to help you provision your resources following AWS best practices.&lt;/p&gt;




&lt;p&gt;Original Paper &lt;a href="https://d1.awsstatic.com/whitepapers/cost-optimization-reservation-models.pdf?did=wp_card&amp;amp;trk=wp_card"&gt;here&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>cloud</category>
      <category>aws</category>
      <category>devops</category>
      <category>cloudskills</category>
    </item>
    <item>
      <title>Day 17 of 100 Days of Code &amp; Scrum: Finished My User Stories Guide</title>
      <author>Rammina</author>
      <pubDate>Mon, 25 Oct 2021 10:32:40 +0000</pubDate>
      <link>https://dev.to/rammina/day-17-of-100-days-of-code-scrum-finished-my-user-stories-guide-7fm</link>
      <guid>https://dev.to/rammina/day-17-of-100-days-of-code-scrum-finished-my-user-stories-guide-7fm</guid>
      <description>&lt;p&gt;Good day, everyone!&lt;/p&gt;

&lt;p&gt;I have pretty great news for today! I managed to finish my guide, &lt;a href="https://dev.to/rammina/the-art-of-writing-agile-user-stories-17o9"&gt;The Art of Writing Agile User Stories&lt;/a&gt;. The intended target readers are beginners who want to get started on writing user stories for their own projects&lt;br&gt;
and/or just to learn more about Scrum. Feel free to check it out!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#yesterday"&gt;
  &lt;/a&gt;
  Yesterday
&lt;/h2&gt;

&lt;p&gt;I finished planning out my Weekly Goals and I also wrote most of the content for my user story guide.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#today"&gt;
  &lt;/a&gt;
  Today
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#scrum"&gt;
  &lt;/a&gt;
  Scrum
&lt;/h3&gt;

&lt;p&gt;I proofread, edited, and then posted my user story guide. I'm pretty content with the results for now, but it seems like there are still sections I can add and cleanup.&lt;/p&gt;

&lt;p&gt;I hope everyone is doing well. Thank you for reading!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--n1vjiqfq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8dk911bay3opl2qhllpg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n1vjiqfq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8dk911bay3opl2qhllpg.png" alt="Thank You Banner"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#resourcesrecommended-readings"&gt;
  &lt;/a&gt;
  Resources/Recommended Readings
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://scrumguides.org/scrum-guide.html"&gt;The 2020 Scrum Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mlapshin.com/index.php/scrum-quizzes/"&gt;Mikhail Lapshin's Scrum Quizzes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#image-credits"&gt;
  &lt;/a&gt;
  Image Credits
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://unsplash.com/@firmbee?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Cover Photo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#disclaimer"&gt;
  &lt;/a&gt;
  DISCLAIMER
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;This is not a guide&lt;/strong&gt;, it is just me sharing my experiences and learnings. This post only expresses my thoughts and opinions (based on my limited knowledge) and is in no way a substitute for actual references. If I ever make a mistake or if you disagree, I would appreciate corrections in the comments!&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>beginners</category>
      <category>programming</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Let’s build and deploy a Full Stack Next.js App - Part 1</title>
      <author>Musole Masu</author>
      <pubDate>Mon, 25 Oct 2021 10:31:46 +0000</pubDate>
      <link>https://dev.to/musolemasu/lets-build-and-deploy-a-full-stack-nextjs-app-part-1-2aid</link>
      <guid>https://dev.to/musolemasu/lets-build-and-deploy-a-full-stack-nextjs-app-part-1-2aid</guid>
      <description>&lt;p&gt;&lt;strong&gt;Next.js&lt;/strong&gt; is referred to as the React framework for production, which comes with more features than simple React as a library. It gives us rules and guidelines on how we should structure our projects and it improves React developers' life, with built-in features like file-system based routing or “head” metadata for SEO.&lt;/p&gt;

&lt;p&gt;In this article, we will build a simple food app that displays menu. It will be styled with &lt;strong&gt;Tailwind Css&lt;/strong&gt; in the first part,  and in the second part, we will connect the app  to a &lt;strong&gt;MongoDB&lt;/strong&gt; database and deploy it on &lt;strong&gt;Vercel&lt;/strong&gt;. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;p&gt;For the tutorial to go well, you must have basic knowledge of &lt;strong&gt;Node js&lt;/strong&gt; and &lt;strong&gt;React&lt;/strong&gt; and have either a &lt;strong&gt;GitHub / Bitbucket / Gitlab&lt;/strong&gt; account. You need also to have at least Node js 14.18.1 LTS and &lt;strong&gt;Git&lt;/strong&gt; installed on your computers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-lets-start-a-new-project"&gt;
  &lt;/a&gt;
  1. Let's start a new project
&lt;/h2&gt;

&lt;p&gt;All the prerequisites are met, open your terminal and create a new project;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Run the three commands below, to create a new project directory and set up a new "package.json" file :
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ mkdir next-food-app
$ cd next-food-app
$ npm init -y
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Next step, in the project directory, install react and react-dom as dependencies, Next.js requires them as peer dependencies:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ npm install react react-dom
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Free from npm warnings, you can now install Next.js, run:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ npm install next
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Open the "package.json" file, in the scripts section, replace the actual code by the one below :
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; "scripts": {
   "dev": "next",
   "build": "next build",
   "start": "next start"
 },
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Back to the project directory, create a folder named “/pages” and inside “/pages” create a file named “index.js” : &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: &lt;code&gt;Next.js comes with the file-system based routing feature, which makes all files added to the “/pages” directory available as routes. All files except “index.js”, which the Router automatically routes to the root of the directory.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;/pages/index.js&lt;/code&gt;   =&amp;gt;  &lt;code&gt;/&lt;/code&gt;&lt;br&gt;
&lt;code&gt;/pages/meals/index.js&lt;/code&gt;  =&amp;gt;  &lt;code&gt;/meals&lt;/code&gt;&lt;br&gt;
&lt;code&gt;/pages/meals.js&lt;/code&gt;  =&amp;gt;  &lt;code&gt;/meals&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Great, in the "/pages/index.js" create the application HomePage with the following code :
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const HomePage = () =&amp;gt; {
  return &amp;lt;h1&amp;gt;Welcome to our Food Next.js App &amp;amp;#x1F60a;&amp;lt;/h1&amp;gt;;
};
export default HomePage;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Now, go to your the terminal, in the project directory, run the command below and on your browser open &lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt; :
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ npm run dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_4KZ5xfw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r5ahdw2s59zcion0k53u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_4KZ5xfw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r5ahdw2s59zcion0k53u.png" alt="The result"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You will get the same page on your browser if nothing was omitted.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-lets-add-tailwind-css"&gt;
  &lt;/a&gt;
  2. Let's add Tailwind css
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;First step here is to install tailwindcss in the project, you will do so by running the following command in the project directory:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ npm install tailwindcss postcss autoprefixer
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Next, generate “tailwind.config.js” and “postcss.config.js” files with this command in the project directory:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ npx tailwindcss init -p
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Open the “tailwind.config.js” file and replace all code in there by these:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;module.exports = {
 purge: ["./pages/**/*.{js,ts,jsx,tsx}", "./components/**/*.{js,ts,jsx,tsx}"],
 darkMode: false, // or 'media' or 'class'
 theme: {
   extend: {},
 },
 variants: {
   extend: {},
 },
 plugins: [],
};
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;In the project directory, create a folder named "/public", inside "/public", create another folder named "/style" where you will add a file named "global.css" and put the code below in it:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@tailwind base;
@tailwind components;
@tailwind utilities;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;After, import your style in your Javascript:
To do so, create inside the “/pages” directory, a file named  “_app.js”. &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: &lt;code&gt;In Next.js the file "_app.js" in the "/pages" directory overrides the default “App” component that allows us to add global css to the whole application.&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import "../public/style/global.css";

const MyApp = ({ Component, pageProps }) =&amp;gt; {
 return &amp;lt;Component {...pageProps} /&amp;gt;;
};
export default MyApp;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Put the code above in your "_app.js" file, run &lt;code&gt;$ npm run dev&lt;/code&gt; and open your browser on &lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt; .&lt;br&gt;
If the procedure was followed correctly, you will notice a difference with the text font between the project before and after tailwind css. Just like in the images below;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Before&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0RbKjYoA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0nh0q0pkldz9nlgfktx2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0RbKjYoA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0nh0q0pkldz9nlgfktx2.png" alt="without tailwind css"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;After&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JEBTzc6I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ztjtr2du8tweb8kgq435.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JEBTzc6I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ztjtr2du8tweb8kgq435.png" alt="After tailwindcss"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-finally-lets-add-react-components"&gt;
  &lt;/a&gt;
  3. Finally, let’s add React components
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: &lt;code&gt;Next.js is built on top on react, therefore react components are part of it.&lt;/code&gt; &lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;In the project directory, create a folder named "/components", and add two js files respectively named “MealList.js” and “MealItem.js”.&lt;/li&gt;
&lt;li&gt;Drop the code below in “MealItem.js”:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const MealItem = () =&amp;gt; {
  return (
    &amp;lt;div className="w-1/4 p-8 shadow-lg rounded-lg bg-yellow-50"&amp;gt;
      &amp;lt;img src="/img/meal1.PNG" className="w-auto h-auto" alt="Chicken Salad" /&amp;gt;
      &amp;lt;div className="text-center py-2"&amp;gt;
        &amp;lt;h3 className="text-xl font-normal"&amp;gt;
          Chicken Salad
          &amp;lt;span className="px-3 font-light text-yellow-500"&amp;gt;(4 dishes)&amp;lt;/span&amp;gt;
        &amp;lt;/h3&amp;gt;
        &amp;lt;p className="text-gray-500 text-base"&amp;gt;Herico de Porto&amp;lt;/p&amp;gt;
        &amp;lt;button className="bg-yellow-500 px-4 py-2 rounded-lg text-gray-50 font-medium mt-2"&amp;gt;
          Details
        &amp;lt;/button&amp;gt;
      &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
  );
};
export default MealItem;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;And drop this in “MealList.js”:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import MealItem from "./MealItem";
const MealList = () =&amp;gt; {
  return (
    &amp;lt;div className="flex flex-wrap"&amp;gt;
      &amp;lt;MealItem /&amp;gt;
    &amp;lt;/div&amp;gt;
  );
};
export default MealList;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Import your react components in the Homepage “/pages/index.js” :
Delete all code in there and put the code below:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import MealList from "../components/MealList";
const HomePage = () =&amp;gt; {
  return &amp;lt;MealList /&amp;gt;;
};
export default HomePage;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Download the image found on this link -&amp;gt; &lt;a href="https://github.com/musole-masu/nextjs-food-app/blob/main/public/img/meal1.PNG"&gt;https://github.com/musole-masu/nextjs-food-app/blob/main/public/img/meal1.PNG&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create in the "/public" directory a folder named "/img" and put the downloaded image in there.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Now, wrap your pages with the style added in the "_app.js" just like it's done below:&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import "../public/style/global.css";

const MyApp = ({ Component, pageProps }) =&amp;gt; {
  return (
    &amp;lt;div className="max-w-7xl mx-auto py-40"&amp;gt;
      &amp;lt;Component {...pageProps} /&amp;gt;
    &amp;lt;/div&amp;gt;
  );
};
export default MyApp;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;In your terminal, in the project directory, run &lt;code&gt;$ npm run dev&lt;/code&gt;, then go to &lt;a href="http://localhost:300"&gt;http://localhost:300&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o0PzIIr1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s7uvvlby7txcg95uvvg0.png" alt="Homepage"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you have this exact page on the browser, it means that you have completed each step of this tutorial correctly. Congrats :)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-conclusion"&gt;
  &lt;/a&gt;
  4. Conclusion
&lt;/h2&gt;

&lt;p&gt;The &lt;strong&gt;Part 1&lt;/strong&gt; of our tutorial ends here. To summarize, it was focused on the project creation,  with the installation of dependencies and also focused on styling.&lt;br&gt;
&lt;strong&gt;Part 2&lt;/strong&gt; will be published very soon, so stay tuned and follow me on &lt;a href="https://twitter.com/MusoleMasu"&gt;Twitter&lt;/a&gt; for updates.&lt;/p&gt;

&lt;p&gt;Find the completed project &lt;a href="https://github.com/musole-masu/nextjs-food-app"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;À bientôt &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---ygl_pJE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4om0ld63gzpv1xcy3mqi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---ygl_pJE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4om0ld63gzpv1xcy3mqi.png" alt="Happy"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>nextjs</category>
      <category>tailwindcss</category>
      <category>mongodb</category>
      <category>webdev</category>
    </item>
    <item>
      <title>5 Open Source tools for Documenting your React Component</title>
      <author>Sankalp Swami</author>
      <pubDate>Mon, 25 Oct 2021 10:23:34 +0000</pubDate>
      <link>https://dev.to/sankalpswami1122/5-tools-that-have-made-react-documentation-a-piece-of-cake-2750</link>
      <guid>https://dev.to/sankalpswami1122/5-tools-that-have-made-react-documentation-a-piece-of-cake-2750</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;strong&gt;Introduction&lt;/strong&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Documenting our code is of course not the easiest part of the development process and at times developers even avoid it saying that it's really boring. In this article, we will take an overview of 5 tools whose purpose is to help us in documenting our React Components with bare minimum efforts thus, which have made documenting our React Components a piece of cake. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6r_L4b16--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://c.tenor.com/a0P8oUCh8WsAAAAd/mr-bean-too-easy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6r_L4b16--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://c.tenor.com/a0P8oUCh8WsAAAAd/mr-bean-too-easy.gif" alt="mrBean"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#what-is-software-documentation-amp-why-do-we-need-it"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;strong&gt;What is Software Documentation &amp;amp; Why do we need it?&lt;/strong&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Software Documentation is one of the most important parts of the Software Development Life cycle. Reliable Documentation of Software applications is a must and without Documentation, our software is incomplete. Software Documentation is documenting all the aspects of our software application. When our senior developer stops working for us, it becomes quite difficult for new developers to get on the code without Documentation, which states how vital it is. With the continuous development of our application, sometimes our docs get outdated. Let’s go through some of the most popular tools which will solve this problem by automating the complete process of Documenting.&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#5-tools-for-documenting-our-react-components"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;strong&gt;5 Tools for Documenting our React Components&lt;/strong&gt;&lt;/strong&gt;
&lt;/h3&gt;


&lt;h3&gt;
  &lt;a href="#1-docz"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;strong&gt;1. DOCZ&lt;/strong&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XGB2fWLe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g1npfzpn02bewwg4hx96.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XGB2fWLe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g1npfzpn02bewwg4hx96.png" alt="React Documentation with Docz"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.docz.site/"&gt;Docz&lt;/a&gt;, an Open Source project which is used for Documenting React Components, is a super tool which save lots of time that is spent on building and maintaining custom Documentation sites. Docz uses &lt;strong&gt;MDX&lt;/strong&gt; format for writing docs. Now, what the heck this &lt;code&gt;MDX&lt;/code&gt; is ? Well, &lt;code&gt;MDX&lt;/code&gt; is something where we can write &lt;strong&gt;JSX&lt;/strong&gt; inside our markdown files. Yeah you got it right, just think how beautiful this could be. We will be writing our docs in .mdx file which will be rendered as Documentation by &lt;em&gt;Docz&lt;/em&gt;.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3n8yWoVw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/unqibsu3zj5szl757j0d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3n8yWoVw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/unqibsu3zj5szl757j0d.png" alt="React Component Documentation Docz"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Docz&lt;/strong&gt; is rich with features like &lt;strong&gt;Playground Component&lt;/strong&gt; and &lt;strong&gt;Props&lt;/strong&gt;.&lt;br&gt;
&lt;code&gt;Playground Component&lt;/code&gt; is a special Component by Docz which helps to render React Components in docs. &lt;code&gt;Playground Component&lt;/code&gt; creates tables with valuable content describing the React components with live-editable code below the rendered component. Where we can edit code and test the component efficiently, Brilliant right?&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8d1DmC2j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/esl9p2f5zp06ihhwl961.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8d1DmC2j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/esl9p2f5zp06ihhwl961.png" alt="React Documentation Docz"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Props&lt;/strong&gt; is a special Built-In Component in Docz which takes react components and displays a neat formatted table consisting properties of your React component.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wkeNMem2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7dqe1c73henyi29dlyoi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wkeNMem2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7dqe1c73henyi29dlyoi.png" alt="React Component Documentation Props Docz"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#2-storybook"&gt;
  &lt;/a&gt;
  &lt;strong&gt;2. STORYBOOK&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://storybook.js.org/"&gt;StoryBook&lt;/a&gt; is an Open Source tool used for User-Interface Development. With StoryBook, we can work on one component at a time and can develop the complete UI without any tech stack. It makes the process of developing UI faster and at the same time increases scalability and reliability of Components by isolating them.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7rp0_Bbb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w7zb9f7tdsadtais9saf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7rp0_Bbb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w7zb9f7tdsadtais9saf.png" alt="StoryBook React Component Documentation"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#what-is-a-story-in-storybook"&gt;
  &lt;/a&gt;
  &lt;strong&gt;What is a Story in Storybook?&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;Well Story in Storybook is the single documentation of a component. It renders the UI components. For writing a story for an particular component, we should make a new file with &lt;code&gt;*.stories.js/jsx&lt;/code&gt; naming convention. If we are having Button component in &lt;code&gt;Button.js&lt;/code&gt; file, story for buttons component will be written in &lt;code&gt;Button.stories.js&lt;/code&gt;. For storybook, we will be writing docs in &lt;code&gt;CSF&lt;/code&gt; format. Component Story Format, an ES6 Modules-based standard.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8T9WQ7fT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nsdr10wphcrplxrabg1o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8T9WQ7fT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nsdr10wphcrplxrabg1o.png" alt="Story in Storybook-React Docs"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Args&lt;/strong&gt;, a special feature of Storybook, which can be used for editing the arguments of an component dynamically for testing the components efficiently. This save lots of time which is spent on testing the components.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NtNxAiNG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zl34ojlrbqsour82xafd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NtNxAiNG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zl34ojlrbqsour82xafd.png" alt="Args in Storybook React Component Documentation"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#3-react-styleguidist"&gt;
  &lt;/a&gt;
  &lt;strong&gt;3. REACT STYLEGUIDIST&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fEykKq1R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7fi5n57x5b1ncc1tvrcr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fEykKq1R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7fi5n57x5b1ncc1tvrcr.png" alt="React Styleguidist Component Documentation"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://react-styleguidist.js.org/"&gt;React Styleguidist&lt;/a&gt; is an isolated React component development environment. This tool is used for documenting React components with living style guide and has various variations and states of components for testing. React Styleguidist, an Open Source Project, is a tool which generates documentation for React components from your &lt;code&gt;readme&lt;/code&gt; files, &lt;code&gt;source code&lt;/code&gt;, &lt;code&gt;propTypes&lt;/code&gt; declaration. It even displays JSDoc's comment blocks from the Components as Documentation.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;PropTypes&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;prop-types&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="cm"&gt;/**
 * General component description in JSDoc format. Markdown is *supported*.
 */&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Styleguidist displays &lt;strong&gt;props&lt;/strong&gt; from propTypes declarations in a well formatted table and looks for Markdown &lt;code&gt;.md&lt;/code&gt; files for documenting. Programming languages used in &lt;code&gt;.md&lt;/code&gt; files in code blocks will be rendered as React Components. It will pick all the files from &lt;code&gt;src/components&lt;/code&gt; directory and if it fails, we can manually configure it in &lt;code&gt;styleguide.config.js&lt;/code&gt; file in the project's root directory.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#4-bitdev"&gt;
  &lt;/a&gt;
  &lt;strong&gt;4. BIT.DEV&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wluWXSdJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9uw40vp3s79kr2649r42.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wluWXSdJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9uw40vp3s79kr2649r42.png" alt="Bit dev react component documentation"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://bit.dev/"&gt;Bit&lt;/a&gt; is an Component based User Interface development. &lt;strong&gt;Bit&lt;/strong&gt; is far ahead than just the Documentation of Components. &lt;strong&gt;Bit&lt;/strong&gt; is a platform for sharing and collaborating not just React Components but Vue &amp;amp; Angular components, css sheets, and even middlewares and modules too. We can bind all the files and dependencies of our Component using bit and can run them on any application.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hI3KNm_m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g26sngempubt1lpnth5v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hI3KNm_m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g26sngempubt1lpnth5v.png" alt="Bit-dev-component"&gt;&lt;/a&gt;&lt;br&gt;
We can integrate &lt;code&gt;Bit&lt;/code&gt; with our components by tracking our files using &lt;code&gt;bit add&lt;/code&gt; command. This will add all of our files to special repository which is understood by &lt;code&gt;Bit&lt;/code&gt;. We can tag our components in Bit which makes our components ready for reusable across platforms. It contains all the files, source code and dependencies of that particular component. Bit auto-generates documentation. If you have any kind of JSDocs or .md in your project, Bit will generate docs from those files. Bit will parses comments from components and renders them as component’s Documentation, all we need to do is write those comments in Markdown format. Bit has a special component called Testers that take other components and checks for test files. If your project has any kind of tests, Testers will run those tests and builds components in isolation and helps us to get better stability, reliability of our components for reusability. It handles the complete lifecycle of the Component and we don’t even need to have an extra repo, if we want to use components from bit, we can install them using npm. For making our components available for other developers, We are supposed to export our components to a scope (a set of components), Once we export our Component to Scope, It will be available for all the developers. Bit has a live-editable playground where we can test our rendered components.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Qk71Vx7I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gwndnogswsaxrnqiv1r0.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Qk71Vx7I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gwndnogswsaxrnqiv1r0.jpeg" alt="Bit-dev Playground react documentation"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#5-react-docgen"&gt;
  &lt;/a&gt;
  &lt;strong&gt;5. REACT DOCGEN&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/reactjs/react-docgen"&gt;Docgen&lt;/a&gt; is a CLI-based tool used for documenting React components. It is a simple Documentation tool that generates documentation from the React components. Docgen uses &lt;code&gt;ast-types&lt;/code&gt; and &lt;code&gt;@babel/parser&lt;/code&gt; to parse the source code and with the help of methods, it extracts information from the source code into JSON blob or JavaScript object. It looks for components that are defined via &lt;code&gt;React.createClass&lt;/code&gt;. We can customize the extraction process by using and manipulating the API. React-Docgen looks for Babel configuration for use and if there is no such file it will follow the default configuration. &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#support"&gt;
  &lt;/a&gt;
  🙌&lt;strong&gt;SUPPORT&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/sankalpswami"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CIp6irG6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2wa7xuvv19rndc0j2gab.png" alt="Buy Me A Coffee"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#connect-with-me"&gt;
  &lt;/a&gt;
  CONNECT WITH ME
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://twitter.com/sankalpswami01"&gt;Twitter&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Conclusion&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;From Docz to Bit, we covered the most popular tools that are being used for React Components Documentation. These tools improves the quality of components with the help of their super rich features and makes sure we are not wasting our time on building and maintaining custom documentation sites.&lt;/p&gt;




&lt;p&gt;Thanks for reading! Peace, bubbyeye and yeah never share your food!!&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yUD8M10v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://66.media.tumblr.com/tumblr_m7p5cxjPAw1rqfhi2o1_250.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yUD8M10v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://66.media.tumblr.com/tumblr_m7p5cxjPAw1rqfhi2o1_250.gif" alt="Mr bean doesnt share his food"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>reactnative</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Simple Country Code Picker For Android In Kotlin</title>
      <author>Siddharth Singh</author>
      <pubDate>Mon, 25 Oct 2021 09:52:19 +0000</pubDate>
      <link>https://dev.to/siddharthsing/simple-country-code-picker-for-android-in-kotlin-5aeo</link>
      <guid>https://dev.to/siddharthsing/simple-country-code-picker-for-android-in-kotlin-5aeo</guid>
      <description>&lt;h2&gt;
  &lt;a href="#apps-overview"&gt;
  &lt;/a&gt;
  App's Overview
&lt;/h2&gt;




&lt;ul&gt;
&lt;li&gt;&lt;p&gt;In this article, I am going to demonstrate how to create a simple country code picker in an android application through Kotlin. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Also, how to validate phone numbers for every country possible.&lt;br&gt;
&lt;/p&gt;

&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ui_O0QYW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kezbeo2v3tq3x3fw558c.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ui_O0QYW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kezbeo2v3tq3x3fw558c.gif" alt="CCP Demo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#table-of-content"&gt;
  &lt;/a&gt;
  Table Of Content
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#setup"&gt;Project Setup &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#UI"&gt;Building the app's UI &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#back"&gt;Creating the Backend of the app&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#GitHub"&gt;GitHub Repo &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#support"&gt;Writer's Support ❤️&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#project-setup"&gt;
  &lt;/a&gt;
  Project Setup
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Add the below line of code in &lt;code&gt;build.gradle (project)&lt;/code&gt; under &lt;code&gt;allprojects&lt;/code&gt;.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;maven { url "https://jitpack.io" }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The code snippet will look like the one below :&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
allprojects {
    repositories {
        google()
        jcenter()
        maven { url "https://jitpack.io" }  /* changed file */
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Dependency to be added : Add the dependency below in &lt;code&gt;build.gradle (Module)&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;implementation 'com.github.joielechong:countrycodepicker:2.4.2'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The code snippet will look like the one below :&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;dependencies {

   ...
    other dependencies   
   ...

    /* Country Code Picker Dependency*/
    implementation 'com.github.joielechong:countrycodepicker:2.4.2'
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#apps-ui"&gt;
  &lt;/a&gt;
  App's UI
&lt;/h2&gt;

&lt;p&gt;The app's UI is broken into two parts :&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="#expCCP"&gt;Explanation of Country Code Picker (ccp)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#xml"&gt;Complete &lt;code&gt;.xml&lt;/code&gt; code file (activity_main.xml)&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Explanation of ccp :&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;The below code snippet shows the implementation of the country code picker through the &lt;code&gt;.xml&lt;/code&gt; file. The below code snippet is not customized, it is the naive form of ccp but it will work completely fine in the android application. We shall see the customization in the next section of the blog.
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;com.rilixtech.widget.countrycodepicker.CountryCodePicker
            android:id="@+id/ccp"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:padding="16dp"
            /&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Customization of ccp in .xml file&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;app:ccp_defaultNameCode="IN"&lt;/code&gt;&lt;/strong&gt; - &lt;code&gt;ccp_defaultNameCode&lt;/code&gt; attribute will set the the default country of the ccp spinner.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;app:ccp_defaultCode="91"&lt;/code&gt;&lt;/strong&gt; - &lt;code&gt;ccp_defaultCode&lt;/code&gt; will similarly set the default country code in the spinner.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;app:ccp_textColor="#1C2020"&lt;/code&gt;&lt;/strong&gt; - change the color of ccp according to app's theme with &lt;code&gt;ccp_textColor&lt;/code&gt; attritubute.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;app:ccp_countryPreference="IN,US,NZ"&lt;/code&gt;&lt;/strong&gt; - &lt;code&gt;ccp_countryPreference&lt;/code&gt; will set some of the preferred countries on the top, so that they will be easily accessed. See the example image below :&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---v_tfvif--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y8ol5ocnb1kcwky8tqtx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---v_tfvif--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y8ol5ocnb1kcwky8tqtx.png" alt="Preference Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The customized code snippet :&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  &amp;lt;com.rilixtech.widget.countrycodepicker.CountryCodePicker
            android:id="@+id/ccp"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            app:ccp_defaultNameCode="IN"
            app:ccp_defaultCode="91"
            app:ccp_textColor="#1C2020"
            android:padding="16dp"
            app:ccp_countryPreference="IN,US,NZ"/&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;There are many attributes present in order to customize the ccp, you can get to know about them all in it's documentation &lt;a href="https://github.com/joielechong/CountryCodePicker"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Complete .xml file (activity_main.xml) :&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;?xml version="1.0" encoding="utf-8"?&amp;gt;
&amp;lt;RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"

    tools:context=".MainActivity"
    &amp;gt;

    &amp;lt;LinearLayout
        android:id="@+id/llPhone"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="horizontal"
        android:layout_centerInParent="true"

        &amp;gt;

        &amp;lt;com.rilixtech.widget.countrycodepicker.CountryCodePicker
            android:id="@+id/ccp"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            app:ccp_defaultNameCode="IN"
            app:ccp_defaultCode="91"
            app:ccp_textColor="#1C2020"
            android:padding="16dp"
            app:ccp_countryPreference="IN,US,NZ"/&amp;gt;

        &amp;lt;EditText
            android:id="@+id/edtPhone"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginRight="16dp"
            android:padding="15dp"
            android:hint="@string/enter_phone_number"
            android:importantForAutofill="no"
            android:inputType="number" /&amp;gt;

    &amp;lt;/LinearLayout&amp;gt;
    &amp;lt;Button
        android:id="@+id/btnSendOTP"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_below="@+id/llPhone"
        android:padding="15dp"
        android:layout_margin="16dp"
        android:text="Send OTP"
        android:textStyle="bold"
        /&amp;gt;
&amp;lt;/RelativeLayout&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;p&gt;&lt;a&gt;&lt;/a&gt; &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#apps-backend"&gt;
  &lt;/a&gt;
  App's Backend
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Let's first link all the UI components with &lt;code&gt;MainActivity.kt&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;val ccp:CountryCodePicker = findViewById(R.id.ccp)
val edtPhoneNumber: EditText = findViewById(R.id.edtPhone)
val btnOTP: Button = findViewById(R.id.btnSendOTP)

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Tell ccp which edit text should be registered for phone numbers, use the below line of code
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ccp.registerPhoneNumberTextView(edtPhoneNumber)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Now, let us create a function to check the validity of the phone number entered wrt the country code selected.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccp.isValid&lt;/code&gt;&lt;/strong&gt; will check whether the phone number &lt;br&gt;
      is correct or not.&lt;/p&gt;

&lt;p&gt;The function looks like :&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;private fun checkValidity(ccp: CountryCodePicker): Boolean {

        return if(ccp.isValid) {
            Toast.makeText(this, "number " + ccp.fullNumber + " is valid.", Toast.LENGTH_SHORT).show()
            true
        } else {
            false
        }

    }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The function returns &lt;code&gt;true&lt;/code&gt; if phone number entered is correct otherwise it will return &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Finally, at last we will handle the button click and we are done to see the magic.
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    btnOTP.setOnClickListener{

            if(checkValidity(ccp))
            {
                //Change with your own functionality
                Toast.makeText(this, "OTP Sent", Toast.LENGTH_SHORT).show()

            }else{
                Toast.makeText(this, "Please enter a valid phone number", Toast.LENGTH_SHORT).show()
            }

        }

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;If the &lt;code&gt;checkValidity()&lt;/code&gt; function returns true it will show a toast &lt;code&gt;OTP Sent&lt;/code&gt;, you can change it with your function. &lt;/p&gt;

&lt;p&gt;If the phone number is wrong it will pitch an Incorrect Message toast.&lt;/p&gt;



&lt;p&gt;&lt;a&gt;&lt;/a&gt; &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#github-repository"&gt;
  &lt;/a&gt;
  GitHub Repository
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Fork the repository for better and easy understanding and for quick learning.&lt;/li&gt;
&lt;/ul&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Siddharth-sing"&gt;
        Siddharth-sing
      &lt;/a&gt; / &lt;a href="https://github.com/Siddharth-sing/Country-Code-Picker"&gt;
        Country-Code-Picker
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      An easy approach on how to create your country code picker for the edit text. 
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;a&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#writers-support"&gt;
  &lt;/a&gt;
  Writer's Support
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;If you find the article useful show some ❤️ by staring some of my repositories and following me on dev.to and github.

&lt;p&gt;
&lt;a href="https://www.linkedin.com/in/siddharth-singh-baghel-912866190/"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--imBRhTaX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/LinkedIn-0077B5%3Fstyle%3Dfor-the-badge%26logo%3Dlinkedin%26logoColor%3Dwhite"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/Siddharth-sing"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4pQJI-Km--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/GitHub-100000%3Fstyle%3Dfor-the-badge%26logo%3Dgithub%26logoColor%3Dwhite"&gt;
&lt;/a&gt;
&lt;a href="https://dev.to/siddharthsing"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6XzdLtQp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/dev.to-0A0A0A%3Fstyle%3Dfor-the-badge%26logo%3Ddev.to%26logoColor%3Dwhite"&gt;
&lt;/a&gt;

&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>kotlin</category>
      <category>android</category>
      <category>tutorial</category>
      <category>devjournal</category>
    </item>
    <item>
      <title>This week in Flutter #26</title>
      <author>Michele Volpato</author>
      <pubDate>Mon, 25 Oct 2021 09:21:43 +0000</pubDate>
      <link>https://dev.to/mvolpato/this-week-in-flutter-26-3ahm</link>
      <guid>https://dev.to/mvolpato/this-week-in-flutter-26-3ahm</guid>
      <description>&lt;p&gt;This week Google &lt;a href="https://android-developers.googleblog.com/2021/10/evolving-business-model.html"&gt;cut their cut&lt;/a&gt; for &lt;strong&gt;subscriptions&lt;/strong&gt; on Android. They already reduced to 15% the fee for non-subscription purchases &lt;a href="https://android-developers.googleblog.com/2021/03/boosting-dev-success.html"&gt;earlier this year&lt;/a&gt;. This is good news for indie developers who can make &lt;strong&gt;a bit more money&lt;/strong&gt; out of their app and hopefully reinvest it in the app itself.&lt;/p&gt;

&lt;p&gt;This week I discovered some new and old packages and projects and I thought to &lt;strong&gt;share&lt;/strong&gt; them with you. Which is the idea behind this newsletter, duh!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/PixelToast/flutter-boxy"&gt;Boxy&lt;/a&gt; is a package that can help you with more &lt;strong&gt;complex layouts&lt;/strong&gt; in your Flutter app. For instance, it makes it easier to layout children of a &lt;code&gt;Column&lt;/code&gt; such that they have the same width as the largest child.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/mj-hd/dashboy"&gt;Dashboy&lt;/a&gt; is a Gameboy &lt;strong&gt;emulator&lt;/strong&gt;. Its development is in a very early stage and some features are still missing.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/jamesblasco/snap_scroll_physics"&gt;Snap Scroll Physics&lt;/a&gt; adds a &lt;strong&gt;snap&lt;/strong&gt; behavior to scroll views. See the example in the repository to learn when they are useful.  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/sososdk/flash"&gt;Flash&lt;/a&gt; provides easily customizable &lt;strong&gt;messages and alerts&lt;/strong&gt; for your Flutter app. In the sample project, there are a lot of examples of how you can use this package.&lt;/p&gt;

&lt;p&gt;- Michele Volpato&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#development"&gt;
  &lt;/a&gt;
  Development 🧑‍💻
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#twoway-communication-between-a-webview-and-a-web-page"&gt;
  &lt;/a&gt;
  🔗 &lt;a href="https://diamantidis.github.io/2021/10/17/two-way-communication-between-flutter-webview-and-a-web-page"&gt;Two-way communication between a WebView and a web page&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;I have been working with web views inside Flutter apps for some time already, and my suggestion to you all is to avoid them if it is possible. This is not a Flutter-specific topic, I would avoid them also for native mobile projects. But if you must use them, then you should know how to use JavaScript to &lt;strong&gt;pass data between the app and the web page&lt;/strong&gt;, without the necessity to reload. &lt;a href="https://github.com/diamantidis"&gt;Ioannis Diamantidis&lt;/a&gt; tells you how.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#handling-gestures-in-flutter"&gt;
  &lt;/a&gt;
  🔗 &lt;a href="https://blog.logrocket.com/handling-gestures-flutter-gesturedetector/"&gt;Handling gestures in Flutter&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Gestures are one of the basic functionalities of all mobile apps. You need &lt;strong&gt;gestures&lt;/strong&gt; to &lt;strong&gt;interact&lt;/strong&gt; with the app via the touchscreen. In Flutter, gestures are so deeply intertwined with widgets that you do not even realize you are using them, for instance when you code the &lt;code&gt;onPressed&lt;/code&gt; parameter of a button. In this article by &lt;a href="https://github.com/Ivy-Walobwa"&gt;Ivy Walobwa&lt;/a&gt;, you'll learn all about gestures in Flutter, in case you need to use them outside of a standard widget.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#flutter-tabbar-tutorial-how-to-navigate-programmatically-between-tabs"&gt;
  &lt;/a&gt;
  🔗 &lt;a href="https://codewithandrea.com/articles/flutter-tab-bar-navigation/"&gt;Flutter TabBar Tutorial: How to Navigate Programmatically Between Tabs&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;How do you navigate &lt;strong&gt;programmatically&lt;/strong&gt; between tabs in Flutter? Learn it with this article by &lt;a href="https://github.com/bizz84/"&gt;Andrea Bizzotto&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#giving-superpowers-to-generics"&gt;
  &lt;/a&gt;
  🔗 &lt;a href="https://medium.com/@schultek/giving-superpowers-to-generics-2ccb6520d66c"&gt;Giving superpowers to generics&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This is a nice reading from &lt;a href="https://github.com/schultek"&gt;Kilian Schulte&lt;/a&gt;. It will give you a headache, but this is so different from the usual articles. In Dart, can you &lt;strong&gt;decompose a generic type&lt;/strong&gt; into its components? And how? To get the answer, read the article and get your deserved headache.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#flutter-slider-widgets-a-deep-dive-with-examples"&gt;
  &lt;/a&gt;
  🔗 &lt;a href="https://blog.logrocket.com/flutter-slider-widgets-deep-dive-with-examples/"&gt;Flutter Slider widgets: A deep dive with examples&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;In this article by &lt;a href="https://github.com/sbis04"&gt;Souvik Biswas&lt;/a&gt;, you'll learn everything there is to know about sliders in Flutter. At the end of the article, you'll also see how to create your &lt;strong&gt;own slider using custom painters&lt;/strong&gt;. I worked on a custom slider a couple of years ago, ad that time this article would have helped me a lot.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#building-games-in-flutter-with-flame-getting-started"&gt;
  &lt;/a&gt;
  🔗 &lt;a href="https://www.raywenderlich.com/27407121-building-games-in-flutter-with-flame-getting-started"&gt;Building Games in Flutter with Flame: Getting Started&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;As I said in the previous issue, "the best way to learn is to &lt;strong&gt;make a game out of it&lt;/strong&gt;". In this tutorial, written by &lt;a href="https://github.com/vguzzi"&gt;&lt;/a&gt;&lt;a href="https://www.raywenderlich.com/u/vguzzi"&gt;Vincenzo Guzzi&lt;/a&gt;, you'll learn how to use &lt;a href="https://flame-engine.org"&gt;Flame&lt;/a&gt; to create a game in Flutter. The example used in the article is a cute early Pokemon-like game.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#backend-%F0%9F%97%84"&gt;
  &lt;/a&gt;
  Backend 🗄
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#cloud-functions-with-dart-and-appwrite"&gt;
  &lt;/a&gt;
  🔗 &lt;a href="https://dev.to/nehanshj/cloud-functions-with-dart-and-appwrite-2nob"&gt;Cloud Functions with Dart and Appwrite&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;If you use Appwrite as your backend system, you will be happy to know that you do not need to know JavaScript or TypeScript to write backend code. You can use &lt;strong&gt;Dart&lt;/strong&gt; as the programming language for your &lt;strong&gt;backend functions&lt;/strong&gt;. In a world where JavaScript enthusiasts try to fit their favorite programming language everywhere, it is nice to see a different trend. Learn more about using Dart for backend functions in this article by &lt;a href="https://dev.to/nehanshj"&gt;&lt;/a&gt;&lt;a href="https://github.com/Nehanshj"&gt;Nehansh Jain&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#building-a-social-media-app-with-aws-amplify-and-flutter"&gt;
  &lt;/a&gt;
  🔗 &lt;a href="https://phatrabbitapps.com/series/aws-amplify"&gt;Building a Social Media App with AWS Amplify and Flutter&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/trey-rosius"&gt;Rosius Ndimofor&lt;/a&gt; wrote a four-part series of articles on creating a full app using Flutter and Amplify. It's a good starting point if you want to learn how to use &lt;strong&gt;Amplify&lt;/strong&gt; as a &lt;strong&gt;backend&lt;/strong&gt; for your Flutter app. Go give them a thump-up.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tools-%F0%9F%9B%A0"&gt;
  &lt;/a&gt;
  Tools 🛠
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#how-to-configure-a-precommit-for-a-flutter-application"&gt;
  &lt;/a&gt;
  🔗 &lt;a href="https://medium.com/@kevin.gamboa/how-to-configure-a-pre-commit-for-a-flutter-application-29dfbb853366"&gt;How to configure a pre-commit for a flutter application&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;You use linters and code analyzers before pushing your code to the repository, right? You spend time making sure that the code you write follows the coding guidelines of your company, both manually and by using &lt;strong&gt;automated tools&lt;/strong&gt;. Then Friday comes. Your colleagues are waiting for you to go get a drink and you still need to commit your latest changes, so you quickly run &lt;code&gt;git commit -am 'fixed nasty bug' &amp;amp;&amp;amp; git push&lt;/code&gt; and you can finally leave.&lt;/p&gt;

&lt;p&gt;Not so fast: you forgot to &lt;strong&gt;format&lt;/strong&gt; the code, &lt;strong&gt;analyze&lt;/strong&gt; it, and &lt;strong&gt;regression test&lt;/strong&gt; it. Avoid this dreadful situation by configuring pre-commits with this article by &lt;a href="https://github.com/kevingamboa17"&gt;Kevin Gamboa&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;[...]&lt;/p&gt;

&lt;p&gt;Read the rest on &lt;a href="https://ishouldgotosleep.com/this-week-in-flutter-26/"&gt;my website&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://ishouldgotosleep.com/subscribe-to-the-newsletter-devto/"&gt;Join the Flutter and Dart newsletter&lt;/a&gt; and receive it weekly in your inbox.&lt;/p&gt;




</description>
      <category>dart</category>
      <category>flutter</category>
      <category>news</category>
    </item>
    <item>
      <title>Feedback is a gift</title>
      <author>Tanaka Mutakwa</author>
      <pubDate>Mon, 25 Oct 2021 09:19:26 +0000</pubDate>
      <link>https://dev.to/tanakamutakwa/feedback-is-a-gift-41h7</link>
      <guid>https://dev.to/tanakamutakwa/feedback-is-a-gift-41h7</guid>
      <description>&lt;p&gt;One of the best ways to grow as a software developer is by frequently asking for feedback from the people you work closely with. Feedback is a gift, don’t resist it.&lt;/p&gt;

&lt;p&gt;Most companies have performance review cycles, however, these may only happen a few times in a year, depending on the cadence. You should aim to receive feedback more frequently than the performance review cycles. Feedback that is more immediate to your day-to-day work and actions is much better.&lt;/p&gt;

&lt;p&gt;Do you find asking for feedback uncomfortable? It may be stressful if you are not used to it, but constant feedback is an eye-opener, it is definitely worth asking for it from people you work closely with.&lt;/p&gt;

&lt;p&gt;In this article, you learn about how to ask for feedback effectively. This involves, what to get feedback about, whom you should ask for feedback, how to ask for feedback, and how to respond to feedback.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-to-get-feedback-about"&gt;
  &lt;/a&gt;
  What to get feedback about
&lt;/h3&gt;

&lt;p&gt;It is important to understand the different things you want to get feedback about. These will help you with identifying whom to ask for feedback and what questions to ask. As a software developer here are some things you should be getting feedback about:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; Your technical ability: the code you write and the tools you use.&lt;/li&gt;
&lt;li&gt; How you communicate: written and verbal.&lt;/li&gt;
&lt;li&gt; Your participation in meetings.&lt;/li&gt;
&lt;li&gt; How you present ideas and work.&lt;/li&gt;
&lt;li&gt; How you collaborate with your team.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Getting better in each of these areas will help you become a more accomplished software developer.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#whom-you-should-ask-for-feedback"&gt;
  &lt;/a&gt;
  Whom you should ask for feedback
&lt;/h3&gt;

&lt;p&gt;The best people to ask for feedback from are people you work closely with. They have enough context about your work to give you valuable feedback. As a software developer here are the suggested people to ask for feedback:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; Your manager.&lt;/li&gt;
&lt;li&gt; Other software developers on your team.&lt;/li&gt;
&lt;li&gt; Non-software developers, you work with frequently. Such as your team’s Product Owner, Designer, or Scrum Master.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This group of people will be able to give you valuable feedback from different perspectives.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-ask-for-feedback"&gt;
  &lt;/a&gt;
  How to ask for feedback
&lt;/h3&gt;

&lt;p&gt;After identifying whom you should ask for feedback, your next step is to approach them and ask if they would be happy to give you some feedback. Let them know why you have chosen them and that their feedback will be useful and contextual information to support your growth.&lt;/p&gt;

&lt;p&gt;Give the person you choose to provide your feedback some notice so they can think of concrete things to say.&lt;/p&gt;

&lt;p&gt;Prepare good questions before your feedback session with each person. Try to keep your questions less generic. Ask more narrow questions. Ask short questions that directly address specific aspects of your work or behaviour. As an example, instead of asking “What can I do to become a better software developer?”, you should instead ask “What is one thing I can do differently to improve my backend coding?” or “What is one thing I can do to improve my presentation skills for software demos?”. This will help people give you feedback that is actionable and aligns with your career goals.&lt;/p&gt;

&lt;p&gt;It is helpful to ask for feedback in context and promptly, it can make it easier for the person you've asked for feedback to recall specific behaviours and examples that can facilitate your learning.&lt;/p&gt;

&lt;p&gt;Feedback doesn't always have to be in person, you can use a digital platform to ask for feedback from several people at once and then follow up in person if needed.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-respond-to-feedback"&gt;
  &lt;/a&gt;
  How to respond to feedback
&lt;/h3&gt;

&lt;p&gt;Positive feedback is awesome, you learn that you are doing well at something.&lt;/p&gt;

&lt;p&gt;The feedback you receive from people will not always be positive. Some of it will be constructive criticism. It is important that you do not get defensive as you are asking for honesty from the people that give you feedback.&lt;/p&gt;

&lt;p&gt;Once you have received feedback from people you should make an effort to apply the learnings from the feedback to get better. Making changes based on the feedback you receive will help others to see that you are not only open to criticism but willing to adapt, to become a better developer.&lt;/p&gt;

&lt;p&gt;Always show your appreciation when others spend time sharing their perspective and providing constructive insights. This also encourages people to give you more feedback in the future.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;Asking for feedback is a great way to help you grow professionally and personally. The feedback you receive will help you to take more control of your career development and to get an accurate idea of what is expected of you.&lt;/p&gt;

&lt;p&gt;Proactively asking for feedback will help you learn faster. Avoid relying only on company performance review cycles to receive feedback. Start asking your team for feedback today!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-new-developer"&gt;
  &lt;/a&gt;
  The New Developer
&lt;/h3&gt;

&lt;p&gt;This article was originally published on  &lt;a href="https://thenewdeveloper.substack.com/"&gt;The New Developer&lt;/a&gt;. Head over there if you like this post and want to read others like it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Useful resources:&lt;/strong&gt;&lt;br&gt;
Feedback book -  &lt;a href="https://feedback.impraise.com/resources/ebook/how-to-give-effective-feedback/"&gt;https://feedback.impraise.com/resources/ebook/how-to-give-effective-feedback/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>programming</category>
      <category>codenewbie</category>
      <category>career</category>
    </item>
    <item>
      <title>TIL: How to use GraphQL variables to give my queries type safety</title>
      <author>Salma Alam-Naylor</author>
      <pubDate>Mon, 25 Oct 2021 09:19:24 +0000</pubDate>
      <link>https://dev.to/whitep4nth3r/til-how-to-use-graphql-variables-to-give-my-queries-type-safety-3m4h</link>
      <guid>https://dev.to/whitep4nth3r/til-how-to-use-graphql-variables-to-give-my-queries-type-safety-3m4h</guid>
      <description>&lt;p&gt;One of the things I love about GraphQL is how straightforward it is to get up and running with little to no experience. Using a browser-based GraphiQL interface — such as the GraphiQL explorer provided by Contentful — you can inspect your schema right there in the browser, and construct your queries in no time. But how can you make sure your GraphQL queries are safe from nasties? Let’s find out.&lt;/p&gt;

&lt;p&gt;To inspect your schema in Contentful’s GraphiQL interface and construct a GraphQL query, enter this URL in your browser, and swap out the &lt;code&gt;SPACE_ID&lt;/code&gt; for your Contentful space ID, and &lt;code&gt;ACCESS_TOKEN&lt;/code&gt; for your Contentful Delivery API Key.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;https://graphql.contentful.com/content/v1/spaces/{SPACE_ID}/explore?access_token={ACCESS_TOKEN}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Make an HTTP POST request with your programming language of choice — and boom — you’ve got data.&lt;/p&gt;

&lt;p&gt;This is an example of a query that we can use to request data from a single blog post by slug. Notice how we’re using a &lt;code&gt;where&lt;/code&gt; clause to filter the items by a &lt;code&gt;slug&lt;/code&gt; that matches a &lt;strong&gt;string&lt;/strong&gt; we supply.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight graphql"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;blogPostCollection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;where&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"what-is-a-rest-api"&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;slug&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;excerpt&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;readingTime&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And here’s the data we get back.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CyV3bbwv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0h7mlsl14xr3txfeo6rf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CyV3bbwv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0h7mlsl14xr3txfeo6rf.png" alt="A screenshot of the GraphiQL explorer showing a query made using a string in the where clause, and the data successfully returned."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here’s how we can make the same request using JavaScript fetch (and no external dependencies!).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`{
  blogPostCollection(where: {slug: "what-is-a-rest-api"}) {
    items {
      slug
      title
      excerpt
      readingTime
    }
  }
}`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="s2"&gt;`https://graphql.contentful.com/content/v1/spaces/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;SPACE_ID&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/environments/master`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;method&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;POST&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;Authorization&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`Bearer %ACCESS_TOKEN%`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;content-type&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;application/json&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;query&lt;/span&gt; &lt;span class="p"&gt;}),&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;All of this is great, and perfectly valid GraphQL. And, if you’re using a static site generator such as Next.js, Gatsby or Nuxt which will pre-render your pages at build-time and serve static pages to the client, you should be good to go. I’d been doing this for months using Contentful’s GraphQL API to fetch my data to power &lt;a href="https://whitep4nth3r.com/"&gt;my personal website built with Next.js&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;However, whilst queries like this are super-fast to write and get your projects out fast — what if you’re making GraphQL queries dynamically on the client and not as part of a static site build? What if someone could play around with your data in real-time by inserting an incorrect data type, a GraphQL mutation or similar instead of a string? &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Here’s where GraphQL variables save the day!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It’s worth mentioning that because the Contentful GraphQL API is read-only, this kind of scenario won’t happen — but security considerations are always good to bear in mind regardless. Let’s take a look!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#use-graphql-variables-for-type-safety-and-selfdocumenting-queries"&gt;
  &lt;/a&gt;
  Use GraphQL variables for type safety and self-documenting queries
&lt;/h2&gt;

&lt;p&gt;GraphQL variables offer an extra layer of protection in your queries, namely type safety — meaning that a query will only accept dynamic variables of certain data types, such as String, Int (number), DateTime and so on. And what’s more, &lt;strong&gt;there isn’t much more work needed to make your GraphQL queries safer!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To use variables in your GraphQL queries:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create what looks like a traditional function prefaced by the word &lt;code&gt;query&lt;/code&gt;. You can name this query function whatever you like. I’ve named mine &lt;code&gt;GetBlogPostBySlug&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Inside the parentheses of the function declaration, name and define the types of the variables the query will accept, and prefix your variable names with a &lt;code&gt;$&lt;/code&gt;. The query below will accept a variable named &lt;code&gt;$slug&lt;/code&gt;, which is of type String. The bang or exclamation mark that comes after the type name means that &lt;strong&gt;it is a required variable&lt;/strong&gt; for the query to execute.&lt;/li&gt;
&lt;li&gt;In an HTTP POST request to the GraphQL API, variables are passed to the GraphQL request as a separate property inside the body of the request. Click on the query variables pane at the bottom of the GraphiQL explorer. Create an object, and add your stringified variable name and value as “key”: “value” (it’s important to stringify the key name here!).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4yxOjRCt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ecws037v3bucgjhp6z4o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4yxOjRCt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ecws037v3bucgjhp6z4o.png" alt="A screenshot of the GraphiQL explorer showing the slug variable used correctly, passed in via a separate query variables tab, and the data returned is the same as the previous query."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let’s look at an example of using GraphQL variables using JavaScript fetch. Notice how we have replaced the original query with the function-style query from above, and have created a variable named &lt;code&gt;variables&lt;/code&gt; that we pass into the body of the HTTP request.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`query GetBlogPostBySlug($slug: String!) {
  blogPostCollection(where: {slug: $slug}) {
    items {
      slug
      title
      excerpt
      readingTime
    }
  }
}`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;variables&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;what-is-a-rest-api&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="s2"&gt;`https://graphql.contentful.com/content/v1/spaces/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;SPACE_ID&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/environments/master`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;method&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;POST&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;Authorization&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`Bearer %ACCESS_TOKEN%`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;content-type&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;application/json&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;variables&lt;/span&gt; &lt;span class="p"&gt;}),&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And that’s how I learned to make my GraphQL queries type-safe and free from nasty attacks on dynamic API calls! &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#going-further-with-more-types"&gt;
  &lt;/a&gt;
  Going further with more types
&lt;/h2&gt;

&lt;p&gt;There are a variety of different variable data types available on Contentful’s GraphQL API. As well as the standard data types such as String, Int and DateTime, you can also pass variables to a query that are entry-specific and API-specific.&lt;/p&gt;

&lt;p&gt;To inspect the types available on your schema, click on the Docs links at the top right of the GraphiQL explorer:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TTbTyKU3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ovkgn1qyi9ub9qec6bx5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TTbTyKU3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ovkgn1qyi9ub9qec6bx5.png" alt="A screenshot of the GraphiQL explorer, showing the docs button a the top right highlighted."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click on Query:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--g-EJ97dE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mxls5x2bctlvecd7q2z4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g-EJ97dE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mxls5x2bctlvecd7q2z4.png" alt="A screenshot of the GraphiQL explorer, showing the docs tab open and the root types — query area highlighted."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And find the content type you’d like to inspect.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OdL12jJT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b9jq01f56dmga7s6oy6y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OdL12jJT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b9jq01f56dmga7s6oy6y.png" alt="A screenshot of the GraphiQL explorer, showing the query tab open to inspect the scheme, with the type order: EventOrder highlighted."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Another thing I learned on this journey is that you can’t use variables in GraphQL for &lt;em&gt;everything&lt;/em&gt; — namely &lt;strong&gt;keys&lt;/strong&gt; in WHERE clauses.&lt;/p&gt;

&lt;p&gt;I recently created a GraphQL query to fetch the events on my website. On the &lt;a href="https://whitep4nth3r.com/events"&gt;main events page&lt;/a&gt;, I wanted to show future events in ascending order, and on the &lt;a href="https://whitep4nth3r.com/events/past"&gt;past events page&lt;/a&gt;, events in descending order.&lt;/p&gt;

&lt;p&gt;The two &lt;strong&gt;supported&lt;/strong&gt; variables involved in this query are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;$order&lt;/code&gt; — date_ASC or date_DESC&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;$date&lt;/code&gt; — as an ISO string&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But I also needed a &lt;strong&gt;third dynamic variable&lt;/strong&gt; — which was to control whether the API returned events before (&lt;code&gt;date_lt&lt;/code&gt; — date less than) or after (&lt;code&gt;date_gt&lt;/code&gt; — date greater than) a particular date. Unfortunately, this part of a GraphQL query cannot be controlled with a variable, and so I had to be creative and pass in a calculated string to the query like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// https://github.com/whitep4nth3r/p4nth3rblog/blob/main/contentful/Events.js&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;ContentfulApi&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@contentful/Api&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;defaultOptions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;future&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="cm"&gt;/*
 * Get all events -- future by default
 */&lt;/span&gt;
&lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;getEvents&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;defaultOptions&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Calculate date_ASC for future events, or date_DESC for past events&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;order&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;future&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;date_ASC&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;date_DESC&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;// Generate today's date&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="c1"&gt;// And format it to an ISO String&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;formattedDate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toISOString&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="c1"&gt;// Decide on the date filter to pass in as a string&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;dateFilter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;future&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;date_gt&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;date_lt&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;// Construct variables object to send with the HTTP POST request&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;variables&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;date&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;formattedDate&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;order&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="c1"&gt;// Build the query&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`query GetEvents($date: DateTime!, $order: [EventOrder]!) {
    eventCollection(where: {&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;dateFilter&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;: $date}, order: $order) {
      items {
        sys {
          id
        }
        date
        name
        link
        description
        timeTbc
        isVirtual
        image {
          url
          description
          height
          width
        }
      }
    }
  }`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;// Call out to the base API call&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;callContentful&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;variables&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;eventCollection&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;eventCollection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;items&lt;/span&gt;
    &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;eventCollection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;items&lt;/span&gt;
    &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;eventCollection&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;One other thing to notice is that the &lt;code&gt;$order&lt;/code&gt; variable is of type EventOrder, which we saw when we inspected the schema above, which is an API and entry-specific type!&lt;/p&gt;

&lt;p&gt;So there you have it. Fancy and safe GraphQL queries, so you can build great stuff with the &lt;a href="https://graphql.contentful.com/"&gt;Contentful GraphQL API&lt;/a&gt; without worrying. You can &lt;a href="https://github.com/whitep4nth3r/p4nth3rblog/tree/main/contentful"&gt;check out the code on GitHub&lt;/a&gt; for the full range of queries I make with GraphQL on my website, and if you’re curious about GraphQL and want to learn more, you can learn along with &lt;a href="https://www.contentful.com/developers/videos/learn-graphql/"&gt;Stefan Judis’ React and GraphQL video course&lt;/a&gt; in our developer portal. Happy querying, friends!&lt;/p&gt;

</description>
      <category>graphql</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>security</category>
    </item>
  </channel>
</rss>
