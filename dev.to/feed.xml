<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>10+ 😍 Best Tools For Developers - They Can't Live Without It</title>
      <author>Dev.to</author>
      <pubDate>Wed, 27 Oct 2021 08:03:07 +0000</pubDate>
      <link>https://dev.to/deve/10-best-tools-for-developers-they-cant-live-without-it-152i</link>
      <guid>https://dev.to/deve/10-best-tools-for-developers-they-cant-live-without-it-152i</guid>
      <description>&lt;p&gt; &lt;span&gt;The&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;b&gt;best tools for developers &lt;/b&gt;&lt;span&gt;are a priority for them to work. As a developer, he always works with code editors, browsers, terminals, etc. to improve his productivity. VS Code is one of the best editors, every developer would like to work with it. I've also listed the&lt;/span&gt;&lt;span&gt; &lt;/span&gt;VS Code extensions for JS &lt;span&gt;that are useful for a developer. And browser extensions are also a great way to improve productivity and I've also listed&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;b&gt;Chrome extensions for a developer&lt;/b&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;If you are a junior programmer, this will give you an idea the improve your coding skills, and if you are a senior developer, you are still learn something new from it. Extensions are one the &lt;b&gt;best tools for developers.&lt;/b&gt;&lt;/span&gt;&lt;span&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/span&gt;&lt;span&gt;Let's see the best tools for developers.&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;Read More: &lt;b&gt;&lt;a href="https://www.codelivly.com/7-best-tools-for-developers-they-cant-live-without-it/"&gt;10+ Best Tools For Developers - They Can't Live Without It&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;

</description>
    </item>
    <item>
      <title>Switch to a darker image when on dark mode!</title>
      <author>Ustariz Enzo</author>
      <pubDate>Wed, 27 Oct 2021 07:41:58 +0000</pubDate>
      <link>https://dev.to/ziratsu/switch-to-a-darker-image-when-on-dark-mode-2lkh</link>
      <guid>https://dev.to/ziratsu/switch-to-a-darker-image-when-on-dark-mode-2lkh</guid>
      <description>&lt;p&gt;Hey &lt;strong&gt;fellow creators&lt;/strong&gt;,&lt;/p&gt;

&lt;p&gt;Let's learn how to switch images when using a &lt;strong&gt;dark/light mode.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you prefer to watch the video &lt;strong&gt;version&lt;/strong&gt;, it's right here :&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/D5VuRHCfaxA"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-how-to-handle-the-dark-mode"&gt;
  &lt;/a&gt;
  1. How to handle the dark mode.
&lt;/h2&gt;

&lt;p&gt;You only need to add a media query so that, when you change the mode from light to dark in your computer settings, the theme of your app changes from light to dark. Here's how to do it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@media&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;prefers-color-scheme&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;dark&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
   &lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, there are two ways to change images when you switch from dark to light mode (or the other way around). Let's take a look at the first one!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-the-first-way-to-switch-images"&gt;
  &lt;/a&gt;
  2. The first way to switch images.
&lt;/h2&gt;

&lt;p&gt;You can wrap the images inside a picture element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;
&lt;span class="nt"&gt;&amp;lt;picture&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;source&lt;/span&gt; &lt;span class="na"&gt;srcset=&lt;/span&gt;&lt;span class="s"&gt;"ressources/dark-empire.jpg"&lt;/span&gt; &lt;span class="na"&gt;media=&lt;/span&gt;&lt;span class="s"&gt;"(prefers-color-scheme:dark)"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"ressources/light-empire.jpg"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/picture&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That way, if you've selected dark theme in your settings, then it will choose the first image, if not it will choose the second one.&lt;/p&gt;

&lt;p&gt;Then, you can style the images however you want! Here's how I did it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;img&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;500px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;600px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;object-fit&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;cover&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;object-position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;70px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#3-the-second-way-to-switch-images"&gt;
  &lt;/a&gt;
  3. The second way to switch images.
&lt;/h2&gt;

&lt;p&gt;But there's another way to do this! You can create an empty div in HTML and then add the image as a background of this div.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"img-toggle"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.img-toggle&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;500px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;600px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;70px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sx"&gt;url(ressources/light-empire.jgp)&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt; &lt;span class="n"&gt;cover&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;However, you then need to update your media query so that you have the darker image for the dark mode and not the lighter image.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@media&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;prefers-color-scheme&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;dark&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
     &lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
     &lt;span class="p"&gt;}&lt;/span&gt;
     &lt;span class="nc"&gt;.img-toggle&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="sx"&gt;url(ressources/dark-empire.jgp)&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt; &lt;span class="n"&gt;cover&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;You've done it!&lt;/em&gt; Now your dark theme can be even &lt;strong&gt;darker&lt;/strong&gt; than before ;)&lt;/p&gt;

&lt;p&gt;Come and take a look at my &lt;strong&gt;Youtube channel&lt;/strong&gt;: &lt;a href="https://www.youtube.com/c/Learntocreate/videos"&gt;https://www.youtube.com/c/Learntocreate/videos&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Follow me on my &lt;strong&gt;social medias&lt;/strong&gt;:&lt;br&gt;
Instagram : &lt;a href="https://www.instagram.com/learn_to_create1"&gt;https://www.instagram.com/learn_to_create1&lt;/a&gt;&lt;br&gt;
TikTok : &lt;a href="https://www.tiktok.com/@learn_to_create"&gt;https://www.tiktok.com/@learn_to_create&lt;/a&gt;&lt;br&gt;
Twitter : &lt;a href="https://twitter.com/Learn_To_Create"&gt;https://twitter.com/Learn_To_Create&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;See you soon for some easy-to-learn tutorials!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Enzo.&lt;/p&gt;

</description>
      <category>css</category>
      <category>html</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>How to be a Productive Web Developer?</title>
      <author>Danish Saleem</author>
      <pubDate>Wed, 27 Oct 2021 07:34:09 +0000</pubDate>
      <link>https://dev.to/mrdanishsaleem/how-to-be-a-productive-web-developer-l1f</link>
      <guid>https://dev.to/mrdanishsaleem/how-to-be-a-productive-web-developer-l1f</guid>
      <description>&lt;h2&gt;
  &lt;a href="#1-use-frameworks"&gt;
  &lt;/a&gt;
  1. Use Frameworks
&lt;/h2&gt;

&lt;p&gt;Frameworks are crucial for a Frontend Developer! Frameworks are the package of inbuilt templates, which we can use to build our own projects on top of it. Although learning a framework seems hard, the productivity is high.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-create-a-library-of-your-code-snippets"&gt;
  &lt;/a&gt;
  2. Create a library of your code Snippets
&lt;/h2&gt;

&lt;p&gt;This habit will increase your productivity at its peak! Any API or Code your write for a project will definitely be used in the other one. So, maintaining the library for your own code helps you to recycle the function and save a lot of time in debugging!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-write-a-blog-of-your-own-project"&gt;
  &lt;/a&gt;
  3. Write a blog of your own project
&lt;/h2&gt;

&lt;p&gt;This can be your Buy 1, Get 1 Offer!&lt;/p&gt;

&lt;p&gt;After any project or task, you made, you can write up a small blog of how you did it! This is a huge productive task as it helps you to understand the project more and also build a platform network for yourself from &lt;a href="https://www.buymeacoffee.com/mrdanishsaleem/"&gt;Blogs&lt;/a&gt;, &lt;a href="https://www.youtube.com/"&gt;YouTube&lt;/a&gt;, and so on...&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-use-tools-amp-extensions"&gt;
  &lt;/a&gt;
  4. Use Tools &amp;amp; Extensions
&lt;/h2&gt;

&lt;p&gt;Tools and Extensions will help you to save time tremendously! There are plenty of browsers and IDE Extensions available to make the tasks simple and clean. And also, many tools to recreate or perform the function you wanted!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-learn-amp-master-git"&gt;
  &lt;/a&gt;
  5. Learn &amp;amp; Master Git
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://git-scm.com/"&gt;Git&lt;/a&gt; &amp;amp; &lt;a href="https://github.com/"&gt;GitHub&lt;/a&gt; is one of the most powerful and life-saving tools for web developers! Upon mastering Git will help you to perform the wide dimensions in it and make your productivity level to the highest! Git can perform a task in seconds that takes unimaginable time without!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#lets-connect"&gt;
  &lt;/a&gt;
  Let's connect!
&lt;/h2&gt;

&lt;p&gt;You can follow me on &lt;a href="https://twitter.com/MrDanishSaleem"&gt;Twitter&lt;/a&gt;, &lt;a href="https://www.linkedin.com/in/mrdanishsaleem/"&gt;LinkedIn&lt;/a&gt; &amp;amp; &lt;a href="https://github.com/mrdanishsaleem/"&gt;GitHub&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;If you like this post. Kindly support me by &lt;a href="https://www.buymeacoffee.com/mrdanishsaleem"&gt;Buying Me a Coffee&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CwzNk0Zq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lh2ipcpv1hzlwj24eop1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CwzNk0Zq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lh2ipcpv1hzlwj24eop1.png" alt="Buy Me a Coffee" width="880" height="247"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>productivity</category>
      <category>tooling</category>
      <category>beginners</category>
    </item>
    <item>
      <title>10 Awesome Github Repos Every Web Developer Should Know</title>
      <author>Dev.to</author>
      <pubDate>Wed, 27 Oct 2021 07:18:14 +0000</pubDate>
      <link>https://dev.to/deve/10-awesome-github-repos-every-web-developer-should-know-27de</link>
      <guid>https://dev.to/deve/10-awesome-github-repos-every-web-developer-should-know-27de</guid>
      <description>&lt;p&gt;&lt;span&gt;Here I list 10 excellent JavaScript based GitHub resources that will help you to understand the language better and help you to write clean code. This list is based on my personal preference. &lt;/span&gt;&lt;/p&gt;
&lt;span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;ReadUI&amp;amp;quot More: &lt;b&gt;&lt;a href="https://news.google.com/articles/CAIiEHRNZDbK-6L3wLhhd1mvgX8qGQgEKhAIACoHCAow7-ynCzDc978DMKOIlgc?hl=en-US&amp;amp;gl=US&amp;amp;ceid=US%3Aen"&gt;10 Awesome Github Repos Every Web Developer Should Know&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;

</description>
    </item>
    <item>
      <title>15 reasons why you should learn JavaScript right now</title>
      <author>Dev.to</author>
      <pubDate>Wed, 27 Oct 2021 07:17:21 +0000</pubDate>
      <link>https://dev.to/deve/15-reasons-why-you-should-learn-javascript-right-now-57b8</link>
      <guid>https://dev.to/deve/15-reasons-why-you-should-learn-javascript-right-now-57b8</guid>
      <description>&lt;p&gt;There are two reasons why it’s sometimes hard to make a choice; either there are too few options to choose from, or there are too many. When it comes to programming languages, there is an embarrassment of riches, which in turn can cause mental gridlock. There’s Python, Java, JavaScript, C/CPP, PHP, Swift, C#, Ruby, Objective-C, and SQL, and that’s not even the full list! How do you choose?&lt;/p&gt;
&lt;p&gt;Now, bear in mind that as far as programmers go, there’s no such thing as knowing too many languages. A programmer with a grasp of many languages is a programmer who is highly marketable and very much in demand. Upskilling is always a smart way to go. &lt;/p&gt;
&lt;p&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/15-reasons-why-you-should-learn-javascript-right-now/&amp;amp;ved=2ahUKEwjq3LetlNPzAhWCjeYKHXtzBaUQFnoECAQQBQ&amp;amp;usg=AOvVaw2jcX34baRnSUligpWiA29Q&amp;amp;cshid=1634532657525"&gt;15 reasons why you should learn JavaScript right now&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Inspired by Apple's web animations, I have written a JavaScript library.</title>
      <author>Steven Lei</author>
      <pubDate>Wed, 27 Oct 2021 07:16:04 +0000</pubDate>
      <link>https://dev.to/stevenlei/inspired-by-apples-web-animations-i-have-written-a-javascript-library-2ll5</link>
      <guid>https://dev.to/stevenlei/inspired-by-apples-web-animations-i-have-written-a-javascript-library-2ll5</guid>
      <description>&lt;p&gt;Hello, I am Steven Lei.&lt;/p&gt;

&lt;p&gt;I love Apple products, and so do their website. They did a lot of fantastic animations for presenting their products, primarily scrolled-based, when we scroll the webpage up and down, the animation plays forward and backward.&lt;/p&gt;

&lt;p&gt;As a web developer, I tried to reproduce their animation work, learn from the process, and record it as screencasts.&lt;/p&gt;

&lt;p&gt;To achieve the scroll-based animation, we have to do some calculation work with JavaScript, like whether the element has appeared on screen, the scrolled distance, the element offset, and so forth. And we will update the element style accordingly.&lt;/p&gt;

&lt;p&gt;As they have the common requirements mentioned above, I wondered if this development process could be more straightforward. What if we can achieve the same goal without writing a single line of JavaScript?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#initial-design"&gt;
  &lt;/a&gt;
  Initial Design
&lt;/h2&gt;

&lt;p&gt;Scroll-based animations are based on the scrolling distance and position of elements. I would like to have a number when the element starts to appear from the bottom of the page, and disappear from the top. Numbers between &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;1&lt;/code&gt; would be simple enough, at least in this stage.&lt;/p&gt;

&lt;p&gt;I have used the &lt;code&gt;IntersectionObserver&lt;/code&gt; API to explore if the element is on-screen or not. And next, we have to think about how to use this number.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-flexibility"&gt;
  &lt;/a&gt;
  The Flexibility
&lt;/h2&gt;

&lt;p&gt;As animation involves a variety of requirements, for instance, fading in an element, moving the element, changing the color of a text etc. We cannot limit the ability just on some of those. So I have decided to put the number as a CSS variable, this would be flexible enough for working out different animation scenarios.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-name-of-the-library"&gt;
  &lt;/a&gt;
  The Name of the Library
&lt;/h2&gt;

&lt;p&gt;I have started to develop the library and named it &lt;strong&gt;Trigger JS&lt;/strong&gt; because every scroll triggers a new value, just a literal meaning.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#thoughts-on-the-usage-of-javascript"&gt;
  &lt;/a&gt;
  Thoughts on the usage of JavaScript
&lt;/h2&gt;

&lt;p&gt;I want to simplify the development process, so this library's purpose is to let developers create scroll-based animation without writing JavaScript. I have decided to use HTML attributes and CSS variables.&lt;/p&gt;

&lt;p&gt;As the library name is &lt;strong&gt;Trigger JS&lt;/strong&gt;, I have used &lt;code&gt;tg-&lt;/code&gt; as the prefix of the related HTML attributes. I know &lt;code&gt;tg-&lt;/code&gt; does not quite fulfil the standard of HTML5, that's okay, I will keep an option to set the prefix, for example, &lt;code&gt;data-tg-*&lt;/code&gt;, to completely get rid of this concern. But for now, I will keep using &lt;code&gt;tg-&lt;/code&gt; here first.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-first-attribute-raw-tgname-endraw-"&gt;
  &lt;/a&gt;
  The First Attribute: &lt;code&gt;tg-name&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;tg-name&lt;/code&gt; HTML attribute is mainly for two purposes: elements to be monitored and the name of the CSS variable.&lt;/p&gt;

&lt;p&gt;We will add the &lt;code&gt;tg-name&lt;/code&gt; attribute to the element that we want to monitor, for example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;tg-name=&lt;/span&gt;&lt;span class="s"&gt;"opacity"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  Hello World
&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Trigger JS&lt;/strong&gt; will fetch all HTML elements with &lt;code&gt;tg-name&lt;/code&gt; attribute into an array called &lt;code&gt;activeElements&lt;/code&gt; (via &lt;code&gt;document.querySelector('[tg-name'])&lt;/code&gt;), and observe them with &lt;code&gt;IntersectionObserver&lt;/code&gt; API.&lt;/p&gt;

&lt;p&gt;A &lt;code&gt;scroll&lt;/code&gt; event listener is attached to &lt;code&gt;window&lt;/code&gt;, which will calculate the relative position of elements in &lt;code&gt;activeElements&lt;/code&gt; within the browser window: &lt;code&gt;0&lt;/code&gt; when the element appears from the bottom, and &lt;code&gt;1&lt;/code&gt; when the element disappears from the top, and &lt;code&gt;0.5&lt;/code&gt; when it is in the middle.&lt;/p&gt;

&lt;p&gt;Finally, we will put this calculation result to the element with CSS variable, for instance, &lt;code&gt;--opacity: 0.5&lt;/code&gt;. So that we can use the value in the appropriate CSS property, in this example, &lt;code&gt;opacity: var(--opacity);&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-range-setting"&gt;
  &lt;/a&gt;
  The Range Setting
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;0&lt;/code&gt; to &lt;code&gt;1&lt;/code&gt; is excellent in some situations. But if we want to move an element with &lt;code&gt;transform&lt;/code&gt;, it would be good to adjust the start and end value (We can do the calculation in CSS with &lt;code&gt;calc()&lt;/code&gt; though, but let's make it simpler).&lt;/p&gt;

&lt;p&gt;That's why I have added &lt;code&gt;tg-from&lt;/code&gt; and &lt;code&gt;tg-to&lt;/code&gt;. If we want to move an element by &lt;code&gt;400px&lt;/code&gt; from the right to the left when scrolling up the page, we can set &lt;code&gt;tg-from="200"&lt;/code&gt; and &lt;code&gt;tg-to="-200"&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;And yes, we have to define the frequency of movement. We can set &lt;code&gt;tg-steps="400"&lt;/code&gt; so that the element is moving pixel-by-pixel. But what if we want to keep the increment to be &lt;code&gt;1&lt;/code&gt; but change the range of &lt;code&gt;tg-from&lt;/code&gt; and &lt;code&gt;tg-to&lt;/code&gt;? We can do the calculation ourselves or use another attribute &lt;code&gt;tg-step="1"&lt;/code&gt; to avoid doing the math.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#numbers-are-not-perfect"&gt;
  &lt;/a&gt;
  Numbers are not Perfect
&lt;/h2&gt;

&lt;p&gt;Sometimes, we need an exact value. Let's say we want to change the text color, what we need is a color code instead.&lt;/p&gt;

&lt;p&gt;That's why &lt;code&gt;tg-map&lt;/code&gt; is being added, this gave us the ability to &lt;em&gt;convert&lt;/em&gt; a value from a number to a value. For example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt;
  &lt;span class="na"&gt;tg-name=&lt;/span&gt;&lt;span class="s"&gt;"color"&lt;/span&gt;
  &lt;span class="na"&gt;tg-from=&lt;/span&gt;&lt;span class="s"&gt;"0"&lt;/span&gt;
  &lt;span class="na"&gt;tg-to=&lt;/span&gt;&lt;span class="s"&gt;"2"&lt;/span&gt;
  &lt;span class="na"&gt;tg-step=&lt;/span&gt;&lt;span class="s"&gt;"1"&lt;/span&gt;
  &lt;span class="na"&gt;tg-map=&lt;/span&gt;&lt;span class="s"&gt;"0: black; 1: blue; 2: purple"&lt;/span&gt;
&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  Hello World
&lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The calculation value will be 0, 1 or 2 throughout the scroll, and convert to a final value with the setting in &lt;code&gt;tg-map&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;0&lt;/code&gt; -&amp;gt; &lt;code&gt;black&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;1&lt;/code&gt; -&amp;gt; &lt;code&gt;blue&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;2&lt;/code&gt; -&amp;gt; &lt;code&gt;purple&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So we can update the text color easily with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;h1&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--color&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#noice-reduction"&gt;
  &lt;/a&gt;
  Noice Reduction
&lt;/h2&gt;

&lt;p&gt;Sometimes we are only interested in certain values. For example, we only want to know when &lt;code&gt;25&lt;/code&gt;, &lt;code&gt;50&lt;/code&gt;, &lt;code&gt;75&lt;/code&gt; happens from 0 to 100 (&lt;code&gt;tg-from="0"&lt;/code&gt; and &lt;code&gt;tg-to="100"&lt;/code&gt;). In this situation, &lt;code&gt;tg-filter&lt;/code&gt; takes part.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt;
  &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"heading"&lt;/span&gt;
  &lt;span class="na"&gt;tg-name=&lt;/span&gt;&lt;span class="s"&gt;"color"&lt;/span&gt;
  &lt;span class="na"&gt;tg-from=&lt;/span&gt;&lt;span class="s"&gt;"0"&lt;/span&gt;
  &lt;span class="na"&gt;tg-to=&lt;/span&gt;&lt;span class="s"&gt;"100"&lt;/span&gt;
  &lt;span class="na"&gt;tg-step=&lt;/span&gt;&lt;span class="s"&gt;"1"&lt;/span&gt;
  &lt;span class="na"&gt;tg-filter=&lt;/span&gt;&lt;span class="s"&gt;"25,50,75"&lt;/span&gt;
  &lt;span class="na"&gt;tg-map=&lt;/span&gt;&lt;span class="s"&gt;"25: red; 50: yellow; 75: green"&lt;/span&gt;
&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  Red (25), Yellow (50), Green (75)
&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vh&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;/* In order to make the page have enough rooms for scrolling */&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nf"&gt;#heading&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--color&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#open-source"&gt;
  &lt;/a&gt;
  Open Source
&lt;/h2&gt;

&lt;p&gt;The above is the introduction of creating this library, and this project is available on &lt;a href="https://github.com/triggerjs/trigger"&gt;GitHub - triggerjs/trigger&lt;/a&gt;. Please feel free to try out, submit pull requests and share your thoughts. Your opinion is precious.&lt;/p&gt;

&lt;p&gt;Please star it if you like it, and that would be great to have your participation.&lt;/p&gt;

&lt;p&gt;Cheers!&lt;/p&gt;

</description>
      <category>css</category>
      <category>javascript</category>
      <category>animation</category>
      <category>webdev</category>
    </item>
    <item>
      <title>20 Best CSS3 Library For Developers</title>
      <author>Dev.to</author>
      <pubDate>Wed, 27 Oct 2021 07:06:26 +0000</pubDate>
      <link>https://dev.to/deve/20-best-css3-library-for-developers-4kj2</link>
      <guid>https://dev.to/deve/20-best-css3-library-for-developers-4kj2</guid>
      <description>&lt;p&gt;Beautiful CSS was once a time-consuming task for web developers. The CSS libraries have made it easier, quicker, and more efficient to create responsive websites and web apps.&lt;br&gt;Are you still searching for the best CSS libraries available? Are you curious to find out which library is best? This article contains 20 top CSS libraries that will inspire you.&lt;br&gt;&lt;br&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/20-best-css3-library-for-developers/&amp;amp;ved=2ahUKEwi2tZmq3-vyAhUjieYKHVWMAFMQFnoECAoQAQ&amp;amp;usg=AOvVaw2AtoxfMkY_y5JPLB2VuSdV"&gt;20 Best CSS3 Library For Developers&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>7 GitHub projects to supercharge your Docker practices 🚀🧑‍💻</title>
      <author>Dev.to</author>
      <pubDate>Wed, 27 Oct 2021 07:04:32 +0000</pubDate>
      <link>https://dev.to/deve/7-github-projects-to-supercharge-your-docker-practices-2en2</link>
      <guid>https://dev.to/deve/7-github-projects-to-supercharge-your-docker-practices-2en2</guid>
      <description>&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;Today I would like to give examples of good GitHub projects that will help you implement complex animations, as well as useful functions in your projects.&lt;/p&gt;
&lt;p&gt;So let's get started &lt;/p&gt;

&lt;p&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/10-awesome-github-repos-every-web-developer-should-know/&amp;amp;ved=2ahUKEwiw1e_qpqbzAhU78HMBHVvBAWkQFnoECBAQAQ&amp;amp;usg=AOvVaw1YdY91hlP3suK6HGMF0MXW"&gt;7 GitHub projects to supercharge your Docker practices 🚀🧑‍💻&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>20 amazing 🤩 GitHub repositories that will help you 🪄 make a Beautiful Project </title>
      <author>Dev.to</author>
      <pubDate>Wed, 27 Oct 2021 06:57:56 +0000</pubDate>
      <link>https://dev.to/deve/20-amazing-github-repositories-that-will-help-you-make-a-beautiful-project-4ad5</link>
      <guid>https://dev.to/deve/20-amazing-github-repositories-that-will-help-you-make-a-beautiful-project-4ad5</guid>
      <description>&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;Today I would like to give examples of good GitHub repositories that will help you implement complex animations, as well as useful functions in your projects.&lt;/p&gt;
&lt;p&gt;So let's get started &lt;/p&gt;

&lt;p&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/10-awesome-github-repos-every-web-developer-should-know/&amp;amp;ved=2ahUKEwiw1e_qpqbzAhU78HMBHVvBAWkQFnoECBAQAQ&amp;amp;usg=AOvVaw1YdY91hlP3suK6HGMF0MXW"&gt;20 amazing 🤩 GitHub repositories that will help you 🪄 make a Beautiful Project&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>10 VS Code 😍extensions every Frontend Developer should use</title>
      <author>Dev.to</author>
      <pubDate>Wed, 27 Oct 2021 06:57:08 +0000</pubDate>
      <link>https://dev.to/deve/10-vs-code-extensions-every-frontend-developer-should-use-3lia</link>
      <guid>https://dev.to/deve/10-vs-code-extensions-every-frontend-developer-should-use-3lia</guid>
      <description>&lt;p&gt;Hello everyone, my name is Vansh and I'm a frontend developer. In this blog post, I would like to share 10 VS code extensions that every frontend developer should use. The purpose of using these extensions is to write faster, cleaner, and more consistent code. Let's Jump in! &lt;/p&gt;
&lt;br&gt;Read More: &lt;b&gt;&lt;a href="https://www.codelivly.com/10-vs-code-extensions-every-frontend-developer-should-use/"&gt;10 VS Code extensions every Frontend Developer should use&lt;/a&gt;&lt;/b&gt;

</description>
    </item>
    <item>
      <title>Cheat Sheets that always save my time during web development</title>
      <author>Dev.to</author>
      <pubDate>Wed, 27 Oct 2021 06:47:29 +0000</pubDate>
      <link>https://dev.to/deve/cheat-sheets-that-always-save-my-time-during-web-development-2aoh</link>
      <guid>https://dev.to/deve/cheat-sheets-that-always-save-my-time-during-web-development-2aoh</guid>
      <description>&lt;p&gt;During Coding I often forget exact properties and at that time searching on google take time at least for me ( because I don't know about you 😁😅).&lt;/p&gt;

&lt;p&gt;So I always prefer cheatsheets because in 90% of cases I got my answer from them.&lt;/p&gt;
&lt;p&gt;So today I'm going to share a list of top cheatsheets that save my time during development. &lt;/p&gt;

&lt;p&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/cheat-sheets-that-always-save-my-time-during-web-development/&amp;amp;ved=2ahUKEwiDjqvU_OnzAhVST30KHROPChIQFnoECAUQAQ&amp;amp;usg=AOvVaw1Ee26Ybt7AWL4eGcmh8Y_X"&gt;Cheat Sheets that always save my time during web development&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Best Coding App for Beginners [Android]</title>
      <author>Dev.to</author>
      <pubDate>Wed, 27 Oct 2021 06:47:05 +0000</pubDate>
      <link>https://dev.to/deve/best-coding-app-for-beginners-android-1568</link>
      <guid>https://dev.to/deve/best-coding-app-for-beginners-android-1568</guid>
      <description>&lt;p&gt;Programming skills open doors to dozens of lucrative tech careers. And there’s never been a better or easier time to learn. Just like learning any other language, coding requires regular practice to master. But it’s not always easy for people to find time to practice in front of a computer. That’s why coding apps are so helpful. In this article, we’ll cover the best coding apps on iOS and Android for those who want to learn to code. &lt;/p&gt;
&lt;br&gt;Read More : &lt;b&gt;&lt;a href="https://www.codelivly.com/best-coding-apps-for-beginners/"&gt;Best Coding App For Beginners&lt;/a&gt;&lt;/b&gt;

</description>
    </item>
  </channel>
</rss>
