<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Changelog #0003 ‚Äî üì¶ HTTPie command generation</title>
      <author>Cl√°udia Delgado</author>
      <pubDate>Sat, 27 Nov 2021 01:30:20 +0000</pubDate>
      <link>https://dev.to/pie/changelog-0003-httpie-command-generation-231f</link>
      <guid>https://dev.to/pie/changelog-0003-httpie-command-generation-231f</guid>
      <description>&lt;p&gt;Friday! It's the time to let you know what have we been up to. Check out what's new this week üëá&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#httpie-for-web-amp-desktop"&gt;
  &lt;/a&gt;
  HTTPie for Web &amp;amp; Desktop
&lt;/h2&gt;

&lt;p&gt;Our mission to provide the best experience to anyone working with APIs continues at full speed. We've reached feature parity with the &lt;a href="https://httpie.io/cli"&gt;terminal version&lt;/a&gt;, launched in a &lt;a href="https://httpie.io/beta"&gt;private beta&lt;/a&gt;, added &lt;a href="https://httpie.io/blog/changelog-0001"&gt;light theme&lt;/a&gt;, &lt;a href="https://httpie.io/blog/changelog-0002"&gt;tabs&lt;/a&gt;, persistency, and more.&lt;/p&gt;

&lt;p&gt;Now we are focusing on a couple of Big Things‚Ñ¢. In the meantime, here‚Äôs a few goodies across the platform:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#export-requests-to-httpie-for-terminal"&gt;
  &lt;/a&gt;
  üì¶ Export requests to HTTPie for Terminal
&lt;/h3&gt;

&lt;p&gt;HTTPie for Terminal is still our most beloved child, and we want it to go hand in hand with Web &amp;amp; Desktop. This is the first step in that direction: you can now generate HTTPie commands in the app.&lt;/p&gt;

&lt;p&gt;Open the preview and select the HTTPie option. Check the generated command and copy it to your terminal or share it with a CLI-first colleague. Easy!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#resize-panels"&gt;
  &lt;/a&gt;
  ‚ÜîÔ∏è Resize panels
&lt;/h3&gt;

&lt;p&gt;HTTPie aims to be perfectly tailored to your API requests &amp;amp; responses. We try our best, but you'll always know better. The ultimate power is now yours: you can resize panels.&lt;/p&gt;

&lt;p&gt;Choose your preferred panel's width by clicking and dragging the panel dividers to make them wider or narrower.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#reorder-tabs"&gt;
  &lt;/a&gt;
  üîÄ Re-order tabs
&lt;/h3&gt;

&lt;p&gt;If you use tabs for organization, you'll probably find this a great addition to our last tabs update. Now you can drag and drop each tab and place them in your preferred order.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#improvements"&gt;
  &lt;/a&gt;
  ‚ú® Improvements
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Need to recall when you sent that request? Now you don't need to remember. Check out the timestamp near the  time and size info, at the bottom of the response panel.&lt;/li&gt;
&lt;li&gt;Speaking of that area: when you hover the response size info, you now get more granular time &amp;amp; size stats.&lt;/li&gt;
&lt;li&gt;Introduced orange color for recoverable errors (e.g., invalid JSON in the editor). Red is now used exclusively for blocking issues, and orange is for all others.&lt;/li&gt;
&lt;li&gt;Tab names now omit common URL prefixes like &lt;code&gt;http://&lt;/code&gt; and &lt;code&gt;www.&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#fixes"&gt;
  &lt;/a&gt;
  ü™≤ Fixes
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Response headers were a bit mixed up with proxy headers, autch! We fixed it.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#httpie-for-terminal"&gt;
  &lt;/a&gt;
  HTTPie for Terminal
&lt;/h2&gt;

&lt;p&gt;There are improvements in the &lt;a href="https://github.com/httpie/httpie"&gt;development version&lt;/a&gt; of &lt;a href="https://httpie.io/cli"&gt;HTTPie for Terminal&lt;/a&gt; as well:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#plugins-management-command"&gt;
  &lt;/a&gt;
  üîå Plugins management command
&lt;/h3&gt;

&lt;p&gt;HTTPie for Terminal offers extensibility through plugins, and there are over 100+ of them available to try!&lt;/p&gt;

&lt;p&gt;They add things like new authentication methods (&lt;a href="https://github.com/akamai/httpie-edgegrid"&gt;akamai/httpie-edgegrid&lt;/a&gt;), transport mechanisms (&lt;a href="https://github.com/httpie/httpie-unixsocket"&gt;httpie/httpie-unixsocket&lt;/a&gt;), message convertors (&lt;a href="https://github.com/banteg/httpie-image"&gt;banteg/httpie-image&lt;/a&gt;), or simply change how a response is formatted.&lt;/p&gt;

&lt;p&gt;We‚Äôve added a new command, &lt;code&gt;httpie plugins&lt;/code&gt;, to help you manage (&lt;code&gt;install&lt;/code&gt;/&lt;code&gt;uninstall&lt;/code&gt;/&lt;code&gt;list&lt;/code&gt;) plugins. It also solves a long-standing plugins-related issue with non-&lt;code&gt;pip&lt;/code&gt; installations (e.g., via Homebrew) and it's a potential place for many new features to come. (&lt;a href="https://github.com/httpie/httpie/pull/1200"&gt;#1200&lt;/a&gt;)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#happy-testing-and-see-you-next-week"&gt;
  &lt;/a&gt;
  Happy testing, and see you next week!
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;üíÅüèª‚Äç‚ôÄÔ∏è If you‚Äôre not on the private beta yet, you can &lt;a href="https://httpie.io/beta"&gt;join the waitlist here&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;üëâ You can also follow &lt;a href="https://twitter.com/httpie"&gt;@httpie&lt;/a&gt; and join our &lt;a href="https://httpie.io/discord"&gt;Discord community&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Originally published on &lt;a href="https://httpie.io/blog/changelog-0003"&gt;HTTPie blog&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>devtools</category>
      <category>api</category>
      <category>testing</category>
      <category>httpie</category>
    </item>
    <item>
      <title>Move WSL File System to another Drive</title>
      <author>Camilo Martinez</author>
      <pubDate>Sat, 27 Nov 2021 00:14:32 +0000</pubDate>
      <link>https://dev.to/equiman/move-wsl-file-system-to-another-drive-2a3d</link>
      <guid>https://dev.to/equiman/move-wsl-file-system-to-another-drive-2a3d</guid>
      <description>&lt;p&gt;If the &lt;code&gt;C:&lt;/code&gt; drive is running out of space, we can move our &lt;strong&gt;WSL2&lt;/strong&gt; file system to another drive in a few steps.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;p&gt;If we are using an user different than root, we need to know it, running the &lt;code&gt;whoami&lt;/code&gt; command (WSL side):&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sVw-OEun--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/03sz2lk06bx7clveee03.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sVw-OEun--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/03sz2lk06bx7clveee03.png" alt="who am I" width="880" height="136"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Also we need to know the distro name and WSL version, running the &lt;code&gt;wsl --list --verbose&lt;/code&gt; command on PowerShell (Windows Side):&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MQuBrBWJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9msg5nr4n46iva9rer02.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MQuBrBWJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9msg5nr4n46iva9rer02.png" alt="WSL list" width="880" height="136"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Knowing the &lt;strong&gt;username:&lt;/strong&gt; &lt;code&gt;equiman&lt;/code&gt;, the linux &lt;strong&gt;distribution:&lt;/strong&gt; &lt;code&gt;Ubuntu&lt;/code&gt;, and confirm that we are using the &lt;code&gt;WSL 2&lt;/code&gt; version, we are ready to...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JoRXazFc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9luo23t87clkxk1wzhpx.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JoRXazFc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9luo23t87clkxk1wzhpx.gif" alt="moving day" width="501" height="274"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#move"&gt;
  &lt;/a&gt;
  Move
&lt;/h2&gt;

&lt;p&gt;All next steep need to be done on PowerShell (Windows Side).&lt;/p&gt;

&lt;p&gt;First we need to shutdown WSL to avoid data corruption. Close all WSL terminals that are using it and then run the &lt;code&gt;wsl --shutdown&lt;/code&gt; command.&lt;/p&gt;

&lt;p&gt;Next we are going to create a backup from our &lt;code&gt;Ubuntu&lt;/code&gt; linux distribution.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;mkdir &lt;/span&gt;D:&lt;span class="se"&gt;\b&lt;/span&gt;ackup
wsl &lt;span class="nt"&gt;--export&lt;/span&gt; Ubuntu D:&lt;span class="se"&gt;\b&lt;/span&gt;ackup&lt;span class="se"&gt;\u&lt;/span&gt;buntu.tar
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Don't worry if you not see progress indicators. This can be take a while depending how much data you have. Maybe it's good idea take a rest.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2i-cHxjE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vpzhpd362f1tokfvrxrx.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2i-cHxjE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vpzhpd362f1tokfvrxrx.gif" alt="waiting" width="640" height="362"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When finish, we need to to unregister the linux distribution from &lt;code&gt;C:&lt;/code&gt; drive. It will also release the disk space.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;wsl &lt;span class="nt"&gt;--unregister&lt;/span&gt; Ubuntu
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And then, import again on our new disk. I'll use &lt;code&gt;D:&lt;/code&gt; disk as an example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;mkdir &lt;/span&gt;D:&lt;span class="se"&gt;\W&lt;/span&gt;SL
wsl &lt;span class="nt"&gt;--import&lt;/span&gt; Ubuntu D:&lt;span class="se"&gt;\W&lt;/span&gt;SL&lt;span class="se"&gt;\ &lt;/span&gt;D:&lt;span class="se"&gt;\b&lt;/span&gt;ackup&lt;span class="se"&gt;\u&lt;/span&gt;buntu.tar
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;By default Ubuntu will use root as default user, to switch to our user (&lt;code&gt;equiman&lt;/code&gt; in my case) we need to run this commands.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="nv"&gt;$env&lt;/span&gt;:USERPROFILE&lt;span class="se"&gt;\A&lt;/span&gt;ppData&lt;span class="se"&gt;\L&lt;/span&gt;ocal&lt;span class="se"&gt;\M&lt;/span&gt;icrosoft&lt;span class="se"&gt;\W&lt;/span&gt;indowsApps
ubuntu config &lt;span class="nt"&gt;--default-user&lt;/span&gt; equiman
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Ensure replacing &lt;code&gt;equiman&lt;/code&gt; with yours.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Restart WSL running &lt;code&gt;wsl&lt;/code&gt; command and it's done.&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;That‚Äôs All Folks!&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Happy Coding&lt;/strong&gt; üññ&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/equiman"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sbQqp7D6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/im18z7jhm102axyxiapk.png" alt="Buy me a coffee" width="222" height="56"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>terminal</category>
      <category>wsl</category>
      <category>linux</category>
      <category>ubuntu</category>
    </item>
    <item>
      <title>2 Ways to Implement Binding Adapters</title>
      <author>Vincent T</author>
      <pubDate>Fri, 26 Nov 2021 22:32:11 +0000</pubDate>
      <link>https://dev.to/vtsen/2-ways-to-implement-binding-adapters-4omc</link>
      <guid>https://dev.to/vtsen/2-ways-to-implement-binding-adapters-4omc</guid>
      <description>&lt;p&gt;&lt;strong&gt;One way is using function parameter and another way is using extension function.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;There could be more than 2 ways to implement binding adapters, but this is what I know. Let's look at what binding adapters are first.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-binding-adapters"&gt;
  &lt;/a&gt;
  What is Binding Adapters?
&lt;/h2&gt;

&lt;p&gt;Binding adapter is used for &lt;strong&gt;implementing custom attribute&lt;/strong&gt; in your layout file. For example, instead of using the default&lt;code&gt;android:text&lt;/code&gt; attribute, you want to customize it by creating a new attribute &lt;code&gt;app:customText&lt;/code&gt;. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#default-attribute-raw-androidtext-endraw-"&gt;
  &lt;/a&gt;
  Default Attribute - &lt;code&gt;android:text&lt;/code&gt;
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;TextView
    android:id="@+id/textView"
    android:layout_width="wrap_content"
    android:layout_height="wrap_content"
    android:text="Hello World!"/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#custom-attribute-raw-appcustomtext-endraw-"&gt;
  &lt;/a&gt;
  Custom Attribute - &lt;code&gt;app:customText&lt;/code&gt;
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;TextView
    android:id="@+id/textView"
    android:layout_width="wrap_content"
    android:layout_height="wrap_content"
    app:customText="@{`Hello World!`}"/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To implement custom attribute, we use binding adapters. Binding adapter is part of the data binding library. So you need to include the following in your &lt;code&gt;build.gradle&lt;/code&gt; module file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;android {
    ...
    buildFeatures {
        dataBinding true
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To implement a binding adapter, you need to annotate the function with &lt;code&gt;@BindingAdapter("attribute name here")&lt;/code&gt; together with &lt;code&gt;View&lt;/code&gt; class that you want to bind to. It can be done by passing the &lt;code&gt;View&lt;/code&gt; class (e.g. &lt;code&gt;TextView&lt;/code&gt;) as a function parameter or using the extension function.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-pass-raw-view-endraw-as-function-parameter"&gt;
  &lt;/a&gt;
  1.  Pass &lt;code&gt;View&lt;/code&gt; as Function Parameter
&lt;/h2&gt;

&lt;p&gt;I am not sure if this is a standard way (or maybe a recommended way?) but this is in the official documentation. What I learned initially is the second method below (i.e. using the extension function)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@BindingAdapter("customText")
fun setCustomText(view:TextView, item: String) {
    view.text = "My Custom String: $item"
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#2-use-raw-view-endraw-extension-function"&gt;
  &lt;/a&gt;
  2. Use &lt;code&gt;View&lt;/code&gt; Extension Function
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@BindingAdapter("customText")
fun TextView.setCustomText(item: String) {
    text = "My Custom String: $item"
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Because this is an extension function, you can call it in code directly like this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;binding.textView.setCustomText("Hello World!")
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can do that with the first method too, but the second method is more readable.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#personally"&gt;
  &lt;/a&gt;
  Personally
&lt;/h2&gt;

&lt;p&gt;I prefer the second method, use the extension function to implement binding adapter. It reflects the actual intention, which is to extend the&lt;code&gt;TextView&lt;/code&gt; functionality.&lt;/p&gt;




&lt;p&gt;Originally published at &lt;a href="https://vtsen.hashnode.dev/2-ways-to-implement-binding-adapters"&gt;https://vtsen.hashnode.dev&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>android</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Auto-fixable import sorting rules for ESLint</title>
      <author>Bart≈Çomiej Stefa≈Ñski</author>
      <pubDate>Fri, 26 Nov 2021 22:29:58 +0000</pubDate>
      <link>https://dev.to/bmstefanski/auto-fixable-import-sorting-rules-for-eslint-laj</link>
      <guid>https://dev.to/bmstefanski/auto-fixable-import-sorting-rules-for-eslint-laj</guid>
      <description>&lt;p&gt;The pretty much standard way of sorting imports in JavaScript:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;3rd party imports first&lt;/li&gt;
&lt;li&gt;then local default exports&lt;/li&gt;
&lt;li&gt;and then local exports&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And here's the snippet that sorts them in this exact order and &lt;br&gt;
satisfies my needs completely!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;npm i &lt;span class="nt"&gt;--save-dev&lt;/span&gt; eslint-plugin-import  

&lt;span class="c"&gt;# or    &lt;/span&gt;

&lt;span class="nv"&gt;$ &lt;/span&gt;yarn add &lt;span class="nt"&gt;-D&lt;/span&gt; eslint-plugin-import
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// .eslintrc.js  &lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ignoredSortingDirectories&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.git&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.next&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.vscode&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;node_modules&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;  
  &lt;span class="c1"&gt;/// ... some other configurations  &lt;/span&gt;
  &lt;span class="na"&gt;rules&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;  
    &lt;span class="c1"&gt;// ... your rules  &lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;sort-imports&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;error&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;ignoreCase&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;ignoreDeclarationSort&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;}],&lt;/span&gt;  
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;import/order&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;  
      &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;   
      &lt;span class="p"&gt;{&lt;/span&gt;  
        &lt;span class="na"&gt;groups&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;external&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;builtin&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;internal&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;sibling&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;parent&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;index&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;  
        &lt;span class="na"&gt;pathGroups&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;  
          &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;getDirectoriesToSort&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;singleDir&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;pattern&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;singleDir&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/**`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;group&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;internal&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;})),&lt;/span&gt;  
          &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;pattern&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;env&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;group&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;internal&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;  
          &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;pattern&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;theme&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;group&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;internal&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;  
          &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;pattern&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;public/**&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;group&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;internal&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;after&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;  
        &lt;span class="p"&gt;],&lt;/span&gt;  
        &lt;span class="na"&gt;pathGroupsExcludedImportTypes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;internal&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;  
        &lt;span class="na"&gt;alphabetize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;  
          &lt;span class="na"&gt;order&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;asc&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  
          &lt;span class="na"&gt;caseInsensitive&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  
        &lt;span class="p"&gt;},&lt;/span&gt;  
      &lt;span class="p"&gt;},&lt;/span&gt;  
    &lt;span class="p"&gt;],&lt;/span&gt;  
    &lt;span class="c1"&gt;// ... your rules  &lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;  
&lt;span class="p"&gt;}&lt;/span&gt;  

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getDirectoriesToSort&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;  
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;getDirectories&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cwd&lt;/span&gt;&lt;span class="p"&gt;()).&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;ignoredSortingDirectories&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;  
&lt;span class="p"&gt;}&lt;/span&gt;  

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getDirectories&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;  
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;fs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;readdirSync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;  
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;fs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;statSync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;path&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;isDirectory&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;  
  &lt;span class="p"&gt;})&lt;/span&gt;  
&lt;span class="p"&gt;}&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>javascript</category>
      <category>react</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>Four tips for staying motivated while learning</title>
      <author>Zach Snoek</author>
      <pubDate>Fri, 26 Nov 2021 22:11:40 +0000</pubDate>
      <link>https://dev.to/zachsnoek/four-tips-for-staying-motivated-while-learning-473e</link>
      <guid>https://dev.to/zachsnoek/four-tips-for-staying-motivated-while-learning-473e</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Software engineering is a field that is regularly changing. Thus, developers must be continual learners to stay sharp.&lt;/p&gt;

&lt;p&gt;However, motivating yourself to learn and creating a lasting habit can be difficult, especially if you're self-studying outside of school or work.  Below are four techniques that I use to stay motivated while learning.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#quick-reference"&gt;
  &lt;/a&gt;
  Quick reference
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Set deadlines&lt;/li&gt;
&lt;li&gt;Gamify&lt;/li&gt;
&lt;li&gt;Spice it up&lt;/li&gt;
&lt;li&gt;Identify the end goal&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#1-set-deadlines"&gt;
  &lt;/a&gt;
  1. Set deadlines
&lt;/h2&gt;

&lt;p&gt;Learning without structure can feel like an endless task with no end in sight; it's often nice to have a sense of progress. I've found that artificial deadlines give me something to work toward and cleanly mark progress.&lt;/p&gt;

&lt;p&gt;Here are some examples of deadlines you could set for yourself:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I will study Python for 30 minutes by the end of the day&lt;/li&gt;
&lt;li&gt;I will complete one module of my online JavaScript course by Friday every week&lt;/li&gt;
&lt;li&gt;I will finish two projects by the end of the month&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Make sure to create manageable deadlines; experiment until you find something right for you. You may want to try a large interval at first and narrow it down until you find the sweet spot.&lt;/p&gt;

&lt;p&gt;For example, when I first started blogging, I wanted to publish bi-weekly. I quickly realized that writing and researching a quality post in two weeks wasn't possible for me, so I changed to a monthly schedule.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-gamify"&gt;
  &lt;/a&gt;
  2. Gamify
&lt;/h2&gt;

&lt;p&gt;Deadlines aren't for everyone: you might have better luck incentivizing yourself through gamification.&lt;/p&gt;

&lt;p&gt;For instance, you could implement a basic point system in which you earn a point every day you study SQL. You can use 14 points to treat yourself to a small meal or pay yourself five dollars. Or, you could reward yourself some other way when you've done something five consecutive days.&lt;/p&gt;

&lt;p&gt;I find the most motivation from the &lt;a href="https://lifehacker.com/jerry-seinfelds-productivity-secret-281626"&gt;Seinfeld method&lt;/a&gt;. The idea is that every day you do something‚Äì‚Äìlearning in some way, in our case‚Äì‚Äìyou put a red X through the day on a calendar. The more days you add X's, the longer the chain of X's gets; your goal is to "not break the chain." This method is essentially point-earning and provides an incentive for showing up consistently.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-spice-it-up"&gt;
  &lt;/a&gt;
  3. Spice it up
&lt;/h2&gt;

&lt;p&gt;I've found it helpful to vary how I study the material. I find that learning through one medium can be tiring after a while. Temporarily switching the medium motivates me to keep learning.&lt;/p&gt;

&lt;p&gt;If I'm learning one topic, I find a preferred, primary medium for studying it‚Äì‚Äìtypically text. I'll then augment this material with other media such as YouTube videos and podcasts.&lt;/p&gt;

&lt;p&gt;For example, if I'm learning about prototypes in JavaScript, I'll spend most of my time reading Mozilla documentation or other articles. When I've absorbed that material, I'll watch various YouTube videos about prototypes and then try to write code and build something that uses them.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-identify-the-end-goal"&gt;
  &lt;/a&gt;
  4. Identify the end goal
&lt;/h2&gt;

&lt;p&gt;Finally, learn with a clear goal in mind, and use this goal to remind yourself why you're learning.&lt;/p&gt;

&lt;p&gt;Why are you learning? Maybe you're preparing for a career change that will boost your income. Or perhaps you're &lt;a href="https://www.swyx.io/learn-in-public/"&gt;learning in public&lt;/a&gt; to help others and gain credibility. (Upward mobility has been a good impetus for me.)&lt;/p&gt;

&lt;p&gt;Remind yourself of this goal frequently: write it down on a sticky note attached to your computer or set a reminder on your phone; whatever is visible to you.&lt;/p&gt;

&lt;p&gt;Most importantly, find a goal that motivates you when you're the most unmotivated. A resilient objective can carry you through the periods when you'd rather watch Netflix or stop learning.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;All of these methods might not work for you, but hopefully, you've been able to pick up something helpful. Let me know in the comments if there's a motivation technique you use that I missed!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#lets-connect"&gt;
  &lt;/a&gt;
  Let's connect
&lt;/h2&gt;

&lt;p&gt;If you enjoyed this post, connect with me on &lt;a href="https://www.linkedin.com/in/zach-snoek-5b327b179/"&gt;LinkedIn&lt;/a&gt;, &lt;a href="https://github.com/zachsnoek"&gt;GitHub&lt;/a&gt;, and &lt;a href="https://twitter.com/zach_snoek"&gt;Twitter&lt;/a&gt;! You can also &lt;a href="https://mailchi.mp/2df4b6d5458f/signup-page"&gt;subscribe to my mailing list&lt;/a&gt; and get the latest content and news from me.&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>motivation</category>
    </item>
    <item>
      <title>What to charge for your app and what‚Äôs the value of it?</title>
      <author>Appmaster.io</author>
      <pubDate>Fri, 26 Nov 2021 22:05:38 +0000</pubDate>
      <link>https://dev.to/appmaster_io/what-to-charge-for-your-app-and-whats-the-value-of-it-ak6</link>
      <guid>https://dev.to/appmaster_io/what-to-charge-for-your-app-and-whats-the-value-of-it-ak6</guid>
      <description>&lt;p&gt;We all want to see a return on our investment, especially when creating applications, which require significant resources.&lt;/p&gt;

&lt;p&gt;You spent money, your time, put in a lot of effort, and finally, your app is ready. Now comes the new challenge: what to charge for your app?&lt;/p&gt;

&lt;p&gt;The decision depends on many factors. The number of working hours, testing costs, marketing and promotion, purchase of any licenses are some aspects that define the overall cost of development. Calculate the costs first, then set the price for the app.&lt;/p&gt;

&lt;p&gt;To put an adequate price tag on your product, first, let's look at the different pricing models.&lt;/p&gt;

&lt;p&gt;Understanding the pros and cons of pricing models will help you choose the best option for you.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#pricing-models"&gt;
  &lt;/a&gt;
  Pricing Models
&lt;/h1&gt;

&lt;p&gt;It is essential to find the balance between the price that customers are ready to pay and the amount you are hoping to receive to cover production costs and costs of future maintenance. The pricing model you will be prepared to adapt will entirely depend on the nature of your app.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#free"&gt;
  &lt;/a&gt;
  Free
&lt;/h2&gt;

&lt;p&gt;Who doesn't like getting things for free? Everybody does. Offering your app for free can be a good starting point. Lots of customers will be willing to try the app as long as it costs nothing.&lt;/p&gt;

&lt;p&gt;It is a working model for mobile apps. Because stores are full of options, people usually start looking for the solution from the "free" tab.&lt;/p&gt;

&lt;p&gt;Another reason for making the app completely free is if you are not planning to generate profit directly from it, rather than use it as a booster for other revenue streaming platforms. For example, redirect users to a website where they can make a purchase.&lt;/p&gt;

&lt;p&gt;In other cases, you need to figure out additional ways to generate revenue. And a profitable way to do so ‚Äî run in-app advertisements.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#inapp-ads"&gt;
  &lt;/a&gt;
  In-app ads
&lt;/h2&gt;

&lt;p&gt;Running advertisements in the app generate ongoing revenue. You can implement many different formats for serving ads within your application: video ads, banners, pop-ups, etc.&lt;/p&gt;

&lt;p&gt;Still, you need to be very precise when picking the advertisement's format, periodicity, and subject. Otherways you may disrupt users with irrelevant, aggressive content.&lt;/p&gt;

&lt;p&gt;Use online services, such as Google AdMob, for filtering and sorting in-app ads.&lt;/p&gt;

&lt;p&gt;What else can you do? Offer customers to make a one-time payment to turn off the ads.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#inapp-purchases"&gt;
  &lt;/a&gt;
  In-app purchases
&lt;/h2&gt;

&lt;p&gt;We bet you saw many examples of this model. According to this structure, a user can download an app for free, but it offers them some additional features for the money. If it's a game app, you can refill lives or unlock a photo filter in the editing app for an extra price.&lt;/p&gt;

&lt;p&gt;This is generally the most using model as it doesn't have any noticeable flaws and allows users to access the significant app functionality.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#freemium"&gt;
  &lt;/a&gt;
  Freemium
&lt;/h2&gt;

&lt;p&gt;The term freemium comes from two words ‚Äî free + premium. Like in-app purchases, it lets your customers download the app for free and then charges them for a premium feature.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You can try several options:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Offer two versions of the app&lt;/strong&gt; ‚Äî free and premium with broadened functionality. After downloading a free version and testing it, users themselves can decide whether to upgrade to premium or the free set is enough for their needs.&lt;br&gt;
&lt;strong&gt;Provide a free trial.&lt;/strong&gt; Set a limited free trial for your app, and once it expires, customers will have to pay to continue using the app.&lt;br&gt;
With the freemium model, your goal is to allure customers with the app's functionality and compel them to switch to the paid version.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#potential-pitfalls"&gt;
  &lt;/a&gt;
  Potential pitfalls
&lt;/h2&gt;

&lt;p&gt;This pricing model can cause a lot of work for developers as they will be required to provide continuous updates and improvements and manage two different apps.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#subscription"&gt;
  &lt;/a&gt;
  Subscription
&lt;/h2&gt;

&lt;p&gt;Subscription is another good strategy to consider for your app. Everything is simple: users have to pay a monthly/annual fee to continue using the app.&lt;/p&gt;

&lt;p&gt;It is a general approach for streaming platforms and music apps. We all have an active subscription to Spotify, Netflix, or Apple Music.&lt;/p&gt;

&lt;p&gt;Even though you may not gain new users, you are still generating revenue from subscribed customers. Look at this as an opportunity to build loyal and long-lasting relationships with your customers. Keep in mind that you still have to provide updates and improvements, so you will not see a lot of subscription cancellations.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#paid"&gt;
  &lt;/a&gt;
  Paid
&lt;/h2&gt;

&lt;p&gt;This one is the simplest pricing model. It requires customers to pay a one-time fee to download the app and freely use it.&lt;/p&gt;

&lt;p&gt;More importantly, users can't get a feel for the app, and you ask them to pay you money right away. Your potential users need to understand that this app is worth purchasing. Use marketing to convince people that your application is one of the best to help them solve their problems.&lt;/p&gt;

&lt;p&gt;A short description in the app store is not enough. Users will want to know as many details as possible to make a purchase decision. So give them this information, create visual content to show how everything works, launch a website, and use related platforms for the promotion.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#whats-the-value-of-your-app"&gt;
  &lt;/a&gt;
  What's the value of your app?
&lt;/h1&gt;

&lt;p&gt;Let's assume you analyzed all the pricing models and picked the most appropriate one. Whichever option you are considering, you still have to put a price tag.&lt;/p&gt;

&lt;p&gt;To make the right decision, you have to consider many things. Among them:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The purpose of your app&lt;/li&gt;
&lt;li&gt;Your business goals&lt;/li&gt;
&lt;li&gt;Your target audience&lt;/li&gt;
&lt;li&gt;Market demand&lt;/li&gt;
&lt;li&gt;The cost of building and maintaining the app&lt;/li&gt;
&lt;li&gt;Your competitors&lt;/li&gt;
&lt;li&gt;Where you are going to display the app&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But most importantly, identify the value of your app. You and your team are the first people to understand the value of your product. Only with a clear idea, you make people believe that they will get something worthwhile in return after the purchase.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#how-to-identify-the-value-of-the-app"&gt;
  &lt;/a&gt;
  How to identify the value of the app?
&lt;/h1&gt;

&lt;p&gt;First, specify the problem your app solves: a dictionary translating verbal speech, an editor improving your photos, or a task tracker organizing your workday.&lt;/p&gt;

&lt;p&gt;Then, identify how it delivers the solution and is better than thousands of other similar apps. Your dictionary may have a higher translation speed; an editor provides a broader range of manual settings.&lt;/p&gt;

&lt;p&gt;Prove to your customers that if they pay for your dictionary, they will get a pocket translator providing instant service and keeping translations in separate text documents. So it can replace interpreters and reduce expenses that you most likely spend to pay for their work.&lt;/p&gt;

&lt;p&gt;Nonetheless, try to be honest with your customers and respect their choice. You don't want to exceed their expectations. Built your relationships on trust, only this way you can earn loyalty and retention of your customers, which is key to ongoing revenue.&lt;/p&gt;

&lt;p&gt;Last but not least ‚Äî make a competitive analysis. Look at the rates of similar apps and analyze the market you are entering in. Again, you can follow some strategies. Get your advantage by undercutting competitors on the price. If your app is on the same level, selling it for a higher price won't do any good. However, if your app is more complex and advanced, you should charge more.&lt;/p&gt;

&lt;p&gt;Many suggest when releasing your application to set a higher price and lower it over time. Be practical, and don't put more than average users will pay. If we are talking about mobile app stores, users expect the cost of the apps to be around 0.99 cents, if not free. And they hardly pay an amount more than $6.99.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;Considering these facts, stores now contain more free apps, and paid ones continue to decrease. The best way to go, release a free app with in-app purchases. It gives you a field to be creative; you may include more options of purchasable features and service, providing customers with a choice: whether to pay or not, for what to spend money. If you decide to sell your app aside from the store, go with the subscription model. The pricing strategy should reflect the value of your app. A quality product will always find its customers.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>How I send a gift coupon to my nerdy friend </title>
      <author>Siddharth</author>
      <pubDate>Fri, 26 Nov 2021 21:49:53 +0000</pubDate>
      <link>https://dev.to/xceed/how-i-send-a-gift-coupon-to-my-nerdy-friend-11b2</link>
      <guid>https://dev.to/xceed/how-i-send-a-gift-coupon-to-my-nerdy-friend-11b2</guid>
      <description>&lt;h3&gt;
  &lt;a href="#context"&gt;
  &lt;/a&gt;
  Context
&lt;/h3&gt;

&lt;p&gt;Our company has organized "Secret Santa", pre-covid times. I got the name of a nerdy colleague and a friend. I decided to gift him Amazon gift coupon. Like people usually do - hiding gift somewhere in desk, I instead created an online puzzle like a treasure hunt using some automation. If he solves he will receive gift on his email.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#starting-point"&gt;
  &lt;/a&gt;
  Starting Point
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Printed a bar code on a paper and put it on my friend's workstation desk. Upon scanning, it redirects to a simple website I've created using wixsite.com.
Here's the picture of printed barcode along with other gifts -
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uy2Zd1qA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5wpvr5si0a63vaula843.jpg" alt="gifts" width="880" height="660"&gt;
&lt;/li&gt;
&lt;li&gt;The landing page shows following instruction -
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--amOaOTiB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k4i4vqic0edw0pytki5v.png" alt="landing-page" width="597" height="280"&gt; &lt;/li&gt;
&lt;li&gt;To get your gift all you need is an email address.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#dont-scroll-take-the-challenge"&gt;
  &lt;/a&gt;
  Don't scroll! Take the challenge
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Before I tell you more, why don't you give a try yourself to find the email address? Here's the link after scanning barcode - &lt;a href="https://turantsephele.wixsite.com/giftgenerator"&gt;https://turantsephele.wixsite.com/giftgenerator&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;S&lt;br&gt;
C&lt;br&gt;
R&lt;br&gt;
O&lt;br&gt;
L&lt;br&gt;
L&lt;/p&gt;

&lt;p&gt;T&lt;br&gt;
O&lt;/p&gt;

&lt;p&gt;S&lt;br&gt;
E&lt;br&gt;
E&lt;/p&gt;

&lt;p&gt;N&lt;br&gt;
E&lt;br&gt;
X&lt;br&gt;
T&lt;/p&gt;

&lt;p&gt;S&lt;br&gt;
T&lt;br&gt;
E&lt;br&gt;
P&lt;br&gt;
S&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#finding-hints-to-find-the-email-address"&gt;
  &lt;/a&gt;
  Finding hints to find the email address
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Once you click "Get email address", it redirects you to another page which shows a timer and nothing else. And with a small hidden button somewhere in page.&lt;/li&gt;
&lt;li&gt;If you are able to find the button and click, it redirects you to &lt;a href="http://fatiherikli.github.io/brainfuck-visualizer/#KysrKysrKysrKwpbCj4rKysrKwo+KysrKysrCj4rKysrKysrCj4rKysrKysrKysrCj4rKysrKysrKysrKwo8PDw8PC0KXQo+Pj4tLS4+Ky4tLS4+Ky48Ky4rLjw8PCsrKysrKysrLi0tLS4tLS0uKysrLi0tLisrLgotLS0tLS4rKysrLi0tLS0tLisrKysrLj4+Pi48PDwrLgotLS0uKysrLi0tLS0uKysrLi0uKysuLS0tLS0tLS4rKysrKysuCisrLi0tLi0uKy4+Pj4tLS48PDwuLS4tLi0tLS0uKysrKysrLisuLS4+Pj4rLjw8PC4tLS0tLS4rKysrKy4rKysuCi0tLS4+Pj4tLjw8PC0tLS0uPj4+KysuPDw8KysrKy4tLS0uKysrLj4+PisuPDw8Lj4+Pi0tLgoK"&gt;brainfuck visualizer&lt;/a&gt; with some pre-populated code. &lt;/li&gt;
&lt;li&gt;I've written this code in brainfuck and when you run it outputs next hint.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#final-hint"&gt;
  &lt;/a&gt;
  Final Hint
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;That brainfuck code outputs a simple string -
&lt;code&gt;Decode:747572616e7473657068656c6540676d61696c2e636f6d&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;After decoding, it gives you the email address.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#automation-for-sending-gift-coupon"&gt;
  &lt;/a&gt;
  Automation for sending gift coupon
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;I have created a IFTTT flow which triggers when there is an incoming email with subject "HOG RIEEDERRRRR" and it is from my friend's email address.&lt;/li&gt;
&lt;li&gt;Once this condition matches, IFTTT sends an email back with gift coupon details.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#to-make-sure-friend-dont-stuck"&gt;
  &lt;/a&gt;
  To make sure friend don't stuck
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Once timer ran out it reveals a link to brainfuck visualizer code.&lt;/li&gt;
&lt;li&gt;If he can't solve the puzzle in 3 days, an email triggers and sent gift coupon details to friend's email address. Again using IFTTT.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;That's all folks!&lt;/p&gt;

&lt;p&gt;If you did something similar or have some idea like this, drop it in comments :)&lt;/p&gt;

</description>
      <category>wixsite</category>
      <category>ifttt</category>
      <category>automation</category>
    </item>
    <item>
      <title>GameOff #4 - Total destruction!</title>
      <author>Meat Boy</author>
      <pubDate>Fri, 26 Nov 2021 21:45:25 +0000</pubDate>
      <link>https://dev.to/meatboy/gameoff-4-total-destruction-4pj4</link>
      <guid>https://dev.to/meatboy/gameoff-4-total-destruction-4pj4</guid>
      <description>&lt;p&gt;Since the last post, we have added so much to the game! VFX is ready, with better character animations, new monsters and map tweaks. Over the map is flying now Santa Claus throwing gifts with weapons to players.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/duNGQwla650"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>github</category>
      <category>unity3d</category>
      <category>gamedev</category>
      <category>devjournal</category>
    </item>
    <item>
      <title>How to Easily Add a Map to Your Website in Under 10 Minutes</title>
      <author>Kingsley Ubah</author>
      <pubDate>Fri, 26 Nov 2021 21:05:44 +0000</pubDate>
      <link>https://dev.to/ubahthebuilder/how-to-easily-add-a-map-to-your-website-in-under-10-minutes-4gkm</link>
      <guid>https://dev.to/ubahthebuilder/how-to-easily-add-a-map-to-your-website-in-under-10-minutes-4gkm</guid>
      <description>&lt;p&gt;Many modern web platforms leverage on maps and location-based features to provide services to users. Some popular examples of this are Uber and Airbnb. &lt;/p&gt;

&lt;p&gt;With the  &lt;a href="https://developer.tomtom.com/products/maps-sdk"&gt;TomTom Maps SDK&lt;/a&gt; , including a map in your website has never been easier. The toolkit enables access to various mapping features including street maps, real-time traffic conditions, fuzzy search and route planning for travellers.&lt;/p&gt;

&lt;p&gt;As a developer, you can leverage on &lt;a href="https://developer.tomtom.com/maps-sdk-web-js/documentation"&gt;TomTom's APIs methods&lt;/a&gt; to build and customize maps in your web or mobile application.&lt;/p&gt;

&lt;p&gt;Let's walkthrough the process of adding a map to your website using the TomTom Maps SDK. In the end, I'll include a link to the source code for this project for reference.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting Started
&lt;/h3&gt;

&lt;p&gt;Using TomTom Maps SDK is both easy and free. First, you'll need to  &lt;a href="https://developer.tomtom.com/user/register"&gt;register a TomTom developer account&lt;/a&gt;  to get an API key. This key gives you access to TomToms services, and is automatically generated for you on your dashboard once you're signed in.&lt;/p&gt;

&lt;p&gt;To include the SDK in your application, you have three options; you can either use a CDN link,  &lt;a href="https://developer.tomtom.com/maps-sdk-web-js/downloads"&gt;download the ZIP file&lt;/a&gt;  or  &lt;a href="https://developer.tomtom.com/maps-sdk-web-js/downloads"&gt;install the npm package. &lt;/a&gt; &lt;/p&gt;

&lt;p&gt;The easiest channel is through the CDN. Below are the links to the CDN files:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;link rel='stylesheet' type='text/css' href='https://api.tomtom.com/maps-sdk-for-web/cdn/6.x/6.15.0/maps/maps.css'&amp;gt;
&amp;lt;script src="https://api.tomtom.com/maps-sdk-for-web/cdn/6.x/6.15.0/maps/maps-web.min.js"&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src="https://api.tomtom.com/maps-sdk-for-web/cdn/6.x/6.15.0/services/services-web.min.js"&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To include them, all you have to do is paste these links inside your html file and you're good to go.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#adding-a-map"&gt;
  &lt;/a&gt;
  Adding a map
&lt;/h3&gt;

&lt;p&gt;Let's add a map to our website.&lt;/p&gt;

&lt;p&gt;Create the html file for your site and paste the CDN links above, then, create a div to act as a wrapper for your map:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;lt;!-- html --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"mapArea"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="c"&gt;&amp;lt;!-- scripts --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;   
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Maybe style it a bit?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;style&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nf"&gt;#mapArea&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;70vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50vw&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;style&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then create a map instance by calling &lt;code&gt;tt.map&lt;/code&gt;, which is part of the windows object:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;APIKey&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;&amp;lt;your-api-key&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;Lagos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;lat&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;6.5244&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;lng&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.3792&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;map&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;tt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;APIKey&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;container&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mapArea&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;center&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Lagos&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;zoom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We passed an options object to the method containing the following properties:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;key: The API key for your app, obtained from the developer dashboard.&lt;/li&gt;
&lt;li&gt;container: The div which we want to insert our map into.&lt;/li&gt;
&lt;li&gt;center: a focus point for our map.&lt;/li&gt;
&lt;li&gt;zoom: a zoom level for our map.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Your map should look like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--W-c1eFt3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637936581292/5FdwuJqHQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W-c1eFt3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637936581292/5FdwuJqHQ.png" alt="Map of Lagos" width="802" height="510"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Omitting both center and zoom properties will give an abstract map of the world:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--neJ23b0P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637936673250/BAn9jRiQV.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--neJ23b0P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637936673250/BAn9jRiQV.png" alt="Map of the world" width="798" height="509"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#adding-markers-to-the-map"&gt;
  &lt;/a&gt;
  Adding markers to the map
&lt;/h3&gt;

&lt;p&gt;Markers are specific points of reference in a map. You can easily add markers by calling the &lt;code&gt;Marker()&lt;/code&gt; function which is part of the TomTom Map API.&lt;/p&gt;

&lt;p&gt;Now let's add a single marker to our map:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;bus_stop&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;lat&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;6.4434&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;lng&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.3553&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;marker&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;tt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Marker&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;setLngLat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;bus_stop&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;addTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;popup&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;tt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Popup&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;anchor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;top&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="nx"&gt;setText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Bus Stop&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;marker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setPopup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;popup&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;togglePopup&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A single marker will be inserted into our map:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kuefvOED--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637929472277/vZf4wsYQg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kuefvOED--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637929472277/vZf4wsYQg.png" alt="Single marker of bus stop" width="798" height="512"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you have multiple locations which you probably got from an API, you can recursively insert them with a JavaScript loop:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;sites&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;lat&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;6.4434&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;lng&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.3553&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;lat&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;6.4442&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;lng&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.3561&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;lat&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;6.4451&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;lng&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.3573&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;lat&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;6.4459&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;lng&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.3520&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;];&lt;/span&gt;

      &lt;span class="nx"&gt;sites&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;site&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;marker&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;tt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Marker&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;setLngLat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;site&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;addTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;popup&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;tt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Popup&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;anchor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;top&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="nx"&gt;setText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Site&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;marker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setPopup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;popup&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;togglePopup&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u8IyMdnz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637930241554/Wn6hGeeCX.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u8IyMdnz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637930241554/Wn6hGeeCX.png" alt="Sites on a map" width="800" height="515"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;Popup&lt;/code&gt; API method was called to instantiate a new popup for the marker along with a custom text. After created the instance, we proceeded to set the popup on the marker by calling the &lt;code&gt;setPopup&lt;/code&gt; method.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#performing-fuzzy-search"&gt;
  &lt;/a&gt;
  Performing Fuzzy Search
&lt;/h3&gt;

&lt;p&gt;There may be some cases where you want to display a location on the map using its common address, and not with the exact coordinates.&lt;/p&gt;

&lt;p&gt;The TomTom Maps SDK also exposes an API for performing fuzzy searches. The &lt;code&gt;fuzzySearch&lt;/code&gt; function call will return a list of coordinates corresponding to the bare address.&lt;/p&gt;

&lt;p&gt;First, let's add a text input for location to our application:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;query&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;placeholder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Type a location&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onclick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;fetchLoc()&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Submit&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mapArea&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Through the input, we can collect a query address from the user which we can then use the perform a fuzzy search.&lt;/p&gt;

&lt;p&gt;This function gets called when the submit button is clicked:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;fetchLoc&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;tt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;services&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fuzzySearch&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;APIKey&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;query&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#query&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;})&lt;/span&gt;

      &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;results&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;moveMapTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;results&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;position&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, we called the fuzzySearch API method, passing in the API key for our app, and the whatever location the user types into the input.&lt;/p&gt;

&lt;p&gt;Since the function returns a promise, we needed to await its response. The fuzzy search will return an object containing many properties related to our search. The results property will hold an array of locations return from our search.&lt;/p&gt;

&lt;p&gt;When the response is ready, we called the moveMapTo method, passing in the position property of the first match.&lt;/p&gt;

&lt;p&gt;This function is responsible for moving our map to the new address:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;moveMapTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newLoc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;flyTo&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="na"&gt;center&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;newLoc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;zoom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;
      &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, we tell our map to move from the current location, to the location which matches our search query.&lt;/p&gt;

&lt;p&gt;So when a location is added to the input and button is clicked, the map will switch context to the new location with a sleek transition.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;The TomTom Web SDK has a lot of API to integrate various functionalities. You can learn more about that from the  &lt;a href="https://developer.tomtom.com/maps-sdk-web-js"&gt;official API documentation.&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;The code for this project is available on CodePen.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#other-links"&gt;
  &lt;/a&gt;
  Other links
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt; &lt;a href="http://twitter.com/UbahTheBuilder"&gt;Twitter&lt;/a&gt; &lt;/li&gt;
&lt;li&gt; &lt;a href="http://github.com/KingsleyUbah"&gt;GitHub&lt;/a&gt; &lt;/li&gt;
&lt;li&gt; &lt;a href="https://gum.co/js-50"&gt;JavaScript Ebook&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>First NPM Release</title>
      <author>Francesco Menghi</author>
      <pubDate>Fri, 26 Nov 2021 20:14:33 +0000</pubDate>
      <link>https://dev.to/menghif/first-npm-release-34ni</link>
      <guid>https://dev.to/menghif/first-npm-release-34ni</guid>
      <description>&lt;p&gt;This week I successfully published my Static Site Generator &lt;a href="https://github.com/menghif/static-dodo"&gt;static-dodo&lt;/a&gt; as an &lt;a href="https://www.npmjs.com/package/static-dodo"&gt;NPM package&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#publishing"&gt;
  &lt;/a&gt;
  Publishing
&lt;/h3&gt;

&lt;p&gt;After creating an account at &lt;a href="https://www.npmjs.com/signup"&gt;npmjs.com&lt;/a&gt; I used the command &lt;code&gt;npm login&lt;/code&gt; from the terminal to link my npm account.&lt;/p&gt;

&lt;p&gt;I changed the version in &lt;strong&gt;package.json&lt;/strong&gt; to 1.0.0 and also added a tag to my latest commit with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="go"&gt;git tag -a v1.0.0 -m "1.0.0 Release"
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I then published my project using the command &lt;code&gt;npm publish&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;After I made some changes to the repo, I decided to unpublish the package and start from the beginning. I decided to rebrand the project from "dodo-ssg" to "static-dodo" and publish it with the new name.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#user-testing"&gt;
  &lt;/a&gt;
  User Testing
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/gusmccallum"&gt;Gus McCallum&lt;/a&gt; tested the program on his computer by installing it with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="go"&gt;npm install -g static-dodo
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It was interesting to see how a new user approaches getting and learning how to use the tool. Gus ran the program on his Windows computer and tested it in various ways.&lt;/p&gt;

&lt;p&gt;The biggest issue happened when trying to use a file with spaces as input like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hKK7OugG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7d9okq7hi0u2mmbsu2x7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hKK7OugG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7d9okq7hi0u2mmbsu2x7.png" alt="static-dodo example" width="574" height="311"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The README Usage instructions did not indicate that he should have put the file name in between quotation marks like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="go"&gt;static-dodo -i "The Adventures of the Speckled Band.txt"
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After our exchange, I made the required changes to the Usage instructions in the README file to avoid any future confusion.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#automating-npm-release"&gt;
  &lt;/a&gt;
  Automating npm release
&lt;/h3&gt;

&lt;p&gt;I had fun &lt;a href="https://dev.to/menghif/first-look-at-github-actions-41a0"&gt;last week&lt;/a&gt; looking at &lt;strong&gt;GitHub Actions&lt;/strong&gt;, so I wanted to continue learning about it. I decided to setup a new Action to automatically publish to npm whenever I create a new release on GitHub.&lt;/p&gt;

&lt;p&gt;To do that I used the following &lt;a href="https://github.com/menghif/static-dodo/blob/main/.github/workflows/npm-publish.yml"&gt;yaml code&lt;/a&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Node.js Package&lt;/span&gt;
&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;release&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;types&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;published&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;build&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/checkout@v2&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/setup-node@v2&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;node-version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;16&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;npm ci&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;npm test&lt;/span&gt;
  &lt;span class="na"&gt;publish-npm&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;needs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;build&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/checkout@v2&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/setup-node@v2&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;node-version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;16&lt;/span&gt;
          &lt;span class="na"&gt;registry-url&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;https://registry.npmjs.org/&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;npm ci&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;npm publish&lt;/span&gt;
        &lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;NODE_AUTH_TOKEN&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{secrets.npm_token}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally, to make this work, I had to &lt;a href="https://docs.npmjs.com/creating-and-viewing-access-tokens"&gt;get&lt;/a&gt; a token from npm and &lt;a href="https://docs.github.com/en/actions/security-guides/encrypted-secrets#creating-encrypted-secrets-for-a-repository"&gt;add&lt;/a&gt; it to the "Secrets" Settings of my repo.&lt;/p&gt;

&lt;p&gt;Now every time I create a new Release on GitHub, this Actions starts automatically and publishes the new release to npm.&lt;/p&gt;

&lt;p&gt;It's a good feeling to know that a cli tool I created is now available to anyone in the world by just writing one line in the terminal.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;static-dodo&lt;/strong&gt; is available &lt;a href="https://www.npmjs.com/package/static-dodo"&gt;here&lt;/a&gt;!&lt;/p&gt;

</description>
      <category>github</category>
      <category>npm</category>
    </item>
    <item>
      <title>Linear Regression using Normal Equation</title>
      <author>Swayam Singh</author>
      <pubDate>Fri, 26 Nov 2021 19:50:48 +0000</pubDate>
      <link>https://dev.to/_s_w_a_y_a_m_/linear-regression-using-normal-equation-21co</link>
      <guid>https://dev.to/_s_w_a_y_a_m_/linear-regression-using-normal-equation-21co</guid>
      <description>&lt;h2&gt;
  &lt;a href="#overview"&gt;
  &lt;/a&gt;
  Overview
&lt;/h2&gt;

&lt;p&gt;Linear Regression is the first algorithm in the &lt;strong&gt;Demystifying Machine Learning&lt;/strong&gt; series and in this article we'll be discussing Linear Regression using Normal equation. This article covers what is Linear Regression, how it works, the maths behind the normal equation method, fixing some edge cases, handling overfitting and code implementation.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-linear-regression"&gt;
  &lt;/a&gt;
  What is Linear Regression?
&lt;/h2&gt;

&lt;p&gt;Linear Regression in simple terms is fitting the best possible linear hypothesis &lt;em&gt;(a line or a hyperplane)&lt;/em&gt; on the data having a linear relationship so that we can predict the new unknown data point with the least possible error. It's not necessary to have a linear relationship in data but having such can lead to approximately close predictions. For a reference take a look at the below representation.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--O-NQqXRB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637922660881/L_Jxcc_92.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--O-NQqXRB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637922660881/L_Jxcc_92.png" alt="intro_linear_reg.png" width="880" height="487"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the above picture, only 1 feature &lt;em&gt;(along the x-axis)&lt;/em&gt; and the target &lt;em&gt;(along the y-axis)&lt;/em&gt; is displayed just for the sake of simplicity and we can see that the red line is fitting the data very nicely covering most of the variance. &lt;/p&gt;

&lt;p&gt;One thing is to be noted that we call it Linear Regression but it's not always fitting a line, we call it hypothesis or hyperplane. If we have N-Dimensional data &lt;em&gt;(data having N number of features)&lt;/em&gt; then we can fit a hyperplane of atmost N-Dimensions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#mathematics-behind-the-scenes"&gt;
  &lt;/a&gt;
  Mathematics behind the scenes
&lt;/h2&gt;

&lt;p&gt;Let's take a very simpler problem and dataset to derive and mimic the algorithm we are going to use in Linear Regression. &lt;/p&gt;

&lt;p&gt;Assume we have a dataset in which we have only 1 feature say &lt;strong&gt;&lt;em&gt;x&lt;/em&gt;&lt;/strong&gt; and target as &lt;strong&gt;&lt;em&gt;y&lt;/em&gt;&lt;/strong&gt; such that &lt;strong&gt;&lt;code&gt;x = [1,2,3]&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;y = [1,2,2]&lt;/code&gt;&lt;/strong&gt; and we are going to fit the best possible line on this dataset.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SjWGKRxF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637922695043/JrJqCdQvo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SjWGKRxF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637922695043/JrJqCdQvo.png" alt="plot1.png" width="880" height="442"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the above plot, we can see that the feature is displayed on the &lt;em&gt;x-axis&lt;/em&gt; and the target is along &lt;em&gt;y-axis&lt;/em&gt; and the blue line is the best possible hypothesis through the points. &lt;strong&gt;Now all we need to understand is how to come up with this best possible hypothesis that is the above blue line in our case&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The equation of any line is in the format of &lt;strong&gt;&lt;code&gt;y = wx + b&lt;/code&gt;&lt;/strong&gt; where &lt;strong&gt;w&lt;/strong&gt; is the slope and &lt;strong&gt;b&lt;/strong&gt; is the intercept. In machine learning lingo we call &lt;strong&gt;w&lt;/strong&gt; as &lt;strong&gt;weight&lt;/strong&gt; and &lt;strong&gt;b&lt;/strong&gt; as &lt;strong&gt;bias&lt;/strong&gt;. For above line it came out to be &lt;strong&gt;w = 0.5&lt;/strong&gt; and *&lt;em&gt;b = 0.667 *&lt;/em&gt; &lt;em&gt;(Don't worry! we'll see how).&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Now ultimately we can say that somehow we need to calculate the &lt;strong&gt;weight&lt;/strong&gt; and &lt;strong&gt;bias&lt;/strong&gt; term/terms &lt;em&gt;(since 'x' is already known to us)&lt;/em&gt; for hypothesis and then we could use them to get the line's equation.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#linear-algebra"&gt;
  &lt;/a&gt;
  Linear Algebra
&lt;/h3&gt;

&lt;p&gt;We are going to use some Linear Algebra concepts for finding the right &lt;strong&gt;weight&lt;/strong&gt; and &lt;strong&gt;bias&lt;/strong&gt; terms for our data. &lt;/p&gt;

&lt;p&gt;Let say the weight and bias terms are &lt;strong&gt;w&lt;/strong&gt; and &lt;strong&gt;b&lt;/strong&gt; respectively. So we can write each data point (x, y) as : &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9YX_XiOw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637923298112/ZrWBdVRT1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9YX_XiOw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637923298112/ZrWBdVRT1.png" alt="Screenshot 2021-11-26 at 4.11.19 PM.png" width="880" height="113"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;we can write the above equations as a system of equations using matrices as &lt;strong&gt;XŒ∏ = Y&lt;/strong&gt; where &lt;strong&gt;X&lt;/strong&gt; is input / feature matrix, &lt;strong&gt;Œ∏&lt;/strong&gt; is matrix for unknowns and &lt;strong&gt;Y&lt;/strong&gt; is the target matrix as: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--A77cpzBM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637923333788/PsWHA4D9v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A77cpzBM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637923333788/PsWHA4D9v.png" alt="Screenshot 2021-11-26 at 4.12.21 PM.png" width="880" height="119"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Great, Now all we need is to solve this system of equations and get the &lt;strong&gt;w&lt;/strong&gt; and &lt;strong&gt;b&lt;/strong&gt; terms.&lt;/p&gt;

&lt;p&gt;Wait there's a problem. We can't solve the above system of equations because target matrix &lt;strong&gt;Y&lt;/strong&gt; does not lie in the column space of input matrix &lt;strong&gt;X&lt;/strong&gt;. In simple terms, if we see the previous graph again then we can notice that our data points are not collinear i.e. they don't lie on the line so and that's why we can't find the &lt;strong&gt;w&lt;/strong&gt; and &lt;strong&gt;b&lt;/strong&gt; for the above system of equations.&lt;/p&gt;

&lt;p&gt;And if we think for a moment then it sounds right because in Linear Regression we fit a hypothesis to predict the target for some input with the least possible error. We do not intend to predict the exact target.&lt;/p&gt;

&lt;p&gt;So what we can do here? We can't solve the above system of equations because &lt;strong&gt;Y&lt;/strong&gt; is not in the column space of &lt;strong&gt;X&lt;/strong&gt;. So instead we can project the &lt;strong&gt;Y&lt;/strong&gt; onto the column space of &lt;strong&gt;X&lt;/strong&gt;. It is exactly equivalent to projecting one vector onto another.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MFe-ipNA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637922751260/n1hwkT-KI.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MFe-ipNA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637922751260/n1hwkT-KI.png" alt="Projection_and_rejection.png" width="600" height="540"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the above representation, &lt;strong&gt;a&lt;/strong&gt; and &lt;strong&gt;b&lt;/strong&gt; are two vectors and the &lt;strong&gt;a1&lt;/strong&gt; is the projection of vector &lt;strong&gt;a&lt;/strong&gt; onto &lt;strong&gt;b&lt;/strong&gt;. With this, we can see that now we have the component of vector &lt;strong&gt;a&lt;/strong&gt; that lies in the vector space of &lt;strong&gt;b&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;We can achieve the component of &lt;strong&gt;Y&lt;/strong&gt; that lies in the column space of &lt;strong&gt;X&lt;/strong&gt; by doing inner product &lt;em&gt;(also known as dot product)&lt;/em&gt;. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The inner product of two vectors &lt;strong&gt;a&lt;/strong&gt; and &lt;strong&gt;b&lt;/strong&gt; can be found by calculating &lt;strong&gt;a&lt;sup&gt;T&lt;/sup&gt;b&lt;/strong&gt; &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now we can re-write our system of equations as:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gfv3BLaj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9s7gg9wcoeipf88p1fgw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gfv3BLaj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9s7gg9wcoeipf88p1fgw.png" alt="sc0" width="880" height="105"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;center&gt;multiplying both sides by X&lt;sup&gt;T&lt;/sup&gt;.&lt;/center&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZZ9FVqmS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r2ilwrzjyj5hgo9zyjfe.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZZ9FVqmS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r2ilwrzjyj5hgo9zyjfe.png" alt="sc1" width="880" height="105"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;center&gt;&lt;b&gt;Assuming (X&lt;sup&gt;T&lt;/sup&gt;X) to be invertible&lt;/b&gt;&lt;/center&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yXvQiJEy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r0bccwtc80q4fm4ceana.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yXvQiJEy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r0bccwtc80q4fm4ceana.png" alt="sc2" width="880" height="105"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The above equation is known as &lt;strong&gt;Normal equation&lt;/strong&gt;. Now we have the formula to find our matrix Œ∏, let's use it and calculate the &lt;strong&gt;w&lt;/strong&gt; and &lt;strong&gt;b&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2M0CjVdm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637923424277/FV3gjG7gsX.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2M0CjVdm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637923424277/FV3gjG7gsX.png" alt="Screenshot 2021-11-26 at 4.13.45 PM.png" width="880" height="777"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;from the above last equation we have our &lt;strong&gt;w&lt;/strong&gt; = &lt;strong&gt;0.5&lt;/strong&gt; and &lt;strong&gt;b&lt;/strong&gt; = &lt;strong&gt;2/3&lt;/strong&gt; &lt;em&gt;(0.6667)&lt;/em&gt; and we can check from the equation of blue line that our &lt;strong&gt;w&lt;/strong&gt; and &lt;strong&gt;b&lt;/strong&gt; are exactly correct. That's how we can get the weights and bias terms for our perfect hypothesis using the &lt;strong&gt;&lt;em&gt;Normal equation&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#python-implementation"&gt;
  &lt;/a&gt;
  Python Implementation
&lt;/h2&gt;

&lt;p&gt;Now it's time to get our hands dirty with code implementation and make our algorithm work for real datasets. In this section we're going to create a class &lt;strong&gt;&lt;code&gt;NormalLinearRegression&lt;/code&gt;&lt;/strong&gt; to handle all the computations for us and return the optimal values of &lt;strong&gt;weights&lt;/strong&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: All the code files can be found on Github through &lt;a href="https://github.com/practice404/demystifying_machine_learning/tree/master/linear_regression"&gt;this link&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;And it's highly recommended to follow the notebook along with this section for better understanding.&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;


&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;NormalLinearRegression&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;theta&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;fit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="s"&gt;"""
        Returns the optimal weights.
        parameters: 
            x : input/feature matrix
            y : target matrix

        Returns:
            theta: Array of the optimal value of weights.

        """&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ndim&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="c1"&gt;# adding extra dimension, if X is a 1-D array
&lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reshape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c1"&gt;# adding extra column of 1s for the bias term
&lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;concatenate&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ones&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;theta&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;zeros&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;theta&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;calculate_theta&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;theta&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;theta&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reshape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;theta&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;predict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="s"&gt;"""
        Returns the predicted target.
        parameters: 
            x : test input/feature matrix

        Returns:
            y:  predicted target value.

        """&lt;/span&gt;
        &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# converting list to numpy array
&lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ndim&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reshape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# adding extra dimension in front
&lt;/span&gt;        &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;concatenate&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ones&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;theta&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;calculate_theta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="s"&gt;"""
        Calculate the optimal weights.
        parameters: None
        Returns:
            theta_temp: Array containing the calculated value of weights

        """&lt;/span&gt;
        &lt;span class="n"&gt;y_projection&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;cov&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;cov_inv&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;linalg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pinv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cov&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;theta_temp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cov_inv&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y_projection&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;theta_temp&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Code is pretty self-explanatory and I added comments wherever I found necessary but still, I want to point out a few things. We are adding an extra column of 1s to &lt;strong&gt;X&lt;/strong&gt; for the &lt;strong&gt;bias&lt;/strong&gt; term. Since our &lt;strong&gt;&lt;code&gt;theta&lt;/code&gt;&lt;/strong&gt; matrix had both &lt;strong&gt;weight&lt;/strong&gt; and &lt;strong&gt;bias&lt;/strong&gt; terms so &lt;strong&gt;&lt;em&gt;we just added an extra column of 1s so that matrix multiplication handles the addition of bias term&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;We are going to test our hypothesis on two datasets. Our first dataset contains 2 columns in which the first one &lt;em&gt;(only feature)&lt;/em&gt; is the population of a city (in 10,000s) and the second column is the profit of a food truck in that city (in $10,000s). A negative value for profit indicates a loss. Let's visualize it on the graph.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DAV6Dtht--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637922789942/TJep5PtnG.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DAV6Dtht--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637922789942/TJep5PtnG.png" alt="plot2.png" width="880" height="599"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now let's use our &lt;strong&gt;&lt;code&gt;NormalLinearRegression&lt;/code&gt;&lt;/strong&gt; class to find the best hypothesis to fit on our data.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--C0GOkSLa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637922799172/yZJFn1iX2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C0GOkSLa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637922799172/yZJFn1iX2.png" alt="plot3.png" width="880" height="389"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Great now let's find the predictions using the &lt;code&gt;params&lt;/code&gt;. Class &lt;strong&gt;&lt;code&gt;NormalLinearRegression&lt;/code&gt;&lt;/strong&gt; had a method &lt;strong&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/strong&gt; that we can use to get the predictions and after that, we can use them to draw the hypothesis as shown below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yNbvhfwc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637922812953/q967vG0BaE.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yNbvhfwc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637922812953/q967vG0BaE.png" alt="plot4.png" width="880" height="696"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Okay, our hypothesis looks pretty nice. Now let's take a dataset that has multiple features, for the sake of graphical representation our next dataset contains a training set of housing prices in Portland, Oregon. The first column is the size of the house (in square feet), the second column is the number of bedrooms, and the third column is the price of the house. So in this dataset, we have 2 features and 1 target. Let's visualize it on the graph.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BFLLADBa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637922990293/V5UjxLgho.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BFLLADBa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637922990293/V5UjxLgho.png" alt="plot5.png" width="880" height="833"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;If you're wondering how I plot them, just visit the repo for this algorithm through &lt;a href="https://github.com/practice404/demystifying_machine_learning/tree/master/linear_regression"&gt;this link&lt;/a&gt; and you'll find the notebook where all the implementations are already done for you.&lt;/em&gt;&lt;/strong&gt; &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now let's find the weights of the best hypothesis for this dataset.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EgJt0VZS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637923012695/9bN-O3FZb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EgJt0VZS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637923012695/9bN-O3FZb.png" alt="plot6.png" width="880" height="361"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Awesome, now let's find the predictions and plot the hypothesis for this dataset using the &lt;code&gt;predict&lt;/code&gt; method of our class.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cIE_VqoQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637923027083/wTvqinUK5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cIE_VqoQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637923027083/wTvqinUK5.png" alt="plot7.png" width="880" height="981"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Yeah I know, it looks messy but we can uniform it as:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OueNkpE9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637923062520/TK7bjvXGj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OueNkpE9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637923062520/TK7bjvXGj.png" alt="plot8.png" width="880" height="624"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now the thing to be noted is that it's not a straight line, plotting a 3D graph over a 2D surface may give a feel that it's a line but it's not. It's an N-1dimensional hyperplane and in our case, it's a 2D plane.&lt;/p&gt;

&lt;p&gt;Great work people, so far we designed our own Linear Regression algorithm using a Normal equation and tested it on 2 datasets with single and multiple features, you can even try it on your custom dataset to see how it works. So far so good.&lt;/p&gt;

&lt;p&gt;BUT still, there's an edge case is left, let's handle it in the next section.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-if-xtx-is-noninvertible"&gt;
  &lt;/a&gt;
  What if (X&lt;sup&gt;T&lt;/sup&gt;X) is non-invertible?
&lt;/h2&gt;

&lt;p&gt;When we are deriving the Normal equation, we assumed that (X&lt;sup&gt;T&lt;/sup&gt;X) to be invertible and then we calculated its inverse to find the matrix Œ∏. But what if it's not invertible?&lt;/p&gt;

&lt;p&gt;Let's discuss the cases when it cannot be invertible:-&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;(X&lt;sup&gt;T&lt;/sup&gt;X) is not a square matrix&lt;/li&gt;
    &lt;li&gt;The columns or rows of (X&lt;sup&gt;T&lt;/sup&gt;X) are not independent&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The 1&lt;sup&gt;st&lt;/sup&gt; case is obviously wrong, let's see how?&lt;/p&gt;

&lt;p&gt;Suppose the dimensions of X are (m,n) then the dimensions of X&lt;sup&gt;T&lt;/sup&gt; will be (n,m). So after performing matrix multiplication the dimensions of (X&lt;sup&gt;T&lt;/sup&gt;X) will be (m,m) and hence it's a square matrix.&lt;/p&gt;

&lt;p&gt;But the 2&lt;sup&gt;nd&lt;/sup&gt; case can be true, let's see how?&lt;/p&gt;

&lt;p&gt;Suppose you have a dataset and in which the features are not linearly independent. For example, let's say there's a feature labelled as &lt;strong&gt;weight in Kg&lt;/strong&gt; and another feature labelled as &lt;strong&gt;weight in pounds&lt;/strong&gt;, both the features are linearly dependent i.e we can get one feature by performing some linear transformations on another feature and this can make (X&lt;sup&gt;T&lt;/sup&gt;X) as non-invertible. &lt;/p&gt;

&lt;p&gt;Although in our python implementation we used &lt;strong&gt;&lt;code&gt;np.linalg.pinv()&lt;/code&gt;&lt;/strong&gt; function to calculate the inverse and it uses &lt;a href="https://youtu.be/rYz83XPxiZo"&gt;Singular Value Decomposition&lt;/a&gt; to return the pseudo-inverse of the matrix if it's non-invertible.&lt;/p&gt;

&lt;p&gt;Another way to remove such ambiguity is to identify those features and remove them manually. OR we can use Regularization and make it invertible. Let's see how we can use Regularization to achieve this. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#regularized-normal-equation"&gt;
  &lt;/a&gt;
  Regularized Normal Equation
&lt;/h3&gt;

&lt;p&gt;In Regularization, we add an extra Identity matrix of dimensions (n+1, n+1) to (X&lt;sup&gt;T&lt;/sup&gt;X) where n is the number of features and adding extra 1 denotes the extra column of 1s for bias term.&lt;/p&gt;

&lt;p&gt;Regularized Normal equation can be written as:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wtMlNzif--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637923507020/OivEeQSrk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wtMlNzif--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637923507020/OivEeQSrk.png" alt="Screenshot 2021-11-26 at 4.15.07 PM.png" width="880" height="290"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now let's understand the above equation, look at the 1&lt;sup&gt;st&lt;/sup&gt; column it has only 0s no 1s because the 1st column in X is the column of 1s for the bias term and we do not regularize that column. Mathematically it can be proven that (X&lt;sup&gt;T&lt;/sup&gt;X + ŒªM) is always invertible.&lt;/p&gt;

&lt;p&gt;Œª is called the &lt;strong&gt;regularization parameter&lt;/strong&gt;. You need to set it according to your dataset by choosing from a &lt;strong&gt;set of values that should be greater than 0&lt;/strong&gt; and select the one which gives the least &lt;strong&gt;root mean square error&lt;/strong&gt; on your training set other than Œª = 0. &lt;/p&gt;

&lt;p&gt;Let's implement this in code and see how this method works. We only need to change the &lt;strong&gt;&lt;code&gt;calculate_theta&lt;/code&gt;&lt;/strong&gt; method of our class which is reponsible for the calculation of &lt;strong&gt;(X&lt;sup&gt;T&lt;/sup&gt;X)&lt;sup&gt;-1&lt;/sup&gt;X&lt;sup&gt;T&lt;/sup&gt;Y&lt;/strong&gt; .&lt;/p&gt;

&lt;p&gt;The modified &lt;strong&gt;&lt;code&gt;calculate_theta&lt;/code&gt;&lt;/strong&gt; method should look something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;calculate_theta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lambda_&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="s"&gt;"""
        Calculate the optimal weights.
        parameters: None
        Returns:
            theta_temp: Array containing the calculated value of weights

        """&lt;/span&gt;
        &lt;span class="n"&gt;y_projection&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="c1"&gt;# Creating matrix M (identity matrix with fist element 0)
&lt;/span&gt;        &lt;span class="n"&gt;M&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;identity&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
        &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;

        &lt;span class="n"&gt;cov&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;lambda_&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt; &lt;span class="c1"&gt;# adding lambda_ times M to X.T@X
&lt;/span&gt;        &lt;span class="n"&gt;cov_inv&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;linalg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pinv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cov&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;theta_temp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cov_inv&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y_projection&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;theta_temp&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We don't need to change anything else in our class and now let's pick some random values for Œª and pick the best one.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mjPlP0Oc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637923087755/GWeZph9vW.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mjPlP0Oc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637923087755/GWeZph9vW.png" alt="plot9.png" width="880" height="516"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Intuitively we can see that plots for Œª = 0 and Œª = 10 are quite good, just to be sure we stored the root mean squared error in a dictionary &lt;strong&gt;&lt;code&gt;errors&lt;/code&gt;&lt;/strong&gt; let's print it out and see which Œª got the least error.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--64AyFPQK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637923101471/9m3TgvwXF.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--64AyFPQK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637923101471/9m3TgvwXF.png" alt="plot10.png" width="654" height="614"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We can see that Œª = 0 got the least error and Œª = 10 is slightly greater than that but just be on the safer side we will pick Œª = 10 for our hypothesis.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Great work everyone, we have successfully learnt and implemented our first machine learning algorithm of Linear Regression using a Normal equation on 2 datasets. There are a few things that we need to keep in our mind while using the Normal equation method. &lt;strong&gt;&lt;em&gt;This method is not efficient with respect to computation time on large datasets (samples &amp;gt; 10,000) and the reason is the operation of calculating the inverse of a matrix that had a time complexity of around O(n&lt;sup&gt;3&lt;/sup&gt;).&lt;/em&gt;&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;So in that case &lt;strong&gt;&lt;em&gt;Gradient Descent&lt;/em&gt;&lt;/strong&gt; method comes very handy and we'll be going to learn that in our next article. Also, we'll be exploring Regularization in great depth too. &lt;/p&gt;

&lt;p&gt;I hope you have learnt something new, for more updates on upcoming articles get connected with me through &lt;a href="https://twitter.com/_s_w_a_y_a_m_"&gt;Twitter&lt;/a&gt; and stay tuned for more. Till then enjoy your day and keep learning.&lt;/p&gt;

</description>
      <category>machinelearning</category>
      <category>python</category>
      <category>tutorial</category>
      <category>algorithms</category>
    </item>
    <item>
      <title>Publishing my first npm package</title>
      <author>Andre Willomitzer</author>
      <pubDate>Fri, 26 Nov 2021 19:36:11 +0000</pubDate>
      <link>https://dev.to/andrewillomitzer/publishing-my-first-npm-package-38ad</link>
      <guid>https://dev.to/andrewillomitzer/publishing-my-first-npm-package-38ad</guid>
      <description>&lt;h3&gt;
  &lt;a href="#the-project"&gt;
  &lt;/a&gt;
  The Project
&lt;/h3&gt;

&lt;p&gt;Eleven weeks ago when I started in Open Source Development 600 at Seneca I never thought I would get to the point of actually releasing something into the wild. Over the term we have been working on our individual static site generators. The purpose of these tools is to take a text file or Markdown file and parse it into a valid HTML document. &lt;/p&gt;

&lt;p&gt;It can include a variety of features depending on the student, but some of the options for my own &lt;a href="https://github.com/AndreWillomitzer/textToHTML_V2"&gt;textToHTML&lt;/a&gt; include stylesheets, using a config file instead of the command line, and having an output option to specify a folder to put the HTML documents into.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-journey"&gt;
  &lt;/a&gt;
  The Journey
&lt;/h3&gt;

&lt;p&gt;Throughout the weeks, we have been contributing to Open Source projects on GitHub and making pull requests. Included in this is the idea of contributing to each other's SSG's. Collaborating with classmates has truly opened my eyes about new ways of doing things and best practices of development. All of my classmates such as &lt;a href="https://github.com/Kevan-Y"&gt;Kevan Yang&lt;/a&gt; have been instrumental in getting the tool ready for &lt;code&gt;npm&lt;/code&gt; deployment. &lt;/p&gt;

&lt;p&gt;We added linting, style guides, testing, continuous integration, among many other things throughout the semester. Each time, finding a better approach and refactoring. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-does-npm-deploying-work"&gt;
  &lt;/a&gt;
  How does npm deploying work?
&lt;/h3&gt;

&lt;p&gt;First of all, you will need to go to the &lt;a href="https://www.npmjs.com/"&gt;npm website&lt;/a&gt; and create an account. This is where your packages will be stored. Then, make sure you have npm installed on your computer. You can check using &lt;code&gt;npm -v&lt;/code&gt; in the terminal. &lt;/p&gt;

&lt;p&gt;Next you will need to run &lt;code&gt;npm login&lt;/code&gt; command and enter your credentials for the account you created. From the root directory of your project, run &lt;code&gt;npm publish&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt; you may get an error about a package with the same name existing. You may either create a &lt;a href="https://docs.npmjs.com/creating-and-publishing-scoped-public-packages"&gt;scoped package&lt;/a&gt; or change the name to something else. The name is found in the &lt;code&gt;package.json&lt;/code&gt; file of your application.&lt;/p&gt;

&lt;p&gt;That's it!!! Your package should show up on your npm account. However, if you want to tell people how to use your application you should create a &lt;code&gt;README.md&lt;/code&gt; with usage instructions, and then run &lt;code&gt;npm version patch&lt;/code&gt; and &lt;code&gt;npm publish&lt;/code&gt; again to release a new version. In order to do this your &lt;strong&gt;Git commit history must be clean&lt;/strong&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-try-my-tool-if-you-want"&gt;
  &lt;/a&gt;
  How to try my tool (if you want)
&lt;/h3&gt;

&lt;p&gt;As mentioned, I published a package as part of the course and the way to install it is via terminal. My tool is called &lt;a href="https://github.com/AndreWillomitzer/textToHTML_V2"&gt;textToHTML&lt;/a&gt;. You may type &lt;code&gt;npx texttohtmlv2&lt;/code&gt; in your command line. It will prompt you to install the package (say yes). Then, to see if it's working you can try the &lt;strong&gt;help&lt;/strong&gt; command by typing &lt;code&gt;npx texttohtmlv2 -h&lt;/code&gt; in the terminal. It should display a list of other things to try out.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#final-thoughts-for-the-final-lab"&gt;
  &lt;/a&gt;
  Final thoughts (for the final lab)
&lt;/h3&gt;

&lt;p&gt;This has been such an amazing journey in my 5th semester at Seneca. I have had the opportunity to contribute to things I never dreamed of having a hand in working on like the &lt;a href="https://github.com/jasmine/jasmine"&gt;jasmine testing framework&lt;/a&gt;, and also learned how to persevere when things aren't going right and to keep trying different approaches. I have also learned things that will serve me in my career such as Continuous Integration, end-to-end testing, Linting. &lt;/p&gt;

&lt;p&gt;Last, and certainly not least I learned about using Git. At first it was terrifying because all of the commands were foreign. Throughout the term we have been forced to adopt Git and learn to use commits, branches, merges, and pull requests to organize our work which has been an amazing learning experience.&lt;/p&gt;

&lt;p&gt;I know this article wasn't all about publishing, but I hope my experience inspires someone else to build a project even if it starts small.&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

&lt;p&gt;Andre Willomitzer&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>webdev</category>
      <category>npm</category>
    </item>
  </channel>
</rss>
