<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Introducing Abstract — A React Prototyping Tool, Designed for Mobile.</title>
      <author>Jonnie Oak</author>
      <pubDate>Thu, 07 Oct 2021 15:56:06 +0000</pubDate>
      <link>https://dev.to/oakj/introducing-abstract-a-react-prototyping-tool-designed-for-mobile-dba</link>
      <guid>https://dev.to/oakj/introducing-abstract-a-react-prototyping-tool-designed-for-mobile-dba</guid>
      <description>&lt;p&gt;Enter &lt;strong&gt;Abstract&lt;/strong&gt; — a mobile-first progressive web application focused on improving the developer experience. Create mobile first application prototypes in real-time with proven UI frameworks such as React Bootstrap. &lt;/p&gt;

&lt;p&gt;Abstract allows you to:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Develop from anywhere&lt;/li&gt;
&lt;li&gt;Lighten developer workload when prototyping&lt;/li&gt;
&lt;li&gt;Focus on more complex engineering issues&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#the-world-is-moving-towards-mobile"&gt;
  &lt;/a&gt;
  The world is moving towards mobile
&lt;/h3&gt;

&lt;p&gt;When analyzing market trends, we find that mobile usage on the web has gradually increased every year, while desktop usage is slowly declining by the year. Mobile devices are taking over modern-day web browsing, likely due to the increasing accessibility of smartphones. Nowadays creating an application only optimized for desktop devices will greatly hinder your application from being viewed by a large majority of users.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mobilefirst-philosophy"&gt;
  &lt;/a&gt;
  Mobile-first philosophy
&lt;/h3&gt;

&lt;p&gt;“Mobile first”, simply means that we start product design with mobile users in mind because of their limitations.&lt;br&gt;
From a technical standpoint, when engineering a product, mobile is your limiting factor due to size, bandwidth, and hardware constraints. A mobile oriented design can scale to a desktop size and maintain full functionality, but a desktop design can’t scale down to mobile without removing and editing some features.&lt;br&gt;
Mobile first design approach allows for progressive advancement, which means you start designing for your most basic platform and then optimize for more advanced platforms later down the road.&lt;br&gt;
For developers this is a very efficient and lean strategy to build a product from scratch because they can push out a minimum viable product with core features while still reaching a majority of users.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#theres-a-demand-for-mobile-developer-tools"&gt;
  &lt;/a&gt;
  There’s a demand for mobile developer tools
&lt;/h3&gt;

&lt;p&gt;QuickEdit — 35,000 ratings on Google App Store&lt;br&gt;
Dcoder — 32,000 ratings on Google App Store&lt;br&gt;
DroidEdit — 17,000 ratings on Google App Store&lt;br&gt;
These are a few of the many developer tools on the mobile app store; however, they are strictly mobile code editors. &lt;em&gt;The market currently lacks mobile prototyping tools for mobile-first development.&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#abstract-adopts-mobilefirst-design-and-streamlines-prototyping"&gt;
  &lt;/a&gt;
  Abstract adopts mobile-first design and streamlines prototyping
&lt;/h3&gt;

&lt;p&gt;Our main priority is ease-of-use. With this in mind, we designed a simple interface targeted towards mobile users for easy navigation. We want developers to be able to work from anywhere, anytime, on any device. Elevating the developer experience with accessibility to useful tools streamlines the design stage during the product lifecycle and shortens turnaround time between product iterations.&lt;br&gt;
Here are some of Abstract’s core features:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Install on any device to prototype at home or on the go.&lt;/li&gt;
&lt;li&gt;Design for iPad and iPhone resolutions to accommodate more users.&lt;/li&gt;
&lt;li&gt;Utilize React Bootstrap components, avoiding early design bottlenecks in premature product stages.&lt;/li&gt;
&lt;li&gt;Preview generated React code synchronized with the prototype render view.&lt;/li&gt;
&lt;li&gt;Quickly export React code to GitHub for easy code review and collaboration.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;em&gt;Abstract away from the tedious process of coding a prototype from scratch with our simplified, design based workflow that leverages hot reloading and code preview.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#demo"&gt;
  &lt;/a&gt;
  Demo
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#select-device-resolution-for-the-canvas"&gt;
  &lt;/a&gt;
  Select Device Resolution for the Canvas
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AeHD9kWp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/oslabs-beta/Abstract/blob/jonnie/readme-assets/switch-canvas.GIF%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AeHD9kWp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/oslabs-beta/Abstract/blob/jonnie/readme-assets/switch-canvas.GIF%3Fraw%3Dtrue" alt="canvas-size-gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#render-components-on-the-canvas"&gt;
  &lt;/a&gt;
  Render Components on the Canvas
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6UWlqTQg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/oslabs-beta/Abstract/blob/jonnie/readme-assets/render-components.GIF%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6UWlqTQg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/oslabs-beta/Abstract/blob/jonnie/readme-assets/render-components.GIF%3Fraw%3Dtrue" alt="render-components-gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#review-code"&gt;
  &lt;/a&gt;
  Review Code
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RbFJAU7Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/oslabs-beta/Abstract/blob/jonnie/readme-assets/review-code.GIF%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RbFJAU7Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/oslabs-beta/Abstract/blob/jonnie/readme-assets/review-code.GIF%3Fraw%3Dtrue" alt="review-code-gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#export-code"&gt;
  &lt;/a&gt;
  Export Code
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nzkJEwoo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/oslabs-beta/Abstract/blob/jonnie/readme-assets/export-code.GIF%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nzkJEwoo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/oslabs-beta/Abstract/blob/jonnie/readme-assets/export-code.GIF%3Fraw%3Dtrue" alt="export-code-gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We hope you enjoy Abstract as much as we enjoyed creating it. Stay tuned for future updates!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#additional-resources"&gt;
  &lt;/a&gt;
  Additional Resources
&lt;/h3&gt;

&lt;p&gt;Abstract is an open-sourced product. Interested in contributing or viewing?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/oslabs-beta/Abstract"&gt;Visit our Github project page.&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.abstractreact.net/"&gt;Visit Abstract’s website.&lt;/a&gt;&lt;br&gt;
&lt;a href="https://abstractreact.herokuapp.com/"&gt;Visit the live Abstract web-app.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Meet the Team! —&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Jonnie Oak &lt;a href="https://github.com/oakj"&gt;@Github&lt;/a&gt; &lt;a href="https://www.linkedin.com/in/oakj28/"&gt;@Linkedin&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Brian Cheng &lt;a href="https://github.com/chengbrian9"&gt;@Github&lt;/a&gt; &lt;a href="https://www.linkedin.com/in/brian-cheng24/"&gt;@Linkedin&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Raymond Hu &lt;a href="https://github.com/rhu0"&gt;@Github&lt;/a&gt; &lt;a href="https://www.linkedin.com/in/raymond-hu-3b18231a2/"&gt;@Linkedin&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Omar Brown &lt;a href="https://github.com/rashadhndrxx"&gt;@Github&lt;/a&gt; &lt;a href="https://www.linkedin.com/in/omar-b-76892521b/"&gt;@Linkedin&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>opensource</category>
    </item>
    <item>
      <title>Calculating π with the Monte Carlo Simulation</title>
      <author>Chris</author>
      <pubDate>Thu, 07 Oct 2021 15:53:09 +0000</pubDate>
      <link>https://dev.to/zirkelc/calculating-with-the-monte-carlo-simulation-117g</link>
      <guid>https://dev.to/zirkelc/calculating-with-the-monte-carlo-simulation-117g</guid>
      <description>&lt;p&gt;When I was in university, I first learned about the Monte Carlo Simulation as way to calculate 

&lt;span class="katex-element"&gt;
  &lt;span class="katex"&gt;&lt;span class="katex-mathml"&gt;π\pi&lt;/span&gt;&lt;span class="katex-html"&gt;&lt;span class="base"&gt;&lt;span class="strut"&gt;&lt;/span&gt;&lt;span class="mord mathnormal"&gt;π&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;
 (pi). The simple – yet genius – idea behind this concept just blew my mind. Calculating an infinite number like pi doesn't sound like fun for most people. Still, seeing the number getting more and more precise continues to amaze me. In order to refresh some old memories, I decided to implement an interactive simulation in React and TypeScript.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#let-it-rain"&gt;
  &lt;/a&gt;
  Let It Rain
&lt;/h2&gt;

&lt;p&gt;Let me explain the idea behind the Monte Carlo Simulation with an analogy to rain. Take a sheet of paper and draw a unit square (whose sides have length 1) on it. Inside this unit square, draw a quarter circle with a radius of 1. It will look like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vk3s_tPr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633618362664/3J1oJmkk6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vk3s_tPr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633618362664/3J1oJmkk6.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, let's imagine it is raining on this unit square with perfect randomness. The raindrops are going to be evenly distributed on the unit square. Some raindrops will lie inside the quarter circle, and some will lie outside of it. Logically, a lot more raindrops will fall inside the quarter circle than outside of it. This is what it looks with 1000 raindrops:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--myl9LDrR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633618443242/y_ASD1tcU.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--myl9LDrR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633618443242/y_ASD1tcU.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Interestingly, the fraction of raindrops inside the quarter circle compared to the total number of raindrops will constantly change as we generate more raindrops. This is due to the &lt;a href="https://en.wikipedia.org/wiki/Law_of_large_numbers"&gt;law of large numbers&lt;/a&gt; and the fact that we reach ever better distribution. Let's keep this fraction in mind as we're going to need it in the next step.   &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#give-me-the-math"&gt;
  &lt;/a&gt;
  Give Me The Math
&lt;/h2&gt;

&lt;p&gt;I'm going to briefly explain the underlying math principle. There are plenty of good articles on the Internet for more detailed information. &lt;br&gt;
The method is based on the mathematical formula for calculating the area of a unit circle (i.e. the one with radius 1):&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4ol0qrIq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633511174949/c9sCKZ_UU.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4ol0qrIq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633511174949/c9sCKZ_UU.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We are going to cut the unit circle in four equal segments. The derived quarter circle (i.e. the blue area) still has a radius of 1 and its area is defined by the following formula:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iCGN_6Y_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633511245413/qk7kbTQK4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iCGN_6Y_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633511245413/qk7kbTQK4.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
Now interestingly, the quarter circle fits perfectly well into a unit square (i.e. the red area) with an edge length of 1. We know that the unit square has an area of 
&lt;span class="katex-element"&gt;
  &lt;span class="katex"&gt;&lt;span class="katex-mathml"&gt;1×11\times1&lt;/span&gt;&lt;span class="katex-html"&gt;&lt;span class="base"&gt;&lt;span class="strut"&gt;&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mspace"&gt;&lt;/span&gt;&lt;span class="mbin"&gt;×&lt;/span&gt;&lt;span class="mspace"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="base"&gt;&lt;span class="strut"&gt;&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;
 and the quarter circle partly overlaps with this area as defined by the previous formula for 
&lt;span class="katex-element"&gt;
  &lt;span class="katex"&gt;&lt;span class="katex-mathml"&gt;AquarterA_{quarter}&lt;/span&gt;&lt;span class="katex-html"&gt;&lt;span class="base"&gt;&lt;span class="strut"&gt;&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathnormal"&gt;A&lt;/span&gt;&lt;span class="msupsub"&gt;&lt;span class="vlist-t vlist-t2"&gt;&lt;span class="vlist-r"&gt;&lt;span class="vlist"&gt;&lt;span&gt;&lt;span class="pstrut"&gt;&lt;/span&gt;&lt;span class="sizing reset-size6 size3 mtight"&gt;&lt;span class="mord mtight"&gt;&lt;span class="mord mathnormal mtight"&gt;q&lt;/span&gt;&lt;span class="mord mathnormal mtight"&gt;u&lt;/span&gt;&lt;span class="mord mathnormal mtight"&gt;a&lt;/span&gt;&lt;span class="mord mathnormal mtight"&gt;r&lt;/span&gt;&lt;span class="mord mathnormal mtight"&gt;t&lt;/span&gt;&lt;span class="mord mathnormal mtight"&gt;er&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist-s"&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist-r"&gt;&lt;span class="vlist"&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;
. We must assume the fraction to which it overlaps – and the way of doing that – is by generating random points within the unit square (e.g. we let it rain). &lt;/p&gt;

&lt;p&gt;This fraction can be defined as 
&lt;span class="katex-element"&gt;
  &lt;span class="katex"&gt;&lt;span class="katex-mathml"&gt;drops  inside  the  quarter  circletotal  number  of  drops  generated\frac{drops\;inside\;the\;quarter\;circle}{total\;number\;of\;drops\;generated}&lt;/span&gt;&lt;span class="katex-html"&gt;&lt;span class="base"&gt;&lt;span class="strut"&gt;&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mopen nulldelimiter"&gt;&lt;/span&gt;&lt;span class="mfrac"&gt;&lt;span class="vlist-t vlist-t2"&gt;&lt;span class="vlist-r"&gt;&lt;span class="vlist"&gt;&lt;span&gt;&lt;span class="pstrut"&gt;&lt;/span&gt;&lt;span class="sizing reset-size6 size3 mtight"&gt;&lt;span class="mord mtight"&gt;&lt;span class="mord mathnormal mtight"&gt;t&lt;/span&gt;&lt;span class="mord mathnormal mtight"&gt;o&lt;/span&gt;&lt;span class="mord mathnormal mtight"&gt;t&lt;/span&gt;&lt;span class="mord mathnormal mtight"&gt;a&lt;/span&gt;&lt;span class="mord mathnormal mtight"&gt;l&lt;/span&gt;&lt;span class="mspace mtight"&gt;&lt;/span&gt;&lt;span class="mord mathnormal mtight"&gt;n&lt;/span&gt;&lt;span class="mord mathnormal mtight"&gt;u&lt;/span&gt;&lt;span class="mord mathnormal mtight"&gt;mb&lt;/span&gt;&lt;span class="mord mathnormal mtight"&gt;er&lt;/span&gt;&lt;span class="mspace mtight"&gt;&lt;/span&gt;&lt;span class="mord mathnormal mtight"&gt;o&lt;/span&gt;&lt;span class="mord mathnormal mtight"&gt;f&lt;/span&gt;&lt;span class="mspace mtight"&gt;&lt;/span&gt;&lt;span class="mord mathnormal mtight"&gt;d&lt;/span&gt;&lt;span class="mord mathnormal mtight"&gt;ro&lt;/span&gt;&lt;span class="mord mathnormal mtight"&gt;p&lt;/span&gt;&lt;span class="mord mathnormal mtight"&gt;s&lt;/span&gt;&lt;span class="mspace mtight"&gt;&lt;/span&gt;&lt;span class="mord mathnormal mtight"&gt;g&lt;/span&gt;&lt;span class="mord mathnormal mtight"&gt;e&lt;/span&gt;&lt;span class="mord mathnormal mtight"&gt;n&lt;/span&gt;&lt;span class="mord mathnormal mtight"&gt;er&lt;/span&gt;&lt;span class="mord mathnormal mtight"&gt;a&lt;/span&gt;&lt;span class="mord mathnormal mtight"&gt;t&lt;/span&gt;&lt;span class="mord mathnormal mtight"&gt;e&lt;/span&gt;&lt;span class="mord mathnormal mtight"&gt;d&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class="pstrut"&gt;&lt;/span&gt;&lt;span class="frac-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class="pstrut"&gt;&lt;/span&gt;&lt;span class="sizing reset-size6 size3 mtight"&gt;&lt;span class="mord mtight"&gt;&lt;span class="mord mathnormal mtight"&gt;d&lt;/span&gt;&lt;span class="mord mathnormal mtight"&gt;ro&lt;/span&gt;&lt;span class="mord mathnormal mtight"&gt;p&lt;/span&gt;&lt;span class="mord mathnormal mtight"&gt;s&lt;/span&gt;&lt;span class="mspace mtight"&gt;&lt;/span&gt;&lt;span class="mord mathnormal mtight"&gt;in&lt;/span&gt;&lt;span class="mord mathnormal mtight"&gt;s&lt;/span&gt;&lt;span class="mord mathnormal mtight"&gt;i&lt;/span&gt;&lt;span class="mord mathnormal mtight"&gt;d&lt;/span&gt;&lt;span class="mord mathnormal mtight"&gt;e&lt;/span&gt;&lt;span class="mspace mtight"&gt;&lt;/span&gt;&lt;span class="mord mathnormal mtight"&gt;t&lt;/span&gt;&lt;span class="mord mathnormal mtight"&gt;h&lt;/span&gt;&lt;span class="mord mathnormal mtight"&gt;e&lt;/span&gt;&lt;span class="mspace mtight"&gt;&lt;/span&gt;&lt;span class="mord mathnormal mtight"&gt;q&lt;/span&gt;&lt;span class="mord mathnormal mtight"&gt;u&lt;/span&gt;&lt;span class="mord mathnormal mtight"&gt;a&lt;/span&gt;&lt;span class="mord mathnormal mtight"&gt;r&lt;/span&gt;&lt;span class="mord mathnormal mtight"&gt;t&lt;/span&gt;&lt;span class="mord mathnormal mtight"&gt;er&lt;/span&gt;&lt;span class="mspace mtight"&gt;&lt;/span&gt;&lt;span class="mord mathnormal mtight"&gt;c&lt;/span&gt;&lt;span class="mord mathnormal mtight"&gt;i&lt;/span&gt;&lt;span class="mord mathnormal mtight"&gt;rc&lt;/span&gt;&lt;span class="mord mathnormal mtight"&gt;l&lt;/span&gt;&lt;span class="mord mathnormal mtight"&gt;e&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist-s"&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist-r"&gt;&lt;span class="vlist"&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mclose nulldelimiter"&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;
 or abbreviated as 
&lt;span class="katex-element"&gt;
  &lt;span class="katex"&gt;&lt;span class="katex-mathml"&gt;it\frac{i}{t}&lt;/span&gt;&lt;span class="katex-html"&gt;&lt;span class="base"&gt;&lt;span class="strut"&gt;&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mopen nulldelimiter"&gt;&lt;/span&gt;&lt;span class="mfrac"&gt;&lt;span class="vlist-t vlist-t2"&gt;&lt;span class="vlist-r"&gt;&lt;span class="vlist"&gt;&lt;span&gt;&lt;span class="pstrut"&gt;&lt;/span&gt;&lt;span class="sizing reset-size6 size3 mtight"&gt;&lt;span class="mord mtight"&gt;&lt;span class="mord mathnormal mtight"&gt;t&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class="pstrut"&gt;&lt;/span&gt;&lt;span class="frac-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class="pstrut"&gt;&lt;/span&gt;&lt;span class="sizing reset-size6 size3 mtight"&gt;&lt;span class="mord mtight"&gt;&lt;span class="mord mathnormal mtight"&gt;i&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist-s"&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist-r"&gt;&lt;span class="vlist"&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mclose nulldelimiter"&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;
. From here, we can build an equation with a fraction of the quarter circle area over unit square are equal the fraction of the drops inside the quarter circle over the total number of drops. This equation must then be solved for 
&lt;span class="katex-element"&gt;
  &lt;span class="katex"&gt;&lt;span class="katex-mathml"&gt;π\pi&lt;/span&gt;&lt;span class="katex-html"&gt;&lt;span class="base"&gt;&lt;span class="strut"&gt;&lt;/span&gt;&lt;span class="mord mathnormal"&gt;π&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;
 and leads us to the following equation:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hgv-mxk0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633511391851/TngEnhvJw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hgv-mxk0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633511391851/TngEnhvJw.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#interactive-simulation"&gt;
  &lt;/a&gt;
  Interactive Simulation
&lt;/h2&gt;

&lt;p&gt;I have implemented an interactive simulation in React and Typescript. The &lt;a href="https://chriszirkel.github.io/monte-carlo-pi/"&gt;app&lt;/a&gt; uses &lt;a href="https://plotly.com/javascript/"&gt;Plotly.js&lt;/a&gt; to draw the unit square, the quarter circle and the raindrops. I have added a few buttons to randomly generate 1, 10, 100 or 1000 of raindrops. The raindrops are colored blue if they fall inside the quarter circle, otherwise they are colored red. There's also a special button labelled as &lt;strong&gt;Let It Rain&lt;/strong&gt; to continuously generate raindrops as if it were raining. After each update, the approximate value of Pi is calculated again based on the newly generated raindrops. The more raindrops, the more accurate the value of Pi.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---2syi_O4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633523217952/BrDkScslr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---2syi_O4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633523217952/BrDkScslr.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#links"&gt;
  &lt;/a&gt;
  Links
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://chriszirkel.github.io/monte-carlo-pi/"&gt;Interactive Simulation App&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/chriszirkel/monte-carlo-pi"&gt;Source Code on GitHub&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="https://de.wikipedia.org/wiki/Monte-Carlo-Simulation"&gt;Monte Carlo Simulation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>react</category>
      <category>typescript</category>
      <category>montecarlo</category>
      <category>pi</category>
    </item>
    <item>
      <title>The role of Developer Experience at Materialize</title>
      <author>Andy Hattemer</author>
      <pubDate>Thu, 07 Oct 2021 15:51:43 +0000</pubDate>
      <link>https://dev.to/rufio/the-role-of-developer-experience-at-materialize-286k</link>
      <guid>https://dev.to/rufio/the-role-of-developer-experience-at-materialize-286k</guid>
      <description>&lt;p&gt;If you’ve worked with data products and think things can be WAY better, if you think communicating ideas is as important as writing code, if you want the challenges and impact that come with working in a small startup, &lt;a href="https://grnh.se/acc51dec4us"&gt;join us on the DevEx team at Materialize!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Read on for the general idea, or skip to the second half for the &lt;a href="#specifics-of-devex-at-materialize"&gt;specifics of developer experience at Materialize&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#general-principles-of-developer-experience"&gt;
  &lt;/a&gt;
  General Principles of Developer Experience
&lt;/h2&gt;

&lt;p&gt;Other areas of software engineering are a few steps ahead of the data space when it comes to the “state of the art” of tooling, processes, and &lt;strong&gt;&lt;a href="https://www.netlify.com/blog/2021/01/06/developer-experience-at-netlify/"&gt;developer experience&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;This gives us a trail to follow, but we need to take care to follow the underlying principles, and not &lt;a href="https://en.wikipedia.org/wiki/Cargo_cult"&gt;cargo cult&lt;/a&gt; the programs resulting from those principles.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#developer-productivity"&gt;
  &lt;/a&gt;
  Developer Productivity
&lt;/h3&gt;

&lt;p&gt;When companies talk about a focus on simplicity, UX, docs, good CLIs and APIs… These are all just means of improving the same thing: &lt;strong&gt;developer productivity.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;One way to frame the role of DevEx:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Focus on identifying and acting on opportunities to improve developer productivity.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Everything the team does can be evaluated on its effect on developer productivity.&lt;/p&gt;

&lt;p&gt;This works equally well for scenarios where we are introducing a technology to developers: &lt;em&gt;Is it REALLY changing their workflow in a way that makes them more productive?&lt;/em&gt; And scenarios where we are improving the experience for existing users: &lt;em&gt;Are we removing drudgework, are we helping them level-up their usage effectively?&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#empathy"&gt;
  &lt;/a&gt;
  Empathy
&lt;/h3&gt;

&lt;p&gt;If you were assembling a team to be uniquely qualified to improve productivity, who would you look for?&lt;/p&gt;

&lt;p&gt;Some of the companies with the best developer experience have an innate advantage: the builders of the tool are the same kind of developers as the users of the tool. (&lt;em&gt;Bonus points if the tool is used to build the tool, like GitHub!)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Most of the revolutionary startups in the developer tooling space were born out of firsthand experience the founders had as practitioners.&lt;/p&gt;

&lt;p&gt;But these aren’t prerequisites for success, they’re just different ways of guaranteeing that a company is good at &lt;strong&gt;empathizing&lt;/strong&gt; with their users.&lt;/p&gt;

&lt;p&gt;It’s unrealistic and close-minded to expect to only hire experienced practitioners who could also be customers. The data space is growing too fast, we need to bring more people in!&lt;/p&gt;

&lt;p&gt;Whether we hire people from careers as practitioners in the space or not, we maintain empathy by placing a huge emphasis on &lt;strong&gt;operational knowledge&lt;/strong&gt;, on &lt;strong&gt;learning the craft&lt;/strong&gt;, on becoming experts in the real-world usage of our products and the surrounding ecosystem.&lt;/p&gt;

&lt;p&gt;A developer experience team maintains empathy with their audience, helping &lt;strong&gt;identify opportunities to improve their productivity.&lt;/strong&gt; The next bit is about acting on those opportunities.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#education"&gt;
  &lt;/a&gt;
  Education
&lt;/h3&gt;

&lt;p&gt;Education &lt;em&gt;(documentation, how-to guides, interactive tutorials, conceptual articles, videos, demo code and applications, meetups, student programs, forums, etc…)&lt;/em&gt; is uniquely important to developer experience for at least a few reasons:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;It is a powerful channel for improving developer productivity&lt;/li&gt;
&lt;li&gt;It is a way of reaching developers that don’t know about your product and growing your user base.&lt;/li&gt;
&lt;li&gt;It is wholly owned by the developer experience team.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;DevEx has an intentionally broader scope than other team structures like Advocacy or Documentation. It ties back to that productivity mandate: If there’s one form of education that is more effective at increasing developer productivity, use it!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#code"&gt;
  &lt;/a&gt;
  Code
&lt;/h3&gt;

&lt;p&gt;It’s silly to draw an artificial wall between people teaching code and writing code. In the past it happened as a result of developer companies not adequately paying educators (so anyone educator who &lt;em&gt;could&lt;/em&gt; get a job writing code &lt;em&gt;did.&lt;/em&gt;)&lt;/p&gt;

&lt;p&gt;We have a simple solution: &lt;strong&gt;Pay DevEx on the same scale as engineering.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Encouraging the developer experience team to write code has so many benefits:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Empowerment&lt;/strong&gt; - If devEx sees an opportunity to improve productivity that depends on some code being written or updated, they have more power to make it happen.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Credibility&lt;/strong&gt; - The team gets real-world experience with the ecosystem they are teaching.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Career Optionality&lt;/strong&gt; - Many career paths develop “ruts” where the longer you stay the harder it is to change. When you’re also writing code you're reversing that trend: The longer you do it, the easier it is to switch to an engineering track.&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#where-do-you-draw-the-line-with-code"&gt;
  &lt;/a&gt;
  Where do you draw the line with code?
&lt;/h4&gt;

&lt;p&gt;When should DevEx hand things off to engineering? This is unfortunately a bit of a "&lt;a href="https://en.wikipedia.org/wiki/I_know_it_when_I_see_it"&gt;you know it when you see it&lt;/a&gt;" non-answer. But to make it clear, follow this rule:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Never create a current or future burden on engineering without buy-in from engineering.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For anything that does have greater engineering burden, the typical cross-functional processes should take over, where the business case for the devex request is written up and handed to engineering where it’s prioritized alongside other engineering work.&lt;/p&gt;

&lt;p&gt;But the same cloud-based developer tools and services have created an environent where a developer experience team can create a lot of value without burdening their core engineering team.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#specifics-of-devex-at-materialize"&gt;
  &lt;/a&gt;
  Specifics of DevEx at Materialize
&lt;/h2&gt;

&lt;p&gt;Materialize is a disruptive technology, it doesn't fit cleanly in an existing category, and it's still in the "early-adopter" phase. These factors mean that developer experience is absolutely vital to the success of the company. &lt;/p&gt;

&lt;p&gt;Without a developer experience team, success hinges on people buying into the big-picture vision deeply enough to blaze their own trail and convince their coworkers to follow. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u6KfTBap--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://andyhattemer.com/posts/developer-experience-at-materialize/developer_productivity.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u6KfTBap--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://andyhattemer.com/posts/developer-experience-at-materialize/developer_productivity.png" alt="Learning path to a disruptive technology"&gt;&lt;/a&gt;&lt;br&gt;
This almost always involves a short-term productivity loss as they adopt and learn the new technology.&lt;/p&gt;

&lt;p&gt;DevEx is about building "on-ramps" to Materialize, especially early on when the core concepts are not widely understood.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--frWAo-11--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://andyhattemer.com/posts/developer-experience-at-materialize/developer_productivity_2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--frWAo-11--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://andyhattemer.com/posts/developer-experience-at-materialize/developer_productivity_2.png" alt="DevEx On-Ramps"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We have a strong opinion about the guiding principles listed above, but we don't have all the tactics mapped out yet.&lt;/p&gt;

&lt;p&gt;Some specific on-ramps we are focusing on now:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Extending integrations like &lt;a href="https://materialize.com/introducing-dbt-materialize/"&gt;dbt&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Develop and share new patterns, architectures and operational practices for data engineering on a streaming paradigm.&lt;/li&gt;
&lt;li&gt;Task oriented how-to guides that cover using Materialize with specific upstream and downstream systems.&lt;/li&gt;
&lt;li&gt;Broader educational content fundamental concepts and idioms in streaming systems, like windows, sinks, exactly-once semantics, durability.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#team-structure"&gt;
  &lt;/a&gt;
  Team Structure
&lt;/h3&gt;

&lt;p&gt;The team is small right now (3 people) so the most important attribute of our first hires is ability to learn and grow. We’re open to hiring technical writers and DevEx Engineers at all levels. &lt;/p&gt;

&lt;p&gt;Here is the structure we know so far:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1VLAFQ59--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://andyhattemer.com/posts/developer-experience-at-materialize/devex_team_structure.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1VLAFQ59--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://andyhattemer.com/posts/developer-experience-at-materialize/devex_team_structure.png" alt="Developer Experience Team Structure"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It’s not practical to expect everyone to be experts in Materialize &lt;em&gt;and&lt;/em&gt; all the different niches where it can be used, so in Documentation the focus is mainly on knowing Materialize, and in DevEx we’re planning to have each individual focus on a specific niche (like data engineering.) Integration Engineering may be a team we add later, but it may also be handled within the engineering org.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#where-to-go-from-here"&gt;
  &lt;/a&gt;
  Where to go from here
&lt;/h2&gt;

&lt;p&gt;If you're already familiar with Materialize and excited about its potential, &lt;a href="https://grnh.se/acc51dec4us"&gt;take a look at the open positions here&lt;/a&gt; and if you see one you like apply on the job site, if you don't see a position that exactly fits your experience just &lt;a href="https://twitter.com/andyhattemer"&gt;contact me&lt;/a&gt; directly!&lt;/p&gt;

&lt;p&gt;If you're not yet familiar with Materialize, but you like the idea of this developer experience team structure, read this &lt;a href="https://andyhattemer.com/posts/why-materialize-reading-list/"&gt;why Materialize reading list&lt;/a&gt; and get in touch with me if, after reading the WHY bit, you're excited about what we're building here.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>How to setup mongodb atlas?</title>
      <author>Sachin Chaurasiya</author>
      <pubDate>Thu, 07 Oct 2021 15:42:17 +0000</pubDate>
      <link>https://dev.to/sachinchaurasiya/how-to-setup-mongodb-atlas-an7</link>
      <guid>https://dev.to/sachinchaurasiya/how-to-setup-mongodb-atlas-an7</guid>
      <description>&lt;p&gt;MongoDB is a NoSQL database and we can use MongoDB with different programming languages. MongoDB can be used locally or on Cloud. so in this article will discuss how to set up MongoDB on the cloud and connect with your application.&lt;/p&gt;

&lt;p&gt;This is just for learning purpose so to get started will use the Free plan of MongoDB atlas. if you are planning to use MongoDB for production-level applications then you can upgrade the plan.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create an account on MongoDB atlas.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://www.mongodb.com/cloud/atlas/register"&gt;click here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Visit the above link and you will see a page like this :&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--g-6s_-US--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633256242504/Pv9Jx3y3A.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g-6s_-US--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633256242504/Pv9Jx3y3A.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can just fill up all the information and click on the &lt;code&gt;get started free&lt;/code&gt; button.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Please fill in the proper email id to get a verification email.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2levr3TP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633256420709/mjKlFRzIY.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2levr3TP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633256420709/mjKlFRzIY.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;after clicking on the getting started button you will be redirected to this page.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WqsItTpR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633256870619/j70FRLZp2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WqsItTpR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633256870619/j70FRLZp2.png" alt="screenshot.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now check your inbox and verify your email address. after verifying you will see this page so click on continue.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Iax9hV6W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633257060884/_J-wkBClE.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Iax9hV6W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633257060884/_J-wkBClE.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Setup project on Atlas&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Fill in all the information to get started. you can change this information later.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1NMUawxP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633257242947/Mia1uv42s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1NMUawxP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633257242947/Mia1uv42s.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then you will be asked to select an Atlas Type. I would suggest going with shared as it is free and for learning purposes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--owcm5NdA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633257444592/Gsi7tmz56.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--owcm5NdA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633257444592/Gsi7tmz56.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Select any Cloud provider and Region as per your requirements.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FGekP9YB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633257774688/bCqQdA2U0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FGekP9YB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633257774688/bCqQdA2U0.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click on create a cluster button and you will be redirected to a page like this where it will show Your cluster is being created. so please wait for some time.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yJ8TGT6q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633257942165/-HsWYcQ9f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yJ8TGT6q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633257942165/-HsWYcQ9f.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After some time you will get to see that your cluster is created.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aFDb6Cro--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633258167409/PX69sJHxK.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aFDb6Cro--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633258167409/PX69sJHxK.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now click on the &lt;code&gt;Connect&lt;/code&gt; button and Modal will be open like this. here you have to do two things&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Add Your IP address ( so that you can access this cluster in your application )&lt;/li&gt;
&lt;li&gt;Create a Database user &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Yfgj_iTu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633258272836/Nsr86wFfj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Yfgj_iTu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633258272836/Nsr86wFfj.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D7HuXmBT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633258748445/KlpjdeRV6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D7HuXmBT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633258748445/KlpjdeRV6.png" alt="screenshot (1).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After adding IP address and Database user click on the &lt;code&gt;choose a connection method&lt;/code&gt; button&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oxmArlH1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633258874150/nYThOpaF4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oxmArlH1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633258874150/nYThOpaF4.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then click on the &lt;code&gt;Connect to your application&lt;/code&gt; option.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7q7bPuF5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633258952465/L_eff0Ylg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7q7bPuF5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633258952465/L_eff0Ylg.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here you will see two things:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Drivers and version ( you can select any driver and version, I have selected python and the latest version )&lt;/li&gt;
&lt;li&gt;connection string ( your connection string will be different from my connection string )&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--F1kjnG6E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633259296394/dzHmYah24.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F1kjnG6E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633259296394/dzHmYah24.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can copy your connection string and put it on your application.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Replace &lt;code&gt;&amp;lt;password&amp;gt;&lt;/code&gt; placeholder with your actual password.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I hope you would have found this article helpful. if you have any queries you can ask in the comment section I would be happy to help you out.&lt;/p&gt;

&lt;p&gt;Thank you for Reading.&lt;/p&gt;

</description>
      <category>mongodb</category>
      <category>javascript</category>
      <category>tutorial</category>
      <category>cloud</category>
    </item>
    <item>
      <title>Why Materialize: Recommended Reading List</title>
      <author>Andy Hattemer</author>
      <pubDate>Thu, 07 Oct 2021 15:38:00 +0000</pubDate>
      <link>https://dev.to/rufio/why-materialize-recommended-reading-list-51gh</link>
      <guid>https://dev.to/rufio/why-materialize-recommended-reading-list-51gh</guid>
      <description>&lt;p&gt;This is a growing collection of articles, podcasts, and other media that convinced me that:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Technology that incrementally maintains materialized views of data is difficult, but necessary and inevitable&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://materialize.com/"&gt;Materialize&lt;/a&gt; is the best shot at making that available to a wide array of developers.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;These are probably most relevant to people with operational experience in the data space. You don't need to be technical but it's useful if you've rolled up your sleeves and dug into some of the complicated bits of working with data at scale. They don't need to be read in a particular order.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Listen to Arjun Narayan's podcast on the Data Stack Show: &lt;a href="https://datastackshow.com/podcast/46-a-new-paradigm-in-stream-processing-with-arjun-narayan-of-materialize/"&gt;A New Paradigm in Stream Processing&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Watch &lt;a href="https://www.youtube.com/watch?v=hpNSwBnfl1g"&gt;Frank McSherry's appearance on TdT&lt;/a&gt; to get a feel for how Materialize works.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Read Jon Gjengset’s “simple english” explanation of batch vs incremental &lt;a href="https://jon.thesquareplanet.com/noria-in-simpler-terms.pdf"&gt;https://jon.thesquareplanet.com/noria-in-simpler-terms.pdf&lt;/a&gt; - &lt;em&gt;This is just a really great non-technical way of explaining the traditional database vs incrementally-maintained db with a fun metaphor. This guy is a legend in the space who created his own approach to incremental view maintenance as an MIT thesis, but has since moved on to other things.&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Read Nikita Tonsky’s “&lt;a href="https://tonsky.me/blog/the-web-after-tomorrow/"&gt;Web After Tomorrow&lt;/a&gt;” - &lt;em&gt;Another legend, he is thinking about things from an application developer’s perspective, looking for a “reactive database” but it is eye-opening. Be warned that we are still a ways away from developing a product that is good enough to just quickly slot in and solve this problem.&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Read &lt;a href="https://lironshapira.medium.com/data-denormalization-is-broken-7b697352f405"&gt;Data Denormalization is Broken&lt;/a&gt; - &lt;em&gt;This is a good practical explainer of why something like Materialize should exist.&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Read &lt;a href="https://nchammas.com/writing/data-pipeline-materialized-view"&gt;A Data Pipeline is a Materialized View&lt;/a&gt; - &lt;em&gt;If the one above is for application development, this post lays out the case for Materialized Views for data engineering.&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Read Tristan Handy’s &lt;a href="https://discourse.getdbt.com/t/on-the-limits-of-incrementality/"&gt;post/rant about the limits of incrementally updated tabl&lt;/a&gt;es in data warehouses. - &lt;em&gt;This is more of an answer to "Why NOT just work with the paradigms we have."&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once you're finished, if you're excited about Materialize, &lt;a href="https://grnh.se/acc51dec4us"&gt;check out our jobs page&lt;/a&gt;, if you're interested in building on-ramps to Materialize by contributing both writing and code, read about &lt;a href="https://andyhattemer.com/posts/developer-experience-at-materialize/"&gt;our developer experience team&lt;/a&gt; and reach out if it interests you!&lt;/p&gt;

</description>
    </item>
    <item>
      <title>How can i create a chat app with json on php</title>
      <author>Elijah Emmanuel</author>
      <pubDate>Thu, 07 Oct 2021 15:35:56 +0000</pubDate>
      <link>https://dev.to/vinhpedro/how-can-i-create-a-chat-app-with-json-on-php-1opc</link>
      <guid>https://dev.to/vinhpedro/how-can-i-create-a-chat-app-with-json-on-php-1opc</guid>
      <description>&lt;p&gt;Please how can I create a chatting app with php, I have tried all means but but don't know what am missing, &lt;br&gt;
Below is the cade for the database connection and json code used to convert it&lt;/p&gt;

&lt;p&gt;&amp;lt;?php &lt;br&gt;
$localhost="localhost";&lt;br&gt;
$user="root";&lt;br&gt;
$password="";&lt;br&gt;
$db='chat';&lt;br&gt;
$conn=new mysqli($localhost,$user,$password,$db);&lt;/p&gt;

&lt;p&gt;if ($conn-&amp;gt;connect_error) {&lt;br&gt;
    die("unable to connect to server");&lt;br&gt;
}&lt;/p&gt;

&lt;p&gt;$result=array();&lt;br&gt;&lt;br&gt;
$message= isset($_POST['message']) ? $_POST['message']:null;&lt;br&gt;
$from=isset($_POST['from']) ? $_POST['from']:null;&lt;/p&gt;

&lt;p&gt;if(!empty($message) &amp;amp;&amp;amp; !empty($from)){&lt;br&gt;
    $sql="INSERT INTO &lt;code&gt;chat&lt;/code&gt;(&lt;code&gt;message&lt;/code&gt;,&lt;code&gt;from&lt;/code&gt;) VALUES('".$message."','".$from."')";&lt;br&gt;
    $result['send_status']=$conn-&amp;gt;query($sql);&lt;/p&gt;

&lt;p&gt;}&lt;br&gt;
//print massages&lt;br&gt;
$start =isset($_GET['start']) ? intval($_GET['start']):0;&lt;br&gt;
$items = $conn-&amp;gt;query("SELECT * FROM &lt;code&gt;chat&lt;/code&gt; WHERE &lt;code&gt;id&lt;/code&gt; &amp;gt; ".$start);&lt;br&gt;
while ($row=$items-&amp;gt;fetch_assoc()) {&lt;br&gt;
    $result["items"][]=$row;&lt;br&gt;
}&lt;/p&gt;

&lt;p&gt;$conn-&amp;gt;close();&lt;/p&gt;

&lt;p&gt;header('Access-Control-Allow-Origin: * ');&lt;br&gt;
header('Control-Type: application/json');&lt;/p&gt;

&lt;p&gt;echo json_encode($result); &lt;br&gt;
? &amp;gt;&lt;/p&gt;

&lt;p&gt;And below is the code in my index page:&lt;/p&gt;

&lt;p&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;br&gt;
&lt;/p&gt;


&lt;br&gt;
    &amp;lt;!--  --&amp;gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;meta charset="UTF-8"&amp;gt;
&amp;lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&amp;gt;
&amp;lt;title&amp;gt;CHAT&amp;lt;/title&amp;gt;
&amp;lt;script src="jquery.min.js"&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script&amp;gt;
    var from = null, start = 0, url = "http://localhost/chat.php";
    $(document).ready(function () {
        from = prompt("enter your name");
        load();

        $('form').submit(function (e) {
            $.post(url, {
                message: $('#message').val(),
                from: from
            });
            $('#message').val('');
            return false;
        })
    });

    function load() {
        $.get(url + '?start=' + start, function(result) {
            if (result.items) {
                result.items.forEach(item =&amp;gt; {
                    start = item.id;
                    $('#messages').append(renderMessage(item));
                    console.log(item.status);
                })
            };
            load();
        });
    }

    function renderMessage(item) {
        console.log(item);
    }


&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



    body {
        margin: 0;
        overflow: hidden;
        background: silver;
    }

    #messages {
        height: 83vh;
        overflow: hidden;
        padding: 10px;
    }

    form {
        display: flex;
    }

    input {
        font-size: 1.2rem;
        padding: 10px;
        margin: 10px 5px;
        appearance: none;
        -webkit-appearance: none;
    }

    #message {
        flex: 2;
    }



&lt;br&gt;
      GET JSON&lt;br&gt;
    
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div id="messages"&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;form&amp;gt;
    &amp;lt;input type="text" id="message" autocomplete="off" autofocus placeholder="Type Message..."&amp;gt;
    &amp;lt;input type="submit" value="Send"&amp;gt;
&amp;lt;/form&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Thanks in advance. &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>php</category>
      <category>json</category>
    </item>
    <item>
      <title>Deploy Appwrite to AWS using Terraform and Ansible</title>
      <author>Rajitha Gunathilake</author>
      <pubDate>Thu, 07 Oct 2021 15:31:05 +0000</pubDate>
      <link>https://dev.to/rizkyrajitha/deploy-appwrite-to-aws-using-terraform-and-ansible-4af</link>
      <guid>https://dev.to/rizkyrajitha/deploy-appwrite-to-aws-using-terraform-and-ansible-4af</guid>
      <description>&lt;p&gt;Hi everyone,&lt;/p&gt;

&lt;p&gt;This is a tutorial I am going to walk through how to deploy &lt;a href="https://appwrite.io/"&gt;Appwrite&lt;/a&gt; to &lt;a href="https://aws.amazon.com/ec2/"&gt;AWS EC2&lt;/a&gt; instance using &lt;a href="https://www.terraform.io/"&gt;Terraform&lt;/a&gt; and &lt;a href="https://www.ansible.com/"&gt;Ansible&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Appwrite is a self-hosted solution that provides developers with a set of easy-to-use and integrate REST APIs to manage their core backend needs.&lt;/p&gt;

&lt;p&gt;We will use Terraform to provision the underlying infrastructure and manage configurations and deploy appwrite using Ansible.&lt;/p&gt;

&lt;p&gt;code for this tutorial can be found in &lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/RizkyRajitha"&gt;
        RizkyRajitha
      &lt;/a&gt; / &lt;a href="https://github.com/RizkyRajitha/appwriteiac"&gt;
        appwriteiac
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;Hi everyone,&lt;/p&gt;
&lt;p&gt;This is a tutorial I am going to walk through how to deploy &lt;a href="https://appwrite.io/" rel="nofollow"&gt;Appwrite&lt;/a&gt; to &lt;a href="https://aws.amazon.com/ec2/" rel="nofollow"&gt;AWS EC2&lt;/a&gt; instance using &lt;a href="https://www.terraform.io/" rel="nofollow"&gt;Terraform&lt;/a&gt; and &lt;a href="https://www.ansible.com/" rel="nofollow"&gt;Ansible&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Appwrite is a self-hosted solution that provides developers with a set of easy-to-use and integrate REST APIs to manage their core backend needs.&lt;/p&gt;
&lt;p&gt;We will use Terraform to provision the underlying infrastructure and manage configurations and deploy appwrite using Ansible.&lt;/p&gt;
&lt;p&gt;code for this tutorial can be found in&lt;/p&gt;
&lt;p&gt;{% github RizkyRajitha/appwriteiac %}&lt;/p&gt;
&lt;h3&gt;
prerequisites&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;aws account &lt;a href="https://aws.amazon.com/free/" rel="nofollow"&gt;AWS free tier&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Terraform installed &lt;a href="https://learn.hashicorp.com/tutorials/terraform/install-cli?in=terraform/aws-get-started" rel="nofollow"&gt;Terraform official tutorial&lt;/a&gt; and
setup with aws credentials &lt;a href="https://learn.hashicorp.com/tutorials/terraform/aws-build?in=terraform/aws-get-started" rel="nofollow"&gt;Terraform official tutorial&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Ansible installed &lt;a href="https://docs.ansible.com/ansible/latest/installation_guide/intro_installation.html" rel="nofollow"&gt;Ansible official installation guide&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;AWS Key pair for SSH connection &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html" rel="nofollow"&gt;AWS UserGuide&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Provisioning infrastructure with Terraform&lt;/h2&gt;
&lt;p&gt;we'll start by provisioning the infrastructure needed to deploy appwrite using terraform.&lt;/p&gt;
&lt;p&gt;in this tutorial, we will be provision&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;VPC and subnet to run EC2 instance&lt;/li&gt;
&lt;li&gt;Internet gateway to expose subnet to internet&lt;/li&gt;
&lt;li&gt;route table and…&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/RizkyRajitha/appwriteiac"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  prerequisites
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;aws account &lt;a href="https://aws.amazon.com/free/"&gt;AWS free tier&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Terraform installed &lt;a href="https://learn.hashicorp.com/tutorials/terraform/install-cli?in=terraform/aws-get-started"&gt;Terraform official tutorial&lt;/a&gt; and
setup with aws credentials &lt;a href="https://learn.hashicorp.com/tutorials/terraform/aws-build?in=terraform/aws-get-started"&gt;Terraform official tutorial&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Ansible installed &lt;a href="https://docs.ansible.com/ansible/latest/installation_guide/intro_installation.html"&gt;Ansible official installation guide&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;AWS Key pair for SSH connection &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html"&gt;AWS UserGuide&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#provisioning-infrastructure-with-terraform"&gt;
  &lt;/a&gt;
  Provisioning infrastructure with Terraform
&lt;/h2&gt;

&lt;p&gt;we'll start by provisioning the infrastructure needed to deploy appwrite using terraform.&lt;/p&gt;

&lt;p&gt;in this tutorial, we will be provision&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;VPC and subnet to run EC2 instance&lt;/li&gt;
&lt;li&gt;Internet gateway to expose subnet to internet&lt;/li&gt;
&lt;li&gt;route table and route table association to associate route table with subnet&lt;/li&gt;
&lt;li&gt;EC2 instance to deploy appwrite&lt;/li&gt;
&lt;li&gt;security groups to allow inbound(&lt;code&gt;http&lt;/code&gt; , &lt;code&gt;https&lt;/code&gt;) and outbound web traffic to EC2 instance to expose appwrite&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;first, create a folder of your choice and then create &lt;code&gt;providers.tf&lt;/code&gt; file . this file will hold information about the cloud provider. next, initialize terraform project using &lt;code&gt;terraform init&lt;/code&gt; . this will allow terraform to download necessary binaries and initiate terraform.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#providerstf"&gt;
  &lt;/a&gt;
  providers.tf
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight terraform"&gt;&lt;code&gt;&lt;span class="k"&gt;terraform&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="nx"&gt;required_providers&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;aws&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;source&lt;/span&gt;  &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"hashicorp/aws"&lt;/span&gt;
      &lt;span class="nx"&gt;version&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"~&amp;gt; 3.27"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;required_version&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"&amp;gt;= 0.14.9"&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;provider&lt;/span&gt; &lt;span class="s2"&gt;"aws"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="nx"&gt;profile&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"default"&lt;/span&gt;
  &lt;span class="nx"&gt;region&lt;/span&gt;  &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"us-east-1"&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;after that, we need to create our first component, AWS &lt;a href="https://aws.amazon.com/vpc/"&gt;VPC&lt;/a&gt; . &lt;code&gt;VPC&lt;/code&gt; stands for Virtual Private Cloud, which is like a complete network infrastructure layer for your cloud applications. next, we need to create a subnet in our &lt;code&gt;VPC&lt;/code&gt;. this is where our EC2 instance is placed in the network.&lt;/p&gt;

&lt;p&gt;To expose this subnect to the internet we need to provision an &lt;a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Internet_Gateway.html"&gt;Internet Gateway&lt;/a&gt; and also &lt;a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Route_Tables.html"&gt;route table&lt;/a&gt; and &lt;a href="https://docs.aws.amazon.com/vpc/latest/userguide/WorkWithRouteTables.html#AssociateSubnet"&gt;route table associations&lt;/a&gt; to associate the route table with this subnet.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#networktf"&gt;
  &lt;/a&gt;
  network.tf
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight terraform"&gt;&lt;code&gt;
&lt;span class="c1"&gt;# VPC&lt;/span&gt;
&lt;span class="k"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"aws_vpc"&lt;/span&gt; &lt;span class="s2"&gt;"vpcappwriteiacdemo"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;cidr_block&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"10.0.0.0/16"&lt;/span&gt;
  &lt;span class="nx"&gt;tags&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;"Name"&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"vpc_appwriteiacdemo"&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;# Public subnet&lt;/span&gt;
&lt;span class="k"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"aws_subnet"&lt;/span&gt; &lt;span class="s2"&gt;"publicsubnetappwriteiacdemo"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;vpc_id&lt;/span&gt;                  &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;aws_vpc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;vpcappwriteiacdemo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;
  &lt;span class="nx"&gt;cidr_block&lt;/span&gt;              &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"10.0.1.0/24"&lt;/span&gt;
  &lt;span class="nx"&gt;map_public_ip_on_launch&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="c1"&gt;#IGW&lt;/span&gt;
&lt;span class="k"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"aws_internet_gateway"&lt;/span&gt; &lt;span class="s2"&gt;"igwappwriteiacdemo"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;vpc_id&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;aws_vpc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;vpcappwriteiacdemo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;
  &lt;span class="nx"&gt;tags&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;"Name"&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"igw_appwriteiacdemo"&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"aws_route_table"&lt;/span&gt; &lt;span class="s2"&gt;"crtpublicappwriteiacdemo"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;vpc_id&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;aws_vpc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;vpcappwriteiacdemo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;


  &lt;span class="nx"&gt;route&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;cidr_block&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"0.0.0.0/0"&lt;/span&gt;
    &lt;span class="c1"&gt;# directs to IGW&lt;/span&gt;
    &lt;span class="nx"&gt;gateway_id&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;aws_internet_gateway&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;igwappwriteiacdemo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;


  &lt;span class="nx"&gt;tags&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;"Name"&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"custom_public_route_table_appwriteiacdemo"&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="k"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"aws_route_table_association"&lt;/span&gt; &lt;span class="s2"&gt;"racappwriteiacdemo"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;subnet_id&lt;/span&gt;      &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;aws_subnet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;publicsubnetappwriteiacdemo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;
  &lt;span class="nx"&gt;route_table_id&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;aws_route_table&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;crtpublicappwriteiacdemo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;after that, we need to specify the &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-security-groups.html"&gt;security groups&lt;/a&gt; to allow web traffic to the EC2 instance we are provisioning. for that create &lt;code&gt;securitygroups.tf&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;here we provision 4 security groups.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;allow http ingress traffic (allow inbound http traffic to EC2) : port &lt;code&gt;80&lt;/code&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;allow https ingress traffic (allow inbound https traffic to EC2) : port &lt;code&gt;443&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;allow ssh ingress traffic (allow inbound ssh traffic to EC2) : port &lt;code&gt;22&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;allow all egress traffic (allow all outbound traffic to EC2)&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;
  &lt;a href="#securitygroupstf"&gt;
  &lt;/a&gt;
  securitygroups.tf
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight terraform"&gt;&lt;code&gt;&lt;span class="k"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"aws_security_group"&lt;/span&gt; &lt;span class="s2"&gt;"sg_allow_http_ingress_appwriteicademo"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"sg_allow_http_ingress_appwriteicademo"&lt;/span&gt;
  &lt;span class="nx"&gt;vpc_id&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;aws_vpc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;vpcappwriteiacdemo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;
  &lt;span class="nx"&gt;ingress&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;description&lt;/span&gt;      &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"http"&lt;/span&gt;
    &lt;span class="nx"&gt;from_port&lt;/span&gt;        &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt;
    &lt;span class="nx"&gt;to_port&lt;/span&gt;          &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt;
    &lt;span class="nx"&gt;protocol&lt;/span&gt;         &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"tcp"&lt;/span&gt;
    &lt;span class="nx"&gt;cidr_blocks&lt;/span&gt;      &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"0.0.0.0/0"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="nx"&gt;ipv6_cidr_blocks&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"::/0"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"aws_security_group"&lt;/span&gt; &lt;span class="s2"&gt;"sg_allow_https_ingress_appwriteicademo"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"sg_allow_https_ingress_appwriteicademo"&lt;/span&gt;
  &lt;span class="nx"&gt;vpc_id&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;aws_vpc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;vpcappwriteiacdemo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;
  &lt;span class="nx"&gt;ingress&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;description&lt;/span&gt;      &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"http"&lt;/span&gt;
    &lt;span class="nx"&gt;from_port&lt;/span&gt;        &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;443&lt;/span&gt;
    &lt;span class="nx"&gt;to_port&lt;/span&gt;          &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;443&lt;/span&gt;
    &lt;span class="nx"&gt;protocol&lt;/span&gt;         &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"tcp"&lt;/span&gt;
    &lt;span class="nx"&gt;cidr_blocks&lt;/span&gt;      &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"0.0.0.0/0"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="nx"&gt;ipv6_cidr_blocks&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"::/0"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"aws_security_group"&lt;/span&gt; &lt;span class="s2"&gt;"sg_allow_ssh_ingress_appwriteicademo"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"sg_allow_ssh_ingress_appwriteicademo"&lt;/span&gt;
  &lt;span class="nx"&gt;vpc_id&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;aws_vpc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;vpcappwriteiacdemo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;
  &lt;span class="nx"&gt;ingress&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;description&lt;/span&gt;      &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"http"&lt;/span&gt;
    &lt;span class="nx"&gt;from_port&lt;/span&gt;        &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;
    &lt;span class="nx"&gt;to_port&lt;/span&gt;          &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;
    &lt;span class="nx"&gt;protocol&lt;/span&gt;         &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"tcp"&lt;/span&gt;
    &lt;span class="nx"&gt;cidr_blocks&lt;/span&gt;      &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"0.0.0.0/0"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="nx"&gt;ipv6_cidr_blocks&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"::/0"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="k"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"aws_security_group"&lt;/span&gt; &lt;span class="s2"&gt;"sg_allow_all_egress_appwriteicademo"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"sg_allow_all_egress_appwriteicademo"&lt;/span&gt;
  &lt;span class="nx"&gt;vpc_id&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;aws_vpc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;vpcappwriteiacdemo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;

  &lt;span class="nx"&gt;egress&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;from_port&lt;/span&gt;        &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="nx"&gt;to_port&lt;/span&gt;          &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="nx"&gt;protocol&lt;/span&gt;         &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"-1"&lt;/span&gt;
    &lt;span class="nx"&gt;cidr_blocks&lt;/span&gt;      &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"0.0.0.0/0"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="nx"&gt;ipv6_cidr_blocks&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"::/0"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;now we are almost there, just need to create our &lt;code&gt;main.tf&lt;/code&gt; file where we specify EC2 instance to provision.&lt;/p&gt;

&lt;p&gt;in this tutorial, we will provision &lt;code&gt;t2 small&lt;/code&gt; EC2 instance to the public subnet we created in our previous steps.&lt;br&gt;
I choose &lt;code&gt;t2 small&lt;/code&gt; instance type because the &lt;a href="https://appwrite.io/docs/installation#systemRequirements"&gt;minimum requirements&lt;/a&gt; to run Appwrite is 1 CPU core and 2GB of RAM which matches with &lt;a href="https://aws.amazon.com/ec2/instance-types/t2/"&gt;t2 small&lt;/a&gt; instance type.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AMIs.html"&gt;AMI&lt;/a&gt; we use here is &lt;code&gt;Ubuntu Server 20.04 LTS (HVM)&lt;/code&gt;.security groups we created earlier also have specified to our EC2 instance along with the subnet.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Make sure you added your key pair name in &lt;code&gt;key_name&lt;/code&gt; value.&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#maintf"&gt;
  &lt;/a&gt;
  main.tf
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight terraform"&gt;&lt;code&gt;
&lt;span class="k"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"aws_instance"&lt;/span&gt; &lt;span class="s2"&gt;"appwrite-demo"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;ami&lt;/span&gt;           &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"ami-09e67e426f25ce0d7"&lt;/span&gt; &lt;span class="c1"&gt;# ubuntu 20 image&lt;/span&gt;
  &lt;span class="nx"&gt;instance_type&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"t2.small"&lt;/span&gt;
  &lt;span class="nx"&gt;tags&lt;/span&gt;          &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Name&lt;/span&gt; &lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"appwrite-ec2"&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;key_name&lt;/span&gt;               &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"your-key-pair-name"&lt;/span&gt;
  &lt;span class="nx"&gt;vpc_security_group_ids&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;aws_security_group&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sg_allow_all_egress_appwriteicademo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;aws_security_group&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sg_allow_http_ingress_appwriteicademo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;aws_security_group&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sg_allow_https_ingress_appwriteicademo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;
  &lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="nx"&gt;subnet_id&lt;/span&gt;              &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;aws_subnet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;publicsubnetappwriteiacdemo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="c1"&gt;# log public-ip after privisioning&lt;/span&gt;
&lt;span class="k"&gt;output&lt;/span&gt; &lt;span class="s2"&gt;"public-ip"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;aws_instance&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appwrite&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;demo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;public_ip&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;now we have all the elements we need, let's apply this configuration using &lt;code&gt;terraform apply&lt;/code&gt; command.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#terraform-output"&gt;
  &lt;/a&gt;
  terraform output
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KW0IEuJ---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ex91ctm9brjffi9gxyd6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KW0IEuJ---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ex91ctm9brjffi9gxyd6.png" alt="terraform output"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;make sure you can connect to the EC2 instance using the key pair you specified before proceeding to the next steps.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#aws-network-diagram"&gt;
  &lt;/a&gt;
  aws network diagram
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HLMXmVo0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p7t286bh6ie0a2pdf7hq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HLMXmVo0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p7t286bh6ie0a2pdf7hq.png" alt="aws network diagram"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#manage-configurations-and-deploy-appwrite-using-ansible"&gt;
  &lt;/a&gt;
  Manage configurations and deploy appwrite using Ansible
&lt;/h2&gt;

&lt;p&gt;First, create an inventory file named &lt;code&gt;hosts&lt;/code&gt; and add EC2 instance public ip&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#hosts"&gt;
  &lt;/a&gt;
  hosts
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;your-ec2-public-ip-address
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;our newly provisioned EC2 instance has a fresh copy of ubuntu, so we need need to install &lt;a href="https://www.docker.com/"&gt;docker&lt;/a&gt; and &lt;a href="https://docs.docker.com/compose/"&gt;docker-compose&lt;/a&gt; to deploy appwrite.&lt;/p&gt;

&lt;p&gt;We can start by creating &lt;code&gt;main.yml&lt;/code&gt; file as the ansible playbook . in this file, we will have all the tasks we need to execute deploy appwrite.&lt;/p&gt;

&lt;p&gt;First, we will update apt packages, and install dependency packages for docker and docker-compose . &lt;/p&gt;

&lt;p&gt;Next we will install docker and docker-compose. &lt;/p&gt;

&lt;p&gt;Finally, we will copy the &lt;code&gt;docker-compose.yml&lt;/code&gt; and &lt;code&gt;.env&lt;/code&gt; files (which we will download in the next step) to EC2 instance deploy appwrite using docker-compose.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#mainyml"&gt;
  &lt;/a&gt;
  main.yml
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;become&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;yes&lt;/span&gt;
  &lt;span class="na"&gt;hosts&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;all&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;deploy-appwrite&lt;/span&gt;
  &lt;span class="na"&gt;user&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu&lt;/span&gt;
  &lt;span class="na"&gt;tasks&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Update all packages&lt;/span&gt;
      &lt;span class="na"&gt;apt&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;upgrade&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;dist&lt;/span&gt;
        &lt;span class="na"&gt;update_cache&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;yes&lt;/span&gt;
        &lt;span class="na"&gt;cache_valid_time&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;3600&lt;/span&gt;

    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Install a list of common dependancy packages&lt;/span&gt;
      &lt;span class="na"&gt;apt&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;pkg&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;apt-transport-https&lt;/span&gt;
          &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;ca-certificates&lt;/span&gt;
          &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;software-properties-common&lt;/span&gt;

    &lt;span class="c1"&gt;# install docker&lt;/span&gt;

    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;docker gpg setup&lt;/span&gt;
      &lt;span class="na"&gt;apt_key&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;https://download.docker.com/linux/ubuntu/gpg&lt;/span&gt;
        &lt;span class="na"&gt;state&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;present&lt;/span&gt;

    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;add docker apt repository&lt;/span&gt;
      &lt;span class="na"&gt;apt_repository&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;repo&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable&lt;/span&gt;
        &lt;span class="na"&gt;update_cache&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;yes&lt;/span&gt;
        &lt;span class="na"&gt;state&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;present&lt;/span&gt;

    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Update repositories cache&lt;/span&gt;
      &lt;span class="na"&gt;apt&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;update_cache&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;yes&lt;/span&gt;

    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Install docker-ce&lt;/span&gt;
      &lt;span class="na"&gt;apt&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;docker-ce&lt;/span&gt;

    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;add ubuntu to docker&lt;/span&gt;
      &lt;span class="na"&gt;user&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu&lt;/span&gt;
        &lt;span class="na"&gt;group&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;docker&lt;/span&gt;

    &lt;span class="c1"&gt;# install docker-compose&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;get platform&lt;/span&gt;
      &lt;span class="na"&gt;shell&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;uname&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;-s"&lt;/span&gt;
      &lt;span class="na"&gt;args&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;executable&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/bin/bash&lt;/span&gt;
      &lt;span class="na"&gt;register&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;platform&lt;/span&gt;

    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;get architecture&lt;/span&gt;
      &lt;span class="na"&gt;shell&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;uname&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;-m"&lt;/span&gt;
      &lt;span class="na"&gt;args&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;executable&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/bin/bash&lt;/span&gt;
      &lt;span class="na"&gt;register&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;arch&lt;/span&gt;

    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;install docker-compose&lt;/span&gt;
      &lt;span class="na"&gt;get_url&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;https://github.com/docker/compose/releases/download/1.27.4/docker-compose-{{platform.stdout}}-{{arch.stdout}}&lt;/span&gt;
        &lt;span class="na"&gt;dest&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/usr/local/bin/docker-compose&lt;/span&gt;
        &lt;span class="na"&gt;mode&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;u+x,g+x"&lt;/span&gt;

    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Install Docker SDK for Python&lt;/span&gt;
      &lt;span class="na"&gt;apt&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;pkg&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;python3&lt;/span&gt;
          &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;python3-pip&lt;/span&gt;

    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Update repositories cache&lt;/span&gt;
      &lt;span class="na"&gt;apt&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;update_cache&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;yes&lt;/span&gt;

    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Install Docker SDK for Python&lt;/span&gt;
      &lt;span class="na"&gt;pip&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;docker&amp;lt;5"&lt;/span&gt;
      &lt;span class="na"&gt;become&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;yes&lt;/span&gt;

    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Install docker-compose SDK for Python&lt;/span&gt;
      &lt;span class="na"&gt;pip&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;docker-compose"&lt;/span&gt;
      &lt;span class="na"&gt;become&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;yes&lt;/span&gt;

    &lt;span class="c1"&gt;# deploy appwrite&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Create appwrite directory&lt;/span&gt;
      &lt;span class="na"&gt;file&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/home/ubuntu/appwrite/&lt;/span&gt;
        &lt;span class="na"&gt;state&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;directory&lt;/span&gt;

    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Copy docker-compose.yml&lt;/span&gt;
      &lt;span class="na"&gt;template&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;templates/docker-compose.yml.j2&lt;/span&gt;
        &lt;span class="na"&gt;dest&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/home/ubuntu/appwrite/docker-compose.yml&lt;/span&gt;

    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Copy .env&lt;/span&gt;
      &lt;span class="na"&gt;template&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;templates/.env&lt;/span&gt;
        &lt;span class="na"&gt;dest&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/home/ubuntu/appwrite/.env&lt;/span&gt;

    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;docker compose up&lt;/span&gt;
      &lt;span class="na"&gt;docker_compose&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;project_src&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/home/ubuntu/appwrite&lt;/span&gt;
      &lt;span class="na"&gt;register&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;output&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Now create &lt;code&gt;templates&lt;/code&gt; directory and add &lt;code&gt;docker-compose.yml&lt;/code&gt; and &lt;code&gt;.env&lt;/code&gt; files to &lt;code&gt;templates&lt;/code&gt; directory from this GitHub gist.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://gist.github.com/eldadfux/977869ff6bdd7312adfd4e629ee15cc5"&gt;GitHub gist&lt;/a&gt;&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;p&gt;&lt;a href="https://appwrite.io/docs/installation#manual"&gt;Appwrite docs&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#final-folder-structure"&gt;
  &lt;/a&gt;
  final folder structure
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Gxq3KDVc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/arnonys5048t06jl0ig3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Gxq3KDVc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/arnonys5048t06jl0ig3.png" alt="folder structure"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now we have all the pieces in hand, let's run ansible playbook using the following command.&lt;/p&gt;

&lt;p&gt;In this command, we pass &lt;code&gt;main.yml&lt;/code&gt; as our playbook&lt;br&gt;
&lt;code&gt;-i&lt;/code&gt; flag to pass our inventory file &lt;code&gt;hosts&lt;/code&gt; &lt;/p&gt;

&lt;p&gt;&lt;code&gt;--private-key&lt;/code&gt; flag to pass the key pair, to ssh EC2 instance.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ansible-playbook main.yml -i hosts --private-key [path-to-your-key]&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Let's run ansible playbook and watch the magic happens 🪄.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--axzAsJ6---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8rcanjevlgpe6nfua4me.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--axzAsJ6---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8rcanjevlgpe6nfua4me.png" alt="ansible output"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After successfully running ansible playbook now you can visit your EC2 public ip address and view the appwrite signup page.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OhQFLPcz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/chiutukcr4tl7g34sekj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OhQFLPcz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/chiutukcr4tl7g34sekj.png" alt="appwrite signup page"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now we can use appwrite and start building applications.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wA75YZn2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6fooz8twipclhfgaww0c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wA75YZn2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6fooz8twipclhfgaww0c.png" alt="appwrite dashbaord"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#thanks-for-reading-till-the-end"&gt;
  &lt;/a&gt;
  Thanks for reading till the end 🙌
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#cheers"&gt;
  &lt;/a&gt;
  Cheers 🥂
&lt;/h2&gt;

</description>
      <category>appwrite</category>
      <category>ansible</category>
      <category>terraform</category>
    </item>
    <item>
      <title>Introducing ReadUse - A CSS Framework for Readable and Useable Content</title>
      <author>Toheeb Ogunbiyi</author>
      <pubDate>Thu, 07 Oct 2021 15:15:50 +0000</pubDate>
      <link>https://dev.to/toheeb/introducing-readuse-a-css-framework-for-readable-and-useable-content-10d0</link>
      <guid>https://dev.to/toheeb/introducing-readuse-a-css-framework-for-readable-and-useable-content-10d0</guid>
      <description>&lt;p&gt;Earlier, I shared my plan to design &lt;a href="https://toheeb.com"&gt;my website&lt;/a&gt; in public.&lt;/p&gt;

&lt;p&gt;The adventure is to write guides that'll design the website itself, in real time. At the end, I'll have content on web design that uses this very website as a capstone project.&lt;/p&gt;

&lt;p&gt;Wouldn't that be fun?&lt;/p&gt;




&lt;p&gt;To track how the website's visual will evolve over time, I decided to branch off those styles to a package.&lt;/p&gt;

&lt;p&gt;And to make this package useful to anyone, the styles will &lt;strong&gt;only&lt;/strong&gt; be for making contents on a webpage &lt;strong&gt;read&lt;/strong&gt;able and &lt;strong&gt;use&lt;/strong&gt;able. Hence the name: &lt;strong&gt;readuse&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Here's how I see websites. They need to be:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;readable &amp;amp; useable&lt;/li&gt;
&lt;li&gt;creative &amp;amp; unique&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ReadUse, a CSS Framework, will take care of the readability and useability part of a website. And let the designer go nuts in making their website unique to their taste. Letting your creativity shine 😂&lt;/p&gt;

&lt;p&gt;ReadUse CSS framework will contain two parts:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A drop-in stylesheet that'll will format content to aid User Experience. Using global styles which aren't bad unless misused&lt;/li&gt;
&lt;li&gt;A Layout Utility stylesheet that contains common layout components.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All these make up the Functional layer of any website. How website differs is by the decorative layer. &lt;/p&gt;

&lt;p&gt;Other CSS Frameworks do both. The result of which makes websites look similar. I want ReadUse to be Creativity-Agnostic. I hope I got that grammar combo right. You get my point anyways 😆&lt;/p&gt;

&lt;p&gt;Here's my plan:&lt;/p&gt;

&lt;p&gt;💡 I'll be using Github Issues to write and brainstorm on to-dos. A set of them makes a milestone ready for release.&lt;/p&gt;

&lt;p&gt;✍️ My site will contain detailed guides of my research on why &amp;amp; how I'm styling it&lt;/p&gt;

&lt;p&gt;⚡️ You get to see the result of the framework on this very website as well. Everytime!&lt;/p&gt;

&lt;p&gt;Right now, It has crossed its first milestone 🚀&lt;/p&gt;

&lt;p&gt;v0.1.0 release is a sanity test that says "hello world" 😂&lt;/p&gt;

&lt;p&gt;2nd milestone, v0.2.0 release, will provide well-enough styles to make articles I'll write fairly easy to read. &lt;/p&gt;

&lt;p&gt;While future version will provide better UX.&lt;/p&gt;

&lt;p&gt;I'm figuring this out on the go! It's my first open source project! And I'm using it to dive deep in CSS. It isn't ready for public use yet.&lt;/p&gt;

&lt;p&gt;💡 Ask/Teach me anything, it'll help me learn more&lt;/p&gt;

&lt;p&gt;👉 Follow &lt;a href="https://twitter.com/toheebdotcom"&gt;@toheebdotcom&lt;/a&gt; for updates. &lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--HtoedRQh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1427263758238457863/zGI9PlP9_normal.jpg" alt="2 👋 profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        2 👋
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @toheebdotcom
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Last weekend, I published readuse to &lt;a href="https://twitter.com/npmjs"&gt;@npmjs&lt;/a&gt; 🎉&lt;br&gt;&lt;br&gt;My goal is to dive deep in learning CSS for UI Design by doing.&lt;br&gt;&lt;br&gt;👉 This CSS Framework will contain ONLY styles for readable &amp;amp; useable contents. It WON'T interfere with the designer's creativity&lt;br&gt;&lt;br&gt;Learn with me or see how things go:
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      15:00 PM - 04 Oct 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1445041045146767360" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1445041045146767360" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1445041045146767360" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;
 

&lt;p&gt;🗒️ Learn more on &lt;a href="https://github.com/toheeb/readuse"&gt;Github&lt;/a&gt;&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Toheeb"&gt;
        Toheeb
      &lt;/a&gt; / &lt;a href="https://github.com/Toheeb/readuse"&gt;
        readuse
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A simple CSS framework for making Functional Designs
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
ReadUse&lt;/h1&gt;
&lt;blockquote&gt;
&lt;h2&gt;
🚧 This project is under development. 🚧
&lt;/h2&gt;
&lt;p&gt;Born out of a personal adventure. The progress, and direction of this project will be based on the Guides I write towards the styling needs of &lt;a href="https://toheeb.com" rel="nofollow"&gt;my website&lt;/a&gt;, where I use it live.&lt;/p&gt;
&lt;p&gt;I'm designing this in public. You can follow along on Twitter at &lt;a href="https://twitter.com/toheebdotcom" rel="nofollow"&gt;@toheebdotcom&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;
Why ReadUse?&lt;/h2&gt;
&lt;p&gt;When styling websites, we &lt;strong&gt;repeatedly&lt;/strong&gt; do the following to make content readable and useable.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;maintain aesthetics such as the hierarchy of spacing, font sizes, etc.&lt;/li&gt;
&lt;li&gt;lay content multidimensionally. From n-column layout to sticky footer components.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I call these Functional Styles. Every website needs them. And ReadUse abstracts these styles so you can focus on making your designs unique, through your awesome creativity!&lt;/p&gt;
&lt;h2&gt;
How ReadUse compares to other CSS Frameworks?&lt;/h2&gt;
&lt;p&gt;Here's how it compares to Reset stylesheets, Component, Utility or Classless CSS frameworks:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Instead of using reset stylesheets, you can enjoy having aesthetic…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/Toheeb/readuse"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;🌟 Star the repo if you like the adventure ✌️&lt;/p&gt;

</description>
      <category>showdev</category>
      <category>css</category>
      <category>webdev</category>
      <category>saas</category>
    </item>
    <item>
      <title>5 Quizz explained in Javascript #1</title>
      <author>CodeOz</author>
      <pubDate>Thu, 07 Oct 2021 14:58:21 +0000</pubDate>
      <link>https://dev.to/codeoz/5-quizz-explained-in-javascript-1-59hn</link>
      <guid>https://dev.to/codeoz/5-quizz-explained-in-javascript-1-59hn</guid>
      <description>&lt;p&gt;Welcome to the first javascript quizz!&lt;/p&gt;

&lt;p&gt;You can answer to the question and check the response with the explication!&lt;/p&gt;

&lt;p&gt;Good luck!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1"&gt;
  &lt;/a&gt;
  1
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;myself&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;code__oz&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;skills&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ts&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vuejs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;nodejs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="nx"&gt;getName&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;getMySkills&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;skills&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;myself&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getName&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;myself&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getMySkills&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What is the output? 👇&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A) &lt;code&gt;code__oz&lt;/code&gt; and &lt;code&gt;['js', 'ts', 'vuejs', 'nodejs']&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;B) &lt;code&gt;undefined&lt;/code&gt; and &lt;code&gt;undefined&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;C) &lt;code&gt;code__oz&lt;/code&gt; and &lt;code&gt;undefined&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;D) &lt;code&gt;undefined&lt;/code&gt; and &lt;code&gt;['js', 'ts', 'vuejs', 'nodejs']&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;.&lt;br&gt;
..&lt;br&gt;
...&lt;br&gt;
....&lt;br&gt;
.....&lt;br&gt;
......&lt;br&gt;
.......&lt;br&gt;
.......&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;C&lt;/strong&gt; → We have &lt;code&gt;undefined&lt;/code&gt; value since we are using &lt;code&gt;arrow function&lt;/code&gt; and &lt;code&gt;this&lt;/code&gt; in the same context, so the &lt;code&gt;this&lt;/code&gt; keyword refers to its current &lt;strong&gt;surrounding scope&lt;/strong&gt;, unlike regular functions! In a browser context, this refer to window object!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2"&gt;
  &lt;/a&gt;
  2
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;toto&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;tutu&lt;/span&gt;

&lt;span class="nx"&gt;tutu&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;toto&lt;/span&gt;
&lt;span class="nx"&gt;toto&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Bye&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;tutu&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What is the output? 👇&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A) &lt;code&gt;undefined&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;B) &lt;code&gt;Bye&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;C) &lt;code&gt;Hello&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;D) &lt;code&gt;ReferenceError&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;.&lt;br&gt;
..&lt;br&gt;
...&lt;br&gt;
....&lt;br&gt;
.....&lt;br&gt;
......&lt;br&gt;
.......&lt;br&gt;
.......&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;B&lt;/strong&gt; → In JavaScript, all objects &lt;strong&gt;interact&lt;/strong&gt; by &lt;strong&gt;reference&lt;/strong&gt; when setting them equal to each other. So in this example &lt;code&gt;toto&lt;/code&gt; and &lt;code&gt;tutu&lt;/code&gt; &lt;strong&gt;share the same reference&lt;/strong&gt; so if you change value from one, you will change the &lt;strong&gt;shared reference&lt;/strong&gt; and you will &lt;code&gt;indirectly&lt;/code&gt; change the value of the other variable.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3"&gt;
  &lt;/a&gt;
  3
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What is the output? 👇&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A) &lt;code&gt;1 1 2&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;B) &lt;code&gt;1 2 2&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;C) &lt;code&gt;0 1 2&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;D) &lt;code&gt;0 2 2&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;.&lt;br&gt;
..&lt;br&gt;
...&lt;br&gt;
....&lt;br&gt;
.....&lt;br&gt;
......&lt;br&gt;
.......&lt;br&gt;
.......&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;D&lt;/strong&gt; -&amp;gt; The &lt;strong&gt;postfix&lt;/strong&gt; unary operator &lt;code&gt;++&lt;/code&gt;:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Returns the value (this returns &lt;code&gt;0&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Increments the value (number is now &lt;code&gt;1&lt;/code&gt;)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The &lt;strong&gt;prefix&lt;/strong&gt; unary operator &lt;code&gt;++&lt;/code&gt;:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Increments the value (number is now &lt;code&gt;2&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Returns the value (this returns &lt;code&gt;2&lt;/code&gt;)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This returns &lt;code&gt;0 2 2&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4"&gt;
  &lt;/a&gt;
  4
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;5&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What is the output? 👇&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A) &lt;code&gt;TypeError&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;B) &lt;code&gt;NaN&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;C) &lt;code&gt;"25"&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;D) &lt;code&gt;7&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;.&lt;br&gt;
..&lt;br&gt;
...&lt;br&gt;
....&lt;br&gt;
.....&lt;br&gt;
......&lt;br&gt;
.......&lt;br&gt;
.......&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;C&lt;/strong&gt; → JavaScript &lt;strong&gt;converts&lt;/strong&gt; the number &lt;code&gt;2&lt;/code&gt; into a &lt;code&gt;string&lt;/code&gt;. It's because during the addition of a &lt;code&gt;numeric type (2)&lt;/code&gt; and a &lt;code&gt;string type ('5')&lt;/code&gt;, the number is &lt;code&gt;treated like a string&lt;/code&gt; ! So we have '2' + '5' → '25'&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5"&gt;
  &lt;/a&gt;
  5
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;setInterval&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hey !&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;5000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What does the &lt;code&gt;setInterval&lt;/code&gt; method return in the browser? 👇&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A) a &lt;code&gt;unique id&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;B) the &lt;code&gt;amount of milliseconds specified&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;C) the &lt;code&gt;passed function&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;D) &lt;code&gt;undefined&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What is the output? 👇&lt;/p&gt;

&lt;p&gt;.&lt;br&gt;
..&lt;br&gt;
...&lt;br&gt;
....&lt;br&gt;
.....&lt;br&gt;
......&lt;br&gt;
.......&lt;br&gt;
.......&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A&lt;/strong&gt; -&amp;gt; It returns a &lt;code&gt;unique id&lt;/code&gt;. This id can be used to clear that interval with the &lt;code&gt;clearInterval() function&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Tell me your score in comment! 👨‍🏫&lt;/p&gt;




&lt;p&gt;I hope you like this reading!&lt;/p&gt;

&lt;p&gt;🎁 You can get my new book &lt;code&gt;Underrated skills in javascript, make the difference&lt;/code&gt; for FREE if you follow me on &lt;a href="https://twitter.com/code__oz"&gt;Twitter&lt;/a&gt; and MP me 😁&lt;/p&gt;

&lt;p&gt;Or get it &lt;a href="https://codeoz.gumroad.com/l/RXLYp"&gt;HERE&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🎁 &lt;a href="https://www.getrevue.co/profile/code__oz"&gt;MY NEWSLETTER&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;☕️ You can &lt;a href="https://www.buymeacoffee.com/CodeoZ"&gt;SUPPORT MY WORKS&lt;/a&gt; 🙏&lt;/p&gt;

&lt;p&gt;🏃‍♂️ You can follow me on 👇&lt;/p&gt;

&lt;p&gt;🕊 Twitter : &lt;a href="https://twitter.com/code__oz"&gt;https://twitter.com/code__oz&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;👨‍💻 Github: &lt;a href="https://github.com/Code-Oz"&gt;https://github.com/Code-Oz&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And you can mark 🔖 this article!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>The Best UX Design Trends for Fintech 2021</title>
      <author>Explain Ninja</author>
      <pubDate>Thu, 07 Oct 2021 14:53:31 +0000</pubDate>
      <link>https://dev.to/explain_ninja/the-best-ux-design-trends-for-fintech-2021-5de8</link>
      <guid>https://dev.to/explain_ninja/the-best-ux-design-trends-for-fintech-2021-5de8</guid>
      <description>&lt;p&gt;You often need to create great interfaces of high quality for your Fintech startup or your graphic design for digital business transformation in 2021, and you do not know where to start. Look through the significant industry trends to make the final decision.  &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;The beauty is that the annual trend formation makes it possible to reinvent your business's design completely. And given the challenging 2020, the trends of 2021 are a breath of fresh air for everyone.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt; Five useful UX trends to look for in 2021&lt;/h2&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Now the visual component of any business is no less important for promotion than its content and you can’t simply ignore it. To know which web design trends of 2021 will help you modernize your brand, grab user attention, and increase conversions, look through these UX trends for good.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h3&gt;1.      Personalized interfaces&lt;/h3&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;The ability to personalize the interface and make it individual has come to the taste of many, especially in mobile applications. Apple eagerly picked up this trend, creating widgets in different sizes and with other content in the latest iOS 14 update. This also includes familiar "dark" and "light" themes.&lt;/p&gt;

&lt;p&gt;In addition, polls are also may be a part of the user's choice and personalized interfaces - they enthrall visitors to the page, ask their opinion, and thus personalize the product or service. If you apply them in your website design – you win.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h3&gt;2.      Unusual screen loading&lt;/h3&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Their task is simple - to interest, distract, delay, make people stop looking, etc. It is recommended that you pay attention to the loading screen that may appear when navigating between pages.&lt;/p&gt;

&lt;p&gt;The so-called skeletal loading screens are trendy today, in other words, empty pages that are gradually filled with information through the user's interaction with them or following a given algorithm.&lt;/p&gt;

&lt;p&gt; For example, information blocks may gradually emerge one after another at intervals of several seconds or appear only after the next touch or click of the user. And, of course, why not use funny animated screens that show the user how long to wait or entertain them instead of pauses.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h3&gt;3.      Bright colors&lt;/h3&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Design trends are multiplying, competition is increasing, and users are becoming more and more selective. Trying to stand out, designers experiment with colors as well - in recent months, bright, very bright interfaces, backgrounds and illustrations are increasingly popular.&lt;/p&gt;

&lt;p&gt;Benefits of using bright colors in UX / UI design:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Increase the beauty of the resource;&lt;/li&gt;
&lt;li&gt;They influence the mood of users, form a unique positive and therefore attractive atmosphere;&lt;/li&gt;
&lt;li&gt;Form strong associations with a brand, product or service;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It distinguishes promotional calls to action and key actions, thus increasing the conversion and profitability of the business.&lt;/p&gt;

&lt;p&gt;Due to the brightness and catchiness, the interface may also suffer from usability issues. The necessary elements cannot be found in a riot of colors and decrease the readability. &lt;/p&gt;

&lt;p&gt;Therefore, it is essential to carefully select a palette, keep a balance between creativity and convenience, and carefully think over the site or application's structure. And, of course, apply the theory of color - the color wheel of contrasts and a thorough analysis of the best examples in this style will come in handy.&lt;/p&gt;

&lt;h3&gt; &lt;/h3&gt;

&lt;h3&gt;4.      Blurry, colorful backgrounds&lt;/h3&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Bright burry or the so-called blur in the background is another trend in 2021. It is remarkable because it creates a catchy yet comfortable effect for the eyes, which favorably emphasizes objects in the foreground. A blurry bright background is a beneficial marketing technique.&lt;/p&gt;

&lt;p&gt;3 key benefit of blurred backgrounds:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Blur in the background brings focus to the foreground where the object or text is. They become more noticeable in the eyes of the user and are better remembered in all details;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A blurry picture is universal - it can be used as the basis for the visual design of the interface, as well as a corporate identity for a brand can be built using it;&lt;/li&gt;
&lt;li&gt;Blur works well with almost any content - photo, image, video, text, animation. The main thing is to take into account the rules of contrast and color combinations.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;By the way, this trend is often combined with &lt;a href="https://uxdesign.cc/glassmorphism-in-user-interfaces-1f39bb1308c9"&gt;glassformism&lt;/a&gt; - the frosted glass effect gives an excellent blur. The popularity of such backgrounds spurred the release of &lt;a href="https://www.apple.com/macos/big-sur/"&gt;Apple's macOS Big Sur system&lt;/a&gt;, already mentioned above, at the end of 2020.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h3&gt;5.      Authentic images&lt;/h3&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;The trend that transferred from web design to UX is using authentic images. The point is that The Black Lives Matter movement represented a watershed moment in a global protest. Hopefully, there is just the beginning of a reassessment of systemic biases that will continue to be felt across all the industries in 2021, including design. Nevertheless, it’s still in vogue and may be applied whenever suitable.&lt;/p&gt;

&lt;h2&gt; &lt;/h2&gt;

&lt;h2&gt;Why is it important to consider trends in UX / UI design?&lt;/h2&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;em&gt;'Every $ 1 invested in user interface design returns $ 100 to the business.'&lt;/em&gt; (Forrester research)&lt;/p&gt;

&lt;p&gt;This equates to a return of 9,900%. Ignoring the development of UX / UI design is like letting the process of user interaction with your resource down. This means that the efficiency of the site or application will noticeably decrease, which will inevitably lead to loss of profit and, possibly, to the death of the business.&lt;/p&gt;

&lt;p&gt;To avoid sad prospects, it is important to be aware of the latest trends in interface design and user experience, and be able to quickly put into practice what will be useful for you. Want to know which web design trends of 2021 will help you modernize your brand and capture the peak of user attention? – Feel free to &lt;a href="https://fireart.studio/"&gt;ask design experts&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;To sum up&lt;/h2&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Modern design trends are not just a tribute to fashion but an absolute necessity that may provide your business with effective promotion &amp;amp; guarantee growth in the most turbulent times. We hope you are now full of inspiration to build your website, mobile application, or improve existing business with great design solutions. Use them to increase user interaction and attract even more new customers to your products and services. We wish you successful design and development at all times.&lt;/p&gt;

</description>
      <category>java</category>
      <category>tutorial</category>
      <category>design</category>
      <category>devops</category>
    </item>
    <item>
      <title>What are the best languages for cloud Computing?</title>
      <author>Hazrat Ali</author>
      <pubDate>Thu, 07 Oct 2021 14:51:46 +0000</pubDate>
      <link>https://dev.to/hazratalibit/what-are-the-best-languages-for-cloud-computing-32gb</link>
      <guid>https://dev.to/hazratalibit/what-are-the-best-languages-for-cloud-computing-32gb</guid>
      <description>&lt;p&gt;There are tons of &lt;a href="https://www.alixaprodev.com/2021/10/best-programming-languages-for-cloud.html"&gt;&lt;strong&gt;Computer programming languages that can be used for Cloud Computing&lt;/strong&gt;&lt;/a&gt; and depends on the Cloud Platform. Some Platform Like Google Cloud, Amazon Cloud, and IBM Cloud uses multiple Programming languages which can help us access their cloud platform. Other platforms may be using one or two.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#list-of-the-programming-languages-used-for-cloud-computing"&gt;
  &lt;/a&gt;
  List of the Programming languages used for Cloud Computing
&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;Java &lt;/li&gt;
&lt;li&gt;Python&lt;/li&gt;
&lt;li&gt;Javascript&lt;/li&gt;
&lt;li&gt;C#&lt;/li&gt;
&lt;li&gt;GoLang&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;These Programming languages are the most popular Programming languages for Cloud computing. But it highly depends on the platform as well.&lt;br&gt;
Learn more about &lt;a href="https://www.alixaprodev.com/2021/10/best-programming-languages-for-cloud.html"&gt;which Programming language should be good for Cloud Computing?&lt;/a&gt; &lt;/p&gt;

</description>
      <category>programming</category>
      <category>python</category>
      <category>javascript</category>
      <category>java</category>
    </item>
    <item>
      <title>The OGC standards that power the OS Data Hub</title>
      <author>Charley Glynn</author>
      <pubDate>Thu, 07 Oct 2021 14:37:55 +0000</pubDate>
      <link>https://dev.to/charleyglynn/the-ogc-standards-that-power-the-os-data-hub-4lm</link>
      <guid>https://dev.to/charleyglynn/the-ogc-standards-that-power-the-os-data-hub-4lm</guid>
      <description>&lt;p&gt;The &lt;a href="https://osdatahub.os.uk/?utm_source=devto&amp;amp;utm_campaign=devrel&amp;amp;utm_content=ogc-standards"&gt;OS Data Hub&lt;/a&gt; makes geospatial data available in a variety of formats, including API access and file downloads. These formats include standards published by the &lt;a href="https://www.ogc.org/"&gt;Open Geospatial Consortium (OGC)&lt;/a&gt;, an international consortium of more than 530 businesses, government agencies, research organizations, and universities, driven to advance geospatial information technology at all levels of data handling, processing, sharing, and analytics.&lt;/p&gt;

&lt;p&gt;In this post we identify and describe formats and elaborate on some of the advantages of &lt;a href="https://www.ordnancesurvey.co.uk/newsroom/insights/why-do-geospatial-data-standards-matter?utm_source=devto&amp;amp;utm_campaign=devrel&amp;amp;utm_content=ogc-standards"&gt;using standards to share geospatial information&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you are registered to the OS Map &amp;amp; Hack hackathon and want to extend your practical knowledge about the OGC standards supported in the OS Data Hub, you are welcome to attend the technical workshop on that event: “Accessing data using OGC Standards: a quick start guide”.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Show me the APIs!&lt;/strong&gt;&lt;br&gt;
If you navigate to the &lt;a href="https://osdatahub.os.uk/products?utm_source=devto&amp;amp;utm_campaign=devrel&amp;amp;utm_content=ogc-standards"&gt;OS Data Hub API dashboard&lt;/a&gt;, you will see a list of the APIs which you can add to your projects.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WxAa3QR4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/426cs4fey9k40maze5bl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WxAa3QR4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/426cs4fey9k40maze5bl.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;os-apis-dashboard&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The &lt;a href="https://osdatahub.os.uk/docs/wfs/overview?utm_source=devto&amp;amp;utm_campaign=devrel&amp;amp;utm_content=ogc-standards"&gt;OS Features API&lt;/a&gt; gives you direct access to the detailed geometries and rich attribution of individual &lt;a href="https://en.wikipedia.org/wiki/Geographical_feature"&gt;features&lt;/a&gt;. It is based on the OGC &lt;a href="https://en.wikipedia.org/wiki/Web_Feature_Service"&gt;Web Feature Service&lt;/a&gt; (WFS) standard. You can call it to access vector data - e.g. buildings, roads, rivers, hospitals, playing fields, greenspaces - basically anything which is represented as a point, a line, a polygon or a combination of any of the above.&lt;/p&gt;

&lt;p&gt;The &lt;a href="https://osdatahub.os.uk/docs/wmts/overview?utm_source=devto&amp;amp;utm_campaign=devrel&amp;amp;utm_content=ogc-standards"&gt;OS Maps API&lt;/a&gt; serves pre-rendered raster tiles, available in different projections. It is based on the &lt;a href="https://en.wikipedia.org/wiki/Web_Map_Tile_Service"&gt;OGC Web Map Tile Service&lt;/a&gt; (WMTS) standard. You can call it to access raster data - e.g. OS MasterMap, Leisure map - and it lets you integrate tiled maps into your applications.&lt;/p&gt;

&lt;p&gt;Both, WFS and WMTS, are mature and well established OGC standards. This means they have been used for a while, and its current state is the result of an extended discussion, taking into account a lot of different use cases.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Not only APIs...&lt;/strong&gt;&lt;br&gt;
Other than programmatic access, OS also makes (open) data available for manual download in the &lt;a href="https://osdatahub.os.uk/downloads/open?_ga=2.83225686.1722133459.1633615564-1648783599.1627306224&amp;amp;utm_source=devto&amp;amp;utm_campaign=devrel&amp;amp;utm_content=ogc-standards"&gt;OS OpenData Downloads&lt;/a&gt; section. These downloads are actually free and do not require registration.&lt;/p&gt;

&lt;p&gt;Among other formats, OS publishes data using the OGC GeoTIFF and GeoPackage formats.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/GeoTIFF"&gt;GeoTIFF&lt;/a&gt; is an extension of the &lt;a href="https://en.wikipedia.org/wiki/TIFF"&gt;TIFF&lt;/a&gt; format, which allows georeferencing information (e.g.: projections, coordinate reference systems) to be embedded within a TIFF file. It can be used to exchange georeferenced imagery.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.geopackage.org/"&gt;GeoPackage&lt;/a&gt; is a database container, which enables storing different types of spatial and non spatial data, and can be easily extended to support other use cases. Currently is based on an &lt;a href="https://www.sqlite.org/index.html"&gt;SQLite&lt;/a&gt; database, although there are plans to abstract it from a specific database in the future.&lt;/p&gt;

&lt;p&gt;Find out how OS are rolling out more of these &lt;a href="https://www.ordnancesurvey.co.uk/newsroom/blog/new-data-formats-coming-this-year?utm_source=devto&amp;amp;utm_campaign=devrel&amp;amp;utm_content=ogc-standards"&gt;formats for Premium products&lt;/a&gt; too.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Why should I use these formats?&lt;/strong&gt;&lt;br&gt;
By using OGC formats you can tap into a number of existing implementations which are able to understand and interact with these standards, including libraries/SDKs and desktop clients.&lt;/p&gt;

&lt;p&gt;For instance if you want to integrate a OS map into your web application, you can rely on libraries such as LeafLet or OpenLayers to pull that data with a simple call. Likewise, you can open your GeoTiff or GeoPackage files within QGIS, ArcGIS or &lt;a href="https://en.wikipedia.org/wiki/GDAL#Software_using_GDAL/OGR"&gt;any other application that uses the GDAL/OGR library&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Another strong argument is that if you write an application which retrieves data from the OS Data Hub using any of these formats, you could easily reuse your code to access data in a different server which also publishes data according to these standards (for instance the &lt;a href="https://livingatlas.arcgis.com/en/browse/#d=2"&gt;Esri Living Atlas&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What’s new in OGC?&lt;/strong&gt;&lt;br&gt;
The first version of the WFS standard was written almost twenty years ago. The web is a very different place from what it was back then, and practices such as the use of &lt;a href="https://en.wikipedia.org/wiki/Representational_state_transfer"&gt;REST&lt;/a&gt; architectures, &lt;a href="https://www.json.org/json-en.html"&gt;JSON&lt;/a&gt; encodings or &lt;a href="https://en.wikipedia.org/wiki/Open_API"&gt;OpenAPI&lt;/a&gt; descriptions are now mainstream among web developers. OGC is developing a &lt;a href="https://ogcapi.ogc.org/"&gt;new family of standards&lt;/a&gt;, which takes advantage of these modern web practices, to create standards which are easier to use and deploy. We will write more about these OGC APIs in another blog post, so stay tuned if you want to learn more about this newer generation of OGC standards.&lt;/p&gt;

</description>
      <category>ordnancesurvey</category>
      <category>webdev</category>
      <category>programming</category>
      <category>geospatial</category>
    </item>
  </channel>
</rss>
