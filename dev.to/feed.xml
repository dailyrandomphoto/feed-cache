<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How does the promotion of posts work on DEV?</title>
      <author>InHuOfficial</author>
      <pubDate>Tue, 03 Aug 2021 06:29:49 +0000</pubDate>
      <link>https://dev.to/inhuofficial/how-does-the-promotion-of-posts-work-on-dev-39c</link>
      <guid>https://dev.to/inhuofficial/how-does-the-promotion-of-posts-work-on-dev-39c</guid>
      <description>&lt;p&gt;I have just been having a conversation on a post about how DEV decides what content to promote, so I thought I would ask the question instead of speculating!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What dictates what is promoted on social media?&lt;/li&gt;
&lt;li&gt;What dictates top comments?&lt;/li&gt;
&lt;li&gt;What dictates a top 7 post?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I know they say in the top 7s that it is based on traffic or engagement but that doesn't appear to be the case (although I can't see traffic figures to be fair).&lt;/p&gt;

&lt;p&gt;They do seem very much human driven (which is fine but then I am asking how are they chosen)?&lt;/p&gt;

&lt;p&gt;Just wondered how it all worked and what is actually looked at as the criteria? &lt;/p&gt;

&lt;p&gt;Is there a bit of luck involved as to which posts the DEV team happen to read, as I understand you can't possibly read them all?&lt;/p&gt;

&lt;p&gt;I am intrigued so I can learn how to &lt;del&gt;game the system&lt;/del&gt; &lt;strong&gt;write better content that gets promoted&lt;/strong&gt; üòâü§£&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#personal-motivation"&gt;
  &lt;/a&gt;
  Personal motivation
&lt;/h2&gt;

&lt;p&gt;This question was sparked as I released a monster article (one that I believe is truly great quality...for once I didn‚Äôt shit post üòú!) that got great engagement but low views. (currently: 224 reactions to 2500 views)&lt;/p&gt;

&lt;p&gt;As an experiment I deliberately wrote a "low effort" post that I released at one of the worst possible times that was designed to be a click magnet / get noticed and....the "low effort" one got promoted! (currently: 55 reactions to 4400 views)&lt;/p&gt;

&lt;p&gt;Not complaining about getting a shout out (thanks DEV) it just seems a bit broken that I can predict what is likely to get shared based on the tags and title rather than the quality of the post!&lt;/p&gt;

&lt;p&gt;I know that increasing visibility of quality content is something the DEV team is working on, so perhaps a final question is how you find that quality content in the first place (suggestions are: "reactions to views" ratio seems like a decent starting place, maybe "number of comments to views" too?)? &lt;/p&gt;

&lt;p&gt;Anyway just asking the question, and from a purely selfish standpoint (until people get sick of me promoting it!) here is the article I believe was "promotion worthy" and the one deliberately designed to get promoted!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-high-effort-post"&gt;
  &lt;/a&gt;
  the "high effort" post
&lt;/h3&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/inhuofficial" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VQXAgM3l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--GddQJU2N--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_66%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/551686/52e35d4c-a986-401b-9bca-6ace4c8947d1.gif" alt="inhuofficial"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/inhuofficial/101-digital-accessibility-tips-and-tricks-4728" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;101 Digital Accessibility tips and tricks&lt;/h2&gt;
      &lt;h3&gt;InHuOfficial „Éª Jul 30 „Éª 68 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#a11y&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#the-low-effort-post"&gt;
  &lt;/a&gt;
  the "low effort" post
&lt;/h3&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/inhuofficial" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VQXAgM3l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--GddQJU2N--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_66%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/551686/52e35d4c-a986-401b-9bca-6ace4c8947d1.gif" alt="inhuofficial"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/inhuofficial/3-general-productivity-tools-you-should-be-using-that-you-possibly-haven-t-heard-of-1h9j" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;3 general üöÄ Productivity üöÄ tools  you should be using that you possibly haven't heard of ‚Åâ&lt;/h2&gt;
      &lt;h3&gt;InHuOfficial „Éª Aug 1 „Éª 6 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#productivity&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#discuss&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;





&lt;p&gt;Thanks in advance for any clarity on this!&lt;/p&gt;

</description>
      <category>meta</category>
      <category>discuss</category>
    </item>
    <item>
      <title>What is StrictMode in React</title>
      <author>Shubham Khatri</author>
      <pubDate>Tue, 03 Aug 2021 06:18:52 +0000</pubDate>
      <link>https://dev.to/shubhamreacts/what-is-strictmode-in-react-4if</link>
      <guid>https://dev.to/shubhamreacts/what-is-strictmode-in-react-4if</guid>
      <description>&lt;p&gt;&lt;em&gt;As we gain more experience, we constantly evolve our coding practices and design patterns. This is the case with React too.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;React has also gone through many transitions, and as it has progressed, certain practices that were believed to be good in the past are no longer fit for the future roadmap. &lt;/p&gt;

&lt;p&gt;One significant change happened with the release of v16 where it went through a re-write onto React Fiber‚Äôs architecture. The major focus was on scheduling (i.e. deciding when a piece of work should be performed while keeping in mind the priorities of different tasks such as animations, UI updates, and so on).&lt;/p&gt;

&lt;p&gt;At about the same time, a new Context API was added in React.&lt;/p&gt;

&lt;p&gt;Also, intending to provide Concurrent Mode in future versions where the rendering phase is split into multiple parts, a lot of change has come about. The start of it saw the introduction of React Hooks, deprecation of certain lifecycle methods, and more.&lt;/p&gt;

&lt;p&gt;This article will look at all the deprecated patterns that &lt;code&gt;StrictMode&lt;/code&gt; in React helps us identify.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-reactstrictmode-and-how-can-we-use-it"&gt;
  &lt;/a&gt;
  What Is React.StrictMode and How Can We Use It?
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;React.StrictMode&lt;/code&gt; is a tool for highlighting potential problems in an application. It works by rendering it as a component encapsulating either part of or your entire application. &lt;code&gt;StrictMode&lt;/code&gt; does not render any visible element in the DOM but enables certain checks and provides warnings in development mode.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: &lt;code&gt;StrictMode&lt;/code&gt; doesn‚Äôt run any checks or show warnings in production mode.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;You can enable &lt;code&gt;React.StrictMode&lt;/code&gt; for your entire application like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;ReactDOM&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-dom&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./App&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;ReactDOM&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
   &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;StrictMode&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
   &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;StrictMode&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;app&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can similarly enable it in part of your application by wrapping it with &lt;code&gt;&amp;lt;React.StrictMode&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The following functionalities are supported in &lt;code&gt;StrictMode&lt;/code&gt; as of v17 of React:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Identifying legacy string refs.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Detecting deprecated &lt;code&gt;findDOMNode&lt;/code&gt; method.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Detecting use of legacy Context API.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Detecting unsafe lifecycle methods that have been deprecated by React.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Detecting unexpected side effects in React components.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#1-identifying-legacy-string-refs"&gt;
  &lt;/a&gt;
  1. Identifying Legacy String refs
&lt;/h3&gt;

&lt;p&gt;Refs in the initial versions of React were assigned using strings. However, there were many problems associated with it, as pointed out by Dan Abramov in &lt;a href="https://github.com/facebook/react/pull/8333#issuecomment-271648615"&gt;this Github Issue&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;‚ÄúIt requires that React keeps track of currently rendering component (since it can‚Äôt guess &lt;code&gt;this&lt;/code&gt;). This makes React a bit slower.&lt;/p&gt;

&lt;p&gt;It doesn‚Äôt work as most people would expect with the ‚Äúrender callback‚Äù pattern (e.g. &lt;code&gt;&amp;lt;List renderRow={this.renderRow} /&amp;gt;&lt;/code&gt;) because the ref would get placed on &lt;code&gt;List&lt;/code&gt; for the above reason.&lt;/p&gt;

&lt;p&gt;It is not composable, i.e. if a library puts a ref on the passed child, the user can‚Äôt put another ref on it. Callback refs are perfectly composable.‚Äù&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For these reasons and many others, such as the issues with typing refs in TypeScript where they need to be casted, better alternatives were introduced for class components:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Callback refs&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;React.createRef&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#2-detecting-deprecated-raw-finddomnode-endraw-method"&gt;
  &lt;/a&gt;
  2. Detecting deprecated &lt;code&gt;findDOMNode&lt;/code&gt; method
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;ReactDOM.findDOMNode&lt;/code&gt; method was previously used to get the DOM node given the class instance. The usage of &lt;code&gt;findDOMNode&lt;/code&gt; can always be avoided by adding a ref directly to the DOM element instead of the class instance.&lt;/p&gt;

&lt;p&gt;There are two main problems with the &lt;code&gt;findDOMNode&lt;/code&gt; API:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;This would only return the first child in a class component instance. However, with the introduction of Fragments in v16, you could return multiple elements from a component instance and this could cause a problem, as you may want to target a wrapper of all the elements or a specific element from the list of elements returned.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The &lt;code&gt;findDOMNode&lt;/code&gt; API was request-only (i.e. it would evaluate and return the result when it was called). If, for instance, the rendered element is conditionally changed in the child, the parent may not know about it.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The alternative to &lt;code&gt;findDOMNode&lt;/code&gt; is to use &lt;code&gt;React.forwardRef&lt;/code&gt; and pass on the ref to the desired element in the child or to pass the ref by a separate name (such as &lt;code&gt;innerRef&lt;/code&gt;) and use it from props in the child component to set a ref on the desired element.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#3-legacy-context-api"&gt;
  &lt;/a&gt;
  3. Legacy Context API
&lt;/h3&gt;

&lt;p&gt;Version 16.3 of React introduced a new Context API. Before this, the old error-prone API was in use and would cause the consumers to not update if a component somewhere in the parent hierarchy stopped re-renders of the children element by implementing &lt;code&gt;shouldComponentUpdate&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Even though React continues to support the old API in v16.x, &lt;code&gt;StrictMode&lt;/code&gt; will point out the usages of the old Context API by showing warnings so that these can be moved to the latest version.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#4-detecting-unsafe-lifecycle-methods"&gt;
  &lt;/a&gt;
  4. Detecting unsafe lifecycle methods
&lt;/h3&gt;

&lt;p&gt;In v16.3.0 of React, some breakthrough changes were made to the React APIs. One of those changes was the deprecation of lifecycle methods like &lt;code&gt;componentWillMount&lt;/code&gt;, &lt;code&gt;componentWillReceiveProps&lt;/code&gt;, and &lt;code&gt;componentWillUpdate&lt;/code&gt;. New lifecycles were also added, such as &lt;code&gt;getDerivedStateFromProps&lt;/code&gt; and &lt;code&gt;getSnapShotBeforeUpdate&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Although these lifecycle methods continue to be available in further versions of React and have been renamed with a prefix &lt;code&gt;UNSAFE_&lt;/code&gt; added to them, React may remove them altogether in future versions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Why were these lifecycle methods deprecated?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To understand this, we must first know that React typically works in two phases:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Render phase:&lt;/strong&gt; During this phase, React checks what changes need to be made to the DOM. React invokes a &lt;code&gt;render&lt;/code&gt; function during this phase and compares the result with the previous render. The render phase lifecycles included &lt;code&gt;componentWillMount&lt;/code&gt;, &lt;code&gt;componentWillReceiveProps&lt;/code&gt;, &lt;code&gt;componentWillUpdate&lt;/code&gt;, and &lt;code&gt;render&lt;/code&gt; .&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Commit phase:&lt;/strong&gt; This is the phase during which React actually commits the changes to the DOM and invokes commit phase lifecycles such as &lt;code&gt;componentDidMount&lt;/code&gt; and &lt;code&gt;componentDidUpdate&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The commit phase is fast, but the render phase can be slow. To optimize it with the vision of Concurrent Mode, React decided to break the rendering into pieces and pause and resume work to avoid blocking the browser.&lt;/p&gt;

&lt;p&gt;So when they do this, the render phase lifecycles could be called multiple times, and if these contain side effects or incorrect practices, they may cause the application to behave inconsistently. Also, some of these lifecycles encourage bad developer practices. These include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;componentWillMount&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;componentWillReceiveProps&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;componentWillUpdate&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let us look at a few of these practices.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#calling-setstate-in-componentwillmount"&gt;
  &lt;/a&gt;
  Calling setState in componentWillMount
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Incorrect&lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{};&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;componentWillMount&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;selectedTheme&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;defaultTheme&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="c1"&gt;// Rest of code&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Correct approach&lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;selectedTheme&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;defaultTheme&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="c1"&gt;// Rest of code&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see in the snippet above, &lt;code&gt;componentWillMount&lt;/code&gt; was used to set a state before the initial render, but that can easily be refactored by setting the initial state in the constructor or with &lt;code&gt;state&lt;/code&gt; as a class property.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#async-request-in-componentwillmount"&gt;
  &lt;/a&gt;
  Async request in componentWillMount
&lt;/h4&gt;

&lt;p&gt;Having an async fetch request in &lt;code&gt;componentWillMount&lt;/code&gt; is problematic for both server-side rendering as well as the upcoming Concurrent Mode. With server-side rendering, the data fetched in &lt;code&gt;componentWillMount&lt;/code&gt; will not be used. With async rendering, the fetch request may go multiple times.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Incorrect way to fetchData&lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;ExampleComponent&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;componentWillMount&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;fetchData&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="c1"&gt;// Rest of the code&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Correct way to fetchData and update state&lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;ExampleComponent&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt;
     &lt;span class="na"&gt;isLoading&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;componentDidMount&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;fetchData&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;isLoading&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="c1"&gt;// Rest of the code&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There is a common misconception that any data fetched inside &lt;code&gt;componentWillMount&lt;/code&gt; will be available before the initial render. This is not true and you should use a loading state to avoid using the data in the initial render and make an API call to fetch data in &lt;code&gt;componentDidMount&lt;/code&gt;.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#adding-subscriptions-or-listeners-in-componentwillmount"&gt;
  &lt;/a&gt;
  Adding subscriptions or listeners in componentWillMount
&lt;/h4&gt;

&lt;p&gt;There are two problems with adding subscriptions/listeners in &lt;code&gt;componentWillMount&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;With server-side rendering, the &lt;code&gt;componentWillUnmount&lt;/code&gt; function is not called on the server and hence cleanups will not happen and may result in memory leaks.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;With async rendering, multiple subscriptions may be attached, as rendering phase lifecycles may be invoked multiple times.&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Incorrect way&lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;ExampleComponent&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;componentWillMount&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;unlisten&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dataSource&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;handleDataSourceChange&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;componentWillUnmount&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;unlisten&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;handleDataSourceChange&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{};&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Correct way&lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;ExampleComponent&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;componentDidMount&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;unlisten&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dataSource&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;handleDataSourceChange&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;componentWillUnmount&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;unlisten&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;handleDataSourceChange&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{};&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The correct way to add and remove listeners is to pair up the &lt;code&gt;componentDidMount&lt;/code&gt; and &lt;code&gt;componentWillUnmount&lt;/code&gt; lifecycle methods.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#updating-state-or-calling-side-effects-on-prop-change"&gt;
  &lt;/a&gt;
  Updating state or calling side effects on prop change
&lt;/h4&gt;

&lt;p&gt;Previously, the &lt;code&gt;componentWillReceiveProps&lt;/code&gt; lifecycle was used for updating state or calling side effects in the children whenever parent props changed. Although there was not much wrong with it, developers had a misconception that this lifecycle was only called when props updated.&lt;/p&gt;

&lt;p&gt;However, it was invoked whenever parent props re-rendered.&lt;/p&gt;

&lt;p&gt;So any invocation of functions or state updates may have inconsistent behaviors if not done properly after comparing previous and current props.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#reading-dom-properties-before-an-update"&gt;
  &lt;/a&gt;
  Reading DOM properties before an update
&lt;/h4&gt;

&lt;p&gt;Sometimes you may want to save certain DOM properties, such as scroll position before an update to revert it when the update is applied to prevent the items currently in view for the user from going out of view if new items are added or removed.&lt;/p&gt;

&lt;p&gt;Previously, you would do so in the &lt;code&gt;componentWillUpdate&lt;/code&gt; lifecycle method. However, with async rendering, there may be a gap between the time when &lt;code&gt;componentWillUpdate&lt;/code&gt; is called and when &lt;code&gt;componentDidUpdate&lt;/code&gt; is called, which may lead to inconsistencies if the user interacted with the DOM in a way that actually changed the scroll position, such as resizing the window or actually scrolling more content. &lt;code&gt;getSnapshotBeforeUpdate&lt;/code&gt; is suggested as an alternative to &lt;code&gt;componentWillUpdate&lt;/code&gt; for this reason since it is called just before the DOM mutations are made.&lt;/p&gt;

&lt;p&gt;Now that we have gone through a few reasons as to why the usages were removed, let us get back to the point.&lt;/p&gt;

&lt;p&gt;We may be tempted to think, ‚ÄúWhy do we even need some utility to point us to the unsafe functions? We can simply search and update them with the recommended practices.‚Äù&lt;/p&gt;

&lt;p&gt;While you are correct and can do so in your own code base, you will not be able to easily identify &lt;em&gt;unsafe&lt;/em&gt; lifecycles within libraries that you use as dependencies in your codebase. &lt;code&gt;StrictMode&lt;/code&gt; will help you point those out too so that you can update them (or replace them with alternatives if the latest versions are not compatible).&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#5-detecting-unexpected-side-effects"&gt;
  &lt;/a&gt;
  5. Detecting unexpected side effects
&lt;/h3&gt;

&lt;p&gt;As we established in the previous section that React wanted to optimize the rendering phase in the upcoming Concurrent Mode, it decided to break down the rendering phase. As a result, rendering phase lifecycles can be called multiple times, causing unexpected behaviors if side effects are used within them.&lt;/p&gt;

&lt;p&gt;In the latest version of React, these functions include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;constructor&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;getDerivedStateFromProps&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;shouldComponentUpdate&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;render&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;setState&lt;/code&gt; updater functions in both class and functional components&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;functions passed to &lt;code&gt;useMemo&lt;/code&gt;, &lt;code&gt;useState&lt;/code&gt;, &lt;code&gt;useReducer&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;While side effects are non-deterministic, &lt;code&gt;StrictMode&lt;/code&gt; helps by making it a little more deterministic to the developer by double-invoking the functions above. This way, if any side effect is incorrectly written in a rendering phase function, it can be in Development Mode itself due to the obvious inconsistencies presented by it.&lt;/p&gt;

&lt;p&gt;For example, if a WebSocket connection is being established in a &lt;code&gt;constructor&lt;/code&gt; function, a double invocation of &lt;code&gt;constructor&lt;/code&gt; in Development Mode can help make it easier to spot, as two connections will be established.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#key-takeaways"&gt;
  &lt;/a&gt;
  Key Takeaways
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;React.StrictMode&lt;/code&gt; can be enabled for part of or the entire application.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It is only run in Development Mode to provide warnings for legacy ref usage, the deprecated &lt;code&gt;findDOMNode&lt;/code&gt; method, the legacy Context API, unsafe lifecycles, and unexpected side effects.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;StrictMode&lt;/code&gt; leads to an intentional double invocation of rendering phase lifecycles and functions to make it easier to spot unexpected side effects implemented in these functions.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-reading"&gt;
  &lt;/a&gt;
  Thank you for reading.
&lt;/h3&gt;

&lt;p&gt;If you found this article useful and informative, please don't forget to like and share it with your friends and colleagues. &lt;/p&gt;

&lt;p&gt;If you have any suggestions, please feel free to comment. &lt;/p&gt;

&lt;p&gt;Follow me on &lt;a href="https://twitter.com/ShubhamReacts"&gt;Twitter&lt;/a&gt; for more web development content.&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>programming</category>
      <category>codequality</category>
    </item>
    <item>
      <title>Stripe payment implementation in Node.js</title>
      <author>Michael Burrows</author>
      <pubDate>Tue, 03 Aug 2021 06:15:23 +0000</pubDate>
      <link>https://dev.to/michaelburrows/stripe-payment-implementation-in-node-js-1857</link>
      <guid>https://dev.to/michaelburrows/stripe-payment-implementation-in-node-js-1857</guid>
      <description>&lt;p&gt;In this tutorial we‚Äôll be building a simple ‚ÄúBuy me a coffee‚Äù app using Stripe and Node.js. Before beginning you‚Äôll need to create a Stripe account (free) and have Node.js installed. Once complete you‚Äôll have a fully functioning form that allows users to send you payments.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-up-the-project"&gt;
  &lt;/a&gt;
  Setting up the project
&lt;/h2&gt;

&lt;p&gt;Open a new terminal window and run the following commands to setup the project:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mkdir stripe-node
cd stripe-node
npm init -y
npm install body-parser ejs express nodemon stripe
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will initiate the project using the default options and install the following packages:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;body-parser&lt;/code&gt; : parse incoming form data and convert into an easy to use object&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;ejs&lt;/code&gt; : view engine for rendering static HTML files compatible with Express&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;express&lt;/code&gt; : provides a HTTP server framework for Node.js&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;nodemon&lt;/code&gt; : monitors files for changes and restarts the server automatically&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;stripe&lt;/code&gt; : allows us to use the Stripe.js library as an ES module.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#setting-up-the-server"&gt;
  &lt;/a&gt;
  Setting up the server
&lt;/h2&gt;

&lt;p&gt;Create a new &lt;code&gt;index.js&lt;/code&gt; file in the root of the project folder:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;touch index.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;First thing we‚Äôll do is setup the Express server:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Server is running...&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let‚Äôs now test the setup with the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;nodemon index.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You should see the ‚ÄòServer is running‚Ä¶‚Äò message logged in the terminal.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-up-the-frontend"&gt;
  &lt;/a&gt;
  Setting up the frontend
&lt;/h2&gt;

&lt;p&gt;The frontend will consist of two HTML pages. First the page with the form to collect the payment details (&lt;code&gt;index.html&lt;/code&gt;) and a secondary page (&lt;code&gt;success.html&lt;/code&gt;) that we‚Äôll redirect the user to if the payment was successful. These HTML files will need to live inside a &lt;code&gt;views&lt;/code&gt; folder so go ahead and create that before proceeding.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;index.html&lt;/code&gt; should contain the following markup:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Buy me a coffee&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"flex justify-center mt-32"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Buy me a coffee&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;form&lt;/span&gt; &lt;span class="na"&gt;action=&lt;/span&gt;&lt;span class="s"&gt;"/charge"&lt;/span&gt; &lt;span class="na"&gt;method=&lt;/span&gt;&lt;span class="s"&gt;"POST"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"email"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Email:&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"email"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"email"&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"Email"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"amount"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;$&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"number"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"amount"&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"5"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"payment-card"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"payment-errors"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;button&amp;gt;&lt;/span&gt;Submit&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://js.stripe.com/v3/"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"payment.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This creates input fields for the user to enter their email and payment amount. The empty &lt;code&gt;payment-card&lt;/code&gt; element will be populated with a form to enter credit card information from Stripe.js. This needs to be loaded directly and not bundled into our application to be &lt;a href="https://stripe.com/docs/security/guide#validating-pci-compliance"&gt;PCI compliant&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;success.html&lt;/code&gt; is just a basic file that displays a payment received message:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Buy me a coffee&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Payment Received - Thanks!&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next modify the &lt;code&gt;index.js&lt;/code&gt; to include &lt;code&gt;ejs&lt;/code&gt; as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;view engine&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ejs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;engine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;html&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ejs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;renderFile&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;static&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./views&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Server is running...&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With the server running test this by going to &lt;a href="http://localhost:3000/"&gt;http://localhost:3000/&lt;/a&gt; in the browser.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-up-the-stripe-functionality"&gt;
  &lt;/a&gt;
  Setting up the Stripe functionality
&lt;/h2&gt;

&lt;p&gt;Create a &lt;code&gt;payment.js&lt;/code&gt; file in the views folder. You‚Äôll need to &lt;code&gt;replace pk_test_XXXXXXXXXXXXXXXXXXXX&lt;/code&gt; with your publishable key which can be found in the Stripe dashboard &lt;a href="https://dashboard.stripe.com/apikeys"&gt;here&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;stripe&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Stripe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;pk_test_XXXXXXXXXXXXXXXXXXXX&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;elements&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;stripe&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;elements&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;card&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;elements&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;card&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;hidePostalCode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="nx"&gt;card&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mount&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#payment-card&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;form&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;form&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;errors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#payment-errors&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To complete the &lt;code&gt;payment.js&lt;/code&gt; setup we‚Äôll add an event listener to the form that creates a token in a hidden input field which is used to encrypt the credit card details when the data is sent to Stripe for processing:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;submit&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;preventDefault&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="nx"&gt;stripe&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createToken&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;card&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;errors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;textContent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;stripeToken&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;input&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;stripeToken&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;type&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hidden&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;stripeToken&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;stripeToken&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;stripeToken&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;value&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;token&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;stripeToken&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;submit&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To complete the project update &lt;code&gt;index.js&lt;/code&gt; to create the customer and process the payment. As with the publishable key you‚Äôll need to replace &lt;code&gt;sk_test_XXXXXXXXXXXXXXXXXXXX&lt;/code&gt; with your secret key found in the Stripe dashboard:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;bodyParser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;body-parser&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;stripe&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;stripe&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;sk_test_XXXXXXXXXXXXXXXXXXXX&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;view engine&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ejs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;engine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;html&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ejs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;renderFile&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;static&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./views&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;bodyParser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;urlencoded&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;extended&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;}))&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/charge&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;stripe&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;customers&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;          
          &lt;span class="na"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;source&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stripeToken&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;customer&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
          &lt;span class="nx"&gt;stripe&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;charges&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
            &lt;span class="na"&gt;amount&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;amount&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;currency&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;usd&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;customer&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;customer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;
          &lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;success.html&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;        
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Server is running...&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For testing purposes you can use ‚Äú4242424242424242‚Äù as the credit card number, any expiry date in the future and any 3 numbers for the CVC. If everything has been setup correctly when you enter this information you‚Äôll be redirected to the successful payment page.&lt;/p&gt;

&lt;p&gt;That‚Äôs all for this tutorial. Hopefully it has given you an understanding of how to process Stripe payments in a Node.js application. There are many more configurable options available not used in this tutorial. To discover all these options the offical &lt;a href="https://stripe.com/docs/js"&gt;Stripe.js documentation&lt;/a&gt; is an excellent resource.&lt;/p&gt;

</description>
      <category>node</category>
      <category>javascript</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Add Access logs to S3</title>
      <author>Ajit Singh</author>
      <pubDate>Tue, 03 Aug 2021 05:34:35 +0000</pubDate>
      <link>https://dev.to/this-is-learning/add-access-logs-to-s3-29bd</link>
      <guid>https://dev.to/this-is-learning/add-access-logs-to-s3-29bd</guid>
      <description>&lt;p&gt;Like websites we may need to add logs into our S3 bucket so that we can see what happens who added or deleted a certain file. This is very useful when we create a static website using S3 or we need logs for suspicious activity or find why we cannot access a file etc. When we add logging to our S3 bucket all our logs are stored in a different bucket in S3 and analyze them using various tools.&lt;/p&gt;

&lt;p&gt;Now we will add access logs to S3 bucket.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;To add server access logs create a new bucket like we did in the previous articles.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Hu19aNMO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sbrefa6wp3n9vpq22r7l.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Then in your first bucket go to properties and scroll down to reach access logging.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6Yd1p4pl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o668l9byd9sokfm5fng1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6Yd1p4pl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o668l9byd9sokfm5fng1.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Click on edit &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z6Bw5rPf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l3upopf0tw1aut2whb3t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z6Bw5rPf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l3upopf0tw1aut2whb3t.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Enable the setting then in the below portion click on browse S3 and select the new bucket we created for logging.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1MFxpTAx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/blori372pqri2m6zzap6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1MFxpTAx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/blori372pqri2m6zzap6.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In the bucket name you can add a prefix I'm adding a logs prefix &lt;code&gt;logs&lt;/code&gt; to my bucket and save changes&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IeMk3LNW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/upy3546r5dasgu8nf0wc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IeMk3LNW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/upy3546r5dasgu8nf0wc.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Xwql-jOV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xdbi3hil9953op60w1vg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Xwql-jOV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xdbi3hil9953op60w1vg.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;This enables S3 logging in our bucket.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Now you can check that this generates logs by accessing our files in S3. Remember it takes a few hours for S3 to generate logs so don't worry&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now you can query these logs using Athena service in AWS by  SQL very easily I'm attaching the link to the &lt;a href="https://aws.amazon.com/premiumsupport/knowledge-center/analyze-logs-athena/"&gt;documentation where you can see how to use Athena to analyze your S3 logs&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We have already learnt how to use S3. So now starting this article we are checking that how to make your S3 buckets more robust by logging. In the next article we will study how to Enable automatic backups using S3 replication so that anything cannot be deleted by mistake.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>cloud</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Complete Introduction to CSS Grid üìä</title>
      <author>CSS MASTER</author>
      <pubDate>Tue, 03 Aug 2021 05:21:40 +0000</pubDate>
      <link>https://dev.to/learn_css/complete-introduction-to-css-grid-joa</link>
      <guid>https://dev.to/learn_css/complete-introduction-to-css-grid-joa</guid>
      <description>&lt;p&gt;¬†The CSS grid is a newer standard that makes it easy to build complex responsive layouts. It works by turning an HTML element into a grid, and lets you place child elements anywhere within.&lt;/p&gt;

&lt;p&gt;Life was tough before Flexbox and Grid came, centering a div was so troublesome that it became a meme.&lt;/p&gt;

&lt;p&gt;But fear no more, Flexbox and Grid have solved all our problems and things are so much easier now.&lt;/p&gt;
&lt;p&gt;Read More: &lt;b&gt;&lt;span&gt;&lt;a href="https://www.codelivly.com/an-introduction-to-css-grid-layout/"&gt;Complete Introduction to CSS Grid&lt;/a&gt;&lt;/span&gt;&lt;/b&gt; üìä&lt;/p&gt;

</description>
      <category>css</category>
    </item>
    <item>
      <title>Twitter Bot on AWS Serverless | Mohamed Fayaz</title>
      <author>Mohamed Fayaz</author>
      <pubDate>Tue, 03 Aug 2021 05:20:01 +0000</pubDate>
      <link>https://dev.to/aws-builders/running-twitter-bot-on-aws-serverless-mohamed-fayaz-b9</link>
      <guid>https://dev.to/aws-builders/running-twitter-bot-on-aws-serverless-mohamed-fayaz-b9</guid>
      <description>&lt;p&gt;Sharing my experience of how I am running the Twitter Bot on AWS for almost free using AWS serverless technologies. &lt;/p&gt;

&lt;p&gt;Social Bot is nothing but a program that mimics the behaviours of a user based on the rules you set. Twitter is one of the BOT friendly platforms where you can automate a lot of things from liking, re-posting, follow, unfollow and messaging using their API. &lt;/p&gt;

&lt;p&gt;Before we get down to the nitty-gritty of how it works, there is an &lt;a href="https://help.twitter.com/en/rules-and-policies/twitter-automation"&gt;official guidelines&lt;/a&gt; from Twitter to follow whenever we create a bot.  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#my-bot-account"&gt;
  &lt;/a&gt;
  My Bot account
&lt;/h2&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--Op8UyAIl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1269107326566281217/HZbs-SyF_normal.jpg" alt="Grepnetics profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Grepnetics
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @grepnetics
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Artificial intelligence, machine learning bolsters Exactech joint replacement system - Becker's Orthopedic &amp;amp;amp; Spine&lt;br&gt;&lt;br&gt;Read more here: &lt;a href="https://t.co/KjeZwQPwNa"&gt;ift.tt/35Vs68b&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;a href="https://twitter.com/hashtag/ArtificialIntelligence"&gt;#ArtificialIntelligence&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/AI"&gt;#AI&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/DataScience"&gt;#DataScience&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/100DaysOfCode"&gt;#100DaysOfCode&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/Python"&gt;#Python&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/MachineLearning"&gt;#MachineLearning&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/BigData"&gt;#BigData&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/DeepLearning"&gt;#DeepLearning&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/NLP"&gt;#NLP&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/Robots"&gt;#Robots&lt;/a&gt; #
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      17:17 PM - 28 Jun 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1409561715813982212" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1409561715813982212" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1409561715813982212" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;I've created this account last year June 2020, but it outperformed my other account which I have been using for 10+ years with a lot more followers, tweets and engagements so the same content I post in this account reaches much more audience than the actual one. &lt;/p&gt;

&lt;p&gt;To create your bot all we need is a Twitter account and an AWS account to host your application.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#solution-overview"&gt;
  &lt;/a&gt;
  Solution Overview
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lZvfaYW2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cj6j0tegx9uso6sr06xf.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lZvfaYW2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cj6j0tegx9uso6sr06xf.jpg" alt="TwitterBOT"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#aws-lambda"&gt;
  &lt;/a&gt;
  AWS Lambda
&lt;/h3&gt;

&lt;p&gt;Lambda is a serverless compute service from AWS that let you write and run your own code without managing any servers. Lambda comes with 1 million execution and 400,000 GB-seconds of compute time for free. It also supports multiple languages such as Node.js, Python, Java and many more. I've used Python to develop this bot which will run multiple times a day to source the best content based on the keywords and hashtags. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#aws-secrets-manager"&gt;
  &lt;/a&gt;
  AWS Secrets Manager
&lt;/h3&gt;

&lt;p&gt;Secrets Manager helps to keep our secret keys secure within AWS. The cost is based on the number of keys so it may cost you ~$1 to keep our Twitter access keys securely.&lt;/p&gt;

&lt;p&gt;Alternatively, you can also keep the keys in your Lambda environment variable which won't cost you anything, but never store your keys straight in the code as a best practice.    &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#aws-dynamodb"&gt;
  &lt;/a&gt;
  AWS DynamoDB
&lt;/h3&gt;

&lt;p&gt;DynamoDB is a NoSQL database from AWS which allows you to store the data in key-value pairs. I am using this to store the metadata of the content I shared on my Twitter to avoid repetitive content in my feed. Since am using on-demand, the cost is based on the read and writes so in my case it's costing me less than $1 per month. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#aws-cloudwatch"&gt;
  &lt;/a&gt;
  AWS CloudWatch
&lt;/h3&gt;

&lt;p&gt;CloudWatch is a monitoring and observability tool which provides data to make actionable insights to monitor our application. I am writing all the Lambda logs back to CloudWatch to keep track of how it is progressing. We can run this within the free tier so there is no additional cost to keep these logs. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#slack"&gt;
  &lt;/a&gt;
  Slack
&lt;/h3&gt;

&lt;p&gt;Lastly, I am using Slack to monitor the content it shares. Now you may have a question why can't we directly use the Twitter app to check now and then, having that comes as a message in Slack is so much more comfortable than checking my Twitter feed. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-words"&gt;
  &lt;/a&gt;
  Final words
&lt;/h2&gt;

&lt;p&gt;Serverless architectures provide great benefits, but mainly the scalability and the cost. There are paid services to manage your Twitter content, but to run our own is nearly free using a platform like AWS. Similarly, there are several applications and use-cases you can develop using serverless technologies. &lt;/p&gt;

</description>
      <category>twitter</category>
      <category>python</category>
      <category>aws</category>
    </item>
    <item>
      <title>Developer Communities Every Developer should Join According to your niche.</title>
      <author>lary mak</author>
      <pubDate>Tue, 03 Aug 2021 04:52:15 +0000</pubDate>
      <link>https://dev.to/larymak/developer-communities-every-developer-should-join-according-to-your-niche-1a6b</link>
      <guid>https://dev.to/larymak/developer-communities-every-developer-should-join-according-to-your-niche-1a6b</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Alone, we can do so little; together, we can do so much. &lt;br&gt;
                      Helen Keller &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Over the past few years we have seen lots of developer communities come into the rise with different goals and missions, but you will agree with me that they all have one thing in common, &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Help each other learn,&lt;/li&gt;
&lt;li&gt;Share ideas&lt;/li&gt;
&lt;li&gt;Offer support to newbies and&lt;/li&gt;
&lt;li&gt;freely interact.
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We have different types of communities, front-end based communities, back-end based, specific language-based and we also have general communities which include all the above under one platform.  &lt;/p&gt;

&lt;p&gt;Benefits offered by these communities are 'on another level' as I would say. They have helped people start from scratch to landing jobs in big tech companies like Google and Microsoft, they have raised mentors, helped improve people's code writing and reviewing skills, in other words, it has made programming easier to learn and master. &lt;/p&gt;

&lt;p&gt;Now to better help those looking for a good community to join according to your skills, I gathered a few of the top communities depending on your skills either front-end, back-end, blogging, and more to help you get started and meet your fellow developers. &lt;/p&gt;

&lt;p&gt;I may have not included all the communities out there because we have a ton of them, be free to add them up in the comment section to help others out: &lt;/p&gt;

&lt;p&gt; Web Development &amp;amp; Design Communities  &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.webdeveloper.com/"&gt;Web Developer Forum&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u_o_06Qy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/inr0xpcff1za6moc0fsg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u_o_06Qy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/inr0xpcff1za6moc0fsg.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;br&gt;
It is a simple web development and programming site categorized into sections where web developers and designers learn and share how to design websites, build mobile applications, create WordPress themes, write code, HTML, JavaScript etc.. &lt;br&gt;
It is easy to use, it covers almost all questions on the sections. It is a great place for developers starting out on web development. &lt;br&gt;
To start a discussion all you need to do is sign up and you are good to go.  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.sitepoint.com/community/"&gt;The SitePoint community&lt;/a&gt;&lt;br&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CRLQXmfk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wwmzu7mp8e7hnjbuejki.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CRLQXmfk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wwmzu7mp8e7hnjbuejki.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;br&gt;
It helps find answers on questions about CSS, HTML, marketing, PHP, JavaScript, design and UX, database, web hosting and more.&lt;br&gt;
The good thing about this community is that, it does not only talk about finding solutions, it also has books on web development, articles on these topics, and more although it is under premium, here is the catch You get to have a 7-day free trial, with these days you can download a lot of resources.  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.talkgraphics.com/"&gt;Talk Grapics&lt;/a&gt; &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RnfRJypJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vywunnkt6xjynf4gjhzx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RnfRJypJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vywunnkt6xjynf4gjhzx.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;br&gt;
Just as the name says it, this is a community of graphic designers and 3D artists.&lt;br&gt;&lt;br&gt;
Here you will find latest and trending topics at the top of the list, when done with a forum mark it as read. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.coffeecup.com/forums/"&gt;CoffeeCup&lt;/a&gt; &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5Yb66KJG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/12b3uo1i2154kf86qugm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5Yb66KJG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/12b3uo1i2154kf86qugm.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;br&gt;
Just a little bit of history, It was started back in 1996 with a simple HTML editor inside a coffee shop. &lt;br&gt;
It helps designers create better sites, it's main goal is to make lives easier by providing customers with great yet affordable software &lt;br&gt;
It's user forum is where you get to post different questions and find solutions to other questions. To join an on going conversation all you need is to create an account. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://bootstrap-slack.herokuapp.com/"&gt;Bootstarp&lt;/a&gt; &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5xH-QNkP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rpfzx4qs60hq9pyjf2wx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5xH-QNkP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rpfzx4qs60hq9pyjf2wx.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;br&gt;
Bootstrap is a popular HTML, CSS and JS framework for UI components and interactions. The community focuses and discusses on the latest trends and tips. &lt;br&gt;
It is good for building responsive sites with the help of popular front-end component library. &lt;br&gt;
You can either join the slack channel or subscribe to their official blog. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.indiehackers.com/"&gt;IndieHackers&lt;/a&gt; &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--G_k_mUmZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m2ww81ifob22vecvo7jx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G_k_mUmZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m2ww81ifob22vecvo7jx.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;br&gt;
It is an emerging online community of web devs, It adds up as a platform where founders of successful startups share their stories and experience with others. &lt;br&gt;
It provides a forum where each member is able to share experience, explore ideas and offer support to upcoming developers. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.dailyui.co/"&gt;Daily UI&lt;/a&gt; &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zVhdd7rM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oonrvk6xxxjuwrswt9y5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zVhdd7rM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oonrvk6xxxjuwrswt9y5.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;br&gt;
It a series of daily UI challenges, design inspirations and rewards to help you become a better designer within a period of 100 days, their amazing support will motivate you to keep learning.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt; Blogging Communities  &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/"&gt;Dev.to&lt;/a&gt; &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7BIrKD4N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jg6j15e4p0sjlvos18od.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7BIrKD4N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jg6j15e4p0sjlvos18od.PNG" alt="Alt Text"&gt;&lt;/a&gt; &lt;br&gt;
It is an open source community of more than 600k developers where they share, learn nd stay updated with latest technology trends. It has resources like podcasts articles, Videos, Real-world examples, Hackathons etc. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.freecodecamp.org/news"&gt;Freecode Camp&lt;/a&gt; &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GrEcBsom--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cof79ebwkdybsbo73dnb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GrEcBsom--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cof79ebwkdybsbo73dnb.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;br&gt;
It is a non-profit platform to learn and practice coding, but here is the catch, they also have a blogging platform where developers contribute by sharing knowledge through writing articles, this has a chat forum where you meet other developers too and share ideas, solve problems and errors and enhance on your knowledge. &lt;br&gt;
Want to write for freecode camp this article will help you know how to get started: &lt;a href="https://www.freecodecamp.org/news/how-to-write-for-freecodecamp/"&gt;Article&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://hashnode.com/"&gt;Hashnode&lt;/a&gt; &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NGja_Run--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k1of28yk5ew5shv2tvf9.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NGja_Run--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k1of28yk5ew5shv2tvf9.PNG" alt="Alt Text"&gt;&lt;/a&gt; &lt;br&gt;
It is a global community of developers, where you can share ongoing projects, ask questions, suggest ideas, and help other solve their problems. It is a free platform that helps you stay connected with latest trends.&lt;br&gt;&lt;br&gt;
You are able to publish blogs, get your own sub-domain or add your own, follow your favorite author and even back up your blog on your GitHub also participate on hackathons and win prizes. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://hackernoon.com/"&gt;Hackernoon&lt;/a&gt; &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Vnrx-FGR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ttyn4jjittp9f512jp2a.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Vnrx-FGR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ttyn4jjittp9f512jp2a.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
It is a site where you can read, write, and publish articles visible internationally, it's a community of 15k + writers and over 3 million readers. &lt;br&gt;
Top tech companies use this platform to share their expertise. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.codenewbie.org/"&gt;Code Newbie&lt;/a&gt; &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gxselfMP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ghpe2gu5p3w3upp4vsxq.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gxselfMP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ghpe2gu5p3w3upp4vsxq.PNG" alt="Alt Text"&gt;&lt;/a&gt; &lt;br&gt;
It started out as a weekly twitter chat providing needed support to people learning to code. Since then it has grown into a supportive community of developers, it resamples Dev.to, where you can publish your articles too. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://bloggingfordevs.com/"&gt;Blogging for Devs&lt;/a&gt; &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nB1Mf2kq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/baod3tst912vvcs1eir6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nB1Mf2kq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/baod3tst912vvcs1eir6.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;br&gt;
It is a private community for developers, freelancers and tech creators growing their audience through writing online. The only thing is that it's not free, you need to pay a fee to be a part of it. &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt; General Communities  &lt;br&gt;
Remember earlier I had mentioned that we have communities that have all these under one roof, in this section we will have a look at some of them. &lt;br&gt;
The only thing you need to do is once registered as a member you need to choose your category and you will be good to go: &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://stackoverflow.com/"&gt;Stack Overflow&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wkvV2klm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ev4i8f0ewemzez8qb3o0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wkvV2klm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ev4i8f0ewemzez8qb3o0.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;br&gt;
For anyone who is into programming, Stack Overflow is a must join the community to learn, share and build. &lt;br&gt;
It hosts developers from around the globe, where they come to seek answers to their coding challenges and ask questions about their errors. &lt;br&gt;
He is the amazing part, according to their analysis a question is posted every 12 seconds, and it is always answered by developers who already know how to solve it. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://stackexchange.com/"&gt;Stack Exchange&lt;/a&gt; &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--edVo7bQ5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ciffc9a0mr8ly5lj65j2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--edVo7bQ5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ciffc9a0mr8ly5lj65j2.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;br&gt;
It was launched in 2010, by the Stack Exchange network.&lt;br&gt;
It comprises 173 Q&amp;amp;A communities including Stack Overflow, the largest, most trusted online community for developers to learn, share their knowledge, and build their careers. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.reddit.com/"&gt;Reddit&lt;/a&gt; &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cZQeLzXU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7i3tws3j89k8ffk0ypw7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cZQeLzXU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7i3tws3j89k8ffk0ypw7.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;br&gt;
It is a global community with a lot of sub-groups, endless conversations going on. &lt;br&gt;
It has nearly all trending topics, opportunities for meet ups, how to for debugging and also job listings. &lt;br&gt;
Now to help you get started on the right path we have some of the common sub-groups where you can subscribe and get notified on updates: &lt;br&gt;
&lt;a href="https://www.reddit.com/r/webdev"&gt;WebDev&lt;/a&gt;, &lt;a href="https://www.reddit.com/r/reactjs"&gt;ReactJS&lt;/a&gt;, &lt;a href="https://www.reddit.com/r/Python/"&gt;Python&lt;/a&gt;, &lt;a href="https://thehiveindex.com/communities/r-javascript/"&gt;Javascript&lt;/a&gt; and more others.. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/"&gt;GitHub&lt;/a&gt; &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--w6Ug5iGn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/co4lv80q3ldlapkl8j0m.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w6Ug5iGn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/co4lv80q3ldlapkl8j0m.PNG" alt="Alt Text"&gt;&lt;/a&gt; &lt;br&gt;
It is a very popular name amongst developers. The Community Forum is the place where you as a developer, can share ideas and follow up on discussions. &lt;br&gt;
However, users can easily share their code, making it an interesting programming and coding community. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.digitalocean.com/community"&gt;Digital Ocean&lt;/a&gt; &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PDsNEhGa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j6eu5ovxrtb1nwjpbd5d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PDsNEhGa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j6eu5ovxrtb1nwjpbd5d.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;br&gt;
It is a place where developers can find or lend support and contribute to the community. The community provides guides, tutorials, trends for developers and a Q/A session and much more.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt; Specific Language Communities &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://www.python.org/community/"&gt;Python&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.oracle.com/java/technologies/javacommunity.html"&gt;Java&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://cppalliance.org/#:~:text=Empower%20The%20C%2B%2B%20Community&amp;amp;text=C%2B%2B%20is%20not%20only%20popular,language%20that%20anyone%20can%20learn.&amp;amp;text=Evolves%20C%2B%2B%20through%20expertly%20maintained,programming%20community%20and%20educational%20env"&gt;C/C++&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://csharpforums.net/"&gt;C#&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://phpcommunity.org/"&gt;PHP&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://kotlinlang.org/community/"&gt;Kotlin&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://swift.org/community/#communication"&gt;Swift&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.lua.org/community.html"&gt;Lua&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://thehiveindex.com/communities/ios-developers/"&gt;iOS Developers&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://thehiveindex.com/communities/android-united/"&gt;Android Developers&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://forum.xda-developers.com/?ref=thehiveindex"&gt;Mobile Devellopers&lt;/a&gt; &lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;I think you will agree with me is that not all developer communities are the same, although we have this now we can be assured to have others in the near future. &lt;/p&gt;

&lt;p&gt;But what they will all share are the community guidelines, no matter which you join you have to be respectful to each other. &lt;/p&gt;

&lt;p&gt;Each community has something to offer, take a look at the one that falls into your expertise and meet your fellow developers. &lt;/p&gt;

&lt;p&gt;Got another community you think is worth sharing, add it in the comments below and we will visit it. &lt;/p&gt;

&lt;p&gt;Support Me by &lt;a href="https://www.buymeacoffee.com/lary"&gt;Buying Me Tea&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Connect With me at &lt;a href="https://twitter.com/larymak1"&gt;Twitter&lt;/a&gt; | &lt;a href="https://www.instagram.com/nextgencoders/"&gt;Insta&lt;/a&gt; | &lt;a href="https://www.youtube.com/channel/UCrT1ARRZfLOuf6nc_97eXEg"&gt;YouTube&lt;/a&gt; | &lt;a href="https://www.linkedin.com/in/hillary-nyakundi"&gt;LinkedIn&lt;/a&gt;  | &lt;a href="https://github.com/larymak"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Do share your valuable opinion, I appreciate your honest feedback!  &lt;/p&gt;

&lt;p&gt;Enjoy Coding ‚ù§&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>productivity</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>60+ Awesome UI and UX resources for Developers and Designers 2021</title>
      <author>coderwatchHQ</author>
      <pubDate>Tue, 03 Aug 2021 04:51:00 +0000</pubDate>
      <link>https://dev.to/coderwatch/60-awesome-ui-and-ux-resources-for-developers-and-designers-2021-202</link>
      <guid>https://dev.to/coderwatch/60-awesome-ui-and-ux-resources-for-developers-and-designers-2021-202</guid>
      <description>&lt;p&gt;Yearning organizers, genuine solopreneurs, and sprouting visual creators all need a convincing proficient brand ‚Äî or if nothing else the abilities and assets expected to foster one. &lt;/p&gt;

&lt;p&gt;Tragically, in case you're new to the visual communication world, this implies swimming through a confounding cluster of picture altering programming, stock picture locales, plan administrations, and considerably more. &lt;/p&gt;

&lt;p&gt;To save you time, we've accumulated the best visual communication assets to help you construct a bespoke brand that separates you from your rivals. &lt;/p&gt;

&lt;p&gt;Regardless of whether you're an originator searching for better visual communication apparatuses or an entrepreneur searching for practical programming, you'll track down the best paid and free visual UI and UX assets.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#fancy-fonts"&gt;
  &lt;/a&gt;
  &lt;a href="https://fancy-fonts.com/"&gt;Fancy Fonts&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZQudKnBx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627451328765/Bsb0sSN9f.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZQudKnBx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627451328765/Bsb0sSN9f.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Starting this list with one of my favourite resources of fonts. That is -&amp;gt; Fancy Fonts. Find Beautiful Free Fonts‚ÄîScript, Display, Calligraphy, Sans, Serif, Handwritten, Retro, and more‚ÄîDownload Now‚ÄîIts FREE.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#motion-places"&gt;
  &lt;/a&gt;
  &lt;a href="https://motionplaces.com"&gt;Motion Places&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5DUG4F6v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627451377249/x_PU5_3dM.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5DUG4F6v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627451377249/x_PU5_3dM.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Free Stock Video Footage by Motion Places. They offer a curated collection of beautiful footage you can use for your projects. Download our clips for free in HD quality, or purchase 4K clips for $99.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#fontjoy"&gt;
  &lt;/a&gt;
  &lt;a href="https://fontjoy.com"&gt;Fontjoy&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nqspCjb5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627451406457/kOqG39BLu.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nqspCjb5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627451406457/kOqG39BLu.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fontjoy helps designers choose the best font combinations. Mix and match different fonts for the perfect pairing.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#shotsnapp"&gt;
  &lt;/a&gt;
  &lt;a href="https://shotsnapp.com"&gt;Shotsnapp&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cNAYa89C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627451636111/cQGLNWMaS.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cNAYa89C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627451636111/cQGLNWMaS.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Create beautiful device mockup image from the screenshots or design of your mobile app and websites. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#remix"&gt;
  &lt;/a&gt;
  &lt;a href="https://remixicon.com"&gt;Remix&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MlkM5t5H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627451653393/nNtEQyMOV.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MlkM5t5H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627451653393/nNtEQyMOV.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Remix Icon is a set of open source neutral style system symbols elaborately crafted for designers and developers. All of the icons are free to use for both personal and commercial.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#who-can-use"&gt;
  &lt;/a&gt;
  &lt;a href="https://whocanuse.com"&gt;Who can use&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YGcGlKHm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627451679562/Nr40O437T.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YGcGlKHm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627451679562/Nr40O437T.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Find out who can use your color combination. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#colorsafe"&gt;
  &lt;/a&gt;
  &lt;a href="https://colorsafe.co"&gt;ColorSafe&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2vF_CcwF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627451730362/iIdq1X4id.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2vF_CcwF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627451730362/iIdq1X4id.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Empowering designers with beautiful and accessible color palettes based on WCAG Guidelines of text and background contrast ratios.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#vexels"&gt;
  &lt;/a&gt;
  &lt;a href="https://vexels.com"&gt;Vexels&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_6AmXQNC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627451779458/glEW6Lxph.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_6AmXQNC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627451779458/glEW6Lxph.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Graphic Resources for Commercial &amp;amp; Merch Use ‚úì Vector image illustrations, logos, design templates &amp;amp; more ‚úì T-Shirt Designs &amp;amp; other Merch  ‚úì PNG, AI, SVG, JPG, PDF&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#open-doodles"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.opendoodles.com/"&gt;Open Doodles&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WK5rMojz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627451946734/rVR7pITib.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WK5rMojz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627451946734/rVR7pITib.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A library of sketchy illustrations of people free for personal and commercial use.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#videvo"&gt;
  &lt;/a&gt;
  &lt;a href="https://videvo.net/stock-video-footage"&gt;Videvo&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e25Q5I4V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627451902562/Bswj7KhFD.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e25Q5I4V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627451902562/Bswj7KhFD.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Download free stock video footage with 4k and HD clips available. Click here to download royalty-free licensing videos from Videvo today.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#inkscape"&gt;
  &lt;/a&gt;
  &lt;a href="https://inkscape.org"&gt;Inkscape&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tUXvZCkS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627451965475/xuvRK5B3-.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tUXvZCkS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627451965475/xuvRK5B3-.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Inkscape is professional quality vector graphics software which runs on Linux, Mac OS X and Windows desktop computers.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ionicons"&gt;
  &lt;/a&gt;
  &lt;a href="https://ionicons.com"&gt;Ionicons&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TjNfpiKl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627451985394/V-F9Hl7ya.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TjNfpiKl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627451985394/V-F9Hl7ya.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ionicons is an open-sourced and MIT licensed icon pack.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#drawkit"&gt;
  &lt;/a&gt;
  &lt;a href="https://drawkit.io"&gt;DrawKit&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0g71F8pM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627452009870/wBUAbFxCQ.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0g71F8pM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627452009870/wBUAbFxCQ.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Free and premium vector SVG illustrations for you to use on your next project, no attribution required! Vector illustrations, packs, icons and more.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dafonts"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.dafont.com/"&gt;DaFonts&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cGZdY5g4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627452038293/pixE8Y97Gq.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cGZdY5g4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627452038293/pixE8Y97Gq.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Archive of freely downloadable fonts. Browse by alphabetical listing, by style, by author or by popularity.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-noun-project"&gt;
  &lt;/a&gt;
  &lt;a href="https://thenounproject.com"&gt;The Noun Project&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nYgIQ1WY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627452078802/H3XiJ9xaV7.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nYgIQ1WY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627452078802/H3XiJ9xaV7.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Noun Project features the most diverse collection of icons and stock photos ever. Download SVG and PNG. Browse over 3 million art-quality icons and photos.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#freepik"&gt;
  &lt;/a&gt;
  &lt;a href="https://freepik.com"&gt;Freepik&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ga3RHSIS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627454940060/pPvuJ1GIWD.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ga3RHSIS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627454940060/pPvuJ1GIWD.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Millions of Free Graphic Resources. ‚úì Vectors ‚úì Stock Photos ‚úì PSD ‚úì Icons ‚úì All that you need for your Creative Projects&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#gravit-designer"&gt;
  &lt;/a&gt;
  &lt;a href="https://designer.io"&gt;Gravit Designer&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L_2aspDC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627452190848/3mn8nHscJ.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L_2aspDC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627452190848/3mn8nHscJ.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Create graphics, design logos and icons, edit images illustrations &amp;amp; presentations, all for free. Online professional vector graphic design tool - Gravit Designer&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#burst"&gt;
  &lt;/a&gt;
  &lt;a href="https://burst.shopify.com"&gt;Burst&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y4MJTV53--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627452627094/XMVsUUAGw.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y4MJTV53--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627452627094/XMVsUUAGw.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Browse thousands of beautiful copyright-free images. All our pictures are free to download for personal and commercial use, no attribution required.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mrmockup"&gt;
  &lt;/a&gt;
  &lt;a href="https://mrmockup.com/freebies/"&gt;MrMockUp&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jbIqwkfe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627452712840/pgfsDMqan.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jbIqwkfe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627452712840/pgfsDMqan.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Free design freebies you need should check out&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#material-icons"&gt;
  &lt;/a&gt;
  &lt;a href="https://material.io/icons"&gt;Material Icons&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7pXTGrkY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627452772064/3mu8eHhui.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7pXTGrkY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627452772064/3mu8eHhui.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Build beautiful, usable products faster. Material Design is an adaptable system‚Äîbacked by open-source code‚Äîthat helps teams build high quality digital experiences.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#scrnshts"&gt;
  &lt;/a&gt;
  &lt;a href="https://scrnshts.club"&gt;Scrnshts&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CK7QVZwB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627452874633/wZPiOAjKQ.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CK7QVZwB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627452874633/wZPiOAjKQ.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A hand-picked collection of the finest app store design screenshots&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#screenpeek"&gt;
  &lt;/a&gt;
  &lt;a href="https://screenpeek.io"&gt;Screenpeek&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KeyuePou--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453079525/Us7meIgdd.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KeyuePou--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453079525/Us7meIgdd.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Screenpeek captures any website within a high quality mockup in seconds.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#isometric"&gt;
  &lt;/a&gt;
  &lt;a href="https://isometric.online"&gt;Isometric&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GYCUQqQ6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453103417/DP-ccmGtC.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GYCUQqQ6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453103417/DP-ccmGtC.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Free vector isometric illustrations for designers, startups and companies without the need to include attribution&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#humaaans"&gt;
  &lt;/a&gt;
  &lt;a href="https://humaaans.com"&gt;Humaaans&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gYASvS4c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453182648/NIkauY3MT.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gYASvS4c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453182648/NIkauY3MT.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Mix-&amp;amp;-match illustrations of people with a design library for InVIsion Studio and Sketch.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#shape"&gt;
  &lt;/a&gt;
  &lt;a href="https://shape.so"&gt;Shape&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BS243R8---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453157179/qQWHkrkPq.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BS243R8---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453157179/qQWHkrkPq.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Shape lets you customize the style, colors and border of static &amp;amp; animated icons and illustrations. You can export to React, SVG and Lottie code.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#landing-stock"&gt;
  &lt;/a&gt;
  &lt;a href="https://landingstock.com"&gt;Landing Stock&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--w1haaFon--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453195504/HNTY03PkS.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w1haaFon--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453195504/HNTY03PkS.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Discover your perfect landing page in with LandingStock, a collection of free images for landing pages.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#happy-hues"&gt;
  &lt;/a&gt;
  &lt;a href="https://happyhues.co"&gt;Happy Hues&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z4b9IIg2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453220019/W_LY80wqA.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z4b9IIg2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453220019/W_LY80wqA.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;See color palette inspiration on a real example website. As you click on different palettes every color on this site updates to give you context of how that color could be used for your design or illustration projects.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#flaticon"&gt;
  &lt;/a&gt;
  &lt;a href="https://flaticon.com"&gt;Flaticon&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ww6HOK67--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453238093/C7ASTLtkC.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ww6HOK67--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453238093/C7ASTLtkC.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Download Free Vector Icons and Stickers for your projects. Resources made by and for designers. PNG, SVG, EPS, PSD and CSS formats&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#joe-schmoe"&gt;
  &lt;/a&gt;
  &lt;a href="https://joeschmoe.io"&gt;Joe Schmoe&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QX4UUbxB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453294400/NVuTCL8by.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QX4UUbxB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453294400/NVuTCL8by.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;An illustrated avatar generator for developers and designers.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lukasz-adam-free-illustrations"&gt;
  &lt;/a&gt;
  &lt;a href="https://lukaszadam.com"&gt;Lukasz Adam Free Illustrations&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3sWzbD9Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453314390/rmH9jPmU4.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3sWzbD9Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453314390/rmH9jPmU4.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hey! Looking for the free Illustration guys? That's me. Check out my illustrations and my other resources.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#principle"&gt;
  &lt;/a&gt;
  &lt;a href="https://principleformac.com"&gt;Principle&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nombrzSU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453402497/RdhzJpQ2n.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nombrzSU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453402497/RdhzJpQ2n.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Principle makes it easy to design animated and interactive user interfaces. Whether you're designing the flow of a multi-screen app, or new interactions and animations, Principle helps you create designs that look and feel amazing.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mockup-world"&gt;
  &lt;/a&gt;
  &lt;a href="https://mockupworld.co"&gt;Mockup World&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PirNJHoV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453423748/rhAbMynM9.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PirNJHoV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453423748/rhAbMynM9.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tons of free and legal, fully layered, easily customizable photo realistic PSD mockups: Ready to use in your projects, app showcases and presentations!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#httpster"&gt;
  &lt;/a&gt;
  &lt;a href="https://httpster.net"&gt;Httpster&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zk2SE4FW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453550047/4m3CGL9V9.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zk2SE4FW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453550047/4m3CGL9V9.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tons of free and legal, fully layered, easily customizable photo realistic PSD mockups: Ready to use in your projects, app showcases and presentations!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#animaticons"&gt;
  &lt;/a&gt;
  &lt;a href="https://animaticons.co"&gt;Animaticons&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u4az7qlh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453528086/gwN2gyMN3.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u4az7qlh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453528086/gwN2gyMN3.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Animaticons are a growing set of beautiful, high-resolution, animated GIF icons that you can customize. They are perfect for websites, emails, presentations and more&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#social-sizes"&gt;
  &lt;/a&gt;
  &lt;a href="https://socialsizes.io"&gt;Social Sizes&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--N9qbJH0u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453491952/GyG6Zt-ER.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--N9qbJH0u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453491952/GyG6Zt-ER.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;SocialSizes provides designers with the best sizes to use for Image and Video content on Social Media. Get downloadable templates for Sketch, Figma, Photoshop and Adobe XD (no more googling for everything).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#screeenlane"&gt;
  &lt;/a&gt;
  &lt;a href="https://screenlane.com"&gt;ScreeenLane&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--G7DoNce5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453574613/a2V-WSBTj.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G7DoNce5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453574613/a2V-WSBTj.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Get inspired and keep up with the latest web &amp;amp; mobile app UI design trends. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#checklist"&gt;
  &lt;/a&gt;
  &lt;a href="https://checklist.design"&gt;Checklist&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dK1BhUj---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453680956/DDhLiVbLN.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dK1BhUj---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453680956/DDhLiVbLN.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Checklist Design is a curated list of checklists ranging from website pages, to UI components, all the way to branding assets.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#fonts-squirrel"&gt;
  &lt;/a&gt;
  &lt;a href="https://fontsquirrel.com"&gt;Fonts Squirrel&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SMdA9ni6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453709053/m1Ke2qQ2L.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SMdA9ni6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453709053/m1Ke2qQ2L.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Font Squirrel scours the internet for high quality, legitimately free fonts . Download thousands of completely legal, high quality, free fonts.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#typewolf"&gt;
  &lt;/a&gt;
  &lt;a href="https://typewolf.com"&gt;Typewolf&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AqPSQy7a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453740814/HOMwMd4wv.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AqPSQy7a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453740814/HOMwMd4wv.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Typewolf helps designers choose the perfect font combination for their next design project‚Äîfeatures web fonts in the wild, font recommendations and learning resources.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#humane"&gt;
  &lt;/a&gt;
  &lt;a href="https://humanebydesign.com"&gt;Humane&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--o139Ia2G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453804321/q0eignVmP.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o139Ia2G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453804321/q0eignVmP.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A resource that provides guidance for designing ethically humane digital products through patterns focused on user well-being.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mixkit"&gt;
  &lt;/a&gt;
  &lt;a href="https://mixkit.co"&gt;Mixkit&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xBZ1OO5s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453780870/1x-T4WXJN.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xBZ1OO5s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453780870/1x-T4WXJN.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Download Free Stock Video Footage, Stock Music &amp;amp; Premiere Pro Templates for your next video editing project. All assets can be downloaded for free!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#rawpixel"&gt;
  &lt;/a&gt;
  &lt;a href="https://rawpixels.com"&gt;Rawpixel&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_vePzGu4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627455811070/LnbSgz8Ml.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_vePzGu4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627455811070/LnbSgz8Ml.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Rawpixels is a portfolio of design work by Bill Safsel.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lost-type"&gt;
  &lt;/a&gt;
  &lt;a href="https://losttype.com"&gt;Lost Type&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--d7Q15blC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453959026/9ykX8pbXP.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d7Q15blC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453959026/9ykX8pbXP.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Lost Type is a Collaborative Digital Type Foundry.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#craftwork"&gt;
  &lt;/a&gt;
  &lt;a href="https://craftwork.design"&gt;Craftwork&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E_mMwLQ---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453995077/ljz6i8dxt.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E_mMwLQ---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627453995077/ljz6i8dxt.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Interface assets for designers, developers, and startup creatives. Speed up your design workflow with high-quality UX/UI kits, illustrations, and templates.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#feather-icons"&gt;
  &lt;/a&gt;
  &lt;a href="https://feathericons.com"&gt;Feather Icons&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QnKwl7pZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627454012171/qN49qsl99.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QnKwl7pZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627454012171/qN49qsl99.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Feather is a collection of simply beautiful open source icons. Each icon is designed on a 24x24 grid with an emphasis on simplicity, consistency and readability.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#color-claim"&gt;
  &lt;/a&gt;
  &lt;a href="https://vanschneider.com/colors"&gt;Color Claim&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--luApCDjv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627454125586/bAF6jxmkc.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--luApCDjv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627454125586/bAF6jxmkc.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ColorClaim is simple. Everything and amazing favorite color combinations on one big page&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#coverr"&gt;
  &lt;/a&gt;
  &lt;a href="https://coverr.co"&gt;Coverr&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HJlbcwhQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627454159279/Gaa1v0Quv.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HJlbcwhQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627454159279/Gaa1v0Quv.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Download royalty free (for personal and commercial use), unique and beautiful video footage for your website or any project. No attribution required.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pixeden"&gt;
  &lt;/a&gt;
  &lt;a href="https://pixeden.com"&gt;Pixeden&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1jXR8pZq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627454205830/N1OAZ_Bab.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1jXR8pZq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627454205830/N1OAZ_Bab.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pixeden is hard at work providing quality premium and free web resources and graphic design templates. Enjoy!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sketchsheets"&gt;
  &lt;/a&gt;
  &lt;a href="https://sketchsheets.com"&gt;Sketchsheets&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OQWJ-Svr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627454228547/N4EP1CyCF.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OQWJ-Svr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627454228547/N4EP1CyCF.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Sketchsheets is an open source project dedicated to providing free printable templates of the latest devices and platforms for wireframing designs.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#right-font"&gt;
  &lt;/a&gt;
  &lt;a href="https://rightfontapp.com"&gt;Right Font&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1-r8d7HB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627454298954/fWXVMyCrc.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1-r8d7HB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627454298954/fWXVMyCrc.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Professional and beautiful font manager and font organizer app, helps preview, sync, install and organize fonts over iCloud, Dropbox. All-in-one Font Manager for business.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#colorsspark"&gt;
  &lt;/a&gt;
  &lt;a href="https://colorspark.app"&gt;ColorsSpark&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZdPWY5t1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627454324105/3lw5kmMO-.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZdPWY5t1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627454324105/3lw5kmMO-.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Professional and beautiful font manager and font organizer app, helps preview, sync, install and organize fonts over iCloud, Dropbox. All-in-one Font Manager for business.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#flowkit"&gt;
  &lt;/a&gt;
  &lt;a href="https://useflowkit.com"&gt;Flowkit&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h_K8118s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627454439881/x847v5i1t.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h_K8118s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627454439881/x847v5i1t.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;User flows right inside your favorite design tool. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#landbook"&gt;
  &lt;/a&gt;
  &lt;a href="https://land-book.com"&gt;Landbook&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4qJGqV9_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627454468760/IA0wYeQlU.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4qJGqV9_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627454468760/IA0wYeQlU.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Design gallery with the best and most carefully collected websites. We help creatives find inspiration &amp;amp; motivation to do rad stuff.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#colorsinspo"&gt;
  &lt;/a&gt;
  &lt;a href="https://colorsinspo.com"&gt;Colorsinspo&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nul2CAZO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627454634203/MXqKanBTHu.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nul2CAZO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627454634203/MXqKanBTHu.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Colorsinspo is all in one resource to find everything about colors with extreme ease. Also, you will get Freebies, Inspirations, Color Tools, Gradients and thousands of trendy hand-picked color palettes.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#maze"&gt;
  &lt;/a&gt;
  &lt;a href="https://maze.design"&gt;Maze&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hs_WW0XS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627454607504/SZvukG4y7.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hs_WW0XS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627454607504/SZvukG4y7.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Get user feedback with Maze's remote testing platform. Power your product and marketing team with quantifiable insights you can act on, instantly.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#saaspages"&gt;
  &lt;/a&gt;
  &lt;a href="https://saaspages.xyz/"&gt;SaaSPages&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1Q4vbMXT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627454763690/MWOO97osl.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1Q4vbMXT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627454763690/MWOO97osl.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A collection of the best landing pages with a focus on copywriting and design.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#foodies-food"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.foodiesfeed.com/"&gt;Foodies Food&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PeK8fgGb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627456305630/URCS8I2ZH.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PeK8fgGb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627456305630/URCS8I2ZH.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Find food images uploaded by Food Bloggers. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#removalai"&gt;
  &lt;/a&gt;
  &lt;a href="https://removal.ai"&gt;RemovalAI&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DKSKChsE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627455161262/0NgDe7Yzi.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DKSKChsE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627455161262/0NgDe7Yzi.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Remove Image Background Free Using Artificial Intelligence &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#snapshots"&gt;
  &lt;/a&gt;
  &lt;a href="http://snappy-app.com/"&gt;Snapshots&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r-OM5Vgj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627455266385/KLq8lFJTQ.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r-OM5Vgj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627455266385/KLq8lFJTQ.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Snapshots, the smart way.&lt;/p&gt;

&lt;p&gt;Your day-to-day App to instantly work and collaborate on snapshots. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#streamline-emojis"&gt;
  &lt;/a&gt;
  &lt;a href="https://app.streamlinehq.com/emojis/freebies-freemojis"&gt;Streamline Emojis&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BOXoeOpT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627455002333/3pch8vltm.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BOXoeOpT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627455002333/3pch8vltm.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A cute vector emoji set that you can use for free in your applications, websites or publications. Use the vectors for free but you must credit us with a link.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#morguefile"&gt;
  &lt;/a&gt;
  &lt;a href="https://morguefile.com"&gt;MorgueFile&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u5Xmj23J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627455486690/1CHSK6gFJ3.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u5Xmj23J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627455486690/1CHSK6gFJ3.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Free images for creatives, by creatives. A post production file, over 400,000 free stock photos for commercial use.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#new-old-stock"&gt;
  &lt;/a&gt;
  &lt;a href="https://nos.twnsnd.co/"&gt;New Old Stock&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uwNiHT8r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627455049642/pRUO0F_MP.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uwNiHT8r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627455049642/pRUO0F_MP.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Vintage photos from the public archives.&lt;br&gt;
Free of known copyright restrictions.&lt;br&gt;
Recapturing History.&lt;/p&gt;




&lt;p&gt;Best of luck utilizing these free assets on your future visual communication projects!&lt;/p&gt;

&lt;p&gt;Mainly we would give the credits to the people making these resources and we're very proud promiting them all on our channels. If you are looking to add your amazing resource into this list just comment down below, we'll help you.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>programming</category>
      <category>productivity</category>
      <category>resources</category>
    </item>
    <item>
      <title>üëª Jotai - State Simply Managed</title>
      <author>paolotiu</author>
      <pubDate>Tue, 03 Aug 2021 04:38:58 +0000</pubDate>
      <link>https://dev.to/tiu/jotai-state-simply-managed-3p2h</link>
      <guid>https://dev.to/tiu/jotai-state-simply-managed-3p2h</guid>
      <description>&lt;p&gt;As I refine my stack more and more, one of the values I look for is &lt;strong&gt;simplicity&lt;/strong&gt;.&lt;br&gt;
Simplicity allows me to move quick and iterate much faster. Jotai provides that for me.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#why-jotai"&gt;
  &lt;/a&gt;
  Why Jotai?
&lt;/h2&gt;

&lt;p&gt;With so many state management libraries out there, why should Jotai even be considered?&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#structure"&gt;
  &lt;/a&gt;
  Structure
&lt;/h3&gt;

&lt;p&gt;Jotai structures state in a &lt;strong&gt;bottom-up&lt;/strong&gt; approach which consists of atoms.&lt;br&gt;
This is contrary to the way redux/zustand structures their state (a &lt;strong&gt;top-down&lt;/strong&gt; approach).&lt;br&gt;
Your preference may vary, but the way Jotai does it is more straightforward to me.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iEkTH7OZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m25r6p0vrvqelns1jsc0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iEkTH7OZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m25r6p0vrvqelns1jsc0.png" alt="Top down versus bottom up"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#setup"&gt;
  &lt;/a&gt;
  Setup
&lt;/h3&gt;

&lt;p&gt;Using Jotai for the first time is quick --- &lt;strong&gt;&lt;em&gt;very quick&lt;/em&gt;&lt;/strong&gt;. Actually, let me show you.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#first-create-a-primitive-atom"&gt;
  &lt;/a&gt;
  First create a primitive atom
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { atom } from 'jotai';

const countAtom = atom(0);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h4&gt;
  &lt;a href="#then-use-that-atom-anywhere-in-your-component"&gt;
  &lt;/a&gt;
  Then use that atom anywhere in your component
&lt;/h4&gt;

&lt;p&gt;It works as you would expect &lt;code&gt;useState&lt;/code&gt; to work.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { countAtom } from '../jotai.ts'

function Counter() {
  const [count, setCount] = useAtom(countAtom)
  return (
    &amp;lt;h1&amp;gt;
      {count}
      &amp;lt;button onClick={() =&amp;gt; setCount(c =&amp;gt; c + 1)}&amp;gt;one up&amp;lt;/button&amp;gt;
      // ...rest of code here
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#performance"&gt;
  &lt;/a&gt;
  Performance
&lt;/h3&gt;

&lt;p&gt;Jotai was born to solve the extra re-render issue in React.&lt;br&gt;
Though most of the time this won't be an issue when using any popular state management libraries, it's still good.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#benchmarks"&gt;
  &lt;/a&gt;
  Benchmarks
&lt;/h4&gt;

&lt;p&gt;This benchmark ran my machine with Ryzen 5 2600, Windows 11 Insiders Preview inside WSL2.&lt;br&gt;
The write scores are low compared to the original benchmarks.&lt;br&gt;
Most likely it's either because I'm running it inside WSL2, or its a machine difference.&lt;br&gt;
To see the benchmarks ran on another machine go to this &lt;a href="https://github.com/pmndrs/jotai/pull/486#issuecomment-845611351"&gt;pull request&lt;/a&gt;.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;type&lt;/th&gt;
&lt;th&gt;atoms&lt;/th&gt;
&lt;th&gt;ops/s&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;read&lt;/td&gt;
&lt;td&gt;100&lt;/td&gt;
&lt;td&gt;6 519 582&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;read&lt;/td&gt;
&lt;td&gt;1000&lt;/td&gt;
&lt;td&gt;6 524 333&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;read&lt;/td&gt;
&lt;td&gt;10000&lt;/td&gt;
&lt;td&gt;6 594 886&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;write&lt;/td&gt;
&lt;td&gt;100&lt;/td&gt;
&lt;td&gt;394 417&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;write&lt;/td&gt;
&lt;td&gt;1000&lt;/td&gt;
&lt;td&gt;400 393&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;write&lt;/td&gt;
&lt;td&gt;10000&lt;/td&gt;
&lt;td&gt;414 026&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;h3&gt;
  &lt;a href="#extra"&gt;
  &lt;/a&gt;
  Extra
&lt;/h3&gt;

&lt;p&gt;There are a few more things as to why you should consider Jotai.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Typescript oriented&lt;/li&gt;
&lt;li&gt;No string keys needed&lt;/li&gt;
&lt;li&gt;Lightweight (2.4kB minfied + gzipped)&lt;/li&gt;
&lt;li&gt;The mascot (it's cute c'mon)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting Started
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#atoms"&gt;
  &lt;/a&gt;
  Atoms
&lt;/h3&gt;

&lt;p&gt;Atoms are at the core of Jotai, the building blocks to create your state.&lt;br&gt;
I think the &lt;a href="https://docs.pmnd.rs/jotai/basics/primitives"&gt;docs&lt;/a&gt; says it best.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;State in Jotai is a set of atoms. An atom is a piece of state. Unlike useState in React, atoms are not tied to specific components.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;
  &lt;a href="#primitive-atoms"&gt;
  &lt;/a&gt;
  Primitive atoms
&lt;/h3&gt;

&lt;p&gt;These atoms are as simple as it gets. Just pass an initial value.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;atom&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;jotai&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;countAtom&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;atom&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#derived-atoms"&gt;
  &lt;/a&gt;
  Derived atoms
&lt;/h3&gt;

&lt;p&gt;Derived atoms are atoms that depend on other atoms.&lt;br&gt;
Whenever the atoms they depend on changes the value of these atoms also update.&lt;/p&gt;

&lt;p&gt;There are three types of derived atoms:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Read-only atom&lt;/li&gt;
&lt;li&gt;Write-only atom&lt;/li&gt;
&lt;li&gt;Read-Write atom&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To create a derived atom we must pass a read function and an optional write function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;readOnlyAtom&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;atom&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;countAtom&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;writeOnlyAtom&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;atom&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// it's a convention to pass `null` for the first argument&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;update&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// `update` is any single value we receive for updating this atom&lt;/span&gt;
    &lt;span class="c1"&gt;// It can be an object, string, int, etc.&lt;/span&gt;
    &lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;countAtom&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;countAtom&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;update&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;readWriteAtom&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;atom&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;countAtom&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;newValue&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;countAtom&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;newValue&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;// you can set as many atoms as you want at the same time&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;get&lt;/code&gt; is used to read other atom values. It reacts to changes of its dependencies.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;set&lt;/code&gt; is used to write to write an atom value.&lt;br&gt;
It will invoke the write function of the target atom.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#note"&gt;
  &lt;/a&gt;
  Note
&lt;/h3&gt;

&lt;p&gt;The value returned by the &lt;code&gt;atom&lt;/code&gt; function doesn't hold any state.&lt;br&gt;
It creates an atom config. We call these atoms, but it's important to know that these &lt;strong&gt;do not&lt;/strong&gt; hold any state.&lt;br&gt;
We'll see why in our next point.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#provider"&gt;
  &lt;/a&gt;
  Provider
&lt;/h3&gt;

&lt;p&gt;Provider is used to provide state for a component subtree.&lt;br&gt;
This means that we can use atoms in different locations, and they can have different values.&lt;br&gt;
Providers can be used for multiple subtrees, even nested. It works just like the React Context would.&lt;/p&gt;

&lt;p&gt;A Provider is not needed though, without it the atom will use default state it was defined with.&lt;/p&gt;

&lt;p&gt;Here's an example for different Provider situations:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codesandbox.io/s/multiple-providers-xp5j7?fontsize=14&amp;amp;hidenavigation=1&amp;amp;theme=dark"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pzpI10jk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codesandbox.io/static/img/play-codesandbox.svg" alt="Edit Multiple Providers"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#other-goodies"&gt;
  &lt;/a&gt;
  Other Goodies
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#atomwithstorage"&gt;
  &lt;/a&gt;
  atomWithStorage
&lt;/h3&gt;

&lt;p&gt;Jotai's minimalistic core API allows various utils to be built based on it.&lt;br&gt;
My favorite is &lt;a href="https://docs.pmnd.rs/jotai/api/utils#atom-with-storage"&gt;atomWithStorage&lt;/a&gt;.&lt;br&gt;
It allows you to persist values in &lt;code&gt;localStorage&lt;/code&gt;, &lt;code&gt;sessionStorage&lt;/code&gt;, or for React Native &lt;code&gt;AsyncStorage&lt;/code&gt;.&lt;br&gt;
I find it to be perfect for theming.&lt;/p&gt;

&lt;p&gt;The first parameter is the key within your chosen storage.&lt;/p&gt;

&lt;p&gt;The second parameter is the initial value&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useAtom&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;jotai&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;atomWithStorage&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;jotai/utils&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;themeAtom&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;atomWithStorage&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dark&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;light&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;theme&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;light&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Page&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;theme&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setTheme&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useAtom&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;themeAtom&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Welcome&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;theme&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;mode&lt;/span&gt;&lt;span class="o"&gt;!&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt;
        &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
          &lt;span class="nx"&gt;setDarkMode&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;prev&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;prev&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dark&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;light&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dark&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nx"&gt;toggle&lt;/span&gt; &lt;span class="nx"&gt;theme&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#integrations"&gt;
  &lt;/a&gt;
  Integrations
&lt;/h3&gt;

&lt;p&gt;Jotai can integrate with other popular libraries.&lt;br&gt;
Here are some notable ones:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.pmnd.rs/jotai/integrations/query"&gt;React Query&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.pmnd.rs/jotai/integrations/urql"&gt;URQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.pmnd.rs/jotai/integrations/zustand"&gt;Zustand&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.pmnd.rs/jotai/integrations/redux"&gt;Redux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.pmnd.rs/jotai/integrations/xstate"&gt;XState&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#getting-async"&gt;
  &lt;/a&gt;
  Getting Async
&lt;/h3&gt;

&lt;p&gt;Jotai has first-class support for async. It fully leverages React Suspense.&lt;br&gt;
They have &lt;a href="https://docs.pmnd.rs/jotai/basics/async"&gt;fantastic docs&lt;/a&gt;. Check it out!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Jotai is my choice for global state management. Pair it with react-query, and boom!&lt;br&gt;
You have straightforward state management all throughout. Don't be fooled though, simple does not mean powerful.&lt;/p&gt;

&lt;p&gt;How about you? What's your state management solution?&lt;br&gt;
You can &lt;a href="//mailto:me@paolotiu.com"&gt;contact me&lt;/a&gt; any time if you have questions or just wanna chat!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.pmnd.rs/jotai/introduction"&gt;Jotai Docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/dai_shi"&gt;Daishi Kato - Author of Jotai&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>react</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>How to Make Laravel Facades (Tutorial)</title>
      <author>Clean Code Studio</author>
      <pubDate>Tue, 03 Aug 2021 04:10:56 +0000</pubDate>
      <link>https://dev.to/cleancodestudio/how-to-make-laravel-facades-tutorial-10jn</link>
      <guid>https://dev.to/cleancodestudio/how-to-make-laravel-facades-tutorial-10jn</guid>
      <description>&lt;div class="ltag__user ltag__user__id__386677"&gt;
  
    .ltag__user__id__386677 .follow-action-button {
      background-color: #339d15 !important;
      color: #ffffff !important;
      border-color: #339d15 !important;
    }
  
    &lt;a href="/cleancodestudio" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iaD-SiIM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--uL9Viyw2--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/386677/50ab5359-8342-4fc0-961a-04bb95957fa1.jpg" alt="cleancodestudio image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/cleancodestudio"&gt;Clean Code Studio&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/cleancodestudio"&gt;Clean Code Clean Life ~ Simplify&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Today we are going to learn about Laravel Facades. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;"Laravel has these things called facades - which we can understand as static wrappers around instances (objects) or the non-static interface traditionally used to cull on a given classes behavior."&lt;/em&gt; &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Out of the gate Laravel comes with several pre-defined Facades - App, Artisan, Blade, Broadcast, View, etc...&lt;/p&gt;

&lt;p&gt;Most of these Facades come hooked up with a related global helper function.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Examples of facades that have global helpers:&lt;/strong&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The App Facade has a related &lt;code&gt;app()&lt;/code&gt; global helper function. &lt;/li&gt;
&lt;li&gt;The View Facade has a related &lt;code&gt;view()&lt;/code&gt; global helper function.&lt;/li&gt;
&lt;li&gt;The Config Facade has a related &lt;code&gt;config()&lt;/code&gt; global helper function.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/Go0JBT98uOw"&gt;
&lt;/iframe&gt;
&lt;/p&gt;







&lt;h3&gt;
  &lt;a href="#how-do-we-call-a-facade"&gt;
  &lt;/a&gt;
  How do we call a Facade?
&lt;/h3&gt;




&lt;ul&gt;
&lt;li&gt;1. Open ther terminal&lt;/li&gt;
&lt;li&gt;2. Run &lt;code&gt;php artisan tinker&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;3. Add a Backslash &lt;code&gt;\&lt;/code&gt; then the given class with a facade.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;tinker&amp;gt; \DB::get('users')-&amp;gt;all();&lt;/code&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#how-do-we-create-our-own-custom-facades-in-laravel"&gt;
  &lt;/a&gt;
  How do we create our own custom Facades in Laravel?
&lt;/h3&gt;




&lt;ul&gt;
&lt;li&gt;1. Create a traditional &lt;strong&gt;service&lt;/strong&gt; class (A class that provides a service to our application)
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;
&lt;span class="kn"&gt;namespace&lt;/span&gt; &lt;span class="nn"&gt;App\Services\Information&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Info&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;example&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
   &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"Example Information"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Currently to access our &lt;code&gt;Info&lt;/code&gt; class's example() method we would need to do the following.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nv"&gt;$instance&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nc"&gt;App\Services\Information&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nv"&gt;$instance&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;example&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="c1"&gt;// outputs "Example Information"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;What we want to be able to do is to access the same class with same function statically and without needing to import the entire class path.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example: We want to simply be able to do this&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nc"&gt;Info&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;example&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="c1"&gt;// outputs "Example Information" as well&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;1. We've created our service class&lt;/li&gt;
&lt;li&gt;2. We need to create our Facade class

&lt;ul&gt;
&lt;li&gt;That extends &lt;code&gt;Illuminate\Support\Facades\Facade&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Implements a &lt;code&gt;protected static&lt;/code&gt; function called &lt;code&gt;getFacadeAccessor()&lt;/code&gt; that returns the key in our service container that we're going to use to bind our &lt;code&gt;Info&lt;/code&gt; Service class to the Service Container.
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="kn"&gt;namespace&lt;/span&gt; &lt;span class="nn"&gt;App\Services\Information&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Illuminate\Support\Facades\Facade&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;InfoFacade&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;Facade&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;protected&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;getFacadeAccessor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
   &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;'Info'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;3. Now, we need to bind our &lt;code&gt;Info&lt;/code&gt; Service class to the Service Container with a key of &lt;code&gt;Info&lt;/code&gt; since &lt;code&gt;Info&lt;/code&gt; is what is returned by the &lt;code&gt;getFacadeAccessor&lt;/code&gt; method in the &lt;code&gt;InfoFacade&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;
&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class="kn"&gt;namespace&lt;/span&gt; &lt;span class="nn"&gt;App\Providers&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;App\Services\Information\Info&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Illuminate\Support\ServiceProvider&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;AppServiceProvider&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;ServiceProvider&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="cd"&gt;/**
     * Register any application services.
     *
     * @return void
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;register&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Info'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$app&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Info&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Now we can resolve an instance of our &lt;code&gt;Info&lt;/code&gt; class by referencing our service container. When we retrieve something from our service container using the 'Info' key, we'll return a new &lt;code&gt;Info Class&lt;/code&gt; object.&lt;/p&gt;

&lt;p&gt;Our &lt;code&gt;InfoFacade&lt;/code&gt; references the key that is used to bind the &lt;code&gt;Info Class&lt;/code&gt; to our service container - thus it knows how to resolve the instance from our container.&lt;/p&gt;

&lt;p&gt;Now, we have the functionality set up for our Facade. With the Service class binded to the container, and the Facade class referencing the binding that returns an instance of that service class from our container, we can actually use our Facade by referencing the entire class path to our given facade.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nc"&gt;App\Services\Information\InfoFacade&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;example&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="c1"&gt;// outputs "Example Information"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;We're close, so how do we go from needing to reference the entire class path to our facade like so &lt;code&gt;\App\Services\Information\InfoFacade::example()&lt;/code&gt; down to simply needing to call &lt;code&gt;\Info::example()&lt;/code&gt;?&lt;/p&gt;



&lt;p&gt;This step is actually extremely straight forward - we add an alias. We're simply going to create an alias to our Facade class path &lt;code&gt;\App\Services\Information\InfoFacade::class&lt;/code&gt; and that alias is going to be &lt;code&gt;\Info::class&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;How do we add aliases in Laravel? &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;1. We open &lt;code&gt;config/app.php&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;2. We scroll down to our &lt;code&gt;aliases&lt;/code&gt; array. &lt;/li&gt;
&lt;li&gt;3. We add our alias.
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;  &lt;span class="c1"&gt;// config/app.php&lt;/span&gt;

  &lt;span class="c1"&gt;// config settings we scroll past&lt;/span&gt;
  &lt;span class="c1"&gt;// add our 'Info' alias&lt;/span&gt;
  &lt;span class="s1"&gt;'aliases'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="s1"&gt;'Info'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nc"&gt;App\Services\Information\InfoFacade&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
      &lt;span class="s1"&gt;'App'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nc"&gt;Illuminate\Support\Facades\App&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="s1"&gt;'Arr'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nc"&gt;Illuminate\Support\Arr&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="mf"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Now we can open up our terminal, run &lt;code&gt;composer dumpautoload&lt;/code&gt; then run &lt;code&gt;php artisan tinker&lt;/code&gt; and execute:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;tinker&amp;gt; \Info::example();
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;And just like that, it works. That's a Laravel Facade folks.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Laravel Facades Review&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;1. Create a service class (Ex: &lt;code&gt;Info&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;2. Create a facade class (Ex: &lt;code&gt;InfoFacade&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;3. Bind our service class to the service container with any key (Ex: bind our Info class with a key of &lt;code&gt;Info&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;4. Back in our &lt;code&gt;InfoFacade&lt;/code&gt; class extend &lt;code&gt;Illuminate\Support\Facades\Facade&lt;/code&gt; create a &lt;code&gt;protected static&lt;/code&gt; function called &lt;code&gt;getFacadeAccessor&lt;/code&gt; and return the key we bound our Service class to the service container with as a string from that function (Ex: return &lt;code&gt;Info&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;5. Open &lt;code&gt;config/app.php&lt;/code&gt; and add an alias so we can access our Facade with prettier syntax (Ex: &lt;code&gt;config/app.php&lt;/code&gt;'s &lt;code&gt;aliases&lt;/code&gt; array needs to have &lt;code&gt;'Info' =&amp;gt; App\Services\Information\InfoFacade::class&lt;/code&gt; added)&lt;/li&gt;
&lt;li&gt;6. Run &lt;code&gt;composer dumpautoload&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;7. Use &lt;code&gt;\Info::example();&lt;/code&gt; as your custom Facade.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ugpzV9XC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bamvxhq9imqbjbarrag1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ugpzV9XC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bamvxhq9imqbjbarrag1.png" alt="Laravel Facades Summarized"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#laravel-make-facades-package"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.cleancode.studio/topics/packages/laravel-make-facades"&gt;Laravel Make Facades Package&lt;/a&gt;
&lt;/h3&gt;



&lt;ul&gt;
&lt;li&gt;Alternatively, click that link above that says "Laravel Make Facades Package" - follow the instructions to install a package via composer and simply use the newly installed &lt;code&gt;php artisan make:facade&lt;/code&gt; artisan command. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And, that - software engineers of the world - is how Laravel Facades work within Laravel as well as how to create your own. Feel free to watch the entire screencasts for a deeper dive into the details as well as walk through of the package that installs the &lt;code&gt;php artisan make:facade&lt;/code&gt; command to scaffold or generate custom facades without all of the extra leg work.&lt;/p&gt;


&lt;div class="ltag__user ltag__user__id__386677"&gt;
  
    .ltag__user__id__386677 .follow-action-button {
      background-color: #339d15 !important;
      color: #ffffff !important;
      border-color: #339d15 !important;
    }
  
    &lt;a href="/cleancodestudio" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iaD-SiIM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--uL9Viyw2--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/386677/50ab5359-8342-4fc0-961a-04bb95957fa1.jpg" alt="cleancodestudio image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/cleancodestudio"&gt;Clean Code Studio&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/cleancodestudio"&gt;Clean Code Clean Life ~ Simplify&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;a href="https://cleancode.studio/design-patterns"&gt;Structural Design Patterns&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://cleancode.studio/design-patterns"&gt;The Facade Design Pattern&lt;/a&gt;&lt;/p&gt;

</description>
      <category>laravel</category>
      <category>programming</category>
      <category>php</category>
      <category>software</category>
    </item>
    <item>
      <title>SvelteKit &amp; Prisma - A match made in digital heaven</title>
      <author>Mike Nikles</author>
      <pubDate>Tue, 03 Aug 2021 04:05:42 +0000</pubDate>
      <link>https://dev.to/mikenikles/sveltekit-prisma-a-match-made-in-digital-heaven-2g0f</link>
      <guid>https://dev.to/mikenikles/sveltekit-prisma-a-match-made-in-digital-heaven-2g0f</guid>
      <description>&lt;p&gt;&lt;strong&gt;Key Takeaways&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Most production applications need to persist &amp;amp; retrieve data. Prisma is a pretty genius way to achieve that.&lt;/li&gt;
&lt;li&gt;With SvelteKit, you get client &amp;amp; server-side data fetching - the best of both worlds.&lt;/li&gt;
&lt;li&gt;This all even works if JavaScript is disabled in the browser.&lt;/li&gt;
&lt;li&gt;Template GitHub repo: &lt;a href="https://github.com/mikenikles/sveltekit-prisma"&gt;https://github.com/mikenikles/sveltekit-prisma&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-are-you-going-to-learn"&gt;
  &lt;/a&gt;
  What are you going to learn?
&lt;/h2&gt;

&lt;p&gt;We are going to start with a default SvelteKit application. Once initialized, we will learn how to install and configure Prisma before we will use the PrismaClient to perform create, read, update &amp;amp; delete (CRUD) actions against a local SQLite database.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#things-you-need-to-know"&gt;
  &lt;/a&gt;
  Things you need to know
&lt;/h2&gt;

&lt;p&gt;In order to get the most out of this post, I expect you are aware of the following technologies:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://svelte.dev/"&gt;Svelte&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kit.svelte.dev/"&gt;SvelteKit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.prisma.io/"&gt;Prisma&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#the-foundation"&gt;
  &lt;/a&gt;
  The foundation
&lt;/h2&gt;

&lt;p&gt;Let's start with the basics: A &lt;a href="https://kit.svelte.dev/"&gt;SvelteKit&lt;/a&gt; demo app.&lt;/p&gt;

&lt;p&gt;I recommend you first create a GitHub, GitLab or Bitbucket project and start a development environment with &lt;a href="https://www.gitpod.io/"&gt;Gitpod&lt;/a&gt;. Alternatively, you can follow along on your local computer.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm init svelte@next svelte-with-prisma
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When prompted, select the following options:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;"Which Svelte app template?" &lt;code&gt;SvelteKit demo app&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;"Use TypeScript?" &lt;code&gt;Yes&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;"Add ESLint for code linting?" &lt;code&gt;No&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;"Add Prettier for code formatting?" &lt;code&gt;Yes&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When complete, please follow the "Next steps" listed in the terminal to install dependencies and start the SvelteKit demo app.&lt;/p&gt;

&lt;p&gt;If you've followed along so far, you can copy &amp;amp; paste the following commands:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;svelte-with-prisma
npm &lt;span class="nb"&gt;install
&lt;/span&gt;npm run dev &lt;span class="nt"&gt;--&lt;/span&gt; &lt;span class="nt"&gt;--open&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's how quickly you get started with SvelteKit. In your browser, you notice the "TODOS" navigation item. If you play with this list, items are persisted on svelte.dev and deleted after a while.&lt;/p&gt;

&lt;p&gt;Next, we are going to add Prisma to persist todo items in a local SQLite database.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#add-prisma"&gt;
  &lt;/a&gt;
  Add Prisma
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.prisma.io/"&gt;Prisma.io&lt;/a&gt; states "Prisma helps app developers build faster and make fewer errors with an open source ORM for PostgreSQL, MySQL and SQLite."&lt;/p&gt;

&lt;p&gt;From my personal experience, this statement is certainly true. Let's go and experience it for yourself.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#install-amp-initialize-prisma"&gt;
  &lt;/a&gt;
  Install &amp;amp; initialize Prisma
&lt;/h3&gt;

&lt;p&gt;First things first: &lt;code&gt;npm i -D prisma&lt;/code&gt; because, well... without dependencies we won't get very far üòâ.&lt;/p&gt;

&lt;p&gt;Next, we are going to initialize Prisma. For that, we use &lt;a href="https://www.npmjs.com/package/npx"&gt;&lt;code&gt;npx&lt;/code&gt;&lt;/a&gt; to execute commands.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx prisma init
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;‚ö†Ô∏è This currently overwrites an existing &lt;code&gt;.gitignore&lt;/code&gt; file. Keep an eye on &lt;a href="https://github.com/prisma/prisma/issues/8496"&gt;8496&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This creates a &lt;code&gt;prisma&lt;/code&gt; directory at the root of the project. In it, you find the &lt;code&gt;schema.prisma&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;At this point, I recommend you install the &lt;code&gt;prisma.prisma&lt;/code&gt; VS Code extension. It adds syntax highlighting, formatting, auto-completion, jump-to-definition and linting for &lt;code&gt;.prisma&lt;/code&gt; files.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#define-the-raw-todo-endraw-model"&gt;
  &lt;/a&gt;
  Define the &lt;code&gt;Todo&lt;/code&gt; model
&lt;/h3&gt;

&lt;p&gt;Open the &lt;code&gt;prisma/schema.prisma&lt;/code&gt; file and add the following model definition to the end of the file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight toml"&gt;&lt;code&gt;&lt;span class="err"&gt;model&lt;/span&gt; &lt;span class="err"&gt;Todo&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;
  &lt;span class="err"&gt;uid&lt;/span&gt;        &lt;span class="err"&gt;String&lt;/span&gt;  &lt;span class="err"&gt;@id&lt;/span&gt; &lt;span class="err"&gt;@default(cuid())&lt;/span&gt;
  &lt;span class="err"&gt;created_at&lt;/span&gt; &lt;span class="err"&gt;DateTime&lt;/span&gt;
  &lt;span class="err"&gt;text&lt;/span&gt;       &lt;span class="err"&gt;String&lt;/span&gt;
  &lt;span class="err"&gt;done&lt;/span&gt;       &lt;span class="err"&gt;Boolean&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Psst... How do we know what fields to define? Well, we take a peek at the &lt;code&gt;Todo&lt;/code&gt; type definition in &lt;code&gt;src/routes/todos/index.svelte&lt;/code&gt; üòâ.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#configure-a-sqlite-database"&gt;
  &lt;/a&gt;
  Configure a SQLite database
&lt;/h3&gt;

&lt;p&gt;Open the &lt;code&gt;.env&lt;/code&gt; file (that file was created by the &lt;code&gt;npx prisma init&lt;/code&gt; command earlier). In it, set the &lt;code&gt;DATABASE_URL&lt;/code&gt; to &lt;code&gt;"file:./dev.db"&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;We also have to open the &lt;code&gt;prisma/schema.prisma&lt;/code&gt; file to update the &lt;code&gt;datasource.db.provider&lt;/code&gt; to &lt;code&gt;sqlite&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Check &lt;a href="https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#datasourc"&gt;the reference docs&lt;/a&gt; for more details on the above two values and what other databases are supported.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#create-the-database-and-tables"&gt;
  &lt;/a&gt;
  Create the database and tables
&lt;/h3&gt;

&lt;p&gt;We're making great progress! Let's now use the Prisma CLI to create our SQLite database and create a schema based on the &lt;code&gt;Todo&lt;/code&gt; model we defined earlier.&lt;/p&gt;

&lt;p&gt;It's easy:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx prisma db push
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Give that five seconds ‚è≥.&lt;/p&gt;

&lt;p&gt;I recommend you read through the console output, I find it highly interesting. For one, it gives us a good deal of detail about what's going on. However, it also contains the following output which is one of the reasons I'm mind-blown by Prisma:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;‚úî Generated Prisma Client (2.28.0) to ./node_modules/@prisma/client
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So much goodness! Basically, they use the &lt;code&gt;Todo&lt;/code&gt; model to auto-generate a bunch of TypeScript definitions and Javascript code which we are going to import in just a second. In other words, the "Prisma helps app developers build faster and make fewer errors" sentence on the Prisma website is not just some marketing speech, it is truly genius!&lt;/p&gt;

&lt;p&gt;Ok, I'm done being a fanboy about it, let's move on and thanks for your patience there with me üòÖ.&lt;/p&gt;

&lt;p&gt;One last thing, please add &lt;code&gt;prisma/dev.db&lt;/code&gt; to your &lt;code&gt;.gitignore&lt;/code&gt; file since we don't want to commit the dev database to version control.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#use-the-raw-prismaclient-endraw-to-interact-with-the-database"&gt;
  &lt;/a&gt;
  Use the &lt;code&gt;PrismaClient&lt;/code&gt; to interact with the database
&lt;/h3&gt;

&lt;p&gt;The SvelteKit demo app nicely encapsulates all API features in the &lt;code&gt;src/routes/todos/_api.ts&lt;/code&gt; file. To be more precise, the actual CRUD logic happens at &lt;a href="https://api.svelte.dev/todos"&gt;https://api.svelte.dev/todos&lt;/a&gt;. We are going to modify the &lt;code&gt;_api.ts&lt;/code&gt; file slightly to deal with CRUD right there and use the &lt;code&gt;PrismaClient&lt;/code&gt; instead of delegating to a backend API.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Move the &lt;code&gt;Todo&lt;/code&gt; type so we can reuse it&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;First and foremost, let's move the &lt;code&gt;Todo&lt;/code&gt; Typescript type. By default, it's defined and used in the &lt;code&gt;src/routes/todos/index.svelte&lt;/code&gt; file. However, with the changes we're going to make to the API, we are also going to need that type in the &lt;code&gt;src/routes/todos/_api.ts&lt;/code&gt; file.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Cut the &lt;code&gt;Todo&lt;/code&gt; type from &lt;code&gt;src/routes/todos/index.svelte&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Paste it below the &lt;code&gt;import&lt;/code&gt; statements in &lt;code&gt;src/routes/todos/_api.ts&lt;/code&gt;, and prefix it with &lt;code&gt;export&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Use the following import in the &lt;code&gt;src/routes/todos/index.svelte&lt;/code&gt; file: &lt;code&gt;import type { Todo } from "./_api";&lt;/code&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Update the API to use Prisma&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Open the &lt;code&gt;src/routes/todos/_api.ts&lt;/code&gt; file and add the following import:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;PrismaClient&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@prisma/client&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Remember? That's the generated code I was so excited about earlier üòÄ.&lt;/p&gt;

&lt;p&gt;Next, we need a new instance of the &lt;code&gt;PrismaClient&lt;/code&gt; (add this below the &lt;code&gt;import&lt;/code&gt; statements):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;prisma&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;PrismaClient&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Moving right along, it's time to update the &lt;code&gt;api&lt;/code&gt; method signature to tell Typescript that the &lt;code&gt;data&lt;/code&gt; parameter is of type &lt;code&gt;Todo&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;api&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Request&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Locals&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;resource&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;Todo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;base&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;resource&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;method&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;method&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;content-type&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;application/json&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;needs to be replaced with this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;body&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{};&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;status&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;method&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toUpperCase&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;DELETE&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;prisma&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;todo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;where&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;uid&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;resource&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="nx"&gt;status&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;GET&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nx"&gt;body&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;prisma&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;todo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;findMany&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;status&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;PATCH&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nx"&gt;body&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;prisma&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;todo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;update&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;done&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;done&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="na"&gt;where&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;uid&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;resource&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="nx"&gt;status&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;POST&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nx"&gt;body&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;prisma&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;todo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;created_at&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
        &lt;span class="na"&gt;done&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="nx"&gt;status&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;201&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We're getting there üí™. In the &lt;code&gt;if&lt;/code&gt; statement right below the code we've just added, remove the &lt;code&gt;res.ok &amp;amp;&amp;amp;&lt;/code&gt; since we no longer have a &lt;code&gt;res&lt;/code&gt; variable.&lt;/p&gt;

&lt;p&gt;Lastly, change the &lt;code&gt;return&lt;/code&gt; statement to the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;body&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#lets-test"&gt;
  &lt;/a&gt;
  Let's test
&lt;/h2&gt;

&lt;p&gt;Start your SvelteKit demo app with &lt;code&gt;npm run dev&lt;/code&gt; and navigate to &lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt; in your browser. If you use Gitpod, hold CTRL / CMD pressed and click on the &lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt; URL in the terminal, it'll open a new browser window with the SvelteKit demo app.&lt;/p&gt;

&lt;p&gt;Click on the "TODOS" navigation link and add a few todos, rename some, mark others as done.&lt;/p&gt;

&lt;p&gt;In a new terminal, open the Prisma Studio with &lt;code&gt;npx prisma studio&lt;/code&gt;. The studio opens in a new browser tab. Click on the &lt;code&gt;Todo&lt;/code&gt; model and validate that the data matches what you see in the SvelteKit demo app.&lt;/p&gt;

&lt;p&gt;Congratulations üéâ!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bonus - definitely read this&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Disable JavaScript in your browser and test the todo list again. This is how the web is supposed to work - without JavaScript!&lt;/p&gt;

&lt;p&gt;We used to develop websites like that, then we spent a decade thinking it's a great idea to move everything into JavaScript and thanks to Svelte &amp;amp; SvelteKit, we now once again develop web applications that work the way the web was intended to work.&lt;/p&gt;

&lt;p&gt;JavaScript's purpose is to enhance the web experience, not break everything if JavaScript is disabled.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;With a few modifications to a default SvelteKit demo app, we managed to configure Prisma to persist todo items. There is of course a lot more you can do with Prisma, and with SvelteKit for that matter. The source code at &lt;a href="https://github.com/mikenikles/sveltekit-prisma"&gt;https://github.com/mikenikles/sveltekit-prisma&lt;/a&gt; should get you a long way towards your own web app.&lt;/p&gt;

&lt;p&gt;If you found this interesting, you may also like (wow... is this an e-commerce website üòÇ?!) my current project called &lt;a href="https://github.com/webstonehq/webstone"&gt;Webstone&lt;/a&gt;. Webstone is a full-stack web application boilerplate with a CLI to automate tedious tasks like adding new pages, updating the database (of course it uses Prisma üòâ). It's in early development, but do hit that star button on GitHub which helps me get motivated to spend more time on the project üôè.&lt;/p&gt;

&lt;p&gt;üëã&lt;/p&gt;

</description>
      <category>svelte</category>
      <category>prisma</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>A Youtube channel for preparation and guide</title>
      <author>Kunal Garg</author>
      <pubDate>Tue, 03 Aug 2021 03:40:15 +0000</pubDate>
      <link>https://dev.to/gargkunal/a-youtube-channel-for-preparation-and-guide-m1g</link>
      <guid>https://dev.to/gargkunal/a-youtube-channel-for-preparation-and-guide-m1g</guid>
      <description>&lt;p&gt;I have a yt channel on which I done talks about the preparation guide of companies and roadmaps to new tech-stacks along with guide of tech-stacks and real life programming tutorials and master class.&lt;/p&gt;

&lt;p&gt;Many of us want to learn new tech-stack so I come with this solution&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/channel/UCEnZkcgXkfTjNWF-tY1ldag"&gt;https://www.youtube.com/channel/UCEnZkcgXkfTjNWF-tY1ldag&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Have a look and enjoy  &lt;/p&gt;

</description>
      <category>programming</category>
      <category>computerscience</category>
      <category>career</category>
      <category>react</category>
    </item>
  </channel>
</rss>
