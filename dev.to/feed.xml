<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>5 Easy Tools for Content Video Marketing from a Video Marketer</title>
      <author>Explain Ninja</author>
      <pubDate>Mon, 08 Nov 2021 17:30:59 +0000</pubDate>
      <link>https://dev.to/explain_ninja/5-easy-tools-for-content-video-marketing-from-a-video-marketer-2cea</link>
      <guid>https://dev.to/explain_ninja/5-easy-tools-for-content-video-marketing-from-a-video-marketer-2cea</guid>
      <description>&lt;p&gt;Nov 08, 2021 · 7 min read&lt;/p&gt;

&lt;p&gt;Video content is king. But what do you use for compelling content marketing videos as a professional video marketer? We’ve come up with a great top 5 tools list that may come in handy. Check them out. Don’t forget to use &lt;a title="https://explain.ninja/blog/basic-video-editing-with-useful-tips/" href="https://explain.ninja/blog/basic-video-editing-with-useful-tips/" rel="noreferrer noopener"&gt;helpful tips&lt;/a&gt; for video editing basics.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AoS_By4S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://explain.ninja/wp-content/uploads/2021/11/video-marketer.jpg" class="article-body-image-wrapper"&gt;&lt;img title="5 Easy Tools for Content Video Marketing from a Video Marketer 1" src="https://res.cloudinary.com/practicaldev/image/fetch/s--AoS_By4S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://explain.ninja/wp-content/uploads/2021/11/video-marketer.jpg" alt="5 Easy Tools for Content Video Marketing from a Video Marketer 1" width="847" height="595"&gt;&lt;/a&gt;&lt;/p&gt;
Awesome illustrations from &lt;a title="https://dribbble.com/Fireart-d" href="https://dribbble.com/Fireart-d" rel="noreferrer noopener"&gt;Dribbble&lt;/a&gt;



&lt;h2&gt;What are the best video content marketing tools available?&lt;/h2&gt;

&lt;p&gt;If you’re looking to promote your brand through video marketing too, check out these essential video marketing tools that may help you anyway in your everyday marketing videos routine.&lt;/p&gt;

&lt;h3&gt;1)     VidIQ&lt;/h3&gt;

&lt;p&gt;This video marketing tool is an asset for those looking to get the most out of YouTube marketing. Using this tool, marketers can increase their organic reach, track real-time stats, identify the most popular keywords, and more.&lt;/p&gt;

&lt;p&gt;Key features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A quick look at YouTube &lt;a href="https://explain.ninja/blog/the-fullest-lead-generation-trends-review-for-2022/" rel="noreferrer noopener"&gt;KPIs&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Keyword Research&lt;/li&gt;
&lt;li&gt;Research and analysis of competitors&lt;/li&gt;
&lt;li&gt;Email notifications for trending topics&lt;/li&gt;
&lt;li&gt;Compare statistics with competitors&lt;/li&gt;
&lt;li&gt;YouTube channel audit&lt;/li&gt;
&lt;li&gt;Sketching, etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Pros:&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Easy to use&lt;/li&gt;
&lt;li&gt;Real-time data access&lt;/li&gt;
&lt;li&gt;Available as an extension&lt;/li&gt;
&lt;li&gt;Provides detailed information&lt;/li&gt;
&lt;li&gt;Excellent customer support&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Cons:&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Only one user can access the tool&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Used for:&lt;/p&gt;

&lt;p&gt;Video Marketing, YouTube Marketing&lt;/p&gt;

&lt;p&gt;&lt;em&gt;A pro tip&lt;/em&gt;: Visit VidIQ Academy to learn how to grow your YouTube channel.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y7xAVx5c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://explain.ninja/wp-content/uploads/2021/11/%25D0%259E%25D0%25B1%25D0%25B7%25D0%25BE%25D1%2580-Vidiq-696x362-1.jpg" class="article-body-image-wrapper"&gt;&lt;img title="5 Easy Tools for Content Video Marketing from a Video Marketer 2" src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y7xAVx5c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://explain.ninja/wp-content/uploads/2021/11/%25D0%259E%25D0%25B1%25D0%25B7%25D0%25BE%25D1%2580-Vidiq-696x362-1.jpg" alt="5 Easy Tools for Content Video Marketing from a Video Marketer 2" width="696" height="362"&gt;&lt;/a&gt;&lt;/p&gt;
Source: VidIQ



&lt;h3&gt;2)     TubeBuddy&lt;/h3&gt;

&lt;p&gt;This free video marketing tool is available as a mobile app and browser extension. Once configured, it integrates directly into your YouTube channel.&lt;/p&gt;

&lt;p&gt;It helps with SEO for videos and running promotion contests. It has features for everything from research and publishing to optimization and marketing.&lt;/p&gt;

&lt;p&gt;Key features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Sketching&lt;/li&gt;
&lt;li&gt;Scheduling publication&lt;/li&gt;
&lt;li&gt;Social media monitoring on Reddit, Pinterest, and Twitter&lt;/li&gt;
&lt;li&gt;Keyword Research&lt;/li&gt;
&lt;li&gt;Competitor analysis&lt;/li&gt;
&lt;li&gt;Video A / B Testing&lt;/li&gt;
&lt;li&gt;Comment Filters&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Coupons and discounts are also available on their website.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Pros:&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Supports Google Chrome, Safari, Firefox, Opera, and Microsoft Edge.&lt;/li&gt;
&lt;li&gt;Available on Android and iOS&lt;/li&gt;
&lt;li&gt;Amazon Alexa available&lt;/li&gt;
&lt;li&gt;Good customer support&lt;/li&gt;
&lt;li&gt;Detailed reports&lt;/li&gt;
&lt;li&gt;Rich functionality&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Cons:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;For multiple channels, you’ll need multiple TubeBuddy accounts.&lt;/p&gt;

&lt;p&gt;Used for:&lt;/p&gt;

&lt;p&gt;Video Marketing &amp;amp; Video SEO&lt;/p&gt;

&lt;p&gt;&lt;em&gt;A pro tip&lt;/em&gt;: Not sure what to shoot a video with? Use TubeBuddy’s Video Theme Planner to come up with great ideas.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Klq8TObu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://explain.ninja/wp-content/uploads/2021/11/tube.jpg" class="article-body-image-wrapper"&gt;&lt;img title="5 Easy Tools for Content Video Marketing from a Video Marketer 3" src="https://res.cloudinary.com/practicaldev/image/fetch/s--Klq8TObu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://explain.ninja/wp-content/uploads/2021/11/tube.jpg" alt="5 Easy Tools for Content Video Marketing from a Video Marketer 3" width="880" height="462"&gt;&lt;/a&gt;&lt;/p&gt;
Source: TubeBuddy



&lt;h3&gt;3)      Vidyard&lt;/h3&gt;

&lt;p&gt;This one is a content video marketing tool specially designed for businesses to grab their audience’s attention.  It is a great online video platform for businesses that allows increasing leads, accelerating pipeline, and delighting the customers. Companies like Lenovo and Citibank use Vidyard to attract their customers.&lt;/p&gt;

&lt;p&gt;Key features:&lt;/p&gt;

&lt;p&gt;This service may help you with lead generation, corporate communications &amp;amp; employee training.&lt;/p&gt;

&lt;p&gt;You may also make use of a built-in analytics tool that helps measure the success of your video marketing.&lt;/p&gt;

&lt;p&gt;It also provides video hosting capabilities. The videos you create can be easily shared on social media.&lt;/p&gt;

&lt;p&gt;It also integrates with tools like Salesforce or HubSpot to keep track of your leads.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Nnid4qGE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://explain.ninja/wp-content/uploads/2021/11/vinyard.jpg" class="article-body-image-wrapper"&gt;&lt;img title="5 Easy Tools for Content Video Marketing from a Video Marketer 4" src="https://res.cloudinary.com/practicaldev/image/fetch/s--Nnid4qGE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://explain.ninja/wp-content/uploads/2021/11/vinyard.jpg" alt="5 Easy Tools for Content Video Marketing from a Video Marketer 4" width="591" height="393"&gt;&lt;/a&gt;&lt;/p&gt;
Source: Vidyard



&lt;h3&gt;4)     Vyond&lt;/h3&gt;

&lt;p&gt;This platform is one of the main video marketing tools for creating high-quality animated videos. Plus, you can add dialogue to your characters using the lip-sync feature.&lt;/p&gt;

&lt;p&gt;Key features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It allows you to create video content using its library of sounds, props, and templates.&lt;/li&gt;
&lt;li&gt;It is suitable for all web browsers.&lt;/li&gt;
&lt;li&gt;It is one of the fastest editing tools out there.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ykGimFqu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://explain.ninja/wp-content/uploads/2021/11/vyond.jpg" class="article-body-image-wrapper"&gt;&lt;img title="5 Easy Tools for Content Video Marketing from a Video Marketer 5" src="https://res.cloudinary.com/practicaldev/image/fetch/s--ykGimFqu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://explain.ninja/wp-content/uploads/2021/11/vyond.jpg" alt="5 Easy Tools for Content Video Marketing from a Video Marketer 5" width="880" height="467"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;5) Explain Ninja&lt;/h3&gt;

&lt;p&gt;Unlike the abovementioned platforms, this is one of the leading &lt;a href="https://explain.ninja/about/" rel="noreferrer noopener"&gt;animated video production&lt;/a&gt; companies that produce top-notch video explainers for business and other &lt;a href="https://explain.ninja/video-for-startups/" rel="noreferrer noopener"&gt;video content for startups&lt;/a&gt;, corporate companies, and so much more.&lt;/p&gt;

&lt;p&gt;Key services:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://explain.ninja/blog/rfp-for-video-production/" rel="noreferrer noopener"&gt;RFP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;script writing&lt;/li&gt;
&lt;li&gt;voice-overs&lt;/li&gt;
&lt;li&gt;&lt;a href="https://explain.ninja/blog/whats-a-storyboard-importance-of-storyboard-in-filmmaking-and-video/" rel="noreferrer noopener"&gt;storyboarding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;video marketing&lt;/li&gt;
&lt;li&gt;video production and so much more.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;An unlimited number of revisions to provide 100% satisfaction to our clients included voiceovers and other services.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;A pro tip: &lt;/em&gt;Use professional assistance to create effective &lt;a href="https://explain.ninja/blog/how-to-make-resume-video/" rel="noreferrer noopener"&gt;resume videos&lt;/a&gt;, explainers, demos, illustrations, or any other design genre for any business goal.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LBLZtilG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://explain.ninja/wp-content/uploads/2021/11/ninja-logo.jpg" class="article-body-image-wrapper"&gt;&lt;img title="5 Easy Tools for Content Video Marketing from a Video Marketer 6" src="https://res.cloudinary.com/practicaldev/image/fetch/s--LBLZtilG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://explain.ninja/wp-content/uploads/2021/11/ninja-logo.jpg" alt="5 Easy Tools for Content Video Marketing from a Video Marketer 6" width="837" height="515"&gt;&lt;/a&gt;&lt;/p&gt;
Source: &lt;a title="https://explain.ninja/works/" href="https://explain.ninja/works/" rel="noreferrer noopener"&gt;Explain Ninja&lt;/a&gt;



&lt;h2&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://explain.ninja/blog/importance-of-video-marketing-15-reasons-to-use-videos-in-your-marketing-campaigns/" rel="noreferrer noopener"&gt;Video marketing&lt;/a&gt; is one of the most effective marketing techniques that companies use to promote their brand, products, or other achievements. With the help of the easy and fast video marketing tools mentioned above to create stunning video content and engaging leads or audiences will be even easier. Are they familiar? So, your marketing routine isn’t all that boring.&lt;/p&gt;

&lt;p&gt;Can you think of any other helpful video marketing tools for businesses? Let us know in the comments below.&lt;/p&gt;



</description>
      <category>design</category>
      <category>webdev</category>
      <category>tutorial</category>
      <category>css</category>
    </item>
    <item>
      <title>HTML Cheatsheet</title>
      <author>Mursal Furqan</author>
      <pubDate>Mon, 08 Nov 2021 17:11:36 +0000</pubDate>
      <link>https://dev.to/mursalfk/html-cheatsheet-3n8b</link>
      <guid>https://dev.to/mursalfk/html-cheatsheet-3n8b</guid>
      <description>&lt;p&gt;My journey from Back-End Python developer to a Front-End React Developer was not a piece of cake. I have a long way since I joined my first job at &lt;a href="https://diyainteractive.com/"&gt;Diya Interactive&lt;/a&gt; back in Feb, 2021. I have started from the scratch my Front-End journey, and I am still learning.&lt;br&gt;
Based on my own personal learning experience, I have prepared a list of most widely used HTML Tags, that you should know of, if you want to pursue a career as a Front-End Developer.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#html-basic-structure"&gt;
  &lt;/a&gt;
  HTML Basic Structure
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;&amp;lt;!DOCTYPE&amp;gt;&lt;/code&gt; Defines the document type&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; Defines an HTML Document&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; Contains the metadata/information for the document&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt; Defines a title for the document&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; Defines the document's body&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;&amp;lt;!--&lt;/code&gt;...&lt;code&gt;--&amp;gt;&lt;/code&gt; Defines a comment in HTML&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;&amp;lt;hr&amp;gt;&lt;/code&gt; Defines a thematic change in the content with a horizontal rule/line&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt; Inserts a single line break&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#styles-and-semantics"&gt;
  &lt;/a&gt;
  Styles and Semantics
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; Defines style information for a document&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; Defines a section in a document&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; Defines a section in a document on the same line&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;&amp;lt;header&amp;gt;&lt;/code&gt; Defines a header for the document or the section&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;&amp;lt;footer&amp;gt;&lt;/code&gt; Defines a footer for the document or the section&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;&amp;lt;main&amp;gt;&lt;/code&gt; Specifies the main content of the document&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;&amp;lt;section&amp;gt;&lt;/code&gt; Defines a section in a document with references to other elements&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;&amp;lt;article&amp;gt;&lt;/code&gt; Defines an article&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#lists"&gt;
  &lt;/a&gt;
  Lists
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; Defines an unordered list&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;&amp;lt;ol&amp;gt;&lt;/code&gt; Defines an ordered list&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; Defines a list item in both, &lt;code&gt;&amp;lt;ol&amp;gt;&lt;/code&gt; &amp;amp; &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; tags&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;&amp;lt;dl&amp;gt;&lt;/code&gt; Provides a description to the list&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;&amp;lt;dt&amp;gt;&lt;/code&gt; Gives a term/name to the description list&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;&amp;lt;dd&amp;gt;&lt;/code&gt; Defines a description of a term/name in a description list&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--awaBNtIE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://memegenerator.net/img/instances/65123091.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--awaBNtIE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://memegenerator.net/img/instances/65123091.jpg" alt="Bore Meme" width="640" height="480"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I hope I didn't bore you with all this 😉&lt;br&gt;
Next time, we will be covering the basic elements you NEEEEEEEEEED to know about &lt;strong&gt;Forms &amp;amp; Inputs&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>css</category>
    </item>
    <item>
      <title>Join Us for the 2021 GitHub Actions Hackathon on DEV!</title>
      <author>Gracie Gregory (she/her)</author>
      <pubDate>Mon, 08 Nov 2021 17:11:21 +0000</pubDate>
      <link>https://dev.to/devteam/join-us-for-the-2021-github-actions-hackathon-on-dev-4hn4</link>
      <guid>https://dev.to/devteam/join-us-for-the-2021-github-actions-hackathon-on-dev-4hn4</guid>
      <description>&lt;p&gt;&lt;strong&gt;For the second year in a row, GitHub will be hosting the "GitHub Actions Hackathon" right here on DEV!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;From now until December 8th, GitHub is offering an unmissable opportunity to utilize GitHub Actions to benefit open source in exchange for prizes. All participants will need to share a DEV post detailing how they created their amazing workflow with GitHub Actions. We can't wait to see what you create!&lt;/p&gt;

&lt;p&gt;Read on for more details about GitHub Actions and how you can join the hackathon. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-are-github-actions"&gt;
  &lt;/a&gt;
  What Are GitHub Actions?
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/features/actions"&gt;GitHub Actions&lt;/a&gt; are individual tasks that allow you to automate and customize your software development workflows. Actions are located in the same place you store code, collaborate with peers, solve issues, and ship open source software — GitHub! &lt;/p&gt;

&lt;p&gt;For this year’s hackathon, we’re encouraging participants to utilize existing GitHub Actions to create workflows that make sense in the real world. While you are free to create a new Action, the emphasis of this contest is to create practical and interesting solutions other developers can utilize to solve problems with open source. We hope you’ll walk away with a greater understanding of the value of GitHub Actions — for you and the open source community. &lt;/p&gt;

&lt;p&gt;We’re excited to see how you approach this challenge. &lt;a href="https://docs.github.com/en/actions"&gt;More on GitHub Actions here&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#categories"&gt;
  &lt;/a&gt;
  Categories
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;The GitHub Actions Hackathon is calling for projects in these categories:&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Maintainer Must-Haves:&lt;/strong&gt; make the lives of open source maintainers easier.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;DIY Deployments:&lt;/strong&gt; improve the deployment process for open source projects.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Interesting IoT:&lt;/strong&gt; cool projects that integrate with IoT&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Phone Friendly:&lt;/strong&gt; workflows built for Mobile (PWA readiness, iOS/Android)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Wacky Wildcards:&lt;/strong&gt; anything that doesn’t fit in the above category (note, truly wacky submissions are encouraged)&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#why-participate"&gt;
  &lt;/a&gt;
  Why Participate?
&lt;/h3&gt;

&lt;p&gt;Following the momentum of Hacktoberfest last month, we wanted to emphasize GitHub Actions are a perfect open source access point. They allow you to create helpful and logical workflows for your everyday life.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;We also think the prizes on offer make for a pretty compelling case to participate in the GitHub Actions Hackathon 2021 😉&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#prizes"&gt;
  &lt;/a&gt;
  Prizes
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;5 Grand Prize Winners&lt;/strong&gt;&lt;/em&gt; (one in each category):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;$1,500 USD gift card or equivalent&lt;/li&gt;
&lt;li&gt;$300 USD credit to the DEV Shop&lt;/li&gt;
&lt;li&gt;GitHub Swag Pack&lt;/li&gt;
&lt;li&gt;DEV Sticker Pack&lt;/li&gt;
&lt;li&gt;DEV “Actions Hackathon 2021” grand prize winner badge&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;Runner-Up Prizes&lt;/strong&gt;&lt;/em&gt; (10 Total):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;$250 USD gift card or equivalent&lt;/li&gt;
&lt;li&gt;$150 USD credit to the DEV Shop&lt;/li&gt;
&lt;li&gt;GitHub Swag Pack&lt;/li&gt;
&lt;li&gt;DEV Sticker Pack&lt;/li&gt;
&lt;li&gt;DEV “Actions Hackathon 2021” runner-up badge&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;Participants&lt;/strong&gt;&lt;/em&gt; (with a valid project):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;DEV Sticker Pack&lt;/li&gt;
&lt;li&gt;DEV “Actions Hackathon 2021” participant profile badge&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#how-to-participate"&gt;
  &lt;/a&gt;
  How to Participate
&lt;/h3&gt;

&lt;p&gt;There’s already a robust library of &lt;a href="https://github.com/actions"&gt;GitHub Actions&lt;/a&gt;. So, for the 2021 version of this hackathon, we are challenging you to submit workflows by leveraging &lt;a href="https://github.com/marketplace?type=actions"&gt;&lt;em&gt;existing&lt;/em&gt; actions&lt;/a&gt;. That said, you are free to create custom actions if necessary.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#in-order-to-submit-a-valid-project-please-follow-the-submission-process-and-rules-below"&gt;
  &lt;/a&gt;
  In order to submit a valid project, please follow the submission process, and rules below...
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#how-to-submit"&gt;
  &lt;/a&gt;
  How To Submit
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Document your project journey along the way with the &lt;a href="https://dev.to/t/actionshackathon21"&gt;#ActionsHackathon21&lt;/a&gt; tag.&lt;/li&gt;
&lt;li&gt;Submit your project as a DEV post by filling out &lt;a href="https://dev.to/new/actionshackathon21"&gt;this template&lt;/a&gt; to share your workflow/s (.yml) and/or code repository. &lt;/li&gt;
&lt;li&gt;Please make sure the project links to the appropriate GitHub Actions repository, and includes &lt;a href="https://choosealicense.com/"&gt;an open source license&lt;/a&gt; and README.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#additional-rules"&gt;
  &lt;/a&gt;
  Additional Rules
&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;NO PURCHASE NECESSARY. Open only to 18+. Contest entry period ends December 8, 2021 at 11:59 pm PT. Contest is void where prohibited, or restricted by law or regulation. For Official Rules, see &lt;a href="https://dev.to/page/actions-hackathon-2021-rules"&gt;Contest Announcement Page&lt;/a&gt; and &lt;a href="https://dev.to/page/official-hackathon-rules"&gt;General Contest Official Rules&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#community-support"&gt;
  &lt;/a&gt;
  Community Support
&lt;/h4&gt;

&lt;p&gt;The GitHub team will be available to help anyone who runs into issues, or has questions related to GitHub Actions or the hackathon in general. &lt;strong&gt;You can reach the GitHub team by leaving a comment in the &lt;a href="https://dev.to/devteam/github-actions-hackathon-2021-help-thread-1lk0"&gt;GitHub Actions Hackathon help thread&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We also have a &lt;a href="https://dev.to/devteam/share-your-github-actions-hackathon-2021-updates-57k"&gt;community update thread&lt;/a&gt; where you can share your ideas, and gather feedback on your submission. You can use this thread to share your progress, generate community excitement, and get feedback from the community.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#important-dates-%F0%9F%97%93"&gt;
  &lt;/a&gt;
  Important Dates 🗓
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;November 8, 2021: Hackathon Begins!&lt;/li&gt;
&lt;li&gt;December 8, 2021: Hackathon Submission Due at 11:59 PM PST.&lt;/li&gt;
&lt;li&gt;December 17, 2021: Hackathon Winners Announced&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;strong&gt;Have fun with this challenge from our friends at GitHub!&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>actionshackathon21</category>
      <category>actions</category>
      <category>opensource</category>
      <category>github</category>
    </item>
    <item>
      <title>Share your GitHub Actions Hackathon 2021 Updates!</title>
      <author>dev.to staff</author>
      <pubDate>Mon, 08 Nov 2021 17:10:56 +0000</pubDate>
      <link>https://dev.to/devteam/share-your-github-actions-hackathon-2021-updates-57k</link>
      <guid>https://dev.to/devteam/share-your-github-actions-hackathon-2021-updates-57k</guid>
      <description>&lt;p&gt;We’d love to know what you’re building and how things are going throughout the &lt;a href="https://dev.to/devteam/join-us-for-the-2021-github-actions-hackathon-on-dev-4hn4"&gt;GitHub Actions Hackathon 2021&lt;/a&gt; on DEV.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Please use this thread for sharing ideas, gathering feedback, and to get to know other participants in the hackathon!&lt;/strong&gt; &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you have a big update or just worked through a tough problem, we encourage you to publish a standalone post. Just be sure to add the &lt;a href="https://dev.to/t/actionshackathon21"&gt;#actionshackathon21&lt;/a&gt; tag so we can easily find it. &lt;/p&gt;

&lt;p&gt;If you need help with a specific problem, check out the &lt;a href="https://dev.tolink"&gt;help thread&lt;/a&gt; where members of the DEV and GitHub teams are standing by to answer your questions.&lt;/p&gt;

&lt;p&gt;Have a happy hackathon!&lt;/p&gt;

</description>
      <category>actionshackathon21</category>
      <category>githubactions</category>
      <category>opensource</category>
      <category>discuss</category>
    </item>
    <item>
      <title>GitHub Actions Hackathon 2021 Help Thread</title>
      <author>dev.to staff</author>
      <pubDate>Mon, 08 Nov 2021 17:10:34 +0000</pubDate>
      <link>https://dev.to/devteam/github-actions-hackathon-2021-help-thread-1lk0</link>
      <guid>https://dev.to/devteam/github-actions-hackathon-2021-help-thread-1lk0</guid>
      <description>&lt;p&gt;&lt;strong&gt;If you're participating in the &lt;a href="https://dev.to/devteam/join-us-for-the-2021-github-actions-hackathon-on-dev-4hn4"&gt;GitHub Actions Hackathon&lt;/a&gt; and you need some help with your submission, this is the place to be!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you have any questions about how this hackathon works (&lt;em&gt;ex: due dates, how to post your submission, picking a category, etc.&lt;/em&gt;) the DEV team will be available to help out.&lt;/p&gt;

&lt;p&gt;If you are running into issues or get stuck when it comes to GitHub Actions and workflows, &lt;a class="mentioned-user" href="https://dev.to/blackgirlbytes"&gt;@blackgirlbytes&lt;/a&gt;
 from team GitHub will be closely monitoring this thread. Be sure to tag her if you need any GitHub guidance.  &lt;/p&gt;

&lt;blockquote&gt;
&lt;h2&gt;
  &lt;a href="#please-comment-below-if-you-need-asynchronous-assistance-with-the-github-actions-hackathon-2021"&gt;
  &lt;/a&gt;
  Please comment below if you need asynchronous assistance with the GitHub Actions Hackathon 2021!
&lt;/h2&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you'd like to share an update on the progress you're making on your project or if you'd like to connect with other participants, please do so in the &lt;a href="https://dev.to/devteam/share-your-github-actions-hackathon-2021-updates-57k"&gt;community update thread&lt;/a&gt;!&lt;/p&gt;

</description>
      <category>actionshackathon</category>
      <category>githubactions</category>
      <category>opensource</category>
      <category>help</category>
    </item>
    <item>
      <title>Easy Automatic Code Deployment With Git</title>
      <author>brandon_wallace</author>
      <pubDate>Mon, 08 Nov 2021 17:09:13 +0000</pubDate>
      <link>https://dev.to/brandonwallace/easy-automatic-code-deployment-with-git-igp</link>
      <guid>https://dev.to/brandonwallace/easy-automatic-code-deployment-with-git-igp</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;I will show you how to deploy code to a live server easily with Git.&lt;/p&gt;

&lt;p&gt;Let's say you have already &lt;a href="https://dev.to/brandonwallace/deploy-flask-the-easy-way-with-gunicorn-and-nginx-jgc"&gt;deployed your project&lt;/a&gt; to a live server. A few days later you receive valuable feedback on your project from another developer. You decide to make some improvements to the project. You work in your local Git repository to make the changes. You test everything to make sure it is working the way you intended it to work. Then you commit the changes in your code to your local Git repository. Then you push those changes to Github.&lt;/p&gt;

&lt;p&gt;How do you go about getting those improvements to the live server? Would you log into the server and meticulously edit the file manually?&lt;/p&gt;

&lt;p&gt;There is an easy way to deploy code to a live server - use Git. All you need it is the ability to SSH to the server.&lt;/p&gt;

&lt;p&gt;Here is the syntax for the git push command:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$ git push &amp;lt;repository&amp;gt; &amp;lt;branch_name&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git push origin main
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;origin&lt;/code&gt; is first repository that is set up and usually represents the repository connected to the Github website. &lt;/p&gt;

&lt;p&gt;To get code to a live server, I will create a second repository on the live server to push code to. I will call the second repository "prod" to represent the repository on the live production server. &lt;/p&gt;

&lt;p&gt;After pushing code to the "origin" repository I will be able to push to "prod" any code ready for production. &lt;/p&gt;

&lt;p&gt;When I am ready to push code to the production server I run this command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git push prod main
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#on-the-server"&gt;
  &lt;/a&gt;
  On the server
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#set-up-a-repository-on-the-server"&gt;
  &lt;/a&gt;
  Set up a repository on the server.
&lt;/h2&gt;

&lt;p&gt;The first step to set this up is to create a bare repository on the web server where you will run the application.&lt;/p&gt;

&lt;p&gt;SSH to your server. My server has the user &lt;code&gt;brandon&lt;/code&gt; and the IP address &lt;code&gt;123.45.67.89&lt;/code&gt;. So I use this command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ssh brandon@123.45.67.89
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create a directory for the project.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ sudo mkdir /var/www/my_project_repo/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Set the permissions on the directory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ sudo chown $USER:$USER /var/www/my_project_repo
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then move into the directory like this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ cd /var/www/my_project_repo/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create the directory for the actual project with a &lt;code&gt;.git&lt;/code&gt; extension.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ sudo mkdir my_project.git/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Move into the "my_project.git" directory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ cd my_project.git/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Set up the directory as a Git bare repository.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git init --bare
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The directory structure should look like this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ tree --dirsfirst -F
.
├── branches/
├── hooks/
│   ├── applypatch-msg.sample*
│   ├── commit-msg.sample*
│   ├── fsmonitor-watchman.sample*
│   ├── post-update.sample*
│   ├── pre-applypatch.sample*
│   ├── pre-commit.sample*
│   ├── pre-merge-commit.sample*
│   ├── prepare-commit-msg.sample*
│   ├── pre-push.sample*
│   ├── pre-rebase.sample*
│   ├── pre-receive.sample*
│   ├── push-to-checkout.sample*
│   └── update.sample*
├── info/
│   └── exclude
├── objects/
│   ├── info/
│   └── pack/
├── refs/
│   ├── heads/
│   └── tags/
├── config
├── description
└── HEAD
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#creating-a-hook-to-perform-an-action"&gt;
  &lt;/a&gt;
  Creating a hook to perform an action.
&lt;/h2&gt;

&lt;p&gt;A hook will allow you to run a script when a particular action occurs. There are hooks that run on the client and hooks that run on the server. I will set up the server-side hook &lt;code&gt;post-receive&lt;/code&gt; that will run once a git push has finished executing. &lt;/p&gt;

&lt;p&gt;Create a file called &lt;code&gt;post-receive&lt;/code&gt; in the hooks directory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ touch hooks/post-receive
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Use any text editor to edit the post-receive file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ vim hooks/post-receive
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Add the following content, change the paths to reflect your set up.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#!/bin/sh
git --work-tree=/var/www/my_project_repo/ --git-dir=/var/www/my_project_repo/my_project.git checkout -f main
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The post-receive script is not executable.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ ls -lF hooks/post-receive 
-rw------- 1 brandon brandon 0 Nov  2 21:19 hooks/post-receive
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Make the script executable by running the &lt;code&gt;chmod&lt;/code&gt; command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ chmod +x hooks/post-receive

$ ls -lF hooks/post-receive 
-rwx------ 1 brandon brandon 0 Nov  2 21:19 hooks/post-receive*
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#on-the-client-machine"&gt;
  &lt;/a&gt;
  On the client machine
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#connect-your-local-repository-to-the-server-repository"&gt;
  &lt;/a&gt;
  Connect your local repository to the server repository.
&lt;/h2&gt;

&lt;p&gt;On the client machine where my local repository is located I will connect that repository to the one I created on the live server.&lt;/p&gt;

&lt;p&gt;Create a local repository with the same name as the directory on the server minus the &lt;code&gt;.git&lt;/code&gt; extension.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ mkdir my_project/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Move into the directory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ cd my_project/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Set up git in the project directory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git init

$ touch .gitignore readme.md LICENSE
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Add content to the readme.md file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ echo '# My Auto Deploy Project' &amp;gt;&amp;gt; readme.md
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Add a simple index.html file to the project.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ vim index.html
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Add the following content to the index.html file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang="en"&amp;gt;

  &amp;lt;head&amp;gt;

    &amp;lt;meta charset="UTF-8"&amp;gt;
    &amp;lt;meta name="viewport" content="width=device-width,initial-scale=1" /&amp;gt;
    &amp;lt;meta name="description" content="My auto deploy project."&amp;gt;
    &amp;lt;link rel="stylesheet" href="style.css"&amp;gt;
    &amp;lt;title&amp;gt;Hello World!&amp;lt;/title&amp;gt;

  &amp;lt;/head&amp;gt;

  &amp;lt;body&amp;gt;

    &amp;lt;h1&amp;gt;Hello World!&amp;lt;/h1&amp;gt;

  &amp;lt;/body&amp;gt;

&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Add all the file to Git and commit the changes.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git add --all

$ git commit -m "First commit"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create a new repository on Github without the readme.md, .gitignore, or LICENSE. We have already created the typical files for a Github repository. Name the Github repository the same as the local repository. My local repository is called &lt;code&gt;my_project&lt;/code&gt; so I use the same name to create the Github repository. See screenshot below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ThytOwna--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/TwFkrsDr/create-gh-repo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ThytOwna--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/TwFkrsDr/create-gh-repo.png" alt="create-gh-repo.png" width="801" height="789"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Connect the local repository to Github. Make sure the branch is called &lt;code&gt;main&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git remote add origin git@github.com:brandon-wallace/my_project.git

$ git branch -M main
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Set &lt;code&gt;origin&lt;/code&gt; as the default repository to push to.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git push -u origin main

Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 4 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (5/5), 550 bytes | 550.00 KiB/s, done.
Total 5 (delta 0), reused 0 (delta 0), pack-reused 0
To github.com:brandon-wallace/my_project.git
 * [new branch]      main -&amp;gt; main
Branch 'main' set up to track remote branch 'main' from 'origin'.

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I have successfully connected the local repository to Github. Now I will connect the local repository to the live production server. My server has the IP address &lt;code&gt;123.45.67.89&lt;/code&gt; so I run this command with the full path to the &lt;code&gt;my_project.git&lt;/code&gt; directory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git remote add prod brandon@123.45.67.89:/var/www/my_project_repo/my_project.git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When I want to push code to the production server. I run this command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git push prod main

Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 4 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (5/5), 550 bytes | 550.00 KiB/s, done.
Total 5 (delta 0), reused 0 (delta 0), pack-reused 0
remote: Switched to branch 'main'
To 123.45.67.89:/var/www/my_project_repo/my_project.git
 * [new branch]      main -&amp;gt; main
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;View the remotes. This shows that there are two remote repositories available, &lt;code&gt;prod&lt;/code&gt; and &lt;code&gt;origin&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git remote -v

prod    brandon@123.45.67.89:my_project.git (fetch)
prod    brandon@123.45.67.89:my_project.git (push)
origin  https://github.com/brandon-wallace/my_project.git (fetch)
origin  https://github.com/brandon-wallace/my_project.git (push)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I will make some changes to the project and push those to the production server.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ touch style.css
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Add some content to the CSS file with any text editor.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ vim sytle.css

# Example content

html {
    font-size: 100%;
}

body {
    background: #FFFFFF;
    font-family: sans-serif;
    font-weight: 400;
    line-height: 1.75;
    color: #000000;
}

h1 {
    margin-top: 0;
    font-size: 3.052rem;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Add the new CSS file. Commit the changes to the repository.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git add style.css

$ git commit -m "Add CSS file"

# Output

[main 8881680] Add CSS file
 1 files changed, 27 insertions(+), 3 deletions(-)
 create mode 100644 style.css
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Right now, on the server I can see four files in &lt;code&gt;my_project_repo&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ /var/www/my_project_repo $ ls -l
total 12
-rw-r--r-- 1 brandon brandon  319 Nov  7 10:25 index.html
-rw-r--r-- 1 brandon brandon    0 Nov  7 10:25 LICENSE
drwxr-xr-x 8 brandon brandon 4096 Nov  7 10:25 my_project.git
-rw-r--r-- 1 brandon brandon   25 Nov  7 10:25 readme.md

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Push the changes to the production server.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git push prod main

Enumerating objects: 6, done.
Counting objects: 100% (6/6), done.
Delta compression using up to 4 threads
Compressing objects: 100% (4/4), done.
Writing objects: 100% (4/4), 623 bytes | 623.00 KiB/s, done.
Total 4 (delta 2), reused 0 (delta 0), pack-reused 0
remote: Already on 'main'
To 123.45.67.89:/var/www/my_project_repo/my_project.git
   083f700..8881680  main -&amp;gt; main
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now on the server I can see the &lt;code&gt;style.css&lt;/code&gt; I just pushed to the &lt;code&gt;prod&lt;/code&gt; repository running on the live server.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;/var/www/my_project_repo $ ls -l
total 16
-rw-r--r-- 1 brandon brandon  362 Nov  7 10:56 index.html
-rw-r--r-- 1 brandon brandon    0 Nov  7 10:25 LICENSE
drwxr-xr-x 8 brandon brandon 4096 Nov  7 10:56 my_project.git
-rw-r--r-- 1 brandon brandon   25 Nov  7 10:25 readme.md
-rw-r--r-- 1 brandon brandon  365 Nov  7 10:56 style.css
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#troubleshooting"&gt;
  &lt;/a&gt;
  Troubleshooting
&lt;/h1&gt;

&lt;p&gt;First, check carefully for spelling errors is highly recommended.&lt;/p&gt;

&lt;p&gt;If you get &lt;code&gt;-bash: git: command not found&lt;/code&gt; error install &lt;code&gt;git&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ sudo apt update

$ sudo apt install git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You get the error:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ssh: Could not resolve hostname github.com: Temporary failure in name resolution
fatal: Could not read from remote repository...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You need to set up SSH keys on Github.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;I hope you learn something new by reading this article. Using Git you can easily push changes to a project to a live production server. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vGkQ12x6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/brandon-wallace" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vGkQ12x6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/brandon-wallace" alt="Github" width="" height=""&gt;&lt;/a&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z2581IpV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/brandonwallace" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z2581IpV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/brandonwallace" alt="DEV.to" width="" height=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Feel free to leave feedback, comments, or suggestions.&lt;/p&gt;

</description>
      <category>git</category>
      <category>tutorial</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Announcing Appwrite Web SDK 5.0</title>
      <author>Torsten Dittmann</author>
      <pubDate>Mon, 08 Nov 2021 16:55:55 +0000</pubDate>
      <link>https://dev.to/appwrite/announcing-appwrite-web-sdk-50-58ek</link>
      <guid>https://dev.to/appwrite/announcing-appwrite-web-sdk-50-58ek</guid>
      <description>&lt;p&gt;We are very excited to announce the release of Appwrite's Web SDK version 5.0 with complete TypeScript coverage. It is now available on &lt;a href="https://www.npmjs.com/package/appwrite"&gt;npm&lt;/a&gt;. With this version, each method will now return proper TypeScript definitions. &lt;/p&gt;

&lt;p&gt;We hope this will help a lot of developers out there who are using our Web SDK in combination with TypeScript for building their applications. Having response definitions means you will know what method will return and what properties are available to you via autocomplete without leaving your IDE.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setup"&gt;
  &lt;/a&gt;
  ⚙️ Setup
&lt;/h2&gt;

&lt;p&gt;First, you need to install the Appwrite SDK or upgrade it to the latest version via &lt;code&gt;npm&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install &lt;/span&gt;appwrite@5.0.0
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The next step is to import, instantiate and configure the SDK:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Appwrite&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;appwrite&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;sdk&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Appwrite&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;sdk&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setEndpoint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;http://localhost/v1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setProject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;PROJECT_ID&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#account"&gt;
  &lt;/a&gt;
  👥 Account
&lt;/h2&gt;

&lt;p&gt;Let's start with the simplest example by getting the current user using the &lt;code&gt;account.get()&lt;/code&gt; method. In previous versions of the SDK, this method returned a &lt;code&gt;unknown&lt;/code&gt; type, but now you don't need to create your own definitions anymore, since the SDK will offer them out-of-the-box.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;sdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;account&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;user&lt;/code&gt; object will now already contain all possible properties via a TypeScript definition. But there is more, since the &lt;code&gt;User&lt;/code&gt; model also contains the &lt;code&gt;prefs&lt;/code&gt; property containing all of the User's preferences. These can be set by the client, which means the SDK cannot provide you with typings yet.&lt;/p&gt;

&lt;p&gt;Let's assume you store the users preferred theme for your application in their preferences. You will have &lt;code&gt;Type&lt;/code&gt; like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;MyPreferences&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;theme&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;light&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dark&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The new SDK allows you to pass &lt;code&gt;MyPreferences&lt;/code&gt; via a Generic - this allows you to pass your own structure to the method.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;sdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;account&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;MyPreferences&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The new &lt;code&gt;user&lt;/code&gt; object returned from &lt;code&gt;account.get()&lt;/code&gt; using a generic is now automatically extended by your &lt;code&gt;MyPreferences&lt;/code&gt; on the &lt;code&gt;prefs&lt;/code&gt; property.&lt;/p&gt;

&lt;p&gt;Generics can be used on any method, which can return a data structure that is allowed to be extended by the developer like the User's preferences or documents from the Database service.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#database"&gt;
  &lt;/a&gt;
  📀 Database
&lt;/h2&gt;

&lt;p&gt;Talking about Database, let's move on to some examples how the new SDK can be used in combination with it.&lt;/p&gt;

&lt;p&gt;Assuming we have a collection containing Movies with following type:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Movie&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;published&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;genres&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[];&lt;/span&gt;
    &lt;span class="nl"&gt;gotAnOscar&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;boolean&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;These are all properties that can be set as rules in a collection, but by default documents in Appwrite come with values like &lt;code&gt;$id&lt;/code&gt;, &lt;code&gt;$permissions&lt;/code&gt; and &lt;code&gt;$collection&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;We can easily import the &lt;code&gt;Models&lt;/code&gt; from the SDK and merge &lt;code&gt;Movie&lt;/code&gt; with the &lt;code&gt;Document&lt;/code&gt; type.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Models&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;appwrite&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Movie&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;published&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;genres&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[];&lt;/span&gt;
    &lt;span class="nl"&gt;gotAnOscar&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;boolean&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;Models&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Document&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now that we have all our TypeScript definitions in place, let's use them by retrieving a Document from the Database using &lt;code&gt;database.getDocument()&lt;/code&gt;. We can use Generics to tell TypeScript to use our &lt;code&gt;Movie&lt;/code&gt; type:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;avatar&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;sdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;database&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getDocument&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Movie&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;movies&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;avatar&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For example with using the &lt;code&gt;database.listDocuments&lt;/code&gt;, which will have 2 pre-defined properties called &lt;code&gt;sum&lt;/code&gt; and &lt;code&gt;documents&lt;/code&gt;,  the type passed as a generic will be used for &lt;code&gt;documents&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;movies&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;sdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;database&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listDocuments&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Movie&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;movies&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;movies&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// The sum of all documents.&lt;/span&gt;
&lt;span class="nx"&gt;movies&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;documents&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Will use an array of our Movie type.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This can also be used with the &lt;code&gt;subscribe()&lt;/code&gt; method for real-time updates:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;sdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;subscribe&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Movie&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;collection.movies&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Will use the Movie type.&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can try it out by yourself using this &lt;a href="https://codesandbox.io/s/appwrite-web-sdk-5-0-example-tkwrm?file=/index.ts"&gt;StackBlitz&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The heavily improved TypeScript support of the new Web SDK allow you to kickstart the development of your Application and keep you focused without leaving your IDE.&lt;/p&gt;

&lt;p&gt;If you have any issues or questions feel free to reach us on &lt;a href="https://appwrite.io/discord"&gt;our discord&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#learn-more"&gt;
  &lt;/a&gt;
  📚 Learn more
&lt;/h2&gt;

&lt;p&gt;You can use following resources to learn more and get help&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;🚀 &lt;a href="https://appwrite.io/docs/getting-started-for-web"&gt;Getting Started Tutorial&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;📜 &lt;a href="https://appwrite.io/docs"&gt;Appwrite Docs&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;💬 &lt;a href="https://appwrite.io/discord"&gt;Discord Community&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Cover by &lt;a href="https://www.pexels.com/@kevin-ku-92347?utm_content=attributionCopyText&amp;amp;utm_medium=referral&amp;amp;utm_source=pexels"&gt;Kevin Ku&lt;/a&gt; from &lt;a href="https://www.pexels.com/photo/data-codes-through-eyeglasses-577585/?utm_content=attributionCopyText&amp;amp;utm_medium=referral&amp;amp;utm_source=pexels"&gt;Pexels&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Rails, Hotwire, CableReady, and StimulusReflex are BFFs</title>
      <author>Hopsoft</author>
      <pubDate>Mon, 08 Nov 2021 16:27:46 +0000</pubDate>
      <link>https://dev.to/hopsoft/rails-hotwire-cableready-and-stimulusreflex-are-bffs-4a89</link>
      <guid>https://dev.to/hopsoft/rails-hotwire-cableready-and-stimulusreflex-are-bffs-4a89</guid>
      <description>&lt;p&gt;&lt;strong&gt;Enforcing strict RESTful routes and controllers is perhaps the most impactful technique that influenced my usage of &lt;a href="https://rubyonrails.org/"&gt;Ruby on Rails&lt;/a&gt; for the better.&lt;/strong&gt; I cannot overstate how much I love traditional &lt;a href="https://en.wikipedia.org/wiki/Representational_state_transfer"&gt;REST&lt;/a&gt; semantics and encourage their usage on every team that I have influence over. &lt;/p&gt;

&lt;p&gt;Having said that, I also think rigidly applying this pattern to smaller and smaller use cases has diminishing returns. One example of a smaller use case is &lt;a href="https://turbo.hotwired.dev/reference/streams"&gt;TurboFrames&lt;/a&gt;. TurboFrames are great and I use them along with their attendant REST semantics, but I try to be very thoughtful about how far I take this approach.&lt;/p&gt;

&lt;p&gt;For example, libs like &lt;a href="https://cableready.stimulusreflex.com/"&gt;CableReady&lt;/a&gt; and &lt;a href="https://github.com/stimulusreflex/futurism"&gt;Futurism&lt;/a&gt; can lazy load partials so unobtrusively that the notion of adhering to the formality of REST, &lt;em&gt;with its attendant new routes, controllers, etc...&lt;/em&gt;, would be far too much ceremony for matching use cases.&lt;/p&gt;

&lt;p&gt;One of the original goals of CableReady and &lt;a href="https://docs.stimulusreflex.com/"&gt;StimulusReflex&lt;/a&gt; was to work seamlessly with traditional HTTP server rendered Rails apps &lt;em&gt;(pre Hotwire)&lt;/em&gt; without requiring significant architectural changes or forcing a proliferation of new routes, controllers, or views/partials etc... We basically wanted a way to gradually introduce robust real-time and reactive behavior into traditional Rails apps with as little friction as possible. The idea being to allow people to leverage the work that had already been done rather than forcing a rethinking of the app. I view CableReady/StimulusReflex as as: &lt;strong&gt;REST + &lt;a href="https://en.wikipedia.org/wiki/Remote_procedure_call"&gt;RPC&lt;/a&gt; sprinkles + async server triggered DOM behavior&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://hotwired.dev/"&gt;Hotwire&lt;/a&gt;, while very cool, introduces new concepts that impose a higher cognitive cost and forces you to rethink how to best structure a Rails app. I view Hotwire as: &lt;strong&gt;REST semantics for everything + async server triggered CRUD updates&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;There are pros and cons to each approach. Hotwire has more obvious and strict conventions, while CableReady and StimulusReflex adhere more to Ruby's philosophy of flexibility and expressiveness.&lt;/p&gt;

&lt;p&gt;For me, using both Hotwire and CableReady + StimulusReflex techniques together is like &lt;em&gt;&lt;a href="https://en.wikipedia.org/wiki/You_can't_have_your_cake_and_eat_it"&gt;"having my cake and eating it too."&lt;/a&gt;&lt;/em&gt; Admitedly, this is a power move and requires some experience to know when to apply each approach.&lt;/p&gt;

&lt;p&gt;FYI - There are some great conversations on the &lt;a href="https://discord.gg/stimulus-reflex"&gt;StimulusReflex Discord&lt;/a&gt; server about this stuff. We'd love it if you joined us.&lt;/p&gt;




&lt;p&gt;Also, I should note how much I dislike the umbrella marketing term &lt;strong&gt;"Hotwire"&lt;/strong&gt; as it forces a false dichotomy in this conversation. Both CableReady and StimulusReflex are designed to work well with Hotwire libs and even have hard dependencies on some of them.&lt;/p&gt;

</description>
      <category>rails</category>
      <category>hotwire</category>
      <category>stimulusreflex</category>
      <category>cableready</category>
    </item>
    <item>
      <title>How to Subscribe to and Receive Push Notifications from YouTube’s API using Typescript and Nodejs</title>
      <author>Chiamaka Ojiyi</author>
      <pubDate>Mon, 08 Nov 2021 16:25:11 +0000</pubDate>
      <link>https://dev.to/algodame/how-to-subscribe-to-and-receive-push-notifications-from-youtubes-api-using-typescript-and-nodejs-2gik</link>
      <guid>https://dev.to/algodame/how-to-subscribe-to-and-receive-push-notifications-from-youtubes-api-using-typescript-and-nodejs-2gik</guid>
      <description>&lt;p&gt;Youtube’s API provides developers with a way to get push notifications for when specific changes occur on a youtube channel. Youtube’s API sends out these notifications through a PubSubHubbub webhook protocol.&lt;/p&gt;

&lt;p&gt;Webhooks are used to send near-real-time data to applications. &lt;/p&gt;

&lt;p&gt;Let’s say you have an application that sends out emails to a mailing list and you only want to send out these emails whenever Beyonce posts a video on her channel. To do this, you can use Youtube’s webhooks to subscribe to push notifications on Beyonce’s channel. Whenever Beyonce posts a video, Youtube will tunnel down a request to your server to inform you of this event.&lt;/p&gt;

&lt;p&gt;In order to get the push notifications from Youtube’s webhook, you need to provide Youtube with a URL which you will use to receive the data for whenever a new video is uploaded on a specific channel. This URL is called a webhook call-back URL.&lt;/p&gt;

&lt;p&gt;Youtube only sends out push notifications for the following events on a channel:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;New video is uploaded&lt;/li&gt;
&lt;li&gt;A video’s title is updated&lt;/li&gt;
&lt;li&gt;A video’s description is updated&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Youtube sends out the push notifications to your call-back URL in xml format.&lt;/p&gt;

&lt;p&gt;In this tutorial, I’ll show you how you can set up a call-back server to subscribe to and receive push notifications from Youtube’s API using typescript and nodejs.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#project-set-up"&gt;
  &lt;/a&gt;
  Project set up
&lt;/h3&gt;

&lt;p&gt;In your project folder, run &lt;code&gt;npm init -y&lt;/code&gt; in your terminal to create a package.json file&lt;/p&gt;

&lt;p&gt;Run &lt;code&gt;npx tsc --init&lt;/code&gt; to create a tsc file. This is a typescript configuration file.&lt;/p&gt;

&lt;p&gt;In the script section of your package.json, add this bit of code for running the application.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dev&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;tsc&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;start&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ts-node index&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#install-dependencies"&gt;
  &lt;/a&gt;
  Install dependencies
&lt;/h3&gt;

&lt;p&gt;Run &lt;code&gt;npm i @types/express, dotenv, express, ts-node, typescript, youtube-notification&lt;/code&gt; to install dependencies.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lets-code-the-application"&gt;
  &lt;/a&gt;
  Let's code the application
&lt;/h3&gt;

&lt;p&gt;Create a file and name it &lt;code&gt;index.ts&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;dotenv&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dotenv&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;dotenv&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;YouTubeNotifier&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;youtube-notification&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;6050&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;baseUrl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://strong-yak-75.loca.lt&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;channelId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;CHANNEL_ID&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;notifier&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;YouTubeNotifier&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;hubCallback&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;baseUrl&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/youtube/notifications`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/youtube/notifications&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;notifier&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listener&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;port&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`App listening at http://localhost:&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;port&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="nx"&gt;notifier&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;subscribe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;channelId&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;notifier&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;subscribe&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Subscribed&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;notifier&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;notified&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;New Video&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create a &lt;code&gt;.env&lt;/code&gt; file in the root of your project and add your youtube channel ID there.&lt;/p&gt;

&lt;p&gt;Add the channel ID in this format:&lt;br&gt;
&lt;code&gt;CHANNEL_ID="YOUR_CHANNEL_ID_GOES_HERE"&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;To get the channel ID of a youtube channel, navigate to the channel on youtube. The browser address bar should have a URL in the format below.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;https://www.youtube.com/channel/UC8butISFwT-Wl7EV0hUK0BQ&lt;/code&gt; &lt;/p&gt;

&lt;p&gt;This &lt;code&gt;UC8butISFwT-Wl7EV0hUK0BQ&lt;/code&gt; part is the channel ID.&lt;/p&gt;

&lt;p&gt;To get the notifications from Youtube, your application will need to be deployed in order to have a https forwarding URL. Since we are still developing locally, we'll use a secondary service called Localtunnel.&lt;/p&gt;

&lt;p&gt;Locatunnel allows us to easily share a web service on our local development machine with the world.&lt;/p&gt;

&lt;p&gt;To start your server, go to your terminal and run:&lt;br&gt;
&lt;code&gt;npm start&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;While your server is running, open another terminal window and run: &lt;/p&gt;

&lt;p&gt;&lt;code&gt;npx localtunnel --port "ADD_YOUR_PORT_NUMBER_HERE"&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;A https URL will be printed on your terminal. Copy the URL and add it as the baseUrl in your index file. Do not close the terminal running localtunnel.&lt;/p&gt;

&lt;p&gt;Restart your server to reflect the edit you just made. You should have two terminals up.&lt;/p&gt;

&lt;p&gt;Now whenever a new video is uploaded to the specific youtube channel, the details of the video will be logged to the terminal where your serve is currently running on.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#some-helpful-debugging-tips"&gt;
  &lt;/a&gt;
  Some helpful debugging tips
&lt;/h3&gt;

&lt;p&gt;You may need to diagnose your subscription to be sure you are subscribed or if errors occur when Youtube tries to send you push notifications.&lt;/p&gt;

&lt;p&gt;To run this diagnosis, navigate to the &lt;a href="https://pubsubhubbub.appspot.com/subscribe"&gt;PubSubHubBub page&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Go to the Subscriber Diagnostics section of the page. Add your call-back URL and the topic URL.&lt;/p&gt;

&lt;p&gt;Topic URL:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;https://www.youtube.com/xml/feeds/videos.xml?channel_id=YOUR_CHANNEL_ID&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Click "Get Info" to run the diagnosis. &lt;/p&gt;

&lt;p&gt;Finally, here's the &lt;a href="https://github.com/AlgoDame/Youtube-PubSubHubBub-Notification-Application"&gt;Github repo&lt;/a&gt; for this article. You are welcome to fork and star the repo.&lt;/p&gt;

&lt;p&gt;Thank you for reading.&lt;/p&gt;

</description>
      <category>typescript</category>
      <category>webdev</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Thing to know before developing your cyber security solution</title>
      <author>hridyesh bisht</author>
      <pubDate>Mon, 08 Nov 2021 16:16:46 +0000</pubDate>
      <link>https://dev.to/aws-builders/thing-to-know-before-developing-your-cyber-security-solution-2onk</link>
      <guid>https://dev.to/aws-builders/thing-to-know-before-developing-your-cyber-security-solution-2onk</guid>
      <description>&lt;p&gt;According to the Cybersecurity and Infrastructure Security Agency(CISA)," Cybersecurity is the art of protecting networks, devices, and data from unauthorized access or criminal use and the practice of ensuring confidentiality, integrity, and availability of information.". A few terms to know before going ahead,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Privacy means maintaining confidentiality.&lt;/li&gt;
&lt;li&gt;Anonymity means no body knows who you are?&lt;/li&gt;
&lt;li&gt;Pseudonymity means using an alias.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;How much of your daily life relies on technology? How much of your personal information is stored on a device or a server?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;There are many risks, some more serious than others. Among these dangers is malware erasing your entire system, an attacker breaking into your system and altering files, an attacker using your computer to attack others, or an attacker stealing your credit card information and making unauthorized purchases. There is no guarantee that even with the best precautions some of these things won't happen to you, but there are steps you can take to minimize the chances.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--q56r47e1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://programmerprodigycode.files.wordpress.com/2021/10/image-1.png%3Fw%3D651" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q56r47e1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://programmerprodigycode.files.wordpress.com/2021/10/image-1.png%3Fw%3D651" alt="" width="651" height="612"&gt;&lt;/a&gt;Credits: &lt;a href="https://res.cloudinary.com/dnlarfkn3/image/upload/v1587704215/quasarops/Risk_Triad_Vulnerability_Impact_Threat_ajundu.png"&gt;https://res.cloudinary.com/dnlarfkn3/image/upload/v1587704215/quasarops/Risk_Triad_Vulnerability_Impact_Threat_ajundu.png&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Here we classify risk being a combination of three factors,&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Assets are items having value to the firm such as data, servers, software, network equipment, ...&lt;/li&gt;
&lt;li&gt;Threats are conditions that can cause damage to an asset such as cyber attack, breach of integrity attack, malware, disclosure of confidential data, natural disasters,...&lt;/li&gt;
&lt;li&gt;Vulnerabilities are weakness in the system design, implementation, software code or lack of preventive mechanism such as bugs, physical security, ...&lt;/li&gt;
&lt;/ol&gt;

&lt;pre class="wp-block-syntaxhighlighter-code"&gt;Risk= Vulnerablity * threat * Consequences&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Our goal should be to minimise risk to an acceptable level, as eliminating all risks is not feasible.&lt;/strong&gt;&lt;/p&gt;

&lt;h4 id="how-to-make-sure-our-data-is-secure"&gt;How to make sure our data is secure?&lt;/h4&gt;

&lt;p&gt;We usually use the CIA Triad where, &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;C stands for Confidentiality("How secure is your data?"):  &lt;ol&gt;
&lt;li&gt;You could use encryption(at rest and at transit) or firewalls or Two factor authentication. &lt;/li&gt;
&lt;li&gt;Failure of confidentiality occurs if someone can obtain and view the data.&lt;/li&gt;
&lt;/ol&gt;


&lt;/li&gt;
&lt;li&gt;I stands for Integrity("How correct is the information?"): &lt;ol&gt;
&lt;li&gt;You could use hashing of information or checksum technique during data transmission. &lt;/li&gt;
&lt;li&gt;Failure of integrity occurs if someone modifies the data being stored in or transit.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;A stands for Availability("How much up time and latency is the system providing?") :&lt;ol&gt;
&lt;li&gt;You could use better system design and data points or a better disaster recovery plan. &lt;/li&gt;
&lt;li&gt;Failure of availability occurs if the data cannot be accessed by the end user.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sf4-Dy43--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.jamestyson.co.uk/wp-content/uploads/2019/09/CIA-triad.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sf4-Dy43--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.jamestyson.co.uk/wp-content/uploads/2019/09/CIA-triad.png" alt="" width="719" height="603"&gt;&lt;/a&gt;Credits: &lt;a href="https://blog.jamestyson.co.uk/wp-content/uploads/2019/09/CIA-triad.png"&gt;https://blog.jamestyson.co.uk/wp-content/uploads/2019/09/CIA-triad.png&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Usually, we have to make a trade-off between the usability of a system and the security of the system.&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id="what-do-you-mean-by-cyber-attacks"&gt;&lt;strong&gt;What do you mean by cyber attacks?&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;A cyber attack targets computer information systems, computer networks, infrastructures, or personal computer devices.  An attacker is a person or process that attempts to access data, functions, or other restricted areas of the system without authorisation, potentially with malicious intent.&lt;/p&gt;

&lt;p&gt;Cyberattacks can range from installing spyware on a personal computer to attempting to destroy the infrastructure of entire nations. We could categorise cyber attacks into 2 types,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Web based Attack, attacks on an web application. These are done using,&lt;/li&gt;
&lt;li&gt;System based attack, attacks to compromise a computer or a computer network. These are done using,&lt;/li&gt;
&lt;/ol&gt;

&lt;h5 id="1-denial-of-service-attack-dos"&gt;1.&lt;strong&gt;Denial-of-service attack&lt;/strong&gt; (DoS)&lt;/h5&gt;

&lt;p&gt;The attacker seeks to make a machine or network resource unavailable to its intended users by temporarily or indefinitely disrupting services of a host connected to the Internet.  Typically accomplished by flooding the targeted machine or resource with superfluous requests in an attempt to overload systems and prevent some or all legitimate requests from being fulfilled.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9Hl5CCx2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://programmerprodigycode.files.wordpress.com/2021/11/346ce-new2bdoc2b14_1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9Hl5CCx2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://programmerprodigycode.files.wordpress.com/2021/11/346ce-new2bdoc2b14_1.jpg" alt="" width="640" height="364"&gt;&lt;/a&gt;Credits: &lt;a href="https://www.pinterest.co.uk/pin/80853755788506712/"&gt;https://www.pinterest.co.uk/pin/80853755788506712/&lt;/a&gt;&lt;/p&gt;

&lt;h5 id="2-distributed-denial-of-service-attack-ddos"&gt;2.&lt;strong&gt;Distributed denial-of-service attack&lt;/strong&gt; (&lt;strong&gt;DDoS&lt;/strong&gt;)&lt;/h5&gt;

&lt;p&gt;The incoming traffic flooding the victim originates from many different sources. This effectively makes it impossible to stop the attack simply by blocking a single source.&lt;/p&gt;

&lt;p&gt;There are 3 types of DDos Attacks:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6Wvk4J_7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.thousandeyes.com/img/blog-legacy/2016/11/Table-1-Types-of-DDoS-attacks.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6Wvk4J_7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.thousandeyes.com/img/blog-legacy/2016/11/Table-1-Types-of-DDoS-attacks.png" alt="" width="780" height="367"&gt;&lt;/a&gt;Credits: &lt;a href="https://www.thousandeyes.com/blog/three-types-ddos-attacks"&gt;https://www.thousandeyes.com/blog/three-types-ddos-attacks&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What are the signs of a DOS/DDOS attack:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Degradation in network performance due to drastic increase in requests sent to server.&lt;/li&gt;
&lt;li&gt;Loss of Information from the server&lt;/li&gt;
&lt;li&gt;Unavailability of the server&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;A DoS or DDoS attack is analogous to a group of people crowding the entry door of a shop, making it hard for legitimate customers to enter, thus disrupting trade.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For more information on DOS/DDOS attack,&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://www.cloudflare.com/en-gb/learning/ddos/glossary/denial-of-service/" rel="noreferrer noopener"&gt;https://www.cloudflare.com/en-gb/learning/ddos/glossary/denial-of-service/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://searchsecurity.techtarget.com/definition/distributed-denial-of-service-attack" rel="noreferrer noopener"&gt;https://searchsecurity.techtarget.com/definition/distributed-denial-of-service-attack&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h5 id="3-brute-force-attack"&gt;3.Brute force attack&lt;/h5&gt;

&lt;p&gt;Used to obtain private information such as usernames, passwords, passphrases etc by repeatedly submitting different combinations of credentials, attackers can ultimately guess them correctly, and gain access to the data those credentials protect.&lt;/p&gt;

&lt;p&gt;Common targets for brute force attacks are cracking passwords and encryption keys as well as API keys and SSH logins.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---Bh1VysU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.imperva.com/learn/wp-content/uploads/sites/13/2018/01/hydra-brute-force-attack.png.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---Bh1VysU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.imperva.com/learn/wp-content/uploads/sites/13/2018/01/hydra-brute-force-attack.png.webp" alt="" width="880" height="361"&gt;&lt;/a&gt;Credits: &lt;a href="https://www.imperva.com/learn/wp-content/uploads/sites/13/2018/01/hydra-brute-force-attack.png.webp"&gt;https://www.imperva.com/learn/wp-content/uploads/sites/13/2018/01/hydra-brute-force-attack.png.webp&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The success of a brute force attack is measured in the time it takes to successfully crack a password/credential. As password length increases, the time it takes to brute force it increases as well. &lt;/p&gt;

&lt;ol&gt;&lt;li&gt;As a key with 128-bit encryption will have 2&lt;sup&gt;128&lt;/sup&gt; combinations and 256-bit encryption will have 2&lt;sup&gt;256&lt;/sup&gt; combinations.&lt;/li&gt;&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;For more information on brute force attacks,&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://securitytrails.com/blog/brute-force-attacks" rel="noreferrer noopener"&gt;https://securitytrails.com/blog/brute-force-attacks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.imperva.com/learn/application-security/brute-force-attack/" rel="noreferrer noopener"&gt;https://www.imperva.com/learn/application-security/brute-force-attack/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h5 id="4-session-hijacking"&gt;4. Session hijacking&lt;/h5&gt;

&lt;p&gt;Also known as cookie hijacking is the exploitation of a valid computer session sometimes also called a &lt;em&gt;session key&lt;/em&gt;, to gain unauthorised access to information or services in a computer system. There are four main methods used to perpetrate a session hijack,&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lkh2Mj-S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://developer.mozilla.org/en-US/docs/Glossary/Session_Hijacking/session_hijacking_3.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lkh2Mj-S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://developer.mozilla.org/en-US/docs/Glossary/Session_Hijacking/session_hijacking_3.jpg" alt="" width="384" height="500"&gt;&lt;/a&gt;Credits: &lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/Session_Hijacking/session_hijacking_3.jpg"&gt;https://developer.mozilla.org/en-US/docs/Glossary/Session_Hijacking/session_hijacking_3.jpg&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Session fixation&lt;/strong&gt;: where the attacker sets a user's session id to one known to them. For example: by sending the user an email with a link that contains a particular session id. The attacker now only has to wait until the user logs in.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Session side jacking: &lt;/strong&gt;where the attacker uses packet sniffing to read network traffic between two parties to steal the session cookie. Many web sites use &lt;strong&gt;SSL encryption for login pages &lt;/strong&gt;to prevent attackers from seeing the password.&lt;/p&gt;

&lt;p&gt;Unsecured Wi-Fi hotspots are particularly vulnerable, as anyone sharing the network will generally be able to read most of the web traffic between other nodes and the access point.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Cross-site scripting&lt;/strong&gt;: where &lt;strong&gt;the attacker tricks the user's computer into running code &lt;/strong&gt;which is treated as trustworthy because it appears to belong to the server, allowing the attacker to obtain a copy of the cookie or perform other operations.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Malware&lt;/strong&gt; and unwanted programs can use browser hijacking to steal a browser's cookie files without a user's knowledge, and then perform actions (like installing Android apps) without the user's knowledge.&lt;/p&gt;

&lt;h5 id="5-man-in-the-middle"&gt;5. Man in the Middle&lt;/h5&gt;

&lt;p&gt;A man-in-the-middle attack is a type of eavesdropping attack, where attackers interrupt an existing conversation or data transfer. After inserting themselves in the "middle" of the transfer, the attackers pretend to be both legitimate participants. &lt;/p&gt;

&lt;p&gt;This enables an attacker to intercept information and data from either party while also sending malicious links or other information to both legitimate participants in a way that might not be detected until it is too late.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1JdGNAZV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.preveil.com/wp-content/uploads/2019/11/MITM-Example-768x438.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1JdGNAZV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.preveil.com/wp-content/uploads/2019/11/MITM-Example-768x438.png" alt="" width="768" height="438"&gt;&lt;/a&gt;Credits: &lt;a href="https://www.preveil.com/wp-content/uploads/2019/11/MITM-Example-768x438.png"&gt;https://www.preveil.com/wp-content/uploads/2019/11/MITM-Example-768x438.png&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ways to prevent Man in the middle attack&lt;/strong&gt;,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;VPN&lt;/li&gt;
&lt;li&gt;Network Security with IDS&lt;/li&gt;
&lt;li&gt;Install active virus and malware protection&lt;/li&gt;
&lt;li&gt;Secure your communication&lt;/li&gt;
&lt;li&gt;Avoid using public wifi networks&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;For more information on man in the middle attack,&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;&lt;li&gt;https://phoenixnap.com/blog/man-in-the-middle-attacks-prevention&lt;/li&gt;&lt;/ol&gt;

&lt;h5 id="6-sql-injection"&gt;6. SQL injection&lt;/h5&gt;

&lt;p&gt;&lt;strong&gt;SQL injection&lt;/strong&gt; is a code injection technique used to attack data-driven applications, in which malicious SQL statements are inserted into an entry field for execution (e.g. to dump the database contents to the attacker).&lt;/p&gt;

&lt;p&gt;SQL injection must exploit a security vulnerability in an application's software, for example, when user input is either incorrectly filtered for string literal escape characters embedded in SQL statements or user input is not strongly typed and unexpectedly executed.&lt;/p&gt;

&lt;p&gt; SQL injection is mostly known as an attack vector for websites but can be used to attack any type of SQL database.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V9Li1u82--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://1tskcg39n5iu1jl9xp2ze2ma-wpengine.netdna-ssl.com/wp-content/uploads/2019/07/SQL-injection-attack-example-300x230.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V9Li1u82--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://1tskcg39n5iu1jl9xp2ze2ma-wpengine.netdna-ssl.com/wp-content/uploads/2019/07/SQL-injection-attack-example-300x230.png" alt="" width="300" height="230"&gt;&lt;/a&gt;Credits:&lt;a href="https://1tskcg39n5iu1jl9xp2ze2ma-wpengine.netdna-ssl.com/wp-content/uploads/2019/07/SQL-injection-attack-example-300x230.png"&gt;https://1tskcg39n5iu1jl9xp2ze2ma-wpengine.netdna-ssl.com/wp-content/uploads/2019/07/SQL-injection-attack-example-300x230.png&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For more information on SQL injection,&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;&lt;li&gt;&lt;a href="https://www.veracode.com/security/sql-injection" rel="noreferrer noopener"&gt;https://www.veracode.com/security/sql-injection&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;

&lt;h5 id="7-phishing-attacks"&gt;7.PHISHING ATTACKS&lt;/h5&gt;

&lt;p&gt;Phishing attacks utilize social engineering to induce users to hand up personal information such as passwords or financial information or to complete specific activities such as downloading malware or completing a wire transfer. Giving the hacker access to all vital information or control over the information.&lt;/p&gt;

&lt;p&gt;Human nature allows phishers to take advantage of the fact that most people overlook vital warning warnings. Phishing attacks have been so successful in part due to a lack of information regarding phishing assaults in the general public.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DSxeBtV1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.digitaldefense.com/wp-content/uploads/2019/04/Phishing-graphic-3.4.19-Converted.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DSxeBtV1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.digitaldefense.com/wp-content/uploads/2019/04/Phishing-graphic-3.4.19-Converted.png" alt="" width="880" height="587"&gt;&lt;/a&gt;Credits:  &lt;a href="https://www.digitaldefense.com/wp-content/uploads/2019/04/Phishing-graphic-3.4.19-Converted.png"&gt;https://www.digitaldefense.com/wp-content/uploads/2019/04/Phishing-graphic-3.4.19-Converted.png&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For more information on phishing attacks,&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;&lt;li&gt;&lt;a href="https://programmerprodigy.code.blog/2021/10/12/things-to-know-about-phishing-attacks/" rel="noreferrer noopener"&gt;https://programmerprodigy.code.blog/2021/10/12/things-to-know-about-phishing-attacks/&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;

&lt;h3 id="threat-modelling"&gt;Threat Modelling?&lt;/h3&gt;

&lt;p&gt;Threat modelling refers to the process of identifying, understanding, and communicating risks and mitigation to protect something of value. It includes finding your area of vulnerability and post probable types of attacks.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It often leads to asking questions like&lt;/strong&gt;,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Where  am i most vulnerable to attack&lt;/li&gt;
&lt;li&gt;What are the most relevant threats&lt;/li&gt;
&lt;li&gt;what could go wrong?(exception cases)&lt;/li&gt;
&lt;li&gt;Are there any possible bugs, and  what can be done to address these bugs?&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zqaq4Qv0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mobilisationlab.org/wp-content/uploads/2019/03/Your-ThreatModel4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zqaq4Qv0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mobilisationlab.org/wp-content/uploads/2019/03/Your-ThreatModel4.png" alt="" width="625" height="620"&gt;&lt;/a&gt;Credits: &lt;a href="https://mobilisationlab.org/wp-content/uploads/2019/03/Your-ThreatModel4.png"&gt;https://mobilisationlab.org/wp-content/uploads/2019/03/Your-ThreatModel4.png&lt;/a&gt;&lt;/p&gt;

&lt;h4 id="different-threat-modeling-approaches"&gt;Different Threat modeling approaches&lt;/h4&gt;

&lt;p&gt;1. &lt;strong&gt;Software centric: &lt;/strong&gt;Focus is on the software being built and what weaknesses and vulnerabilities are likely to be introduced in design, code, or build integration. A few questions to consider:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;How is software designed and constructed?&lt;/li&gt;
&lt;li&gt;What are the languages, components and run times used?&lt;/li&gt;
&lt;li&gt;What are the relevant coding practices followed?&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;How is software built and integrated with the use of software architecture diagrams such as data-flow diagrams(DFD),use case diagrams or component diagrams to identify threats to the design of the system&lt;/p&gt;

&lt;p&gt;2. &lt;strong&gt;Asset centric: &lt;/strong&gt;Focus is on assets needing protection and entrusted to a system or software(data processed by the software) &amp;amp; what scenarios might compromise them or lead to non-compliance. A few questions to consider:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;What are the assets entrusted to the system or software?&lt;/li&gt;
&lt;li&gt;What are the consequences to compromise or loss of the assets?&lt;/li&gt;
&lt;li&gt;How are those assets protected?&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Involves the use of attack trees patterns by which an asset can be attacked.&lt;/p&gt;

&lt;p&gt;3. &lt;strong&gt;Attacker centric:&lt;/strong&gt; The focus is on profiling an attacker's characteristics, skill set, and motivation to exploit vulnerabilities and what scenarios might attackers use to comprise the application, system, or service. A few questions to consider:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Who is authorised and who is not?&lt;/li&gt;
&lt;li&gt;What privileges do users have?&lt;/li&gt;
&lt;li&gt;How can the software be abused?&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This approach also uses attack trees or attack patterns with focus on the specific goals of an attacker, how attacks could be carried out, and how to mitigate such attacks.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R5kIptSV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.praetorian.com/wp-content/uploads/2021/02/5eb4472f6e78005b1b947376_Attacker-Exploits.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R5kIptSV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.praetorian.com/wp-content/uploads/2021/02/5eb4472f6e78005b1b947376_Attacker-Exploits.png" alt="" width="880" height="523"&gt;&lt;/a&gt;Credits: &lt;a href="https://www.praetorian.com/wp-content/uploads/2021/02/5eb4472f6e78005b1b947376_Attacker-Exploits.png"&gt;https://www.praetorian.com/wp-content/uploads/2021/02/5eb4472f6e78005b1b947376_Attacker-Exploits.png&lt;/a&gt;&lt;/p&gt;

&lt;p id="which-approach-to-use"&gt;&lt;strong&gt;Which Approach to use?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Software centric approach &lt;/strong&gt;is &lt;strong&gt;best in exposing issues in the design of a system&lt;/strong&gt;—its focus is on the software being built&lt;/li&gt;
&lt;li&gt;Asset and Attacker centric approaches are important approaches to apply in threat modeling as well, but &lt;strong&gt;its best not to combine approaches to avoid confusion in the process&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;A Recommendation would be to start with software centric approach for one release or sprint, and switch to a different approach for the next release or sprint.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pAV-p5mm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://161cli18elctkuzva3yluzd6-wpengine.netdna-ssl.com/wp-content/uploads/2020/11/threat-modeling-process.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pAV-p5mm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://161cli18elctkuzva3yluzd6-wpengine.netdna-ssl.com/wp-content/uploads/2020/11/threat-modeling-process.jpeg" alt="" width="880" height="268"&gt;&lt;/a&gt;Credits: &lt;a href="https://161cli18elctkuzva3yluzd6-wpengine.netdna-ssl.com/wp-content/uploads/2020/11/threat-modeling-process.jpeg"&gt;https://161cli18elctkuzva3yluzd6-wpengine.netdna-ssl.com/wp-content/uploads/2020/11/threat-modeling-process.jpeg&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;To know more about Threat modelling techniques:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;&lt;li&gt;&lt;a rel="noreferrer noopener" href="https://www.eccouncil.org/threat-modeling/"&gt;https://www.eccouncil.org/threat-modeling/&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;

</description>
      <category>cybersecurity</category>
      <category>security</category>
    </item>
    <item>
      <title>Some popular string Methods in JavaScript</title>
      <author>Abhishek Rath</author>
      <pubDate>Mon, 08 Nov 2021 16:14:13 +0000</pubDate>
      <link>https://dev.to/abhishek_rath/string-methods-in-javascript-4d32</link>
      <guid>https://dev.to/abhishek_rath/string-methods-in-javascript-4d32</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-a-string"&gt;
  &lt;/a&gt;
  What is a String?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;The sequence of one or more characters enclosed within quotation marks is called a string.&lt;/li&gt;
&lt;li&gt;The quotation can be single quotes &lt;code&gt;''&lt;/code&gt; or double quotes &lt;code&gt;" "&lt;/code&gt; or backtick ``.&lt;/li&gt;
&lt;li&gt;And, the sequence of characters can be alphabets, numbers, symbols, etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Example of creating strings&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uXeJQoKl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/16zmb733im0k1vrmlp8f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uXeJQoKl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/16zmb733im0k1vrmlp8f.png" alt="Create string" width="880" height="499"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#some-commonly-used-javascript-methods"&gt;
  &lt;/a&gt;
  Some commonly used JavaScript methods:
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Length&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;As the name suggests, &lt;code&gt;length&lt;/code&gt; returns the length of the string.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cbg8yTFl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ghmt0kg9k6wexemge3ga.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cbg8yTFl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ghmt0kg9k6wexemge3ga.png" alt="Length" width="880" height="313"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Note, in the above example the whitespace, comma, and exclamation mark are also part of the string.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;2.&lt;strong&gt;charAt(index)&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;charAt()&lt;/code&gt; returns the character at a specified index in a string.&lt;/li&gt;
&lt;li&gt;The very first character of the string has an index of 0, the second character has index 1, and so on...&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ED7CWC15--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/190dnlhpjko7z6bygbq8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ED7CWC15--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/190dnlhpjko7z6bygbq8.png" alt="charAt" width="880" height="339"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;3.&lt;strong&gt;substring(start, end)&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;This method extracts the part of the string between &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; and returns the substring.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iQqciMRs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3vuuqvhiqod6i73slryw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iQqciMRs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3vuuqvhiqod6i73slryw.png" alt="substring" width="880" height="321"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;4.&lt;strong&gt;substr(start, length)&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;substr()&lt;/code&gt; method returns the specified number of characters from the specified index (&lt;code&gt;start&lt;/code&gt; parameter) from a given string.&lt;/li&gt;
&lt;li&gt;Here, &lt;code&gt;start&lt;/code&gt; defines the starting index from where the substring is to be extracted from the original string.&lt;/li&gt;
&lt;li&gt;And, &lt;code&gt;length&lt;/code&gt; defines the number of characters to be extracted from the specified start index.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Note:&lt;/strong&gt; If the &lt;code&gt;length&lt;/code&gt; parameter isn't given, then all the characters from start till the end of the string are extracted.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--db_kXY5v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zm8ojwj9bmh3ez7gwh4q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--db_kXY5v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zm8ojwj9bmh3ez7gwh4q.png" alt="substr" width="880" height="454"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;5.&lt;strong&gt;concat()&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;concat()&lt;/code&gt; method joins two or more strings.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;concat()&lt;/code&gt; method doesn't modify the  original strings, but it returns a new string.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lcbI1dHz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kam7ly6liq3z4g9wzkn4.png" alt="concat" width="880" height="477"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;6.&lt;strong&gt;toUpperCase()&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;toUpperCase()&lt;/code&gt; method converts the strings to upper case letters.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--re4wZ9mK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/opks9yhun2u40ne4y6v4.png" alt="toUpperCase()" width="880" height="444"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;7.&lt;strong&gt;toLowerCase()&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;toLowerCase()&lt;/code&gt; method converts the strings to lower case letters. 
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h_ys54eC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5ih7jxub77z1lwzw63dv.png" alt="lower case" width="880" height="388"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;8.&lt;strong&gt;slice(start, end)&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;slice()&lt;/code&gt; method extracts and returns a part of the string from start to (excluding) the end character.&lt;/li&gt;
&lt;li&gt;If there's no second argument specified, then the slice method extracts till the end of the string.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8GIx5rhy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d4gjbvt3fnqnfqs6tfpz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8GIx5rhy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d4gjbvt3fnqnfqs6tfpz.png" alt="slice" width="880" height="439"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;slice()&lt;/code&gt; also works on negative indices. If a negative index is specified, the string is extracted from the right end.&lt;/li&gt;
&lt;li&gt;The negative index starts from -1 and it indicates the last character of the string, -2 is the second last character, and so on...
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wkPOmkm---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fwnkwsphk79umaa8t7ez.png" alt="slice" width="880" height="411"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;9.&lt;strong&gt;replace(substring)&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;replace()&lt;/code&gt; method is used to replace a part of a given string with a new substring.&lt;/li&gt;
&lt;li&gt;One important thing to note here is that the &lt;code&gt;replace()&lt;/code&gt; method does not change the original string on which it is called upon. It simply returns a new string.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LnKRz0O_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cccidljk1o9yc3ecz596.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LnKRz0O_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cccidljk1o9yc3ecz596.png" alt="replace" width="880" height="532"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;10.&lt;strong&gt;includes(substring)&lt;/strong&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;includes()&lt;/code&gt; method does a case-sensitive search on the original string to see if the specified substring is present in the string or not.&lt;/li&gt;
&lt;li&gt;If the specified string is present, the method returns &lt;code&gt;true&lt;/code&gt; otherwise &lt;code&gt;false&lt;/code&gt;.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XGttuOxP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qdn7mzevxtdk4nipdy7k.png" alt="includes" width="880" height="494"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;11.&lt;strong&gt;trim()&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;trim()&lt;/code&gt; method removes leading and trailing whitespaces from the given string.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x2y-lzfH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/phzu5o545e5200jq06hb.png" alt="trim" width="880" height="353"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;That is all from my side. I hope this article provides you with the basics of some popular string methods used in JavaScript.&lt;/li&gt;
&lt;li&gt;Working through the examples is the best idea to understand these methods. Play with the examples.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#keep-learning"&gt;
  &lt;/a&gt;
  Keep Learning!!
&lt;/h3&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Get started with Medusa Part 2: Make the Server Your Own</title>
      <author>Shahed Nasser</author>
      <pubDate>Mon, 08 Nov 2021 15:41:34 +0000</pubDate>
      <link>https://dev.to/medusajs/get-started-with-medusa-part-2-make-the-server-your-own-gka</link>
      <guid>https://dev.to/medusajs/get-started-with-medusa-part-2-make-the-server-your-own-gka</guid>
      <description>&lt;p&gt;In the first part of this tutorial series, I compared &lt;a href="https://github.com/medusajs/medusa"&gt;Medusa&lt;/a&gt; and Shopify to showcase how &lt;a href="https://dev.to/medusajs/get-started-with-medusa-the-open-source-alternative-to-shopify-305j"&gt;Medusa&lt;/a&gt; &lt;a href="https://dev.to/medusajs/get-started-with-medusa-the-open-source-alternative-to-shopify-305j"&gt;is the open-source alternative to Shopify&lt;/a&gt;. Where Shopify lacks when it comes to its pricing plans, minimal customization abilities, and inability to fit for every business use case, Medusa can compensate for it.&lt;/p&gt;

&lt;p&gt;Medusa is an open-source headless commerce solution that allows you to own your stack and make it fit into whatever use case your business needs. It is fast and very flexible.&lt;/p&gt;

&lt;p&gt;In the previous tutorial, you learned about Medusa’s 3 components and how you can install and run each of them. It is a very easy process that can get your store up and running in seconds.&lt;/p&gt;

&lt;p&gt;In this tutorial, you will start making changes to the server to make it your own. You will learn how to create new API endpoints, services, and subscribers. The API you will create will retrieve the products with the most sales, and you will create a service and subscriber to help us do that.&lt;/p&gt;

&lt;p&gt;The code for this tutorial is on &lt;a href="https://github.com/shahednasser/medusa-store-tutorial"&gt;this GitHub repository&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;p&gt;This tutorial assumes you have already read and followed along with &lt;a href="https://dev.to/medusajs/get-started-with-medusa-the-open-source-alternative-to-shopify-305j"&gt;part 1&lt;/a&gt;. In the first part, you learn how to setup the Medusa store, which you will make changes to in this tutorial, as well as the Medusa storefront and the  admin. If you have not went through it yet, please do before continuing with this tutorial.&lt;/p&gt;

&lt;p&gt;In addition, you need to have Redis installed and running on your machine to be able to use subscribers. So, if you do not have it installed and you want to follow along with the tutorial you should go ahead and &lt;a href="http://redis.io"&gt;install it&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#add-a-service"&gt;
  &lt;/a&gt;
  Add a Service
&lt;/h2&gt;

&lt;p&gt;As mentioned earlier, you will be creating an API endpoint that allows you to get the top products, i.e. the products with the most sales.&lt;/p&gt;

&lt;p&gt;In Medusa, services generally handle the logic of models or entities in one place. They hold helper functions that allow you to retrieve or perform action on these models. Once you put them in a service, you can access the service from anywhere in your Medusa project.&lt;/p&gt;

&lt;p&gt;So, in this tutorial, you will create a service &lt;code&gt;TopProductsService&lt;/code&gt; that will hold all the logic needed to update products with their number of sales and to retrieve the products sorted by their number of sales.&lt;/p&gt;

&lt;p&gt;To create a service, start by creating the file &lt;code&gt;src/services/top-products.js&lt;/code&gt; with the following content:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { BaseService } from "Medusa-interfaces";

class TopProductsService extends BaseService {
  constructor({ productService, orderService }) {
    super();
    this.productService_ = productService;
    this.orderService_ = orderService;
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Here are a few things to note about this service:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;When this service is retrieved in other places in your code, the service should be referred to as the camel-case version of the file name followed by “Service”. In this case, the file name is &lt;code&gt;top-product&lt;/code&gt;, so to access it in other places we use &lt;code&gt;topProductsService&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Similarly to how you will use this service, we inject as dependencies the &lt;code&gt;productService&lt;/code&gt; and &lt;code&gt;orderService&lt;/code&gt; in the constructor. When you create classes in Medusa, you can use dependency injection to get access to services.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Implement getTopProducts&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The next step is to add the method &lt;code&gt;getTopProducts&lt;/code&gt; to the &lt;code&gt;TopProductsService&lt;/code&gt; class. This method will retrieve the products from the database, sort them by their number of sales, then return the top 5 products.&lt;/p&gt;

&lt;p&gt;Inside &lt;code&gt;TopProductsService&lt;/code&gt; class add the new method:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;async getTopProducts() {
  const products = await this.productService_.list({
    status: ['published']
  }, {
    relations: ["variants", "variants.prices", "options", "options.values", "images", "tags", "collection", "type"]
  });
  products.sort((a, b) =&amp;gt; {
    const aSales = a.metadata &amp;amp;&amp;amp; a.metadata.sales ? a.metadata.sales : 0;
    const bSales = b.metadata &amp;amp;&amp;amp; b.metadata.sales ? b.metadata.sales : 0;
    return aSales &amp;gt; bSales ? -1 : (aSales &amp;lt; bSales ? 1 : 0);
  });
  return products.slice(0, 4);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;You first use &lt;code&gt;this.productService_&lt;/code&gt; to retrieve the list of products. Notice that the &lt;code&gt;list&lt;/code&gt; method can take 2 optional parameters. The first one specifies where conditions, and the second parameter specifies the relations on this products to retrieve.&lt;/p&gt;

&lt;p&gt;Then, you sort the array with the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort"&gt;sort&lt;/a&gt; Array method giving it a compare function. In the compare function, you compare the number of sales stored inside the &lt;code&gt;metadata&lt;/code&gt; field. In Medusa, most entities have the &lt;code&gt;metadata&lt;/code&gt; field which allows you to easily add custom attributes in the default entities for your purposes. Here, you use the &lt;code&gt;metadata&lt;/code&gt; field to store the number of sales. You are also sorting the products descending.&lt;/p&gt;

&lt;p&gt;Finally, you use the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice"&gt;splice&lt;/a&gt; Array method to retrieve only the first 5 items.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Implement updateSales&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Next, you will implement the &lt;code&gt;updateSales&lt;/code&gt; method in the &lt;code&gt;TopProductsService&lt;/code&gt;. This method receives an order ID as a parameter, then retrieves this order and loops over the items ordered. Then, the &lt;code&gt;sales&lt;/code&gt; property inside &lt;code&gt;metadata&lt;/code&gt; is incremented and the product is updated.&lt;/p&gt;

&lt;p&gt;Add the new method in &lt;code&gt;TopProductsService&lt;/code&gt;:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;async updateSales(orderId) {
  const order = await this.orderService_.retrieve(orderId, {
    relations: ["items", "items.variant", "items.variant.product"]
  });
  if (order.items &amp;amp;&amp;amp; order.items.length) {
    for (let i = 0; i &amp;lt; order.items.length; i++) {
      const item = order.items[i];
      //retrieve product by id
      const product = await this.productService_.retrieve(item.variant.product.id, {
        relations: ["variants", "variants.prices", "options", "options.values", "images", "tags", "collection", "type"]
      });
      const sales = product.metadata &amp;amp;&amp;amp; product.metadata.sales ? product.metadata.sales : 0;
      //update product
      await this.productService_.update(product.id, {
        metadata: { sales: sales + 1 }
      });

    }
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;You first use &lt;code&gt;this.orderService_&lt;/code&gt; to retrieve the order by its ID. The &lt;code&gt;retrieve&lt;/code&gt; method takes the order ID as the first parameter and a config object as the second parameter which is similar to the ones you used in the previous method. You pass it the relations array to retrieve the ordered items and their products.&lt;/p&gt;

&lt;p&gt;Then, you loop over the items and use the product id inside each item to retrieve the product. Afterward, you increment the number of sales and update the product using the &lt;code&gt;update&lt;/code&gt; method on &lt;code&gt;this.productService_&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This service is now ready to update product sales numbers and retrieve products ordered based on their sales number.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#add-an-api-endpoint"&gt;
  &lt;/a&gt;
  Add an API Endpoint
&lt;/h2&gt;

&lt;p&gt;Now, you will add an API endpoint to retrieve the top products. To add an API endpoint, you can do that by creating the file &lt;code&gt;src/api/index.js&lt;/code&gt; with the following content:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { Router } from "express"
export default () =&amp;gt; {
  const router = Router()
  router.get("/store/top-products", async (req, res) =&amp;gt; {
    const topProductsService = req.scope.resolve("topProductsService")
    res.json({
      products: await topProductsService.getTopProducts()
    })
  })
  return router;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Creating an endpoint is easy. You just need to export an &lt;a href="https://expressjs.com"&gt;Express&lt;/a&gt; Router. This router can hold as many routes as you want.&lt;/p&gt;

&lt;p&gt;In this code, you add a new GET route at the endpoint &lt;code&gt;/store/top-products&lt;/code&gt;. The reason you are using &lt;code&gt;store&lt;/code&gt; here as a prefix to &lt;code&gt;top-products&lt;/code&gt; is that Medusa prefixes all storefront endpoints with &lt;code&gt;/store&lt;/code&gt;, and all admin endpoints with &lt;code&gt;/admin&lt;/code&gt;. You do not need to add this prefix, but it is good to follow the conventions of the Medusa APIs.&lt;/p&gt;

&lt;p&gt;In this route, you retrieve the service you created in the previous section with this line:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const topProductsService = req.scope.resolve("topProductsService")
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;You can retrieve any service inside routes using &lt;code&gt;req.scope.resolve&lt;/code&gt;. As explained in the services section, you need to use the camel-case version of the file name followed by &lt;code&gt;Service&lt;/code&gt; when referencing a service in your code.&lt;/p&gt;

&lt;p&gt;After retrieving the service, you can then use the methods you created on it. So, you return a JSON response that has the key &lt;code&gt;products&lt;/code&gt; and the value will be the array of top products returned by &lt;code&gt;getTopProducts&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Let us test it out. You can access this endpoint at &lt;code&gt;localhost:9000/store/top-products&lt;/code&gt;. As this is a GET request, you can do it from your browser or using a client like &lt;a href="https://www.postman.com"&gt;Postman&lt;/a&gt; or &lt;a href="https://www.thunderclient.io"&gt;Thunder Client&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You should see an array of products in the response. At the moment, nothing is sorted as you have not implemented the subscriber which will update the sales number.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jurVzncm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E2AAA019E9ECAD398F74CB5188E044A697A4B7712D8B64DE0483D9EA29C0E07_1636115815267_Screen%2BShot%2B2021-11-04%2Bat%2B7.32.44%2BPM.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jurVzncm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E2AAA019E9ECAD398F74CB5188E044A697A4B7712D8B64DE0483D9EA29C0E07_1636115815267_Screen%2BShot%2B2021-11-04%2Bat%2B7.32.44%2BPM.png" alt="" width="880" height="453"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#add-a-subscriber"&gt;
  &lt;/a&gt;
  Add a Subscriber
&lt;/h2&gt;

&lt;p&gt;Finally, you will add a subscriber which will update the sales number of products when an order is placed.&lt;/p&gt;

&lt;p&gt;Before creating the subscriber, you need to make sure that Redis is installed and running on your machine. You can test that by running the following command in your terminal:      &lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;redis-cli ping
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;If the command returns “PONG” then the Redis service is running.&lt;/p&gt;

&lt;p&gt;Then, go to &lt;code&gt;Medusa&lt;/code&gt;&lt;code&gt;-config.js&lt;/code&gt; in the root of your project. You will see that at the end of the file inside the exported config there is this line commented out:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// redis_url: REDIS_URL,
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Remove the comments. This uses the variable &lt;code&gt;REDIS_URL&lt;/code&gt; declared in the beginning of the file. Its value is either the Redis URL set in &lt;code&gt;.env&lt;/code&gt; or the default Redis URL &lt;code&gt;redis://localhost:6379&lt;/code&gt;. If you have a different Redis URL, add the new variable &lt;code&gt;REDIS_URL&lt;/code&gt; in &lt;code&gt;.env&lt;/code&gt; with the URL.&lt;/p&gt;

&lt;p&gt;Then, restart the server. This will take the updated configuration and connect to your Redis server.&lt;/p&gt;

&lt;p&gt;Now, you will implement the subscriber. Create the file &lt;code&gt;src/subscribers/top-products.js&lt;/code&gt; with the following content:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;class TopProductsSubscriber {
  constructor({ topProductsService, eventBusService }) {
    this.topProductsService_ = topProductsService;
    eventBusService.subscribe("order.placed", this.handleTopProducts);
  }
  handleTopProducts = async (data) =&amp;gt; {
    this.topProductsService_.updateSales(data.id);
  };
}
export default TopProductsSubscriber;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Similar to how you implemented &lt;code&gt;TopProductsService&lt;/code&gt;, you pass the &lt;code&gt;topProductsService&lt;/code&gt; in the constructor using dependency injection. You also pass &lt;code&gt;eventBusService&lt;/code&gt;. This is used to subscribe a handler to an event in the constructor.&lt;/p&gt;

&lt;p&gt;You subscribe to the order placed event with this line:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;eventBusService.subscribe("order.placed", this.handleTopProducts);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;The &lt;code&gt;subscribe&lt;/code&gt; method on &lt;code&gt;eventBusService&lt;/code&gt; takes the name of the event as the first parameter and the handler as the second parameter.&lt;/p&gt;

&lt;p&gt;You then define in the class the &lt;code&gt;handleTopProducts&lt;/code&gt; method which will handle the &lt;code&gt;order.placed&lt;/code&gt; event. Event handlers in Medusa generally receive a &lt;code&gt;data&lt;/code&gt; object that holds an &lt;code&gt;id&lt;/code&gt; property with the ID of the entity this event is related to. So, you pass this ID into the &lt;code&gt;updateSales&lt;/code&gt; method on &lt;code&gt;this.topProductsService_&lt;/code&gt; to update the number of sales for each of the products in the order.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#test-it-out"&gt;
  &lt;/a&gt;
  Test It Out
&lt;/h2&gt;

&lt;p&gt;You will now test everything out. Make sure the server is running. If not, run it with the following command:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Then, go to the Medusa storefront installation and run:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm run dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Go to the storefront and place an order. This will trigger the &lt;code&gt;TopProductsSubscriber&lt;/code&gt; which will update the sales of the products in that order.&lt;/p&gt;

&lt;p&gt;Now, send a request to &lt;code&gt;/store/top-products&lt;/code&gt; like you did before. You should see that &lt;code&gt;sales&lt;/code&gt; inside the &lt;code&gt;metadata&lt;/code&gt; property of the products in that order has increased.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z1O23AdW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E2AAA019E9ECAD398F74CB5188E044A697A4B7712D8B64DE0483D9EA29C0E07_1636115827468_Screen%2BShot%2B2021-11-05%2Bat%2B1.00.44%2BPM.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z1O23AdW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E2AAA019E9ECAD398F74CB5188E044A697A4B7712D8B64DE0483D9EA29C0E07_1636115827468_Screen%2BShot%2B2021-11-05%2Bat%2B1.00.44%2BPM.png" alt="" width="300" height="122"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Try to add a new product from the admin panel or use the database in &lt;a href="https://github.com/shahednasser/medusa-store-tutorial"&gt;the GitHub repository&lt;/a&gt; of this tutorial, which has an additional product. Then, try to make more orders with that product. You will see that the sorting in the endpoint has changed based on the number of sales.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;In this tutorial, you learned how to add custom API endpoint, service, and subscriber. You can use these 3 to implement any custom feature or integration into your store.&lt;/p&gt;

&lt;p&gt;In the next tutorial, you will use the API endpoint you created in this part to customize the frontend and add a product slider that showcases the top selling products on your store.&lt;/p&gt;

&lt;p&gt;In the meantime, should you have any issues or questions related to Medusa, then feel free to reach out to the Medusa team via &lt;a href="https://discord.gg/F87eGuwkTp"&gt;Discord&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>tutorial</category>
      <category>opensource</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
