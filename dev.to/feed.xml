<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>480+ handpicked tools &amp; resources for web designers/developers 🧰</title>
      <author>Adam Greenough</author>
      <pubDate>Fri, 27 Aug 2021 11:58:12 +0000</pubDate>
      <link>https://dev.to/adamgreenough/480-handpicked-tools-resources-for-web-designers-developers-4con</link>
      <guid>https://dev.to/adamgreenough/480-handpicked-tools-resources-for-web-designers-developers-4con</guid>
      <description>&lt;p&gt;Hey everyone! Passed 10 years in the industry now and my bookmarks continue to boom. I've curated all my favourite tools &amp;amp; resources for web designers &amp;amp; developers to share with you too. Almost all are free, with the exception of a few which will have a from price on the card.&lt;/p&gt;

&lt;p&gt;I hope you find something new to take with you on your dev journey!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tools-amp-resources-for-web-designers-amp-developers"&gt;
  &lt;/a&gt;
  Tools &amp;amp; Resources for Web Designers &amp;amp; Developers
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://toolkit.addy.codes/tag/accessibility/"&gt;🚹 Accessibility&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://toolkit.addy.codes/tag/animation/"&gt;✨ Animation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://toolkit.addy.codes/tag/api/"&gt;🔌 API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://toolkit.addy.codes/tag/audio/"&gt;🎵 Audio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://toolkit.addy.codes/tag/backgrounds/"&gt;🖼 Backgrounds &amp;amp; Patterns&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://toolkit.addy.codes/tag/blogs/"&gt;📖 Blogs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://toolkit.addy.codes/tag/books/"&gt;📚 Books&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://toolkit.addy.codes/tag/branding/"&gt;🦄 Branding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://toolkit.addy.codes/tag/business/"&gt;💼 Business&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://toolkit.addy.codes/tag/cms/"&gt;🗂 CMS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://toolkit.addy.codes/tag/code/"&gt;⌨️ Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://toolkit.addy.codes/tag/colour/"&gt;🌈 Colour&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://toolkit.addy.codes/tag/community/"&gt;👨‍👩‍👧‍👦 Community&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://toolkit.addy.codes/tag/copywriting/"&gt;✒️ Copywriting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://toolkit.addy.codes/tag/developer-tools/"&gt;🛠 Developer Tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://toolkit.addy.codes/tag/domains-hosting/"&gt;🌐 Domains &amp;amp; Hosting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://toolkit.addy.codes/tag/email/"&gt;📨 Email&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://toolkit.addy.codes/tag/fun/"&gt;😀 Fun &amp;amp; Games&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://toolkit.addy.codes/tag/hardware-merch/"&gt;👕 Hardware &amp;amp; Merch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://toolkit.addy.codes/tag/icons/"&gt;🔣 Icon Packs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://toolkit.addy.codes/tag/illustrations/"&gt;✍️ Illustrations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://toolkit.addy.codes/tag/inspiration/"&gt;💡 Inspiration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://toolkit.addy.codes/tag/job-boards/"&gt;💰 Job Boards&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://toolkit.addy.codes/tag/learning/"&gt;🎓 Learning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://toolkit.addy.codes/tag/marketing/"&gt;📢 Marketing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://toolkit.addy.codes/tag/marketplaces/"&gt;💸 Marketplaces&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://toolkit.addy.codes/tag/mockups/"&gt;📱 Mockups&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://toolkit.addy.codes/tag/newsletters/"&gt;🗞 Newsletters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://toolkit.addy.codes/tag/photography/"&gt;📸 Photography &amp;amp; Stock&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://toolkit.addy.codes/tag/placeholders/"&gt;📦 Placeholders&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://toolkit.addy.codes/tag/podcasts/"&gt;🎙 Podcasts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://toolkit.addy.codes/tag/productivity/"&gt;✅ Productivity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://toolkit.addy.codes/tag/public-health/"&gt;🦠 Public Health&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://toolkit.addy.codes/tag/security/"&gt;🛡 Security&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://toolkit.addy.codes/tag/self-care/"&gt;🧘‍♂️ Self Care&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://toolkit.addy.codes/tag/self-hosted/"&gt;🧰 Self Hosted&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://toolkit.addy.codes/tag/seo/"&gt;🔍 SEO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://toolkit.addy.codes/tag/services/"&gt;⚡️ Services&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://toolkit.addy.codes/tag/software/"&gt;💿 Software&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://toolkit.addy.codes/tag/templates/"&gt;📐 Templates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://toolkit.addy.codes/tag/testing/"&gt;🧪 Test &amp;amp; Optimise&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://toolkit.addy.codes/tag/typography/"&gt;🔤 Typography&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://toolkit.addy.codes/tag/ui-kits/"&gt;💻 UI Kits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://toolkit.addy.codes/tag/ux-design/"&gt;🪄 UX Design&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://toolkit.addy.codes/tag/video/"&gt;🎥 Video&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://toolkit.addy.codes/tag/wordpress/"&gt;🖊 WordPress&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#am-i-missing-any-of-your-favourites"&gt;
  &lt;/a&gt;
  Am I missing any of your favourites?
&lt;/h2&gt;

&lt;p&gt;Please let me know if I am missing any of your favourites in the comments! &lt;/p&gt;

</description>
      <category>showdev</category>
      <category>design</category>
      <category>discuss</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Github/DevOps status</title>
      <author>Marcel.L</author>
      <pubDate>Fri, 27 Aug 2021 11:43:08 +0000</pubDate>
      <link>https://dev.to/pwd9000/github-devops-status-2eji</link>
      <guid>https://dev.to/pwd9000/github-devops-status-2eji</guid>
      <description>&lt;p&gt;You can check the status of github in real-time, incl. historical data on system performance, follow incidents or scheduled maintenance by going to: &lt;a href="https://www.githubstatus.com/"&gt;https://www.githubstatus.com/&lt;/a&gt;.  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gXPYSd5D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/Github-Status-Check/assets/gh_status.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gXPYSd5D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/Github-Status-Check/assets/gh_status.png" alt="gh_status"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Similarly to check the status of Azure DevOps you can use: &lt;a href="https://status.dev.azure.com/"&gt;https://status.dev.azure.com/&lt;/a&gt;.  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xCJVuFfK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/Github-Status-Check/assets/ado_status.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xCJVuFfK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/Github-Status-Check/assets/ado_status.png" alt="ado_status"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Both status pages also has an RSS feed. In my next article/tutorial I will show how to create an Azure Logic App that will notify you when any of the services become degraded.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#author"&gt;
  &lt;/a&gt;
  &lt;em&gt;Author&lt;/em&gt;
&lt;/h3&gt;


&lt;div class="ltag__user ltag__user__id__620034"&gt;
  
    .ltag__user__id__620034 .follow-action-button {
      background-color: #0cbb58 !important;
      color: #000000 !important;
      border-color: #0cbb58 !important;
    }
  
    &lt;a href="/pwd9000" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Amb4rEJN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--L_SDLOmq--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/620034/93be2c72-3a13-478e-8af1-a4bedc1b2331.jpeg" alt="pwd9000 image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/pwd9000"&gt;Marcel.L&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/pwd9000"&gt;Cloud Solutions Architect and DevOps enthusiast.&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


</description>
      <category>tutorial</category>
      <category>devops</category>
      <category>github</category>
      <category>productivity</category>
    </item>
    <item>
      <title>A Beginners Guide to Falling in Love with Algorithms - Part 1</title>
      <author>Martin Edvardsen</author>
      <pubDate>Fri, 27 Aug 2021 11:04:31 +0000</pubDate>
      <link>https://dev.to/itminds/a-beginners-guide-to-falling-in-love-with-algorithms-part-1-5aid</link>
      <guid>https://dev.to/itminds/a-beginners-guide-to-falling-in-love-with-algorithms-part-1-5aid</guid>
      <description>&lt;p&gt;The purpose of this series of blog posts is to demystify and conceptualize algorithms - more specifically the design and analysis hereof. These blog posts are targeted for software development students early in their studies, as well as students from similar lines of study. &lt;/p&gt;

&lt;p&gt;However, I will also continuously relate the concepts to examples in laymans terms, to include people with no related background, but merely with a desire to learn more about algorithms. A certain level of mathematical understanding is however a prerequisite. &lt;/p&gt;

&lt;p&gt;Some would argue that an understanding of algorithms is not needed to become a programmer. An understanding of algorithms will separate you from these programmers, by allowing you to quantify and compare different approaches to a problem. It will give you a broader vocabulary, or even language, with which you can rightfully reason for the superiority of a solution, or algorithm, for a given problem.&lt;/p&gt;

&lt;p&gt;Most importantly, in terms of everyday programming, it will give you a greater understanding of data structures, which are an essential part of writing efficient code. Are you performing lookups in an array of reference type objects? Convert it to a data structure, which supports constant lookups, such as hash tables, instead of a linear scan. Are you using an array-based list for FIFO operations? Array-based lists mean linear time pop operations. Convert it to a FIFO-based data structure, such as a queue, which has constant time append and pop.&lt;br&gt;
Examples like these show you why you need to familiarize yourself with data structures. Do so using what you learn from these blog posts, and you should see a dramatic improvement in the efficiency of your code. &lt;/p&gt;

&lt;p&gt;This specific blog post will also give you the needed prerequisites for the coming blog posts, in which we will get into the actual design of algorithms. Let's get to it!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#algorithmic-complexity"&gt;
  &lt;/a&gt;
  Algorithmic complexity
&lt;/h2&gt;

&lt;p&gt;Complexity is the grounds upon which we discuss algorithms, namely in terms of space and time. Intuitively, we often determine the running time of an algorithm based on the input size. We will get back to this, as we familiarize ourselves with different running times. First off, we need to get acquainted with &lt;strong&gt;asymptotic notation&lt;/strong&gt;.  It gives us a way of expressing the growth rate of a function, or algorithm, in which we focus on the important terms of the function. &lt;/p&gt;

&lt;p&gt;Take a simple quadratic equation, (an&lt;sup&gt;2&lt;/sup&gt; + bn + c), i.e.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;15n&lt;sup&gt;2&lt;/sup&gt; + 10n + 5&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;in which &lt;em&gt;n&lt;/em&gt; defines the size of the input. The running time of this function is bounded by the fastest growing term of this function, which is n&lt;sup&gt;2&lt;/sup&gt;. As the input size &lt;em&gt;n&lt;/em&gt; grows, where a &amp;gt; 0, the term n&lt;sup&gt;2&lt;/sup&gt; will eventually always exceed the size of the other terms and constants, i.e. &lt;em&gt;bn + c&lt;/em&gt; in this case.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NVPxvs_9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xdf8h3vaiis6m8bur32h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NVPxvs_9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xdf8h3vaiis6m8bur32h.png" alt="Growth rates"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Using asymptotic notation, we express this by removing coefficients and inferior terms, which leaves us with an approximation of the growth rate of an algorithm. In asymptotic notation, we refer to O(⋅), '&lt;strong&gt;big O&lt;/strong&gt;'-notation, which expresses an upper bound on an algorithm, i.e. the worst case scenario, and Ω(⋅), '&lt;strong&gt;big theta&lt;/strong&gt;'-notation, which expresses a lower bound on an algorithm, i.e. the best case scenarios. In this series of blog posts, we will only focus on the upper bound.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#asymptotic-running-times"&gt;
  &lt;/a&gt;
  Asymptotic running times
&lt;/h2&gt;

&lt;p&gt;Again, let's talk about prerequisites. Complexity refers to both running time and space consumption, however, we will focus on running times, as it is more approachable and intuitive than space complexity.&lt;/p&gt;

&lt;p&gt;The examples of this post will be based on both a list of whole numbers, i.e. an integer array, with a thousand elements and a group of people, for different levels of complexity. Furthermore, for the sake of simplicity and understanding, we assume that one operation takes one second. For our group of people, a question to a member of the group could correspond to an operation. Finally, we will refer to the below graph from &lt;a href="http://www.bigocheatsheet.com"&gt;http://www.bigocheatsheet.com&lt;/a&gt; for a visual comparison of the running times.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xbACB43x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m8k0l5gcmhqg2j5e61rh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xbACB43x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m8k0l5gcmhqg2j5e61rh.png" alt="Complexity Chart"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#o1-constant-time"&gt;
  &lt;/a&gt;
  &lt;strong&gt;O(1)&lt;/strong&gt;. Constant Time
&lt;/h3&gt;

&lt;p&gt;This is referred to as constant time, as it requires a constant amount of operations. The &lt;em&gt;bigocheatsheet&lt;/em&gt; graph refers to this as an 'excellent' running time. Furthermore, an important point here is that the algorithm is independent of the input size, which means the running time does not increase, as the input increases.&lt;/p&gt;

&lt;p&gt;An example of a constant time algorithm is finding the value of an element of our integer array. Given an integer array with a thousand elements, accessing a single element at a certain index is constant, as it requires a single lookup, which corresponds to a single second. &lt;/p&gt;

&lt;p&gt;This example corresponds to finding the age of a specific person from a group, regardless of the size, which only requires a single question to that very person. Simple, right? Moving on.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EVp8UIUi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dg9i6oik6xyyyubhusxv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EVp8UIUi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dg9i6oik6xyyyubhusxv.png" alt="Constant time example"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#on-linear-time"&gt;
  &lt;/a&gt;
  &lt;strong&gt;O(n)&lt;/strong&gt;. Linear Time
&lt;/h3&gt;

&lt;p&gt;This is referred to as linear time, as it is linearly dependent on the size of the input. The &lt;em&gt;bigocheatsheet&lt;/em&gt; graph refers to this as a 'fair' running time. As the size of your input increases, so does your number of operations, and therefore your running time. However, remember that due to our '&lt;strong&gt;big O&lt;/strong&gt;'-notation, the running time of a linear time algorithm increases at &lt;strong&gt;most&lt;/strong&gt; at the same rate, as the number of elements of the input - for simplicity our example will use every element of the input.&lt;/p&gt;

&lt;p&gt;An example of a linear time algorithm is finding the minimum value of an unsorted integer array. Given an integer array with a thousand elements, finding the minimum value requires iterating through the entire list, which requires &lt;em&gt;n&lt;/em&gt; operations, which in our case corresponds to a thousand seconds. A dramatic increase in running time, compared to constant time, O(1), with no increase in the input size.&lt;/p&gt;

&lt;p&gt;This example corresponds to finding the youngest person in a group of people, which requires asking every single person of said group, before you are able to conclude, which person is the youngest.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P-WrWneJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a4c5lkwk7ix8f3ubmbax.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P-WrWneJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a4c5lkwk7ix8f3ubmbax.png" alt="Linear time example"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#on2-quadratic-time-and-on-logn-linearithmic-time"&gt;
  &lt;/a&gt;
  &lt;strong&gt;O(n&lt;sup&gt;2&lt;/sup&gt;)&lt;/strong&gt;. Quadratic Time and &lt;strong&gt;O(n log(n))&lt;/strong&gt;. Linearithmic Time
&lt;/h3&gt;

&lt;p&gt;We now increase the theoretical complexity considerably. We assess two running times, which are often referred to in job interviews in combination - quadratic (polynomial) time and linearithmic time algorithms, respectively. Interviewers will often pose problems, which seem to have an obvious, intuitive solution in quadratic time, but are often solvable in at least linearithmic time - a dramatic improvement in running time.&lt;/p&gt;

&lt;p&gt;With O(n&lt;sup&gt;2&lt;/sup&gt;), we look at each element a constant amount of times, for each other element, at most, which is a considerable increase in operations, compared to linear time, where we only look at each element a constant amount of times. This is a dramatic increase in running time, which is also apparent in the &lt;em&gt;bigocheatsheet&lt;/em&gt; graph, where we've moved from the yellow (fair), into the red (horrible). In a job interview, such a running time should be your cue to look for a better solution.&lt;/p&gt;

&lt;p&gt;An example of a quadratic time algorithm is finding all pairs in our integer array. Given an integer array of a thousand elements, one would find all pairs by iterating over the entire collection of size &lt;em&gt;n&lt;/em&gt; once for each of the &lt;em&gt;n&lt;/em&gt; elements. This corresponds to &lt;em&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/em&gt; operations, which in the case of the integer array corresponds to a million seconds. A nested loop, in which both the inner and outer loop iterates the &lt;strong&gt;same&lt;/strong&gt; list, is a classic example of a quadratic time algorithm.&lt;/p&gt;

&lt;p&gt;This example translates directly to our group of people, in which we try to find all pairs of people. It should be noted that pairing up with oneself would not be a valid pair, but it is irrelevant for the matter of the example.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cWeYQyit--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4dtq8jq3vav68lkg0poh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cWeYQyit--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4dtq8jq3vav68lkg0poh.png" alt="Quadratic time example"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For O(n log n), first we note, that we typically refer to &lt;em&gt;log2(n)&lt;/em&gt;, as we discuss logarithms in algorithms. The graph places this between linear and quadratic time, at a 'bad' running time. If needed, please do refresh your memory on logarithms - the kryptonite of exponentials - before continuing with the next blogpost. The most common linearithmic time algorithms are definitely sorting algorithms. Replacing a quadratic time sorting algorithm with one of linearithmic time is an example of said improvement of running time.&lt;/p&gt;

&lt;p&gt;An example of a linearithmic time algorithm is mergesort. In short, given our integer array with a thousand elements, one would compare pairwise consecutive integers &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;((e1, e2), (e3, e4), (e5, e6) ...)&lt;/em&gt; &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;and then merge exponentially larger sets of integers until finally combining the two halves of the array. Don't worry about the details of the algorithm - we'll get into the algorithm in the next blogpost.&lt;/p&gt;

&lt;p&gt;This algorithm and example would also be applicable for sorting a group of people by age, but quite hard to explain in layman's terms. For a more hands-on example, however, I strongly recommend this clip, &lt;a href="https://www.youtube.com/watch?v=XaqR3G_NVoo"&gt;https://www.youtube.com/watch?v=XaqR3G_NVoo&lt;/a&gt;, in which Sapientia University visualizes the mergesort algorithm by means of Transylvanian-saxon folk dance. If nothing, just do it for the laugh of it.&lt;/p&gt;

&lt;p&gt;The important thing to notice here is the dramatic improvement in running time. A quadratic time algorithm would sort an array in &lt;em&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/em&gt; operations, i.e. a million operations or seconds in our case; the linearithmic algorithm only requires &lt;em&gt;n log n&lt;/em&gt; operations, i.e. ten thousand operations or seconds. This is a reduction from eleven days to two hours!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ologn-logarithmic-time"&gt;
  &lt;/a&gt;
  &lt;strong&gt;O(log(n))&lt;/strong&gt; Logarithmic Time
&lt;/h3&gt;

&lt;p&gt;We refer to this as logarithmic time. Returning to the &lt;em&gt;bigocheatsheet&lt;/em&gt; graph, we finish back where we started, an 'excellent' running time, even though the running time is dependent on the input size, &lt;em&gt;n&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;An example of a logarithmic time algorithm is binary search for ordered collections. Given our integer array, you search for an integer &lt;em&gt;i&lt;/em&gt; of the array, by continuously looking at the element at the center of the array, and doing one of three things. If the value of the middle element &lt;em&gt;m&lt;/em&gt;:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Is the integer &lt;em&gt;i&lt;/em&gt;, we have found the integer.&lt;/li&gt;
&lt;li&gt;Is greater than the integer &lt;em&gt;i&lt;/em&gt;, we repeat the process for the lower half of the array.&lt;/li&gt;
&lt;li&gt;Is less than the integer &lt;em&gt;i&lt;/em&gt;, we repeat the process for the upper half of the array.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;It should be noted, that other strategies exist for picking the pivot other than choosing the middle element. This is irrelevant for the purpose of this example. It is important to notice, that as a property of logarithms, we need to do this no more than &lt;em&gt;log2(n)&lt;/em&gt; times, as this would leave us with a single element. To figure out, why this is true, try to prove to yourself, that &lt;em&gt;x&lt;/em&gt; in &lt;em&gt;log2(n) = x&lt;/em&gt;, represents the number of times, we can half our input size, and that &lt;em&gt;n&lt;/em&gt; in &lt;em&gt;2&lt;sup&gt;x&lt;/sup&gt; = n&lt;/em&gt;, represents the size of an array you get by doubling &lt;em&gt;x&lt;/em&gt; times.&lt;/p&gt;

&lt;p&gt;This example corresponds to having a thousand people line up in order of their salary, and looking for the person closest to a ridiculously specific yearly salary, such as 359344,297 DKK. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hORr0gs9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ciweveljea97kyqhk1l5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hORr0gs9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ciweveljea97kyqhk1l5.png" alt="Logarithmic time example"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;By following the three steps above, you only need to ask a maximum of &lt;em&gt;log2(n) + 1&lt;/em&gt; people, in this case eleven, to come to a conclusion. Note, that the last question (i.e. the + 1) comes from asking the last person to compare him with his "neighbours".&lt;/p&gt;

&lt;p&gt;Again, the important thing to notice is how logarithms scale. If we increase the number of people to a million people, the amount of needed questions only increases to twenty. This explains, why it is depicted on top of constant time algorithms in the &lt;em&gt;bigocheatsheet&lt;/em&gt; graph, as it almost seems to be independent of the input size, &lt;em&gt;n&lt;/em&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-to-come"&gt;
  &lt;/a&gt;
  What's to come?
&lt;/h2&gt;

&lt;p&gt;With the basics down, we will get into the design and analysis of algorithms in the next two blog posts. We will do so by becoming acquainted with three families of algorithms - greedy algorithms, dynamic programming algorithms, and divide and conquer algorithms. This will lead us to the final blog post, which will discuss the subject of my own master thesis, which is based on randomized algorithms - more specifically differential privacy.&lt;/p&gt;

&lt;p&gt;You made it this far. By now, you should already feel more comfortable discussing algorithms and data structures in future projects. We've covered the basics, which means, you are more than qualified for reading the rest of the posts. I hope you do!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;References&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=XaqR3G_NVoo"&gt;https://www.youtube.com/watch?v=XaqR3G_NVoo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bigocheatsheet.com/"&gt;https://www.bigocheatsheet.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Algorithm Design, Kleinberg and Tardos&lt;/li&gt;
&lt;li&gt;Coding Blocks, episode 'What is Algorithmic Complexity?'&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>algorithms</category>
    </item>
    <item>
      <title>How to Create Multilingual Website in Laravel 8</title>
      <author>avani-trivedi</author>
      <pubDate>Fri, 27 Aug 2021 10:47:09 +0000</pubDate>
      <link>https://dev.to/avanitrivedi/how-to-create-multilingual-website-in-laravel-8-2ef8</link>
      <guid>https://dev.to/avanitrivedi/how-to-create-multilingual-website-in-laravel-8-2ef8</guid>
      <description>&lt;p&gt;Hi Dev,&lt;/p&gt;

&lt;p&gt;In this tutorial I will share with you how to create a multilingual website in laravel 8 application, I will show an example of laravel 8 multiple languages.&lt;/p&gt;

&lt;p&gt;Here, I will give you a full example of how to laravel 8 multilanguage with language dropdown or laravel 8 multiple language websites as below so follow my all steps.&lt;/p&gt;

</description>
      <category>laravel</category>
    </item>
    <item>
      <title>Software development for portable gadgets</title>
      <author>Victor Quan Lam</author>
      <pubDate>Fri, 27 Aug 2021 10:25:10 +0000</pubDate>
      <link>https://dev.to/victorquanlam/software-development-for-portable-gadgets-lib</link>
      <guid>https://dev.to/victorquanlam/software-development-for-portable-gadgets-lib</guid>
      <description>&lt;p&gt;A portable communication device is a pocket-sized gadget that a person carries with them. They usually have a touch-screen display or a small keyboard. The input and output of a personal digital assistant (PDA) are merged into a touchscreen device. Cellphones and PDAs are popular among folks who need the aid and conveniences of a traditional computer but cannot take one with them. &lt;br&gt;
We want to think that the humanity has always been forward-thinking. However, for the majority of the twentieth century, innovation was a slow and steady process. It was the result of individual brilliance or think tanks. For the most part, clever people innovate, and the general public gradually adopted the concept. With the development of the computer, the mainstream's love affair with innovation began. It gained traction with the invention of the Internet.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Smart Gadgets:&lt;/strong&gt;&lt;br&gt;
A smart gadget is an electronic device that communicates with other networks or devices via wireless protocols such as Wi-Fi, Bluetooth, NFC, 3G, and so on. They have the ability to work autonomously as well as collaboratively. Modern technology has transformed previous technology and has had a significant impact on everyone's lives. In our daily lives, we use smart devices in a variety of ways. Smart key chains, smart bands, smart watches, smartphones, tablets, and phablets are some common examples of smart electronics.&lt;br&gt;
It is also capable of artificial intelligence. Smart gadgets are known to function in a variety of ways in a given setting. They have many qualities and may be adapted to the computing environment, the human environment, and the physical world. A smartphone is one of the suggested gadgets that everyone should have in today's environment. Smartphone technology has radically altered the global landscape.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Impact of Technology on Human:&lt;/strong&gt;&lt;br&gt;
The way humans connect with one another has been transformed by technology. Various forms of human communication, helped by technology, have been interwoven into people's life. This has an impact on how individuals and groups interact and communicate with one another. Technology has both positive and harmful effects on people in society. &lt;br&gt;
How we can improve performance of Gadget with Software?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cleaning Gadget:&lt;/strong&gt;&lt;br&gt;
Dirt accumulates on technological devices over time. Dirt is not only ugly, but it may also render gadgets inefficient and dangerous. For example, dust in a computer chassis can cause it to overheat. This causes fans to work faster to disperse heat, requiring more electricity. Most gadget makers provide detailed instructions on how to clean their products. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Deleting Unnecessary Files:&lt;/strong&gt;&lt;br&gt;
We wind up acquiring a large number of unneeded files on our storage devices over time. This has the disadvantage of making computing systems slower and files more jumbled. You can manually sort through files and delete those that are no longer needed. You can also use third-party software to sort files based on factors such as frequency of use or date of update. This will give you a good indication of which files you rarely use and can safely delete.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Scanning for Malware:&lt;/strong&gt;&lt;br&gt;
Despite our best efforts to keep systems safe, dangerous software occasionally finds its way into our computing devices. This demands regular scans to detect and remove viruses and malware. Most anti-virus and/or anti-malware products allow users to schedule complete scans at regular intervals. Even if you are confident that your system is secure, enable this setting.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Updating Software:&lt;/strong&gt;&lt;br&gt;
Because developers are always adding new features such as security and performance, the software we use in computers, cellphones, and other devices is incredibly dynamic. The quick evolution is advantageous in that it improves user experience and protects against malicious entities. This necessitates that you keep the software on your devices up to date.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Accelerometers in Smartphones:&lt;/strong&gt;&lt;br&gt;
The twenty-first century ushers in a new era of technological advancement. Many engineers and scientists' technological creations have benefitted the globe in important ways, such as smartphones, cameras, laptop computers, and many more electrical gadgets that are incredibly valuable to humans and are used in large quantities around the world. The accelerometer is made up of several separate elements that work in a variety of ways.&lt;br&gt;
It is utilized not just in cellphones, but also in many other vital items including as planes, computers, iPhones, tablets, and televisions, all of which are basic human requirements in today's society. Accelerometers are also employed to guarantee that images are shown properly - portrait or landscape - depending on how the phone is held. Accelerometers are increasingly being employed as a form of user input, most notably in current games where tilting and rotating the handset can direct onscreen action. Not only do accelerometers have several applications in business and science that benefit society.&lt;/p&gt;

</description>
      <category>research</category>
      <category>portablegadgets</category>
    </item>
    <item>
      <title>Presetter - The easiest way to reuse your config files and build scripts over npm projects</title>
      <author>Alvis Tang</author>
      <pubDate>Fri, 27 Aug 2021 10:14:22 +0000</pubDate>
      <link>https://dev.to/alvis/presetter-the-easiest-way-to-reuse-your-config-files-and-build-scripts-over-npm-projects-4kl1</link>
      <guid>https://dev.to/alvis/presetter-the-easiest-way-to-reuse-your-config-files-and-build-scripts-over-npm-projects-4kl1</guid>
      <description>&lt;p&gt;Nowadays, as the JS/TS ecosystem continues to mature, developers are writing more and more build scripts and configuration files for their projects. How many times you've copied identical configs for babel, eslint, jest, typescript and the life cycle scripts in package.json?&lt;/p&gt;

&lt;p&gt;For me, I've 40 common devDependencies, 24 scripts and 7 config files across my npm projects. Putting the need to copy and paste these things to bootstrap a new project aside, updating these tools across existing projects is just horrible pain. 🤦‍♂️&lt;/p&gt;

&lt;p&gt;So I spent my spare time making &lt;strong&gt;presetter&lt;/strong&gt;, a utility tool you'd love to use for easily and quickly reusing build scripts/configs across different npm projects. Now, instead of these countless devDependencies, build scripts, and config files, I can reduce them into just 2 devDependencies (or just 1 if you use npm 7+ which auto install peer dependencies automatically) and 1 config file (for presetter to determine which preset to use)!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r4vhDDjr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h9pqxp0f27va7nodj50b.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r4vhDDjr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h9pqxp0f27va7nodj50b.jpg" alt="Before and After"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sounds-good-what-is-presetter-and-a-preset-then"&gt;
  &lt;/a&gt;
  😀 Sounds good. What is presetter and a preset then?
&lt;/h2&gt;

&lt;p&gt;Presetter is a new open-source project that simplifies workflow for js/ts developers by providing a utility tool to enable us to store all common developmental configurations in one place, not a copy of those on each repo. This allows not only for the reuse of configurations but also reduces time spent on setup and maintaining the build systems across projects. Presetter is written in typescript but compatible with all js packages, backend, or frontend, as long as you use a package.json.&lt;/p&gt;

&lt;p&gt;In a nutshell, &lt;strong&gt;presetter&lt;/strong&gt; is a utility tool that set up and manage common devDependencies specified by a &lt;strong&gt;preset&lt;/strong&gt;, which provides 3 types of common building configurations: devDependencies, build scripts, and config files. With presetter, you can replace many of your common devDependencies like eslint plugins etc and its config files and scripts into only two dev packages and a config file, namely &lt;em&gt;presetter&lt;/em&gt;, your preset choice, and a &lt;code&gt;.presetterrc&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;By pairing them up, you no longer need to spend hours on maintaining the build systems across projects. Instead, simply pick (and customise) a predefined preset either off-the-shelf from the community or an unpublished private package living in your git repository. What's more? You get version control on the build system for free due to the way how a preset is packaged. Life is much simpler since then!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wow-tell-me-how-to-use-it"&gt;
  &lt;/a&gt;
  😻 Wow. Tell me how to use it
&lt;/h2&gt;

&lt;p&gt;To setup presetter for managing your build system, you can easily achieve it via the &lt;code&gt;presetter use&lt;/code&gt; command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx presetter use &amp;lt;preset package name e.g. presetter-preset&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;which would perform the following few things:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Install presetter and your choice of preset as devDependencies,&lt;/li&gt;
&lt;li&gt;Patch the &lt;code&gt;scripts&lt;/code&gt; field in your &lt;code&gt;package.json&lt;/code&gt; to enable automatic bootstraping via the &lt;code&gt;prepare&lt;/code&gt; life cycle script,&lt;/li&gt;
&lt;li&gt;Bootstrap the preset by installing all the peerDependencies provided by the preset and create symlinks pointing to the generated config files on your project root, and&lt;/li&gt;
&lt;li&gt;Create a &lt;code&gt;.presetterrc&lt;/code&gt; file on the project root with the following content
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"preset"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&amp;lt;preset package name&amp;gt;"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ww8Pox2G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/36m9ul90iw67t6h2tig9.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ww8Pox2G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/36m9ul90iw67t6h2tig9.gif" alt="Bootstrap Presetter"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After starting the project through bootstrapping, you have reached a point where it normally takes 5-10 minutes to duplicate all configuration settings from another repository. Now, you can achieve it by just &lt;strong&gt;ONE COMMAND&lt;/strong&gt;!&lt;/p&gt;

&lt;p&gt;To apply the preset scripts, you can execute a script by using the &lt;code&gt;presetter run &amp;lt;script name&amp;gt;&lt;/code&gt; or shorthanded &lt;code&gt;run &amp;lt;script name&amp;gt;&lt;/code&gt; command.&lt;/p&gt;

&lt;p&gt;Using &lt;strong&gt;presenter-preset&lt;/strong&gt; for example, when you invoke &lt;code&gt;run build&lt;/code&gt;, presetter will merge the custom scripts defined in your package.json and the &lt;a href="https://github.com/alvis/presetter/blob/master/packages/preset/templates/scripts.yaml"&gt;templated defined here&lt;/a&gt;, then invoke &lt;code&gt;run-s clean build:*&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tips&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can also use &lt;code&gt;run &amp;lt;script name&amp;gt;&lt;/code&gt; as part of your life cycle scripts to make your build experience identical to what you have before. For example,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nl"&gt;"scripts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"build"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"run build"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"coverage"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"run coverage"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"lint"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"run lint"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"prepare"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"presetter bootstrap &amp;amp;&amp;amp; run prepare"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"prepublishOnly"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"run prepublishOnly"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"release"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"run release --"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"test"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"run test --"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"watch"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"run watch"&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#but-can-i-customise-it"&gt;
  &lt;/a&gt;
  👻 BUT. Can I customise it?
&lt;/h2&gt;

&lt;p&gt;Short answer, SURE! You may be just 99% satisfied with the preset and want to change a little thing like turning on/off a lint rule, presetter just get you covered!&lt;/p&gt;

&lt;p&gt;To do this, you just need to pass your customised config in the &lt;code&gt;config&lt;/code&gt; field in &lt;code&gt;.presetterrc.json&lt;/code&gt;. This config will be passed to the preset's configurator to achieve customisation. After adding your config, run &lt;code&gt;npx presetter bootstrap&lt;/code&gt; again to regenerate the config files.&lt;/p&gt;

&lt;p&gt;For example, to add &lt;code&gt;DOM&lt;/code&gt; as a library in tsconfig.json provided by &lt;strong&gt;presetter-preset&lt;/strong&gt;, simply add these lines in your &lt;code&gt;presetterrc.json&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"preset"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"presetter-preset"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"config"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"tsconfig"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"compilerOptions"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"lib"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"DOM"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Each preset can have its own set of customizable features. So check the preset's  documentation for a full list of customisable elements.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cool-whats-the-magic-behind-it"&gt;
  &lt;/a&gt;
  🎩 Cool! What's the magic behind it?
&lt;/h2&gt;

&lt;p&gt;Presetter may sound too good to be true. Now you don't need to copy and paste all the time. But you may wonder how does it work?&lt;/p&gt;

&lt;p&gt;Well, it's actually pretty simple. Presetter basically does the following few things.&lt;/p&gt;

&lt;p&gt;When you run &lt;code&gt;presetter bootstrap&lt;/code&gt;, it&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;generates config files provided from the preset's template with your customisation applied and create symlinks on your project root, and&lt;/li&gt;
&lt;li&gt;uses npm's arborist to install all peer dependencies defined in the preset's package.json, so that it works even with npm &amp;lt;7.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When you run &lt;code&gt;presetter run &amp;lt;command&amp;gt;&lt;/code&gt;, it&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;merges your project's package.json with the script template provided by the preset and invoke the command.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That's basically all about how preset works. Now, let's see what kinds of presets are available and how to contribute one!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#alright-what-presets-can-i-try-today"&gt;
  &lt;/a&gt;
  🐣 Alright. What presets can I try today?
&lt;/h2&gt;

&lt;p&gt;A preset is a collection of common development configurations that can be applied to a project. It provides 3 groups of common building tools&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;devDependencies,&lt;/li&gt;
&lt;li&gt;build scripts, and&lt;/li&gt;
&lt;li&gt;config files&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Today, we have 4 offical presets for different kinds of projects:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/alvis/presetter/tree/master/packages/preset"&gt;presetter-preset&lt;/a&gt;: The starter kit for your typescript project, including settings for typescript, eslint, jest, prettier, standard-version and many others&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/alvis/presetter/tree/master/packages/preset-esm"&gt;presetter-preset-esm&lt;/a&gt;:  An extension of presetter-preset with dual CJS/ESM export support.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/alvis/presetter/tree/master/packages/preset-web"&gt;presetter-preset-web&lt;/a&gt;: A preset for a modern web project&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/alvis/presetter/tree/master/packages/preset-react"&gt;presetter-preset-react&lt;/a&gt;: A preset for a react project&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Each preset is a single npm package. You can publish yours to share it with the community or just make it as a github repo without publishing it. Both works.&lt;/p&gt;

&lt;p&gt;Another thing is that you can also contribute to the official presets. See &lt;a href="https://github.com/alvis/presetter/blob/master/CONTRIBUTING.md"&gt;CONTRIBUTING&lt;/a&gt; for all things related to preset's development and contribution!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#to-conclude"&gt;
  &lt;/a&gt;
  👾 To Conclude...
&lt;/h2&gt;

&lt;p&gt;Now you can stop worrying about managing devDependencies, scripts and config files. Presetter is a tool that reduces the complexity of your build system. &lt;/p&gt;

&lt;p&gt;We all know that duplication of code is a bad thing, and there are many tools to eliminate it, but we don't have a tool for avoiding copying build configuration.&lt;/p&gt;

&lt;p&gt;It's time to put the messy build configs aside. Try &lt;strong&gt;presetter&lt;/strong&gt; today and visit &lt;a href="https://github.com/alvis/presetter"&gt;the repository on Github&lt;/a&gt; for detailed documentation.&lt;/p&gt;

&lt;p&gt;Don't forget to star or watch this repo if you like it! And don't forget to leave your comments below too. 👇&lt;/p&gt;

</description>
      <category>npm</category>
      <category>productivity</category>
      <category>tooling</category>
      <category>showdev</category>
    </item>
    <item>
      <title>Free Resources for Developers</title>
      <author>Abhiraj Bhowmick</author>
      <pubDate>Fri, 27 Aug 2021 09:56:43 +0000</pubDate>
      <link>https://dev.to/rainboestrykr/free-resources-for-developers-meg</link>
      <guid>https://dev.to/rainboestrykr/free-resources-for-developers-meg</guid>
      <description>&lt;h3&gt;
  &lt;a href="#who-doesnt-love-free-things"&gt;
  &lt;/a&gt;
  Who doesn't love free things?
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#nobody"&gt;
  &lt;/a&gt;
  nobody
&lt;/h3&gt;

&lt;p&gt;Henceforth, I present before you a curated list of design and UI resources, from stock photos, web templates, CSS frameworks, UI tools, libraries and much more.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;&lt;a href="https://devresources.gitbook.io"&gt;Dev Resources&lt;/a&gt;&lt;/em&gt;&lt;/strong&gt; is a compilation of the most important resources for developers compiled and stacked into one website for you to access. If you use this product, please do like this post and follow my socials.&lt;/p&gt;

&lt;p&gt;Below listed are some of the popular listings.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://uidesigndaily.com/"&gt;UI Design Daily&lt;/a&gt;​ - Awesome UI Components of all types &lt;/p&gt;

&lt;p&gt;&lt;a href="https://freetypography.com/"&gt;Free Typography&lt;/a&gt; - A list of high quality fonts&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bootstrapmade.com/"&gt;BootstrapMade&lt;/a&gt; - Elegant, clean and beautiful free &lt;br&gt;
templates using Bootstrap.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://html5up.net/"&gt;HTML5Up&lt;/a&gt; - Very modern, unique responsive HTML5/CSS3 themes&lt;/p&gt;

&lt;p&gt;&lt;a href="https://chrome.google.com/webstore/detail/whatruns/cmkdbmfndkfgebldhnkbfhlneefdaaip?hl=en"&gt;WhatRuns&lt;/a&gt; - Discover what runs a website. Frameworks, Analytics Tools, Wordpress Plugins, Fonts - you name it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://vectr.com/"&gt;Vectr&lt;/a&gt; - Free vector graphics software&lt;/p&gt;

&lt;p&gt;&lt;a href="https://getwaves.io/"&gt;Get Waves&lt;/a&gt; - A free SVG wave generator to make unique SVG waves for web design&lt;/p&gt;

&lt;p&gt;&lt;a href="http://freebbble.com/"&gt;Freeble&lt;/a&gt; - Vectors, patterns, mockups and more&lt;/p&gt;

&lt;p&gt;&lt;a href="https://lukaszadam.com/"&gt;Lukaszadam&lt;/a&gt; - Free Vector artworks&lt;/p&gt;

&lt;p&gt;&lt;a href="https://illlustrations.co/"&gt;Illlustrations&lt;/a&gt; - Beautiful 100 Illustrations - png, svg&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.pexels.com/"&gt;Pexels&lt;/a&gt; - Free stock photos shared by talented creators&lt;/p&gt;

&lt;p&gt;&lt;a href="https://unsplash.com/"&gt;Unsplash&lt;/a&gt; - The internet’s source of freely usable image&lt;/p&gt;

&lt;p&gt;&lt;a href="https://mixkit.co/"&gt;Mix Kit&lt;/a&gt; - Stock video clips &amp;amp; music&lt;/p&gt;

&lt;p&gt;&lt;a href="https://favicon.io/"&gt;Favicon.io&lt;/a&gt; - Generate a favicon from text, from an image, or from an emoji. Download in .ico and .png formats&lt;/p&gt;

&lt;p&gt;&lt;a href="https://logosear.ch/search.html"&gt;LogoSear.ch&lt;/a&gt; - Search engine with over 200,000 SVG logos indexed&lt;/p&gt;

&lt;p&gt;&lt;a href="https://svgporn.com/"&gt;SVGPorn&lt;/a&gt; - 1000+ high-quality SVG logos&lt;/p&gt;

&lt;p&gt;&lt;a href="https://remixicon.com/"&gt;Remix Icon&lt;/a&gt; - Simply Delightful Icon System&lt;/p&gt;

&lt;p&gt;&lt;a href="https://iconmonstr.com/"&gt;Iconmonstr&lt;/a&gt; - Discover 4496+ free icons in 313 collections&lt;/p&gt;

&lt;p&gt;&lt;a href="https://angrytools.com/"&gt;Angry Tools&lt;/a&gt; - Free web tools for speed up your development.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://rapidapi.com/hub"&gt;Rapid API&lt;/a&gt; - Discover and connect to thousands of APIs.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://devresources.gitbook.io"&gt;Read More...&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If you wish for a category or listing to be added, you can comment here below or shoot me an &lt;a href="//mailto:abhirajbhowmick27@gmail.com"&gt;email&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>programming</category>
      <category>news</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Best CSS Shorthand properties For Every Front-end Developer</title>
      <author>Tips and Tricks</author>
      <pubDate>Fri, 27 Aug 2021 09:55:34 +0000</pubDate>
      <link>https://dev.to/tips_tricks/best-css-shorthand-properties-for-every-front-end-developer-36oh</link>
      <guid>https://dev.to/tips_tricks/best-css-shorthand-properties-for-every-front-end-developer-36oh</guid>
      <description>&lt;h1&gt;Shorthand properties&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Shorthand properties&lt;/em&gt;&lt;/strong&gt; are CSS properties that let you set the values of multiple other CSS properties simultaneously. Using a shorthand property, you can write more concise (and often more readable) style sheets, saving time and energy.&lt;/p&gt;
&lt;p&gt;The CSS specification defines shorthand properties to group the definition of common properties acting on the same theme. For instance, the CSS &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/background"&gt;&lt;code&gt;background&lt;/code&gt;&lt;/a&gt; property is a shorthand property that's able to define the values of &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/background-color"&gt;&lt;code&gt;background-color&lt;/code&gt;&lt;/a&gt;, &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/background-image"&gt;&lt;code&gt;background-image&lt;/code&gt;&lt;/a&gt;, &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/background-repeat"&gt;&lt;code&gt;background-repeat&lt;/code&gt;&lt;/a&gt;, and &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/background-position"&gt;&lt;code&gt;background-position&lt;/code&gt;&lt;/a&gt;. Similarly, the most common font-related properties can be defined using the shorthand &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/font"&gt;&lt;code&gt;font&lt;/code&gt;&lt;/a&gt;, and the different margins around a box can be defined using &lt;span&gt; the&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/margin"&gt;&lt;code&gt;margin&lt;/code&gt;&lt;/a&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;shorthand.  &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/best-css-shorthand-properties/&amp;amp;ved=2ahUKEwjIoPCc99DyAhU7-nMBHUxQDrYQFnoECEAQAQ&amp;amp;usg=AOvVaw23jKjWtvmnvAtDmQi7vhZp&amp;amp;cshid=1630058051965"&gt;CSS Shorthand properties for Web Developer&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Start your Cryptocurrency Exchange with White label Cryptocurrency Exchange Software</title>
      <author>joewalshblog</author>
      <pubDate>Fri, 27 Aug 2021 09:50:29 +0000</pubDate>
      <link>https://dev.to/joewalshblog/start-your-cryptocurrency-exchange-with-white-label-cryptocurrency-exchange-software-p1b</link>
      <guid>https://dev.to/joewalshblog/start-your-cryptocurrency-exchange-with-white-label-cryptocurrency-exchange-software-p1b</guid>
      <description>&lt;h1&gt;
  &lt;a href="#all-about-the-white-label-cryptocurrency-exchange-software-you-need-to-know-before-starting-your-crypto-business"&gt;
  &lt;/a&gt;
  All about the White label cryptocurrency exchange software you need to know before starting your crypto business
&lt;/h1&gt;

&lt;p&gt;Cryptocurrency is the center of talk in digital finance. It is even getting hot, as the price of bitcoin and other cryptocurrencies are rising in their value. The entrepreneurs lack some prior knowledge about the software and its development. As it is an emerging technology, it is gaining traction right now. Without worrying about unnecessary laurels, it is best important to know about digital finance in a 360-degree fashion to have a clear picture of the &lt;a href="https://www.coinsclone.com/whitelabel-crypto-exchange?utm_source=Dev.to+TOP&amp;amp;utm_medium=joewalshblog&amp;amp;utm_campaign=White+label+crypto+exchange+software+top+post&amp;amp;utm_term=white+label+crypto+exchange+software"&gt;&lt;strong&gt;white label cryptocurrency exchange software&lt;/strong&gt;&lt;/a&gt;. &lt;br&gt;
In this blog, let us have a complete knowledge sharing of the so-called white label crypto exchange, its benefits, types, features, and services related to the marketing and legal solutions. Let us jump into the article.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-a-white-label-cryptocurrency-exchange"&gt;
  &lt;/a&gt;
  What is a white label cryptocurrency exchange?
&lt;/h2&gt;

&lt;p&gt;White label crypto exchange is a readymade, instant, and off-the-rack cryptocurrency exchange software. It is different from those clone script-based software that resembles the similarity of any popular exchanges. White label cryptocurrency exchange is a common template with all the basic cryptocurrency exchange essentialities equipped with it. It comes up with customization features along with some additional security features. &lt;/p&gt;

&lt;p&gt;It is best if you start your white label crypto exchange If you are an entrepreneur or a startup. It is because of its immediate market entry and successful business strategy development. I am not saying that being an entrepreneur, you cannot build your cryptocurrency exchange from scratch. It involves a huge pile of coding techniques and multiple varieties of technology tools to develop them. In that sense, white-label draws you to the market on an immediate basis.&lt;/p&gt;

&lt;p&gt;You should know why you should choose the white label cryptocurrency exchange over the clone script software and why would you need it?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-should-you-prefer-white-label-cryptocurrency-exchange-over-a-clone-script"&gt;
  &lt;/a&gt;
  Why should you prefer White label cryptocurrency exchange over a clone script?
&lt;/h2&gt;

&lt;p&gt;The specialty of the white-label crypto exchange is that they have a unique script language and design that does not show any kind of plagiarism. The only similarity between the white label and the clone script exchange software is their customization techniques.&lt;br&gt;
Below given are some of the indicated points that showcase why you must pick the White label crypto exchange software other than the clones.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Configuration&lt;/strong&gt; - It is based on the configuration of the software that makes the white label one comfortable other than the clone scripts. They arrive with various customizations in order to prevent any imitation mechanism. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;The unidentified interest of blend of variables&lt;/strong&gt; - Entrepreneurs become energized when they talk about clone contents and they frequently produce some ill-conceived demonstration of blending the uncommon highlights of various clone scripts that make their trade exchanging awkward. A white label doesn't do that.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;No uniqueness&lt;/strong&gt; - There is no uniqueness in starting a clone script exchange software with a different name on it. Despite the user feels very easy to operate, they would easily identify the similarity which would be the greatest defect in user management. But, in the case of the White label, it is a unique built customizable exchange software that does not resemble any kind of popular exchange software. &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#types-of-cryptocurrency-trading-platform"&gt;
  &lt;/a&gt;
  Types of Cryptocurrency trading platform
&lt;/h3&gt;

&lt;p&gt;Let us see the types of cryptocurrency exchange trading types below:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Margin Trading&lt;/strong&gt; - Assuming your customer is coming up short on holds, you can give this decision to the customer with the objective that he can utilize saves either from the executive himself or from a private ally or fence monetary sponsor to place assets into cryptocurrency. This is to help a wide range of monetary supporters who should place assets into computerized cash and procure gigantic advantages in the near end. Impact trading helps your customer with contributing past what he can have the option to do. This is a money-related request that your customers can use. To be short, it is the impact trading that can uphold the customer responsible for your crypto exchange platform and inclination the customers to place assets into advanced types of cash paying little mind to their financial limit. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Perpetual contract&lt;/strong&gt; - The whole exchange happens dependent on the propagation of the client. The client can either pull out the exchange or store for an exchange at whatever point he needs as it doesn't convey a specific timetable. It is a crypto to a crypto medium where you can execute or trade any of the significant digital forms of money to another. Here, resources are not permitted and don't convey a course of events for the exchange. Its capacities are like the fates contract as the two of them have a place with the subsidiaries exchanging classification. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Copy Trading&lt;/strong&gt; - Either your client is an amateur in the crypto market or a veteran, the duplicate exchanging highlights will assist him with getting by in this unstable market. Duplicate exchanging is the element that assists the new broker with mastering a few abilities in the crypto market so he can gain proficiency for certain new methods that the veteran does during the market vacillations. You can utilize this element in your digital currency exchange platform to improve client commitment. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Spot Trading&lt;/strong&gt; - If you need your cryptocurrency exchange platform to perform like mainstream trades like Binance or Coinbase, at that point you ought to incorporate a spot exchanging highlight your foundation. It has a high TPS and high liquidity that various exchanges can be flown over surprisingly fast. Furthermore, envision the exchange charge for such exchanges. It can really make your business a beneficial one in a short span. Spot exchanging does exclude different types of income age from your site. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Over-the-counter Trading&lt;/strong&gt; - Trading income can be duplicated utilizing the OTC component. Ridiculous exchanging assists you with creating exchange quickly with effective exchange charges, and productive P2P installments. OTC exchanging is one of the best income age hotspots for both the clients and the trading platform proprietor. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Peer-to-peer Trading&lt;/strong&gt; - This is a decentralized exchange include where the client can execute without the impedance of the trading platform proprietor. It doesn't imply that the administrator is total without obstruction except if there is an issue in the exchange and it needs a goal. Possibly you are building a brought together or a decentralized platform. Adding the shared element in exchanges will assist you with creating more income than you do in any case. &lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#features-of-white-label-crypto-exchange-software"&gt;
  &lt;/a&gt;
  Features of white label crypto exchange software
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;High amount of transactions per second&lt;/strong&gt; - In request to upgrade the exchanging experience for the clients, the white label crypto trade exchanging assists you with boosting client commitment through quicker transactions. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Immaculate exchanging motor&lt;/strong&gt; - If your client's exchanges are coordinated impeccably with a vigorous exchanging motor that can support the exchanging experience of the client. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Wallet coordination&lt;/strong&gt; - Apart from the white label cryptocurency trade programming the digital currency wallet would be incorporated so the exchanges would be put away in the crypto wallet in that specific coins address. A multi-cryptocurrency wallet would be incredible for the functioning crypto exchanging platform as there would be a progression of exchanges in a brief time.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Liquidity&lt;/strong&gt; - White label digital currency trades are exceptionally fluid to help crypto exchanges and execute them right away. The higher the liquidity, the higher will be the scope of the white label crypto trading platform among the clients. It will likewise upgrade client commitment and successive exchanges prompting higher ROI for the trade proprietor. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Security highlights&lt;/strong&gt; - Apart from the blockchain innovation, there are extra security includes that even the mainstream clone contents would not be having. This sort of multi-security highlight will keep the site from being hacked and give encryption to a wide range of advances and correspondences. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Exchange of advanced resources&lt;/strong&gt; - If your client needs to trade or exchange, the white label crypto trading platform helps him in like manner. In this, you can either change the fiat to crypto or the other way around or even crypto to crypto. Likewise, in the event that you need to decentralize your exchange without the impedance of the administrator, at that point you can favor the p2p trade alternative in your foundation. However, ensure that there is no issue in regards to the exchange trade. As when the question emerges, the administrator meddles and settles the issue right away.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;KYC and AML&lt;/strong&gt; - This is an exchanging platform and not a tax evasion site. Along these lines, it is critical to set your KYC standards and permit clients to exchange just on the off chance that they have fulfilled the administrator dependent on the KYC and AML subtleties. Plan appropriate AML rules with the goal that you and your foundation can make any future disasters. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Trading Bot&lt;/strong&gt; - As difficult work is finished with, it is the period of exchanging bot that can accurately bring you ideal exchanges for your clients dependent on their capitalization limit. They cautiously break down the market changes and bring out viable exchanges for your clients that draw in them with your digital currency trade platform. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Intelligent analytic outlines&lt;/strong&gt; - It is totally founded on charts. The whole exchanging universe goes to a choice to purchase or sell dependent on what the diagrams say. What's more, we furnish them with refreshed data consistently that reflects in the client's dashboard. This assists the clients withdrawing in with the platform and do exchanges dependent on the graphs and their market varieties and effect. The dealers can investigate the continuous diagrams and direct exchanges in like manner. 
10 &lt;strong&gt;Forgery prevention and protection&lt;/strong&gt; - This is one of the security includes that would be enlisted into the white label crypto trade. With the acceptance of CSRF (Cross-Site imitation assurance) and falsification avoidance component, there is no accessible method of directing deceitful exercises in the platform. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Admin panel&lt;/strong&gt; - With a shocking administrator board on the white name crypto platform, the administrator can investigate the client's exchanges, the exchanges that he directed and the bank articulations and different subtleties, and so on &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Customer support&lt;/strong&gt; - To address client inquiries, you can give all day, everyday client care to your clients. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Referral program&lt;/strong&gt; - Through a reference program, you can profit from your clients to grow your crypto trade platform to more individuals. A commitment in the referral exchange or a prize will urge the client to go for referral sign-ins.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Crypto payment gateway integration&lt;/strong&gt; - Mix of crypto payment gateway with the white name bitcoin trade stage for cross-segment exchanges. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;IEO module&lt;/strong&gt; - This is a symbolic deal where your client can sell the token and create the capital for his business. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Staking&lt;/strong&gt; - The white name stage in the digital money trade stage gives a chance to the clients to stake cryptographic forms of money for a specific lock-in period where one can pull out the assets after the lock-in period is finished. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Escrow&lt;/strong&gt; - It is help where a confided-in outsider ( for this situation - the administrator) should deal with the exchange or trade of assets between the executing parties.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#benefits-of-white-label-cryptocurrency-exchange-platform"&gt;
  &lt;/a&gt;
  Benefits of white label cryptocurrency exchange platform:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Time saver&lt;/strong&gt; - Making a white label trade programming and sending it requires some investment than redoing a clone content and carrying it to live. Around there, a white-name cryptographic money trade stage takes insignificant time underway, customization, and sending and you can rejuvenate it in a flash. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Financially savvy&lt;/strong&gt; - White label bitcoin trade stages are effectively reasonable and accompanied low speculation. It is a direct result of the readymade trade programming that the white name item gives. A client who needs to start a white imprint crypto programming improvement can spend close to no and add on some other security and additional features to make it uncommon and feasible. It is essentially established on the business necessities of the clients. Nevertheless, to be unequivocal, regardless of those customizations, white-mark programming goes with an insignificant exertion stood out from programming without any planning.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Customizing the prerequisites&lt;/strong&gt; - In the white mark cryptographic money trade programming, you can customize the necessities dependent on the business needs. You can examine the fundamental highlights that embrace your nation's guidelines and set in your white name crypto programming to make your foundation remarkable and powerful from others. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;No specialized aptitude required&lt;/strong&gt; - For making a white mark digital money trade programming, you needn't bother with any sort of specialized information. It is instant programming with refreshed highlights alongside customizations.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Multiple payment methods&lt;/strong&gt; - This is one such advantage of the white name bitcoin trade programming where the client can exchange or trade on the stage with the best accessible installment alternative with no limitations. This has made both the dealers and trade proprietors more joyful as the brokers can exchange with no issues and the trade proprietors get the income for each exchange that is occurring on the stage. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Multiple device access&lt;/strong&gt; - Be you are utilizing a cell phone or on your pc, the UI adjusts to make your client experience more solid and compelling. The white name cryptographic money trade programming can work on different gadgets with no specialized glitch.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#how-much-does-it-cost-to-create-a-white-label-cryptocurrency-exchange-software"&gt;
  &lt;/a&gt;
  How much does it cost to create a white label cryptocurrency exchange software:
&lt;/h2&gt;

&lt;p&gt;It is a great question by the way as the charge varies according to the additional features that you want to induct. If to be said approximately, the range relies on between $8k - $15k. Make sure that you reach the best &lt;a href="https://www.coinsclone.com/whitelabel-crypto-exchange?utm_source=Dev.to+BTM&amp;amp;utm_medium=joewalshblog&amp;amp;utm_campaign=White+label+crypto+exchange+software+post&amp;amp;utm_term=white+label+crypto+exchange+software+provider"&gt;&lt;strong&gt;white label crypto exchange software service provider&lt;/strong&gt;&lt;/a&gt; to get the perfect platform for your cryptocurrency business. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Final words:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Kickstarting a white label cryptocurrency exchange software is the best crypto business option right now. Make sure that you have reached the best white label crypto exchange solutions provider to create your exchange platform. Through this blog, you would have known about white label crypto exchange, its features, and benefits. So, why waiting. Initiate your crypto business with white label software.&lt;/p&gt;

</description>
      <category>startup</category>
      <category>blockchain</category>
      <category>devops</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Getting Started with Svelte by building a landing page</title>
      <author>Eternal Dev</author>
      <pubDate>Fri, 27 Aug 2021 09:09:48 +0000</pubDate>
      <link>https://dev.to/eternaldev/getting-started-with-svelte-by-building-a-landing-page-nog</link>
      <guid>https://dev.to/eternaldev/getting-started-with-svelte-by-building-a-landing-page-nog</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Svelte helps in building web applications using HTML, CSS and Javascript. Unlike React, Svelte doesn't have Virtual DOM or any other abstraction on top. It acts as a compiler that spits out vanilla Javascript. This means that Svelte is added as a dev dependency and results in faster execution speed of the application&lt;/p&gt;

&lt;p&gt;Originally published at (&lt;a href="https://www.eternaldev.com/blog/getting-started-with-svelte-by-building-a-landing-page/"&gt;https://www.eternaldev.com/blog/getting-started-with-svelte-by-building-a-landing-page/&lt;/a&gt;)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#getting-started-with-svelte"&gt;
  &lt;/a&gt;
  Getting started with Svelte
&lt;/h2&gt;

&lt;p&gt;You can use the following command provided to get a copy of the template and start working&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx degit sveltejs/template comapny-landing-page
&lt;span class="nb"&gt;cd &lt;/span&gt;comapny-landing-page

&lt;span class="c"&gt;# to use TypeScript run:&lt;/span&gt;
&lt;span class="c"&gt;# OPTIONAL to run the following command&lt;/span&gt;
node scripts/setupTypeScript.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;It is optional to run the setupTypeScript.js file which will set up the project to use TypeScript instead of Javascript. If you are not familiar with TypeScript, you can skip this step.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I feel like it is easier to start with Svelte after learning the basics of HTML, CSS, and Javascript.&lt;/p&gt;

&lt;p&gt;Install the dependencies and start the project&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install
&lt;/span&gt;npm run dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Basic understanding of HTML, CSS, Javascript&lt;/li&gt;
&lt;li&gt;Familiarity working with Node ecosystem&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;In this article, we don't discuss in-depth about the CSS properties used to make the design. If you are not familiar with any of the CSS properties, you can reach out to me&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#landing-page-design"&gt;
  &lt;/a&gt;
  Landing page design
&lt;/h2&gt;

&lt;p&gt;Building a landing page for your personal website can be a good way to start your dev journey. It mostly has static content and the focus will be on building the layout and styles&lt;/p&gt;

&lt;p&gt;&lt;a href="///static/e2ddb07b674d168daaf2aae382dfa4a4/40601/design1.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---MJIYtI6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://eternaldev.com/static/e2ddb07b674d168daaf2aae382dfa4a4/40601/design1.png" alt="Design1.PNG" title="Landing page design 1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Simple landing screen showcasing a product with a call to action button&lt;/p&gt;

&lt;p&gt;&lt;a href="///static/31e24571668d132ba1b32d32a9968fe6/40601/design2.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Sy8Iwyn7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://eternaldev.com/static/31e24571668d132ba1b32d32a9968fe6/40601/design2.png" alt="Design2.PNG" title="Landing page design 2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Adding a footer at the bottom of the design&lt;/p&gt;

&lt;p&gt;We can divide the design into four component&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Top Menu bar&lt;/li&gt;
&lt;li&gt;Call to Action Content&lt;/li&gt;
&lt;li&gt;Features List&lt;/li&gt;
&lt;li&gt;Footer&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#first-svelte-component"&gt;
  &lt;/a&gt;
  First Svelte component
&lt;/h2&gt;

&lt;p&gt;From the template, we will have a couple of files which are of interest.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;main.ts - The starting point of the app&lt;/li&gt;
&lt;li&gt;App.svelte - First Svelte component
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./App.svelte&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;target&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;props&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;world&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Inside the main.ts file, we are importing the Svelte component and exporting it as a default. It is getting added to the &lt;code&gt;document.body&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#breakdown-of-svelte-component"&gt;
  &lt;/a&gt;
  Breakdown of Svelte component
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Hello&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;!&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Visit&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://svelte.dev/tutorial&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Svelte&lt;/span&gt; &lt;span class="nx"&gt;tutorial&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/a&amp;gt; to learn how to build Svelte apps.&amp;lt;/&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/main&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nx"&gt;main&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="nx"&gt;em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;240&lt;/span&gt;&lt;span class="nx"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="nx"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;h1&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;ff3e00&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;uppercase&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="nx"&gt;em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;media&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;min&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;640&lt;/span&gt;&lt;span class="nx"&gt;px&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;main&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/style&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A component is divided into three parts&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;HTML markup&lt;/li&gt;
&lt;li&gt;Script&lt;/li&gt;
&lt;li&gt;Styles&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You can directly start typing the HTML markup on the file and svelte will render that in the DOM&lt;/p&gt;

&lt;p&gt;Scripts are added inside the &lt;strong&gt;&lt;/strong&gt;. You can have Javascript code that controls the component here.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: Svelte has native support with Typescript as well and running the script at the start of the template makes all the &lt;em&gt;.js files to&lt;/em&gt; .ts files.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Finally, CSS are added into the &lt;strong&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This feels very familiar for anyone who has worked with HTML&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;index.html and global CSS styles are present inside the build folder from the template&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#building-the-top-menu"&gt;
  &lt;/a&gt;
  Building the top menu
&lt;/h2&gt;

&lt;p&gt;After learning the basics of Svelte, let's start by building the Top Menu component. It is easy to split your codebase into multiple small components.&lt;/p&gt;

&lt;p&gt;We will create a new file and import that file into the App.svelte&lt;/p&gt;

&lt;p&gt;Create a new folder called &lt;code&gt;components&lt;/code&gt; and create a file called &lt;code&gt;Menu.svelte&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Convention is to use a Capitalized name for your component names to differentiate it with HTML Elements&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;nav&lt;/span&gt; &lt;span class="nx"&gt;role&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;navigation&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;left_div&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Company&lt;/span&gt; &lt;span class="nx"&gt;Name&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/a&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;right_div&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Blog&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/a&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Pricing&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/a&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;About&lt;/span&gt; &lt;span class="nx"&gt;Us&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/a&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/nav&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nx"&gt;nav&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;background&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="mi"&gt;363062&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;nav&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="nx"&gt;rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;nav&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;hover&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;decoration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;nav&lt;/span&gt; &lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="nx"&gt;rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;right_div&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;right&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;background&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="mi"&gt;827397&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/style&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#css-scopes"&gt;
  &lt;/a&gt;
  CSS Scopes
&lt;/h3&gt;

&lt;p&gt;If you are already familiar with using CSS in other frameworks, you might look at the above styles and think, adding styles directly to div is not the best way as it would affect your other components. Although I will agree with your point, Svelte helps in keeping these styles only specific to the component.&lt;/p&gt;

&lt;p&gt;One of the nice features of Svelte is that the CSS inside the component is scoped to only affect that component. This means that your styles are not leaked outside the component.&lt;/p&gt;

&lt;p&gt;This makes it very easy for writing styles inside the component and not to think about how it will affect the rest of the application.&lt;/p&gt;

&lt;p&gt;Let's add the component to the App.svelte&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt; &lt;span class="nx"&gt;lang&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ts&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Menu&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./components/Menu.svelte&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Menu&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;

&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;root&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;sans&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/style&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Code is very simple to import the Svelte component and then add it as part of the HTML markup&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#main-content-with-image"&gt;
  &lt;/a&gt;
  Main content with Image
&lt;/h2&gt;

&lt;p&gt;Adding the main content to the page as per the design will follow the same steps as above. Creating a new file and importing it into the App.svelte&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt; &lt;span class="nx"&gt;lang&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ts&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;CTA_Name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Click Here&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Landing&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Lorem&lt;/span&gt; &lt;span class="nx"&gt;ipsum&lt;/span&gt; &lt;span class="nx"&gt;dolor&lt;/span&gt; &lt;span class="nx"&gt;sit&lt;/span&gt; &lt;span class="nx"&gt;amet&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;consectetur&lt;/span&gt; &lt;span class="nx"&gt;adipiscing&lt;/span&gt; &lt;span class="nx"&gt;elit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Vivamus&lt;/span&gt; &lt;span class="nx"&gt;ac&lt;/span&gt; &lt;span class="nx"&gt;dui&lt;/span&gt; &lt;span class="nx"&gt;iaculis&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;condimentum&lt;/span&gt; &lt;span class="nx"&gt;sapien&lt;/span&gt; &lt;span class="nx"&gt;ac&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;interdum&lt;/span&gt; &lt;span class="nx"&gt;libero&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;CTA_Name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;right_side&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;img&lt;/span&gt; &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;images/mobile_cover.jpg&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;100%&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Mobile diplay&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/main&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nx"&gt;main&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;flex&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;direction&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;row&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="nx"&gt;rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;background&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="mi"&gt;363062&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;right_side&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;background&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="mi"&gt;827397&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;img&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;box&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="nx"&gt;px&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="nx"&gt;px&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="nx"&gt;px&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="mi"&gt;333&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;margin&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="nx"&gt;rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;min&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="nx"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;border&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="nx"&gt;rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;background&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="mi"&gt;827397&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;1.2&lt;/span&gt;&lt;span class="nx"&gt;rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="nx"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;box&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="nx"&gt;px&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="nx"&gt;px&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="nx"&gt;px&lt;/span&gt; &lt;span class="nx"&gt;black&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/style&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#passing-props-to-the-component"&gt;
  &lt;/a&gt;
  Passing props to the component
&lt;/h2&gt;

&lt;p&gt;Most of the components will require data to be passed in from a higher-level component. We can achieve this by using the props in the component. It is very simple to create props. Just add it as a variable in the scripts like the example below&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt; &lt;span class="nx"&gt;lang&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ts&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;CTA_Name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Click Here&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we are exporting the variable CTA_Name which will act as a prop. We can also assign a default value for the prop if it is not provided.&lt;/p&gt;

&lt;p&gt;To send data to the prop, you can update the App.svelte to pass the variable&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt; &lt;span class="nx"&gt;lang&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ts&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Menu&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./components/Menu.svelte&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Main&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./components/Main.svelte&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Menu&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Main&lt;/span&gt; &lt;span class="nx"&gt;CTA_Name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Get Started&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#creating-the-features-component"&gt;
  &lt;/a&gt;
  Creating the features component
&lt;/h2&gt;

&lt;p&gt;For the Features, we have created a TypeScript type call &lt;code&gt;FeatureType&lt;/code&gt; and added the model inside it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt; &lt;span class="nx"&gt;lang&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ts&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;FeatureType&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;heading&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;img&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;articles&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;FeatureType&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus ac dui iaculis, condimentum sapien ac, interdum libero.&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;heading&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;High Resolution Camera&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;img&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;images/mobile_cover.jpg&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus ac dui iaculis, condimentum sapien ac, interdum libero.&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;heading&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Blazing Fast Processor&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;img&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;images/mobile_cover.jpg&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus ac dui iaculis, condimentum sapien ac, interdum libero.&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;heading&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Long Lasting Battery&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;img&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;images/mobile_cover.jpg&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;features&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;each&lt;/span&gt; &lt;span class="nx"&gt;articles&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;article&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;article&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;feature&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h3&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;article&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;heading&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h3&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;img&lt;/span&gt; &lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;60%&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;article&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;img&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Mobile content logo&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;article&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="sr"&gt;/each&lt;/span&gt;&lt;span class="err"&gt;}
&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;features&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;justify&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;gap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="nx"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="nx"&gt;rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;img&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;clip&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;circle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="nx"&gt;px&lt;/span&gt; &lt;span class="nx"&gt;at&lt;/span&gt; &lt;span class="nx"&gt;center&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;feature&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/style&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#handling-callback-from-the-component"&gt;
  &lt;/a&gt;
  Handling callback from the component
&lt;/h2&gt;

&lt;p&gt;Components can provide events to the parent. This can be achieved using &lt;code&gt;createEventDispatcher&lt;/code&gt; and passing the custom event needed from the child component.&lt;/p&gt;

&lt;p&gt;In this example, we will have a button "Scroll to Top" in the footer which will pass the event to the parent. The parent component can handle the function of how to scroll the page.&lt;/p&gt;

&lt;p&gt;We are not passing any extra data in the event, but that can also be done easily by passing an object when calling the dispatch method.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt; &lt;span class="nx"&gt;lang&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ts&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createEventDispatcher&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;svelte&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;dispatch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createEventDispatcher&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;onBackToTop&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;scrollToTop&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;footer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h3&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Summary&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h3&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h5&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;About&lt;/span&gt; &lt;span class="nx"&gt;Us&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h5&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h5&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Blog&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h5&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h5&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Pricing&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h5&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h3&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Social&lt;/span&gt; &lt;span class="nx"&gt;Links&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h3&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h5&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Facebook&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h5&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h5&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Twitter&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h5&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h3&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Blog&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h3&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h5&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;How&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;select&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;phone&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h5&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h5&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Why&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="nx"&gt;our&lt;/span&gt; &lt;span class="nx"&gt;company&lt;/span&gt; &lt;span class="nx"&gt;phone&lt;/span&gt; &lt;span class="nx"&gt;better&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h5&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h5&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Top&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="nx"&gt;budget&lt;/span&gt; &lt;span class="nx"&gt;phones&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;buy&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="mi"&gt;2021&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h5&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;click&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;onBackToTop&lt;/span&gt;&lt;span class="p"&gt;()}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Scroll&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;Top&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/footer&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nx"&gt;footer&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;justify&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;space&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;around&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;background&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="mi"&gt;363062&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;footer&lt;/span&gt; &lt;span class="nx"&gt;h3&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;uppercase&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;footer&lt;/span&gt; &lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="nx"&gt;rem&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="nx"&gt;rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;footer&lt;/span&gt; &lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;margin&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="nx"&gt;rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;min&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;120&lt;/span&gt;&lt;span class="nx"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;border&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="nx"&gt;rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;background&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="mi"&gt;827397&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="nx"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/style&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once the child component has defined the custom event, the parent component can listen to the event and perform any action needed.&lt;/p&gt;

&lt;p&gt;Here on the Footer component, we have &lt;code&gt;on:scrollToTop&lt;/code&gt; event which will call the &lt;code&gt;scrollToTop&lt;/code&gt; function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt; &lt;span class="nx"&gt;lang&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ts&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Menu&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./components/Menu.svelte&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Main&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./components/Main.svelte&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Features&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./components/Features.svelte&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Footer&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./components/Footer.svelte&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;scrollToTop&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;scrollTo&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Menu&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Main&lt;/span&gt; &lt;span class="nx"&gt;CTA_Name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Get Started&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Features&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Footer&lt;/span&gt; &lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;scrollToTop&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;scrollToTop&lt;/span&gt;&lt;span class="p"&gt;()}&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;root&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;sans&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/style&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;This article covers building a quick landing page using Svelte. If you have any questions or feedback feel free to reach out on our Discord server.&lt;/p&gt;

&lt;p&gt;Stay tuned by subscribing to our mailing list and joining our Discord community&lt;/p&gt;

&lt;p&gt;&lt;a href="https://discord.gg/AUjrcK6eep"&gt;Discord&lt;/a&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>svelte</category>
    </item>
    <item>
      <title>The web does not exists - what would you do differently?</title>
      <author>Keff</author>
      <pubDate>Fri, 27 Aug 2021 08:59:16 +0000</pubDate>
      <link>https://dev.to/nombrekeff/the-web-does-not-exists-what-would-you-do-differently-4cl6</link>
      <guid>https://dev.to/nombrekeff/the-web-does-not-exists-what-would-you-do-differently-4cl6</guid>
      <description>&lt;p&gt;After checking this post:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/siddharthshyniben" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Sfh5RaoM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--72D9ZbiM--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/606915/21f22584-400f-41ab-bdf5-50f6435905fa.jpeg" alt="siddharthshyniben"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/siddharthshyniben/what-would-the-ideal-web-framework-look-like-p5m" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;What would the ideal web framework look like?&lt;/h2&gt;
      &lt;h3&gt;Siddharth ・ Aug 26 ・ 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#discuss&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;This got me thinking about what the web would look like if it was re-done today. Would it look anything similar? Or would a completely new approach be taken?&lt;/p&gt;

&lt;p&gt;What's your take on this?&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>discuss</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Why you should consider having a brand colour</title>
      <author>Andrew Baisden</author>
      <pubDate>Fri, 27 Aug 2021 08:44:38 +0000</pubDate>
      <link>https://dev.to/andrewbaisden/why-you-should-consider-having-a-brand-colour-528i</link>
      <guid>https://dev.to/andrewbaisden/why-you-should-consider-having-a-brand-colour-528i</guid>
      <description>&lt;p&gt;Everybody has a brand it does not matter who you are you have a brand. It is your personal uniqueness that separates you from everyone else. The words that you speak the clothes you wear, your interests everything. Having a personal brand makes it easy for people to recognise you. &lt;/p&gt;

&lt;p&gt;Brand recognition is extremely important if you are a business or if you are trying to promote a product. Top brands have brand colours that are immediately recognisable. If you think about companies like Apple, Amazon, Twitter, YouTube, Instagram, Facebook, McDonalds and Coca Cola for example. We have become so accustomed to them you don't even need to look them up you can pull out their brand colour scheme from memory.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#choosing-a-brand-colour"&gt;
  &lt;/a&gt;
  Choosing a brand colour
&lt;/h2&gt;

&lt;p&gt;Associating a colour with yourself and your brand is a fantastic way to become memorable fast. Whenever anyone thinks or sees that colour you will come to mind. The more they see that colour the more they will associate it with you and all the work that you do. It becomes your presence and your theme. At the moment the brand colour that I am using is purple. Funny story I just kept seeing the colour purple everywhere and there were subliminal references too. I took it as a sign and started to use the colour Purple.&lt;/p&gt;

&lt;p&gt;I did some research and apparently the colour purple is associated with nobility, luxury, power, ambition, independence, wisdom, devotion, extravagance, pride, and creativity. It resonates with me a lot so it just reinforced me using it. You can see some really good examples for companies and the brand colours that they use on &lt;a href="https://brandcolors.net/"&gt;brandcolors.net&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#design-tools-for-creating-a-brand-colour-theme"&gt;
  &lt;/a&gt;
  Design tools for creating a brand colour theme
&lt;/h2&gt;

&lt;p&gt;Creating a brand theme or colour palette can be quite a fun process. The following tools are great for creating colour schemes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.figma.com/"&gt;Figma&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.canva.com/"&gt;Canva&lt;/a&gt;&lt;br&gt;
&lt;a href="https://color.adobe.com/create/color-wheel"&gt;Adobe Color&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.adobe.com/uk/products/xd.html"&gt;Adobe XD&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.adobe.com/uk/products/photoshop.html"&gt;Adobe Photoshop&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.adobe.com/uk/products/illustrator.html"&gt;Adobe Ilustrator&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#developers-using-brand-colours-on-twitter"&gt;
  &lt;/a&gt;
  Developers using brand colours on Twitter
&lt;/h2&gt;

&lt;p&gt;I put together a quick list of a few developers on social media who are using brand colours. Of course there are plenty more out there these are just the ones that I could find at the time.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#purple"&gt;
  &lt;/a&gt;
  Purple
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://twitter.com/andrewbaisden"&gt;@andrewbaiden&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/florinpop1705"&gt;@florinpop1705&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/ania_kubow"&gt;@ania_kubow&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/danielcranney"&gt;@danielcranney&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/MrAhmadAwais"&gt;@MrAhmadAwais&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/james_a_rob"&gt;@james_a_rob&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/RonanCodes"&gt;@RonanCodes&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/johndsaunders"&gt;@johndsaunders&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#yellow"&gt;
  &lt;/a&gt;
  Yellow
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://twitter.com/heyOnuoha"&gt;@heyOnuoha&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/koladev32"&gt;@koladev32&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/IrinaMariaMocan"&gt;@IrinaMariaMocan&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/xodewriter"&gt;@xodewriter&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#orange"&gt;
  &lt;/a&gt;
  Orange
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://twitter.com/natterstefan"&gt;@natterstefan&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/mmgondran"&gt;@mmgondran&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/LauraToddCodes"&gt;@LauraToddCodes&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pink"&gt;
  &lt;/a&gt;
  Pink
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://twitter.com/ewainy"&gt;@ewainy&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/heybereket"&gt;@heybereket&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#blue"&gt;
  &lt;/a&gt;
  Blue
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://twitter.com/VladPasca5"&gt;@VladPasca5&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/lo_victoria2666"&gt;@lo_victoria2666&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/dadaCoding"&gt;@dadaCoding&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/mkhundmiri"&gt;@mkhundmiri&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/Nichovski"&gt;@Nichovski&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/lilly_code"&gt;@lilly_code&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/CosmasDevelegas"&gt;@CosmasDevelegas&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/Dev_suite"&gt;@Dev_suite&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#green"&gt;
  &lt;/a&gt;
  Green
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://twitter.com/MemRook"&gt;@MemRook&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/CK0d3r"&gt;@CK0d3r&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/koladechris"&gt;@koladechris&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/ZoCodes"&gt;@ZoCodes&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/sunilc_"&gt;@sunilc_&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#teal"&gt;
  &lt;/a&gt;
  Teal
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://twitter.com/IAmElijas"&gt;@IAmElijas&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/HemSays"&gt;@HemSays&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#red"&gt;
  &lt;/a&gt;
  Red
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://twitter.com/iamsegunajibola"&gt;@iamsegunajibola&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/emernichiobhain"&gt;@emernichiobhain&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  Final Thoughts
&lt;/h2&gt;

&lt;p&gt;I really hope that you enjoyed reading this article and learned something from it. As a content creator and technical writer I am passionate about sharing my knowledge and helping other people reach their goals. Let's connect across social media you can find all of my social media profiles and blogs on &lt;a href="https://linktr.ee/andrewbaisden"&gt;linktree&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Peace ✌️&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>career</category>
      <category>codenewbie</category>
    </item>
  </channel>
</rss>
