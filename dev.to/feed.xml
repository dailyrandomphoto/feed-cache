<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How to change Address bar URL without refreshing the page using JavaScript
</title>
      <author>Shaswat Raj</author>
      <pubDate>Tue, 18 Jan 2022 05:21:42 +0000</pubDate>
      <link>https://dev.to/sh20raj/how-to-change-address-bar-url-without-refreshing-the-page-using-javascript-2hh5</link>
      <guid>https://dev.to/sh20raj/how-to-change-address-bar-url-without-refreshing-the-page-using-javascript-2hh5</guid>
      <description>&lt;p&gt;Main Article :- &lt;a href="https://codexdindia.blogspot.com/2020/12/how-to-change-adress-bar-url-without.html"&gt;https://codexdindia.blogspot.com/2020/12/how-to-change-adress-bar-url-without.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Documentation Video :- &lt;a href="https://www.youtube.com/watch?v=nTiRTyh6ayg"&gt;https://www.youtube.com/watch?v=nTiRTyh6ayg&lt;/a&gt;&lt;/p&gt;






&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;window.history.pushState('new' , 'title' , 'new.html')
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Uses :- &lt;br&gt;
    1. Use setTimeout's ....&lt;br&gt;
    2. Use in Button onclick&lt;/p&gt;

&lt;p&gt;Let's use it in a function...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; function change(url) { 
   window.history.pushState('new' , 'title' , url) ;
  }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;See Demo Here :- &lt;a href="https://codexdindia.blogspot.com/2020/12/how-to-change-adress-bar-url-without.html"&gt;https://codexdindia.blogspot.com/2020/12/how-to-change-adress-bar-url-without.html&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>sh20raj</category>
      <category>toprevealed</category>
      <category>tips</category>
    </item>
    <item>
      <title>What is Developer Advocacy and how to get a job in it?</title>
      <author>Hassan El Mghari</author>
      <pubDate>Tue, 18 Jan 2022 05:17:14 +0000</pubDate>
      <link>https://dev.to/nutlope/what-is-developer-advocacy-1pf3</link>
      <guid>https://dev.to/nutlope/what-is-developer-advocacy-1pf3</guid>
      <description>&lt;p&gt;You might have seen Developer Relations (also referred to as DevRel or Developer Advocacy) around Twitter lately and been confused on what it was. Or maybe you have a fuzzy understanding of DevRel and want to learn more about it to try to get a job in it.&lt;/p&gt;

&lt;p&gt;Either way, this blog post is for you. We're going to be talking about what developer relations is, exploring its 3 main areas, then talking about how to land a job in this field.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-3-pillars-of-devrel"&gt;
  &lt;/a&gt;
  The 3 Pillars of DevRel
&lt;/h2&gt;

&lt;p&gt;Before we discuss the pillars of DevRel, let's give a quick overview of what it is. DevRel is a role that exists at developer tool companies (companies whose target market is developers). Developer Advocates help raise awareness for a product and collect feedback from the dev community to improve it.&lt;/p&gt;

&lt;p&gt;DevRel has 3 main categories: Community, Content, and Product. Some Devrels do one of these while others are focused on a couple; it ultimately depends on people's skillsets and what the company needs. Both as a startup hiring for devrel and as someone who wants to get into it, it's important to understand these areas to know which you want to focus on. Let's explore each one in more depth.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6bP55yBM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mrm8f6m7567bd9ew17oq.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6bP55yBM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mrm8f6m7567bd9ew17oq.jpeg" alt="Image description" width="880" height="480"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#community"&gt;
  &lt;/a&gt;
  Community
&lt;/h3&gt;

&lt;p&gt;Community-focused DevRel usually centers around growing and managing a community of developers. This is typically a Slack or Discord community that's focused on a product or technology. Managing a community consists of greeting new members, answering questions, designing the community in an inclusive way, and making sure your members are getting value from the community. This can also include livestreams, events, and other activities that help the community grow.&lt;/p&gt;

&lt;p&gt;Being a technical community builder is a &lt;a href="https://www.swyx.io/community-builder/"&gt;very hot skill to have&lt;/a&gt; nowadays due to the shift developer tool companies are making in the way they obtain their customers.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#content"&gt;
  &lt;/a&gt;
  Content
&lt;/h3&gt;

&lt;p&gt;Content-focused DevRel is about spreading awareness about a product through written and spoken content. This can involve writing blog posts, making videos, teaching workshops, recording podcasts, and more.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#product"&gt;
  &lt;/a&gt;
  Product
&lt;/h3&gt;

&lt;p&gt;Product-focused DevRel is about owning the developer exeprience of the product. In other words, it's about improving how it feels for a developer to use a specific product. This can be done by talking to users to understand how they're using it, then making improvements to the documentation and creating guides based on their answers.&lt;/p&gt;

&lt;p&gt;This can also extend to the product ecosystem so working on code examples, templates, and integrations is also common.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#getting-a-devrel-job"&gt;
  &lt;/a&gt;
  Getting a DevRel job
&lt;/h2&gt;

&lt;p&gt;This is a relatively new role. To stand out though, you should try to have 2 out of 3 of these.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;You can code. For this, you can show off some of your side projects.&lt;/li&gt;
&lt;li&gt;You know how to build communities. You can show off helping build a community or organization if you have any experience in this area.&lt;/li&gt;
&lt;li&gt;You're a good content creator. You can show off your talks, YouTube videos, tweets, and blog posts for this one.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;While there aren't pre-requisites for the job, it's very helpful to have prior work in these areas to show off and get your career in developer advocacy started. Ultimately, it's for engineers who enjoy working with developers, creating content, and managing communities.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;As long as you can demonstrate the skills above, you'll likely have no issues finding a role. I also suggest having a website or writing up a document with links to your work to include in your applications. I have a list of some startups that are hiring &lt;a href="https://twitter.com/Nutlope/status/1440814837542514703"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I hope this clarified some things for you regarding what DevRel is. If you have any questions, feel free to shoot me a &lt;a href="https://twitter.com/Nutlope"&gt;DM on Twitter&lt;/a&gt;!&lt;/p&gt;

</description>
      <category>devrel</category>
      <category>productivity</category>
      <category>career</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Develope a twitter clone with ReactJS</title>
      <author>Linh Truong Cong Hong</author>
      <pubDate>Tue, 18 Jan 2022 05:03:14 +0000</pubDate>
      <link>https://dev.to/linhtch90/develope-a-twitter-clone-with-reactjs-2gh5</link>
      <guid>https://dev.to/linhtch90/develope-a-twitter-clone-with-reactjs-2gh5</guid>
      <description>&lt;p&gt;I have developed a small social network web app for educational purpose and want to share this with the community. This app is built with ReactJS for frontend, Java Spring Boot for backend and MongoDB as the database.&lt;/p&gt;

&lt;p&gt;The app tries to mimic a few functions of Twitter, including:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create post with text and image&lt;/li&gt;
&lt;li&gt;The number of characters in each post is limited to 200 characters&lt;/li&gt;
&lt;li&gt;Like, comment and re-post a post&lt;/li&gt;
&lt;li&gt;View the number of likes, comments and shares of a post&lt;/li&gt;
&lt;li&gt;Comments are toggle&lt;/li&gt;
&lt;li&gt;The number of character in each comment is limited to 100 characters&lt;/li&gt;
&lt;li&gt;Follow, un-follow someone&lt;/li&gt;
&lt;li&gt;See who are following us and follow them back&lt;/li&gt;
&lt;li&gt;Check who we are following&lt;/li&gt;
&lt;li&gt;View all posts of an individual&lt;/li&gt;
&lt;li&gt;View our own posts&lt;/li&gt;
&lt;li&gt;List all user accounts in the entire social network (due to the number of users are still small, I did not develop search user function)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Other functions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Due to limited storage space, client app compresses the uploaded image to the maximum of 250px (width or height) User avatar is created by hashing user id and convert that hash code into a hexagonal image&lt;/li&gt;
&lt;li&gt;Authentication and authorization use JWT&lt;/li&gt;
&lt;li&gt;Responsive frontend for desktop and mobile devices&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Technical stack:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Frontend: ReactJS, Redux Toolkit, React Router, React Bootstrap&lt;/li&gt;
&lt;li&gt;Backend: Java Spring Boot&lt;/li&gt;
&lt;li&gt;Database: MongoDB&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Hope you enjoy it and give me a ⭐ Github star ⭐ for my effort!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Live Demo and Source Code:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/linhtch90/psn-social-network-public-source"&gt;https://github.com/linhtch90/psn-social-network-public-source&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>react</category>
      <category>node</category>
    </item>
    <item>
      <title>13 Unique and Fun APIs + Project ideas</title>
      <author>devdefinitive</author>
      <pubDate>Tue, 18 Jan 2022 04:54:16 +0000</pubDate>
      <link>https://dev.to/devdefinitive/13-unique-and-fun-apis-project-ideas-3766</link>
      <guid>https://dev.to/devdefinitive/13-unique-and-fun-apis-project-ideas-3766</guid>
      <description>&lt;p&gt;Being a developer is great - you can build almost anything you want! Sometimes, however, it's difficult to decide what to build next as there are so many different project ideas out there. To help you find your next project, I've come up with a list of APIs that you can play with and provided potential project ideas. &lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#background-remover"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.slazzer.com/"&gt;Background Remover&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Background Removal API, Remove the background of any image* with 1 API call. &lt;a href="https://www.slazzer.com/"&gt;Slazzer API&lt;/a&gt; makes it easy for you, it uses AI to remove background from your images, the final image which you get is more clean and good. Simple to use you just have to drag n drop your image into the website and see the awesome result.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.slazzer.com/"&gt;Link&lt;/a&gt; to API&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#unsplash-api"&gt;
  &lt;/a&gt;
  &lt;a href="https://unsplash.com/developers"&gt;Unsplash API&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yL1ACzQ---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619758189436/Urywt3nDB.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yL1ACzQ---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619758189436/Urywt3nDB.png" alt="Screenshot 2021-04-30 at 10-19-32 Unsplash Image API Free HD Photo API.png" width="880" height="414"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Unsplash is a website that host "beautiful, free images and photos that you can download and use for any projects". It's API can be used to fetch photos from Unsplash. The Unsplash API could be used to make an application with a background that changes to a random image at different times during the day. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://unsplash.com/developers"&gt;Link &lt;/a&gt; to API&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-movie-database-api"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.themoviedb.org/documentation/api"&gt;The Movie Database API&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--coLQFNWj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619759716304/Hr1-C-kww.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--coLQFNWj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619759716304/Hr1-C-kww.png" alt="Screenshot 2021-04-30 at 10-44-24 The Movie Database (TMDb).png" width="880" height="414"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The API service is for those of you interested in using our movie, TV show or actor images and/or data in your application. Our API is a system we provide for you and your team to programmatically fetch and use our data and/or images.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.themoviedb.org/documentation/api"&gt;Link &lt;/a&gt; to API&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#slack"&gt;
  &lt;/a&gt;
  &lt;a href="https://api.slack.com/"&gt;Slack&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cLr5-gAX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619758342958/hYZJLEW3n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cLr5-gAX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619758342958/hYZJLEW3n.png" alt="Screenshot 2021-04-30 at 10-22-10 Slack API.png" width="880" height="414"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Using the Slack API you can build tools that integrate directly with Slack. The Slack API can be used to build a chat-bot that can carry out various function such as setting reminders, checking the weather or communicating with other APIs.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://api.slack.com/"&gt;Link &lt;/a&gt; to API&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#spotify-api"&gt;
  &lt;/a&gt;
  &lt;a href="https://developer.spotify.com/documentation/web-api/"&gt;Spotify API&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DjTz2-7A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619758555493/aCvR8j_Y3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DjTz2-7A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619758555493/aCvR8j_Y3.png" alt="Screenshot 2021-04-30 at 10-25-43 Web API Spotify for Developers.png" width="880" height="415"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can use the Spotify API to create a home automation dashboard that shows what songs I'm currently playing and has controls to play, pause, skip tracks and set the volume (in addition to other functionality). &lt;/p&gt;

&lt;p&gt;&lt;a href="https://developer.spotify.com/documentation/web-api/"&gt;Link &lt;/a&gt; to API&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#devto-api-and-hashnode-api"&gt;
  &lt;/a&gt;
  &lt;a href="https://docs.forem.com/api/"&gt;Dev.to API&lt;/a&gt; and  &lt;a href="https://api.hashnode.com/"&gt;Hashnode API&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HtUCuF_Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619758672279/yWpaO_0Nt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HtUCuF_Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619758672279/yWpaO_0Nt.png" alt="Screenshot 2021-04-30 at 10-27-34 DEV API (beta).png" width="880" height="414"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Using Dev.to's or Hashnode's own API you could create your own personal editor that can create, schedule and publish as well as edit old ones. While creating this app you'd have to build a markdown editor and a system to publish you articles to Dev.to. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://docs.forem.com/api/"&gt;Link &lt;/a&gt; to API&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-meal-api"&gt;
  &lt;/a&gt;
  &lt;a href="https://themealdb.com/"&gt;The Meal API&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LalAPUzN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619759595223/_ubyQGcVBT.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LalAPUzN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619759595223/_ubyQGcVBT.png" alt="Screenshot 2021-04-30 at 10-42-37 TheMealDB com.png" width="880" height="414"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The mean API gived you access to random meal data to use it in your application. This API contains all the meal categories with images, ingredients, videos, the country of each meal and many more features. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://themealdb.com/"&gt;Link &lt;/a&gt; to API&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#hue-api"&gt;
  &lt;/a&gt;
  &lt;a href="https://developers.meethue.com/"&gt;Hue API&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gxvExwx3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619758906527/iU__n-NV_.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gxvExwx3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619758906527/iU__n-NV_.png" alt="Screenshot 2021-04-30 at 10-30-41 Hue Your Imaginations - Philips Hue Developer Program.png" width="880" height="415"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you have any products form the Phillips Hue family, it's likely that they can be controlled using the Hue API. The official app can become a bit busy when you have multiple devices, so you could build an app that can control Hue bulbs around the house, changing their color and brightness. You could also go back to basic and build a command-line app to control your lights!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://developers.meethue.com/"&gt;Link &lt;/a&gt; to the API&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#random-jokes-api"&gt;
  &lt;/a&gt;
  &lt;a href="https://icanhazdadjoke.com/"&gt;Random Jokes API&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JpkvXM2C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619759975143/u8WWjA2f7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JpkvXM2C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619759975143/u8WWjA2f7.png" alt="jokes ai.png" width="880" height="428"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The random jokes API allows you to fetch random jokes data in an easy way using Fetch, Ajax XHR and etc. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://icanhazdadjoke.com/"&gt;Link &lt;/a&gt; to API&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#breaking-bad-quotes-api"&gt;
  &lt;/a&gt;
  &lt;a href="https://breakingbadquotes.xyz/"&gt;Breaking bad quotes API&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s7tklKdI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619760015682/tWVcNtqov.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s7tklKdI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619760015682/tWVcNtqov.png" alt="Screenshot 2021-04-30 at 10-50-07 Breaking Bad Quotes API.png" width="880" height="414"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A free API to retrieve some quotes of Breaking Bad, bitch!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://breakingbadquotes.xyz/"&gt;Link to API&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tronald-dump"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.tronalddump.io/"&gt;Tronald Dump&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bvY4QP_L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619760686470/Xms1ScJes.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bvY4QP_L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619760686470/Xms1ScJes.png" alt="Screenshot 2021-04-30 at 11-01-14 Tronald Dump.png" width="880" height="415"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Web archive for the dumbest things Donald Trump has ever said.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.tronalddump.io/"&gt;Link &lt;/a&gt; to API &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#marvel-api"&gt;
  &lt;/a&gt;
  &lt;a href="https://developer.marvel.com/"&gt; Marvel API&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--guWeUjx0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619760827700/yGr0CR8Jl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--guWeUjx0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619760827700/yGr0CR8Jl.png" alt="msd.png" width="880" height="449"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Marvel Comics API allows developers everywhere to access information about Marvel's vast library of comics—from what's coming up, to 70 years ago.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://developer.marvel.com/"&gt;Link &lt;/a&gt; to API&lt;/p&gt;




&lt;p&gt;These and other APIs will assist you with supercharging your capacities. With dull issues dealt with, you'll be allowed to zero in with respect to your work that no one but you can perform.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>api</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Go Developers Roadmap [Beginners- Advance]</title>
      <author>Developers</author>
      <pubDate>Tue, 18 Jan 2022 04:38:34 +0000</pubDate>
      <link>https://dev.to/bksd/go-developers-roadmap-beginners-advance-45bi</link>
      <guid>https://dev.to/bksd/go-developers-roadmap-beginners-advance-45bi</guid>
      <description>&lt;p&gt;GO (also called Golang) is an in-demand programming language, especially for people working with Google products. Go is used by many big companies, like Uber Medium, Dropbox, Salesforce, Netflix, IBM, and Twitter.&lt;/p&gt;

&lt;p&gt;For job seekers of all levels, Go is a fantastic option. But where do you begin? What information do you require? Today, we’ll talk about the ideal way to learn Go and build a strong portfolio.&lt;/p&gt;

&lt;h2&gt;&lt;strong&gt;What is a Golang developer?&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;Golang (also called Go) is a &lt;strong&gt;statically typed, compiled programming language&lt;/strong&gt; that was developed by Google in 2009. The language combines the efficiency of C++ efficiency and the readability of Python.&lt;/p&gt;

&lt;p&gt;The Go programming language is used by Golang developers to create websites and apps. Working with Go and its full range of tools and frameworks is part of a Go developer’s job description. Most Go programmers also test and debug their code. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Read More: &lt;a href="https://www.codelivly.com/go-developer-roadmap/" rel="noreferrer noopener"&gt;Go Developer Roadmap [Beginners - Advance]&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Unreal Engine vs Unity Engine | Unreal Engine History | All-time-dev</title>
      <author>coding-land</author>
      <pubDate>Tue, 18 Jan 2022 04:36:40 +0000</pubDate>
      <link>https://dev.to/codingland/unreal-engine-vs-unity-engine-unreal-engine-history-all-time-dev-55g5</link>
      <guid>https://dev.to/codingland/unreal-engine-vs-unity-engine-unreal-engine-history-all-time-dev-55g5</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ofzIro1X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/70xoi5x1m4c9vdmskm9a.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ofzIro1X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/70xoi5x1m4c9vdmskm9a.jpeg" alt="Image description" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Unreal Engine vs Unity Engine | Unreal Engine History | All-time-dev&lt;/p&gt;

&lt;p&gt;In this post, we are going to find out what are the top 5 popular game engines. In this post, we are also going to find out the advantages and disadvantages of these game engines and at last, we will find out the best game engine for you. So if you will like our post then share our post with your developer friends and visit &lt;a href="https://all-time-devlopment.blogspot.com"&gt;all-time-dev&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--94BuAAoG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xrttmkt48u0spiziwbkn.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--94BuAAoG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xrttmkt48u0spiziwbkn.jpg" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#unreal-engine"&gt;
  &lt;/a&gt;
  Unreal Engine
&lt;/h2&gt;

&lt;p&gt;This game engine is very popular for creating high-quality AAA games. Unreal Engine has developed many popular games like GOD OF WAR, Ghost Of Tsushima, Halo, Uncharted Series Games, and more. It is owned by popular game company Epic Games. This game engine was developed by Tim Sweeny, who is also the founder of Epic Games. He started developing Unreal Engine in 1995 for the production of a game which was in the future called Unreal. So, this is a simple quick history about Unreal Engine. Now let's find out the advantages of the Unreal game engine, it has all the features like providing pipeline integration, world-building, animation, rendering, lighting, and materials, simulation and effects, developer tools and platforms support, etc. They also have their own asset store where different developer sells many assets like 3D models, animations, audio and visual assets, etc. Their license is free to use and they have a 5 % royalty if your monetized game crosses $3000 but you have to pay taxes. The 5th version of Unreal Engine which is Unreal Engine 5 is on early access. The two key features of this version are Nanite and Lumen. You can visit their official website there they have provided detailed info about these two key features but in simple words, in Nanite you can create high-quality geometric detail, and in Lumen, you can create dynamic global illumination here is the link for more detail. The stable version of Unreal Engine is 4.27 which was released on 19 August 2021, it is written in C++ and its size is around 40.9 GB. And if you want to develop games in Unreal Engine then you have to learn C++ but overall the Unreal game engine is very good. The two main problems with the Unreal Engine are that it needs a very high-end computer to create games on Unreal Engine and another con is that you have to pay taxes if your game has launched. So in these criteria, Unity is better than Unreal Engine.  But before continuing to Unity let's find out about the specs of our favorite Unreal Engine - &lt;/p&gt;

&lt;p&gt;To continue reading the post visit &lt;a href="https://all-time-devlopment.blogspot.com/2021/11/what-is-unreal-engine.html"&gt;https://all-time-devlopment.blogspot.com/2021/11/what-is-unreal-engine.html&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Quickest method to have webpack recompile your files</title>
      <author>smac89</author>
      <pubDate>Tue, 18 Jan 2022 04:09:56 +0000</pubDate>
      <link>https://dev.to/smac89/quickest-method-to-cause-webpack-to-recompile-your-file-1l4e</link>
      <guid>https://dev.to/smac89/quickest-method-to-cause-webpack-to-recompile-your-file-1l4e</guid>
      <description>&lt;p&gt;Just today I started noticing that when my react code rebuilds, I get eslint errors in the console, but not in my IDE.&lt;/p&gt;

&lt;p&gt;Even stranger was the fact that when I run &lt;code&gt;eslint&lt;/code&gt; by itself in the commandline, it doesn't show that anything was wrong:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;eslint --cache --format stylish --ext '.js,.jsx,.ts,.tsx' --quiet ./
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What gives?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/pPhyAv5t9V8djyRFJH/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/pPhyAv5t9V8djyRFJH/giphy.gif" alt="Come On Reaction GIF" width="480" height="350"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-solution"&gt;
  &lt;/a&gt;
  The solution
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;touch&lt;/code&gt; command to the rescue. In order to force webpack to recompile the files, they had to be &lt;em&gt;changed&lt;/em&gt; somehow, and I wasn't prepared to manually change each file by hand, recompile, and revert the change, just to wait for another recompilation.&lt;/p&gt;

&lt;p&gt;I simply used the &lt;code&gt;touch&lt;/code&gt; command on Linux to "touch" all the files which were having that problem, like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;touch src/pages/**/*.{js,jsx,tsx,ts}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;shell is zsh&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;After running this command, webpack was forced to recompile everything and I no longer saw those pesky errors again.&lt;/p&gt;

</description>
      <category>webpack</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>react</category>
    </item>
    <item>
      <title>JavaScript object destructuring usages you must know</title>
      <author>Tapas Adhikary</author>
      <pubDate>Tue, 18 Jan 2022 03:50:09 +0000</pubDate>
      <link>https://dev.to/atapas/javascript-object-destructuring-usages-you-must-know-2o0a</link>
      <guid>https://dev.to/atapas/javascript-object-destructuring-usages-you-must-know-2o0a</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;We use JavaScript objects to store data and retrieve it later. We store data(aka information) in &lt;code&gt;key-value&lt;/code&gt; pairs. The key-value pair is also known as the &lt;code&gt;object properties&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;Here is an &lt;code&gt;employee&lt;/code&gt; object with three properties: id, name, dept as keys and 007, 'James', and 'Spy' as values.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;employee&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;007&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;James&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;dept&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Spy&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Since ES6(ECMAScript 2015), JavaScript provides a mechanism to handle the properties of objects in a much more innovative way. The mechanism is called &lt;code&gt;Destructuring&lt;/code&gt;(also known as destructuring assignment). It is more of a new syntax added to the language than a feature.&lt;/p&gt;

&lt;p&gt;If you like to learn from video content as well, this article is also available as a YouTube video tutorial here: 🙂&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/J8zlaJWn_ig"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Don't forget to &lt;a href="https://www.youtube.com/tapasadhikary?sub_confirmation=1"&gt;SUBSCRIBE&lt;/a&gt; for future content.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In this article, we will learn about the most crucial usages of object destructuring you must know as a web developer. It will make you a competent and efficient developer. If you know any other cool usages, don't forget to let us know in the comment section below.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#use-destructuring-to-retrieve-values-from-an-object"&gt;
  &lt;/a&gt;
  ⭐ Use destructuring to retrieve values from an object
&lt;/h2&gt;

&lt;p&gt;The most basic usage of object destructuring is to retrieve the value of a property key from the object.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;employee&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;007&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;James&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;dept&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Spy&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Traditionally, we will use the dot(.) notation or the subscript([]) notation to retrieve values from the object. The code snippet below shows the example of retrieving the value of &lt;code&gt;id&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt; from the &lt;code&gt;employee&lt;/code&gt; object using the dot notation.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;employee&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;employee&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;No doubt it works perfectly. But think about the tiring typing(or copy-paste-edit) work when you have to do it for many property values? That's where the destructuring assignment syntax comes as a savior.&lt;/p&gt;

&lt;p&gt;To  destructure a value from an object, you use a syntax like this,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;employee&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, we use the object's key names to create variables and assign them with the value from the object for the same key. In the above code snippet, we retrieve the value of &lt;code&gt;id&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt; without typing them in multiple lines. &lt;/p&gt;

&lt;p&gt;Even if you have 20 more values to retrieve, it is just a matter of specifying those key names with commas. Such a relief!!!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#use-destructuring-to-retrieve-values-from-a-nested-object"&gt;
  &lt;/a&gt;
  ⭐ Use destructuring to retrieve values from a nested object
&lt;/h2&gt;

&lt;p&gt;In all practicality, your data object may not be as simple as the &lt;code&gt;employee&lt;/code&gt; object we have seen so far. The object's key can have another object as a value and form a nested object. Let us now see how to retrieve the value for a key from a nested object.&lt;/p&gt;

&lt;p&gt;Here is our &lt;code&gt;employee&lt;/code&gt; object where the value of the &lt;code&gt;dept&lt;/code&gt; key is an object. It has a property with the key &lt;code&gt;address&lt;/code&gt; whose value is another object. Great, we are dealing with a nested object here.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;employee&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;007&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;James&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;dept&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;D001&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Spy&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;address&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;street&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;30 Wellington Square&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;city&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Chelsea&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;  
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;  
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's retrieve the value of the &lt;code&gt;address&lt;/code&gt; property traditionally.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;address&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;employee&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dept&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;address&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It works, and the output is,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;"street"&lt;/span&gt;: &lt;span class="s2"&gt;"30 Wellington Square"&lt;/span&gt;,
    &lt;span class="s2"&gt;"city"&lt;/span&gt;: &lt;span class="s2"&gt;"Chelsea"&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let us go one more level down and retrieve the value of the &lt;code&gt;street&lt;/code&gt; property.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;street&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;employee&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dept&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;address&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;street&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Of course, we typed more, and the output is,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;30 Wellington Square
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now with destructuring, things are simple. You can define the key name using its predecessor key. So to retrieve the value of &lt;code&gt;address&lt;/code&gt;, we will start with its predecessor key &lt;code&gt;dept&lt;/code&gt;. So, &lt;code&gt;dept&lt;/code&gt; is the top-level key with no predecessor. Hence the syntax is,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;dept&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;address&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;employee&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;address&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and for the &lt;code&gt;street&lt;/code&gt; property,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;dept&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;address&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;street&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;employee&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;street&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's move to the next one.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#define-a-new-variable-with-object-destructuring"&gt;
  &lt;/a&gt;
  ⭐ Define a new variable with object destructuring
&lt;/h2&gt;

&lt;p&gt;There could be a situation where you are unsure if the object has a specific key while retrieving its value. Also, you may want to create a new variable with a default value in case the key is unavailable in the object.&lt;/p&gt;

&lt;p&gt;Let's take this &lt;code&gt;employee&lt;/code&gt; object for an example,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;employee&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;007&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;James&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;dept&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Spy&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's assume we are trying to retrieve the value of the &lt;code&gt;age&lt;/code&gt; property, which is not present in the object. A traditional way to do that is,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;employee&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;employee&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If we find the &lt;code&gt;age&lt;/code&gt; property, access its value, and assign it to the variable else, assign a default value of 25. So, how will we do that with the object destructuring syntax we have learned so far?&lt;/p&gt;

&lt;p&gt;It is pretty simple.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;25&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;employee&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you see, we can do it easily by specifying the key name along with the default value. It has a similar impact as the traditional way we have learned just now.&lt;/p&gt;

&lt;p&gt;Hold on. The destructuring part has got more magic to show! How about creating a brand new variable and assigning a value computed using the object property values? Sounds complex? Here is an example,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;dept&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; is &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;dept&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;employee&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We create a &lt;code&gt;message&lt;/code&gt; variable and assign a value computed using &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;dept&lt;/code&gt; property values of the &lt;code&gt;employee&lt;/code&gt; object. Powerful, eh?&lt;/p&gt;

&lt;p&gt;The output is,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;James is Spy
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#how-to-use-javascript-object-destructuring-aliases"&gt;
  &lt;/a&gt;
  ⭐ How to use JavaScript object destructuring aliases?
&lt;/h2&gt;

&lt;p&gt;In JavaScript object destructuring, you can give your destructured variables an &lt;code&gt;alias&lt;/code&gt; name. It comes in very handy to reduce the chances of variable name conflicts.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;employee&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;007&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;James&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;dept&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Spy&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's assume your source code has an existing variable named &lt;code&gt;dept&lt;/code&gt;. So if we use the same variable name in destructuring, there will be a name conflict.&lt;/p&gt;

&lt;p&gt;Instead, you can use an alias name to create the variable with this new name. For example, we can use the alias name &lt;code&gt;department&lt;/code&gt; in this case.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;dept&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;department&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;employee&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;department&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//Spy&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Please note, we have destructured with the alias name, not with the actual key name that is still not defined.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dept&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output,&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PRADdVy_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642186064733/bgqgq3z7K.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PRADdVy_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642186064733/bgqgq3z7K.png" alt="error" width="689" height="76"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I have shared this usage as a knowledge byte on Twitter a while back,&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ErtO31zJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/FJIZY10aUAENusB.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--jpJ_XdNK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1433475384482275351/geM4Q3QC_normal.jpg" alt="Tapas Adhikary profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Tapas Adhikary
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @tapasadhikary
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      In JavaScript Object Destructuring, you can give your destructured variables an 'alias' name. &lt;br&gt;&lt;br&gt;It comes in very handy to reduce the chances of variable name conflicts.&lt;br&gt;&lt;br&gt;Watch Out: Here, you are destructuring with the alias name, not the actual key name that is still not defined. 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      09:03 AM - 15 Jan 2022
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1482277241061244934" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1482277241061244934" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1482277241061244934" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;
&lt;br&gt;
&lt;em&gt;&lt;a href="https://twitter.com/tapasadhikary"&gt;FOLLOW&lt;/a&gt; me on Twitter for more tips and content.&lt;/em&gt;
&lt;h2&gt;
  &lt;a href="#handle-dynamic-name-property-with-object-destructuring"&gt;
  &lt;/a&gt;
  ⭐ Handle dynamic name property with object destructuring
&lt;/h2&gt;

&lt;p&gt;We often handle API response data as JavaScript objects. These objects may contain dynamic data such that, as a client, we may not even know the property key names in advance.&lt;/p&gt;

&lt;p&gt;Let's understand it with an example(same employee object)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;employee&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;007&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;James&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;dept&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Spy&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Can we write a function that returns the value of the employee object properties when we pass a key as an argument? Yeah, so it means we will not hard-code the key name inside the function. It is dynamic for the function. &lt;/p&gt;

&lt;p&gt;Here is the code snippet to showcase how we may call the function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;getPropertyValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;id&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;getPropertyValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 7 'James'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's define it now.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getPropertyValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="nx"&gt;returnValue&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;employee&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;returnValue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Please note the square brackets([..]) around the &lt;code&gt;key&lt;/code&gt; in the destructuring assignment. The key we pass to the function gets evaluated, and the value is retrieved from the object. Isn't that cool. It is efficient usage.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#destructure-objects-in-the-function-argument-and-return-value"&gt;
  &lt;/a&gt;
  ⭐ Destructure objects in the function argument and return value
&lt;/h2&gt;

&lt;p&gt;You must learn this usage if you want to explore any modern JavaScript-based frameworks/libraries like React, Vue, Svelte, Angular, etc. You can use object destructuring to pass the property values as arguments to the function.&lt;/p&gt;

&lt;p&gt;The employee object,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;employee&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;007&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;James&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;dept&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Spy&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let us create a simple function that creates a message using the &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;dept&lt;/code&gt; property values to log into the browser console.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;logEmployee&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;dept&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; is &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;dept&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Just realize how simple it is. You don't need to take the entire object as an argument and pick the required property values. You pass the values directly as function arguments and use them inside.&lt;/p&gt;

&lt;p&gt;You can now call the function as,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;logEmployee&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;employee&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// James is Spy&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There is one more usage of object destructuring with function. If a function returns an object, you can destructure the values directly into variables. Let's create a function that returns an object.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getUser&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Alex&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;age&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;45&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now if you are interested to retrieve the value of the &lt;code&gt;age&lt;/code&gt; property, you can do it like,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;getUser&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 45&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It indeed saves lots of extra typing and time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#use-object-destructuring-in-loops"&gt;
  &lt;/a&gt;
  ⭐ Use object destructuring in loops
&lt;/h2&gt;

&lt;p&gt;The last(but not the least) usage we will be discussing is destructuring in loops. Let's think of an array of employee objects. We want to iterate through the array and want to use the property values of each of the employee object.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;employees&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt; 
      &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Alex&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;address&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;15th Park Avenue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;age&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;43&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt; 
      &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;John&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;address&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;USA&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;age&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;33&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt; 
      &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Ravi&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;address&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Bangalore&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;age&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can use the &lt;code&gt;for-of&lt;/code&gt; loop to loop through the &lt;code&gt;employees&lt;/code&gt; object and then use the object destructuring assignment syntax to retrieve the details. Let us log the name and age of each employee in the browser console.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;employees&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; is &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; years old!!!`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output,&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2qo9FEiC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642417080562/zm03gL3LU.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2qo9FEiC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642417080562/zm03gL3LU.png" alt="image.png" width="502" height="179"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's so neat. We all love object destructuring by now.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusions"&gt;
  &lt;/a&gt;
  Conclusions
&lt;/h2&gt;

&lt;p&gt;Time is precious. The more you save on that, the more you can produce more. The object destructuring syntax is here to save you that time. Please use it in practice, if not already.&lt;/p&gt;

&lt;p&gt;I'm thrilled to share my experiences on object destructuring with you using this article. Please let me know if you found it helpful. You can find all the source code used in this article from here,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/atapas/youtube/tree/main/code-with-tapas/object-destructuring"&gt;https://github.com/atapas/youtube/tree/main/code-with-tapas/object-destructuring&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;br&gt;&lt;br&gt;
Let's connect. I share my learnings on JavaScript, Web Development, Career, and Content on these platforms as well,

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/tapasadhikary"&gt;Follow me on Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/tapasadhikary?sub_confirmation=1"&gt;Subscribe to my YouTube Channel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/atapas"&gt;Side projects on GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Self-Taught Developer Journal, Day 42: TOP DOM Manipulations and Events Practice cont.</title>
      <author>Jennifer Tieu</author>
      <pubDate>Tue, 18 Jan 2022 03:43:50 +0000</pubDate>
      <link>https://dev.to/jennifer_tieu/self-taught-developer-journal-day-42-top-dom-manipulations-and-events-practice-cont-l09</link>
      <guid>https://dev.to/jennifer_tieu/self-taught-developer-journal-day-42-top-dom-manipulations-and-events-practice-cont-l09</guid>
      <description>&lt;p&gt;Today...&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#practice-2"&gt;
  &lt;/a&gt;
  Practice #2:
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Watch the &lt;a href="https://www.youtube.com/watch?v=F1anRyL37lE&amp;amp;ab_channel=WesBos"&gt;Event Capture, Propagation and Bubbling video&lt;/a&gt; from Wes Bos’s JavaScript30 program. If you want to code along with the video, you can use the contents of folder #25 from the repo you cloned above.&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I found this video to be very interesting because Event Propagation is definitely something I've never encountered before or wouldn't have know about firsthand. &lt;/p&gt;

&lt;p&gt;As much as I liked Wes's explanation of Event Bubbling in the video, I was still unsure of what was happening. I went ahead and Googled for more information about it. I think the GeeksOnGeeks definition captures it really well:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;"Event bubbling is a method of event propagation in the HTML DOM API when an event is in an element inside another element, and both elements have registered a handle to that event. It is a process that starts with the element that triggered the event and then bubbles up to the containing elements in the hierarchy. In event bubbling, the event is first captured and handled by the innermost element and then propagated to outer elements".&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Event Bubbling triggers a selection of all associated elements, a rippling effect. &lt;strong&gt;However, not all events bubble&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;An image from &lt;a href="https://javascript.info/bubbling-and-capturing"&gt;javascript.info&lt;/a&gt; was a good visual example of the effect.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DTPpPSEg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f47jnuol70p9kz0koz4x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DTPpPSEg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f47jnuol70p9kz0koz4x.png" alt="Event Bubbling example" width="575" height="553"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Event Bubbling can be stopped using the &lt;strong&gt;stopPropagation()&lt;/strong&gt; on the event.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--npZjEpls--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n4j4gej0wgmrejyprak5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--npZjEpls--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n4j4gej0wgmrejyprak5.png" alt="stopPropagation" width="880" height="354"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;BUT DON'T STOP BUBBLING UNLESS NEEDED!&lt;/p&gt;

&lt;p&gt;Next, the video went over Event Capturing which is another phase of Event Propagation (&lt;em&gt;"Event propagation is a way to describe the “stack” of events that are fired in a web browser.&lt;/em&gt;*)&lt;/p&gt;

&lt;p&gt;Unlike Event Bubbling, Event Capturing starts from the top-down to the element. Event Propagation has three phases:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Capture Phase&lt;/li&gt;
&lt;li&gt;Target Phase&lt;/li&gt;
&lt;li&gt;Bubbling Phase&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--elT5_ZJL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y5wjw7v9g845x04aa074.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--elT5_ZJL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y5wjw7v9g845x04aa074.png" alt="Event Propagation" width="880" height="733"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The capture phase is rarely used and is implemented by setting the handler "capture" option to true.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vyingZVs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kc44jtbznve6zyxrrq7v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vyingZVs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kc44jtbznve6zyxrrq7v.png" alt="Capture Option" width="880" height="329"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.theodinproject.com/paths/foundations/courses/foundations/"&gt;The Odin Project&lt;/a&gt;&lt;br&gt;
&lt;a href="https://javascript.info/bubbling-and-capturing"&gt;https://javascript.info/bubbling-and-capturing&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.geeksforgeeks.org/event-bubbling-in-javascript/"&gt;https://www.geeksforgeeks.org/event-bubbling-in-javascript/&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.freecodecamp.org/news/a-simplified-explanation-of-event-propagation-in-javascript-f9de7961a06e/"&gt;https://www.freecodecamp.org/news/a-simplified-explanation-of-event-propagation-in-javascript-f9de7961a06e/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>codenewbie</category>
      <category>devjournal</category>
    </item>
    <item>
      <title>10 Best DevOps Certification Programs in 2022</title>
      <author>Vijay Singh Khatri</author>
      <pubDate>Tue, 18 Jan 2022 02:46:33 +0000</pubDate>
      <link>https://dev.to/vijaykhatri96/10-best-devops-certification-programs-in-2022-2k65</link>
      <guid>https://dev.to/vijaykhatri96/10-best-devops-certification-programs-in-2022-2k65</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xNZVsxK2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b6z1i1fjev074wb7a6dy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xNZVsxK2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b6z1i1fjev074wb7a6dy.png" alt="Image description" width="600" height="315"&gt;&lt;/a&gt;&lt;br&gt;
In the information technology industry, getting everyone on the same page is difficult, especially when it comes to software development. Therefore, organizations are searching for people who are ready to get right in and offer the value that DevOps can bring.&lt;/p&gt;

&lt;p&gt;DevOps, in general, necessitates knowledge of Linux system administration, DevOps tools, and cloud computing. A DevOps engineer helps the development and operations team to coordinate effectively and deliver high-quality products in the least time possible.&lt;/p&gt;

&lt;p&gt;Certification courses that focus on the DevOps concepts are the best way to enter into the profession of DevOps. This blog talks about the 10 most valued DevOps certification courses that can help you to get proper DevOps engineer training.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-devops"&gt;
  &lt;/a&gt;
  &lt;strong&gt;What is DevOps?&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;DevOps is a model that encompasses two terms "development" and "operations". It describes a cooperative or integrated approach for duties performed by a company's development and IT operations teams.&lt;/p&gt;

&lt;p&gt;It helps to foster greater cooperation and interaction across both the aforesaid teams inside a business. Also, DevOps is defined as the use of continuous software development, automation, and programmable infrastructure deployment and maintenance in its most basic form.&lt;/p&gt;

&lt;p&gt;Building trust and harmony between developers and systems administrators, as well as aligning technology to business requirements are all part of the concept. Moreover, the software delivery chain, services, job roles, IT tools, and best practices can all be influenced by DevOps.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-do-you-need-devops-certification"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Why Do You Need DevOps Certification?&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;A DevOps certification confirms an individual’s abilities and expertise, allowing the candidate to construct a strong portfolio. It shows recruiters that you have genuine experience working on real-world projects rather than just academic understanding.&lt;/p&gt;

&lt;p&gt;Using work performance, numerous exams, tests, and educational courses, certifications demonstrate that you have the necessary skills required to work in a professional and competitive environment. The following are some of the reasons why acquiring a DevOps certification is a smart idea:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You can keep up with the most recent DevOps techniques and trends.&lt;/li&gt;
&lt;li&gt;You can use it to showcase certified DevOps expertise on your CV.&lt;/li&gt;
&lt;li&gt;It shows recruiters that you've gone through a series of tests and quizzes to get the best DevOps training online.&lt;/li&gt;
&lt;li&gt;It allows you to display your completed projects as well as your training qualifications.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Without a question, the DevOps profession is one of the highest-paying jobs in the world. As a result, obtaining a DevOps certification is the icing on the cake.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#10-best-devops-certification"&gt;
  &lt;/a&gt;
  &lt;strong&gt;10 Best DevOps Certification&lt;/strong&gt;
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1-post-graduate-certificate-program-in-devops"&gt;
  &lt;/a&gt;
  &lt;strong&gt;1.&lt;a href="https://www.simplilearn.com/pgp-devops-certification-training-course"&gt; Post Graduate Certificate Program in DevOps&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;This DevOps postgraduate program is taught by industry experts who will teach you how to understand the basics and science of optimizing your team's production and operating processes through DevOps. Caltech CTME, a world-renowned science, and engineering institute is offering the course in cooperation with Simplilearn.&lt;/p&gt;

&lt;p&gt;It allows you to learn various DevOps concepts during the lectures, including Git, GitHub, CI/CD using Jenkins, configuration management, Docker, Kubernetes, and more. You will also receive certification and additional support from the Simplilearn community after completing the program, including resume aid, career track, and interview preparation.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Key Highlights&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;This course is a one-of-a-kind blended learning program that combines online classes, interactive labs, and more to give you real-world DevOps experience.&lt;/li&gt;
&lt;li&gt;Learn how to use DevOps technologies and practices to bridge the gap between development and operations departments.&lt;/li&gt;
&lt;li&gt;Explore the fundamentals of Git along with learning the setup process on your system, build a repository in Git and GitHub, and list a three-stage workflow in Git.&lt;/li&gt;
&lt;li&gt;Develop advanced abilities in CodeBuild, CodeDeploy, and CodePipeline to automate CI/CD for apps, as well as a thorough understanding of DevOps and AWS technologies.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#2-become-a-cloud-dev-ops-engineer-nanodegree-program"&gt;
  &lt;/a&gt;
  &lt;strong&gt;2.&lt;a href="https://www.udacity.com/course/cloud-dev-ops-nanodegree--nd9991"&gt; Become a Cloud Dev Ops Engineer – Nanodegree Program&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;The only prerequisites for this Nanodegree are knowledge of fundamental object-oriented programming and the Linux command line. With this DevOps certification program, you will learn how to scale infrastructure and produce apps and services at a rapid pace.&lt;/p&gt;

&lt;p&gt;Start by learning the basics of cloud computing, including processing power, security, networking, messaging, and management services. Building CI/CD pipelines and using&lt;a href="https://www.techgeekbuzz.com/what-is-kubernetes/"&gt; Kubernetes&lt;/a&gt; to standardize microservices at scale are among the important topics covered by video lectures.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Key Highlights&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Learn about automated testing and how to select the best deployment approach for your company.&lt;/li&gt;
&lt;li&gt;Create a Kubernetes cluster and adhere to best containerization practices.&lt;/li&gt;
&lt;li&gt;Apply what you've learned in classes to real-world projects.&lt;/li&gt;
&lt;li&gt;Choose between serverless and container orchestration as a microservice abstraction.&lt;/li&gt;
&lt;li&gt;To help you advance in your profession, you'll get access to career counseling sessions, interview preparation tips, and resume and online profile evaluations.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#3-master-jenkins-ci-for-devops-and-developers-udemy"&gt;
  &lt;/a&gt;
  &lt;strong&gt;3.&lt;a href="https://www.udemy.com/course/devops-masterclass-cicd-with-jenkins-pipelines-groovy-dsl/"&gt; Master Jenkins CI For DevOps and Developers (Udemy)&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;This DevOps certification course will show you how to use Jenkins to create automated continuous integration pipelines. You would be able to attend lectures about continuous inspection, continuous integration, and continuous deployment along with learning the differences between them. You'll also have the opportunity to work with a variety of tools, including GitHub, Maven, Tomcat, and others.&lt;/p&gt;

&lt;p&gt;The good news is that all of the concepts are taught from the ground up, so anyone with any level of expertise can take this course. By the end of the course, you'll have a thorough understanding of Jenkins as well as broader DevOps abilities that you can use to deliver high-quality software. From the very beginning, all topics are covered, including the setup of required software.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Key Highlights&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A variety of tasks to help you solidify your knowledge and clear up any lingering questions.&lt;/li&gt;
&lt;li&gt;Each topic is thoroughly discussed with appropriate examples.&lt;/li&gt;
&lt;li&gt;Learn how to operate Jenkins in this field using the best practices.&lt;/li&gt;
&lt;li&gt;Get lifetime access to 71 lectures and 26 articles as well as several downloadable resources.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#4-docker-for-developers-and-devops"&gt;
  &lt;/a&gt;
  &lt;strong&gt;4.&lt;a href="https://www.udemy.com/course/docker-for-developers/"&gt; Docker for Developers and DevOps&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;You can take this certification course to learn how to use Docker technologies to perform DevOps operations. As the classes within this course cover all the core principles of DevOps, there are no prerequisites for starting this program. Learn how to use a microservice method to containerize web-based apps, automate the process with Dockerfile, and much more.&lt;/p&gt;

&lt;p&gt;By the end of the course, you'll be confident in your ability to apply the techniques you've learned on your projects and deliver superior software products. You'll go from "zero to Docker hero" in 4 hours, according to the developer of this course.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Key Highlights&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;For beginners, this is an excellent course, to begin with.&lt;/li&gt;
&lt;li&gt;Learn how to set up continuous integration pipelines, which is a valuable DevOps skill.&lt;/li&gt;
&lt;li&gt;The instructor presents the concepts well and quickly.&lt;/li&gt;
&lt;li&gt;A wide range of examples aids in gaining a better understanding of the concepts.&lt;/li&gt;
&lt;li&gt;This course comes with 49 lectures, 14 articles, 3 downloadable resources, along with unlimited access for the rest of your life.&lt;/li&gt;
&lt;li&gt;It is available on Udemy at rock-bottom prices.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#5-free-devops-course-linkedin-learning"&gt;
  &lt;/a&gt;
  &lt;strong&gt;5.&lt;a href="https://www.linkedin.com/learning/topics/devops"&gt; Free DevOps Course (LinkedIn Learning)&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;It is one of the most reliable DevOps certifications offered by LinkedIn Learning. It will give you an overview of the DevOps concept, with a focus on the fundamentals of CAMS (Culture, Automation, Measurement, and Sharing). Also, it discusses various approaches and tools that can be utilized by a company to move into DevOps while keeping in mind the agile and lean project management concepts.&lt;/p&gt;

&lt;p&gt;Infrastructure automation, continuous delivery, and reliability engineering are the most important aspects of DevOps, and the course eventually concludes with them.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Key Highlights&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The video lectures take you through all the relevant topics, covering basics as well as advanced ones.&lt;/li&gt;
&lt;li&gt;The lectures provide step-by-step instructions to complete the exercises.&lt;/li&gt;
&lt;li&gt;Exercises are accessible for both online and offline training.&lt;/li&gt;
&lt;li&gt;The ‘view offline' option allows you to attend lectures when not connected to the internet.&lt;/li&gt;
&lt;li&gt;The course is broken down into seven sections, each with its own set of exercises.&lt;/li&gt;
&lt;li&gt;The entire study package is available for free.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#6-architecting-with-google-cloud-platform"&gt;
  &lt;/a&gt;
  &lt;strong&gt;6.&lt;a href="https://www.coursera.org/specializations/gcp-architecture%5C"&gt; Architecting with Google Cloud Platform&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Being familiar with&lt;a href="https://www.techgeekbuzz.com/what-is-cloud/"&gt; cloud computing&lt;/a&gt; and its infrastructure puts you one step ahead of the competition. This cloud architecture program will teach you how to use the Google Cloud Platform's broad and adaptable infrastructural and platform services.&lt;/p&gt;

&lt;p&gt;The course is intended for Cloud Solutions Architects and DevOps Engineers, but anyone interested in developing new solutions and integrating current systems and infrastructure with GCP can enroll themselves. The video lectures provide the opportunity to explore various elements of the cloud platform, including networks, application services, etc. The course also includes a variety of hands-on experiments and activities to strengthen your knowledge.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Key Highlights&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;All of the GCP principles and infrastructure components are covered in this course.&lt;/li&gt;
&lt;li&gt;There are a lot of tasks to help you reinforce your knowledge and clear up any doubts you might have.&lt;/li&gt;
&lt;li&gt;Each topic is thoroughly explored to help you learn between.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#7-learn-devops-the-complete-kubernetes-course"&gt;
  &lt;/a&gt;
  &lt;strong&gt;7.&lt;a href="https://www.udemy.com/course/learn-devops-the-complete-kubernetes-course/"&gt; Learn DevOps: The Complete Kubernetes Course&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Kubernetes aids in the deployment and management of containerized applications and performing DevOps operations. You will learn how to create, deploy, use, and maintain Kubernetes in this DevOps certification. Its curriculum, which is primarily intended for beginners, teaches you how to build apps in Docker containers and deploy them using the Kubernetes cluster.&lt;/p&gt;

&lt;p&gt;Learn about the many subjects covered in this course through examples. Also, you will grasp the strategies needed to work on real-world projects.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Key Highlights&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The classes take you step-by-step through every essential topic.&lt;/li&gt;
&lt;li&gt;The lessons are well-paced, allowing learners to learn efficiently.&lt;/li&gt;
&lt;li&gt;The real-life examples make the lectures far more engaging and understandable.&lt;/li&gt;
&lt;li&gt;There are numerous assignments to put the concepts learned in the lectures into practice.&lt;/li&gt;
&lt;li&gt;You will get 109 lectures, various articles, and practice tests that are available for a lifetime.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#8-learn-devops-infrastructure-automation-with-terraform-udemy"&gt;
  &lt;/a&gt;
  &lt;strong&gt;8.&lt;a href="https://www.udemy.com/course/learn-devops-infrastructure-automation-with-terraform/"&gt; Learn DevOps: Infrastructure Automation With Terraform (Udemy)&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Automation is likely to have a significant part in future technologies. So, if you want to get an advantage in this situation, this course could be a good place to start as it teaches how to perform DevOps and utilization of Terraform to automate your infrastructure.&lt;/p&gt;

&lt;p&gt;It begins with the basics and works your way up to more advanced topics. Also, you will get hands-on experience and enhance your knowledge by working on different projects.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Key Highlights&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The course is well-designed and separated into several sections to help you learn better.&lt;/li&gt;
&lt;li&gt;It explains the steps for configuring and using various essential tools.&lt;/li&gt;
&lt;li&gt;The lectures are updated on a regular basis to reflect advances in relevant technologies.&lt;/li&gt;
&lt;li&gt;There are numerous code examples available to help you automate your infrastructure.&lt;/li&gt;
&lt;li&gt;For a small fee, you can get the entire course and study materials.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#9-devops-training-course-by-microsoft-edx"&gt;
  &lt;/a&gt;
  &lt;strong&gt;9.&lt;a href="https://www.edx.org/learn/devops"&gt; DevOps Training Course by Microsoft (edX)&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;With this DevOps certification course, you'll learn how to use continuous integration and deployment to meet the ever-changing market conditions. Also, it teaches you how to keep track of apps, feedback loops, and client requirements.&lt;/p&gt;

&lt;p&gt;The curriculum, which is divided into eight modules, will guide you through the process of becoming an expert in DevOps by taking one step at a time. This Microsoft-created certification, which is available on edX, is designed to assist you in learning the critical skills for a DevOps culture at your organization.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Key Highlights&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The lectures go over each concept in great detail and at a perfect speed.&lt;/li&gt;
&lt;li&gt;The entire set of lectures is divided into relevant portions, making it easier for you to follow along.&lt;/li&gt;
&lt;li&gt;All of the concepts are explained in a clear and succinct manner by the instructor.&lt;/li&gt;
&lt;li&gt;It covers several important topics, like configuration management, database integration, and app architecture.&lt;/li&gt;
&lt;li&gt;At the end of the certification, you will complete a final project that will allow you to put what you've learned into practice.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#10-aws-certified-devops-engineer-professional"&gt;
  &lt;/a&gt;
  &lt;strong&gt;10.&lt;a href="https://aws.amazon.com/certification/certified-devops-engineer-professional/"&gt; AWS Certified DevOps Engineer - Professional&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;The AWS DevOps Engineer Professional exam assesses candidates' technical abilities for managing and operating distributed systems and apps on the AWS platform. You must have a thorough understanding of the development and operational processes and techniques in order to pass the exam.&lt;/p&gt;

&lt;p&gt;You must also have gained valuable experience in managing operating systems and constructing automated infrastructures. The AWS DevOps Engineer Professional exam requires the individuals to have detailed information regarding the documents, manuals, white papers, online courses, practice tests, and many other materials available online. .&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Key Features&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;On AWS, you can set up and manage&lt;a href="https://en.wikipedia.org/wiki/Continuous_delivery"&gt; continuous delivery&lt;/a&gt;&lt;span&gt; &lt;/span&gt;systems and procedures.&lt;/li&gt;
&lt;li&gt;Learn the implementation and automation of security controls, governance processes, and compliance validation.&lt;/li&gt;
&lt;li&gt;Create and deploy monitoring, analytics, and logging systems using Amazon Web Services (AWS).&lt;/li&gt;
&lt;li&gt;Create systems on AWS that are highly available, scalable, and self-healing.&lt;/li&gt;
&lt;li&gt;This AWS DevOps certification helps you discover the tools for automating operational procedures.&lt;/li&gt;
&lt;li&gt;For qualifying this certification, one should be familiar with current development and operational procedures and techniques.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Wrapping Up&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;The blog has covered necessary details about DevOps and the best courses to learn everything required to become a DevOps Engineer. A brief overview and benefits of the top 10 DevOps certifications are provided to help you out with your search for the best DevOps certification. We hope that this article will prove helpful to you with your quest to pursue a successful career as a DevOps engineer.&lt;/p&gt;

</description>
      <category>devops</category>
    </item>
    <item>
      <title>How to use Insomnia to test your API</title>
      <author>Matheus Maximiliano</author>
      <pubDate>Tue, 18 Jan 2022 02:13:36 +0000</pubDate>
      <link>https://dev.to/matheusmprado/how-to-use-insomnia-to-test-your-api-olh</link>
      <guid>https://dev.to/matheusmprado/how-to-use-insomnia-to-test-your-api-olh</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-insomnia"&gt;
  &lt;/a&gt;
  What is Insomnia?
&lt;/h2&gt;

&lt;p&gt;If you are developing a set of APIs, Insomnia is a great software to test your REST or GraphQL APIs in terms of functionality, performance, besides a well simple alternative.&lt;/p&gt;

&lt;p&gt;The goal of this article is to share how to get the best of it, show some of the tips and tricks that you can use.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Insomnia&lt;/strong&gt; is available on Linux, Windows and macOS, in this &lt;a href="https://insomnia.rest/products/insomnia"&gt;link&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#get-organized"&gt;
  &lt;/a&gt;
  Get Organized
&lt;/h2&gt;

&lt;p&gt;When you work with a lot a projects, you need staying organized for that you can do maintainability your projects. So, Insomnia have two ways to do start, in first, we have a &lt;strong&gt;Request Collection&lt;/strong&gt;, and inside, we have &lt;strong&gt;folders&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TgB_hiCi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xt99rhuddx4shuwr265s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TgB_hiCi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xt99rhuddx4shuwr265s.png" alt="Dashboard with Request Collections" width="880" height="311"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#request-collection-or-workspaces"&gt;
  &lt;/a&gt;
  Request Collection or Workspaces
&lt;/h2&gt;

&lt;p&gt;Request collections or Workspace are the first item that need created to start a test your new project or application or even microservice.&lt;/p&gt;

&lt;p&gt;In your dashboard, you can view all your Request Collections, and open for you start work.&lt;/p&gt;

&lt;p&gt;Besides as well is possible can create environments variables for each collection, like a base url, keys, whatever you need reuse.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#folders"&gt;
  &lt;/a&gt;
  Folders
&lt;/h2&gt;

&lt;p&gt;The folders are items for organization inside your collection to organize your requests.&lt;/p&gt;

&lt;p&gt;You can use the folder for organize your requests for product, or group requests of the same domain, or differences paths.&lt;/p&gt;

&lt;p&gt;As well folders will continue to have access to the environments variables of your collection.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iIoRpTs1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ocb6pnl59wf7bqe55phz.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iIoRpTs1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ocb6pnl59wf7bqe55phz.jpg" alt="Folders in Collection" width="249" height="679"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#environment-variables"&gt;
  &lt;/a&gt;
  Environment Variables
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nKlrq2GA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k5jm0l23thuqsqretqhv.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nKlrq2GA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k5jm0l23thuqsqretqhv.jpg" alt="Environment Variables" width="561" height="206"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can configure your collection a base environments or a sub environments, and switch to a different environment with ease. &lt;/p&gt;

&lt;p&gt;This environments are place to store data as a JSON object that you can modify in whatever moment.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-a-requests"&gt;
  &lt;/a&gt;
  Create a requests
&lt;/h2&gt;

&lt;p&gt;Inside your collection, you can create your endpoints and choice the type of request you need, &lt;code&gt;POST&lt;/code&gt;, &lt;code&gt;GET&lt;/code&gt;, &lt;code&gt;PUT&lt;/code&gt;, &lt;code&gt;DELETE&lt;/code&gt; whatever you want. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kJ6qcdiq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s6z6gsb5we8foiygl9q0.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kJ6qcdiq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s6z6gsb5we8foiygl9q0.jpg" alt="Create a request" width="797" height="457"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After you created, you need place into a endpoint for testing your API. In this point its possible use a base environments, like a base url for your endpoint.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#start-use"&gt;
  &lt;/a&gt;
  Start use
&lt;/h2&gt;

&lt;p&gt;So, suppose we have an API that let us manage a collection of Clients, and we have a tree basic endpoints:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;POST /client/create&lt;/code&gt; to create a new client;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;POST /client/auth&lt;/code&gt; to get a access token;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;GET /client/&lt;/code&gt; to get a data client logged;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;For &lt;code&gt;POST&lt;/code&gt; route&lt;/strong&gt;, we need fill the information's for sign up using a JSON structure.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3_MUaMqw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zvf6zv2ejy0zyowrd68e.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3_MUaMqw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zvf6zv2ejy0zyowrd68e.jpg" alt="POST client create" width="560" height="269"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The endpoint use a baseUrl environment.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This API is responsible to generate a unique identifier at the creation of a client like a uuid, so after we create our client, and have successful in our request, we need get the data of this client.&lt;/p&gt;

&lt;p&gt;Now, after create your client user we need a access token to use Bearer Authenticate for get a client data.&lt;/p&gt;

&lt;p&gt;So call your Auth router to get a token authenticate.&lt;/p&gt;

&lt;p&gt;After use the Auth, we have this return.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WJc7mgZr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wznk5141r9vzzx1a6fm1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WJc7mgZr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wznk5141r9vzzx1a6fm1.jpg" alt="Auth route" width="880" height="182"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So, finally, open the get client route, and go to second tab &lt;em&gt;Auth&lt;/em&gt;, and select the "Bearer Token" or whatever you use to authenticate.&lt;/p&gt;

&lt;p&gt;In input text token, press &lt;code&gt;Ctrl+space&lt;/code&gt; (in Windows), and select &lt;code&gt;response =&amp;gt; body attribute&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#edit-tag"&gt;
  &lt;/a&gt;
  Edit Tag
&lt;/h2&gt;

&lt;p&gt;Edit the tag filter to set path and identifier attribute &lt;code&gt;$.token&lt;/code&gt;, and adapt the trigger to you need, equal the image below .&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e_KM9d8e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g94j7hmel5q57fp3i61b.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e_KM9d8e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g94j7hmel5q57fp3i61b.jpg" alt="Edit Tag" width="777" height="616"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And is it! Now you can get the data client object!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LpAOmBw4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/54ew1xjobupdbltgw24f.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LpAOmBw4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/54ew1xjobupdbltgw24f.jpg" alt="json return" width="529" height="250"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#closing-thoughts"&gt;
  &lt;/a&gt;
  Closing thoughts
&lt;/h2&gt;

&lt;p&gt;Personally, I find Insomnia very easy to work with, we have seen some of the features Insomnia to make us more productive. I hope this article made your development more easy too. &lt;br&gt;
There are a lot of possibilities to explore. if you want to go further, you can check out &lt;a href="https://docs.insomnia.rest/"&gt;Insomnia documentation&lt;/a&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>backend</category>
      <category>insomnia</category>
      <category>api</category>
    </item>
    <item>
      <title>F# for Linux People</title>
      <author>Tosh</author>
      <pubDate>Tue, 18 Jan 2022 02:10:40 +0000</pubDate>
      <link>https://dev.to/carpenoctemdev/f-for-linux-people-42m8</link>
      <guid>https://dev.to/carpenoctemdev/f-for-linux-people-42m8</guid>
      <description>&lt;h1&gt;
  &lt;a href="#f-for-linux-people"&gt;
  &lt;/a&gt;
  F# for Linux People
&lt;/h1&gt;

&lt;p&gt;&lt;small&gt;Originally published 2021-12-16 on my blog at &lt;a href="https://carpenoctem.dev"&gt;carpenoctem.dev&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Everything you need to start hacking F# on Linux!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table of Contents
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#why"&gt;Why this page exists&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#installation"&gt;Installation &amp;amp; Initial Configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#versions"&gt;.NET Versions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#projects-and-solutions"&gt;Projects and Solutions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#startup"&gt;Slow Startup Time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tools"&gt;Tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#packages"&gt;Package Management&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#fsi"&gt;FSI - F# Interactive &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#standalone"&gt;Standalone Executables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#templates"&gt;Templates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#git"&gt;Git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#vim"&gt;Vim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#vscode"&gt;Visual Studio Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#gui"&gt;GUI Development&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#why-this-page-exists"&gt;
  &lt;/a&gt;
  &lt;a&gt;Why this page exists&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;People learning the F# language today are blessed with excellent books, blogs, quality official online documentation, and other resources.  However, these resources tend to assume that the student is either using Windows, familiar with .NET development with C#, or using a particular IDE/Editor. &lt;/p&gt;

&lt;p&gt;Often, something that "just works" on Windows with Visual Studios may take some creativity to get working on Linux.  Sometimes (though not often) it doesn't work at all.&lt;/p&gt;

&lt;p&gt;The goal of this article is to fill that gap by documenting my own experience of learning F# as a Linux-centric developer who has not programmed on Windows or .NET for 15+ years.  It will not cover the language itself, but rather the tooling, ecosystem and things that confused me along the way. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#installation-amp-initial-configuration"&gt;
  &lt;/a&gt;
  &lt;a&gt;Installation &amp;amp; Initial Configuration&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;To install F#, you need to install the &lt;a href="https://docs.microsoft.com/en-us/dotnet/core/install/linux"&gt;official .NET SDK from Microsoft&lt;/a&gt;, which includes F#.  Don't worry, it is open source under the MIT license, and it runs beautifully on Linux.&lt;/p&gt;

&lt;p&gt;Thankfully, installing the .NET SDK is trivial: Microsoft maintains official package repositories for Ubuntu, Debian, CentOS/RHEL, Fedora, OpenSUSE, SLES, and Alpine.  Arch Linux has a &lt;a href="https://wiki.archlinux.org/title/.NET"&gt;community maintained package&lt;/a&gt;.  There is also manual installer for distros not listed here.  Furthermore, note that if you use VS Code, you likely already have the correct repository.&lt;/p&gt;

&lt;p&gt;They even support ARM, so get your Raspberry Pi's ready! &lt;/p&gt;

&lt;p&gt;Once you have configured one of these official repositories, you'll need to install a packaged named &lt;code&gt;dotnet-sdk-6.0&lt;/code&gt; or similar.  On Ubuntu, it's just:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo apt install dotnet-sdk-6.0
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;There is also &lt;code&gt;dotnet-runtime-6.0&lt;/code&gt;, which allows you to run .NET applications but not build them.  Useful for servers and docker images.  (There is also way to build standalone binaries which do not even require the runtime. See the &lt;a href="#standalone"&gt;Standalone Executable&lt;/a&gt; section below).&lt;/p&gt;

&lt;p&gt;That's it! You should have the &lt;code&gt;dotnet&lt;/code&gt; command line tool installed on your system. You won't need to run any other sudo commands.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;dotnet&lt;/code&gt; tool is your one-stop-shop for managing your .NET installation, installing packages, creating projects, and so on.  It is similar to npm for node.  However, &lt;code&gt;dotnet&lt;/code&gt; handles multiple versions of the SDK and runtime seamlessly, so you do not need a separate 'version manager' like nvm, rvm, perlbrew, or virtualenv.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#after-installation"&gt;
  &lt;/a&gt;
  After Installation
&lt;/h5&gt;

&lt;p&gt;After installation, put something similar to this in your &lt;code&gt;.bash_profile&lt;/code&gt;, &lt;code&gt;.zshrc&lt;/code&gt;, or other shell initialization file:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;export DOTNET_CLI_TELEMETRY_OPTOUT=1

if [ -d "$HOME/.dotnet/tools" ]; then
    export PATH=$HOME/.dotnet/tools:$PATH
fi
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;The first line prevents the &lt;code&gt;dotnet&lt;/code&gt; command line tool from sending Microsoft anonymized usage information.  No, it is not cool that this is opt-out instead of opt-in, but at least it is supposedly anonymized, and not hidden or obfuscated. &lt;/p&gt;

&lt;p&gt;The rest sets up your path to include the &lt;code&gt;~/.dotnet/tools&lt;/code&gt; directory, where various tools you install via &lt;code&gt;dotnet tool install&lt;/code&gt; are located. More on this later.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#what-about-mono"&gt;
  &lt;/a&gt;
  What About Mono?
&lt;/h5&gt;

&lt;p&gt;No doubt you've heard of the open source implementation of the .NET Framework started by Miguel de Icaza in 2004. &lt;/p&gt;

&lt;p&gt;Mono still exists and is not deprecated.  In fact, Mono is used by the &lt;a href="https://docs.unity3d.com/Manual/overview-of-dot-net-in-unity.html"&gt;Unity gaming engine&lt;/a&gt;.  &lt;a href="https://dotnet.microsoft.com/en-us/apps/xamarin"&gt;Xamarin&lt;/a&gt;, the .NET-based platform for developing iOS and Android applications, also uses Mono (although they may be switching to the official .NET soon).  Mono will also likely be used indefinitely by pre-existing free software such as &lt;a href="https://wiki.gnome.org/Apps/Tomboy"&gt;Tomboy&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;However, &lt;strong&gt;you should use the official .NET SDK from Microsoft for F#&lt;/strong&gt;.  The official .NET SDK is more complete and up-to-date, especially for F# developers.  Furthermore, the official SDK dominates F# developer mindshare, meaning that third party F# libraries will likely be written for the official SDK.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#net-versions"&gt;
  &lt;/a&gt;
  &lt;a&gt;.NET Versions&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;If you just want to start hacking F#, all you need to know is:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;.NET 6 is the current version of the .NET platform, and F# 6 is the current version of the F# language. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;However, eventually you will want to know some of the history of .NET, because libraries and projects you find online will target various older versions, and you need to understand what's going on. Come back to this section when you do.&lt;/p&gt;

&lt;p&gt;Click here for a brief and probably wrong history of .NET versions&lt;/p&gt;

&lt;p&gt;In the beginning, 2001 to be specific, there was &lt;strong&gt;.NET Framework&lt;/strong&gt; (yes, 'Framework' is part of the name).  It was proprietary and Windows-only, and remains so to this day, though some parts were open sourced. &lt;/p&gt;

&lt;p&gt;In 2014, Microsoft released &lt;strong&gt;.NET Core&lt;/strong&gt; as a separate, alternative implementation of .NET.  It was cross-platform and open source under the MIT license.  It proved immensely popular and revitalized interest in .NET.  There were several versions of .NET Core, with 3.1 released in December 2019. &lt;/p&gt;

&lt;p&gt;Around this time, the decision was made to consolidate .NET Core and .NET Framework.  In November 2020, .NET Core was renamed &lt;strong&gt;.NET&lt;/strong&gt;, and MS announced .NET Framework would no longer be developed.  The first version of &lt;strong&gt;.NET&lt;/strong&gt; was 5, not 4, to avoid confusion with the existing .NET Framework 4.x.&lt;/p&gt;

&lt;p&gt;&lt;small&gt;(Yes, it's just ".NET", with no suffix or prefix.  This has made it difficult to differentiate whether one is talking about .NET in general (which may include Framework), or more specifically the recent releases from Microsoft 🤷🏼).&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;And that's how you end up with ".NET 6", the current version.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Minor Caveats 1&lt;/strong&gt;. Although .NET &lt;em&gt;Framework&lt;/em&gt; is no longer actively developed and version 4.8 will be its final version, it will continue to exists indefinitely because the last versions are installed by default on Windows 10 and various versions Windows Server. You may encounter older code, or code written by Windows-only developers targeting these versions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Minor Caveat 2&lt;/strong&gt;.  There's also something called &lt;strong&gt;.NET Standard&lt;/strong&gt;.  Unlike the others, .NET Standard is merely a specification, and not a software package you can download and install.  It seems to be an earlier attempt to unify the different frameworks.  Specifically, if you can build a .NET library that targets .NET Standard, it will run on both .NET Framework &lt;em&gt;and&lt;/em&gt; .NET Core and .NET.  With the consolidation of the various versions, the .NET Standard specification was deprecated.  However, if you find a project targeting .NET Standard, it should work on current versions unmodified.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#projects-and-solutions"&gt;
  &lt;/a&gt;
  &lt;a&gt;Projects and Solutions&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;In .NET, a Project is basically a compile-able unit of source code.  An executable console application Project might be created with:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;dotnet new console -lang 'F#' -o YourFirstApp
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;And a library might be created with:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;dotnet new classlib -lang "F#" -o MyFirstLib
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;However, in the world of .NET, there is a higher level of organization called the Solution.  Solutions contain Projects, and Projects within Solutions can reference each other.  This makes it easy share libraries between different executables.  Also, in .NET, your tests should exist as a separate project.&lt;/p&gt;

&lt;p&gt;Here's an example of creating a Solution with a console application referencing a library:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# Create the solution
dotnet new sln -o MySolution
cd MySolution

dotnet new classlib -lang "F#" -o src/MyLib
dotnet new console -lang "F#" -o src/App

# Adding projects to a solution
dotnet sln add src/MyLib/MyLib.fsproj
dotnet sln add src/App/App.fsproj

# Reference the library from the console app
dotnet add src/App/App.fsproj reference src/MyLib/MyLib.fsproj

dotnet run --project App
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
  &lt;a href="#slow-startup-time"&gt;
  &lt;/a&gt;
  &lt;a&gt;Slow Startup Time&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;If you are acustomed to interpretted languages such as Python, you will notice that &lt;code&gt;dotnet run&lt;/code&gt; seems &lt;em&gt;very&lt;/em&gt; slow...  a simple Hello World application will take over 2 seconds to launch!  Don't worry, compiled applications will start up much quicker, but it is quite annoying during development.&lt;/p&gt;

&lt;p&gt;Unfortunately, there is no way to reduce startup time significantly.  &lt;/p&gt;

&lt;p&gt;Two possible remedies are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Use &lt;code&gt;dotnet watch run&lt;/code&gt; so that the application is run every time you save a change in a source file.&lt;/li&gt;
&lt;li&gt;Do you experimental coding in FSI. &lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#tools"&gt;
  &lt;/a&gt;
  &lt;a&gt;Tools&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;dotnet&lt;/code&gt; cli tool can be used to install various tools.  You can either install them globally (in &lt;code&gt;~/.dotnet/tools&lt;/code&gt;) or locally, within a project or solution.  Global installations are more conveninent during development (less typing), but local installations make more sense when you are using CI/CD.  It is ok to have a tool installed both locally and globally.&lt;/p&gt;

&lt;p&gt;Regardless, one tool you'll definitely want to configure is the Paket package management software:&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;dotnet tool install paket --global
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Assuming you added &lt;code&gt;~/.dotnet/tools&lt;/code&gt; to your &lt;code&gt;$PATH&lt;/code&gt; as mentioned above, you should be able to run &lt;code&gt;paket&lt;/code&gt; now in your shell.&lt;/p&gt;

&lt;p&gt;Installing locally in a solution or project involves an extra step:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;dotnet new tool-manifest
dotnet tool install paket
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;To run the locally installed tool, you'll need to run it as &lt;code&gt;dotnet paket&lt;/code&gt;.  There is no need to mess with your &lt;code&gt;$PATH&lt;/code&gt; in this case.  Be sure to also add the newly generated manifest file &lt;code&gt;.config/dotnet-tools.json&lt;/code&gt; to git. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#package-management"&gt;
  &lt;/a&gt;
  &lt;a&gt;Package Management&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;.NET has a public repository of packages called &lt;a href="https://www.nuget.org/"&gt;NuGet&lt;/a&gt;.  It is akin to pip for Python, npm for Node.js, CPAN for Perl, etc. &lt;/p&gt;

&lt;p&gt;NuGet packages are installed at the Project level (as opposed to the Solution level) with a command like:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;dotnet add package Giraffe 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Then you can reference any module/namespace provided by the package with &lt;code&gt;open&lt;/code&gt;:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;open Giraffe
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;One important note, from an open source perspective: unlike repositories for other languages, packages on NuGet may not be FOSS.  For example, &lt;a href="https://www.nuget.org/packages/IronPdf/"&gt;IronPDF&lt;/a&gt; is completely closed-source and proprietary, yet it is distributed via NuGet.  Therefore, please check out the package's license carefully before using a random package off of NuGet!&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#paket"&gt;
  &lt;/a&gt;
  Paket
&lt;/h5&gt;

&lt;p&gt;Paket is an alternative dependency manager for .NET, written in F#.  It can use NuGet packages, as well as point directly to Github repos and URLs.  See their &lt;a href="https://fsprojects.github.io/Paket/faq.html#I-do-not-understand-why-I-need-Paket-to-manage-my-packages-Why-can-t-I-just-use-NuGet-exe-and-packages-config"&gt;FAQ&lt;/a&gt; for why you may want to use Paket over the native package management built into &lt;code&gt;dotnet&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: All examples in this section will assume you've installed Paket globally (see the &lt;a href="#tools"&gt;Tools&lt;/a&gt; section).  If you want to use a local paket, change all calls of &lt;code&gt;paket&lt;/code&gt; below to &lt;code&gt;dotnet paket&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Paket can be configured at the Solution level or the Project level.  Let's start with a solution:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;dotnet new sln -o PaketTest1
cd PaketTest1
dotnet new console -o App1 -lang 'F#'
dotnet sln add App1/App1.fsproj
paket init 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;&lt;code&gt;paket init&lt;/code&gt; creates a &lt;code&gt;paket.dependencies&lt;/code&gt; file (which you should add to your git repo).  After initialization, the first thing you must do is open &lt;code&gt;paket.dependencies&lt;/code&gt; and fix the &lt;code&gt;framework&lt;/code&gt; line to point to the correct version, if necessary. For example, with Paket 6.2.1, the &lt;code&gt;init&lt;/code&gt; command creates the following:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;source https://api.nuget.org/v3/index.json

storage: none
framework: net5.0, netstandard2.0, netstandard2.1 # WRONG! 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;You need to change the framework line to &lt;code&gt;net6.0&lt;/code&gt;:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;source https://api.nuget.org/v3/index.json

storage: none
framework: net6.0 # CORRECTED
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;I have no idea why Paket does not specify the correct framework by default.  It might be that Paket is not updated for .NET 6.0 at the time of writing, though I had similar problems during .NET 5.0.&lt;/p&gt;

&lt;p&gt;After fixing the dependencies file, you must install the &lt;code&gt;FSharp.Core&lt;/code&gt;, which includes the standard libraries for F#: &lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;paket add FSharp.Core
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;&lt;code&gt;FSharp.Core&lt;/code&gt; is not installed by default because Paket can be used for C# applications as well.  You can install any other NuGet package with the &lt;code&gt;add&lt;/code&gt; subcommand, shown below with an optional version number:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;paket add Suave --version 2.5.6
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;After installing these packages, the &lt;code&gt;paket.dependencies&lt;/code&gt; file will look like:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;source https://api.nuget.org/v3/index.json

storage: none
framework: net6.0
nuget FSharp.Core
nuget Suave 2.5.6
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;You can edit this file directly, but make sure to run &lt;code&gt;paket update&lt;/code&gt; to tell Paket of your changes. You will also notice a few new files: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;paket.lock&lt;/code&gt; contains the dependency tree as discussed earlier. &lt;/li&gt;
&lt;li&gt;Within Projects will be a new &lt;code&gt;paket.references&lt;/code&gt; file.  This is a simple text file containing a list of packages used by that project. If you change this file, you will need to run &lt;code&gt;paket update&lt;/code&gt; to propagate the changes to your .fsproj file.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Paket directly in Projects&lt;/strong&gt;. Paket can also be initialized in a bare Project, without a solution:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;dotnet new console -o PaketTest2 -lang 'F#'
cd PaketTest2
paket init
### FIX paket.dependencies as described above
paket add FSharp.Core
paket add Suave
dotnet run 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;In this case, the dependencies, lock, and reference files will all be created in the same directory.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#fsi-f-interactive"&gt;
  &lt;/a&gt;
  &lt;a&gt;FSI - F# Interactive &lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;F# comes with a REPL called FSI or F# interactive, which can be launched with &lt;code&gt;dotnet fsi&lt;/code&gt;.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ dotnet fsi                                                                             

Microsoft (R) F# Interactive version 12.0.0.0 for F# 6.0
Copyright (c) Microsoft Corporation. All Rights Reserved.

For help type #help;;

&amp;gt; printfn "Hello, %s" "World";;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;The &lt;a href="https://docs.microsoft.com/en-us/dotnet/fsharp/tools/fsharp-interactive/"&gt;Official Doc&lt;/a&gt; is adequate so I won't go into too much more.&lt;/p&gt;

&lt;p&gt;A couple things to know:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;F# scripts should have the &lt;code&gt;fsx&lt;/code&gt; file extension.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;#load "file.fsx"&lt;/code&gt; syntax allows you to load other fsx files.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;#r "..."&lt;/code&gt; syntax allows you to load packages.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;;;&lt;/code&gt; is used to terminate statements, or groups of statements. &lt;/li&gt;
&lt;li&gt;You can use the shebang &lt;code&gt;#!/usr/bin/env -S dotnet fsi&lt;/code&gt; and run it like any other script on your system.&lt;/li&gt;
&lt;li&gt;Ctrl-D quits the REPL.&lt;/li&gt;
&lt;/ul&gt;

&lt;h5&gt;
  &lt;a href="#using-nuget-with-fsi"&gt;
  &lt;/a&gt;
  Using NuGet with FSI
&lt;/h5&gt;

&lt;p&gt;NuGet packages can be loaded during an FSI session like this:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#r "nuget: Suave";;

// and then use it as usual:
open Suave;; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h5&gt;
  &lt;a href="#using-paket-with-fsi"&gt;
  &lt;/a&gt;
  Using Paket with FSI
&lt;/h5&gt;

&lt;p&gt;For the same reason you may want to use Paket in regular F# code (for example, version consistency across multiple scripts), you may want to use it within FSX scripts.  To be honest, this was not easy to figure out on Linux, and in fact, my problems with getting Paket working on Linux is what prompted me to write this entire article.&lt;/p&gt;

&lt;p&gt;First, you need to get the package &lt;code&gt;FSharp.DependencyManager.Paket&lt;/code&gt; onto your system.  The easiest way to do that is in FSI:&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#r "nuget: FSharp.DependencyManager.Paket";;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Now, there will be a cached copy of the package in the &lt;code&gt;~/.nuget/packages&lt;/code&gt; directory.  We need to pass this to the &lt;code&gt;--compilertool&lt;/code&gt; option of fsi (you will need to adjust it for your unix username and version of paket):&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;dotnet fsi --compilertool:"/home/YOURUSERNAME/.nuget/packages/fsharp.dependencymanager.paket/6.2.1/lib/netstandard2.0"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;I recommend having an alias like below, and updating it whenever you update paket:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;alias fsi='dotnet fsi --compilertool:"/home/YOURUSERNAME/.nuget/packages/fsharp.dependencymanager.paket/6.2.1/lib/netstandard2.0"'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Now, if you run FSI within a Solution or Project, you will be able to load the package according to the versions in &lt;code&gt;paket.lock&lt;/code&gt;, assuring version consistency between multiple Projects and FSX scripts:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#r "paket: nuget Suave";; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt; - There is an bug that prevents multiple users on your machine from loading NuGet and Paket packages in this way.&lt;br&gt;
The cause of this bug is that the packages are stored in &lt;code&gt;/tmp/nuget&lt;/code&gt; and &lt;code&gt;/tmp/script-packages&lt;/code&gt; with the permission 775, preventing other users (not in the same group) from creating new subdirectories.  To workaround this, simply remove these directories (or maybe permission them correctly) if switching users.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#standalone-executables"&gt;
  &lt;/a&gt;
  &lt;a&gt;Standalone Executables&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;F# applications can be compiled into standalone, self-contained binaries.  They can be distributed just like statically compiled applications written in C, Rust, or Go.  Of course, these binaries will tend to be large because they include the .NET runtime (a Hello World application comes in at around 65M).  This may be a consideration if the target environment is constrained (maybe an embedded device) or if you want to create dozens of of individual applications. &lt;/p&gt;

&lt;p&gt;In order to build self-contained applications, add the lines highlighted below: &lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;Project Sdk="Microsoft.NET.Sdk"&amp;gt;
  &amp;lt;PropertyGroup&amp;gt;
    &amp;lt;OutputType&amp;gt;Exe&amp;lt;/OutputType&amp;gt;
    &amp;lt;TargetFramework&amp;gt;net5.0&amp;lt;/TargetFramework&amp;gt;
    &amp;lt;!-- FROM HERE.... --&amp;gt;
    &amp;lt;PublishSingleFile&amp;gt;true&amp;lt;/PublishSingleFile&amp;gt;
    &amp;lt;SelfContained&amp;gt;true&amp;lt;/SelfContained&amp;gt;
    &amp;lt;RuntimeIdentifier&amp;gt;linux-x64&amp;lt;/RuntimeIdentifier&amp;gt;
    &amp;lt;PublishReadyToRun&amp;gt;true&amp;lt;/PublishReadyToRun&amp;gt;
    &amp;lt;!-- TO HERE --&amp;gt;
  &amp;lt;/PropertyGroup&amp;gt;
&amp;lt;/Project&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;And then run:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;dotnet publish
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Your binary will be available in &lt;code&gt;bin/Debug/net5.0/linux-x64/publish/&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;For more information, see &lt;a href="https://docs.microsoft.com/en-us/dotnet/core/deploying/single-file#publish-a-single-file-app---sample-project-file"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#templates"&gt;
  &lt;/a&gt;
  &lt;a&gt;Templates&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;dotnet&lt;/code&gt; CLI tool uses Templates to initialize new projects and other components.  They are akin to various project scafolding systems like &lt;code&gt;create-react-app&lt;/code&gt; for React.&lt;/p&gt;

&lt;p&gt;To see a list of templates installed on your machine, run &lt;code&gt;dotnet new --list&lt;/code&gt;:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Template Name                                 Short Name           Language    Tags                                               
--------------------------------------------  -------------------  ----------  ---------------------------------------------------
Console Application                           console              [C#],F#,VB  Common/Console                                     
Class library                                 classlib             [C#],F#,VB  Common/Library                                     
Gtk Application                               gtkapp               [C#]        Gtk/GUI App                                        
Gtk Dialog                                    gtkdialog            [C#]        Gtk/UI                                             
Gtk Widget                                    gtkwidget            [C#]        Gtk/UI                                             
Gtk Window                                    gtkwindow            [C#]        Gtk/UI                                             
MSTest Test Project                           mstest               [C#],F#,VB  Test/MSTest                                        
NUnit 3 Test Item                             nunit-test           [C#],F#,VB  Test/NUnit                                         
NUnit 3 Test Project                          nunit                [C#],F#,VB  Test/NUnit                                         
xUnit Test Project                            xunit                [C#],F#,VB  Test/xUnit                                         
MVC ViewImports                               viewimports          [C#]        Web/ASP.NET                                        
Razor Component                               razorcomponent       [C#]        Web/ASP.NET                                        
MVC ViewStart                                 viewstart            [C#]        Web/ASP.NET                                        
Razor Page                                    page                 [C#]        Web/ASP.NET                                        
Blazor Server App                             blazorserver         [C#]        Web/Blazor                                         
Blazor WebAssembly App                        blazorwasm           [C#]        Web/Blazor/WebAssembly                             
ASP.NET Core Empty                            web                  [C#],F#     Web/Empty                                          
ASP.NET Core Web App (Model-View-Controller)  mvc                  [C#],F#     Web/MVC                                            
ASP.NET Core Web App                          webapp               [C#]        Web/MVC/Razor Pages                                
Razor Class Library                           razorclasslib        [C#]        Web/Razor/Library                                  
... and a whole lot more
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;The "Short Name" is what you pass to &lt;code&gt;dotnet new&lt;/code&gt;. The Language column specifies the default language of the template and the availability of other languages.  To create a Class Library, therefore, you would need to run &lt;code&gt;dotnet new classlib --lang 'F#' -o MyClassLib&lt;/code&gt;, because otherwise it would default to C#.&lt;/p&gt;

&lt;p&gt;Also note that most of the templates that come default are for C# only.  That's ok, since the core use cases (&lt;code&gt;console&lt;/code&gt;, &lt;code&gt;classlib&lt;/code&gt;, and testing) are covered, and the F# community has developed templates for &lt;a href="https://github.com/dotnet/templating/wiki/Available-templates-for-dotnet-new#f-templates"&gt;other use cases&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;In order to install, say, the Expecto testing framework template, you would run:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;dotnet new -i "Expecto.Template::*"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;The template list (&lt;code&gt;dotnet new --list&lt;/code&gt;) will show you that the Short Name for this template is unsurprisingly 'expecto', so you would run something like the following to create your testing project:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;dotnet new expecto -o AwesomeTestProj
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Note that you do not need to specify &lt;code&gt;--lang 'F#'&lt;/code&gt; here because it F# is the default (and only) language for this template.&lt;/p&gt;

&lt;p&gt;When you install a template using &lt;code&gt;--install&lt;/code&gt;, they are installed in &lt;code&gt;~/.templateengine&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Under the hood, Templates are just specially tagged NuGet packages.  To find out the underlying package for a Template, run &lt;code&gt;dotnet new -u&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#git"&gt;
  &lt;/a&gt;
  &lt;a&gt;Git&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The following lines may be useful in your .gitignore:&lt;/p&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[Dd]ebug/&lt;br&gt;
[Rr]elease/&lt;br&gt;
x64/&lt;br&gt;
[Bb]in/&lt;br&gt;
[Oo]bj/&lt;br&gt;
.paket/&lt;br&gt;
paket-files/&lt;br&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
&lt;br&gt;
  &lt;a href="#vim"&gt;&lt;br&gt;
  &lt;/a&gt;&lt;br&gt;
  &lt;a&gt;Vim&lt;/a&gt;&lt;br&gt;
&lt;/h2&gt;

&lt;p&gt;If you are a Vim/NeoVim user, you will be happy to know that F# support is surprisingly good.  With the help of the F# Language Server plugin &lt;a href="https://github.com/ionide/Ionide-vim"&gt;Ionide-Vim&lt;/a&gt;, you can get access to contextual code completion (called 'Intellisense' in Visual Studios), diagnostics, and much more. &lt;/p&gt;

&lt;p&gt;On NeoVim, the built-in LSP client works without modification.  On Vim, you will need &lt;a href="https://github.com/autozimu/LanguageClient-neovim"&gt;LanguageClient-neovim&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#visual-studio-code"&gt;
  &lt;/a&gt;
  &lt;a&gt;Visual Studio Code&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Visual Studio Code, unsurprisingly, has excellent support for F# through &lt;a href="https://ionide.io/Editors/Code/getting_started.html"&gt;Ionide&lt;/a&gt;.  Simply &lt;code&gt;Ctrl-Shift-X&lt;/code&gt; to the extension management screen to install.&lt;/p&gt;

&lt;p&gt;You can also impress the kids by using FSI through a "Notebook" interface with the &lt;a href="https://marketplace.visualstudio.com/items?itemName=ms-dotnettools.dotnet-interactive-vscode"&gt;.NET Interactive Notebooks&lt;/a&gt; extension.  After installation, press &lt;code&gt;Ctrl-Shift-P&lt;/code&gt; and select ".NET Interface: Create new blank notebook", choose "Create as &lt;code&gt;.ipynb&lt;/code&gt;" then "F#". &lt;/p&gt;

&lt;p&gt;&lt;em&gt;TODO: Figure out how to get VS Code to recognize Paket&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#gui-development"&gt;
  &lt;/a&gt;
  &lt;a&gt;GUI Development&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Your only real choice for GUI development with F#/.NET on Linux is &lt;a href="https://github.com/GtkSharp/GtkSharp"&gt;GTK#&lt;/a&gt;.  (&lt;em&gt;I've gotten feedback on Twitter that this statement may be a bit harsh, will update when I dive a bit deeper into other options&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;Despite investing heavily in Open Source for the .NET itself, Microsoft has never seriously supported GUI development on Linux.  You &lt;em&gt;could&lt;/em&gt; run old WinForm applications using Mono, and there are some efforts to run UWP applications on Linux.  However, development tools for libraries are largely these tied to Visual Studios and Windows.&lt;/p&gt;

</description>
      <category>fsharp</category>
      <category>dotnet</category>
      <category>linux</category>
    </item>
  </channel>
</rss>
