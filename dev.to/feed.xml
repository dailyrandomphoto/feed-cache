<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Ideas for an Open Metaverse</title>
      <author>The Open Coder</author>
      <pubDate>Sun, 07 Nov 2021 16:33:58 +0000</pubDate>
      <link>https://dev.to/opencoder/ideas-for-an-open-metaverse-4pmh</link>
      <guid>https://dev.to/opencoder/ideas-for-an-open-metaverse-4pmh</guid>
      <description>&lt;p&gt;With all of the new changes Facebook is making, I think it's important to talk about this topic. I've been a long time fan of VR, and I would consider myself an early adopter of the technology. You can never forget that first experience you have in a VR headset where you realize how amazing the possibilities are. But not much has changed since I bought my Oculus Rift in 2018. There's been some hardware upgrades from HTC and Oculus, and some new players entering the space with nice headsets like the Valve Index. However, the only application for this technology has largely been gaming and very few productivity applications. Now that Facebook (Meta) has announced there new direction with the "metaverse", I think it's important to talk about what that should look like beyond just Meta's products.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-metaverse"&gt;
  &lt;/a&gt;
  The Metaverse
&lt;/h2&gt;

&lt;p&gt;The metaverse has been described as a place where you can virtually meet, work and play using a VR headset, glasses or your device. The easiest way to catch up on what that really means is to watch this video of Meta's recent announcements:&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/gElfIo6uw4g"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;From what we've been shown, it seems like they want to focus on social experiences through virtual meetings and work. Because they own Oculus, the largest player in the VR space, it's obvious they will be making the first machines that make this stuff possible. However, what empowers this technology is the world we build around it, which should not be left up to the largest corporations in America.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#an-open-metaverse"&gt;
  &lt;/a&gt;
  An Open Metaverse
&lt;/h2&gt;

&lt;p&gt;If you've read any of my other posts, you'll know that I believe in open-source technology and its ability to innovate properly. From what Meta has shown us, they seem to already be starting to build the applications that will power the metaverse. Although their announcements will push for more developers to invest in the metaverse, there are some large implications for 1 company developing what could end up being our day to day lives. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#security-and-privacy"&gt;
  &lt;/a&gt;
  Security and Privacy
&lt;/h3&gt;

&lt;p&gt;In the couple decades that open-source software has existed, it has been obvious that security and privacy has been an overarching benefit. We all know Microsoft and Apple don't have our best interests in mind when we use their operating systems. When it comes to security, Linux has dominated every other operating system, because the code is openly available to anyone. That means more people see the code, understand the problems, and fix it. It's quite possibly the most simple and effective benefit of open-source.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#protocols"&gt;
  &lt;/a&gt;
  Protocols
&lt;/h3&gt;

&lt;p&gt;A few parallels to the early days of the internet can be made here. Contrary to public belief, the metaverse will create more ways for humans to collaborate and socialize. A lot of the comments I've seen are along the lines of "This is sad. No one will talk to each other in person anymore." If the past two years have shown us anything it's that more and more people don't care about working in-person for the "social benefits". Additionally, we live in a world where we can take our computers anywhere and interact with other people wherever we want. This technology will only make this interaction more realistic and normal than it already is. There's no evidence for us to think this will be any different than the introduction of computers to the masses. &lt;/p&gt;

&lt;p&gt;Beyond the social aspect of the internet, we can compare the current vision of the metaverse to the early days of the internet. The internet was really nothing without protocols. There's no way we could have come this far without things like TCP/UDP and HTTP. Similarly, we need protocols for how experiences in the metaverse will be served. What file formats to support? How do we ensure a secure connection? What software will act as the "browser" between virtual worlds? These types of questions need to be tackled before a bunch of large corporations start making their own incompatible versions of the metaverse.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#development"&gt;
  &lt;/a&gt;
  Development
&lt;/h3&gt;

&lt;p&gt;This is something Meta addressed, but I want to change the way they are looking at this piece of the puzzle. We shouldn't rely on Meta to create the tools for developers to create virtual experiences. I would look more towards technology like Unreal Engine or Unity which are freely available to anyone. If we take this a step further, we should create open-source tools for us to create virtual experiences, so that there is the same standard for quality and security at every point in the pipeline. The internet could have never succeeded if there were not some level of agreement on how to develop websites that are compatible with browsers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-should-we-invest-in-the-open-metaverse"&gt;
  &lt;/a&gt;
  Why Should We Invest in the Open Metaverse?
&lt;/h2&gt;

&lt;p&gt;Well for starters, a couple massive corporations are investing billions of dollars into the metaverse. If developers standby and let them call the shots for too long, there is a possibility for our virtual experiences to be flooded with ads and privacy invasion. &lt;/p&gt;

&lt;p&gt;Beyond the dystopian commentary, let's think about how national governments have regulated technology. We've been shown that corporations will unethically use their power over our social networks and devices in order to sell our data for profit. Whether that data has larger implications in other parts of society never mattered to these companies. All the while, our governments have done nothing to stop it. If we build the metaverse upon the foundations of open-source technology, we can largely prevent corporations from invading our privacy.&lt;/p&gt;

&lt;p&gt;My belief is that the metaverse is inevitable. It's only a matter of time before people adopt this technology, which I think will benefit society for the most part. However, I think it's important that developer communities take some time to deliberate over how the metaverse should work, so we can get around some of the mistakes that have been made before.&lt;/p&gt;

&lt;p&gt;Personally, I want to contribute to building the metaverse. Ever since I first used VR, I understood how far the technology could go, and I'm sure there are many other applications we cannot begin to understand yet. I believe this technology could empower new ways of working together that would drastically increase productivity and collaboration in the workplace. It has the power to change how we socialize on the internet and bring more empathy into the conversations we have with strangers. My hope is that the metaverse will make us understand that there's someone behind a profile picture, and they are worth more than just their data. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#some-more-info"&gt;
  &lt;/a&gt;
  Some More Info
&lt;/h3&gt;

&lt;p&gt;If you're looking for more information about this topic, check out this &lt;a href="https://spectrum.ieee.org/open-metaverse?utm_campaign=post-teaser&amp;amp;utm_content=1kp270f8"&gt;article&lt;/a&gt;.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>DOM (Document Object Model)
 
</title>
      <author>Riyad Mahmud</author>
      <pubDate>Sun, 07 Nov 2021 16:30:03 +0000</pubDate>
      <link>https://dev.to/riyadmahmud2021/-what-is-dom-what-is-d-o-m-for-5g44</link>
      <guid>https://dev.to/riyadmahmud2021/-what-is-dom-what-is-d-o-m-for-5g44</guid>
      <description>&lt;h2&gt;
  &lt;a href="#1-what-is-dom"&gt;
  &lt;/a&gt;
   1. What is DOM?
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#2-what-is-d-o-m-for"&gt;
  &lt;/a&gt;
   2. What is “D” “O” “M” for?
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#3-is-dom-same-as-html"&gt;
  &lt;/a&gt;
   3. Is DOM same as HTML?
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#4-what-is-the-relation-between-dom-and-html"&gt;
  &lt;/a&gt;
   4. What is the relation between DOM and HTML.  
&lt;/h2&gt;

&lt;p&gt;Ans:&lt;br&gt;
Today, we will know 4 queries solution. These are above.&lt;br&gt;
Lets learn...&lt;/p&gt;

&lt;p&gt;DOM contains Document Object Model.&lt;br&gt;&lt;br&gt;
D for Document. &lt;br&gt;
It Means: HTML doc file &lt;/p&gt;

&lt;p&gt;O for Object.&lt;br&gt;&lt;br&gt;
It Means: HTML element(body,head,p,h1,etc) / javascript object) &lt;br&gt;
We can say, HTML element(body,head,p,h1,etc) = javascript object.&lt;/p&gt;

&lt;p&gt;M for Model. &lt;br&gt;
It Means: HTML doc’s “element/ javascript object” Model&lt;/p&gt;

&lt;p&gt;DOM works as a “javascript object model”. Here, “javascript object” is known as  HTML element(body,head,p,h1,etc). Actually, DOM is an HTML element(body,head,p,h1) model. &lt;/p&gt;

&lt;p&gt;Best of luck.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>html</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Datta Able - Free Starters for Flask, Django, React, and Firebase</title>
      <author>Sm0ke</author>
      <pubDate>Sun, 07 Nov 2021 16:28:54 +0000</pubDate>
      <link>https://dev.to/sm0ke/datta-able-free-starters-for-flask-django-react-and-firebase-fc4</link>
      <guid>https://dev.to/sm0ke/datta-able-free-starters-for-flask-django-react-and-firebase-fc4</guid>
      <description>&lt;p&gt;Hello Coders!&lt;/p&gt;

&lt;p&gt;This article presents a few open-source seed project crafted on top of &lt;a href="https://www.admin-dashboards.com/datta-able-free-react-firebase-django-flask/"&gt;Datta Able&lt;/a&gt;, a colorful design in different technologies like &lt;code&gt;React&lt;/code&gt;, &lt;code&gt;Django&lt;/code&gt;, &lt;code&gt;Flask&lt;/code&gt; plus full-stack versions powered by &lt;code&gt;NodeJS&lt;/code&gt; and &lt;code&gt;Firebase&lt;/code&gt;. All projects, released under the MIT license on Github, can be used as a starting point for a new product or simply for eLearning activities. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Thanks for reading!&lt;/em&gt; - Content provided by &lt;strong&gt;&lt;a href="https://appseed.us/"&gt;App Generator&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;




&lt;ul&gt;
&lt;li&gt;✨ &lt;a href="https://appseed.us/product/react-node-js-datta-able"&gt;Datta Able React NodeJS&lt;/a&gt; - Full-stack project&lt;/li&gt;
&lt;li&gt;✨ &lt;a href="https://appseed.us/admin-dashboards/django-datta-able"&gt;Datta Able Django&lt;/a&gt; - simple Django starter&lt;/li&gt;
&lt;li&gt;✨ &lt;a href="https://appseed.us/admin-dashboards/flask-datta-able"&gt;Datta Able Flask&lt;/a&gt; - open-source project&lt;/li&gt;
&lt;li&gt;✨ &lt;a href="https://appseed.us/product/react-firebase-datta-able"&gt;Datta Able React Firebase&lt;/a&gt; - full-stack, also free&lt;/li&gt;
&lt;li&gt;✨ &lt;a href="https://bit.ly/3qFyzgm"&gt;Datta Able Bootstrap&lt;/a&gt; - HTML template version&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#datta-able-react-nodejs"&gt;
  &lt;/a&gt;
  ✨ &lt;a href="https://appseed.us/product/react-node-js-datta-able"&gt;Datta Able React NodeJS&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;This project is an open-source full-stack project that uses the React version of Datta Able for the UI and a simple, yet powerful Node JS API that manages the users. Datta Able React is a complete game-changer React Dashboard Template with an easy and intuitive responsive design as on retina screens or laptops.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;👉 &lt;a href="https://appseed.us/product/react-node-js-datta-able"&gt;React Node JS Datta Able&lt;/a&gt; - product page&lt;/li&gt;
&lt;li&gt;👉 &lt;a href="https://react-node-js-datta-able.appseed-srv1.com/"&gt;React Node JS Datta Able&lt;/a&gt; - LIVE Demo&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;React is an open-source front-end JavaScript library for building user interfaces or UI components. It is maintained by Facebook and a community of individual developers and companies. React can be used as a base in the development of single-page or mobile applications.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sTFJSKiJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gmxz9pf7hqwfinllpvss.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sTFJSKiJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gmxz9pf7hqwfinllpvss.gif" alt="Datta Able React NodeJS - Full-stack version." width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#datta-able-django"&gt;
  &lt;/a&gt;
  ✨ &lt;a href="https://appseed.us/admin-dashboards/django-datta-able"&gt;Datta Able Django&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Open-source dashboard generated by the AppSeed platform with basic modules, database, authentication, and deployment scripts on top of Datta Able (free version).&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;👉 &lt;a href="https://appseed.us/admin-dashboards/django-datta-able"&gt;Datta Able Django&lt;/a&gt; - Product page&lt;/li&gt;
&lt;li&gt;👉 &lt;a href="https://django-datta-able.appseed-srv1.com/"&gt;Datta Able Django&lt;/a&gt; - LIVE deployment&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Django is a high-level Python Web framework that encourages rapid development and clean, pragmatic design. Built by experienced developers, it takes care of much of the hassle of Web development, so you can focus on writing your app without needing to reinvent the wheel. It’s free and open source.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PCX_KLvl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t8mfd31dmrl4hb8p08p9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PCX_KLvl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t8mfd31dmrl4hb8p08p9.png" alt="Datta Able - Django Version." width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#datta-able-flask"&gt;
  &lt;/a&gt;
  ✨ &lt;a href="https://appseed.us/admin-dashboards/flask-datta-able"&gt;Datta Able Flask&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Simple dashboard coded in Flask Framework. Datta Able Bootstrap Lite is the most stylized Bootstrap 4 Lite Admin Template, around all other Lite/Free admin templates in the market. It comes with high feature-rich pages and components with fully developer-centric code. Before developing Datta Able our key points were performance and design.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;👉 &lt;a href="https://appseed.us/admin-dashboards/flask-datta-able"&gt;Datta Able Flask&lt;/a&gt; - product page&lt;/li&gt;
&lt;li&gt;👉 &lt;a href="https://flask-datta-able.appseed-srv1.com/"&gt;Datta Able Flask&lt;/a&gt; - LIVE deployment&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Flask is a lightweight WSGI web application framework. It is designed to make getting started quick and easy, with the ability to scale up to complex applications. Classified as a microframework, Flask is written in Python and it does not require particular tools or libraries. It has no database abstraction layer, form validation, or any other components where pre-existing third-party libraries provide common functions.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lEEZqlHm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xqv3flvkggyoetc0blpz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lEEZqlHm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xqv3flvkggyoetc0blpz.png" alt="Datta Able - Flask Version." width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#datta-able-firebase"&gt;
  &lt;/a&gt;
  ✨ &lt;a href="https://appseed.us/product/react-firebase-datta-able"&gt;Datta Able Firebase&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;In the current tech world, Firebase is one of the most trending technologies that help you to make a super cool web app or mobile apps in a short span of time.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;👉 &lt;a href="https://appseed.us/product/react-firebase-datta-able"&gt;React Firebase Datta Able&lt;/a&gt; - product page&lt;/li&gt;
&lt;li&gt;👉 &lt;a href="https://react-firebase-datta-able.appseed-srv1.com/"&gt;React Firebase Datta Able&lt;/a&gt; - LIVE Demo&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Firebase is a B-A-S-S ( backend as a service ) provided by Google, by means of the backend as a service means that you don’t have to think about how to store the data in the backend and how to configure your service.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mKZWzdo3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i3y99d6oz4l26lbvinj0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mKZWzdo3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i3y99d6oz4l26lbvinj0.png" alt="Datta Able - React Firebase Version." width="880" height="455"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#datta-able-bootstrap"&gt;
  &lt;/a&gt;
  ✨ &lt;a href="https://bit.ly/3qFyzgm"&gt;Datta Able Bootstrap&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Datta Able Bootstrap Lite is the most stylized Bootstrap 4 Lite Admin Template, around all other Lite/Free admin templates in the market. It comes with high feature-rich pages and components with fully developer-centric code.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;👉 &lt;a href="https://bit.ly/3qFyzgm"&gt;Datta Able Bootstrap&lt;/a&gt; - product page&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With performance, Datta Able rendering is fast in all major browsers. It is passed through a good score in Google Page Speed, Pingdom, GT Metrix. Code passed via w3 validators with all w3 standards.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1FSnGBcn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hs0hxjokbbs2vo4ogbbs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1FSnGBcn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hs0hxjokbbs2vo4ogbbs.png" alt="Datta Able - Boostrap Version." width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Thanks for reading! For more resources, please access:&lt;/p&gt;
&lt;/blockquote&gt;




&lt;ul&gt;
&lt;li&gt;👉 More &lt;a href="https://appseed.us/apps/react"&gt;React Apps&lt;/a&gt; - index provided by AppSeed&lt;/li&gt;
&lt;li&gt;👉 Free &lt;a href="https://dev.to/sm0ke/react-dashboards-open-source-apps-1c7j"&gt;React Dashboards&lt;/a&gt; - a curated index published on Dev.to
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>webdev</category>
      <category>opensource</category>
      <category>react</category>
      <category>dashboards</category>
    </item>
    <item>
      <title>muffon - Desktop music browser</title>
      <author>Aleksey Shpakovsky</author>
      <pubDate>Sun, 07 Nov 2021 15:56:31 +0000</pubDate>
      <link>https://dev.to/staniel359/muffon-desktop-music-browser-5a55</link>
      <guid>https://dev.to/staniel359/muffon-desktop-music-browser-5a55</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k3TGUt3J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n80hjbi8kfodx9h8d68b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k3TGUt3J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n80hjbi8kfodx9h8d68b.png" alt="muffon" width="640" height="366"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;muffon&lt;/strong&gt; is a desktop music browser / streaming service that retrieves info and audio/video from &lt;strong&gt;Last.FM&lt;/strong&gt;, &lt;strong&gt;Discogs&lt;/strong&gt;, &lt;strong&gt;VK&lt;/strong&gt;, &lt;strong&gt;YouTube&lt;/strong&gt;, &lt;strong&gt;Deezer&lt;/strong&gt;, &lt;strong&gt;Yandex Music&lt;/strong&gt;, &lt;strong&gt;Odnoklassniki&lt;/strong&gt;, &lt;strong&gt;Spotify&lt;/strong&gt;, &lt;strong&gt;SoundCloud&lt;/strong&gt;, &lt;strong&gt;Bandcamp&lt;/strong&gt;, &lt;strong&gt;Genius&lt;/strong&gt; and &lt;strong&gt;Rate Your Music&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;You can:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;listen to tracks/artists/whole albums&lt;/li&gt;
&lt;li&gt;watch videos&lt;/li&gt;
&lt;li&gt;view tracks' lyrics&lt;/li&gt;
&lt;li&gt;view tags and their top artists/albums/tracks&lt;/li&gt;
&lt;li&gt;view top artists/tracks/tags&lt;/li&gt;
&lt;li&gt;create music library&lt;/li&gt;
&lt;li&gt;get personal recommendations (based on your library)&lt;/li&gt;
&lt;li&gt;create playlists&lt;/li&gt;
&lt;li&gt;add to favorites&lt;/li&gt;
&lt;li&gt;add to bookmarks&lt;/li&gt;
&lt;li&gt;add to listened&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It has &lt;strong&gt;no ads&lt;/strong&gt; and it's &lt;strong&gt;absolutely free&lt;/strong&gt; to use.&lt;/p&gt;

&lt;p&gt;It's built with &lt;strong&gt;Vue&lt;/strong&gt; and &lt;strong&gt;Electron&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;It's tested on &lt;strong&gt;Windows 10&lt;/strong&gt; and &lt;strong&gt;Linux&lt;/strong&gt;, but there is &lt;strong&gt;Mac&lt;/strong&gt; version as well.&lt;/p&gt;

&lt;p&gt;It's currently in &lt;strong&gt;alpha&lt;/strong&gt;, so not everything's perfect and much to be done.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>vue</category>
      <category>electron</category>
    </item>
    <item>
      <title>Map types in GO</title>
      <author>BhanuReddy</author>
      <pubDate>Sun, 07 Nov 2021 15:40:40 +0000</pubDate>
      <link>https://dev.to/bhanu011/map-types-in-go-3h2i</link>
      <guid>https://dev.to/bhanu011/map-types-in-go-3h2i</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gJAqdnkv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hbuw0qcneohvve67ottc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gJAqdnkv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hbuw0qcneohvve67ottc.png" alt="Maps in GO" width="880" height="575"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A map is an unordered collection of key/value pairs, where each key is unique. If you are coming from python this is similar to dictionary.&lt;/li&gt;
&lt;li&gt;Go provides a built in map type that implements hash table and stores key/value pairs into buckets&lt;/li&gt;
&lt;li&gt;Hash tables provide fast lookup, addition and deletion.&lt;/li&gt;
&lt;li&gt;The idea behind hash map is to have O(1) lookup time on average. Generally it is O(n) provided if hash function gives n collisions which is very rare in real time&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Lets see the basic operations of map in golang.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#declaration"&gt;
  &lt;/a&gt;
  Declaration
&lt;/h2&gt;

&lt;p&gt;Below declaration implies that m is a Map with key as string and value as int&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var m map[string]int
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#initialization"&gt;
  &lt;/a&gt;
  Initialization
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The make() function is a built-in function in go which is used to initialize maps along with slices and channels.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Note that make() function creates generic values for map, slices and channels and it never returns pointer.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Map m1 initializes map with string as key and int as value.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; m1 := make(map[string]int)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Map m2 is initialized with string as key, int as value and with a capacity of 10 elements which means that it is only a hint that an initial capacity can be 10 (space for initial 10 elements before reallocation happens) but it won't restrict if elements are more than mentioned initial capacity.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;capacity is hint for total number of key/value pairs.&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; m2 := make(map[string]int, 10)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The default number of buckets is 1. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Each bucket is an array with array of 8 elements. Once number of entries in each bucket reaches an average load of buckets, the map get bigger by doubling its number of buckets.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Map m3 is initialized with string as key, int as value storing "RED", "BLUE" as keys and 1, 2 as values respectively&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; var m3 := map[string]int {
    "RED": 1,
    "BLUE": 2,
  }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S7D6ci2m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c2k5n9bira4gwik2zvm8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S7D6ci2m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c2k5n9bira4gwik2zvm8.png" alt="Maps in Go" width="331" height="152"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#zero-value-of-map"&gt;
  &lt;/a&gt;
  Zero value of map
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;If map is declared and initialization is not done then map acts like empty map while reading and map acts like nil while writing, keep this in mind when you are declaring a map next time.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;func main() {
    var m map[string]int //Declaration

    //READING VALUE FROM MAP
    v := m["key"]

    fmt.Printf("Read value from map %+v \n", v)

    //WRITING VALUE TO MAP
    m["key2"] = 973

    fmt.Printf("values in map %+v \n", m)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;from above example reading happens without any issue since map is behaving like empty map while reading, but at line where we are trying to assign value to map &lt;code&gt;m["key2"] = 973&lt;/code&gt; compiler panics with message "assignment to entry in nil map".&lt;/p&gt;

&lt;p&gt;&lt;a href="https://play.golang.org/p/lZTRB2b6o3i"&gt;Try above example in playground&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#map-operations"&gt;
  &lt;/a&gt;
  MAP OPERATIONS
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#insertupdate"&gt;
  &lt;/a&gt;
  Insert/Update
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;m := make(map[string]int)
m["RED"] = 123
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;add to map with key "RED" and value as 123.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#delete"&gt;
  &lt;/a&gt;
  Delete
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;delete(m, "BLUE")
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;delete elements with key values as BLUE&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#iterate-over-all-elements-in-map"&gt;
  &lt;/a&gt;
  Iterate over all elements in map
&lt;/h3&gt;

&lt;p&gt;Keyword range can be used to iterate over all elements&lt;br&gt;
in map as you can see in below sample code when range is used it returns key, value pair.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;m := map[string]int {
    "RED": 1,
    "BLUE": 2,
}

for key, val := range m {
    fmt.Printf("key: %s, value: %d", key, val)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#get-values-from-map"&gt;
  &lt;/a&gt;
  Get Values from Map
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;val := m["RED"]
val, ok := m["BLUE"]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;while getting values from map it returns two variables,value and bool. Bool indicates whether the key exists in map.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-the-use-of-returned-bool-value"&gt;
  &lt;/a&gt;
  What is the use of returned bool value?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Note that value returned from map will be zero value if key is not present, for example if int is the value for string key but given key is not available in map then zero is returned(since zero value of int is zero). &lt;/li&gt;
&lt;li&gt;This helps in understanding whether value is present as zero for the given key or since key is not available in map zero is returned.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#what-data-types-can-be-used-as-key-in-map"&gt;
  &lt;/a&gt;
  What data types can be used as key in Map?
&lt;/h3&gt;

&lt;p&gt;Any data type which has equality operation defined can be used as key in map that is == and != should be defined on those data types going by that logic we can't have below data types as keys in map&lt;br&gt;
     * slice &lt;br&gt;
     * functions&lt;br&gt;
     * map&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#concurrency"&gt;
  &lt;/a&gt;
  Concurrency
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Maps are not safe for concurrent use: it’s not defined what happens when you read and write to them simultaneously. &lt;/li&gt;
&lt;li&gt;If you need to read from and write to a map concurrently, the accesses must be controlled by some kind of synchronization mechanism. &lt;/li&gt;
&lt;li&gt;One common way to protect maps is with sync.RWMutex.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Below statement declares struct stats with RWMutex and a map with string as key and int ass value&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var stats = struct{
    sync.RWMutex
    m map[string]int
}{m: make(map[string]int)}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Reading from stats using Read Lock(concurrent safe read)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;counter.RLock()
n := counter.m["total_requests"]
counter.RUnlock()
fmt.Println("total_requests:", n)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Writing to stats using Write Lock(concurrent safe write)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;counter.Lock()
counter.m["some_key"]++
counter.Unlock()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#what-does-a-map-variable-hold"&gt;
  &lt;/a&gt;
  What does a Map variable hold?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Maps are not reference variables. &lt;/li&gt;
&lt;li&gt;Go also doesn't have pass by reference since it doesn't have reference variables. &lt;/li&gt;
&lt;li&gt;To understand more on what is reference variable read below post from Dave Cheyney.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://dave.cheney.net/2017/04/29/there-is-no-pass-by-reference-in-go"&gt;There is no pass by reference in go&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Map m is actually a pointer to 'runtime.hmap'. &lt;/li&gt;
&lt;li&gt;To confirm the same run below code in go playground and see that both map variable m and uintptr has same size&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://play.golang.org/p/_LzTPX14PsB"&gt;compare map variable with uintptr in go playground&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Access hmap and maptype struct which a map is pointed to, run below code in playground to see hmap struct. Try changing key data type, capacity of map etc to see how hmap and maptypes vary.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://play.golang.org/p/Do3kM1B4WHg"&gt;observe hmap and maptype structs&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#compile-time"&gt;
  &lt;/a&gt;
  Compile Time
&lt;/h2&gt;

&lt;p&gt;Go compiler rewrites map operations with different functions calls in runtime below are function calls for respective map operations&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;m := make(map[int]int)  → runtime.makemap(&amp;amp;t, 0, &amp;amp;h, &amp;amp;b)
v := m["RED"]     → runtime.mapaccess1(m, ”RED", &amp;amp;v)
v, ok := m["BLUE"] → runtime.mapaccess2(m, ”BLUE”, &amp;amp;v, &amp;amp;ok)
m["CYAN"] = 143   → runtime.mapinsert(m, ”CYAN", 143)
delete(m, "BLUE")  → runtime.mapdelete(m, “BLUE”)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;I hope this will be useful as a reference for Maps. I will try to add more details on sync.Map in a separate post. If there is something which can be improved/not clear in above post please let me know in comments.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=IQ3esT7AgBs"&gt;Dave Cheyney's talk on How Maps are implemented in go&lt;/a&gt;&lt;br&gt;
&lt;a href="https://groups.google.com/g/golang-nuts/c/SjuhSYDITm4"&gt;Discussion on Why maps are not as *map since it is pointer&lt;/a&gt;&lt;/p&gt;

</description>
      <category>go</category>
      <category>map</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Build a quiz App with Next.js and TailwindCSS!</title>
      <author>Avneesh Agarwal</author>
      <pubDate>Sun, 07 Nov 2021 15:34:39 +0000</pubDate>
      <link>https://dev.to/byteslash/build-a-quiz-app-with-nextjs-and-tailwindcss-3i7d</link>
      <guid>https://dev.to/byteslash/build-a-quiz-app-with-nextjs-and-tailwindcss-3i7d</guid>
      <description>&lt;p&gt;Hey guys, this is gonna be a tutorial plus a challenge. I also have a giveaway at the end so stay tuned ;)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#demo"&gt;
  &lt;/a&gt;
  Demo
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.loom.com/share/057cf700f0a24f22ba1f3528f8f9e585"&gt;https://www.loom.com/share/057cf700f0a24f22ba1f3528f8f9e585&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can try it out yourself here- &lt;a href="https://quiz-challenge.vercel.app/"&gt;https://quiz-challenge.vercel.app/&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#setting-up"&gt;
  &lt;/a&gt;
  Setting up
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#creating-a-next-app-with-tailwindcss"&gt;
  &lt;/a&gt;
  Creating a Next app with TailwindCSS
&lt;/h4&gt;

&lt;p&gt;I am going to use tailwind for the basic stylings needed in the app&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npx create-next-app next-stripe-demo -e with-tailwindcss
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#cleanup"&gt;
  &lt;/a&gt;
  Cleanup
&lt;/h4&gt;

&lt;p&gt;Delete everything in &lt;strong&gt;&lt;em&gt;pages/index.js&lt;/em&gt;&lt;/strong&gt; after the Head&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import Head from "next/head";


export default function Home() {
  return (
    &amp;lt;div className="flex flex-col items-center justify-center min-h-screen py-2"&amp;gt;
      &amp;lt;Head&amp;gt;
        &amp;lt;title&amp;gt;Quiz App&amp;lt;/title&amp;gt;
      &amp;lt;/Head&amp;gt;
    &amp;lt;/div&amp;gt;
  )
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#starting-the-app"&gt;
  &lt;/a&gt;
  Starting the app
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm run dev # npm
yarn dev # yarn
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#create-a-few-questions"&gt;
  &lt;/a&gt;
  Create a few questions
&lt;/h3&gt;

&lt;p&gt;We are going to use the questions from a JSON array, so create a &lt;code&gt;questions.json&lt;/code&gt; file in the root of the directory. The questions array should look like this-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[
  {
    "question": "What type of framework is Next.js?",
    "answerOptions": [
      { "answer": "Frontend" },
      { "answer": "Backend" },
      { "answer": "FullStack", "isCorrect": true },
      { "answer": "None of the above" }
    ]
  },
  {
    "question": "When was Next.js released?",
    "answerOptions": [
      { "answer": "20 September 2019" },
      { "answer": "14 January 2017" },
      { "answer": "25 October 2016", "isCorrect": true },
      { "answer": "28 March 2018" }
    ]
  },
  {
    "question": "Which CSS Framework are we using?",
    "answerOptions": [
      { "answer": "Bootstrap" },
      { "answer": "TailwindCSS", "isCorrect": true },
      { "answer": "Chakra UI" },
      { "answer": "Bulma CSS" }
    ]
  },
  {
    "question": "Which class in Tailwind is used to set flex direction of column?",
    "answerOptions": [
      { "answer": "col" },
      { "answer": "col-flex" },
      { "answer": "flex-col", "isCorrect": true },
      { "answer": "None of the above" }
    ]
  }
]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#creating-the-ui-for-the-quiz"&gt;
  &lt;/a&gt;
  Creating the UI for the Quiz
&lt;/h3&gt;

&lt;p&gt;Our quiz will look like this-&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7VxAiaKe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636259680363/teWazWggj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7VxAiaKe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636259680363/teWazWggj.png" alt="image.png" width="880" height="458"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Styling the container of our app.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I will add the following styles to the div containing the app-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; &amp;lt;div className="flex flex-col w-screen px-5 h-screen bg-[#1A1A1A] justify-center items-center"&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will give us a blank screen with the background color- #1A1A1A.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Question section&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We are going to hard code the values for now.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div className="flex flex-col items-start w-full"&amp;gt;
  &amp;lt;h4 className="mt-10 text-xl text-white/60"&amp;gt;Question 1 of 5&amp;lt;/h4&amp;gt;
  &amp;lt;div className="mt-4 text-2xl text-white"&amp;gt;
    What type of framework is Next.js?
  &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now our app is looking like this&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Pm93ZIxD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636257025596/23Zna0jV_.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Pm93ZIxD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636257025596/23Zna0jV_.png" alt="image.png" width="880" height="457"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Creating the answers&lt;/strong&gt;&lt;br&gt;
We are going to map through the answers the first question, to show the options.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div className="flex flex-col w-full"&amp;gt;
  {questions[0].answerOptions.map((answer, index) =&amp;gt; (
    &amp;lt;div
      key={index}
      className="flex items-center w-full py-4 pl-5 m-2 ml-0 space-x-2 border-2 cursor-pointer bg-white/5 border-white/10 rounded-xl"
    &amp;gt;
      &amp;lt;input type="radio" className="w-6 h-6 bg-black" /&amp;gt;
      &amp;lt;p className="ml-6 text-white"&amp;gt;{answer.answer}&amp;lt;/p&amp;gt;
    &amp;lt;/div&amp;gt;
  ))}
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;we also need to import questions from the questions.json file, so add this import line-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import questions from "../questions.json";
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It will now give us all the options with a radio button-&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cwQoKTRk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636257961505/SWmhaiBfq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cwQoKTRk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636257961505/SWmhaiBfq.png" alt="image.png" width="880" height="457"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The radio button doesn't go well with our theme, so I am going to add some custom styles for it in globals.css, so follow the instructions-&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create a &lt;code&gt;styles&lt;/code&gt; folder and &lt;code&gt;globals.css&lt;/code&gt; file inside it&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0aESqUK7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636258196036/R40DA7RFs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0aESqUK7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636258196036/R40DA7RFs.png" alt="Untitled.png" width="394" height="444"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Inside &lt;code&gt;globals.css&lt;/code&gt; add the following-
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@tailwind base;
@tailwind components;
@tailwind utilities;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Import &lt;code&gt;globals.css&lt;/code&gt; instead of &lt;code&gt;tailwindcss/tailwind.css&lt;/code&gt; in &lt;code&gt;_app.js&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import "../styles/globals.css";
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Add the styles for the custom radio button
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;input[type="radio"]:after {
  width: 24px;
  height: 24px;
  border-radius: 24px;
  cursor: pointer;
  position: relative;
  background-color: #535353;
  content: "";
  display: inline-block;
  visibility: visible;
  border: 2px solid white;
}

input[type="radio"]:checked:after {
  width: 24px;
  height: 24px;
  border-radius: 24px;
  cursor: pointer;
  position: relative;
  background-color: #4F46E5;
  content: "";
  display: inline-block;
  visibility: visible;
  border: 2px solid white;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now it gives us a better radio button that matches the theme like this-&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---3Z2xgPL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636259141168/pI1A-jI7H.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---3Z2xgPL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636259141168/pI1A-jI7H.png" alt="image.png" width="880" height="44"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Adding the buttons to navigate through the questions&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div className="flex justify-between w-full mt-4 text-white"&amp;gt;
  &amp;lt;button className="w-[49%] py-3 bg-indigo-600 rounded-lg"&amp;gt;Previous&amp;lt;/button&amp;gt;
  &amp;lt;button className="w-[49%] py-3 bg-indigo-600 rounded-lg"&amp;gt;Next&amp;lt;/button&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This gives us the buttons for navigating as follows.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7VxAiaKe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636259680363/teWazWggj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7VxAiaKe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636259680363/teWazWggj.png" alt="image.png" width="880" height="458"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With this, we are done setting up the UI.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#adding-the-logic-for-our-quiz"&gt;
  &lt;/a&gt;
  Adding the logic for our quiz
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Navigation&lt;/strong&gt;&lt;br&gt;
We are first going to build the navigation functionality&lt;/p&gt;

&lt;p&gt;Create a state for the current question-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const [currentQuestion, setCurrentQuestion] = useState(0);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create 2 functions to handle Next and Previous-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const handlePrevious = () =&amp;gt; {
  const prevQues = currentQuestion - 1;
  prevQues &amp;gt;= 0 &amp;amp;&amp;amp; setCurrentQuestion(prevQues);
};

const handleNext = () =&amp;gt; {
  const nextQues = currentQuestion + 1;
  nextQues &amp;lt; questions.length &amp;amp;&amp;amp; setCurrentQuestion(nextQues);
};
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Assigning the functions to the respective buttons&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  &amp;lt;button
    onClick={handlePrevious}
    className="w-[49%] py-3 bg-indigo-600 rounded-lg"
  &amp;gt;
    Previous
  &amp;lt;/button&amp;gt;
  &amp;lt;button
    onClick={handleNext}
    className="w-[49%] py-3 bg-indigo-600 rounded-lg"
  &amp;gt;
    Next
  &amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Remove the hardcoded values for the question-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div className="flex flex-col items-start w-full"&amp;gt;
  &amp;lt;h4 className="mt-10 text-xl text-white/60"&amp;gt;
    Question {currentQuestion + 1} of {questions.length}
  &amp;lt;/h4&amp;gt;
  &amp;lt;div className="mt-4 text-2xl text-white"&amp;gt;
    {questions[currentQuestion].question}
  &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Map the answers for the current question instead of the first question-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;questions[currentQuestion].answerOptions.map
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we can easily move through the questions 🎉&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.loom.com/share/f058f666aacd457ba4c00a432b040e89"&gt;https://www.loom.com/share/f058f666aacd457ba4c00a432b040e89&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ability to select options&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Create a state to hold all the selected answers-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const [selectedOptions, setSelectedOptions] = useState([]);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We will now make a function to set the selected option-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const handleAnswerOption = (answer) =&amp;gt; {
  setSelectedOptions([
    (selectedOptions[currentQuestion] = { answerByUser: answer }),
  ]);
  setSelectedOptions([...selectedOptions]);
};
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, we need to trigger in onClick of the option and check the radio button-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{questions[currentQuestion].answerOptions.map((answer, index) =&amp;gt; (
    &amp;lt;div
      key={index}
      className="flex items-center w-full py-4 pl-5 m-2 ml-0 space-x-2 border-2 cursor-pointer border-white/10 rounded-xl bg-white/5"
      onClick={(e) =&amp;gt; handleAnswerOption(answer.answer)}
    &amp;gt;
      &amp;lt;input
        type="radio"
        name={answer.answer}
        value={answer.answer}
        onChange={(e) =&amp;gt; handleAnswerOption(answer.answer)}
        checked={
          answer.answer === selectedOptions[currentQuestion]?.answerByUser
        }
        className="w-6 h-6 bg-black"
      /&amp;gt;
      &amp;lt;p className="ml-6 text-white"&amp;gt;{answer.answer}&amp;lt;/p&amp;gt;
    &amp;lt;/div&amp;gt;
  ));
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now if you select an option then it will be stored as an object in the &lt;code&gt;selectedOptions&lt;/code&gt; state. To check this let's console.log selectedOptions in handleAnswerOption-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const handleAnswerOption = (answer) =&amp;gt; {
  setSelectedOptions([
    (selectedOptions[currentQuestion] = { answerByUser: answer }),
  ]);
  setSelectedOptions([...selectedOptions]);
  console.log(selectedOptions);
};
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After clicking the options, it will show an array of options selected like this-&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uJlbYbaH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636264210489/B9jezuvP8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uJlbYbaH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636264210489/B9jezuvP8.png" alt="image.png" width="803" height="235"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Calculating and showing the score&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Make 2 states, one to store the score and the other to see if we need to show the score or not-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const [score, setScore] = useState(0);
const [showScore, setShowScore] = useState(false);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we need to create a new function that calculates the score based on the answers-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const handleSubmitButton = () =&amp;gt; {
  let newScore = 0;
  for (let i = 0; i &amp;lt; questions.length; i++) {
    questions[i].answerOptions.map(
      (answer) =&amp;gt;
        answer.isCorrect &amp;amp;&amp;amp;
        answer.answer === selectedOptions[i]?.answerByUser &amp;amp;&amp;amp;
        (newScore += 1)
    );
  }
  setScore(newScore);
  setShowScore(true);
};
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Show submit button instead of next on last question&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In the last question, we will need to show submit instead of next and run the &lt;code&gt;handleSubmitButton&lt;/code&gt; function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;button
  onClick={
    currentQuestion + 1 === questions.length ? handleSubmitButton : handleNext
  }
  className="w-[49%] py-3 bg-indigo-600 rounded-lg"
&amp;gt;
  {currentQuestion + 1 === questions.length ? "Submit" : "Next"}
&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now if we submit then nothing really happens, so after we submit we should be able to see a screen like this-&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JYASoDBI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636265244246/2muPcZCmA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JYASoDBI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636265244246/2muPcZCmA.png" alt="image.png" width="880" height="457"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To do this we are going to render the page based on showScore's value like this-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{showScore ? (
    &amp;lt;h1 className="text-3xl font-semibold text-center text-white"&amp;gt;
      You scored {score} out of {questions.length}
    &amp;lt;/h1&amp;gt;
  ) : (
    &amp;lt;&amp;gt;
      &amp;lt;div className="flex flex-col items-start w-full"&amp;gt;
        &amp;lt;h4 className="mt-10 text-xl text-white/60"&amp;gt;
          Question {currentQuestion + 1} of {questions.length}
        &amp;lt;/h4&amp;gt;
        &amp;lt;div className="mt-4 text-2xl text-white"&amp;gt;
          {questions[currentQuestion].question}
        &amp;lt;/div&amp;gt;
      &amp;lt;/div&amp;gt;
      &amp;lt;div className="flex flex-col w-full"&amp;gt;
        {questions[currentQuestion].answerOptions.map((answer, index) =&amp;gt; (
          &amp;lt;div
            key={index}
            className="flex items-center w-full py-4 pl-5 m-2 ml-0 space-x-2 border-2 cursor-pointer border-white/10 rounded-xl bg-white/5"
            onClick={(e) =&amp;gt; handleAnswerOption(answer.answer)}
          &amp;gt;
            &amp;lt;input
              type="radio"
              name={answer.answer}
              value={answer.answer}
              checked={
                answer.answer === selectedOptions[currentQuestion]?.answerByUser
              }
              onChange={(e) =&amp;gt; handleAnswerOption(answer.answer)}
              className="w-6 h-6 bg-black"
            /&amp;gt;
            &amp;lt;p className="ml-6 text-white"&amp;gt;{answer.answer}&amp;lt;/p&amp;gt;
          &amp;lt;/div&amp;gt;
        ))}
      &amp;lt;/div&amp;gt;
      &amp;lt;div className="flex justify-between w-full mt-4 text-white"&amp;gt;
        &amp;lt;button
          onClick={handlePrevious}
          className="w-[49%] py-3 bg-indigo-600 rounded-lg"
        &amp;gt;
          Previous
        &amp;lt;/button&amp;gt;
        &amp;lt;button
          onClick={
            currentQuestion + 1 === questions.length
              ? handleSubmitButton
              : handleNext
          }
          className="w-[49%] py-3 bg-indigo-600 rounded-lg"
        &amp;gt;
          {currentQuestion + 1 === questions.length ? "Submit" : "Next"}
        &amp;lt;/button&amp;gt;
      &amp;lt;/div&amp;gt;
    &amp;lt;/&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now our app is working completely fine 🥳&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.loom.com/share/057cf700f0a24f22ba1f3528f8f9e585"&gt;https://www.loom.com/share/057cf700f0a24f22ba1f3528f8f9e585&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#giveaway"&gt;
  &lt;/a&gt;
  Giveaway
&lt;/h3&gt;

&lt;p&gt;The winner gets the  &lt;a href="https://www.jamesqquick.com/courses/react-and-serverless-fullstack-developmnent"&gt;React and ServerLess Course&lt;/a&gt;  course by James Q Quick&lt;/p&gt;

&lt;p&gt;To participate in this giveaway&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Make this quiz app better &lt;/li&gt;
&lt;li&gt;Share it on your social media with the hashtag- &lt;code&gt;next-quiz-challenge&lt;/code&gt; and don't forget to tag me :)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Important Dates&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;18th November 2021: Submit your projects before 18th November 12 PM IST.&lt;/li&gt;
&lt;li&gt;20th November 2021: The winner will be announced on my social media.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Few features you can add-&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Leaderboard&lt;/li&gt;
&lt;li&gt;Show correct and incorrect answers&lt;/li&gt;
&lt;li&gt;Timer&lt;/li&gt;
&lt;li&gt;Improve UI&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#useful-links"&gt;
  &lt;/a&gt;
  Useful links-
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/avneesh0612/quiz-app"&gt;GitHub repository&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://quiz-challenge.vercel.app/"&gt;Demo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://avneesh-links.vercel.app/"&gt;All socials&lt;/a&gt;&lt;/p&gt;

</description>
      <category>nextjs</category>
      <category>javascript</category>
      <category>tailwindcss</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Trabalhando no exterior: da vaga ao salário</title>
      <author>Pablo Hildo</author>
      <pubDate>Sun, 07 Nov 2021 15:20:56 +0000</pubDate>
      <link>https://dev.to/pablohildo/trabalhando-no-exterior-da-vaga-ao-salario-27b8</link>
      <guid>https://dev.to/pablohildo/trabalhando-no-exterior-da-vaga-ao-salario-27b8</guid>
      <description>&lt;p&gt;Em maio de 2021 eu recebi minha primeira proposta para trabalhar no exterior; para algumas pessoas, como eu, isso é um dos principais objetivos da carreira, se aprofundando ainda mais com a situação atual do Brasil no geral e no mercado de trabalho de desenvolvimento de software.&lt;/p&gt;

&lt;p&gt;Sendo uma pessoa extremamente ansiosa e com certa necessidade de manter controle sobre o que é possível, imediatamente comecei a buscar conteúdo sobre todas as etapas que precisaria realizar para fazer o que já tinha certeza que seria um trabalho extremamente burocrático: receber dinheiro do exterior seguindo todos detalhes legais com o mínimo de estresse possível. &lt;/p&gt;

&lt;p&gt;Obter essas informações foi, honestamente, muito difícil. Tudo era extremamente disperso, boa parte do conteúdo estava desatualizado, algumas threads enormes acabavam em discussões pessoais entre os membros sem apresentar resoluções. Felizmente, tive pessoas que precisaram passar pelo mesmo processo para compartilhar erros e acertos. &lt;/p&gt;

&lt;p&gt;Com isso em mente, resolvi escrever um compilado de tudo que aprendi nesse período. Esse é &lt;em&gt;meu&lt;/em&gt; guia definitivo sobre trabalho no exterior, baseado em &lt;em&gt;minhas&lt;/em&gt; experiências. Pessoas diferentes podem ter interesses e experiências diferentes, tudo que escrevo aqui é de meu ponto de vista. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#vaga"&gt;
  &lt;/a&gt;
  Vaga
&lt;/h2&gt;

&lt;p&gt;Essa é a parte que tenho menos experiência própria para compartilhar. No meu caso, meu amigo &lt;a class="mentioned-user" href="https://dev.to/celsobonutti"&gt;@celsobonutti&lt;/a&gt;
 já estava trabalhando no exterior em uma empresa que gosta muito. Apenas apliquei para a mesma. Mas tenho observado de longe e acho que há um pouco a compartilhar.&lt;br&gt;
Vale bastante a pena observar os sites relacionados a tecnologias específicas que te interessam. Para vagas de programação funcional e especificamente de Elixir, gosto de:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://functional.works-hub.com/"&gt;Functional Works&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://elixir-radar.com/jobs"&gt;Elixir Radar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://elixirjobs.net/"&gt;Elixir Jobs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Mas também é uma boa abordagem observar sites mais gerais, como o &lt;a href="https://remoteok.com/"&gt;Remote OK&lt;/a&gt; ou sites de contextos específicos (mas não relacionados a uma tecnologia em especial), como o &lt;a href="https://angel.co/jobs"&gt;AngelList&lt;/a&gt;, que é focado em vagas de startups.&lt;/p&gt;

&lt;p&gt;Os pontos mais importantes para observar são fuso horário e região. Algumas empresas contratam apenas em países específicos, seja por interesse destas ou por limitações de seus modelos de contratação; outras priorizam fusos horários que gerem uma interseção considerável entre seus horários e os da maioria dos funcionários. &lt;strong&gt;Ainda assim, pode valer a pena entrar em contato mesmo não cumprindo esses requisitos&lt;/strong&gt;. A empresa que trabalho, por exemplo, considera ideal uma distância de -3/+3 horas do fuso CET, mas o Brasil está a -4 horas. Nem tudo está escrito em pedra, flexibilidade pode ser possível&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pf-ou-pj"&gt;
  &lt;/a&gt;
  PF ou PJ?
&lt;/h2&gt;

&lt;p&gt;Trabalhando como PF, você é isento de imposto de renda quando ganha até R$ 28.559,70 anual. A partir desse valor, a declaração é obrigatória. Daí, vale a pena realizar uma simulação no &lt;a href="http://www26.receita.fazenda.gov.br/irpfsimulaliq/private/pages/simuladoraliquota.jsf"&gt;site da Receita Federal&lt;/a&gt; e observar quanto você deve pagar de IRPF. Além disso, se te interessar contribuir com o INSS, o processo deverá ser feito de maneira muito menos prática e baseada em &lt;a href="https://www.contabilizei.com.br/contabilidade-online/inss-autonomo/"&gt;alíquotas de autônomo&lt;/a&gt;, diferentes das de PJ.&lt;/p&gt;

&lt;p&gt;Como PJ, muita gente é MEI. Seguindo as minúcias da legislação, não existe CNAE apropriado para desenvolvedor de software como MEI, visto que essa seria uma atividade intelectualizada. Se ainda assim se interessar em abrir MEI, o valor máximo por ano é R$ 81.000,00, de acordo com a &lt;a href="http://www.planalto.gov.br/ccivil_03/leis/lcp/lcp123.htm"&gt;Lei Complementar 123/06, Art. 18-A, § 1º&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;A partir desse valor não resta muita opção: você pode receber PF, que nas minhas contas quase sempre vai ser mais caro (o Jornal Contábil &lt;a href="https://www.jornalcontabil.com.br/pf-ou-pj-saiba-qual-a-melhor-forma-de-receber-pagamentos-do-exterior-e-declarar-no-ir-2019/"&gt;faz uma comparação interessante&lt;/a&gt;, mas você pode checar por conta própria com os dados de lá); ou como PJ, Microempresa. A partir daí você precisa decidir também sua categoria de empresa, onde geralmente EI - Empreendedor Individual vai ser a melhor opção para nossa categoria. Mesmo assim, vale a pena &lt;a href="https://www.jornalcontabil.com.br/qual-a-diferenca-entre-ei-eireli-ltda-e-s-a/"&gt;checar as outras&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Por fim, o regime de tributação. Definitivamente recomendo o Simples Nacional a menos que não possa se enquadrar por ultrapassar o teto ou algo do tipo. Se interessar, &lt;a href="https://www.jornalcontabil.com.br/regimes-de-tributacao-saiba-quais-sao-e-entenda-como-funciona/"&gt;mais informações&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#contabilidade"&gt;
  &lt;/a&gt;
  Contabilidade
&lt;/h2&gt;

&lt;p&gt;Você definitivamente pode gerir todo processo contábil de sua empresa por conta própria, mas provavelmente vai gerar um estresse muito além do que vale a economia. Usando contabilidade a experiência já não tem sido a menos cansativa possível, então sequer sou capaz de imaginar não usar.&lt;/p&gt;

&lt;p&gt;Você pode contratar um contador em específico, mas caso queira economizar um pouco, existem diversos serviços de contabilidade online mais impessoais e baratos. Os mais populares são a &lt;a href="https://www.contabilizei.com.br/"&gt;Contabilizei&lt;/a&gt; e a &lt;a href="https://agilize.com.br/"&gt;Agilize&lt;/a&gt;, com mais ou menos a mesma faixa de preço. Eu uso a &lt;strong&gt;Agilize&lt;/strong&gt;, que tem suprido bem minhas necessidades. Não gosto muito do atendimento por chat deles, sempre parece gerar conversas longas demais com muita transferência entre profissionais, mas nunca falharam em atender uma demanda. Além disso, contam com cálculo automático de percentual de Pró-labore, reduzindo o valor dos impostos — boa parte do valor total se torna distribuição de lucros — atuando ainda dentro da legalidade.&lt;/p&gt;

&lt;p&gt;Além disso, algumas empresas do tipo oferecem um serviço de Escritório Virtual, que permite a abertura da empresa e recebimento de correspondência em um endereço deles através do pagamento de um valor adicional.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#recebendo-dinheiro"&gt;
  &lt;/a&gt;
  Recebendo dinheiro
&lt;/h2&gt;

&lt;p&gt;Receber dinheiro é a parte mais importante e geralmente mais estressante do processo. Geralmente isso inclui um monte de detalhes inesperados: seu câmbio geralmente não vai ser correspondente ao que está no Google e seus recebimentos vão incluir um &lt;em&gt;spread&lt;/em&gt;, uma taxa cambial (a grosso modo).&lt;/p&gt;

&lt;p&gt;Recebendo por bancos tradicionais, a tendência é que pague um spread muito alto, de 4,5% a 6% em cima do valor na moeda original. Geralmente tem os câmbios mais díspares também.&lt;/p&gt;

&lt;p&gt;Recebendo por plataformas especializadas, o câmbio costuma ser um pouco mais próximo do que você vai ver por aí e o spread costuma ser bem mais baixo. É claro, será necessário ter uma conta bancária da modalidade correspondente para receber o dinheiro no fim (ou seja, conta PJ para PJ e conta PF para PF). Nesse momento, prefiro usar uma destas. Já testei duas:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.remessaonline.com.br/"&gt;Remessa Online&lt;/a&gt;&lt;/strong&gt;, com spread variável entre 1,4% e 1%, dependendo se sua transação é de R$ 10.000,00 a R$70.000,00, respectivamente. Minha experiência não foi muito boa, foi o primeiro serviço que testei e meu dinheiro foi devolvido ao banco do remetente, causando um atraso de quase 20 dias.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href="https://husky.io"&gt;Husky&lt;/a&gt;&lt;/strong&gt;, que se descreve como não tendo spread mas uma taxa fixa de 2%. Parece alta em comparação ao anterior, mas com um cupom de um amigo sua taxa pode virar 1% permanentemente (como uso), e todo mês que recebe dinheiro você ganha um cupom que, caso outra pessoa use e receba também, torna a taxa de sua próxima transação 0%. Esses cupons são super requisitados e eu geralmente posto os meus no Twitter todo mês.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Até então, tenho usado a Husky sem estresse e com ótimo atendimento há quatro meses e recomendo bastante.&lt;/p&gt;

&lt;p&gt;Quando já tiver conta em algum lugar que permita esse recebimento, será necessário gerar seu invoice (uma fatura, quase uma nota fiscal, basicamente). Você pode usar uma plataforma para isso, como a da &lt;a href="https://invoice.husky.io/"&gt;Husky&lt;/a&gt; ou a &lt;a href="https://invoicing.co/"&gt;Invoice Ninja&lt;/a&gt;, mas também pode fazer manualmente ou de acordo com as orientações de sua empresa.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pagando-os-impostos"&gt;
  &lt;/a&gt;
  Pagando os impostos
&lt;/h2&gt;

&lt;p&gt;Depois do invoice enviado e do dinheiro ser recebido em conta, vamos à parte final para poder usar o dinheiro de maneira adequada. Como disse, utilizo a plataforma Agilize para contabilidade; de acordo com orientações deles, simplesmente informo meu invoice de acordo com a opção apropriada na plataforma deles e todos encargos são gerados por volta do dia 07 de cada mês. Isso gera três boletos para que pague, fazendo isso idealmente pela conta PJ: os impostos do Simples; o IRPJ da folha de pagamento; e o INSS da folha de pagamento, sendo os dois últimos relativos ao pró-labore.&lt;/p&gt;

&lt;p&gt;Em meu caso, todos impostos tem vencimento próximo ao dia 20 de cada mês, me dando por volta de duas semanas para pagá-los. A partir desse momento, todo dinheiro restante na minha conta PJ pode ser transferido para minha conta PF.&lt;/p&gt;

&lt;p&gt;Mas isso realmente significa que não posso tocar nesse dinheiro até lá? Segundo meu mais recente contato com a Agilize, tendo uma boa noção de quanto pagarei de impostos em um mês posso deixar em conta o valor necessário para supri-los e posso transferir a maior parte sem preocupações. O único ponto importante é que idealmente todos impostos devem ser pagos pela conta PJ.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#acabou"&gt;
  &lt;/a&gt;
  Acabou!
&lt;/h2&gt;

&lt;p&gt;Foi cansativo, eu sei. Mas juro que é ainda mais cansativo garimpar esse monte de informação na internet. Acho importante ressaltar mais uma vez que isso diz respeito &lt;em&gt;à minha experiência&lt;/em&gt; e pode não se aplicar — ou se aplicar parcialmente — às suas necessidades.&lt;/p&gt;

&lt;p&gt;Diversas das informações que marquei como orientadas por minha contabilidade são um pouco conflitantes com parte do que li na internet, por isso &lt;strong&gt;recomendo que consulte sua contabilidade&lt;/strong&gt;, deixando assim que essa responsabilidade recaia sobre profissionais capacitados para o assunto. Ou seja, cheque se de fato pode só informar invoice, sem gerar nota fiscal manualmente; retirar parte do dinheiro e manter o valor dos impostos na conta; e quaisquer outros pontos que achar pertinente.&lt;/p&gt;




&lt;p&gt;É isso! Se alguma dúvida surgir, sinta-se livre para entrar em contato comigo por aqui ou pelo &lt;a href="https://twitter.com/pablohildo"&gt;Twitter&lt;/a&gt;! Se minhas experiências forem suficientes, com certeza ficarei feliz em ajudar.&lt;/p&gt;

&lt;p&gt;Esse texto pode não estar pronto. Se novas experiências pertinentes surgirem, ele será atualizado :)&lt;/p&gt;

</description>
      <category>braziliandevs</category>
      <category>career</category>
      <category>carreira</category>
    </item>
    <item>
      <title>Flexbox Properties Explained</title>
      <author>SnowBit</author>
      <pubDate>Sun, 07 Nov 2021 14:55:30 +0000</pubDate>
      <link>https://dev.to/snowbit/flexbox-properties-3nd3</link>
      <guid>https://dev.to/snowbit/flexbox-properties-3nd3</guid>
      <description>&lt;p&gt;In the past, CSS layouts have been a huge pain point for web designers. In order to create a responsive layout, multiple divs have to be used throughout the HTML, and then the CSS needs to be modified to accommodate that. Flexbox is a way to create responsive layouts without this problem. Here's an intro on what flexbox is and how it works.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#display"&gt;
  &lt;/a&gt;
  display
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;This states a flex container.&lt;/li&gt;
&lt;li&gt;It enables flex context of all it's children.&lt;/li&gt;
&lt;li&gt;It can be inline or block
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.div&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#flexdirection"&gt;
  &lt;/a&gt;
  flex-direction
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;It defines the direction of flex, items placed in a flex container.&lt;/li&gt;
&lt;li&gt;It is a single-direction layout concept.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.container&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="nl"&gt;flex-direction&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="err"&gt;|&lt;/span&gt; &lt;span class="n"&gt;row-reverse&lt;/span&gt; &lt;span class="err"&gt;|&lt;/span&gt; &lt;span class="n"&gt;column&lt;/span&gt; &lt;span class="err"&gt;|&lt;/span&gt; &lt;span class="n"&gt;column-reverse&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;p&gt;row (default): left to right in ltr; right to left&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;row-reverse: right to left in ltr; left to right&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;column: same as row but top to bottom&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;column-reverse: same as row-reverse but bottom to top&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#flexwrap"&gt;
  &lt;/a&gt;
  flex-wrap
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;By default, items will try to be fit in one line.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.container&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;flex-wrap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;nowrap&lt;/span&gt; &lt;span class="err"&gt;|&lt;/span&gt; &lt;span class="n"&gt;wrap&lt;/span&gt; &lt;span class="err"&gt;|&lt;/span&gt; &lt;span class="n"&gt;wrap-reverse&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;nowrap&lt;/strong&gt; - all flex items will be on one line&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;wrap&lt;/strong&gt; - flex items will wrap onto multiple lines, from top to bottom.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;wrap-reverse&lt;/strong&gt; - flex items will wrap onto multiple lines from bottom to top.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#flexflow"&gt;
  &lt;/a&gt;
  flex-flow
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;It is a shorthand for &lt;strong&gt;flex-wrap&lt;/strong&gt; and &lt;strong&gt;flex-direction&lt;/strong&gt; properties and they together defines the cross axes of the main container
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.container&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;flex-flow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;column&lt;/span&gt; &lt;span class="n"&gt;wrap&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#flexshrink"&gt;
  &lt;/a&gt;
  flex-shrink
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;It defines the ability for flex item to shrink accordingly
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.item&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;flex-shrink&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;/* default 1 */&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Make sure &lt;em&gt;negative numbers are invalid&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#alignself"&gt;
  &lt;/a&gt;
  align-self
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;It allows the default alignment needs to be overridden for a flex item
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.item&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;align-self&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt; &lt;span class="err"&gt;|&lt;/span&gt; &lt;span class="n"&gt;flex-start&lt;/span&gt; &lt;span class="err"&gt;|&lt;/span&gt; &lt;span class="n"&gt;flex-end&lt;/span&gt; &lt;span class="err"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt; &lt;span class="err"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;baseline&lt;/span&gt; &lt;span class="err"&gt;|&lt;/span&gt; &lt;span class="n"&gt;stretch&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#aligncontent"&gt;
  &lt;/a&gt;
  align-content
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;This aligns a flex container’s lines within when there is extra space in the cross-axis.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.container&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;align-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex-start&lt;/span&gt; &lt;span class="err"&gt;|&lt;/span&gt; &lt;span class="n"&gt;flex-end&lt;/span&gt; &lt;span class="err"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt; &lt;span class="err"&gt;|&lt;/span&gt; &lt;span class="n"&gt;space-between&lt;/span&gt; &lt;span class="err"&gt;|&lt;/span&gt; &lt;span class="n"&gt;space-around&lt;/span&gt; &lt;span class="err"&gt;|&lt;/span&gt; &lt;span class="n"&gt;space-evenly&lt;/span&gt; &lt;span class="err"&gt;|&lt;/span&gt; &lt;span class="n"&gt;stretch&lt;/span&gt; &lt;span class="err"&gt;|&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt; &lt;span class="err"&gt;|&lt;/span&gt; &lt;span class="n"&gt;end&lt;/span&gt; &lt;span class="err"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;baseline&lt;/span&gt; &lt;span class="err"&gt;|&lt;/span&gt; &lt;span class="n"&gt;first&lt;/span&gt; &lt;span class="nb"&gt;baseline&lt;/span&gt; &lt;span class="err"&gt;|&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt; &lt;span class="nb"&gt;baseline&lt;/span&gt; &lt;span class="err"&gt;+&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="n"&gt;safe&lt;/span&gt; &lt;span class="err"&gt;|&lt;/span&gt; &lt;span class="n"&gt;unsafe&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#order"&gt;
  &lt;/a&gt;
  order
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.item&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;order&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;/* default is 0 */&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>css</category>
      <category>html</category>
    </item>
    <item>
      <title>How to Update Node.js to the latest version on Ubuntu</title>
      <author>Md. Maruf Sarker</author>
      <pubDate>Sun, 07 Nov 2021 14:51:14 +0000</pubDate>
      <link>https://dev.to/mdmarufsarker/how-to-update-nodejs-to-the-latest-version-on-ubuntu-3md6</link>
      <guid>https://dev.to/mdmarufsarker/how-to-update-nodejs-to-the-latest-version-on-ubuntu-3md6</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bUz7lueP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ujxgme2xgt491sbe257i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bUz7lueP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ujxgme2xgt491sbe257i.png" alt="Nodejs Official Website" width="835" height="498"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-1"&gt;
  &lt;/a&gt;
  Step - 1:
&lt;/h2&gt;

&lt;p&gt;1st of all you need to download the latest version of Nodejs from the official &lt;a href="https://nodejs.org/en/"&gt;Nodejs website&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-2"&gt;
  &lt;/a&gt;
  Step - 2:
&lt;/h2&gt;

&lt;p&gt;Go to the correct path using command line or GUI.&lt;br&gt;
Using Command line&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd Downloads/node-v17.0.1-linux-x64.tar.xz/
tar -xf node-v17.0.1-linux-x64.tar.xz
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Check Current Node version&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;node --version
v14.17.0
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To upgrade&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo n latest
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Check Updated Node version&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;node --version
v17.0.1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RQ0AoT_A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7ovxldoqmjmjihouse2l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RQ0AoT_A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7ovxldoqmjmjihouse2l.png" alt="Nodejs version Updated" width="880" height="170"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you are using graphical interface then go to the destination path. Click right button and select extract here. Open the bin folder.&lt;br&gt;
 &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2d5vmYEu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wqk4xmcl4iwowbvx6uk8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2d5vmYEu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wqk4xmcl4iwowbvx6uk8.png" alt="Directories and files" width="392" height="137"&gt;&lt;/a&gt;&lt;br&gt;
right click and select open in terminal&lt;br&gt;
To upgrade&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo n latest
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Check Updated Node version&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;node --version
v17.0.1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RQ0AoT_A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7ovxldoqmjmjihouse2l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RQ0AoT_A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7ovxldoqmjmjihouse2l.png" alt="Nodejs version Updated" width="880" height="170"&gt;&lt;/a&gt;&lt;br&gt;
Thanks, if you like this article useful then smash the like button. Share it with your friends. Stay Tuned.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#if-you-want-to-learn-more-about-linux-command-line-then-you-watch-my-playlist"&gt;
  &lt;/a&gt;
  If you want to learn more about Linux Command Line then you watch my &lt;a href="https://youtube.com/playlist?list=PLldSzdV-qgykjEEzvw_fYK56F2w-5kfV5"&gt;Playlist&lt;/a&gt;
&lt;/h3&gt;

</description>
      <category>node</category>
      <category>javascript</category>
      <category>npm</category>
      <category>linux</category>
    </item>
    <item>
      <title>Arrow functions in JavaScript. How to easily implement them? </title>
      <author>Amer Sikira</author>
      <pubDate>Sun, 07 Nov 2021 14:39:56 +0000</pubDate>
      <link>https://dev.to/amersikira/arrow-functions-in-javascript-how-to-easily-implement-them-361c</link>
      <guid>https://dev.to/amersikira/arrow-functions-in-javascript-how-to-easily-implement-them-361c</guid>
      <description>&lt;p&gt;&lt;em&gt;This post was originally published on &lt;a href="https://webinuse.com/arrow-functions-in-javascript/"&gt;webinuse.com&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Arrow functions were introduced in ES6, as a way to make code more readable and concise. Regular functions can be overkill for some tasks. Arrow functions have a simple syntax, but they also have some limitations. &lt;/p&gt;

&lt;p&gt;As per &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions"&gt;MDN&lt;/a&gt; there are differences and limitations: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Does not have its own bindings to this or super, and should not be used as methods.&lt;/li&gt;
&lt;li&gt;  Does not have new.target keyword.&lt;/li&gt;
&lt;li&gt;  Not suitable for call, apply and bind methods, which generally rely on establishing a scope.&lt;/li&gt;
&lt;li&gt;  Can not be used as constructors.&lt;/li&gt;
&lt;li&gt;  Can not use yield, within its body.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is the basic syntax for arrow functions:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;func&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;arg2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;arg3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;arg4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;.....,&lt;/span&gt; &lt;span class="nx"&gt;argN&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;expression&lt;/span&gt;

&lt;span class="c1"&gt;//If this arrow function was regular function it would look like this&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;arg2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;arg3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;arg4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;.....,&lt;/span&gt; &lt;span class="nx"&gt;argN&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;expression&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the example above we can see the regular arrow function. But there are some differences, more accurately, there can be some differences.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#arrow-functions-without-arguments"&gt;
  &lt;/a&gt;
  Arrow functions without arguments
&lt;/h4&gt;

&lt;p&gt;If the arrow function has no arguments we just use empty parentheses &lt;code&gt;()&lt;/code&gt;.&lt;br&gt;
&lt;strong&gt;NOTE&lt;/strong&gt; By default arrow function assumes &lt;code&gt;return&lt;/code&gt; statement if we use a one-liner like in the example above, or below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;func&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;expression&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;//this is equal to&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;expression&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#with-one-argument"&gt;
  &lt;/a&gt;
  With one argument
&lt;/h4&gt;

&lt;p&gt;If the arrow function has only one argument, we do not need to use parentheses &lt;code&gt;()&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;func&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;expression&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;//this is equal to &lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;expression&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#with-two-or-more-arguments"&gt;
  &lt;/a&gt;
  With two or more arguments
&lt;/h4&gt;

&lt;p&gt;Sometimes we have more than one or no argument. In that case we use parentheses &lt;code&gt;()&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;func&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;arg2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;arg3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;arg4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;.....,&lt;/span&gt; &lt;span class="nx"&gt;argN&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;expression&lt;/span&gt;

&lt;span class="c1"&gt;//this is equal to&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;arg2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;arg3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;arg4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;.....,&lt;/span&gt; &lt;span class="nx"&gt;argN&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;expression&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#multiline-arrow-function"&gt;
  &lt;/a&gt;
  Multiline arrow function
&lt;/h4&gt;

&lt;p&gt;Maybe we need to do something before we return an expression. That would, probably, mean more than one line of function. In that case, we MUST use curly braces &lt;code&gt;{}&lt;/code&gt;. Also, when we use curly braces we MUST use &lt;code&gt;return&lt;/code&gt; statement because the function does not know what we want to do.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;func&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;//this is equal to&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#when-to-use-arrow-functions"&gt;
  &lt;/a&gt;
  When to use arrow functions?
&lt;/h3&gt;

&lt;p&gt;We can use them whenever we "feel like it". There are no strict rules on when (not) to use them, as long as we are aware of implications. &lt;/p&gt;

&lt;p&gt;Arrow functions are awesome when we want to have smaller and more readable code. Even though that is not always the case, but 90% of situations it is.&lt;/p&gt;

&lt;p&gt;People are using them for example &lt;a href="https://webinuse.com/javascript-arrays-map-method/"&gt;with &lt;code&gt;.map()&lt;/code&gt; method&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;//Output: [4, 8, 12, 16, 20]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Also, we can use them with the ternary operator.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;loggedIn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;welcome&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;login&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the example above if a user is logged in then we show a welcome message, otherwise, we show the login button. Assuming that &lt;code&gt;welcome&lt;/code&gt; and &lt;code&gt;login&lt;/code&gt; are holding such data, respectively.&lt;/p&gt;

&lt;p&gt;If you have any questions or anything you can find me on my &lt;a href="href="&gt;Twitter&lt;/a&gt;, or you can read some of my other articles like &lt;a href="https://webinuse.com/javascript-sort-method-objects/"&gt;JavaScript sort method – part 2&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>The power of problem solving in a team</title>
      <author>Sarah Mottram</author>
      <pubDate>Sun, 07 Nov 2021 14:21:15 +0000</pubDate>
      <link>https://dev.to/smelbows/the-power-of-problem-solving-in-a-team-3848</link>
      <guid>https://dev.to/smelbows/the-power-of-problem-solving-in-a-team-3848</guid>
      <description>&lt;p&gt;&lt;strong&gt;I’m a problem solver. You’re a problem solver. We often work in teams of multiple problem solvers. But are we all the same?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Well, you’ve guessed it; clearly I’m suggesting the answer is “No”. No need to read any further, good job everyone, you can all go home!&lt;/p&gt;

&lt;p&gt;But, in case you’re interested, let’s dive a bit deeper into what it really means to be a problem solver, since so many companies add it to their list of ‘desirable qualities’, and so many of us describe ourselves as ‘a problem solver’ when we’re adding to our CVs.&lt;/p&gt;

&lt;p&gt;The term ‘problem solving’ really focuses on the end goal, or on having achieved it, but what I’m interested in is &lt;em&gt;how&lt;/em&gt; we all solve these problems, on how &lt;em&gt;differently&lt;/em&gt; we solve them, and what that means when problem solving with others in a team.&lt;/p&gt;

&lt;p&gt;I am currently studying on a 24 week intensive front-end development bootcamp with &lt;a href="https://www.technigo.io/"&gt;Technigo&lt;/a&gt; (who are amazing, btw), and throughout the course we get the chance to try out our pair and mob-programming skills. I knew that this bootcamp was going to be an intense experience, but I had thought that the real learning for me would be around the new programming skills. I’ve worked in teams before, I’ve lead teams before. This part, I thought, would be nothing new. How wrong I was!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I’m a problem solver&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Let’s start with how I problem solve myself. I’m in familiar territory here, I’ve known myself a long time.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;“Just type something, &lt;em&gt;anything&lt;/em&gt;!!”&lt;/strong&gt; Is the advice I get one day, while pairing.&lt;/p&gt;

&lt;p&gt;But no! I can’t type &lt;em&gt;anything&lt;/em&gt;. When I encounter a problem, I like to try to break it down. I deconstruct it. I analyse it. I like to figure out what is happening, what I think &lt;em&gt;should&lt;/em&gt; be happening, and then I like to join the dots between these two with knowledge. So I think, I read, I go away, think some more, research (let’s be transparent; I Google stuff). Only when I feel like I’ve understood the problem, can I feel secure in fixing it. This is methodical. This is slow. But I like to think that it’s worth the time, because when I encounter a similar problem further down the line (which I inevitably will) I should have the depth of knowledge to be able to solve it instantly.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You’re a problem solver&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Working on group Technigo projects (it’s the &lt;a href="https://tiger-weather-app.netlify.app/"&gt;Weather App&lt;/a&gt; that really sticks with me) has given me a much deeper insight into the ways in which other people might problem solve, and how those differences can actually benefit teamwork rather than hinder it. We were five different problem solvers on that team, but it’s one amazing team member in particular that I’m thinking about now, (she probably knows who she is!) because her problem solving methods are so completely the opposite of mine! She &lt;em&gt;does&lt;/em&gt; type something, she &lt;em&gt;does&lt;/em&gt; type &lt;strong&gt;&lt;em&gt;anything&lt;/em&gt;&lt;/strong&gt;! She still researches (Googles) - we all do - but she looks something up, adds it in, sees what happens. Doesn’t work? Tries something else. Still doesn’t work? No problem, tries something else again. Sometimes, something &lt;em&gt;does&lt;/em&gt; work, and we all cheer and high five because our problem is fixed. But, of course, her problem solving (I think) doesn’t actually stop once the problem is fixed. Now (or maybe later) she’ll have a look at that little bit of code that works but none of us understand, and understand it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;We’re a team of problem solvers&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This was difficult for me. Everything went so fast, so how could I analyse what was on the screen before it was gone again, replaced with something new? But it was amazing too, because sometimes the advice is right, and I really do just need to try something, &lt;em&gt;anything&lt;/em&gt;, so that I have more information to go on. For us, the way to problem solve together was to take it in turns. I would let the code come and go on the screen without trying to figure it all out, but try to see what was happening at each change and find the answer within that. Later, when there was time, I’d go away and do my reading so that I could understand the problem in depth. In some ways I think it’s slightly harder for ‘trial-and-error’ problem solvers to work around my more methodical approach, because it involves waiting while I’m analyzing to see what I come back with. But it’s possible, and when you know your team well, very doable.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;So here is the point:&lt;/strong&gt; Yes, it’s fascinating to me that not everyone solves problems in the same way. But being aware of it also has hugely positive impacts on teamwork. There are many ways to problem solve, and when you’re working on a team, it’s not about how an individual solves a problem, it’s about how the whole team comes together, uses the various different problem solving skills of everybody, and makes sure that &lt;em&gt;everyone gets heard&lt;/em&gt; (that’s so important it should probably be a whole other blog post). And when you come out victorious on the other side, it’s not because one way of problem solving was superior to another, it’s because you took the time to understand each other, what you all can bring, and how to use those problem solving skills together.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>Coroutine Vs Subroutine [ VBA Programming ]</title>
      <author>Bek Brace</author>
      <pubDate>Sun, 07 Nov 2021 14:07:10 +0000</pubDate>
      <link>https://dev.to/bekbrace/coroutine-vs-subroutine-526b</link>
      <guid>https://dev.to/bekbrace/coroutine-vs-subroutine-526b</guid>
      <description>&lt;p&gt;While I was preparing a new tutorial - intro to VBA programming with a project - I stumbled upon the concept of subroutine and how can I explain it, in my mind a subroutine is a function .. and I thought to keep it simple .. but again, this is an oversimplification and not simplification .. so here it is ..&lt;/p&gt;

&lt;p&gt;A subroutine and a function are essentially the same thing, with one difference: A function returns some sort of value (usually via the stack or CPU register), while a subroutine does not. Whether subroutine or function, it is a block of executable code, having exactly one point of entry. A co-routine is also a block of executable code, and, just like a subroutine, it has one point of entry. However, it also has one or more points of re-entry.&lt;/p&gt;

&lt;p&gt;Before getting to threads, let's review: A computer program, also known as a process, will generally have its allocation of memory organized into a code space, a heap, and a stack. The code space stores the one or more blocks of its executable code. The stack stores the parameters, automatic variables, and return addresses of subroutines, functions, and co-routines (and other things too). The heap is the wide-open memory space available to the process for whatever its purposes. In addition to these memory spaces are the CPU registers, each of which stores a set of bits. These bits could be an integer value, a memory address, a bunch of status flags, or whatever. Most programmers don't need to know much about them, but they're there and essential to the operation of the CPU. Probably the ones worth knowing about are the Program Counter, Stack Pointer, and Status Register, but we're not going to get into them here.&lt;/p&gt;

&lt;p&gt;A thread is a single logical flow of execution. In a primitive computing system, there is only one thread available to a process. In modern computing systems, a process is composed of one or more threads. Each thread gets its own stack and set of CPU registers (which is usually physically impossible, but made virtual logically - a detail we'll skip on here). However, while each thread of a process has its own stack and registers, they will all share the same heap and code space. They are also (presumably) running simultaneously; something that can truly happen in a multi-core CPU. So two or more parts of your program can run at the same time.&lt;/p&gt;

&lt;p&gt;Back to the co-routine: As mentioned before, it has one or more points of re-entry. A point of re-entry means that the co-routine can allow for some other block of code outside of itself to have some execution time, and then at some future time have execution time resume back within its own block of code. This implies that the parameters and automatic variables of the co-routine are preserved (and restored if need be) whenever execution is yielded to an external block of code and then returns to that of the co-routine. A co-routine is something that is not directly implemented in every programming language, although it is common to many assembly languages. In any case, it is possible to implement a co-routine in a conceptual way. There is a good article on co-routines at &lt;a href="http://en.wikipedia.org/wiki/Coroutine"&gt;http://en.wikipedia.org/wiki/Coroutine&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It seems to me there are two principal motivations in implementing a co-routine design pattern: (1) overcoming the limitations of a single-threaded process; and (2) hoping to achieve better computational performance. Motivation (1) is clear to understand when the process must address many things at once where a single thread is a must. Motivation (2) may not be as clear to understand, since that is tied to a lot of particulars about the system hardware, compiler design, and language design. I can only imagine that computational effort might be reduced by cutting-back on stack manipulations, avoidance of redoing initializations in a subroutine, or relieving some of the overhead of maintaining a multi-threaded process.&lt;/p&gt;

&lt;p&gt;Hope this useful in any way, and I'll catch you on the other side of the Sub ;)&lt;/p&gt;

</description>
      <category>vba</category>
      <category>programming</category>
      <category>functional</category>
      <category>tutorial</category>
    </item>
  </channel>
</rss>
