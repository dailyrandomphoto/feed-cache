<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Amazing Websites to learn something new every day!  A threadüßµüëá</title>
      <author>Manitej ‚ö°</author>
      <pubDate>Fri, 25 Jun 2021 16:33:34 +0000</pubDate>
      <link>https://dev.to/manitej/amazing-websites-to-learn-something-new-every-day-a-thread-nf0</link>
      <guid>https://dev.to/manitej/amazing-websites-to-learn-something-new-every-day-a-thread-nf0</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;this article is generated using (give a ‚≠ê) &lt;br&gt;
 &lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Manitej66"&gt;
        Manitej66
      &lt;/a&gt; / &lt;a href="https://github.com/Manitej66/twlog"&gt;
        twlog
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      This is a web app that converts Twitter threads into blogs in a single click üî•
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
twlog&lt;/h1&gt;
&lt;p&gt;This is a webapp which convert twitter threads into dev.to blogs in a single click&lt;/p&gt;
&lt;h2&gt;
Acknowledgements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/FeedHive/twitter-api-client"&gt;twitter api client&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/Manitej66/twlog"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
 &lt;br&gt;
 &lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--hhbwuBL---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1399989731828506628/VBXU3S6r_normal.jpg" alt="Swastika‚ú® profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Swastika‚ú®
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/swastika0015"&gt;@swastika0015&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Amazing Websites to learn something new every day!&lt;br&gt;&lt;br&gt;A threadüßµüëá
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      15:58 PM - 25 Jun 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1408454519147560962" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1408454519147560962" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1408454519147560962" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;



&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--hhbwuBL---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1399989731828506628/VBXU3S6r_normal.jpg" alt="Swastika‚ú® profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Swastika‚ú®
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/swastika0015"&gt;@swastika0015&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      ‚è©Read Something Great&lt;br&gt;Dishes out links to timeless articles on the internet. It serves them 5 at a time. Smash the "Change My Reads" button, and it'll serve you 5 more.&lt;br&gt;&lt;br&gt;&lt;a href="https://t.co/0lYINGtjSN"&gt;readsomethinggreat.com&lt;/a&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      15:58 PM - 25 Jun 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1408454521454399491" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1408454521454399491" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1408454521454399491" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;



&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--hhbwuBL---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1399989731828506628/VBXU3S6r_normal.jpg" alt="Swastika‚ú® profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Swastika‚ú®
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/swastika0015"&gt;@swastika0015&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      ‚è©Ted-Ed&lt;br&gt;TED-Ed is TED‚Äôs youth and education initiative. Find lessons worth sharing.&lt;br&gt;&lt;a href="https://t.co/JMJlxxnek1"&gt;ed.ted.com&lt;/a&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      15:58 PM - 25 Jun 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1408454523761291274" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1408454523761291274" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1408454523761291274" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;



&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--hhbwuBL---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1399989731828506628/VBXU3S6r_normal.jpg" alt="Swastika‚ú® profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Swastika‚ú®
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/swastika0015"&gt;@swastika0015&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      ‚è©Zidbits&lt;br&gt;Science, Wierd, History, Fun Facts, News. This site has it all.&lt;br&gt;&lt;a href="https://t.co/AanHlXKuzO"&gt;zidbits.com&lt;/a&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      15:58 PM - 25 Jun 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1408454525799702530" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1408454525799702530" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1408454525799702530" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;



&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--hhbwuBL---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1399989731828506628/VBXU3S6r_normal.jpg" alt="Swastika‚ú® profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Swastika‚ú®
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/swastika0015"&gt;@swastika0015&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      ‚è©Lifehacker&lt;br&gt;A weblog about life hacks and software. Lifehacker is the ultimate authority on optimizing every aspect of your life. Do everything better.&lt;br&gt;&lt;a href="https://t.co/J1TYzNJO0U"&gt;lifehacker.com&lt;/a&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      15:58 PM - 25 Jun 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1408454528098201603" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1408454528098201603" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1408454528098201603" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;



&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--hhbwuBL---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1399989731828506628/VBXU3S6r_normal.jpg" alt="Swastika‚ú® profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Swastika‚ú®
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/swastika0015"&gt;@swastika0015&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      ‚è©Alison&lt;br&gt;Provides free online courses to upskill yourself. &lt;br&gt;&lt;a href="https://t.co/m3qov4xsO0"&gt;alison.com&lt;/a&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      15:58 PM - 25 Jun 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1408454530409254914" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1408454530409254914" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1408454530409254914" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;



&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--hhbwuBL---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1399989731828506628/VBXU3S6r_normal.jpg" alt="Swastika‚ú® profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Swastika‚ú®
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/swastika0015"&gt;@swastika0015&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      ‚è©CoolTools- Best Magazine articles ever&lt;br&gt;Find some of the best magazine pieces from the past, all in one place.&lt;br&gt;&lt;br&gt;&lt;a href="https://t.co/lmIIPPWpI6"&gt;kk.org/cooltools/best‚Ä¶&lt;/a&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      15:58 PM - 25 Jun 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1408454533278101511" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1408454533278101511" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1408454533278101511" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;br&gt;
&lt;/blockquote&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>javascript</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>üé¨Login &amp; Registration Form Using HTML &amp; CSS &amp; JS‚ú®</title>
      <author>Robson Muniz</author>
      <pubDate>Fri, 25 Jun 2021 16:27:52 +0000</pubDate>
      <link>https://dev.to/robsonmuniz16/login-registration-form-using-html-css-js-5e1j</link>
      <guid>https://dev.to/robsonmuniz16/login-registration-form-using-html-css-js-5e1j</guid>
      <description>&lt;p&gt;In today's episode, we're going to make an awesome &lt;strong&gt;login and registration form&lt;/strong&gt; with  sliding animation just by using HTML and CSS and little bit of JavaScript.&lt;/p&gt;




&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/I5_T547tHf0"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;üèÜ Recommended Videos üèÜ&lt;/strong&gt;&lt;br&gt;
üé¨Neumorphism Login Form | HTML &amp;amp; CSS &lt;br&gt;
‚û§&lt;a href="https://youtu.be/QWh0S-3D7uY"&gt;https://youtu.be/QWh0S-3D7uY&lt;/a&gt;&lt;br&gt;
üé¨Animated Sidebar Menu with HTML &amp;amp; CSS &lt;br&gt;
‚û§ Watch: &lt;a href="https://youtu.be/QPZrQ_xPVs4"&gt;https://youtu.be/QPZrQ_xPVs4&lt;/a&gt; &lt;br&gt;
üé¨Amazing Social Media Buttons Hover Effects | HTML &amp;amp; CSS &lt;br&gt;
‚û§ &lt;a href="https://youtu.be/P9pi4hq7BBA"&gt;https://youtu.be/P9pi4hq7BBA&lt;/a&gt; &lt;br&gt;
üé¨Animated Login Form | HTML, CSS &amp;amp; JavaScript &lt;br&gt;
‚û§ Watch: &lt;a href="https://youtu.be/ogNwc45qHKo"&gt;https://youtu.be/ogNwc45qHKo&lt;/a&gt; &lt;br&gt;
üé¨Slider Sign In / Sign Up Form | HTML CSS Vanilla JS &lt;br&gt;
‚û§ Watch: &lt;a href="https://youtu.be/Wz5THk0-Y1s"&gt;https://youtu.be/Wz5THk0-Y1s&lt;/a&gt; &lt;/p&gt;




&lt;p&gt;üõ¥ Follow me on: &lt;br&gt;
üëâ&lt;a href="https://www.facebook.com/WebdevMadeEasy"&gt;https://www.facebook.com/WebdevMadeEasy&lt;/a&gt;&lt;/p&gt;




</description>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
      <category>login</category>
    </item>
    <item>
      <title>The Real Cost of UI Components Revisited</title>
      <author>Ryan Carniato</author>
      <pubDate>Fri, 25 Jun 2021 16:21:18 +0000</pubDate>
      <link>https://dev.to/this-is-learning/the-real-cost-of-ui-components-revisited-4d23</link>
      <guid>https://dev.to/this-is-learning/the-real-cost-of-ui-components-revisited-4d23</guid>
      <description>&lt;p&gt;With my focus recently going back to look at optimization for the Solid 1.0 release, I thought I'd revisit my &lt;a href="https://betterprogramming.pub/the-real-cost-of-ui-components-6d2da4aba205?source=friends_link&amp;amp;sk=a412aa18825c8424870d72a556db2169"&gt;The Real Cost of UI Components&lt;/a&gt; article. When I wrote the original article I wasn't really sure what I'd find and I was a bit cautious not wanting to offend anyone. I let every framework have their showcase at level 0 and then just built on that.&lt;/p&gt;

&lt;p&gt;The shortcoming of not equalizing the implementations is I didn't actually show the tradeoffs of the Virtual DOM and I completely glazed over the overhead of Web Components. So I wanted to look at this again with that in mind.&lt;/p&gt;

&lt;p&gt;Why now? I recently have been benchmarking &lt;a href="https://stenciljs.com/"&gt;Stencil&lt;/a&gt; and the new &lt;a href="https://lit.dev/"&gt;Lit&lt;/a&gt;. And it was sort of bugging me since neither of these support Native Built-ins. This is a problem since with a benchmarks using &lt;code&gt;HTMLTableElements&lt;/code&gt; meant they can't just insert random Custom Elements. So these implementations were all done in a single large Component. I wanted to see if I could better approximate the way these scale.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Mandatory Disclaimer: I wrote Solid, but I did not create this benchmark. Take it for what it is. I hope that your takeaway is more than Solid is fast. Different technologies scale differently and that should be where the focus is.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#the-setup"&gt;
  &lt;/a&gt;
  The Setup
&lt;/h2&gt;

&lt;p&gt;The test is once again a modification of &lt;a href="https://github.com/krausest/js-framework-benchmark"&gt;JS Frameworks Benchmark&lt;/a&gt;. This is our TodoMVC app on steroids. It will blast our implementations with some absurd data but we will quickly be able to see any bottlenecks.&lt;/p&gt;

&lt;p&gt;The important thing to note is given the limitation of around Native built-ins we will be using hand optimized Web Component solutions. This means better performance than you'd typically find for Lit. So things are slightly skewed in its favor but it's the best I can do.&lt;/p&gt;

&lt;p&gt;When I first started I did the tests on the new M1 Macbook Air but given the issues with applying CPU throttling(known issue) I also ran these on a Intel i7 Macbook Pro. This muddies the narrative a little but it can help view the difference between running on the latest greatest and on a slower device(via CPU throttling).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-scenarios"&gt;
  &lt;/a&gt;
  The Scenarios
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Level 1:&lt;/strong&gt; The whole benchmark is implemented in a single Component. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Level 2:&lt;/strong&gt; A Component is made per row and per button.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Level 3:&lt;/strong&gt; Each row is further subdivided into Cell Components for each of the four table columns and the remove Icon is also made into a Component.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#the-contenders"&gt;
  &lt;/a&gt;
  The Contenders
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;1. &lt;a href="https://infernojs.org/"&gt;Inferno&lt;/a&gt;:&lt;/strong&gt; The one of the quickest Virtual DOM library around. While different than React, it boasts React compat and will serve as our proxy for VDOM libraries in this test. Source [&lt;a href="https://github.com/ryansolid/js-framework-benchmark/tree/components-2/frameworks/keyed/inferno-1"&gt;1&lt;/a&gt;, &lt;a href="https://github.com/ryansolid/js-framework-benchmark/tree/components-2/frameworks/keyed/inferno-2"&gt;2&lt;/a&gt;, &lt;a href="https://github.com/ryansolid/js-framework-benchmark/tree/components-2/frameworks/keyed/inferno-3"&gt;3&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. &lt;a href="https://lit.dev/"&gt;Lit&lt;/a&gt;:&lt;/strong&gt; Google-backed Tagged Template render library. Given the lack of support for Native Built-ins I'm using optimized hand written Custom Element wrappers. I also kept explicit event delegation in which is an advantage compared to every non-vanilla implementation. Source [&lt;a href="https://github.com/ryansolid/js-framework-benchmark/tree/components-2/frameworks/keyed/lit-1"&gt;1&lt;/a&gt;, &lt;a href="https://github.com/ryansolid/js-framework-benchmark/tree/components-2/frameworks/keyed/lit-2"&gt;2&lt;/a&gt;, &lt;a href="https://github.com/ryansolid/js-framework-benchmark/tree/components-2/frameworks/keyed/lit-3"&gt;3&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. &lt;a href="https://github.com/solidjs/solid"&gt;Solid&lt;/a&gt;:&lt;/strong&gt; Fastest runtime reactive library. It's Components are little more than factory functions so this should serve as a good comparison. Source [&lt;a href="https://github.com/ryansolid/js-framework-benchmark/tree/components-2/frameworks/keyed/solid-1"&gt;1&lt;/a&gt;, &lt;a href="https://github.com/ryansolid/js-framework-benchmark/tree/components-2/frameworks/keyed/solid-2"&gt;2&lt;/a&gt;, &lt;a href="https://github.com/ryansolid/js-framework-benchmark/tree/components-2/frameworks/keyed/solid-3"&gt;3&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. &lt;a href="https://svelte.dev/"&gt;Svelte&lt;/a&gt;:&lt;/strong&gt; Generates the smallest bundles with clever use of its compiler. It has its own component system as well. Source [&lt;a href="https://github.com/ryansolid/js-framework-benchmark/tree/components-2/frameworks/keyed/svelte-1"&gt;1&lt;/a&gt;, &lt;a href="https://github.com/ryansolid/js-framework-benchmark/tree/components-2/frameworks/keyed/svelte-2"&gt;2&lt;/a&gt;, &lt;a href="https://github.com/ryansolid/js-framework-benchmark/tree/components-2/frameworks/keyed/svelte-3"&gt;3&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. vanillajs:&lt;/strong&gt; Not a framework just the core implementation. I take the standard implementation and then layer on Web Components as we level up. [&lt;a href="https://github.com/ryansolid/js-framework-benchmark/tree/components-2/frameworks/keyed/vanillajs-1"&gt;1&lt;/a&gt;, &lt;a href="https://github.com/ryansolid/js-framework-benchmark/tree/components-2/frameworks/keyed/vanillajs-2"&gt;2&lt;/a&gt;, &lt;a href="https://github.com/ryansolid/js-framework-benchmark/tree/components-2/frameworks/keyed/vanillajs-3"&gt;3&lt;/a&gt;]&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#benchmarking"&gt;
  &lt;/a&gt;
  Benchmarking
&lt;/h2&gt;

&lt;p&gt;Instead of focusing a framework at a time I think it will be easier to just look at this in terms of levels. Relative positioning speaks a lot more to the trends. Since our baseline is moving with us by using Vanilla JS with Web Components, even though libraries are getting slower as we add more components by how much differs.&lt;/p&gt;

&lt;p&gt;We are going to make heavy use of looking at the averaged geometric mean(the bottom row) to holistically look at how these libraries compare. It is important to look at the individual results for more information but this gives us an easy way to determine relative positioning.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#level-1-all-in-one"&gt;
  &lt;/a&gt;
  Level 1 - All in One
&lt;/h3&gt;

&lt;p&gt;One component/app is all you get. While for most libraries this is the most optimal version this is not true of the VDOM where components are really important for managing update performance.&lt;/p&gt;

&lt;p&gt;M1&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2yck9uR7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tv3w06o846rx5ihorgrq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2yck9uR7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tv3w06o846rx5ihorgrq.png" alt="Level 1 - M1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Intel w/ Slowdowns&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uOwM79z4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dxslukcaandqfkpgajyk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uOwM79z4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dxslukcaandqfkpgajyk.png" alt="Level 1 - Intel"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is probably the worst you've ever seen Inferno perform and it's not its fault. This is what would happen if everyone wrote VDOM code the way it is described in Rich Harris' &lt;a href="https://svelte.dev/blog/virtual-dom-is-pure-overhead"&gt;The Virtual DOM is pure overhead&lt;/a&gt;. Hopefully most people don't do that. It actually isn't bad for most things but really takes a hit on the selection benchmark and where the updates are more partial.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#level-2-rows-and-buttons"&gt;
  &lt;/a&gt;
  Level 2 - Rows and Buttons
&lt;/h3&gt;

&lt;p&gt;This is what I'd consider the pretty typical scenario for a lot of frameworks in terms of the component breakdown. The VDOM now has enough components to operate.&lt;/p&gt;

&lt;p&gt;M1&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kA1LnIfk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aon4x4xfssbsb08n7pwg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kA1LnIfk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aon4x4xfssbsb08n7pwg.png" alt="Level 2 - M1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Intel w/ Slowdowns&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wwKlBwIW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3c0jr7lq3z1flqp9ze4y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wwKlBwIW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3c0jr7lq3z1flqp9ze4y.png" alt="Level 2 - Intel"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks to adding Web Components to Vanilla the gap between it and Solid has disappeared. Inferno is significantly faster now that it has enough components. The gap between Lit, Svelte, and Vanilla are keeping pace. So it looks like their components have comparable cost.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#level-3-components-r-us"&gt;
  &lt;/a&gt;
  Level 3 - Components `R Us
&lt;/h3&gt;

&lt;p&gt;At this level every table cell is a Component. This breakdown might seem a bit extreme to some. In Virtual DOM land we are used to this sort of wrapping. Things like Styled Components and Icon libraries push us to these patterns without flinching. Just how expensive is this?&lt;/p&gt;

&lt;p&gt;M1&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H9OYeiVn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/deq53pio0jpa7ngrv8nx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H9OYeiVn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/deq53pio0jpa7ngrv8nx.png" alt="Level 3 - M1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Intel w/ Slowdowns&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Kl3rcuRU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5gy54xumr0kpsiyruqm9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kl3rcuRU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5gy54xumr0kpsiyruqm9.png" alt="Level 3 - Intel"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Adding Web Components to our optimal Vanilla JS has actually made it more expensive than the equivalent Solid example. Inferno has now closed the gap considerably with Vanilla JS. And Svelte and Lit have continue to drop a few more points. On the slower system, Svelte is really getting hurt at this point by it's memory usage on benchmarks like clear rows:&lt;/p&gt;

&lt;p&gt;Intel w/ Slowdown&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wHvyX6Bt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w30yylq7msk3fee7rdnu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wHvyX6Bt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w30yylq7msk3fee7rdnu.png" alt="Level 3 Memory - Intel"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusions"&gt;
  &lt;/a&gt;
  Conclusions
&lt;/h2&gt;

&lt;p&gt;I feel like a broken record but really we shouldn't be comparing Web Components to JavaScript Framework components. They serve a different purpose and performance is not a place that they can win. There is nothing wrong with that once you understand they aren't the same thing.&lt;/p&gt;

&lt;p&gt;If anything this test was setup in Web Components favor. There is no Shadow DOM or extra elements inserted. Those things you would find in real world would make them even heavier solution. I didn't want any contention so I kept in things like explicit event delegation which only benefits Lit in this test. This is really the most optimistic look at Web Components.&lt;/p&gt;

&lt;p&gt;It might not always be this way to be sure. Web Component performance has improved in the 2 years since I last tested. But it isn't as simple as saying use the platform. As it turns out all JavaScript frameworks use the platform, just some more efficiently than others. It's a delicate balance between platform for standards sake, and using it only so far as it is empirically beneficial. There are way more factors than performance here.&lt;/p&gt;

&lt;p&gt;But it is pretty clear that frameworks that scale with well with more components, such as Virtual DOM libraries like React or Inferno or &lt;a href="https://dev.to/this-is-learning/components-are-pure-overhead-hpm"&gt;"component-less"&lt;/a&gt; libraries like Solid, don't experience as much overhead. &lt;/p&gt;

&lt;p&gt;This doesn't come as much as revelation to me this time around. But maybe by looking at a few numbers we can better extrapolate where we should cautious. This is just a brutal microbenchmark that only really shows us the framework level bottlenecks and the real ones happen usually in our user code. But for those looking to evaluate on pure technological approach maybe there is some value here.&lt;/p&gt;




&lt;p&gt;Results in a single table Intel w/ Slowdowns&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LtGF6cHv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/407uf18jrqp26on2gb3h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LtGF6cHv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/407uf18jrqp26on2gb3h.png" alt="Full table - Intel"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>performance</category>
      <category>webperf</category>
    </item>
    <item>
      <title>The best way to use SVG icons in React.</title>
      <author>Sunny Golovine</author>
      <pubDate>Fri, 25 Jun 2021 16:03:51 +0000</pubDate>
      <link>https://dev.to/sgolovine/the-best-way-to-use-svg-icons-in-react-3ckm</link>
      <guid>https://dev.to/sgolovine/the-best-way-to-use-svg-icons-in-react-3ckm</guid>
      <description>&lt;p&gt;When I first started working with React, I used libraries like &lt;a href="https://react-icons.github.io/react-icons/"&gt;React Icons&lt;/a&gt; or &lt;a href="https://www.npmjs.com/package/bootstrap-icons"&gt;Bootstrap Icons&lt;/a&gt; to manage my icons. &lt;/p&gt;

&lt;p&gt;But problems quickly emerged, the first problem is not all of these packages support &lt;em&gt;tree shaking&lt;/em&gt;. Without tree shaking, when you build your site, all the icons from the library will be included with your build rather than just the ones you use.&lt;/p&gt;

&lt;p&gt;The second problem is these libraries can be hard to setup and manage. So what's a better way? Let me show you. If you're new to React you might not know this but in fact you can use &lt;em&gt;svg icons directly as React components&lt;/em&gt;. So how would we do that?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-a-component"&gt;
  &lt;/a&gt;
  Creating a Component
&lt;/h2&gt;

&lt;p&gt;Take this SVG icon (via &lt;a href="https://heroicons.com/"&gt;Hero Icons&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--O8Zdp29r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zz937dq4u3u0637gvi3h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--O8Zdp29r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zz937dq4u3u0637gvi3h.png" alt="academic svg icon"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This SVG icon has the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor"&amp;gt;
  &amp;lt;path d="M12 14l9-5-9-5-9 5 9 5z" /&amp;gt;
  &amp;lt;path d="M12 14l6.16-3.422a12.083 12.083 0 01.665 6.479A11.952 11.952 0 0012 20.055a11.952 11.952 0 00-6.824-2.998 12.078 12.078 0 01.665-6.479L12 14z" /&amp;gt;
  &amp;lt;path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 14l9-5-9-5-9 5 9 5zm0 0l6.16-3.422a12.083 12.083 0 01.665 6.479A11.952 11.952 0 0012 20.055a11.952 11.952 0 00-6.824-2.998 12.078 12.078 0 01.665-6.479L12 14zm-4 6v-7.5l4-2.222" /&amp;gt;
&amp;lt;/svg&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The first thing you will want to do is remove the &lt;code&gt;xmlns&lt;/code&gt; attribute, as it's not used by React when rendering the SVG. Additionally you need to replace the &lt;code&gt;class&lt;/code&gt; attribute with &lt;code&gt;className&lt;/code&gt; to make it compliant with React. Your SVG will now look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
&amp;lt;svg className="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor"&amp;gt;
  &amp;lt;path d="M12 14l9-5-9-5-9 5 9 5z" /&amp;gt;
  &amp;lt;path d="M12 14l6.16-3.422a12.083 12.083 0 01.665 6.479A11.952 11.952 0 0012 20.055a11.952 11.952 0 00-6.824-2.998 12.078 12.078 0 01.665-6.479L12 14z" /&amp;gt;
  &amp;lt;path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 14l9-5-9-5-9 5 9 5zm0 0l6.16-3.422a12.083 12.083 0 01.665 6.479A11.952 11.952 0 0012 20.055a11.952 11.952 0 00-6.824-2.998 12.078 12.078 0 01.665-6.479L12 14zm-4 6v-7.5l4-2.222" /&amp;gt;
&amp;lt;/svg&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now you're ready to create a React component. I suggest creating a functional component.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;AcademicIcon&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;svg&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"h-6 w-6"&lt;/span&gt; &lt;span class="na"&gt;fill&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"none"&lt;/span&gt; &lt;span class="na"&gt;viewBox&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"0 0 24 24"&lt;/span&gt; &lt;span class="na"&gt;stroke&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"currentColor"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;path&lt;/span&gt; &lt;span class="na"&gt;d&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"M12 14l9-5-9-5-9 5 9 5z"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;path&lt;/span&gt; &lt;span class="na"&gt;d&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"M12 14l6.16-3.422a12.083 12.083 0 01.665 6.479A11.952 11.952 0 0012 20.055a11.952 11.952 0 00-6.824-2.998 12.078 12.078 0 01.665-6.479L12 14z"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;path&lt;/span&gt;
        &lt;span class="na"&gt;stroke&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="na"&gt;linecap&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"round"&lt;/span&gt;
        &lt;span class="na"&gt;stroke&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="na"&gt;linejoin&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"round"&lt;/span&gt;
        &lt;span class="na"&gt;stroke&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"2"&lt;/span&gt;
        &lt;span class="na"&gt;d&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"M12 14l9-5-9-5-9 5 9 5zm0 0l6.16-3.422a12.083 12.083 0 01.665 6.479A11.952 11.952 0 0012 20.055a11.952 11.952 0 00-6.824-2.998 12.078 12.078 0 01.665-6.479L12 14zm-4 6v-7.5l4-2.222"&lt;/span&gt;
      &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;svg&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;At this point you're ready to use the component! You can use it as is in other react components like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;AcademicIcon&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./AcademicIcon.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;AcademicIcon&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#adding-props"&gt;
  &lt;/a&gt;
  Adding Props
&lt;/h2&gt;

&lt;p&gt;One benefit of using SVG's as React components is you can add props to it just like you would to any other component. Lets add some props to our &lt;code&gt;AcademicIcon&lt;/code&gt; component to make it more flexible.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;AcademicIcon&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;h-6 w-6&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;fill&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;none&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;stroke&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;currentColor&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;stokeWidth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;svg&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;fill&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;fill&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;viewBox&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"0 0 24 24"&lt;/span&gt; &lt;span class="na"&gt;stroke&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;stroke&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;path&lt;/span&gt; &lt;span class="na"&gt;d&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"M12 14l9-5-9-5-9 5 9 5z"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;path&lt;/span&gt; &lt;span class="na"&gt;d&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"M12 14l6.16-3.422a12.083 12.083 0 01.665 6.479A11.952 11.952 0 0012 20.055a11.952 11.952 0 00-6.824-2.998 12.078 12.078 0 01.665-6.479L12 14z"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;path&lt;/span&gt;
        &lt;span class="na"&gt;stroke&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="na"&gt;linecap&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"round"&lt;/span&gt;
        &lt;span class="na"&gt;stroke&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="na"&gt;linejoin&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"round"&lt;/span&gt;
        &lt;span class="na"&gt;stroke&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;strokeWidth&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
        &lt;span class="na"&gt;d&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"M12 14l9-5-9-5-9 5 9 5zm0 0l6.16-3.422a12.083 12.083 0 01.665 6.479A11.952 11.952 0 0012 20.055a11.952 11.952 0 00-6.824-2.998 12.078 12.078 0 01.665-6.479L12 14zm-4 6v-7.5l4-2.222"&lt;/span&gt;
      &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;svg&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now in this final version we moved &lt;code&gt;className&lt;/code&gt;, &lt;code&gt;fill&lt;/code&gt;, &lt;code&gt;stroke&lt;/code&gt; and &lt;code&gt;strokeWidth&lt;/code&gt; to a prop and gave it a default of the original value. Now you can call your icon with props:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;AcademicIcon&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./AcademicIcon.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;AcademicIcon&lt;/span&gt;
         &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"h-12 w-12"&lt;/span&gt;
         &lt;span class="na"&gt;fill&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"red"&lt;/span&gt;
         &lt;span class="na"&gt;strokeWidth&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Because all the props have defaults, you can declare the icon with all the props, some of them or none of them! With this method you are also only loading the icons you are using, no wasteful extra code at build time!&lt;/p&gt;




&lt;p&gt;If you enjoyed this post check out my other posts on &lt;a href="https://sunny.gg/post"&gt;my blog&lt;/a&gt;. You should also check out my latest project: &lt;a href="https://awesomedevtools.com?utm_source=blog_post"&gt;Awesome Devtools&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Learn React, Redux and Tailwind CSS By Building Youtube</title>
      <author>Hiep Le</author>
      <pubDate>Fri, 25 Jun 2021 15:54:11 +0000</pubDate>
      <link>https://dev.to/hieptl/learn-react-redux-and-tailwind-css-by-building-youtube-29ea</link>
      <guid>https://dev.to/hieptl/learn-react-redux-and-tailwind-css-by-building-youtube-29ea</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HDygfu2w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z4ogdzt2sorsdz7cslvy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HDygfu2w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z4ogdzt2sorsdz7cslvy.png" alt="learn-react-redux-tailwindcss-by-buiding-youtube"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Please give me Github ‚≠ê if you like the project. Pull Request are highly appreciated ‚ù§Ô∏è&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Github Link: &lt;a href="https://github.com/hieptl/youtube-clone"&gt;https://github.com/hieptl/youtube-clone&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Live Demo: &lt;a href="https://407mq.csb.app/"&gt;https://407mq.csb.app/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I'm Hiep. I work as a full-time software engineer. Most of my open-source projects are focused on one thing - to help people learn üìö. &lt;/p&gt;

&lt;p&gt;The repository helps you learn React, Redux and Tailwind CSS by buiding Youtube.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you feel the repository is useful, please help me share the post and give me a Github ‚≠ê. It will make me feel motivation to work even harder. I will try to make many open sources and share to the community.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You will learn the following concepts:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;React.&lt;/li&gt;
&lt;li&gt;Redux.&lt;/li&gt;
&lt;li&gt;Redux Thunk.&lt;/li&gt;
&lt;li&gt;Firebase.&lt;/li&gt;
&lt;li&gt;useDispatch.&lt;/li&gt;
&lt;li&gt;useSelector.&lt;/li&gt;
&lt;li&gt;Tailwind CSS.&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>webdev</category>
      <category>react</category>
      <category>showdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Finding shortest social connection path</title>
      <author>Santhosh Balasa</author>
      <pubDate>Fri, 25 Jun 2021 15:53:35 +0000</pubDate>
      <link>https://dev.to/sbalasa/finding-path-in-graph-4kp8</link>
      <guid>https://dev.to/sbalasa/finding-path-in-graph-4kp8</guid>
      <description>&lt;p&gt;Human connections are like networks, I know someone, and they know someone else etc, It could be friendship, relationship etc. &lt;/p&gt;

&lt;p&gt;Let's assume that I need to find the shortest social connection path from me to Queen of England.&lt;/p&gt;

&lt;p&gt;We represent this in a graph format:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{'ali': ['mo'],
 'angela': ['queen', 'anna'],
 'anna': [],
 'dave': [],
 'dog': ['liea', 'dave'],
 'jimbo': [],
 'lee': [],
 'liea': ['lee'],
 'me': ['mum', 'dog', 'teacher'],
 'mo': [],
 'mum': ['angela', 'liea'],
 'queen': [],
 'teacher': ['ali', 'jimbo']}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now lets find the shortest social connection path:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;def find_path(start, end, graph, path=[]):
    path = path + [start]
    if start == end:
        return path
    if start not in graph:
        return None
    for node in graph[start]:
        if node not in path:
            newpath = find_path(node, end, graph, path)
            if newpath:
                return path
    return None
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; find_path("me", "queen", graph)
['me', 'mum', 'angela', 'queen']
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This solution is loosely based on bread-first search graph algorithm to find the shortest path.&lt;/p&gt;

</description>
      <category>algorithms</category>
    </item>
    <item>
      <title>I was gone from tech social media for almost half a year. Here is why. (Yes, it was burnout.)</title>
      <author>Mateusz Podlasin</author>
      <pubDate>Fri, 25 Jun 2021 15:46:16 +0000</pubDate>
      <link>https://dev.to/mpodlasin/i-was-gone-from-tech-social-media-for-almost-half-a-year-here-is-why-yes-it-was-burnout-44ia</link>
      <guid>https://dev.to/mpodlasin/i-was-gone-from-tech-social-media-for-almost-half-a-year-here-is-why-yes-it-was-burnout-44ia</guid>
      <description>&lt;p&gt;I've posted my last tech article on January 24th, 2021.&lt;/p&gt;

&lt;p&gt;I've made my last tweet on January 28th.&lt;/p&gt;

&lt;p&gt;Since then I became silent for almost half a year.&lt;/p&gt;

&lt;p&gt;This article is very important to me because I want to achieve a few things with it:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Explain why I was gone for so long.&lt;/li&gt;
&lt;li&gt;Use it as an opportunity to talk about an &lt;em&gt;extreme&lt;/em&gt; burnout and how to fight it.&lt;/li&gt;
&lt;li&gt;Test with this article if I even want to go back to writing tech-related content.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you've ever experienced - or are currently experiencing - burnout, work-related depression, or anything similar, you might find this article relatable. You won't find easy answers in it, because I don't have them. But it may give you some ideas and suggestions to explore further on your own. At least I hope.&lt;/p&gt;

&lt;p&gt;So let's begin!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-happened"&gt;
  &lt;/a&gt;
  What happened?
&lt;/h1&gt;

&lt;p&gt;Instead of turning this section into an overly long, verbose description of the events, let's focus on the timeline more. I find it quite revealing how things had progressed:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;January 11th, 2021&lt;/strong&gt; - I am making a Twitter thread about burnout. &lt;/p&gt;

&lt;p&gt;This is fascinating to me because at that moment I am still convinced that I am completely and absolutely fine. And yet you can see that my brain is already circulating around the topic of burnout.&lt;/p&gt;

&lt;p&gt;It's as if it is trying to warn me: "man, you have to slow down, otherwise I am going into a shutdown mode soon!".&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;January 14th&lt;/strong&gt; - I am making a Twitter thread about my recent failures related to trying to get into Machine Learning.&lt;/p&gt;

&lt;p&gt;This one is less obvious, but you can still see that my brain continued to focus on negative topics at that time. Burnout, failure, and depression were clearly on my mind. &lt;/p&gt;

&lt;p&gt;And yet, again, at that point I sincerely believed I am "A-okay", not seeing the storm looming just above my head.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;January 24th&lt;/strong&gt; - I am publishing a tech article - the last one in a 3-part series.&lt;/p&gt;

&lt;p&gt;I explicitly state on Twitter that this one was a slog to finish. It's the first article that felt like a pain to get done. I felt no joy in the process and was no longer interested in the topics described in the series.&lt;/p&gt;

&lt;p&gt;Note also that at that time I started making YouTube videos associated with the articles, covering the same concepts in a video form.&lt;/p&gt;

&lt;p&gt;The sheer amount of work - creating an article &lt;em&gt;and&lt;/em&gt; a video almost every week - was so big, that I was basically working all the time. I was spending 8 hours coding at my day job, and then, after the day job was done, I was creating programming-related content.&lt;/p&gt;

&lt;p&gt;So the structure of my day was:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;wake up&lt;/li&gt;
&lt;li&gt;code&lt;/li&gt;
&lt;li&gt;have a meeting about code&lt;/li&gt;
&lt;li&gt;code&lt;/li&gt;
&lt;li&gt;eat crappy takeaway&lt;/li&gt;
&lt;li&gt;write about code&lt;/li&gt;
&lt;li&gt;record talking about code&lt;/li&gt;
&lt;li&gt;sleep&lt;/li&gt;
&lt;li&gt;repeat&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Absolutely unsustainable. And yet even at that point - January 24th - I mostly believed that I am okay. Maybe less motivated and a bit more tired than usual, but nothing crazy.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;February 2nd&lt;/strong&gt; - my team leader writes to me: "Hey I've noticed you seem less energetic &amp;amp; cheerful than you usually are. Is everything going alright? I'm here if there's anything you would like to share."&lt;/p&gt;

&lt;p&gt;I am essentially brushing off his question, saying that I indeed felt less motivated recently, but I will probably feel better after resting on the weekend. &lt;/p&gt;

&lt;p&gt;Oh, how wrong was I...&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;February 8th&lt;/strong&gt; - Monday. I wake up extremely late. Around 3 pm. And I still can't get out of bed. I am just laying there, unable to move at all. Complete shutdown. &lt;/p&gt;

&lt;p&gt;I guess my brain incapacitated me to prevent me from continuing my insane work routine.&lt;/p&gt;

&lt;p&gt;I sleep a bit more, wake up at 5 pm. Since it's winter, it's already getting dark. I am still unable to perform any meaningful tasks. I can't even get out of the bed and wash myself. &lt;/p&gt;

&lt;p&gt;I don't really remember the rest of that day very well. It's likely that I just turned on YouTube or Netflix and that's how I finished the day.&lt;/p&gt;

&lt;p&gt;I provided no info - or even sign of life for that matter - to my team or managers, even though it was a regular workday.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;February 9th&lt;/strong&gt; - Tuesday. The same situation. Waking up late. Not being able to move and do anything meaningful. No shower. No food. Just laying there.&lt;/p&gt;

&lt;p&gt;I manage to motivate myself to contact my boss and ask him for an unpaid leave till the end of the week.&lt;/p&gt;

&lt;p&gt;Everyone at work is super concerned with my situation - I am having conversations with a few people, some on Slack, some on Zoom. Thankfully actually getting a week off turns out to not be a problem at all.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#how-i-got-out-of-my-burnout"&gt;
  &lt;/a&gt;
  How I got out of my burnout
&lt;/h1&gt;

&lt;p&gt;So I hope that by now you realize just how serious my situation was.&lt;/p&gt;

&lt;p&gt;Burnout is a popular word recently, used for a wide variety of conditions. But you can see that in my case it wasn't just simply feeling a bit less motivated or something similar.&lt;/p&gt;

&lt;p&gt;I literally couldn't move or perform the most basic life functions, like cleaning myself, preparing a meal, or even going for a walk.&lt;/p&gt;

&lt;p&gt;I was in some deep, deep s...&lt;/p&gt;

&lt;p&gt;At that point, I was luckily very much aware of the severity of my situation (hard not to be, I guess). &lt;/p&gt;

&lt;p&gt;During my week off I decided to deliberately stay away from anything tech or programming related. No coding, no writing about coding, no twitting about coding. No tech social media at all. Even such little thing as browsing Hacker News - absolutely forbidden.&lt;/p&gt;

&lt;p&gt;I was hoping that this cold turkey tech detox would help. But I was also prepared to seek professional help if after a week I wouldn't feel any better.&lt;/p&gt;

&lt;p&gt;Luckily I did.&lt;/p&gt;

&lt;p&gt;A week later I communicated to my boss that I feel well enough to at least attempt coming back.&lt;/p&gt;

&lt;p&gt;I still took things very, very slow, however. After I came back, I only did coding for work - no side projects or anything like that. &lt;/p&gt;

&lt;p&gt;I was also taking only simpler tasks - the ones I knew I could implement fairly fast and with minimal effort. A complex, big new feature? - pass. A tricky bug to investigate? - pass.&lt;/p&gt;

&lt;p&gt;I also kept staying away from tech social media - both producing content and consuming it. I stopped coding or even thinking about coding after work. Instead, I focused on my non-tech hobbies, which I previously neglected, such as photography.&lt;/p&gt;

&lt;p&gt;And I believe this last thing the most important decision that contributed to my mental health and well-being in the long run.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#where-i-am-now-and-whats-next"&gt;
  &lt;/a&gt;
  Where I am now and what's next?
&lt;/h1&gt;

&lt;p&gt;Avoiding tech social media and coding beyond the day job worked for me so well, that I did it for nearly half a year. I haven't coded a single side project in that time. I didn't create or read a single tech article (unless it was at work and necessary to do my job). Hell, I haven't even made a single tweet since January!&lt;/p&gt;

&lt;p&gt;And during those last few months, I felt absolutely... amazing. I am now more energetic and effective at my work than before my burnout. I am cranking out issue after issue, solving difficult bugs, contributing to architectural decisions. If you'd see me at my day job, you would never, ever guess that I was in such a bad place just a few months ago.&lt;/p&gt;

&lt;p&gt;Writing this article is the first time I am breaking my "no coding-related activities in my spare time" unspoken rule since my sudden burnout attack.&lt;/p&gt;

&lt;p&gt;If I am being honest, it feels both weird and scary to write this article.&lt;/p&gt;

&lt;p&gt;I know that I have this overly ambitious, creative bug in me. And I am terrified I am awaking it again with this article. I am seriously scared that writing and publishing this single article will again send me on a path of unsustainable workloads and being consumed by programming.&lt;/p&gt;

&lt;p&gt;It seems that some people are more resilient than others and can handle more stress and higher workloads. I see people who work 10 hours a day, create side projects, and write articles regularly on top of that. For someone, it might be funny that I burned out so badly only because I wrote a few articles after work.&lt;/p&gt;

&lt;p&gt;Maybe that's the ultimate lesson though. You have to know yourself and be aware of how much you can handle. And stay honest with yourself to not start biting more than you can chew. &lt;/p&gt;

&lt;p&gt;That's why recreating the timeline of my burnout was so important to me. You can see that as early as few weeks before an actual burnout there were already warning signs present, which I completely ignored. I should have paid more attention to what my brain was telling me.&lt;/p&gt;

&lt;p&gt;So what's next? I don't know. I can say that writing this article felt very good. I guess it was something that I just needed to get off my chest.&lt;/p&gt;

&lt;p&gt;Will I go back to creating actual tech content, however? It's possible. Especially if I manage to find a sustainable tempo and topics which I enjoy writing about.&lt;/p&gt;

&lt;p&gt;But it's also entirely possible that this is the last article I'll ever write.&lt;/p&gt;

&lt;p&gt;And that's fine too.&lt;/p&gt;

&lt;p&gt;Cover Photo by &lt;a href="https://unsplash.com/@jluebke?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Justin Luebke&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/crossroads?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>mentalhealth</category>
      <category>productivity</category>
      <category>career</category>
    </item>
    <item>
      <title>Big Signs That Your Documentation Stinks.</title>
      <author>Tim Post</author>
      <pubDate>Fri, 25 Jun 2021 15:35:48 +0000</pubDate>
      <link>https://dev.to/tinkertim/big-signs-that-your-documentation-stinks-2569</link>
      <guid>https://dev.to/tinkertim/big-signs-that-your-documentation-stinks-2569</guid>
      <description>&lt;p&gt;Why is it that we freely admit &lt;a href="https://en.wikipedia.org/wiki/Code_smell"&gt;code smells&lt;/a&gt;, but get a tad bit defensive when the usefulness of our documentation is called into question? I've been pondering this, and I think I have a theory:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GWY2udR2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eye7bbs9m3flmfx68owk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GWY2udR2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eye7bbs9m3flmfx68owk.png" alt='Pie Chart Entitled "Why Are You Mad?" showing values "3% My Documentation is perfect" and "97% The Truth Hurts"' title="Perfectly Anecdotal Data As Witnessed By: Me."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As a senior developer and engineering manager who has worked on quite a few "death marches" in a 20+ year career, and with a strong background in developer communities .. I can confidently say that the graph isn't too far off. &lt;/p&gt;

&lt;p&gt;We don't necessarily feel personally attacked, it's more of not wanting to be reminded of all the junk in your basement that you need to have cleaned out before your in-laws move in. And maybe you don't have in-laws, but I'm out of metaphors - it's inertia, it's formidable, and you hate hearing about it. Nobody &lt;em&gt;deliberately&lt;/em&gt; wants people to struggle to succeed, but we often don't realize how much we're inadvertently doing just that.&lt;/p&gt;

&lt;p&gt;I'm here to tell you that it doesn't need to be this way, and the best way that I can convince you is to talk about pain points that you probably have, and how &lt;a href="https://www.infoq.com/articles/continuous-documentation/"&gt;through making documentation continuous just like your code&lt;/a&gt; you can shed guilt by trusting that your docs are always going to be in a relevant and useful state. Hmm, trust - that's a fantastic place to start!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-people-dont-trust-the-documentation"&gt;
  &lt;/a&gt;
  1. People Don't Trust The Documentation.
&lt;/h2&gt;

&lt;p&gt;Are you conducting periodic engagement surveys internally? I'd like to strongly recommend that you do, but &lt;a href="https://www.centercode.com/blog/5-mistakes-people-make-when-writing-surveys"&gt;be extremely thoughtful in how you craft them&lt;/a&gt; and involve folks that can help you navigate the many cultures that make up your team. There are fantastic SAAS applications that help you put these together responsibly and effectively.&lt;/p&gt;

&lt;p&gt;You should also be paying attention to things like eyes rolling and bad jokes when the documentation is mentioned. While light-hearted, this is how folks that like to avoid confrontation complain about the documentation :)&lt;/p&gt;

&lt;p&gt;Don't just ask "Do you trust the documentation?" - ask questions around the periphery instead, e.g. "&lt;em&gt;I am confident that I can find current information and documentation related to my tasks [strongly agree .... strongly disagree]&lt;/em&gt;"&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Remedy: If docs are continuous, the worst case is a developer seeing the documentation essentially deprecating itself - e.g. an auto-generated admonition saying "This looks to be out of date." This shows that something cares about it, and reduces cognitive load for the developer. This tends to earn trust.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-code-meant-for-reuse-isnt-reused"&gt;
  &lt;/a&gt;
  2. Code Meant For Re-Use Isn't Re-Used.
&lt;/h2&gt;

&lt;p&gt;You went through all of the trouble of designing a bunch of abstract classes and interfaces to implement a module subsystem, which you fully expected to be essentially re-used in a bunch of other modular plugin features going forward.&lt;/p&gt;

&lt;p&gt;Yeah, that didn't exactly happen, everyone just kinda did their own thing. And that might &lt;em&gt;very&lt;/em&gt; well be fine, as long as you're sure that they knew they had the opportunity to just fork the implementation you worked on and make tweaks to suit their own needs. And now your beautiful interfaces are muddled with all kinds of business logic where you really wanted clear separation of concerns.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Remedy: When you make sure that new PRs that lower your documentation coverage kick off issues to assign someone to at least look at it, you catch all kinds of ambiguities. Additionally, when docs are auto-built, always keeping an index of topics where people can discover information becomes simple. Telling your team "just re-use this stuff" breaks in two months from now. Rely on your documentation to tell technical stories.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-random-early-attrition-amp-disengagement"&gt;
  &lt;/a&gt;
  3. Random Early Attrition &amp;amp; Disengagement
&lt;/h2&gt;

&lt;p&gt;Do you often answer questions with "well, do you have a minute?" and feel the need to give a short history lesson? And while strange things sometimes happen, have you lost more than 1 or 2 people after just a few months?&lt;/p&gt;

&lt;p&gt;Everyone onboarding to your code needs access to the same information that you have about it, and there's a good chance that a significant amount of it is in your head and nowhere else. &lt;/p&gt;

&lt;p&gt;When people onboard, they feel pretty vulnerable - there's a lot that they don't know, and they're more reticent to ask questions than they'd be in a more familiar setting. Additionally, some folks have a harder time finding peers and potential mentors than others. Making as much knowledge accessible as possible for self-study means making your team more inclusive. &lt;/p&gt;

&lt;p&gt;When confronted with a sense of "just not getting it" - many folks believe themselves to be the culprit, and &lt;a href="https://en.wikipedia.org/wiki/Impostor_syndrome"&gt;imposter syndrome&lt;/a&gt; can sometimes creep in. But, don't always chalk it off to Imposter Syndrome - others (especially at more senior levels) may recognize this and, well, feel like you didn't really care enough to support them. This is a big problem that people face &lt;em&gt;multiple&lt;/em&gt; times in their career, and we can't count on people we haven't hired yet to solve it. It helps to let them know you have a problem and are working on it, but results need to come soon.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Remedy: As trust is gained in the efficacy of the documentation, people will develop a culture of wanting to grow and maintain it. This means &lt;em&gt;good&lt;/em&gt; kinds of pressure to get that idea you sketched out on a napkin last night into something others can consume, so everyone (from now until years from now) has the same understanding of that thing as you do. They won't feel cut-off or unconsidered when they hear other people talking about it, and they don't need to wait for it all to "hopefully sink in." And, even in times of huge code churn and upheaval, your on-boarding docs will still be useful.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-inconsistent-incident-response-times"&gt;
  &lt;/a&gt;
  4. Inconsistent Incident Response Times
&lt;/h2&gt;

&lt;p&gt;This speaks for itself. Unless your on-call team is made up of people that always understand all of the code for all of your services all of the time (which is possible, I can admit that), response to incidents is going to mean learning under pressure sometimes with a lack of sleep.&lt;/p&gt;

&lt;p&gt;Do we really need to talk about how important it is for people to (1) quickly find out what there is to learn about something and (2) quickly dive into what relates to what they're diagnosing?&lt;/p&gt;

&lt;p&gt;Modern service catalogs are a big help with this - you can generally figure out where the code lives, and who owns it, but that's not guaranteed to be helpful because people do things like take vacations (those pesky humans!).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Remedy: Documented on-ramps to a code base with well-maintained troubleshooting guides that include up-to-date code snippets will reduce incident response times in many cases, and allow you to better estimate your SLA capabilities.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-suboptimal-offboarding"&gt;
  &lt;/a&gt;
  5. Suboptimal Off-boarding
&lt;/h2&gt;

&lt;p&gt;I don't think there's a fool-proof way to &lt;em&gt;guarantee&lt;/em&gt; that institutional knowledge doesn't leave when a long-term contributor departs. This is true for both proprietary software and open source, and open source generally has the advantage with higher (better) bus factors.&lt;/p&gt;

&lt;p&gt;If you don't have some sort of strategy in place to off-board that involves revisiting documentation pertaining to the parts of the code where the person was most active, you've probably got a leak. It may very well be small, and it might not adversely affect your team in the long run, but you should be aware that it's there.&lt;/p&gt;

&lt;p&gt;I mention it because, in most early-to-mid-stage startups, it's a &lt;strong&gt;very&lt;/strong&gt; big problem.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Remedy: Allow the person you hire to backfill the role to train on the current docs once they're verified as up-to-date. Ask the departing employee to write a short test to see if the person is up-to-speed, and verify that the documentation is sufficient to pass it. You can not, and will not accomplish this if the documentation isn't already mostly current - there's just not enough time in the usual two-week notice period.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-the-documentation-isnt-thorough"&gt;
  &lt;/a&gt;
  6. The Documentation Isn't Thorough
&lt;/h2&gt;

&lt;p&gt;What did you put in your last batch of home-made Alfredo sauce that was so good? Was it dill, or was that the one where you used that new brand of Parmesan? &lt;/p&gt;

&lt;p&gt;You might be able to figure it out, but it would be &lt;em&gt;much&lt;/em&gt; better if you wrote it right after you made it, and remembered to talk about tempering the cream and the way you knew to lower the flame and the ..... well, you get it. Everything you write is better if you write it when it's fresh in your head. &lt;/p&gt;

&lt;p&gt;Don't get me wrong - you could probably nail that recipe today. And it's going to be delicious. And before the food critics jump in, I know there's no cream in classic Alfredo sauce. But that's not the point, it would have been better if you wrote it sooner. The same goes with code documentation. Write it while you're most passionate about the design and folks might just realize you intend it to be reused. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Remedy: Enforcing the need to document at the CI or pre-commit level ensures that documentation gets written at the optimal time, which increases the quality. How you enforce that (blocking the PR or opening an issue with a deadline) is up to you. What matters is that you do it.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-people-stop-looking-forward-to-cooldown-cycles"&gt;
  &lt;/a&gt;
  7. People Stop Looking Forward To Cool-down Cycles
&lt;/h2&gt;

&lt;p&gt;How many cool-down cycles are spent catching up on documentation instead of letting engineers work on what they want to work on? That's no fun. Stop doing that. Cool down cycles are for refactoring or fun R&amp;amp;D things, which should also (in an ideal world) not create an additional disproportionate documentation burden.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Remedy: Make documentation continuous so that you don't have to keep spending sprints and cool-down cycles to fix it. Once you have that, you can play with neat things that can keep symbols and paths and stuff current in the docs, or at least automates most of the find/replace overhead.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion.
&lt;/h2&gt;

&lt;p&gt;I could go on here, but that's already quite a bit. Disclaimer: I work for Swimm; we make documentation tools and our CTO wrote the linked manifesto - but we're not talking about this problem in product terms, we're talking about the concepts needed for a solution. How you fix this needs to feel good for you, we don't make the only tools on the market. I only mention it for transparency.&lt;/p&gt;

&lt;p&gt;As more and more larger companies modernize and begin to embrace the benefits of micro-services, it's &lt;em&gt;imperative&lt;/em&gt; that we level up our documentation strategy. We must be deliberate about getting &lt;em&gt;everything&lt;/em&gt; written down and cataloged so new developers can see the entirety of what they need to absorb and pick the paths that work for them. &lt;/p&gt;

&lt;p&gt;We must also &lt;em&gt;ensure&lt;/em&gt; (by policy) that the knowledge is always relevant and up-to-date. That's how we can &lt;a href="https://echoreply.hashnode.dev/why-improving-documentation-means-improving-engineering-culture"&gt;remove invisible gatekeepers&lt;/a&gt; and really set people up to succeed, while demonstrating that we value them through this effort.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>JSConfetti is now could be downloaded from CDN üéâ</title>
      <author>Vladimir Nikitin</author>
      <pubDate>Fri, 25 Jun 2021 15:29:52 +0000</pubDate>
      <link>https://dev.to/loonywizard/jsconfetti-is-now-could-be-downloaded-from-cdn-3i10</link>
      <guid>https://dev.to/loonywizard/jsconfetti-is-now-could-be-downloaded-from-cdn-3i10</guid>
      <description>&lt;p&gt;Hi everyone!&lt;/p&gt;

&lt;p&gt;Wanted to share, that my open-source library &lt;a href="https://github.com/loonywizard/js-confetti"&gt;JSConfetti&lt;/a&gt; is now could be downloaded from CDN:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://cdn.jsdelivr.net/npm/js-confetti@latest/dist/js-confetti.browser.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After that, &lt;code&gt;JSConfetti&lt;/code&gt; class could be accessed as global variable, and you can fire confetti by calling method &lt;code&gt;addConfetti()&lt;/code&gt; on JSConfetti class instance&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;jsConfetti&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;JSConfetti&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="nx"&gt;jsConfetti&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addConfetti&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;JSConfetti works without any config, but could be configurable, check out &lt;a href="https://github.com/loonywizard/js-confetti"&gt;documentation on GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Links: &lt;a href="https://github.com/loonywizard/js-confetti"&gt;GitHub&lt;/a&gt; | &lt;a href="https://www.npmjs.com/package/js-confetti"&gt;NPM&lt;/a&gt; | &lt;a href="https://loonywizard.github.io/js-confetti/"&gt;Library Website&lt;/a&gt; | &lt;a href="https://codesandbox.io/s/confetti-vanilla-js-r5kqi"&gt;CodeSandbox Playground&lt;/a&gt;&lt;/p&gt;

</description>
      <category>showdev</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>frontend</category>
    </item>
    <item>
      <title>How to Deploy a Python Flask App on Heroku Using Docker</title>
      <author>Evan J</author>
      <pubDate>Fri, 25 Jun 2021 15:19:42 +0000</pubDate>
      <link>https://dev.to/ejach/how-to-deploy-a-python-flask-app-on-heroku-using-docker-mpc</link>
      <guid>https://dev.to/ejach/how-to-deploy-a-python-flask-app-on-heroku-using-docker-mpc</guid>
      <description>&lt;p&gt;Hello!&lt;br&gt;
Today I will demonstrate how to deploy a containerized Python Flask application to Heroku using Docker.&lt;br&gt;
This tutorial is separated into four parts:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="#prerequisites"&gt;Prerequisites&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#creating-the-flask-application-using-python"&gt;Creating the Flask application using Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#containerizing-the-application-using-docker"&gt;Containerizing the application using Docker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#deploying-the-container-to-heroku"&gt;Deploying the container to Heroku&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/Flask/"&gt;Flask&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;A &lt;a href="https://docs.docker.com/get-docker/"&gt;Docker&lt;/a&gt; installation&lt;/li&gt;
&lt;li&gt;A &lt;a href="https://signup.heroku.com/"&gt;Heroku&lt;/a&gt; Account / &lt;a href="https://devcenter.heroku.com/articles/heroku-cli"&gt;Heroku CLI&lt;/a&gt; installation&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;
  &lt;a href="#creating-the-flask-application-using-python"&gt;
  &lt;/a&gt;
  Creating the Flask application using Python
&lt;/h3&gt;

&lt;p&gt;We will be creating a "Hello World!" application to maintain simplicity.&lt;br&gt;
The file structure by the end of this tutorial will look like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;‚îú‚îÄ‚îÄ‚îÄFlaskApp
  ‚îî‚îÄ‚îÄ‚îÄapp.py           # Our main application
  ‚îî‚îÄ‚îÄ‚îÄmain.py          # Used by gunicorn to run the app
  ‚îî‚îÄ‚îÄ‚îÄrequirements.txt # The packages we will be using
  ‚îî‚îÄ‚îÄ‚îÄDockerfile       # Used to create the Docker container
  ‚îî‚îÄ‚îÄ‚îÄProcfile         # Used to deploy the container to Heroku
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To start out, create an empty directory using:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ sudo mkdir FlaskApp
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And &lt;code&gt;cd&lt;/code&gt; into the directory using:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ cd FlaskApp
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create two files called &lt;code&gt;app.py&lt;/code&gt; and &lt;code&gt;requirements.txt&lt;/code&gt;.&lt;br&gt;
In requirements.txt, insert the line:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;flask==2.0.1
gunicorn==20.1.0
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, to install the required packages, run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ pip install -r requirements.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then open up &lt;code&gt;app.py&lt;/code&gt; in your favorite code editor and add the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#Import the flask module
from flask import Flask

app = Flask(__name__)

@app.route('/')
def hello_world():
    statement = 'Hello World!'
    return statement

if __name__ == '__main__':
    #Calls the run method, runs the app on port 5000
    app.run(host='0.0.0.0', port='5000')
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, create a file called &lt;code&gt;main.py&lt;/code&gt; and add the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from app import app

# Gets the app from app.py and runs it
if __name__ == "__main__":
    app.run()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then run the program using:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ gunicorn --bind 0.0.0.0:5000 main:app
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And you should get an output that looks like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[2021-06-25 10:33:51 -0400] [1607] [INFO] Starting gunicorn 20.1.0
[2021-06-25 10:33:51 -0400] [1607] [INFO] Listening at: http://0.0.0.0:5000 (1607)
[2021-06-25 10:33:51 -0400] [1607] [INFO] Using worker: sync
[2021-06-25 10:33:51 -0400] [1609] [INFO] Booting worker with pid: 1609
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After accessing the URL that was provided upon executing at &lt;code&gt;http://yourip:5000&lt;/code&gt;, the page should look something like:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FwPz-9Us--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e064agz7vhti6c22pigi.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FwPz-9Us--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e064agz7vhti6c22pigi.PNG" alt="Example Output"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now that your Python Application is up and running, let's go over how to containerize it using Docker.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#containerizing-the-application-using-docker"&gt;
  &lt;/a&gt;
  Containerizing the application using Docker
&lt;/h3&gt;

&lt;p&gt;In your &lt;code&gt;FlaskApp&lt;/code&gt; directory, create a file with &lt;em&gt;no file extension&lt;/em&gt; called &lt;code&gt;Dockerfile&lt;/code&gt; and add the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#Create a ubuntu base image with python 3 installed.
FROM python:3.8

#Set the working directory
WORKDIR /

#copy all the files
COPY . .

#Install the dependencies
RUN apt-get -y update
RUN apt-get update &amp;amp;&amp;amp; apt-get install -y python3 python3-pip
RUN pip3 install -r requirements.txt

#Expose the required port
EXPOSE 5000

#Run the command
CMD gunicorn main:app
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After this, build the Docker image by running:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ docker build -t flask-app .
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And then run it using:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ docker run flask-app
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And you should get the same output as if you were running it normally:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;2021-06-25T15:08:47.958205+00:00 app[web.1]: [2021-06-25 15:08:47 +0000] [5] [INFO] Starting gunicorn 20.1.0
2021-06-25T15:08:47.958983+00:00 app[web.1]: [2021-06-25 15:08:47 +0000] [5] [INFO] Listening at: http://0.0.0.0:5000 (5)
2021-06-25T15:08:47.958983+00:00 app[web.1]: [2021-06-25 15:08:47 +0000] [5] [INFO] Using worker: sync
2021-06-25T15:08:47.962897+00:00 app[web.1]: [2021-06-25 15:08:47 +0000] [7] [INFO] Booting worker with pid: 7
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And you should get the expected output at the given IP address at &lt;code&gt;http://yourip:5000&lt;/code&gt;:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FwPz-9Us--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e064agz7vhti6c22pigi.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FwPz-9Us--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e064agz7vhti6c22pigi.PNG" alt="Example Output"&gt;&lt;/a&gt;&lt;br&gt;
Congratulations! You have successfully created a Flask application and containerized it using Docker!&lt;br&gt;
Now we will go over how to deploy this container to Heroku using their container registry.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#deploying-the-container-to-heroku"&gt;
  &lt;/a&gt;
  Deploying the container to Heroku
&lt;/h3&gt;

&lt;p&gt;Given that the Heroku CLI is installed as stated in the &lt;a href="#prerequisites"&gt;prerequisites&lt;/a&gt;, run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ heroku login
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And you will be prompted to enter your Heroku credentials.&lt;br&gt;
Once logged in, create an application by running:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ heroku create &amp;lt;your_app_name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, login to the Heroku container registry by running:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ heroku container:login
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Which should produce:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Login Succeeded
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In your &lt;code&gt;FlaskApp&lt;/code&gt; directory, create a file with &lt;em&gt;no extension&lt;/em&gt; called &lt;code&gt;Procfile&lt;/code&gt; and add:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;web: gunicorn main:app 0.0.0.0:$PORT
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After that, in our &lt;code&gt;app.py&lt;/code&gt; file, we need to add/modify the following lines marked with arrows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# Import OS to get the port environment variable from the Procfile
import os # &amp;lt;-----
# Import the flask module
from flask import Flask

# Create a Flask constructor. It takes name of the current module as the argument
app = Flask(__name__)

@app.route('/')
def hello_world():
    statement = 'Hello World!'
    return statement


# Create the main driver function
if __name__ == '__main__':
    port = int(os.environ.get("PORT", 5000)) # &amp;lt;-----
    app.run(host='0.0.0.0', port=port)       # &amp;lt;-----
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After editing the file, we must push the container to Heroku using:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ heroku container:push web --app &amp;lt;your_app_name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After your app's container builds, release it to Heroku using:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ heroku container:release web --app &amp;lt;your_app_name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Which will produce the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Releasing images web to &amp;lt;your_app_name&amp;gt;... done
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once it is released, you can access the logs of your new container using:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ heroku logs --tail --app &amp;lt;your_app_name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And you should see something along the lines of:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;2021-06-25T15:08:45.662062+00:00 heroku[web.1]: Starting process with command `/bin/sh -c gunicorn\ main:app`
2021-06-25T15:08:47.958205+00:00 app[web.1]: [2021-06-25 15:08:47 +0000] [5] [INFO] Starting gunicorn 20.1.0
2021-06-25T15:08:47.958983+00:00 app[web.1]: [2021-06-25 15:08:47 +0000] [5] [INFO] Listening at: http://0.0.0.0:34683 (5)
2021-06-25T15:08:47.958983+00:00 app[web.1]: [2021-06-25 15:08:47 +0000] [5] [INFO] Using worker: sync
2021-06-25T15:08:47.962897+00:00 app[web.1]: [2021-06-25 15:08:47 +0000] [7] [INFO] Booting worker with pid: 7
2021-06-25T15:08:48.409823+00:00 heroku[web.1]: State changed from starting to up
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And you should now be able to access your application through your new app's URL with the expected output of:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cmiEBtn2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qf1kc2iwyo7daanohdej.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cmiEBtn2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qf1kc2iwyo7daanohdej.PNG" alt="Heroku Output"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Congratulations! This tutorial has taught you how to create a Python Flask application, containerize it, and then deploy it to Heroku.&lt;/p&gt;

</description>
      <category>docker</category>
      <category>heroku</category>
      <category>python</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>8 Amazing Instant Button Hover Effect </title>
      <author>Nikhil Bobade </author>
      <pubDate>Fri, 25 Jun 2021 15:07:26 +0000</pubDate>
      <link>https://dev.to/nikhil27b/8-amazing-instant-button-hover-effect-2kf9</link>
      <guid>https://dev.to/nikhil27b/8-amazing-instant-button-hover-effect-2kf9</guid>
      <description>&lt;p&gt;Hello,&lt;/p&gt;

&lt;p&gt;Today I have written post about the 8 Amazing Instant Button Hover Effect With using HTML &amp;amp; CSS. This is a very useful effect you can use that in your code. I hope you like this also comments about your thoughts.&lt;br&gt;
For more content follow me on Instagram  &lt;a href="https://www.instagram.com/developer_nikhil27/"&gt;@developer_nikhil27&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Thank you!&lt;/p&gt;
&lt;h5&gt;
  &lt;a href="#checkout-recent-post-"&gt;
  &lt;/a&gt;
  Checkout recent post :
&lt;/h5&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/nikhil27b" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L13Hplw---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--DVAuMQ0j--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/481802/ff897af1-c333-4e04-8f08-d6d1356a1c14.jpeg" alt="nikhil27b"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/nikhil27b/amazing-button-animation-using-html-js-2ga1" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Amazing Button Animation Using HTML &amp;amp; JS&lt;/h2&gt;
      &lt;h3&gt;Nikhil Bobade  „Éª Jun 22 „Éª 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/NikhilBobade/embed/ZEePZrg?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;


&lt;div class="instagram-position"&gt;
  &lt;iframe id="instagram-liquid-tag" src="https://www.instagram.com/p/CPn2eUwBTUp/embed/captioned"&gt;
  &lt;/iframe&gt;
  
&lt;/div&gt;


</description>
      <category>html</category>
      <category>css</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Qr Code Maker | PhP</title>
      <author>Prince Jaiswal</author>
      <pubDate>Fri, 25 Jun 2021 15:02:08 +0000</pubDate>
      <link>https://dev.to/princejaiswal/qr-code-maker-php-4h15</link>
      <guid>https://dev.to/princejaiswal/qr-code-maker-php-4h15</guid>
      <description>&lt;p&gt;Qr Code Maker (Made By PHP)&lt;br&gt;
Info :-&lt;br&gt;
1) You Can Make Qr Code Of Link / location / E-mail/ text /call / sms/ whatsapp /skype /wifi /v-card /paypal &amp;amp; BitCoin .&lt;br&gt;
2) You Can Make Custom Colour / Dots / border / Logo /watermark Of Qr Code .&lt;/p&gt;

&lt;p&gt;See Demo Here - (&lt;a href="https://cutt.ly/UnV4jGm"&gt;https://cutt.ly/UnV4jGm&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Download - &lt;a href="https://www.buymeacoffee.com/webme/e/35245"&gt;Download&lt;/a&gt;&lt;/p&gt;

</description>
      <category>php</category>
      <category>webdev</category>
      <category>qrcode</category>
    </item>
  </channel>
</rss>
