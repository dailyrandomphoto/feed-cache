<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>20 Best CSS3 Library For FrontendDevelopers</title>
      <author>Coding</author>
      <pubDate>Tue, 14 Sep 2021 09:16:34 +0000</pubDate>
      <link>https://dev.to/coderzzz/20-best-css3-library-for-frontenddevelopers-1k95</link>
      <guid>https://dev.to/coderzzz/20-best-css3-library-for-frontenddevelopers-1k95</guid>
      <description>&lt;p&gt;Beautiful CSS was once a time-consuming task for web developers. The CSS libraries have made it easier, quicker, and more efficient to create responsive websites and web apps.&lt;br&gt;Are you still searching for the best CSS libraries available? Are you curious to find out which library is best? This article contains 20 top CSS libraries that will inspire you.&lt;br&gt;&lt;br&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/20-best-css3-library-for-developers/&amp;amp;ved=2ahUKEwi2tZmq3-vyAhUjieYKHVWMAFMQFnoECAoQAQ&amp;amp;usg=AOvVaw2AtoxfMkY_y5JPLB2VuSdV"&gt;20 Best CSS3 Library For Developers&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Top 10 Must Know JavaScript Functions!
</title>
      <author>TheDailyTechTalk</author>
      <pubDate>Tue, 14 Sep 2021 09:15:18 +0000</pubDate>
      <link>https://dev.to/thedailytechtalk/top-10-must-know-javascript-functions-1dm9</link>
      <guid>https://dev.to/thedailytechtalk/top-10-must-know-javascript-functions-1dm9</guid>
      <description>&lt;p&gt;&lt;em&gt;I recently started a new blog &lt;a href="https://thedailytechtalk.com"&gt;TheDailyTechTalk&lt;/a&gt; where I create free content. If you liked this post and would like to read more posts about JavaScript please check it out üéâüéâ&lt;br&gt;
ü•∞&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If you like what I write and want to support me, please follow me on &lt;a href="https://twitter.com/TheDailyTechTa1"&gt;Twitter&lt;/a&gt; to learn more about programming and similar topics ‚ù§Ô∏è‚ù§Ô∏è&lt;/strong&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#top-10-mustknow-javascript-functions"&gt;
  &lt;/a&gt;
  Top 10 Must-Know JavaScript Functions
&lt;/h1&gt;

&lt;p&gt;Please check out full &lt;a href="https://www.thedailytechtalk.com/top-10-must-know-javascript-functions"&gt;article here&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#1-filter"&gt;
  &lt;/a&gt;
  1 filter()
&lt;/h2&gt;

&lt;p&gt;This function filters an array based on the condition you provide and it returns a new array which contains items which satisfy those conditions.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;filter()&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const temperatures = [10, 2, 30.5, 23, 41, 11.5, 3];

const coldDays = temperatures.filter(dayTemperature =&amp;gt; {
    return dayTemperature &amp;lt; 20;
});

console.log("Total cold days in week were: " + coldDays.length); // 4
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#2-map"&gt;
  &lt;/a&gt;
  2 map()
&lt;/h2&gt;

&lt;p&gt;Function &lt;code&gt;map()&lt;/code&gt; is a very simple, it loops over an array and convert each item into something else.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const readings = [10, 15, 22.5, 11, 21, 6.5, 93];
const correctedReadings = readings.map(reading =&amp;gt; reading + 1.5);
console.log(correctedReadings); // gives [11.5, 16.5, 24, 12.5, 22.5, 8, 94.5]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#3-some"&gt;
  &lt;/a&gt;
  3 some()
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;some()&lt;/code&gt; is very similar to &lt;code&gt;filter()&lt;/code&gt; , but &lt;code&gt;some()&lt;/code&gt; returns boolean instead.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const animals = [
    {
        name: 'Dog',
        age: 2
    },

    {
        name: 'Cat',
        age: 8
    },

     {
        name: 'Sloth',
        age: 6
    },
];

if(animals.some(animal =&amp;gt; {
    return animal.age &amp;gt; 4
})) {
    console.log("Found some animals!")
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#4-every"&gt;
  &lt;/a&gt;
  4 every()
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;every()&lt;/code&gt;  is also very similar to &lt;code&gt;some()&lt;/code&gt; , but &lt;code&gt;every()&lt;/code&gt; true only if every single element in array satisfy our condition.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const isBelowThreshold = (currentValue) =&amp;gt; currentValue &amp;lt; 40;

const array1 = [1, 30, 39, 29, 10, 13];

console.log(array1.every(isBelowThreshold));   // true
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#5-shift"&gt;
  &lt;/a&gt;
  5 shift()
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;shift()&lt;/code&gt; method removes the first element from an array and returns removed element. This method changes the length of the array.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const items = ['meat', 'carrot', 'ham', 'bread', 'fish'];
items.shift()
console.log(items); // ['carrot', 'ham', 'bread', 'fish']
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#6-unshift"&gt;
  &lt;/a&gt;
  6 unshift()
&lt;/h2&gt;

&lt;p&gt;Just like  &lt;code&gt;shift()&lt;/code&gt; method removes the first element from an array &lt;code&gt;unshift()&lt;/code&gt; adds it. This method changes the length of the array and returns the new length of the array as result.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const items = ['milk', 'fish'];
items.unshift('cookie')
console.log(items); // ['cookie', 'milk', 'fish']
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#7-slice"&gt;
  &lt;/a&gt;
  7 slice()
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;slice()&lt;/code&gt; method returns a shallow copy of a portion of an array into a new array object selected from start to end (end not included) where start and end represent the index of items in that array. The original array will not be modified.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let message = "The quick brown fox jumps over the lazy dog";
let startIndex = message.indexOf('brown');
let endIndex = message.indexOf('jumps');
let newMessage = message.slice(startIndex, endIndex);
console.log(newMessage); // "brown fox "
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#8-splice"&gt;
  &lt;/a&gt;
  8 splice()
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;splice()&lt;/code&gt; below start at index 2 (the third place, count starts from 0!! ) of the array, and remove one item.&lt;br&gt;
In our array that would mean that "rabbit" got removed. &lt;code&gt;splice()&lt;/code&gt; will return new array as result.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const animals = ['dog', 'cat', 'rabbit', 'shark', 'sloth'];
animals.splice(2, 1);
console.log(animals); // ["dog", "cat", "shark", "sloth"]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#9-includes"&gt;
  &lt;/a&gt;
  9 includes()
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;includes()&lt;/code&gt; will check every item in the array, and check if any of them includes our condition. It will return boolean.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const array1 = [1, 2, 3];

console.log(array1.includes(2));
// expected output: true

const pets = ['cat', 'dog', 'bat'];

console.log(pets.includes('cat'));  //  true

console.log(pets.includes('at'));  //  false
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#10-reverse"&gt;
  &lt;/a&gt;
  10 reverse()
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;reverse()&lt;/code&gt; method reverses an array. Be careful since &lt;code&gt;reverse()&lt;/code&gt; is destructive which means it changes the original array.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const array1 = ['one', 'two', 'three', 'four'];
console.log(array1);  //  ["one", "two", "three", "four"]

const reversed = array1.reverse();
console.log(reversed);  //  ["four", "three", "two", "one"]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;I recently started a new blog &lt;a href="https://thedailytechtalk.com"&gt;TheDailyTechTalk&lt;/a&gt; where I create free content. If you liked this post and would like to read more posts about JavaScript please check it out üéâüéâ&lt;br&gt;
ü•∞&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If you like what I write and want to support me, please follow me on &lt;a href="https://twitter.com/TheDailyTechTa1"&gt;Twitter&lt;/a&gt; to learn more about programming and similar topics ‚ù§Ô∏è‚ù§Ô∏è&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>react</category>
      <category>programming</category>
    </item>
    <item>
      <title>Exploring JavaScript console object and logging! </title>
      <author>TheDailyTechTalk</author>
      <pubDate>Tue, 14 Sep 2021 09:12:27 +0000</pubDate>
      <link>https://dev.to/thedailytechtalk/exploring-javascript-console-object-and-logging-5079</link>
      <guid>https://dev.to/thedailytechtalk/exploring-javascript-console-object-and-logging-5079</guid>
      <description>&lt;p&gt;&lt;strong&gt;If you like what I write and want to support me, please follow me on &lt;a href="https://twitter.com/TheDailyTechTa1"&gt;Twitter&lt;/a&gt; to learn more about programming and similar topics ‚ù§Ô∏è‚ù§Ô∏è&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#javascript-console"&gt;
  &lt;/a&gt;
  JavaScript Console
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;The console object provides access to the browser's debugging console (e.g. the Web console in Firefox). The specifics of how it works varies from browser to browser, but there is a de facto set of features that are typically provided.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Most developers usually use &lt;code&gt;console.log()&lt;/code&gt; to debug JavaScript code, but &lt;code&gt;console&lt;/code&gt; provides us with such a powerful set of features it would be shame not to use them, or at least know what they do.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;console.log()&lt;/code&gt; For general output of logging information.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;console.info()&lt;/code&gt; Informative logging of information.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;console.warn()&lt;/code&gt; Outputs a warning message.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;console.error()&lt;/code&gt; Outputs an error message to the Web console.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Using other logging besides &lt;code&gt;console.log()&lt;/code&gt; will provide you with more informative and clearer logs.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--d1haIhfp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4rh74jy8pa4thcj7duem.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d1haIhfp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4rh74jy8pa4thcj7duem.png" alt="console logging example"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lets-start-by-exploring-console-object"&gt;
  &lt;/a&gt;
  Lets start by exploring console object
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Umad8Mcy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0kwlj6wc7wgj0e8q7gqa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Umad8Mcy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0kwlj6wc7wgj0e8q7gqa.png" alt="console"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As we can see Console object has plenty of methods. Lets explore some of more useful ones.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#consoleclear"&gt;
  &lt;/a&gt;
  console.clear()
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;console.clear()&lt;/code&gt; clear the console.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#consoledir"&gt;
  &lt;/a&gt;
  console.dir()
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;console.log()&lt;/code&gt; prints the object in its string representation while &lt;code&gt;console.dir()&lt;/code&gt; recognizes the object as an object and prints it‚Äôs properties in the form of a clean expandable list.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;dog&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Rex&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;friends&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;cat&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dog&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;duck&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]};&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dog&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8vAS9R3m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e0uarwub9qbw15xjf90r.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8vAS9R3m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e0uarwub9qbw15xjf90r.PNG" alt="console.dir()"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#consoletable"&gt;
  &lt;/a&gt;
  console.table()
&lt;/h2&gt;

&lt;p&gt;With &lt;code&gt;console.table()&lt;/code&gt; we can create beautiful tables. This is probably my favourite &lt;code&gt;console&lt;/code&gt; method.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7zZoO7dI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1eka7eaofk3p3twymy0g.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7zZoO7dI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1eka7eaofk3p3twymy0g.PNG" alt="console.table"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#consoletime-consoletimelog-and-consoletimeend"&gt;
  &lt;/a&gt;
  console.time(), console.timeLog() and console.timeEnd()
&lt;/h2&gt;

&lt;p&gt;Use &lt;code&gt;console.time()&lt;/code&gt; to start a timer.&lt;br&gt;
Use &lt;code&gt;console.timeLog()&lt;/code&gt; to print time elapsed since the timer started.&lt;br&gt;
Use &lt;code&gt;console.timeEnd()&lt;/code&gt; to print the total amount of time since &lt;code&gt;console.time()&lt;/code&gt; started.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dtzQJKQL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/01eoysbgw6q8uw7r7025.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dtzQJKQL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/01eoysbgw6q8uw7r7025.PNG" alt="console.table()"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#consolegroup-and-consolegroupend"&gt;
  &lt;/a&gt;
  console.group() and console.groupEnd()
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;The console.group() method creates a new inline group in the Web console log. This indents following console messages by an additional level, until console.groupEnd() is called.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3_xctQCp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zvyy14yey3zykvxy37rm.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3_xctQCp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zvyy14yey3zykvxy37rm.PNG" alt="group"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#console-logging-with-css"&gt;
  &lt;/a&gt;
  console logging with CSS
&lt;/h2&gt;

&lt;p&gt;This works with most console method such as &lt;code&gt;.log()&lt;/code&gt;, &lt;code&gt;.warn()&lt;/code&gt;, &lt;code&gt;.error()&lt;/code&gt; etc.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;Please note that we have to use '%c' for css to work!&lt;/strong&gt;&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;%cTheDailyTechTalk!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;color:red;font-family:system-ui;font-size:4rem;-webkit-text-stroke: 1px black;font-weight:bold&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
      &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0AZfb8VJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zxl8cpeg8znxtypzpubb.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0AZfb8VJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zxl8cpeg8znxtypzpubb.PNG" alt="group"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;I recently started a new blog &lt;a href="https://thedailytechtalk.com"&gt;TheDailyTechTalk&lt;/a&gt; where I create free content. If you liked this post and would like to read more posts about javascript please check it out üéâüéâ&lt;br&gt;
ü•∞&lt;/em&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>react</category>
      <category>beginners</category>
    </item>
    <item>
      <title>7 Best Tools For Developers - They Can't Live Without It</title>
      <author>Coding</author>
      <pubDate>Tue, 14 Sep 2021 08:49:01 +0000</pubDate>
      <link>https://dev.to/coderzzz/7-best-tools-for-developers-they-can-t-live-without-it-h58</link>
      <guid>https://dev.to/coderzzz/7-best-tools-for-developers-they-can-t-live-without-it-h58</guid>
      <description>&lt;p&gt;¬†&lt;span&gt;The&lt;/span&gt;&lt;span&gt;¬†&lt;/span&gt;&lt;b&gt;best tools for developers¬†&lt;/b&gt;&lt;span&gt;are a priority for them to work. As a developer, he always works with code editors, browsers, terminals, etc. to improve his productivity. VS Code is one of the best editors, every developer would like to work with it. I've also listed the&lt;/span&gt;&lt;span&gt;¬†&lt;/span&gt;VS Code extensions for JS¬†&lt;span&gt;that are useful for a developer. And browser extensions are also a great way to improve productivity and I've also listed&lt;/span&gt;&lt;span&gt;¬†&lt;/span&gt;&lt;b&gt;Chrome extensions for a developer&lt;/b&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;If you are a junior programmer, this will give you an idea the improve your coding skills, and if you are a senior developer, you are still learn something new from it. Extensions are one the¬†&lt;b&gt;best tools for developers.&lt;/b&gt;&lt;/span&gt;&lt;span&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/span&gt;&lt;span&gt;Let's see the best tools for developers.&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;Read More: &lt;b&gt;&lt;a href="https://www.codelivly.com/7-best-tools-for-developers-they-cant-live-without-it/"&gt;7 Best Tools For Developers - They Can't Live Without It&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;

</description>
    </item>
    <item>
      <title>10 Awesome Github Repos Every Web Developer Should Must Use</title>
      <author>Coding</author>
      <pubDate>Tue, 14 Sep 2021 08:04:44 +0000</pubDate>
      <link>https://dev.to/coderzzz/10-awesome-github-repos-every-web-developer-should-must-use-ho0</link>
      <guid>https://dev.to/coderzzz/10-awesome-github-repos-every-web-developer-should-must-use-ho0</guid>
      <description>&lt;p&gt;&lt;span&gt;Here I list 10 excellent JavaScript based GitHub resources that will help you to understand the language better and help you to write clean code. This list is based on my personal preference.¬†&lt;/span&gt;&lt;/p&gt;
&lt;span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;Read More: &lt;b&gt;&lt;a href="https://news.google.com/articles/CAIiEHRNZDbK-6L3wLhhd1mvgX8qGQgEKhAIACoHCAow7-ynCzDc978DMKOIlgc?hl=en-US&amp;amp;gl=US&amp;amp;ceid=US%3Aen"&gt;10 Awesome Github Repos Every Web Developer Should Know&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;

</description>
    </item>
    <item>
      <title>Top VSCODE Themes Ruling Whole World</title>
      <author>Coding</author>
      <pubDate>Tue, 14 Sep 2021 08:03:48 +0000</pubDate>
      <link>https://dev.to/coderzzz/top-vscode-themes-ruling-whole-world-4bob</link>
      <guid>https://dev.to/coderzzz/top-vscode-themes-ruling-whole-world-4bob</guid>
      <description>&lt;p&gt;Looking for a new Visual Studio Code theme?&lt;/p&gt;
&lt;span&gt;Developers can be finicky about what themes round out their perfect code editor and IDE setups. Picking the right theme after getting the nuts-and-bolts functionality down pat can top off a customized coding environment. Luckily for Visual Studio Code users, there are some 5,000 options to choose from in the VS Code Marketplace. That's a lot, though, so we are kindly helping you make your decision by presenting the top theme extensions as measured by the number of installations. Here's a summary of the current extensions that have been installed more than 1 million times, of which there are six:&lt;/span&gt;&lt;br&gt;&lt;br&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/top-10-vs-code-themes/&amp;amp;ved=2ahUKEwimjZP13-vyAhUChuYKHRKkBtIQFnoECAYQAQ&amp;amp;usg=AOvVaw3o3mOOtWb6qQgnkASjEGXG"&gt;Top Vscode Themes&lt;/a&gt;&lt;/b&gt;

</description>
    </item>
    <item>
      <title>Array methods that you should know</title>
      <author>Abdullah Furkan √ñzbek</author>
      <pubDate>Tue, 14 Sep 2021 08:02:16 +0000</pubDate>
      <link>https://dev.to/afozbek/array-methods-that-you-should-know-j0m</link>
      <guid>https://dev.to/afozbek/array-methods-that-you-should-know-j0m</guid>
      <description>&lt;h2&gt;
  &lt;a href="#1-findindex"&gt;
  &lt;/a&gt;
  1- findIndex
&lt;/h2&gt;

&lt;p&gt;The findIndex() method returns the index of the first element in the array that satisfies the provided testing function. Otherwise, it returns -1, indicating that no element passed the test.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;array1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;130&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;44&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isLargeNumber&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;element&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;array1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;findIndex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isLargeNumber&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="c1"&gt;// expected output: 3&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;find() method, which returns the value of an array element, instead of its index.&lt;/li&gt;
&lt;li&gt;Returns The index of the first element in the array that passes the test. Otherwise, -1.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// EXAMPLE 1&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;isPrime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;findIndex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isPrime&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// -1, not found&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;findIndex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isPrime&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// 2 (array[2] is 7)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// EXAMPLE 2&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fruits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;apple&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;banana&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;cantaloupe&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;blueberries&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;grapefruit&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;fruits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;findIndex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fruit&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;fruit&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;blueberries&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 3&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fruits&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt; &lt;span class="c1"&gt;// blueberries&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#2-includes"&gt;
  &lt;/a&gt;
  2- includes
&lt;/h2&gt;

&lt;p&gt;The includes() method determines whether an array includes a certain value among its entries, returning true or false as appropriate.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;array1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;array1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="c1"&gt;// expected output: true&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;pets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;cat&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dog&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;bat&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;pets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;cat&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="c1"&gt;// expected output: true&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;pets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;at&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="c1"&gt;// expected output: false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;When comparing strings and characters, includes() is case-sensitive.&lt;/li&gt;
&lt;li&gt;Returns: A Boolean which is true if the value searchElement is found within the array (or the part of the array indicated by the index fromIndex, if specified).&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#3-isarray"&gt;
  &lt;/a&gt;
  3- isArray
&lt;/h2&gt;

&lt;p&gt;The Array.isArray() method determines whether the passed value is an Array.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isArray&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;  &lt;span class="c1"&gt;// true&lt;/span&gt;
&lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isArray&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt; &lt;span class="c1"&gt;// false&lt;/span&gt;
&lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isArray&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;foobar&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   &lt;span class="c1"&gt;// false&lt;/span&gt;
&lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isArray&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="c1"&gt;// false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Returns true if the value is an Array; otherwise, false.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#4-some"&gt;
  &lt;/a&gt;
  4- Some
&lt;/h2&gt;

&lt;p&gt;The some() method tests whether at least one element in the array passes the test implemented by the provided function. It returns true if, in the array, it finds an element for which the provided function returns true; otherwise it returns false. It doesn't modify the array.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;array&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="c1"&gt;// checks whether an element is even&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;even&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;element&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;some&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;even&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="c1"&gt;// expected output: true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Returns true if the callback function returns a truthy value for at least one element in the array. Otherwise, false.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#links"&gt;
  &lt;/a&gt;
  Links
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array"&gt;MDN Docs | Array&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>100daysofcode</category>
    </item>
    <item>
      <title>3 years of blogging - Here's how it all started!</title>
      <author>Gourav Khunger</author>
      <pubDate>Tue, 14 Sep 2021 07:56:42 +0000</pubDate>
      <link>https://dev.to/gouravkhunger/3-years-of-blogging-here-s-how-it-all-started-jcd</link>
      <guid>https://dev.to/gouravkhunger/3-years-of-blogging-here-s-how-it-all-started-jcd</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://genicsblog.com/3-years-of-blogging"&gt;Read this article on my blog&lt;/a&gt; for a better experience!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Hello there!&lt;/p&gt;

&lt;p&gt;I am really excited to share my journey in technical writing and how I got into it! First, I am really thankful to &lt;a href="https://hashnode.com"&gt;hashnode&lt;/a&gt; for providing us with an amazing &lt;a href="https://hashnode.com/bootcamp"&gt;bootcamp&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Yesterday was the first session of the Bootcamp hosted by &lt;a href="https://hashnode.com/@tanoaksam"&gt;Sam Sycamore&lt;/a&gt;, where &lt;a href="https://hashnode.com/@quincy"&gt;Quincy Larson&lt;/a&gt; and &lt;a href="https://hashnode.com/@didicodes"&gt;Edidiong Asikpo&lt;/a&gt; shared amazing tips on technical writing which really helped a lot!&lt;/p&gt;

&lt;p&gt;Here in this article, I am going to share my background in technical writing - from where it started where it is heading towards and what is my vision. I would also include some tips at the end for you which I learned by hit and trial, the hard way üòÇ.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#flashback-2018"&gt;
  &lt;/a&gt;
  Flashback 2018
&lt;/h2&gt;

&lt;p&gt;I was in 8th grade back then, and I was trying to learn android app development from an amazing book by J. F. Dimarzio titled "&lt;a href="https://amzn.to/3A93YMM"&gt;Beginning Android Programming with Android Studio&lt;/a&gt;".&lt;/p&gt;

&lt;p&gt;&lt;a href="https://amzn.to/3A93YMM"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X_HdviZ2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631599770243/LwI6JWpNE.jpeg" alt="Beginning Android Development with Android Studio Book"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I had also learned basic web dev skills like HTML and CSS. Javascript, or broadly, web dev didn't appeal to me that much so I went to learn native app development. I didn't know about frameworks like Vue or React back then, so that was it.&lt;/p&gt;

&lt;p&gt;At that time, I found out various resources and learned a lot of things from other's blogs, but sometimes, though I could understand the concepts, it just happened that the article wasn't that well written or it was hard to understand all by reading, and some struggle was needed. In short, it wasn't that beginner-friendly.&lt;/p&gt;

&lt;p&gt;I would sometimes also want to document things I learn because teaching someone else makes your own concepts stronger, and that is more powerful than just reading and practicing.&lt;/p&gt;

&lt;p&gt;The above things were accompanied by my thoughts of having my own place on the internet where I could share things I love about, and have the world read them. And that's how I started with blogging.&lt;/p&gt;

&lt;p&gt;At first, I came to know about blogger- Google's service that allows you to make minimal blogs. It was actually a good start for beginners who wished to make a simple blog. &lt;em&gt;But&lt;/em&gt;, it turned out it was not a good fit to make a developer blog.&lt;/p&gt;

&lt;p&gt;From there, I turned to many platforms, from blogger to WordPress, from WordPress to medium and dev community, but none could give the freedom of owning your own content- and having all the SEO juice to your own domain. That's where hashnode came in and I quickly migrated and use it as my daily driver for blogging!&lt;/p&gt;




&lt;p&gt;If you wish to read more on my story of switching between different platforms and choosing hashnode at the end, do read this article: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://genicsblog.com/introductory-first-post"&gt;https://genicsblog.com/introductory-first-post&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;And yeah, it has been 3 years since I started blogging and I have learned a lot through the way! From making an article enjoyable for the readers to improving my English- and even making good friends in the community. I also feel blessed to have the opportunity to help others through my articles!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#my-motivation"&gt;
  &lt;/a&gt;
  My motivation
&lt;/h2&gt;

&lt;p&gt;Everyone needs some motivation to keep doing a thing, and if they love what they do, the motivation manifests from the passion for the work itself!&lt;/p&gt;

&lt;p&gt;It's similar in my case. I really enjoy programming and I can sit hours coding an app. I really love how what we code actually works in real life- designing the UI and embracing it.&lt;/p&gt;

&lt;p&gt;And this passion for programming motivates me to write about it on this blog. The comments and feedback from the community really help to keep up the spirit.&lt;/p&gt;

&lt;p&gt;Sometimes it's hard to keep writing because there are other things to consider, like schooling and studies, but I do write when I am bored from other work because it gives refreshment from the usual routine!&lt;/p&gt;

&lt;p&gt;There are other ways I keep myself motivated- by challenging myself for each article I write, aiming for at least x views per post, and then sharing it to different platforms, it just feels good even if I get 100 views on an article and I feel it was worth my time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#my-goals"&gt;
  &lt;/a&gt;
  My goals
&lt;/h2&gt;

&lt;p&gt;As far as this blog is concerned, I wish to take it up to 10k views a month, which is 10x to the current scenario. For that, I spend time on on-site and off-site SEO and my small efforts have started to make a difference.&lt;/p&gt;

&lt;p&gt;Here's an image from the Google search console about this blog's analytics for the past one and a half years.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8-fAD4gx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631601870247/zyuBYbzn7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8-fAD4gx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631601870247/zyuBYbzn7.png" alt="Genics Blog Analytics From Google Search Console Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There used to be good traffic earlier because I wrote consistently when I was on WordPress, but then I had left blogging for some months, mostly because studies became dominant.&lt;/p&gt;

&lt;p&gt;But then I started again on hashnode, and I was happy to regain the impressions I generally used to get, all because of hashnode. &lt;/p&gt;

&lt;p&gt;Hashnode is really awesome platform because it allows you to post your content on your blog, but at the same time they circulate the article on their platform, so you'll always have a base audience ready! And since the content remains on your domain, you get all the SEO benefits :)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://hashnode.com/@gouravkhunger/joinme"&gt;Join hashnode now&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;Also, on a side note, I am looking forward to learning some new technologies and write about them, so follow me on hashnode to stay updated with what I post.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#some-tips-for-new-writers"&gt;
  &lt;/a&gt;
  Some tips for new writers
&lt;/h2&gt;

&lt;p&gt;Now is the time to share some things I learned over time!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dont-fear-what-others-will-think-about-your-article"&gt;
  &lt;/a&gt;
  Don't fear what others will think about your article
&lt;/h3&gt;

&lt;p&gt;Many people face this! Even I used to be conscious about each word I wrote when I was new to blogging. But with different experiments, I found out the more informal you write a tutorial or any kind of article, the better it is perceived by people.&lt;/p&gt;

&lt;p&gt;It is hard to keep up with formal language- otherwise, what's the need for blogs, documentations would have been enough for the people to understand things üòÇ.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#avoid-slangs"&gt;
  &lt;/a&gt;
  Avoid slangs
&lt;/h3&gt;

&lt;p&gt;The point just discussed doesn't mean you should be using different internet slangs to make your article informal. That can actually put a bad impact.&lt;/p&gt;

&lt;p&gt;What I do is I speak what I am writing, just as if you are conversing with someone and explaining the tech you are writing about. That helps to write articles that are easy to understand and at the same time write articles that don't bore the reader.&lt;/p&gt;

&lt;p&gt;Here's another thing I usually do, and it was also shared by @&lt;a href="https://dev.to@didicodes"&gt;Edidiong Asikpo&lt;/a&gt; during the Bootcamp session yesterday:&lt;/p&gt;

&lt;p&gt;To improve your writing skills, you can try to write an article and read it as if you don't even know who has written it, that helps to point out parts of the article that are hard to understand and also fix any grammatical issues, speaking of which, I recommend you to use &lt;a href="https://grammarly.com"&gt;grammarly&lt;/a&gt; üòÄ&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#its-ok-to-make-mistakes"&gt;
  &lt;/a&gt;
  It's ok to make mistakes
&lt;/h3&gt;

&lt;p&gt;Mistakes are how you learn things. Nobody is born perfect =)&lt;/p&gt;

&lt;p&gt;It's ok if you can't write good words, or if your English fluency is a hurdle, just start going with the flow, and over time, you'll become better at the skill.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#focus-on-a-niche-that-you-are-passionate-about"&gt;
  &lt;/a&gt;
  Focus on a niche that you are passionate about
&lt;/h3&gt;

&lt;p&gt;It's hard to come up with article ideas if you start writing about tech that you don't enjoy. Find out what you like because that can help you stay consistent. Also, you yourself will enjoy the researching process when you wish to explore new things about the tech that you didn't know.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#keep-the-interaction-going"&gt;
  &lt;/a&gt;
  Keep the interaction going
&lt;/h3&gt;

&lt;p&gt;You should try to reply to each comment your post gets, because that invokes interaction and builds trust around your blog, and if your blog is an active community- people are likely to come back to read your articles again!&lt;/p&gt;

&lt;p&gt;You can make an email newsletter too- that helps to regain users. You know what? Hashnode blogs get an email newsletter feature completely free! What are you waiting for? &lt;a href="https://hashnode.com/@gouravkhunger/joinme"&gt;Join hashnode&lt;/a&gt; and start blogging in minutes!&lt;/p&gt;

&lt;p&gt;Here's one of my in-depth articles about some of the mistakes I had been making in blogging, which you should stop making right away!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://genicsblog.com/mistakes-that-beginners-do-in-blogging-dont-make-these-yourself"&gt;https://genicsblog.com/mistakes-that-beginners-do-in-blogging-dont-make-these-yourself&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-words"&gt;
  &lt;/a&gt;
  Final words
&lt;/h2&gt;

&lt;p&gt;I hope you enjoyed the article and took away something from it - thanks for reading so far! I would appreciate it if you could take 5 more minutes to write down your opinions and feedback :)&lt;/p&gt;

</description>
      <category>blogging</category>
      <category>tips</category>
      <category>motivation</category>
    </item>
    <item>
      <title>Deploy Django Site on Qovery for free</title>
      <author>Rachit Khurana</author>
      <pubDate>Tue, 14 Sep 2021 07:29:48 +0000</pubDate>
      <link>https://dev.to/dilutewater/deploy-django-site-on-qovery-for-free-2gfk</link>
      <guid>https://dev.to/dilutewater/deploy-django-site-on-qovery-for-free-2gfk</guid>
      <description>&lt;p&gt;Coding a Django website is pretty simple, but deploying it online could be a tedious &amp;amp; a complicated task for beginners(including me). Hence here is a complete guide on how to host your Django site for free on &lt;a href="https://www.qovery.com/"&gt;Qovery&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This is basically a guide on how to modify you Django application to make it work on Qovery. For guide on how to make the application &amp;amp; deploy on Qovery check out this guide :&lt;br&gt;
&lt;a href="https://hub.qovery.com/guides/tutorial/deploy-django-with-postgresql/"&gt;https://hub.qovery.com/guides/tutorial/deploy-django-with-postgresql/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So I'm assuming you have already made your Django project and made a github/gitlab repository &amp;amp; it is working perfectly on your local machine. I'm also assuming that you have a Qovery account &amp;amp; have created an project as well as an environment for the same. (From github/gitlab repository)&lt;/p&gt;

&lt;p&gt;I will be taking my TriviaQuiz Django Site for reference.&lt;/p&gt;

&lt;p&gt;Here is my initial repository that was working perfectly on my local machine:&lt;br&gt;
&lt;a href="https://gitlab.com/rachitkhurana40/trivia-quiz-initial"&gt;https://gitlab.com/rachitkhurana40/trivia-quiz-initial&lt;/a&gt; &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#setting-up-the-webserver"&gt;
  &lt;/a&gt;
  Setting up the Webserver
&lt;/h2&gt;

&lt;p&gt;Qovery basically hosts your application through a docker container and need a webserver to run on. So we can use &lt;a href="https://pypi.org/project/gunicorn/"&gt;gunicorn&lt;/a&gt;. Its a pretty simple python webserver. &lt;br&gt;
You just need to install it using pip &amp;amp; add it to your requirements.txt file&lt;/p&gt;

&lt;p&gt;Django automatically generates a wsgi.py file that is required by gunicorn to run the server. &lt;br&gt;
Now the startup command will be&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;gunicorn &amp;lt;yourprojectname&amp;gt;.wsgi
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For mine it will be&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;gunicorn triviaquiz.wsgi
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#making-dockerfile"&gt;
  &lt;/a&gt;
  Making Dockerfile
&lt;/h2&gt;

&lt;p&gt;Qovery hosts your application through a docker container. So the next thing we need to do is make a Dockerfile&lt;/p&gt;

&lt;p&gt;A Dockerfile is just a text document with all the commands required to build your application in a docker container. &lt;/p&gt;

&lt;p&gt;Don't worry you won't need to learn Docker just for hosting. &lt;/p&gt;

&lt;p&gt;You can you my Dockerfile for the same. most probably it will work with your Django Project too.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;FROM python:3
WORKDIR /app
COPY . .
RUN pip install -r requirements.txt
RUN python manage.py makemigrations
RUN python manage.py migrate
EXPOSE 8000
CMD ["gunicorn","&amp;lt;yourprojectname&amp;gt;.wsgi","--bind","0.0.0.0:8000"]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For my project it is&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;FROM python:3
WORKDIR /app
COPY . .
RUN pip install -r requirements.txt
RUN python manage.py makemigrations
RUN python manage.py migrate
EXPOSE 8000
CMD ["gunicorn","triviaquiz.wsgi","--bind","0.0.0.0:8000"]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Dockerfile is doesn't have an extension&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#static-files"&gt;
  &lt;/a&gt;
  Static Files
&lt;/h2&gt;

&lt;p&gt;Serving static files for the website is important. Otherwise most of your static assets (like css , js files) won't be shown on the site. &lt;/p&gt;

&lt;p&gt;For serving static files we will use &lt;a href="http://whitenoise.evans.io/en/stable/"&gt;whitenoise&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can install it using pip and also add it to your requirements.txt.&lt;/p&gt;

&lt;p&gt;After that you just need to add whitenoise (&lt;code&gt;whitenoise.middleware.WhiteNoiseMiddleware&lt;/code&gt;) to your django middleware in your project's settings.py file. &lt;br&gt;
&lt;strong&gt;Note:&lt;/strong&gt; Add the whitenoise middleware after Django‚Äôs SecurityMiddleware( &lt;code&gt;django.middleware.security.SecurityMiddleware&lt;/code&gt;)&lt;br&gt;
. For eg:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;MIDDLEWARE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s"&gt;'django.middleware.security.SecurityMiddleware'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;'whitenoise.middleware.WhiteNoiseMiddleware'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;'django.contrib.sessions.middleware.SessionMiddleware'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;'django.middleware.common.CommonMiddleware'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;'django.middleware.csrf.CsrfViewMiddleware'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;'django.contrib.auth.middleware.AuthenticationMiddleware'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;'django.contrib.messages.middleware.MessageMiddleware'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;'django.middleware.clickjacking.XFrameOptionsMiddleware'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice the whitenoise middleware in 2nd line. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#forevercacheable-files-and-compression-support-optional"&gt;
  &lt;/a&gt;
  Forever-cacheable files and compression support (Optional)
&lt;/h3&gt;

&lt;p&gt;Just add this to your settings.py:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;STATICFILES_STORAGE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'whitenoise.storage.CompressedManifestStaticFilesStorage'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#database"&gt;
  &lt;/a&gt;
  Database
&lt;/h2&gt;

&lt;p&gt;The next thing we need to do is change the database from sqlite to Either postgres or Mysql on Qovery. &lt;/p&gt;

&lt;p&gt;You might be wondering why should we do that? The simple answer is the sqlite database resets everytime you deploy your site. &lt;br&gt;
Since sqlite is just a file, it gets overwritten everytime you make even a small change in your code &amp;amp; deploy it. &lt;/p&gt;

&lt;p&gt;Hence we will be using Postgres database from Qovery. &lt;/p&gt;

&lt;p&gt;First create a postgres database in Qovery&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xod4W5UO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8thmhm3mdxtewp00nkdt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xod4W5UO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8thmhm3mdxtewp00nkdt.png" alt="Make a postgres DB"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After creating, go to its actions and deploy it. &lt;br&gt;
After deploying it, I would recommend you to restart it , it gets optimised by doing that. &lt;/p&gt;

&lt;p&gt;Next we need to use this database in our Django app. &lt;br&gt;
For that we need to make some changes in settings.py file. &lt;/p&gt;

&lt;p&gt;By default Django uses sqlite database &amp;amp; has the following code in settings.py file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;
&lt;span class="n"&gt;DATABASES&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s"&gt;'default'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s"&gt;'ENGINE'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'django.db.backends.sqlite3'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;'NAME'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;BASE_DIR&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="s"&gt;'db.sqlite3'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But we will be using Postgres for our app. Hence will need to install &lt;a href="https://pypi.org/project/psycopg2/"&gt;psycopg2&lt;/a&gt; &amp;amp; also add it to the requirements.txt file.&lt;/p&gt;

&lt;p&gt;After that we need to change the database config in settings.py file to&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;DATABASES&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s"&gt;'default'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s"&gt;'ENGINE'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'django.db.backends.postgresql_psycopg2'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;'NAME'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'&amp;lt;DBNAME&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'postgres'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="s"&gt;'USER'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'&amp;lt;DG_LOGIN&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'postgres'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="s"&gt;'PASSWORD'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'PASS'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="s"&gt;'HOST'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'&amp;lt;DB_HOST&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;'&amp;lt;host_url&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="s"&gt;'PORT'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'&amp;lt;DB_PORT&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5432&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;All the things with &amp;lt;&amp;gt; needs to be modified. &lt;br&gt;
 can be found in your qovery's Environment variables and would be something like &lt;code&gt;QOVERY_POSTGRESQL_XXXXXXXXX_DEFAULT_DATABASE_NAME&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Similarly  would be something like &lt;code&gt;QOVERY_POSTGRESQL_XXXXXXXXX_LOGIN&lt;/code&gt;&lt;br&gt;
 would be like &lt;code&gt;QOVERY_POSTGRESQL_XXXXXXXXX_HOST&lt;/code&gt;&lt;br&gt;
 would be like &lt;code&gt;QOVERY_POSTGRESQL_XXXXXXXXX_PORT&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;For , go to your database application in Qovery and then click on Host. It will automatically copy the host url. &lt;/p&gt;

&lt;p&gt;After that you need to go to your database application in Qovery. &amp;amp; then click on show config. And copy your master password. &lt;br&gt;
Now come back to your application project on Qovery, and make a new environment variable.&lt;br&gt;
Its name should be &lt;code&gt;PASS&lt;/code&gt; and value should be the password that you copied. &lt;/p&gt;

&lt;p&gt;After replacing all &amp;lt;&amp;gt; with the values, you can push your git code and Qovery will start to deploy your Django applications. And then your website will be up in a few minutes. &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#creating-superuser"&gt;
  &lt;/a&gt;
  Creating Superuser
&lt;/h2&gt;

&lt;p&gt;And next thing you might need to do is make a superuser. For that you should use your local machine instead. &lt;br&gt;
So you can navigate to your directory in which the project is. Otherwise clone your repository and navigate to that&lt;br&gt;
For that you need to create a &lt;code&gt;.env&lt;/code&gt; file. &lt;br&gt;
&lt;strong&gt;Note:&lt;/strong&gt; It should be &lt;code&gt;.env&lt;/code&gt; file and not &lt;code&gt;.env.txt&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;.env&lt;/code&gt; file should contain the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;QOVERY_POSTGRESQL_XXXXXXXXX_DEFAULT_DATABASE_NAME="postgres"
QOVERY_POSTGRESQL_XXXXXXXXX_LOGIN="postgres"
PASS="&amp;lt;PASS&amp;gt;"
QOVERY_POSTGRESQL_XXXXXXXXX_HOST="&amp;lt;host_url&amp;gt;"
QOVERY_POSTGRESQL_XXXXXXXXX_PORT=5432
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here you should replace &lt;code&gt;QOVERY_POSTGRESQL_XXXXXXXXX_DEFAULT_DATABASE_NAME&lt;/code&gt; etc with the variable names as described a little above, under Database. &lt;/p&gt;

&lt;p&gt;And also replace  with the database password and  with the host url. &lt;/p&gt;

&lt;p&gt;Now you can open this directory in your terminal/CMD . &lt;br&gt;
and then you can run the command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;python manage.py createsuperuser
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;either in a virtual environment or directly (as per your preference).&lt;/p&gt;

&lt;p&gt;After that you can access everything from your Django's admin panel. &lt;/p&gt;

&lt;p&gt;Here is the final repository:&lt;br&gt;
&lt;a href="https://github.com/rachit1601/triviaquiz"&gt;https://github.com/rachit1601/triviaquiz&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here is my site deployed on Qovery:&lt;br&gt;
&lt;a href="https://triviaquiz.redcrypt.xyz/"&gt;https://triviaquiz.redcrypt.xyz/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you have any other problems, you can write in the comments or you can contact me on Discord at &lt;code&gt;DiluteWater#3149&lt;/code&gt; &lt;/p&gt;

</description>
      <category>django</category>
      <category>python</category>
      <category>qovery</category>
    </item>
    <item>
      <title>Speed up Laravel in Docker by moving vendor directory</title>
      <author>Tyler Smith</author>
      <pubDate>Tue, 14 Sep 2021 07:20:41 +0000</pubDate>
      <link>https://dev.to/tylerlwsmith/speed-up-laravel-in-docker-by-moving-vendor-directory-19b9</link>
      <guid>https://dev.to/tylerlwsmith/speed-up-laravel-in-docker-by-moving-vendor-directory-19b9</guid>
      <description>&lt;p&gt;I'm building a Laravel app on my MacBook Pro with Docker by mounting my project folder inside a Docker container. I was working on an API endpoint in the app that had a response time of a little more than a second. This made the interactivity in a connected React app feel &lt;em&gt;painfully&lt;/em&gt; slow. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-laravel-is-slow-in-docker"&gt;
  &lt;/a&gt;
  Why Laravel is slow in Docker
&lt;/h2&gt;

&lt;p&gt;The reason behind this slow performance is two-fold, caused by the combination of the PHP request model and the latency when transferring data between Docker's Linux VM and the host MacOS machine. &lt;/p&gt;

&lt;p&gt;When PHP receives a request, it loads all of its dependencies on a per-request basis. Once the request finishes it discards all of the loaded data. This is different than something like Node.js, where a single thread handles all requests and each module is cached when it's first loaded.&lt;/p&gt;

&lt;p&gt;PHP's way of loading dependencies is already inefficient compared to Node. And when you do Docker development on a non-Linux machine, you add the overhead of crossing between Docker's Linux VM and the mounted host machine folder for every single dependency file that's loaded. It's the difference between moving books from one shelf to another vs moving books to a shelf in a house down the street.&lt;/p&gt;

&lt;p&gt;To keep Docker fast, we want to minimize the amount of times we need to cross between Docker's Linux VM and the host machine. We can do that by storing Composer's &lt;code&gt;vendor/&lt;/code&gt; folder inside the container instead of in the mounted project directory.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#moving-the-vendor-directory"&gt;
  &lt;/a&gt;
  Moving the vendor directory
&lt;/h2&gt;

&lt;p&gt;For the rest of this post, we'll assume that you have a container where your app is stored in &lt;code&gt;/srv/app/&lt;/code&gt;. We will install the Composer dependencies in &lt;code&gt;/srv/vendor/&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In your Dockerfile, we'll install the Composer dependencies using the &lt;code&gt;RUN&lt;/code&gt; command below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="c"&gt;# ...previous Dockerfile commands&lt;/span&gt;
&lt;span class="k"&gt;WORKDIR&lt;/span&gt;&lt;span class="s"&gt; /srv/app&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; . .&lt;/span&gt;
&lt;span class="k"&gt;RUN &lt;/span&gt;&lt;span class="nv"&gt;COMPOSER_VENDOR_DIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"/srv/vendor"&lt;/span&gt; composer &lt;span class="nb"&gt;install&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will install the Composer dependencies in the &lt;code&gt;/srv/vendor&lt;/code&gt; directory, but Laravel can't see them: it expects its dependencies to be in the project root's &lt;code&gt;vendor/&lt;/code&gt; folder. We must update the places where Laravel loads the Composer autoload file.&lt;/p&gt;

&lt;p&gt;In &lt;code&gt;public/index.php&lt;/code&gt; and &lt;code&gt;artisan&lt;/code&gt;, find the following line:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="k"&gt;require&lt;/span&gt; &lt;span class="k"&gt;__DIR__&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="s1"&gt;'/vendor/autoload.php'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And replace it with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="k"&gt;require&lt;/span&gt; &lt;span class="k"&gt;__DIR__&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="s1"&gt;'/../vendor/autoload.php'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Also update the path in &lt;code&gt;phpunit.xml&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;Run &lt;code&gt;docker build&lt;/code&gt; (or &lt;code&gt;docker-compose build&lt;/code&gt; if you use Compose), and bring the container back up. When you navigate to your Laravel project in the browser, you should see noticeably faster page-load speeds. &lt;strong&gt;In my project, my API request drop from about 1000ms to about 200ms.&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#gotchcas"&gt;
  &lt;/a&gt;
  Gotchcas
&lt;/h2&gt;

&lt;p&gt;The faster page-load speeds are nice, but if you use IntelliSense &amp;amp; autocomplete, you're really going to want your dependencies in your mounted project directory so that your editor can see them.&lt;/p&gt;

&lt;p&gt;You can install your Composer dependencies in your mounted project directory by running the following command from your host machine while the Laravel container is running:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker &lt;span class="nb"&gt;exec &lt;/span&gt;your-container-name composer &lt;span class="nb"&gt;install&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#further-reading"&gt;
  &lt;/a&gt;
  Further reading
&lt;/h2&gt;

&lt;p&gt;In addition to moving your dependencies into your container, you can also enable PHP's OpCache to make Laravel load even faster. &lt;a href="https://www.hmazter.com/2019/04/speeding-up-php-docker-with-opcache/"&gt;Kristoffer H√∂gberg has a concise write-up on how to do this&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Micha√´l Perrin wrote a post called &lt;a href="http://blog.michaelperrin.fr/2017/04/14/docker-for-mac-on-a-symfony-app/"&gt;"3 ways to get Docker for Mac faster on your Symfony app"&lt;/a&gt; that has some interesting performance measurements before and after optimization. Micha√´l's post was the inspiration behind this article, and it's definitely worth a read.&lt;/p&gt;

</description>
      <category>laravel</category>
      <category>docker</category>
      <category>php</category>
    </item>
    <item>
      <title>Selecting low power networking ‚Äî LoraWan,SigFox, Nb-IoT and LTE-M</title>
      <author>TheDailyTechTalk</author>
      <pubDate>Tue, 14 Sep 2021 07:06:32 +0000</pubDate>
      <link>https://dev.to/thedailytechtalk/selecting-low-power-networking-lorawan-sigfox-nb-iot-and-lte-m-2ld3</link>
      <guid>https://dev.to/thedailytechtalk/selecting-low-power-networking-lorawan-sigfox-nb-iot-and-lte-m-2ld3</guid>
      <description>&lt;p&gt;&lt;em&gt;I recently started a new blog &lt;a href="https://thedailytechtalk.com"&gt;TheDailyTechTalk&lt;/a&gt; where I create free content. If you liked this post and would like to read more posts about javascript please check it out üéâüéâ&lt;br&gt;
ü•∞&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If you like what I write and want to support me, please follow me on &lt;a href="https://twitter.com/TheDailyTechTa1"&gt;Twitter&lt;/a&gt; to learn more about programming and similar topics ‚ù§Ô∏è‚ù§Ô∏è&lt;/strong&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#selecting-low-power-networking-contrasting-pros-and-cons-of-lorawansigfox-nbiot-and-ltem"&gt;
  &lt;/a&gt;
  Selecting low power networking contrasting pros and cons of LoraWan,SigFox, Nb-IoT and LTE-M
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#what-is-low-power-wide-area-network"&gt;
  &lt;/a&gt;
  What is "Low power wide area network"?
&lt;/h2&gt;

&lt;p&gt;LPWAN is a type of wireless telecommunication designed for long-range communications between IoT devices, sensors etc. Its main purpose is to send small amounts of data over a great distance for a long period of time, even years on a single battery*.* Coverage can range from 1 km up to over 40 km.&lt;/p&gt;

&lt;p&gt;Frequency which LPWAN providers like SigFox or LoraWaN use depends on location (and sometimes even the country). Providers use either unlicensed ISM bands , 868 MHz in Europe, 915 Mhz in North America and 433 MHz in Asia, or licensed LTE frequency bands.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kt_J_-9t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.thedailytechtalk.com/_nuxt/uploads/63ed0e7-592.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kt_J_-9t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.thedailytechtalk.com/_nuxt/uploads/63ed0e7-592.jpg" alt="The advantages of Sigfox, LoRaWAN, and NB-IoT."&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;The respective advantages of Sigfox, LoRaWAN, and NB-IoT. Source: The Korean Institute of Communications and Information Sciences (KICS) as published in ICT Express, March 2019.&lt;/em&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#sigfox"&gt;
  &lt;/a&gt;
  SigFox
&lt;/h1&gt;

&lt;p&gt;Sigfox was founded in 2009 in France.Today they are available in over 60 countries and their numbers are constantly growing. They offer end-to-end LPWAN solutions. Sigfox network architecture is built using base stations in a star topology, but with their own cloud service acting as a middle man. That kind of architecture offers some great benefits such as data security and data flow via API.&lt;/p&gt;

&lt;p&gt;Pros:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Strong industry support and partners like Texas Instruments, Silicon Labs and Arduino&lt;/li&gt;
&lt;li&gt;Very long range&lt;/li&gt;
&lt;li&gt;Large coverage&lt;/li&gt;
&lt;li&gt;Cost effective&lt;/li&gt;
&lt;li&gt;Cloud service &amp;amp; API&lt;/li&gt;
&lt;li&gt;Easy to integrate with services like AWS, Azure and others&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Cons:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Not an open standard&lt;/li&gt;
&lt;li&gt;Low security (16 bit encryption)&lt;/li&gt;
&lt;li&gt;US design architecture is different from European architecture&lt;/li&gt;
&lt;li&gt;Bad UI/UX in administration interface&lt;/li&gt;
&lt;li&gt;Bad latency performance&lt;/li&gt;
&lt;li&gt;Low maximum payload length&lt;/li&gt;
&lt;li&gt;Limited amount of UL / DL&lt;/li&gt;
&lt;li&gt;No private networks&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#lorawan"&gt;
  &lt;/a&gt;
  LoRaWaN
&lt;/h1&gt;

&lt;p&gt;LoRaWaN network architecture is deployed as a typical star topology, with a gateway in the middle that converts radio signal to IP and vice versa. They are mainly used for telemetric data transfers and object tracking. Messages transmitted by an end device with LoRaWAN are received by all base stations in the range, which increases the ratio of successfully received messages. However, that requires multiple base stations in range, as well as the need to filter duplicated messages, which leads to increased network deployment cost.&lt;/p&gt;

&lt;p&gt;Pros:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Strong industry support and partners such as Cisco, IBM and KPN&lt;/li&gt;
&lt;li&gt;Strong security (128 bit encryption) and authentication (2 layers of security)&lt;/li&gt;
&lt;li&gt;Great for communication with moving devices, since it is resistant to the Doppler effect&lt;/li&gt;
&lt;li&gt;Unlimited uplinks and downlinks&lt;/li&gt;
&lt;li&gt;Multiple classes of end devices for different requirements and situations&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Cons:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Not an open standard&lt;/li&gt;
&lt;li&gt;The price and availability of the modules&lt;/li&gt;
&lt;li&gt;You can only use vendors approved by Semtech&lt;/li&gt;
&lt;li&gt;Expensive device certification required for most device types&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#nbiot"&gt;
  &lt;/a&gt;
  NB-IoT
&lt;/h1&gt;

&lt;p&gt;NB-IoT , which stands for Narrowband Internet of Things, uses licensed frequency spectrum, unlike SigFox and LoRa. Their communication protocol is based on the LTE protocol and it can coexist with both GSM and LTE protocols. NB-IoT frequency band width is 200 KHz, and because of that there are 3 operation modes possible: stand-alone operation which utilizes GSM frequency bands currently in use, guard-band operation that utilizes unused resource blocks within LTE band and in-band operation which utilizes resource blocks within an LTE carrier.&lt;/p&gt;

&lt;p&gt;Pros:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Big data rate (200 kbps)&lt;/li&gt;
&lt;li&gt;Large maximum payload length (1600) bytes&lt;/li&gt;
&lt;li&gt;LTE encryption&lt;/li&gt;
&lt;li&gt;Scalability&lt;/li&gt;
&lt;li&gt;Latency performance&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Cons:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;No private networks&lt;/li&gt;
&lt;li&gt;Low coverage&lt;/li&gt;
&lt;li&gt;Cost efficiency&lt;/li&gt;
&lt;li&gt;Lower range than its competitors&lt;/li&gt;
&lt;li&gt;Low interference immunity&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#ltem"&gt;
  &lt;/a&gt;
  LTE-M
&lt;/h1&gt;

&lt;p&gt;CAT-M, officially known as LTE CAT-M1, is the second generation of LTE chips developed by 3GPP. As well as coexisting with 2G, 3G and 4G mobile networks , LTE-M network benefits from their security, privacy and other features. Unlike the rest of the world where GSM spectra are the norm, US service providers have system architecture for LTE-M.&lt;/p&gt;

&lt;p&gt;Pros:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Compatible with existing LTE network.&lt;/li&gt;
&lt;li&gt;High data rate&lt;/li&gt;
&lt;li&gt;Support of voice functionality via VoLTE&lt;/li&gt;
&lt;li&gt;Low power consumption&lt;/li&gt;
&lt;li&gt;Use of TCP / IP protocols&lt;/li&gt;
&lt;li&gt;Easy to deploy&lt;/li&gt;
&lt;li&gt;Supports mobility, no disconnections while moving between stations&lt;/li&gt;
&lt;li&gt;Low latency&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Cons:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Firmware upgrades consume power&lt;/li&gt;
&lt;li&gt;High costs&lt;/li&gt;
&lt;li&gt;Bandwidth consumption&lt;/li&gt;
&lt;li&gt;Low support outside USA&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;I recently started a new blog &lt;a href="https://thedailytechtalk.com"&gt;TheDailyTechTalk&lt;/a&gt; where I create free content. If you liked this post and would like to read more posts about javascript please check it out üéâüéâ&lt;br&gt;
ü•∞&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If you like what I write and want to support me, please follow me on &lt;a href="https://twitter.com/TheDailyTechTa1"&gt;Twitter&lt;/a&gt; to learn more about programming and similar topics ‚ù§Ô∏è‚ù§Ô∏è&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>programming</category>
      <category>python</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>40+ JavaScript Projects for Beginners ‚Äì Easy Ideas to Get Started Coding JS</title>
      <author>Coding</author>
      <pubDate>Tue, 14 Sep 2021 07:04:32 +0000</pubDate>
      <link>https://dev.to/coderzzz/40-javascript-projects-for-beginners-easy-ideas-to-get-started-coding-js-5gl5</link>
      <guid>https://dev.to/coderzzz/40-javascript-projects-for-beginners-easy-ideas-to-get-started-coding-js-5gl5</guid>
      <description>&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;b&gt;The best way to learn a new programming language is to build projects.

I have created a list of 40 beginner friendly project tutorials in Vanilla JavaScript, React, and TypeScript.

My advice for tutorials would be to watch the video, build the project, break it apart and rebuild it your own way. Experiment with adding new features or using different methods.

That will test if you have really learned the concepts or not.

You can click on any of the projects listed below to jump to that section of the article.

&lt;/b&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/40-javascript-projects-for-beginners/&amp;amp;ved=2ahUKEwiB9tj0rPjyAhUMX30KHZQ5CG0QFnoECAgQAQ&amp;amp;usg=AOvVaw26RDQjHugdhbATVS83LI83"&gt;40 JavaScript Projects for Beginners ‚Äì Easy Ideas to Get Started Coding JS

&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;

</description>
    </item>
  </channel>
</rss>
