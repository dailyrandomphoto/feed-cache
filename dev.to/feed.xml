<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Keep Save your money üíµ, and Let's get a üëë Premium Courses for free as a üë©‚Äçüéìüë®‚Äçüéì university student</title>
      <author>Dzun N</author>
      <pubDate>Sun, 09 May 2021 22:33:08 +0000</pubDate>
      <link>https://dev.to/dzun_n/keep-save-your-money-and-let-s-get-a-premium-courses-for-free-as-a-university-student-m5p</link>
      <guid>https://dev.to/dzun_n/keep-save-your-money-and-let-s-get-a-premium-courses-for-free-as-a-university-student-m5p</guid>
      <description>&lt;p&gt;As student, we would pay out for getting premium courses to get study out of school. But how about you have access to many courses/resources for free that others have to pay for. It's a great opportunity to gain some edge, learn tools that are highly in demand while not spending any money.&lt;/p&gt;

&lt;p&gt;The greatest package, you can access as a student is &lt;a href="https://education.github.com/pack"&gt;GitHub Student Developer Pack&lt;/a&gt;. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#github-student-developer-pack"&gt;
  &lt;/a&gt;
  GitHub Student Developer Pack
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EpxUnQjT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/twwariw2df4a4phj7aiv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EpxUnQjT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/twwariw2df4a4phj7aiv.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-do-i-register-it-"&gt;
  &lt;/a&gt;
  How do I register it ?
&lt;/h2&gt;

&lt;p&gt;You don't have to bother about it. If you have an academic email address Github recognize, access is granted immediately. Besides great deals on learning platform, you also get a bunch of other great deals. So check that out!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#frontend-masters"&gt;
  &lt;/a&gt;
  &lt;a href="https://frontendmasters.com/welcome/github-student-developers/"&gt;Frontend Masters&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P0XPL27W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3ipf3kzfuosohljt1oyn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P0XPL27W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3ipf3kzfuosohljt1oyn.png" alt="image"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;The best deal in the GitHub student package is definitely  &lt;strong&gt;6 months&lt;/strong&gt;  of free access to  &lt;strong&gt;Frontend Masters&lt;/strong&gt;. It is worth between  &lt;strong&gt;200-250 USD&lt;/strong&gt;  and the content there is just awesome. If you wanna step up your web development skills, this is the platform you should use.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#data-camp"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.datacamp.com/"&gt;Data Camp&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RIIY1QZp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x2eyclhb3whhsnbd9z5n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RIIY1QZp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x2eyclhb3whhsnbd9z5n.png" alt="image"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;If you are more interested in the world of data, you can get  &lt;strong&gt;3 months&lt;/strong&gt;  access to Data Camp. There you can learn Python, SQL, or R and really get a good grasp of advanced concepts. This content is worth  &lt;strong&gt;75 USD&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#educativeio"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.educative.io/github-students"&gt;Educative.io&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SGKwwh8O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/llooekji04wyhkjc6cto.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SGKwwh8O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/llooekji04wyhkjc6cto.png" alt="image"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Another great platform with several famous courses that might help you land a dream job. Their System Design course is highly popular and you can get  &lt;strong&gt;3 months&lt;/strong&gt;  for free worth over  &lt;strong&gt;100 USD&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#nexttech"&gt;
  &lt;/a&gt;
  &lt;a href="https://next.tech/github-students"&gt;next.tech&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h0hoSjFo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3adl76p35xgydek0su70.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h0hoSjFo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3adl76p35xgydek0su70.png" alt="image"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Next Tech provides cloud computing environments that are accessible from the browser ‚Äï no downloads required. Students around the world use Next Tech so they don't have to install software themselves when they work on a programming project. This lets them focus on the coding and not on the annoying software set up!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#one-month"&gt;
  &lt;/a&gt;
  &lt;a href="https://onemonth.com/github/students"&gt;One Month&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LrKb37rA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t7nhuxt4dh8lcbtw25yf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LrKb37rA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t7nhuxt4dh8lcbtw25yf.png" alt="image"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;One Month's online coding courses teach you exactly what you need to learn to code quickly. Learn Python, HTML, JavaScript and more in just 30 days.&lt;/p&gt;

&lt;p&gt;Over 120,000 students have used One Month's computer programming courses to launch their side hustles, level up their careers, and build things they couldn‚Äôt even imagine before. Our online coding bootcamps include certification, human support, and the change to create real-world projects that you can use for applying to jobs or attracting new clients.&lt;/p&gt;

&lt;p&gt;We invite all  &lt;a href="https://education.github.com/pack"&gt;Github Student Developer Pack&lt;/a&gt;  members to enjoy One Month‚Äôs online coding courses free for 30-days.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#interview-cake"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.interviewcake.com/github-students"&gt;Interview Cake&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qwJKpIN_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ty6lh2pp53oqpkymnx3l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qwJKpIN_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ty6lh2pp53oqpkymnx3l.png" alt="image"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Students get access to  &lt;a href="https://www.interviewcake.com/table-of-contents"&gt;our full coding interview prep course&lt;/a&gt;  for 3 weeks FREE. Get ready to ace your coding interview with practice questions, tutorials, and data structures and algorithms review.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#go-rails"&gt;
  &lt;/a&gt;
  &lt;a href="https://gorails.com/github-students"&gt;Go Rails&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j8pBuwC1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cbqp146ugndm52rr92q0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j8pBuwC1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cbqp146ugndm52rr92q0.png" alt="image"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Tutorials for web developers learning Ruby, Rails, Javascript, Turbolinks, Stimulus.js, Vue.js, and more. GoRails for GitHub Students 12 months of free access to GoRails for students&lt;br&gt;&lt;br&gt;
enrolled in the  &lt;a href="https://education.github.com/?utm_source=github+gorails"&gt;GitHub Student Developer Pack&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>github</category>
      <category>student</category>
    </item>
    <item>
      <title>Changing text colour based on 

background colour luminosity </title>
      <author>Jamie Mc Manus</author>
      <pubDate>Sun, 09 May 2021 21:07:22 +0000</pubDate>
      <link>https://dev.to/jamiemcmanus/changing-text-colour-based-on-background-colour-luminosity-4cf2</link>
      <guid>https://dev.to/jamiemcmanus/changing-text-colour-based-on-background-colour-luminosity-4cf2</guid>
      <description>&lt;h5&gt;
  &lt;a href="#scenario"&gt;
  &lt;/a&gt;
  Scenario
&lt;/h5&gt;

&lt;p&gt;You decide to let the users of your application set the preferred colour of an item - this could anything from a simple card to an list item on a Kanban board.  This is a straightforward feature and common enough but it can wreak havoc on any foreground text that we place over it, like what happens if our text is white and they choose a light colour ? &lt;/p&gt;

&lt;p&gt;Your text will have the visibility of a ghost üëª.&lt;/p&gt;

&lt;p&gt;This isn't good. Our foreground text is gone and its because we gave the user an input in the application style, but fear not, the battle hasn't been lost yet.   &lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#le-solution"&gt;
  &lt;/a&gt;
  Le Solution
&lt;/h5&gt;

&lt;p&gt;What if we could check how dark / bright the colour the user selected is ? &lt;br&gt;
We could change the colour of the foreground text dynamically to be visible. To do this we need to find the Luminosity of the background colour, which is a measure of how bright or dark a hue is. &lt;/p&gt;
&lt;h5&gt;
  &lt;a href="#code"&gt;
  &lt;/a&gt;
  Code
&lt;/h5&gt;

&lt;p&gt;Create a Service folder in your project and create a new class &lt;code&gt;Luminosity.cs&lt;/code&gt; . Within this class we'll keep our helper methods for the task.&lt;br&gt;
We need to first get the luminance of the background colour , then using this value return a colour between white and black. The Luminance will be a double  between 0 (black) and 1(white), and we'll then translate this into an RGB value.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;System&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;System.Collections.Generic&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;System.Drawing&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;System.Linq&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;System.Web&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="nn"&gt;sampleproject.Services&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Luminosity&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="nf"&gt;GetLuminosity&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;colour&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="c1"&gt;//Convert html colour to Color Object&lt;/span&gt;
            &lt;span class="n"&gt;Color&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ColorTranslator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;FromHtml&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;colour&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="c1"&gt;//Get the Luminancce value from the converted color.    &lt;/span&gt;
            &lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;luminance&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0.299&lt;/span&gt; &lt;span class="p"&gt;*&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="m"&gt;0.587&lt;/span&gt; &lt;span class="p"&gt;*&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;G&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="m"&gt;0.114&lt;/span&gt; &lt;span class="p"&gt;*&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;B&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt; &lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;luminance&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="nf"&gt;GetColour&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;colour&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;luminance&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;GetLuminosity&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;colour&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="c1"&gt;// Translate the luminance to RGB values &lt;/span&gt;
            &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;255&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Convert&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ToInt32&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;luminance&lt;/span&gt; &lt;span class="p"&gt;*&lt;/span&gt; &lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;  &lt;span class="s"&gt;$"rgb(&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt;,&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt;,&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt;)"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;


    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#razor-view"&gt;
  &lt;/a&gt;
  Razor View
&lt;/h5&gt;

&lt;p&gt;Now within the Razor View we can use the helper method to change the value of the foreground text.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;@using&lt;/span&gt; &lt;span class="n"&gt;sampleproject&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Services&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;ViewBag&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Title&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Index"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;Layout&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"~/Views/Shared/_Layout.cshtml"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;div&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="err"&gt;="&lt;/span&gt;&lt;span class="nc"&gt;card&lt;/span&gt;&lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="n"&gt;container&lt;/span&gt;&lt;span class="s"&gt;"&amp;gt;
&lt;/span&gt;    &lt;span class="nf"&gt;@foreach&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;style&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;style&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"background-color:"&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Primarycolor&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="s"&gt;";color:"&lt;/span&gt;&lt;span class="p"&gt;+&lt;/span&gt;&lt;span class="n"&gt;Luminosity&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetColour&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Primarycolor&lt;/span&gt;&lt;span class="p"&gt;)+&lt;/span&gt;&lt;span class="s"&gt;";"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 

        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;div&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="err"&gt;="&lt;/span&gt;&lt;span class="nc"&gt;card&lt;/span&gt;&lt;span class="s"&gt;" style="&lt;/span&gt;&lt;span class="n"&gt;@style&lt;/span&gt;&lt;span class="s"&gt;"&amp;gt;
&lt;/span&gt;        &lt;span class="p"&gt;.....&lt;/span&gt;&lt;span class="n"&gt;card&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt;
       &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#the-result"&gt;
  &lt;/a&gt;
  The Result
&lt;/h5&gt;

&lt;p&gt;With the above code we should get a result roughly like the below.&lt;br&gt;&lt;br&gt;
The colour of the foreground text should always be on the opposite end of the scale to the background text. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NvYcekSf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ewmc8lu6ydx7pzv1m2e9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NvYcekSf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ewmc8lu6ydx7pzv1m2e9.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#credits"&gt;
  &lt;/a&gt;
  Credits
&lt;/h6&gt;

&lt;p&gt;&lt;small&gt;Cover Photo by &lt;a href="https://unsplash.com/@ruvimnogaphoto?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Ruvim Noga&lt;/a&gt; on &lt;a href="https://unsplash.com/license?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;br&gt;
  &lt;/small&gt;&lt;/p&gt;

</description>
      <category>csharp</category>
      <category>css</category>
      <category>dotnet</category>
    </item>
    <item>
      <title>Simple Ways To Spice Up Website Anchors and Buttons</title>
      <author>James Sinkala</author>
      <pubDate>Sun, 09 May 2021 20:59:42 +0000</pubDate>
      <link>https://dev.to/xinnks/simple-ways-to-spice-up-website-anchors-and-buttons-5d1o</link>
      <guid>https://dev.to/xinnks/simple-ways-to-spice-up-website-anchors-and-buttons-5d1o</guid>
      <description>&lt;p&gt;I haven't been working explicitly with CSS as much as I would have liked to for the past couple weeks but either way on today's post I'm going to share with you some simple ways to spice up your website's links and/or buttons with CSS.&lt;/p&gt;

&lt;p&gt;Also to keep myself involved with CSS more I'll make this the first of many posts to come specifically on CSS, which will be part of a series yet to be named, that I'll be adding short content to regularly.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#shine-by-effect"&gt;
  &lt;/a&gt;
  Shine By Effect
&lt;/h2&gt;

&lt;p&gt;For lack of a better word I guess shine-by serves an understandable name for what occurs visually with this effect. An example of this effect is shown below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wdVk7oZd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dk66woyjaqjus4fbwk64.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wdVk7oZd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dk66woyjaqjus4fbwk64.gif" alt="Button shine through effect"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's break it down.&lt;/p&gt;

&lt;p&gt;Two things happen as this effect is triggered on hover, one, the color of the button's text and it's background changes, and two, a band of light passes through from left to right simulating a "shine-by" effect.&lt;/p&gt;

&lt;p&gt;Here goes the HTML.&lt;br&gt;
Starting with the button.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"button rounded outlined section-marker"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"item-sparkle-wrapper"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"item-sparkle"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;span&amp;gt;&lt;/span&gt; Services &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Followed by the anchor&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"anchor rounded outlined section-marker"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"item-sparkle-wrapper"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"item-sparkle"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;span&amp;gt;&lt;/span&gt; Services &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;And finally the styles.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;style&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Archivo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nc"&gt;.main&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="py"&gt;justify&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;40px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nc"&gt;.outlined&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#141316&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nc"&gt;.rounded&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nc"&gt;.anchor&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;.button&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;.5em&lt;/span&gt; &lt;span class="n"&gt;-&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="m"&gt;1em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2.5em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;.75rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#141316&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nc"&gt;.anchor&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;text-decoration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nc"&gt;.button&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nc"&gt;.button&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;.anchor&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#141316&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#ffffff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.item-sparkle-wrapper&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;z-index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.section-marker&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nc"&gt;.item-sparkle-wrapper&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nc"&gt;.item-sparkle&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;.item-sparkle-wrapper&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nc"&gt;.item-sparkle&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;z-index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;skewX&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-15deg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;animation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;shine-by&lt;/span&gt; &lt;span class="m"&gt;.3s&lt;/span&gt; &lt;span class="m"&gt;0s&lt;/span&gt; &lt;span class="n"&gt;ease-in-out&lt;/span&gt; &lt;span class="n"&gt;forwards&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;@keyframes&lt;/span&gt; &lt;span class="n"&gt;shine-by&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="err"&gt;0&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="err"&gt;100&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;110%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;style&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;You can also use CSS's background-gradient to animate the ray of light passing by from left to right as shown in the following comment:&lt;/p&gt;


&lt;div class="liquid-comment"&gt;
    &lt;div class="details"&gt;
      &lt;a href="/erichsia7"&gt;
        &lt;img class="profile-pic" src="https://res.cloudinary.com/practicaldev/image/fetch/s--Oa2qGgq7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--du7TszHZ--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_50%2Cq_auto%2Cw_50/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/575134/4adecf41-10ed-47a2-95c5-1899369480b5.jpeg" alt="erichsia7 profile image"&gt;
      &lt;/a&gt;
      &lt;a href="/erichsia7"&gt;
        &lt;span class="comment-username"&gt;EricHsia7&lt;/span&gt;
      &lt;/a&gt;
      &lt;span class="color-base-30 px-2"&gt;‚Ä¢&lt;/span&gt;

&lt;a href="https://dev.to/erichsia7/comment/1b888" class="comment-date crayons-link crayons-link--secondary fs-s"&gt;
  &lt;time&gt;
    Feb 7
  &lt;/time&gt;

&lt;/a&gt;

    &lt;/div&gt;
    &lt;div class="body"&gt;
      &lt;p&gt;Maybe this method can also.&lt;br&gt;
.div {&lt;br&gt;
width:100px;&lt;br&gt;
height:30px;&lt;br&gt;
background: rgb(227,227,227);&lt;br&gt;
background: linear-gradient(90deg, rgba(227,227,227,1) 0%, rgba(182,182,182,1) 7%, rgba(182,182,182,1) 13%, rgba(227,227,227,1) 25%);&lt;br&gt;
background-size:900%;&lt;br&gt;
background-position: 100% 0%;&lt;br&gt;
animation: animation 1.8s;&lt;br&gt;
animation-iteration-count: infinite;&lt;br&gt;
animation-timing-function: ease-in-out;&lt;br&gt;
}&lt;/p&gt;

&lt;p&gt;@keyframes animation {&lt;br&gt;
   0% {&lt;br&gt;
     background-position: 100% 0%;&lt;br&gt;
   }&lt;br&gt;
   99.99% {&lt;br&gt;
     background-position: -30% 0%;&lt;br&gt;
   }&lt;br&gt;
   100% {&lt;br&gt;
   background-position: 100% 0%;&lt;br&gt;
   }&lt;br&gt;
}&lt;/p&gt;


    &lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;And that's all for the "shine-by" effect.&lt;br&gt;
Use it in your projects or better yet get creative and make it more visually stunning to bring your links and anchors to life.&lt;br&gt;
But don't overdo it, simplicity is key.&lt;/p&gt;

&lt;p&gt;Let the anchors shine.&lt;/p&gt;

</description>
      <category>css</category>
      <category>html</category>
      <category>webdev</category>
    </item>
    <item>
      <title>QR Code Generator Website</title>
      <author>Bibek</author>
      <pubDate>Sun, 09 May 2021 20:52:38 +0000</pubDate>
      <link>https://dev.to/bibekkakati/qr-code-generator-website-gmo</link>
      <guid>https://dev.to/bibekkakati/qr-code-generator-website-gmo</guid>
      <description>&lt;p&gt;How can we generate a QR Code for any content in JavaScript?&lt;/p&gt;

&lt;p&gt;Check out this article: &lt;a href="https://blog.bibekkakati.me/generate-qr-code-in-javascript"&gt;Generate QRCode&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://blog.bibekkakati.me/generate-qr-code-in-javascript"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gxcSNyP2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vescaka0h2njptfo3g91.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>node</category>
    </item>
    <item>
      <title>7 Good Reasons To Start Blogging As a Developer</title>
      <author>Kingsley Ubah</author>
      <pubDate>Sun, 09 May 2021 20:02:12 +0000</pubDate>
      <link>https://dev.to/ubahthebuilder/7-good-reasons-to-start-blogging-as-a-developer-2of3</link>
      <guid>https://dev.to/ubahthebuilder/7-good-reasons-to-start-blogging-as-a-developer-2of3</guid>
      <description>&lt;p&gt;You probably think the sole job of a web developer is to create websites and web applications. If so, you are unfortunately &lt;strong&gt;not the only one&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Anytime I tell any of my friends I am a web developer their first response is: &lt;em&gt;‚ÄúOh so you make websites?‚Äù&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It‚Äôs not just about designing and coding websites, or setting up databases and all of those &lt;strong&gt;technical stuffs&lt;/strong&gt;. Though that is the main function of a web developer.&lt;/p&gt;

&lt;p&gt;I believe that there are many facets to web development, and one of them is &lt;strong&gt;technical writing and blogging&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Technical writing to me serves as the bridge between the &lt;strong&gt;technical world&lt;/strong&gt; and the &lt;strong&gt;artistic world&lt;/strong&gt;. Writing allows you explain complex technical terms in a digestible and form to the audience. It allows you apply your artistic ingenuity in the process to of sharing your knowledge. When you apply your art to your process of sharing knowledge, it is more likely to be understood better.&lt;/p&gt;

&lt;p&gt;Blogging is an activity I would recommend every developer considers at some point, and here are some good reasons I think so:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#it-makes-you-a-better-teacher"&gt;
  &lt;/a&gt;
  It Makes You a Better Teacher
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CgfFWoPX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aqq7irf203yf5bv7du7t.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CgfFWoPX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aqq7irf203yf5bv7du7t.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Blogging is all about putting thoughts into words and sentences. Technical Blogging is all about &lt;strong&gt;putting technical concepts into sentences&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;The later is considerable harder for this reason because you are translating a different language, one is not easily understood by the human mind like say, English Language.&lt;br&gt;
Thus, it takes considerably more effort and practise to seamlessly convey your information in a digestible way to your audience. &lt;/p&gt;

&lt;p&gt;This action challenges you into finding a better and more artful way of teaching them to their comprehension.&lt;/p&gt;

&lt;p&gt;For example, constant blogging has made me better at using analogies to teach and my audience always praise me for that. In other words, it made me a better teacher.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#you-actually-get-better-at-writing"&gt;
  &lt;/a&gt;
  You Actually Get Better At Writing
&lt;/h3&gt;

&lt;p&gt;Just because you‚Äôre writing something technical doesn‚Äôt mean you aren‚Äôt using English.&lt;br&gt;
&lt;em&gt;The best way to learn or master anything is with constant practise.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;When you write articles consistently, you are also (inadvertently) training yourself to get better in generic writing. I am a testament of this. &lt;/p&gt;

&lt;p&gt;When I started out, my writing was horrendous. Maybe it‚Äôs still bad as of now, but I have surely gotten better at it!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If you write more you get better, whether you realize it or not.&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#you-boost-your-career"&gt;
  &lt;/a&gt;
  You Boost your Career
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kl-u2qyd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620589741221/WaVcGv7-B.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kl-u2qyd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620589741221/WaVcGv7-B.jpeg" alt="pexels-oleg-magni-2058128 (1).jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let‚Äôs be honest, there is more to web development than just hacking code. In fact, a lot of ‚Äúdevelopers‚Äù actually make the bulk of their income  from &lt;strong&gt;technical writing&lt;/strong&gt;, and that is a path I am quite interested in taking.&lt;/p&gt;

&lt;p&gt;But enough of me.&lt;/p&gt;

&lt;p&gt;You can actually boost your career by writing articles. There is a job known as DevRel (&lt;strong&gt;developer relations&lt;/strong&gt;).  As the name implies, the developer relates with the users of his or her company‚Äôs product. &lt;/p&gt;

&lt;p&gt;And guess what? He relates with &lt;strong&gt;words&lt;/strong&gt;, not &lt;strong&gt;code&lt;/strong&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#you-learn-how-to-type-faster"&gt;
  &lt;/a&gt;
  You Learn How to Type Faster
&lt;/h3&gt;

&lt;p&gt;This may not be an obvious reason, but writing articles regularly increases your typing speed by at least 10 percent.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It increased mine by over 100 percent!&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;It also helps you get familiar with the positions of your keyboard. &lt;strong&gt;No more typing like a snail!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You don‚Äôt need me to remind you of the wonders this could do to your productivity as a developer.&lt;/p&gt;

&lt;p&gt;Another reason you should definitely consider writing more.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Let‚Äôs take a slight break from the non-technical part. If you want to learn the technical part of web development from ground up, I highly recommend  &lt;a href="https://gumroad.com/a/834147443"&gt;HTML To React By SleeplessYogi.&lt;/a&gt; &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#you-get-to-try-new-words"&gt;
  &lt;/a&gt;
  You Get To Try New Words
&lt;/h3&gt;

&lt;p&gt;Words make you sound smarter. There are over 170,000 words in your typical English Dictionary.&lt;/p&gt;

&lt;p&gt;If you are like me, who is always curious in discovering and applying new words, then writing is a &lt;strong&gt;perfect&lt;/strong&gt; way to do just that.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#you-connect-deeper-with-your-audience"&gt;
  &lt;/a&gt;
  You Connect Deeper With Your Audience
&lt;/h3&gt;

&lt;p&gt;Let‚Äôs be honest, no one would enjoy reading a blocks of code just like that. &lt;strong&gt;That‚Äôs drab!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Humans are naturally artistic. We appreciate a good work of art. &lt;/p&gt;

&lt;p&gt;A brilliant way of connecting deeper with your audience is by using the right words in the right context. The only way you can master this skill is by writing consistently.&lt;/p&gt;

&lt;p&gt;With articles, you can relate far more information to your audience in a way that they can &lt;strong&gt;deeply understand and connect with you&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#you-grow-a-loyal-audience-from-scratch"&gt;
  &lt;/a&gt;
  You Grow A Loyal Audience From Scratch
&lt;/h3&gt;

&lt;p&gt;After you have written and produced content constantly for a long period of time, people start to note you for your way of writing. &lt;/p&gt;

&lt;p&gt;Your content is shared, words go around are more people start to find you and appreciate your work. &lt;/p&gt;

&lt;p&gt;And with time, you amass a legion of audience who could go on to support your work. &lt;br&gt;
All these is possible only you engage more in writing as a software developer.&lt;/p&gt;

&lt;p&gt;As you can see, the benefits of starting a blog as a software developer are huge.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Would you want to miss out on all these opportunities?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If you enjoyed this article and want to support me, feel free to buy me my favourite fruit:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/ubahthebuilder"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kc5Aqnyc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.buymeacoffee.com/button-api/%3Ftext%3DBuy%2520me%2520a%2520pineapple%26emoji%3D%25F0%259F%258D%258D%26slug%3Dubahthebuilder%26button_colour%3De0b51a%26font_colour%3D000000%26font_family%3DCookie%26outline_colour%3D000000%26coffee_colour%3DFFDD00"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Thank you for your time and see you soon!&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>programming</category>
      <category>beginners</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Everything you need to know about blogging on dev.to!</title>
      <author>Fahad Imran</author>
      <pubDate>Sun, 09 May 2021 19:49:33 +0000</pubDate>
      <link>https://dev.to/testjoe1234/everything-you-need-to-know-about-blogging-on-dev-to-2oif</link>
      <guid>https://dev.to/testjoe1234/everything-you-need-to-know-about-blogging-on-dev-to-2oif</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Cover Photo by &lt;a href="https://unsplash.com/@anhdung?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Dung Anh&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/writing?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;New to DEV? Not sure where to get started? &lt;strong&gt;No worries!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In this blog, I will share &lt;strong&gt;tips&lt;/strong&gt;, &lt;strong&gt;tricks&lt;/strong&gt;, and &lt;strong&gt;resources&lt;/strong&gt; that you can use to write amazing articles in no time. This will apply whether you have never written a blog on DEV or you're just looking to improve your workflow.&lt;/p&gt;

&lt;p&gt;I will cover quite a lot of information in this post so it might be a bit lengthy, but I'll try my best to not bore you.&lt;/p&gt;

&lt;p&gt;So, take a deep breath, grab some coffee and let's get started! ‚òï&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/5zf2M4HgjjWszLd4a5/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/5zf2M4HgjjWszLd4a5/giphy.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-choose-a-title-for-your-blog"&gt;
  &lt;/a&gt;
  1. Choose a title for your blog üí°
&lt;/h2&gt;

&lt;p&gt;The first thing you have to choose is the &lt;strong&gt;blog title&lt;/strong&gt;. It is important to have a title that describes what your blog is about. A good title can be the difference between people viewing your blog or skipping over it. Think of your blog title as a one-line summary of your blog.&lt;/p&gt;

&lt;p&gt;What I try to do is find &lt;strong&gt;keywords&lt;/strong&gt; that describe my blog content and include them in the blog title. This ensures that the title is relevant and to the point.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-tags-tags-tags"&gt;
  &lt;/a&gt;
  2. Tags, Tags, Tags üîñ
&lt;/h2&gt;

&lt;p&gt;On DEV, you can add up to &lt;strong&gt;4&lt;/strong&gt; tags on your blogs to help people find them. It is better to use existing tags whenever possible instead of making your own. You can view the existing tags on DEV &lt;a href="https://dev.to/tags"&gt;here&lt;/a&gt;. It must be noted that some tags have special guidelines that your blog must fulfill before you can include them in your blogs.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-cover-images-are-important"&gt;
  &lt;/a&gt;
  3. Cover images are important! üé®
&lt;/h2&gt;

&lt;p&gt;Cover images make your blog &lt;strong&gt;standout&lt;/strong&gt;. Blogs with cover images are more likely to be featured in the home feed of the website. Therefore, you must include one in your articles. For finding cover images you can use sites like &lt;a href="https://unsplash.com/"&gt;Unsplash&lt;/a&gt;, and &lt;a href="https://www.pexels.com/"&gt;Pexels&lt;/a&gt; or if you want to design one from scratch, you can try &lt;a href="https://www.canva.com/"&gt;Canva&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;All these sources have worked great for me so far. Just try to keep your cover image relevant and fun and you'll be fine.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pro Tip:&lt;/strong&gt; If you want to add a GIF as a cover image, just copy the GIF link and add it as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;---
cover_image: your_gif_link
---
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#4-you-have-to-learn-markdown"&gt;
  &lt;/a&gt;
  4. You HAVE to learn markdown! ‚ö°
&lt;/h2&gt;

&lt;p&gt;Before writing your blog you must be familiar with the &lt;strong&gt;basics of markdown&lt;/strong&gt; as you'll be using it to write your blogs on DEV. Markdown allows you to format your text, images, lists, etc. very easily. It is super easy to learn too. You can find dozens of cheat sheets floating around the web. I would recommend you give &lt;a href="https://www.markdownguide.org/cheat-sheet/"&gt;this one&lt;/a&gt; a look to get started.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-writing-the-draft-for-your-blog"&gt;
  &lt;/a&gt;
  5. Writing the draft for your blog üìú
&lt;/h2&gt;

&lt;p&gt;Once you've got the hang of markdown, the next thing is to write the draft for your blog. Although you can use the built-in editor that DEV provides, most people prefer to write their blogs on &lt;a href="https://docs.google.com/"&gt;Google Docs&lt;/a&gt; or &lt;a href="https://code.visualstudio.com/"&gt;VS Code&lt;/a&gt;. You can also use dedicated note-taking apps like &lt;a href="https://www.notion.so/"&gt;Notion&lt;/a&gt; which supports markdown as well.&lt;/p&gt;

&lt;p&gt;Whatever medium you use, I would highly recommend that you install a browser extension called &lt;a href="https://www.grammarly.com/"&gt;Grammarly&lt;/a&gt;. It is super helpful and will correct most of your grammatical and punctuation errors if not all of them. If you prefer VS Code, use an extension called &lt;a href="https://marketplace.visualstudio.com/items?itemName=yzhang.markdown-all-in-one"&gt;Markdown All in One&lt;/a&gt; as it allows you to preview markdown files and provides various editing options as well.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-dos-and-donts-of-writing"&gt;
  &lt;/a&gt;
  6. Dos and Dont's of writing! üö®
&lt;/h2&gt;

&lt;p&gt;While writing your blogs on DEV, here are some general writing tips to improve the flow of your blog:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Use short and simple sentences&lt;/strong&gt; as to not overwhelm the reader.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Break up your content&lt;/strong&gt; into smaller paragraphs and add sub-headings to them.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Use relevant images&lt;/strong&gt; in your blogs to explain a topic and make the blog more engaging (And Yes, memes count too! üòÖ).&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Add code snippets&lt;/strong&gt; to your blogs to explain programming concepts.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Include useful links and references&lt;/strong&gt; to provide additional information in your articles.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Don't spam your social media&lt;/strong&gt; links in your blog. No one wants to follow such a person. Try to provide value to others. If you want, just plug one or two social links at the end of the blog post.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#7-lets-add-some-youtube-videos"&gt;
  &lt;/a&gt;
  7. Let's add some YouTube videos! üé•
&lt;/h2&gt;

&lt;p&gt;If you want to embed &lt;strong&gt;YouTube videos&lt;/strong&gt; in your blogs, you can easily do so using Liquid tags that DEV provides. To embed videos, copy the video id from the URL and add it to the blog as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{% youtube your_video_id %}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you want to learn more about Liquid tags check out the &lt;a href="https://dev.to/p/editor_guide"&gt;editor guide&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-making-a-series"&gt;
  &lt;/a&gt;
  8. Making a series! üìå
&lt;/h2&gt;

&lt;p&gt;For topics that require more explaining, you can also &lt;strong&gt;make a series&lt;/strong&gt; on DEV. Series are great for topics that have different parts. Instead of cramming all the information in a single article, you can split it up into multiple smaller posts.&lt;/p&gt;

&lt;p&gt;In order to make a series, just give it a name and your blog will automatically be added to that series. Dev will also show a series list at the top of the blogs in that series for navigation (excellent üôå).&lt;/p&gt;

&lt;p&gt;It must be noted that the series will only appear if it has at least &lt;strong&gt;2&lt;/strong&gt; blog posts.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#9-simple-gtgt-complex"&gt;
  &lt;/a&gt;
  9. Simple &amp;gt;&amp;gt; Complex üòµ
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;"Genius is making complex ideas simple, not making simple ideas complex" &lt;strong&gt;~ Albert Einstein&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;KISS&lt;/strong&gt; (Keep It Simple Stupid) principle applies here as well. Keep your blog posts short and simple. No one has the time to read blogs that look like research papers. I am guilty of this habit as well. But you should keep your blogs concise and limited to &lt;strong&gt;5-7 min max&lt;/strong&gt; in most cases (although there can be some exceptions).&lt;/p&gt;

&lt;p&gt;Additionally, try to explain the concept in the easiest way possible so people with little to no background knowledge can also understand the concept without pulling their hair out. üò´&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#10-canonical-urls-are-no-joke"&gt;
  &lt;/a&gt;
  10. Canonical URLs are no joke! üîó
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;If you're just writing blogs on DEV and not republishing from elsewhere, feel free to skip this section.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;However, if you're republishing your blogs from elsewhere whether it be Medium, Hashnode, or your personal website, &lt;strong&gt;read carefully&lt;/strong&gt;. It is important that you add a &lt;strong&gt;Canonical URL&lt;/strong&gt; to your articles published elsewhere on the web.&lt;/p&gt;

&lt;p&gt;A Canonical URL tells the search engines like &lt;strong&gt;Google&lt;/strong&gt;, where the original source of the content/article is. If you don't add a canonical article to your blog, the search engine will consider it as duplicate content. And there is a high chance that the republished version on DEV will &lt;strong&gt;rank higher&lt;/strong&gt; on search results as compared to the one originally published on your personal blog. Consequently, you'll get less traffic on your website which is no fun. üò•&lt;/p&gt;

&lt;p&gt;Thankfully, DEV allows you to easily add a Canonical URL to your blog posts and also displays an &lt;strong&gt;" Originally published on XYZ.com "&lt;/strong&gt; message at the top.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Lbu2mQlS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8ib70ngghebcalezkpam.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Lbu2mQlS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8ib70ngghebcalezkpam.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you want to learn more about republishing and Canonical URLs check out this &lt;a href="https://medium.com/@edithyeghiazaryan/republish-your-content-using-a-canonical-tag-3eb47b68ee2f"&gt;article&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#11-finallyhit-that-publish-button"&gt;
  &lt;/a&gt;
  11. Finally...Hit that publish button! üöÄ
&lt;/h2&gt;

&lt;p&gt;After you've finished writing the blog post, you can &lt;strong&gt;save the draft&lt;/strong&gt; of the post. This will allow you to share the URL of the article with your friends, family, editor, etc. for proofreading.&lt;/p&gt;

&lt;p&gt;Once you're satisfied with the final result, you can then &lt;strong&gt;publish&lt;/strong&gt; it for everyone to see. The stats on your blog (view, likes, and comments) can be viewed in the &lt;strong&gt;Profile Dashboard&lt;/strong&gt;. You can edit the blog anytime after publishing it, so don't worry if you find any mistakes in your blog. Just edit it out! üòâ&lt;/p&gt;

&lt;p&gt;Congratulations! You've published your first blog on DEV.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/Srf1W4nnQIb0k/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/Srf1W4nnQIb0k/giphy.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Easy, wasn't it?&lt;/strong&gt; After you've done this process a couple of times, it'll become easier and you'll get the hang of it, trust me.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#12-promoting-your-blog-on-social-media"&gt;
  &lt;/a&gt;
  12. Promoting your blog on social media! üì¢
&lt;/h2&gt;

&lt;p&gt;After publishing your article on DEV, you can then share the link on social media accounts like Twitter, Facebook, and Linkedin, etc. The official Twitter account of DEV &lt;a href="https://twitter.com/ThePracticalDev?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor"&gt;@ThePracticalDev&lt;/a&gt; also shares blog posts that are good and get featured. This is a very nice gesture, as you can get a &lt;strong&gt;far greater reach&lt;/strong&gt; in this way, especially if you're just starting out and don't have a huge audience.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#thats-all-folks"&gt;
  &lt;/a&gt;
  That's all folks! üôè
&lt;/h2&gt;

&lt;p&gt;If you have any questions feel free to ask me in the comments üëáand I will do my best to answer them. Feel free to read some of my other blogs on DEV @fahadimran23. Thanks for reading and happy coding! üòÄ&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/HJ8NsNtn9VswE/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/HJ8NsNtn9VswE/giphy.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#if-you-enjoyed-reading-this-article-please-give-it-a-or"&gt;
  &lt;/a&gt;
  If you enjoyed reading this article, please give it a ‚ù§Ô∏è, ü¶Ñ, or üîñ
&lt;/h4&gt;

</description>
      <category>beginners</category>
      <category>codenewbie</category>
      <category>productivity</category>
      <category>writing</category>
    </item>
    <item>
      <title>Message Queue Service using Kafka</title>
      <author>Chandraprakash Soni</author>
      <pubDate>Sun, 09 May 2021 19:18:00 +0000</pubDate>
      <link>https://dev.to/icpsoni/message-queue-service-using-kafka-2bli</link>
      <guid>https://dev.to/icpsoni/message-queue-service-using-kafka-2bli</guid>
      <description>&lt;p&gt;In this article, we are going to create a Message Queue Service using Kafka and KafkaJS, somewhere similar to SQS, and we will make sure that messages are processed exactly once, in the exact order that they are sent. We will also implement the redelivery mechanism to make sure that if something fails in our business logic, we can add it to the queue again.&lt;br&gt;
&lt;strong&gt;Find the source code on Github:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://github.com/icpsoni/kafka-message-queue"&gt;https://github.com/icpsoni/kafka-message-queue&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;1: Get Kafka&lt;/strong&gt;&lt;br&gt;
Download Kafka and extract it from here, and navigate to the directory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ tar -xzf &amp;lt;file_name&amp;gt;.tgz
$ cd &amp;lt;file_name&amp;gt;tec
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;2: Start the Kafka Environment&lt;/strong&gt;&lt;br&gt;
NOTE: Your local environment must have Java 8+ installed.&lt;br&gt;
Run the following commands to start ZooKeeper:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# Start the ZooKeeper service
# Note: Soon, ZooKeeper will no longer be required by Apache Kafka.
$ bin/zookeeper-server-start.sh config/zookeeper.properties
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Open another terminal session and run Kafka Broker service using:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# Start the Kafka broker service
$ bin/kafka-server-start.sh config/server.properties
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once all services have successfully launched, you will have a basic Kafka environment running and ready to use.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3: Create a Topic to Store our Queue Messages&lt;/strong&gt;&lt;br&gt;
With the following command, we will create a topic called ‚Äúmessage-queue‚Äù in our Kafka.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ bin/kafka-topics.sh --create --topic message-queue --bootstrap-server localhost:9092
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To check the created topic use this command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ bin/kafka-topics.sh --describe --topic message-queue --bootstrap-server localhost:9092
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can create a topic with any number of partitions, In here we are using 1 partition only.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#creating-services-using-kafkajs"&gt;
  &lt;/a&gt;
  Creating Services Using KafkaJS
&lt;/h2&gt;

&lt;p&gt;We basically need 3 things to make our queue system work perfectly.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Sending Events to Kafka Queue topic.&lt;/li&gt;
&lt;li&gt;Subscribing to the topic and reading the Queue Message.&lt;/li&gt;
&lt;li&gt;Handling the redelivery.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#kafkaconfigjs"&gt;
  &lt;/a&gt;
  kafka-config.js
&lt;/h3&gt;

&lt;p&gt;The following snippet contains the basic config of Kafka that we need for our queue system.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// Using KafkaJs nodejs library
import { Kafka } from 'kafkajs';

// kafka broker running on localhost:9092 default port
const kafkaBroker = 'localhost:9092';

// kafka topic used for queue messages
export const kafkaTopic = 'message-queue';

// kafka client with basic config
export const KafkaClient = new Kafka({
  brokers: [kafkaBroker]
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#producerjs"&gt;
  &lt;/a&gt;
  producer.js
&lt;/h3&gt;

&lt;p&gt;This service will send messages to the Kafka topic we created earlier. We can use &lt;code&gt;sendMessageToQueue&lt;/code&gt; function and pass the message object which needs to be sent to Kafka.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { KafkaClient } from './index.js';
import { kafkaTopic } from "./kafka-config";

export const sendMessageToQueue = async (message) =&amp;gt; {
  const producer = KafkaClient.producer();
  await producer.connect();
  await producer.send({
    topic: kafkaTopic,
    messages: [
      {
        value: message // Your message data goes here
      }
    ]
  });
  // Disconnect producer once message sending is done.
  await producer.disconnect();
};
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#messagequeuejs"&gt;
  &lt;/a&gt;
  message-queue.js
&lt;/h3&gt;

&lt;p&gt;This is our main service that takes care of receiving the messages from the Kafka queue doing the business logic and handling the redelivery if something goes wrong in business logic.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { sendMessageToQueue } from "./producer.js";
import { KafkaClient, kafkaTopic, kafkaGroupId } from "./kafka-config.js";

export const consumeMessage = async () =&amp;gt; {
  // Creating a Consumer Instance
  const consumer = KafkaClient.consumer({
    groupId: kafkaGroupId,
  });

  await consumer.connect();
  // Subscribing to out Kafka topic
  await consumer.subscribe({ topic: kafkaTopic, fromBeginning: true});

  await consumer.run({
    autoCommit: false, // It won't commit message acknowledge to kafka until we don't do manually
    eachMessage: async ({ topic, partition, message}) =&amp;gt; {
      const messageData = message.value.toString();
      try {
        // Do the business Logic
        console.info('Received Message', messageData);
      } catch (error) {
        console.error(error);
        // Resending message to kafka queue for redelivery
        await sendMessageToQueue(messageData);
      } finally {
        const offset = +message.offset + 1;
        // Committing the message offset to Kafka
        await consumer.commitOffsets([{topic: kafkaTopic, partition, offset: offset.toString()}]);
      }
    }
  });
};
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Download the source&lt;/strong&gt;&lt;br&gt;
&lt;em&gt;Bonus: It contains test sample files too.&lt;/em&gt;&lt;br&gt;
&lt;a href="https://github.com/icpsoni/kafka-message-queue"&gt;https://github.com/icpsoni/kafka-message-queue&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;References:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://kafka.apache.org/quickstart"&gt;https://kafka.apache.org/quickstart&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kafka.js.org/docs/getting-started"&gt;https://kafka.js.org/docs/getting-started&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>kafka</category>
      <category>sqs</category>
      <category>queue</category>
      <category>javascript</category>
    </item>
    <item>
      <title>API To Spice Up Your Website or Client's Website</title>
      <author>Elijah Trillionz</author>
      <pubDate>Sun, 09 May 2021 19:02:31 +0000</pubDate>
      <link>https://dev.to/elijahtrillionz/api-to-spice-up-your-website-or-client-s-website-4287</link>
      <guid>https://dev.to/elijahtrillionz/api-to-spice-up-your-website-or-client-s-website-4287</guid>
      <description>&lt;p&gt;Have you built a business website or portfolio for a client? Or are you currently making one? Do you have a personal website or portfolio? Here is an API to spice up that website.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#spurwing"&gt;
  &lt;/a&gt;
  &lt;a href="https://spurwing.io"&gt;Spurwing&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://spurwing.io"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ukp2JKzE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://webdeverguide.com/wp-content/uploads/2021/05/spurwing.png" alt="Spurwing.io" title="Spurwing.io"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Spurwing is a web app for scheduling and calendar management. It also has an API for easy integration on your application.&lt;/p&gt;

&lt;p&gt;What is &lt;strong&gt;Spurwing&lt;/strong&gt; really about?&lt;/p&gt;

&lt;p&gt;Spurwing manages your schedules as a business person, freelancer, doctor, therapist, educationist, CEO, etc.&lt;/p&gt;

&lt;p&gt;Your clients can book an appointment with you through your website. And all of your appointment activities are managed in your Spurwing dashboard.&lt;/p&gt;

&lt;p&gt;So as a developer who is making a website for a client. Let's say your client is a Therapist, with your client's website, clients can book an appointment with your client with just a few clicks thanks to you.&lt;/p&gt;

&lt;p&gt;With such a tool as Spurwing, you're not going to have a static calendar showing the days your client is available (since the publishing of the website).&lt;/p&gt;

&lt;p&gt;Instead, you'll have a dynamic calendar. As such your client can go on a one-week vacation and it will reflect on your client's website.&lt;/p&gt;

&lt;p&gt;Brilliant! Right? I call it, having a static website with a dynamic feature.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#here-is-how-it-works"&gt;
  &lt;/a&gt;
  Here is How it Works
&lt;/h2&gt;

&lt;p&gt;From here henceforth, I am assuming you (the developer or whoever you are reading this) as the owner of the website:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;You integrate the API on the proposed website&lt;/li&gt;
&lt;li&gt;Visitors or clients can book an appointment with you.&lt;/li&gt;
&lt;li&gt;You can accept or decline meetings on your Spurwing dashboard.&lt;/li&gt;
&lt;li&gt;Your client (who just booked) will get an instant notification (via e-mail or SMS) on accepted or declined meetings.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Trust me, there is a lot of good stuff they offer. But we will break the above steps into features Spurwing offers that will enable you to achieve the purpose (&lt;em&gt;booking appointment&lt;/em&gt;).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-security"&gt;
  &lt;/a&gt;
  1. Security
&lt;/h3&gt;

&lt;p&gt;This is a very important aspect that you should consider for such a tool. You wouldn't want nobody to know about your schedules right? Especially when you are international. Knowing your schedules is like knowing your next movement.&lt;/p&gt;

&lt;p&gt;Not to worry as all your data is encrypted and stored at &lt;a href="https://www.imperva.com/learn/data-security/soc-2-compliance/"&gt;SOC 2&lt;/a&gt; certified facilities and fully audit logged.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://www.imperva.com/learn/data-security/soc-2-compliance/"&gt;SOC 2&lt;/a&gt; is an auditing procedure that ensures your service providers securely manage your data to protect the interests of your organization and the privacy of its clients.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://www.imperva.com/learn/data-security/soc-2-compliance/"&gt;SOC 2&lt;/a&gt; defines criteria for managing customer based data based on five trust service principles i.e &lt;strong&gt;Security&lt;/strong&gt;, &lt;strong&gt;Availability&lt;/strong&gt;, &lt;strong&gt;Processing Integrity&lt;/strong&gt;, &lt;strong&gt;Confidentiality&lt;/strong&gt; and &lt;strong&gt;Privacy.&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-api-or-opensource-widget"&gt;
  &lt;/a&gt;
  2. API or Open-Source Widget:
&lt;/h3&gt;

&lt;p&gt;With Spurwing you can either integrate with its &lt;a href="https://github.com/Spurwing/Appointment-Scheduling-Widgets"&gt;open-source widget&lt;/a&gt; or create from scratch with its &lt;a href="https://docs.spurwing.io/"&gt;API&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;What and How do I mean?&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#spurwing-api"&gt;
  &lt;/a&gt;
  Spurwing API
&lt;/h4&gt;

&lt;p&gt;The API is a great way to integrate into your website. It is packed full with enough endpoints for maximal use. With this API, you can&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#gtgt-create-list-and-delete-appointment-types"&gt;
  &lt;/a&gt;
  &lt;a href="https://docs.spurwing.io/docs/spurwing/reference/SpurWing.v1.yaml/paths/~1appointment_types/get"&gt;&amp;gt;&amp;gt; Create, List and Delete Appointment types:&lt;/a&gt;
&lt;/h5&gt;

&lt;p&gt;An appointment type is like saying the type of meeting you accept. Say you're Elon Musk your appointment types could be business, bitcoin investment, motivational speech, family, etc.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://spurwing.io"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Yb7a8TmU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://webdeverguide.com/wp-content/uploads/2021/05/spurwing-appointment-type.png" alt="spurwing-appointment-type" title="spurwing-appointment-type"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It can be more than one of course. Appointment types are about recurring activities or meetings in your line of work.&lt;/p&gt;

&lt;p&gt;With these endpoints, your clients can specify which type of meeting He/She intends to have with you.&lt;/p&gt;

&lt;p&gt;Each appointment type has a time interval that indicates how long you intend that kind of meeting to last. It can be in 60 minutes, 720 minutes (that feels like a lifetime though), or as short as 15 minutes.&lt;/p&gt;

&lt;p&gt;With these endpoints, you can also specify the contact types through which the meeting will be conducted. See the &lt;a href="https://docs.spurwing.io/docs/spurwing/reference/SpurWing.v1.yaml/paths/~1appointment_types/post"&gt;documentation&lt;/a&gt; to know the available contact types and how to use them.&lt;/p&gt;

&lt;p&gt;As the owner of the account, you can specify which options are suitable for you for that particular meeting type. If you only want to be contacted by one means, that is the only means that will reflect on your site.&lt;/p&gt;

&lt;p&gt;With the API, &lt;em&gt;you can also &lt;code&gt;Get&lt;/code&gt; a specific appointment type as well as update an appointment type.&lt;/em&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#gtgt-create-list-and-delete-appointments"&gt;
  &lt;/a&gt;
  &lt;a href="https://docs.spurwing.io/docs/spurwing/reference/SpurWing.v1.yaml/paths/~1appointments/get"&gt;&amp;gt;&amp;gt; Create, List and Delete Appointments&lt;/a&gt;
&lt;/h5&gt;

&lt;p&gt;&lt;a href="https://spurwing.io"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tkpqiPJy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://webdeverguide.com/wp-content/uploads/2021/05/spurwing-appointments.png" alt="spurwing-appointments" title="spurwing-appointments"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Appointments can be individual appointments or group appointments. With these endpoints, you can &lt;strong&gt;create&lt;/strong&gt;, &lt;strong&gt;list&lt;/strong&gt; or &lt;strong&gt;delete&lt;/strong&gt; a  1 on 1 video chat appointment or in-person group appointment. See &lt;a href="https://docs.spurwing.io/docs/spurwing/reference/SpurWing.v1.yaml/paths/~1appointments/post"&gt;docs&lt;/a&gt; for more details and instruction.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;You can also *&lt;/em&gt;&lt;code&gt;Get&lt;/code&gt;** a specific appointment as well as &lt;strong&gt;update&lt;/strong&gt; an appointment.*&lt;/p&gt;

&lt;p&gt;In creating an appointment there is another endpoint that does the same job as this endpoint. In fact, the demo schedule in the Spurwing homepage uses the other endpoint.&lt;/p&gt;

&lt;p&gt;The other endpoint is the &lt;a href="https://docs.spurwing.io/docs/spurwing/reference/SpurWing.v1.yaml/paths/~1bookings~1complete_booking/post"&gt;complete-booking appointment&lt;/a&gt;. The complete-booking appointment lets you create a booking for a client on behalf of that client. That means it will create a client account for that client (or attendee now).&lt;/p&gt;

&lt;p&gt;The complete-booking appointment also enforces availability unlike the formal. It makes sure you are available before creating the appointment.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#gtgt-create-list-and-delete-availability-objects"&gt;
  &lt;/a&gt;
  &lt;a href="https://docs.spurwing.io/docs/spurwing/reference/SpurWing.v1.yaml/paths/~1availabilities/get"&gt;&amp;gt;&amp;gt; Create, List and Delete Availability Objects&lt;/a&gt;
&lt;/h5&gt;

&lt;p&gt;&lt;a href="https://spurwing.io"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3iQ1dI7g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://webdeverguide.com/wp-content/uploads/2021/05/spurwing-availability-objects.png" alt="Spurwing-availability-objects" title="Spurwing-availability-objects"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;When are you available Mr. Elon Musk?&lt;/strong&gt; With these endpoints, you can &lt;strong&gt;create&lt;/strong&gt; a recurring availability or a one-time availability. You can also &lt;strong&gt;list&lt;/strong&gt; and &lt;strong&gt;delete&lt;/strong&gt; them.&lt;/p&gt;

&lt;p&gt;Let's say you're usually available from Monday to Friday (recurring availability). This week you decided to create a special time for your clients on Saturday, only this week (one-time availability).&lt;/p&gt;

&lt;p&gt;For recurring availability, you can specify the start and end times daily. And by that, I don't mean you do it daily. I mean how you want it to run daily. It's a one-time setup and a recurring availability.&lt;/p&gt;

&lt;p&gt;It can also be &lt;strong&gt;updated&lt;/strong&gt; of course and you can also &lt;strong&gt;&lt;code&gt;Get&lt;/code&gt;&lt;/strong&gt; a specific availability object. You should see &lt;a href="https://docs.spurwing.io/docs/spurwing/reference/SpurWing.v1.yaml/paths/~1availabilities/post"&gt;docs&lt;/a&gt; for more.&lt;/p&gt;

&lt;p&gt;These are the most endpoints we can take for now. Check the others on the &lt;a href="https://docs.spurwing.io/"&gt;documentation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;All of Spurwing's endpoints can be tested in its documentation. You don't need to create a new project first or use Postman (or the new Thunder Client) to get familiar with the endpoints. It's called &lt;em&gt;Practive as you learn.&lt;/em&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#spurwing-opensource-widget"&gt;
  &lt;/a&gt;
  Spurwing Open-Source Widget:
&lt;/h4&gt;

&lt;p&gt;Almost everything you can do with the API can be done with your Spurwing dashboard. You can set up your appointment types, availability, contact types, book appointments with past clients, etc.&lt;/p&gt;

&lt;p&gt;The one thing you should not do is what the complete-booking endpoint does (stated above) though it is possible to do so. As we have first said, the complete-booking endpoint creates makes a booking on behalf of the client.&lt;/p&gt;

&lt;p&gt;As Elon you'd say to your clients (on your website); "Hey! Here is my Spurwing's email &amp;amp; password, log in, got to the dashboard, and book an appointment with me".&lt;/p&gt;

&lt;p&gt;Or you could say "Hey, you want to book an appointment with me send me your name, email, and phone number and I will do it myself". That's suicidal.&lt;/p&gt;

&lt;p&gt;To solve this, you can either use one of the API's endpoints (as discussed above) or use Spurwing's open-source widget.&lt;/p&gt;

&lt;p&gt;You can actually book meetings with your past clients (already recognized clients of yours, usually saved in Spurwing), but it's not the best if you're going to do it manually. I mean you have an API and an Open-Source widget for that.&lt;/p&gt;

&lt;p&gt;The open-source widget is a simple link (it's in your dashboard) with your provider_id (a form of id) that your clients will use to book an appointment with you.&lt;/p&gt;

&lt;p&gt;All of your appointment types, availability are handled within this widget. In booking an appointment with you, with this widget, your clients can&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#select-an-appointment-type"&gt;
  &lt;/a&gt;
  Select an Appointment Type
&lt;/h5&gt;

&lt;p&gt;&lt;a href="https://spurwing.io"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TEAppWiK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://webdeverguide.com/wp-content/uploads/2021/05/spurwing_open-source-widget-appointment-type.png" alt="spurwing-open-source-widget-appointment-type" title="spurwing-open-source-widget-appointment-type"&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Recall that I created the listed appointment types (in the image above) in my Spurwing dashboard. And I did specify phone call or video call as the contact type for each of them. I also specified the time interval in minutes.&lt;/p&gt;

&lt;p&gt;Now all of that is reflected in this widget, such that my client can select the type of meeting, the contact type, as well as see the time interval I accept for such meeting.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#select-date-and-time"&gt;
  &lt;/a&gt;
  Select Date and Time
&lt;/h5&gt;

&lt;p&gt;&lt;a href="https://spurwing.io"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A6qg_3w9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://webdeverguide.com/wp-content/uploads/2021/05/spurwing_open-source-widget-date-and-time-original.png" alt="spurwing_open-source-widget-date-and-time-original" title="spurwing_open-source-widget-date-and-time-original"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I believe you can see the light blue indicator on each day showing I am available all day. Now there is a little issue here that I would have loved to point out, but it will confuse those who don't have an account yet.&lt;/p&gt;

&lt;p&gt;The issue is not a big deal though, it's just a caution. If you have created an account and you want me to tell you, hit me up in the comment section.&lt;/p&gt;

&lt;p&gt;Now when I am not available, it will show that I am not available. So that should tell you that this widget uses the complete-booking appointment endpoint (as discussed in the API section).&lt;/p&gt;

&lt;p&gt;One cool thing I should mention is timezones. Looking up at the image (yeah the one with very low contrast), just below the Month, Day, and Year; you will find my timezone. With Spurwing timezone is well handled.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#submit-their-contact-information"&gt;
  &lt;/a&gt;
  Submit their Contact Information
&lt;/h5&gt;

&lt;p&gt;&lt;a href="https://spurwing.io"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7o30-MbP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://webdeverguide.com/wp-content/uploads/2021/05/spurwing_open-source-widget-confirm-information.png" alt="spurwing_open-source-widget-confirm-information" title="spurwing_open-source-widget-confirm-information"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here is where your clients submit their information and boom, they are booked. Now you will have to confirm or deny their meetings on your Spurwing dashboard.&lt;/p&gt;

&lt;p&gt;Every new client is indexed in your dashboard, you get to see all your clients. An existing client that books an appointment is regarded as an existing client (an already recognized client).&lt;/p&gt;

&lt;p&gt;The uniqueness is the email. With the email, they recognize an already &lt;strong&gt;&lt;em&gt;existing client&lt;/em&gt;&lt;/strong&gt;. This is achieved with the complete-booking endpoint as specified in the docs. So don't worry if you're not going to use the open-source widget.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-fully-branded"&gt;
  &lt;/a&gt;
  3. Fully Branded
&lt;/h3&gt;

&lt;p&gt;With Spurwing, you can brand your business without any Spurwing watermark. Emails sent to your clients when they book will contain your brand and not theirs.&lt;/p&gt;

&lt;p&gt;You can see that even in the widget, there is no Spurwing logo or any 'Made with love by Spurwing' text. It's plainly about your business.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-easy-peasy"&gt;
  &lt;/a&gt;
  4. Easy peasy
&lt;/h3&gt;

&lt;p&gt;Spurwing's dashboard is very easy to work with. There is a calendar that shows your schedule (a very detailed calendar).&lt;/p&gt;

&lt;p&gt;The good thing is, Spurwing is synced with Google Calendar, Outlook, and iCal, so you can likewise view your schedules using any of those calendars.&lt;/p&gt;

&lt;p&gt;These are some of the features I can post now, there are several others but I don't want this article to be too long. You can visit their website at spurwing.io to see more.&lt;/p&gt;

&lt;p&gt;Though there is one thing, I'd like to add i.e &lt;a href="https://www.spurwing.io/blog"&gt;&lt;strong&gt;Spurwing's blog&lt;/strong&gt;&lt;/a&gt;. It's a great place where they share ideas, tips, and tutorials about their services. You should check it out.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Introduce this feature to your clients and they'll love it. It's a major aspect of their business's growth. And on your path as a developer, integrating the API or open-source widget is just easy.&lt;/p&gt;

&lt;p&gt;There is this idea that I have for this appointment booking and scheduling. If you've been following me, you'd remember I created an &lt;a href="https://dev.to/elijahtrillionz/building-a-project-with-javascript-objects-1dn"&gt;appointment booking app with purely JavaScript Accessors&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I wanted to use it with this API, but after lots of review and sketching, I saw that using the API seems like not using any API at all.&lt;/p&gt;

&lt;p&gt;What I intended to do was have a Spurwing account that can handle multiple accounts (as seen in &lt;a href="https://github.com/Elijah-trillionz/appointment-booking-app"&gt;this project&lt;/a&gt;). After all of my sketching, the one question I kept asking myself is 'What's the role of Spurwing?'.&lt;/p&gt;

&lt;p&gt;I may make it just for practice but not for production, it's best to create an individual Spurwing account.&lt;/p&gt;

&lt;p&gt;Alright, that's it for today. If you found this article helpful, kindly like and share. If you'd like to say another article from me, please do &lt;a href="https://buymeacoffee.com"&gt;buy a coffee&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>webdev</category>
      <category>discuss</category>
      <category>programming</category>
    </item>
    <item>
      <title>I‚Äôm a release manager for PHP 8.1!</title>
      <author>Ben Ramsey</author>
      <pubDate>Sun, 09 May 2021 18:58:14 +0000</pubDate>
      <link>https://dev.to/ramsey/i-m-a-release-manager-for-php-8-1-24i2</link>
      <guid>https://dev.to/ramsey/i-m-a-release-manager-for-php-8-1-24i2</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;My permanent blog at &lt;a href="https://benramsey.com"&gt;benramsey.com&lt;/a&gt; is in a state where I am unable to update it. It‚Äôs a long story that involves versions of Ruby gems removed from the repository, trapping me in a tangled web of &lt;a href="https://jekyllrb.com"&gt;Jekyll&lt;/a&gt; dependency hell, and I haven‚Äôt had the stomach to unravel it. In the meantime, I‚Äôll be posting here at &lt;a href="https://dev.to/ramsey"&gt;dev.to/ramsey&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Last year, I tossed my hat in the ring to volunteer as a release manager for PHP 8.0, but I lost the vote to &lt;a href="https://github.com/carusogabriel"&gt;Gabriel Caruso&lt;/a&gt;, who has shown himself to be a very capable RM for the 8.0 series (congrats, Gabriel, and great work!). This year, when &lt;a href="https://externals.io/message/113334"&gt;Sara announced the RM selection process&lt;/a&gt; for PHP 8.1, I almost decided against volunteering, but I finally decided to go for it, and I‚Äôm glad I did.&lt;/p&gt;

&lt;p&gt;Each set of release managers is usually comprised of a veteran RM and a rookie. This year, when &lt;a href="https://twitter.com/krakjoe"&gt;Joe Watkins&lt;/a&gt; volunteered as the veteran RM, he asked to take on two rookies. As a result, &lt;a href="https://github.com/patrickallaert"&gt;Patrick Allaert&lt;/a&gt; and I were &lt;a href="https://wiki.php.net/todo/php81"&gt;both selected as rookie RMs for the 8.1 series&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;PHP release managers manage the release process, create a roadmap for the release, facilitate discussions and decisions about what goes into a release, package the releases, etc. It‚Äôs a commitment of about three-and-a-half years, as they shepherd their minor version from alpha to beta to RC to GA to active support to security support and, finally, end-of-life. The &lt;a href="https://www.php.net/supported-versions.php"&gt;supported versions&lt;/a&gt; page at php.net provides a good overview of this cycle.&lt;/p&gt;

&lt;p&gt;You can read more about the PHP release process here:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://wiki.php.net/rfc/releaseprocess"&gt;Request for Comments: Release Process&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/php/php-src/blob/master/docs/release-process.md"&gt;PHP release process&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Additionally, &lt;a href="https://twitter.com/shocm"&gt;Eric Van Johnson&lt;/a&gt; has published a three-part interview in &lt;em&gt;php[architect]&lt;/em&gt; magazine with PHP 8.0 release managers Sara Golemon and Gabriel Caruso. They go into a lot of the specifics.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.phparch.com/article/community-corner-php-8-release-managers-interview-with-sara-golemon-and-gabriel-caruso-part-1/"&gt;Community Corner: PHP 8 Release Managers: Interview with Sara Golemon and Gabriel Caruso, Part 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.phparch.com/article/community-corner-php-8-release-managers-interview-with-sara-golemon-and-gabriel-caruso-part-two/"&gt;Part 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.phparch.com/article/community-corner-php-8-release-managers-interview-with-sara-golemon-and-gabriel-caruso-part-three/"&gt;Part 3&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thank you so much to everyone for entrusting me to serve as one of the release managers for  PHP 8.1! I look forward to working with Joe and Patrick over the next three-and-a-half years.&lt;/p&gt;

</description>
      <category>php</category>
    </item>
    <item>
      <title>When to use Class Component and Functional Component??</title>
      <author>Phani Murari</author>
      <pubDate>Sun, 09 May 2021 18:37:17 +0000</pubDate>
      <link>https://dev.to/phanimurari/where-to-use-class-component-and-functional-component-1ed5</link>
      <guid>https://dev.to/phanimurari/where-to-use-class-component-and-functional-component-1ed5</guid>
      <description>&lt;h3&gt;
  &lt;a href="#hello-everyone"&gt;
  &lt;/a&gt;
  Hello Everyone,
&lt;/h3&gt;

&lt;p&gt;In this post let's understand where to use the Class Component and Functional Component in react&lt;/p&gt;

&lt;p&gt;Before diving, Let's start understanding what is a component in react?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#component"&gt;
  &lt;/a&gt;
  Component
&lt;/h3&gt;

&lt;p&gt;Websites or Web Applications developed using react is the combination and interlinking of different Components.&lt;/p&gt;

&lt;p&gt;Components let you develop the UI of the website independently and even we can use reusable components to implement a similar UI.&lt;/p&gt;

&lt;p&gt;React facilitates the developer with &lt;strong&gt;Class Component&lt;/strong&gt; and &lt;strong&gt;Functional Components&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#class-components"&gt;
  &lt;/a&gt;
  Class Components
&lt;/h3&gt;

&lt;p&gt;Class Components are built using &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes"&gt;ES6 Class&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;class Welcome extends React.Component {
  render() {
    return &amp;lt;h1&amp;gt;Super Excited to post my first post in Dev Community&amp;lt;/h1&amp;gt;;
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#functional-component"&gt;
  &lt;/a&gt;
  Functional Component
&lt;/h3&gt;

&lt;p&gt;The simplest way to write the Component in react is to write a JavaScript function&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function welcome(props) {

 return &amp;lt;h1&amp;gt;Super Excited to post my first post in Dev Community&amp;lt;/h1&amp;gt;;

}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can use the Arrow Functions as well for the functional Components&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const welcome = (props) =&amp;gt; &amp;lt;h1&amp;gt;Super Excited to post my first post in Dev Community&amp;lt;/h1&amp;gt;;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Hope we had a short and good recap about the Class and Functional Components&lt;/p&gt;

&lt;p&gt;The above two components which are written in class and Functional Components are equivalent from React‚Äôs point of view.&lt;/p&gt;

&lt;p&gt;Now the major question rises in your developer's mind!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#when-to-use-the-class-component-and-the-functional-component"&gt;
  &lt;/a&gt;
  When to use the Class Component and the Functional Component??
&lt;/h1&gt;

&lt;p&gt;To answer this question we need to have a decent understanding of the state of the component.&lt;/p&gt;

&lt;p&gt;To recall or revise the concept of the &lt;code&gt;state&lt;/code&gt; of the component, I suggest you refer to &lt;a href="https://reactjs.org/docs/state-and-lifecycle.html#gatsby-focus-wrapper"&gt;this&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In class components, the render method will be called, whenever the state of the components changes. On the other hand, the Functional components render the UI based on the props.&lt;/p&gt;

&lt;p&gt;Whenever we have the use case with the State of the component and rendering the UI based on the Component State, use the &lt;strong&gt;Class Components&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Class Components&lt;/strong&gt; should be preferred whenever we have the requirement with the state of the component.&lt;/p&gt;

&lt;p&gt;I love to appreciate your enthusiasm to learn more.&lt;/p&gt;

&lt;p&gt;Thanks for Reading!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#im-phani-murari"&gt;
  &lt;/a&gt;
  I'm Phani Murari
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.instagram.com/im_phani_murari/"&gt;Instagram&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.linkedin.com/in/phanimurari/"&gt;LinkedIn&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#codeispeace"&gt;
  &lt;/a&gt;
  CodeIsPeace
&lt;/h1&gt;

</description>
      <category>react</category>
      <category>javascript</category>
    </item>
    <item>
      <title>How to Set Your Rates as a Freelancer</title>
      <author>Sam Tanoak Sycamore</author>
      <pubDate>Sun, 09 May 2021 18:24:11 +0000</pubDate>
      <link>https://dev.to/tanoaksam/how-to-set-your-rates-as-a-freelancer-15ac</link>
      <guid>https://dev.to/tanoaksam/how-to-set-your-rates-as-a-freelancer-15ac</guid>
      <description>&lt;h2&gt;
  &lt;a href="#why-do-freelancers-have-such-a-hard-time-explaining-how-they-set-their-rates"&gt;
  &lt;/a&gt;
  Why do freelancers have such a hard time explaining how they set their rates?
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#because-there-are-so-many-it-depends-factors-at-play-in-every-new-project"&gt;
  &lt;/a&gt;
  Because there are so many "it depends" factors at play in every new project!
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;what's your relationship with the client?&lt;/li&gt;
&lt;li&gt;what is their budget?&lt;/li&gt;
&lt;li&gt;is there potential for more work in the future?&lt;/li&gt;
&lt;li&gt;would this deal open other doors elsewhere?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;"Value" is subjective and complicated to quantify.&lt;/p&gt;

&lt;p&gt;What is valuable - and how valuable it is - varies greatly between clients and projects.&lt;/p&gt;

&lt;p&gt;For this reason:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#hourly-rates-are-not-ideal"&gt;
  &lt;/a&gt;
  Hourly rates are not ideal.
&lt;/h3&gt;

&lt;p&gt;I'm not saying don't ever accept hourly payment - get paid for your work - but the kind of work that freelancers do doesn't always equate well with this measurement of value.&lt;/p&gt;

&lt;p&gt;If I'm such a pro at what I do that it only takes me one hour to solve a problem that's costing your business $10k per month, does it make sense for me to be compensated $50 for one hour of my time?&lt;/p&gt;

&lt;p&gt;Because it sure sounds like the skill that I bring to the table is worth up to $10k here.&lt;/p&gt;

&lt;p&gt;You won't always have the power to negotiate in this way, of course.&lt;/p&gt;

&lt;p&gt;Depending on the circumstances, your client might just say "we have $1000 to spend on this, what can you do with that?"&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#youre-going-to-have-to-learn-the-hard-way-how-to-estimate-your-projects"&gt;
  &lt;/a&gt;
  You're going to have to learn - the hard way - how to estimate your projects.
&lt;/h3&gt;

&lt;p&gt;Nobody can do this step for you.&lt;/p&gt;

&lt;p&gt;And the only way you can learn how to do it, is to do it.&lt;/p&gt;

&lt;p&gt;You will make mistakes.&lt;/p&gt;

&lt;p&gt;That's ok! Chalk 'em up to learning experiences.&lt;/p&gt;

&lt;p&gt;Never cut corners or compromise on quality just because you miscalculated.&lt;/p&gt;

&lt;p&gt;Scope creep is something else altogether - if the client asks for more stuff, they have to sign a new contract outlining the new scope of the project, including the new fees they will incur.&lt;/p&gt;

&lt;p&gt;But if you accidentally end up paying yourself minimum wage because you bit off more than you could chew - it's still always in your best interest to deliver the best possible product.&lt;/p&gt;

&lt;p&gt;To come up with an estimate or a proposal for a project, you will need to consider:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;how much you would like to pay yourself&lt;/li&gt;
&lt;li&gt;how much you might need to spend on materials, research, outsourcing&lt;/li&gt;
&lt;li&gt;how much you will owe in taxes&lt;/li&gt;
&lt;li&gt;how much time it will take&lt;/li&gt;
&lt;li&gt;what is the going rate for this service&lt;/li&gt;
&lt;li&gt;what is the value to the client&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Those last 3 are worth considering in greater detail.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-time-it-takes"&gt;
  &lt;/a&gt;
  The Time it Takes
&lt;/h3&gt;

&lt;p&gt;Remember when I said don't bill hourly?&lt;/p&gt;

&lt;p&gt;Well, it's still good to have at least a fuzzy idea of how much you'd like to earn per hour for your services.&lt;/p&gt;

&lt;p&gt;Freelancing is all about optimizing that equation - getting paid more, in exchange for fewer hours.&lt;/p&gt;

&lt;p&gt;That's possible through experience, expertise and a solid reputation.&lt;/p&gt;

&lt;p&gt;When I built my first website for a client, I only had a rough idea of how much time it would take - I figured 10-20 hours, hopefully not more.&lt;/p&gt;

&lt;p&gt;At $1200, this time investment would earn me $60-120/hr.&lt;/p&gt;

&lt;p&gt;I would've been happy with any number in that range!&lt;/p&gt;

&lt;p&gt;In the end I walked away with about $75/hr before taxes. Not bad!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-going-rate"&gt;
  &lt;/a&gt;
  The Going Rate
&lt;/h3&gt;

&lt;p&gt;This will be your primary limiting factor, depending on your services and your clientele.&lt;/p&gt;

&lt;p&gt;When I was a music journalist, I was most commonly paid in free concert tickets and early access to new albums.&lt;/p&gt;

&lt;p&gt;As a musician - mainly just free beer.&lt;/p&gt;

&lt;p&gt;But if I knew enough about marketing to write something interesting in that field - there are publications that would happily pay me four or five figures for content that would be worth pennies in other industries.&lt;/p&gt;

&lt;p&gt;If nobody pays more than $200 for the thing you do, you're going to have a really hard time convincing anyone to pay you $500, let alone $2000.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-value-to-the-client"&gt;
  &lt;/a&gt;
  The Value to the Client
&lt;/h3&gt;

&lt;p&gt;This is the true X-factor in the equation.&lt;/p&gt;

&lt;p&gt;But the only way you can tap into it is if you're diligent about doing your research into the client and the market.&lt;/p&gt;

&lt;p&gt;If the website you build for a local business owner could generate $100k in new sales this year -&lt;/p&gt;

&lt;p&gt;You should be compensated accordingly.&lt;/p&gt;

&lt;p&gt;It doesn't matter how long it takes. &lt;/p&gt;

&lt;p&gt;What matters is how valuable your service is to the company.&lt;/p&gt;

&lt;p&gt;That's tricky to quantify, as I mentioned before.&lt;/p&gt;

&lt;p&gt;Before the work ever begins, then -&lt;/p&gt;

&lt;p&gt;Your job is to &lt;em&gt;demonstrate&lt;/em&gt; the value that you can offer.&lt;/p&gt;

&lt;p&gt;It all comes down to knowing your worth, and knowing that what you do is valuable.&lt;/p&gt;

&lt;p&gt;Don't know it yet?&lt;/p&gt;

&lt;p&gt;That's fine, just get started - the confidence will follow.&lt;/p&gt;

&lt;p&gt;And that's about as concise as I can be when it comes to explaining how I price freelancing projects!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#if-you-enjoyed-this-piece-and-you-want-to-keep-up-with-my-work-you-can-sign-up-for-my-email-newsletter-through-this-link-i-promise-to-make-every-email-something-you-will-be-excited-to-open"&gt;
  &lt;/a&gt;
  &lt;strong&gt;If you enjoyed this piece and you want to keep up with my work, you can &lt;a href="https://buttondown.email/samuelsycamore"&gt;sign up for my email newsletter through this link&lt;/a&gt;. I promise to make every email something you will be excited to open!&lt;/strong&gt;
&lt;/h2&gt;

</description>
    </item>
    <item>
      <title>What's the last project you contributed to?</title>
      <author>Madza</author>
      <pubDate>Sun, 09 May 2021 17:47:14 +0000</pubDate>
      <link>https://dev.to/madza/what-s-the-last-project-you-contributed-to-2kni</link>
      <guid>https://dev.to/madza/what-s-the-last-project-you-contributed-to-2kni</guid>
      <description>&lt;p&gt;Excluding your own projects, could you please share the last open-source project that you contributed to?&lt;/p&gt;

&lt;p&gt;Exciting to discover some new, awesome repositories.&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>github</category>
      <category>opensource</category>
    </item>
  </channel>
</rss>
