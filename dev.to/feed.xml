<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Get Instant Country Flags</title>
      <author>Nirazan Basnet</author>
      <pubDate>Fri, 09 Apr 2021 07:23:10 +0000</pubDate>
      <link>https://dev.to/younginnovations/get-instant-country-flags-22pe</link>
      <guid>https://dev.to/younginnovations/get-instant-country-flags-22pe</guid>
      <description>&lt;p&gt;While working on one of my projects, there is one feature where I need to display a specific flag depending upon the country code.&lt;/p&gt;

&lt;p&gt;My first approach was to get the country flags' zip file and extract it locally from the images folder. &lt;br&gt;
You can download the list of country flags from &lt;a href="https://flagpedia.net/download"&gt;here&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;I thought this can be easy. Then, I thought as the project was on ReactJs, I wonder there might be an API for the country flags.&lt;/p&gt;

&lt;p&gt;Then I came across,&lt;br&gt;
&lt;a href="https://www.countryflags.io/"&gt;Country Flags&lt;/a&gt; - A simple API to load any country flags&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;So, how does it work:&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#html"&gt;
  &lt;/a&gt;
  HTML
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://www.countryflags.io/:country_code/:style/:size.png"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#example"&gt;
  &lt;/a&gt;
  Example
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://www.countryflags.io/be/flat/64.png"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://www.countryflags.io/be/shiny/64.png"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#themes"&gt;
  &lt;/a&gt;
  Themes
&lt;/h3&gt;

&lt;p&gt;Currently, they have two themes - flat and shiny&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#sizes"&gt;
  &lt;/a&gt;
  Sizes
&lt;/h3&gt;

&lt;p&gt;Supported sizes are :&lt;br&gt;
**16 for 16px wide flags&lt;br&gt;
**24 for 24px wide flags&lt;br&gt;
**32 for 32px wide flags&lt;br&gt;
**48 for 48px wide flags&lt;br&gt;
**64 for 64px wide&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#simple-data-map-syntax-in-reactjs"&gt;
  &lt;/a&gt;
  Simple Data Map Syntax in ReactJs
&lt;/h3&gt;

&lt;p&gt;Code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;CountryList&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;countries_code&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;au&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;af&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;bd&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;br&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;in&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;country-list&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ul&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;countries_code&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;country_code&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;li&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;img&lt;/span&gt;
              &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;`https://www.countryflags.io/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;country_code&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/flat/64.png`&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
              &lt;span class="nx"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;...&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/li&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="p"&gt;))}&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/ul&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can check out the demo link &lt;a href="https://codesandbox.io/s/country-flag-list-1or0o"&gt;here&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Conclusion&lt;br&gt;
üëèüëè By coming this far I hope you can implement this awesome country flag API on your project. So, I suggest you give it a try on your project and enjoy it!&lt;/p&gt;

&lt;p&gt;Feel free to share your thoughts and opinions and leave me a comment if you have any problems or questions.&lt;/p&gt;

&lt;p&gt;Till then,&lt;br&gt;
Keep on Hacking, Cheers&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Make Your Own ToDo App with JavaScript!</title>
      <author>CristoferK</author>
      <pubDate>Fri, 09 Apr 2021 06:13:55 +0000</pubDate>
      <link>https://dev.to/cristoferk/make-your-own-todo-app-with-javascript-9pc</link>
      <guid>https://dev.to/cristoferk/make-your-own-todo-app-with-javascript-9pc</guid>
      <description>&lt;p&gt;Don't forget to Subscribe to my YouTube channel to learn programming fast and free: &lt;a href="https://www.youtube.com/channel/UCFzeA3xC-_i4ZT-XwcwsJxQ"&gt;https://www.youtube.com/channel/UCFzeA3xC-_i4ZT-XwcwsJxQ&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here is the code:&lt;/p&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
HTML
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;To Do List&amp;lt;/title&amp;gt;
&amp;lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&amp;gt;
&amp;lt;script src="https://kit.fontawesome.com/007b767ad0.js" crossorigin="anonymous"&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;style&amp;gt;
    * {
        margin: 0;
        border: 0;
        font-family: sans-serif;
    }
    h1 {
        margin-top: 10px;
        position: absolute;
        color: blue;
        font-size: 300%;
        width: 100%;
        text-align: center;
    }
    .inp {
        position: absolute;
        top: 13%;
        left: 50%;
        transform: translate(-50%, -13%);
        width: 70%;
        align-items: center;
    }
    input {
        border: none;
        border: 2px solid blue;
        padding: 10px;
        border-radius: 20px 0px 0px 20px;
        outline: none;
        border-right: none;
        color: grey;
        font-size: 20px;
        width: 70%;
    }
    button {
        background: none;
        border: none;
        width: 15%;
        height: 20%;
        border: 2px solid blue;
        border-radius: 0px 20px 20px 0px;
        outline: none;
        padding: 10px;
        font-size: 20px;
        color: blue;
        z-index: 9999px;
        cursor: pointer;
        transition: 0.5s;

    }
    button:hover {
        background: blue;
        color: white;
        transition: 0.5s ease-in-out;
    }
    .to-dos {
        position: absolute;
        top: 26%;
        left: 50%;
        transform: translate(-50%, -50%);
        color: grey;
        font-size: 30px;
        cursor: pointer;
    }
&amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;h1&amp;gt;iDo List&amp;lt;/h1&amp;gt;
&amp;lt;div class="inp"&amp;gt;
&amp;lt;input id="inputField" type="text" placeholder="I want to do..."&amp;gt;&amp;lt;button id="addToDo"&amp;gt;&amp;lt;i class="fas fa-plus"&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/button&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;div class="to-dos" id="toDoContainer"&amp;gt;

&amp;lt;/div&amp;gt;

&amp;lt;script&amp;gt;
    let addToDoButton = document.getElementById('addToDo');
    let toDoContainer = document.getElementById('toDoContainer');
    let inputField = document.getElementById('inputField');

    addToDoButton.addEventListener('click', function(){
        var paragraph = document.createElement('p');
        paragraph.classList.add('paragraph-styling');
        paragraph.innerText = inputField.value;
        toDoContainer.appendChild(paragraph);
        inputField.value = '';
        paragraph.addEventListener('click', function() {
            paragraph.style.textDecoration = 'line-through';
        })
        paragraph.addEventListener('dblclick', function() {
            toDoContainer.removeChild(paragraph);
        })
    })
&amp;lt;/script&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Sudoku Solver - A Visualizer made using Backtracking Algorithm</title>
      <author>Dhruv Panchal</author>
      <pubDate>Fri, 09 Apr 2021 06:11:51 +0000</pubDate>
      <link>https://dev.to/dhhruv/sudoku-solver-a-visualizer-made-using-backtracking-algorithm-5f0d</link>
      <guid>https://dev.to/dhhruv/sudoku-solver-a-visualizer-made-using-backtracking-algorithm-5f0d</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Sudoku is one of the most popular logic-based number-placement puzzle game. The literal meaning of "Su-doku" in Japanese is "the number that is single".&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The objective is to fill a nine-by-nine (9x9) grid with digits so that each row, column and 3x3 section contain number between 1 and 9, with each number used once and only once in each section. The Sudoku game players are provided with partially filled grid meant to be solved.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;To solve sudoku one doesn't require the knowledge of mathematics but require the logic and reasoning. Solving Sudoku Puzzles daily helps with your brain. It improves the concentration and logical thinking. One can look for sudoku puzzles given in Newspapers or can play them online provided by many websites. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#about"&gt;
  &lt;/a&gt;
  About:
&lt;/h2&gt;

&lt;p&gt;This Script is a Sudoku Solver that solves almost any Sudoku Puzzle by visualizing through the Backtracking Algorithm which is made using the PyGame Library in Python. Ever tried but stucked on Sudoku Puzzles given in newspapers, magazines and online. You can use this script to get its solution instantly and move further.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/dhhruv"&gt;
        dhhruv
      &lt;/a&gt; / &lt;a href="https://github.com/dhhruv/Sudoku-Solver"&gt;
        Sudoku-Solver
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      üéØ A Sudoku Solver implemented using Python and PyGame Library by visualizing the Sudoku Board using Backtracking Algorithm.
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#working"&gt;
  &lt;/a&gt;
  Working:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;  Everytime this Script is executed, a Random Solvable board is created.&lt;/li&gt;
&lt;li&gt;  Now, the user can first try to attempt solving it by clicking on the cells and entering values manually. Check the Input Section for the same.&lt;/li&gt;
&lt;li&gt;  Once the the user finalizes that the inputted number is the correct entry, pressing the enter key will attempt to input the number onto the board. &lt;/li&gt;
&lt;li&gt;  Correct answers will be permanently displayed while incorrect answers will be removed. &lt;/li&gt;
&lt;li&gt;  Likewise, values can be removed by pressing on the backspace or delete keys.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DSaWMCzo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cdf37yv1e3mcn0aat5ip.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DSaWMCzo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cdf37yv1e3mcn0aat5ip.gif" alt="Entering Values"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  If at any point the player decides to solve the board, the Spacebar key can be pressed.&lt;/li&gt;
&lt;li&gt;  This will commence a visual which will demonstrate how the backtracking algorithm works and how it is being applied in order to solve the board.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MQrqxbiU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/afttou4aho4ok6s4ftt4.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MQrqxbiU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/afttou4aho4ok6s4ftt4.gif" alt="Visualizer"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#input"&gt;
  &lt;/a&gt;
  Input:
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Keys&lt;/th&gt;
&lt;th&gt;Actions&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Left Click&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Selects the Box to enter a value into that cell.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Enter&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Cofirms the Value written on the board.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Backspace/Delete&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Deletes the value in that cell.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Space&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Solves the Board using the Algorithm.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;h&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Gives a Hint. Displays a random correct value on the board.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#requirements"&gt;
  &lt;/a&gt;
  Requirements
&lt;/h2&gt;

&lt;p&gt;In order to run the Script, the require &lt;strong&gt;Python &amp;amp; PyGame&lt;/strong&gt; and you can install the requirements using:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pip install -r requirements.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#execution"&gt;
  &lt;/a&gt;
  Execution:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;  Clone this repostory using
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git clone https://github.com/dhhruv/Sudoku-Solver.git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;OR&lt;/strong&gt;&lt;br&gt;
Zip Download the Repository and Extract it's contents.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Now run the &lt;a href="https://github.com/dhhruv/Sudoku-Solver/blob/master/SudokuGUI.py"&gt;SudokuGUI&lt;/a&gt; file directly in your Terminal using
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;python SudokuGUI.py
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;OR&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;python3 SudokuGUI.py
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;You can get more information about Sudoku Solver on: &lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/dhhruv"&gt;
        dhhruv
      &lt;/a&gt; / &lt;a href="https://github.com/dhhruv/Sudoku-Solver"&gt;
        Sudoku-Solver
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      üéØ A Sudoku Solver implemented using Python and PyGame Library by visualizing the Sudoku Board using Backtracking Algorithm.
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;



</description>
      <category>python</category>
      <category>codenewbie</category>
      <category>productivity</category>
      <category>discuss</category>
    </item>
    <item>
      <title>BaseQL - create a GraphQL API from your Airtable backend</title>
      <author>Tomek Poniatowicz</author>
      <pubDate>Fri, 09 Apr 2021 06:06:08 +0000</pubDate>
      <link>https://dev.to/graphqleditor/baseql-create-a-graphql-api-from-your-airtable-backend-480i</link>
      <guid>https://dev.to/graphqleditor/baseql-create-a-graphql-api-from-your-airtable-backend-480i</guid>
      <description>&lt;p&gt;After writing about some of the biggest libraries out there I think it's time to look at one that hasn't been covered as much, namely BaseQL. If we look at its website it says BaseQL lets you quickly create a GraphQL API from your production ready Airtable backend. In short it combines the benefits of Airtable with GraphQL. I‚Äôm going to boldly assume that if you‚Äôre here you already know a bit about GraphQL so let‚Äôs first look at what Airtable is.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-airtable"&gt;
  &lt;/a&gt;
  Why Airtable?
&lt;/h2&gt;

&lt;p&gt;To put it simple &lt;strong&gt;Airtable is a flexible service which lets you easily create relational datasets&lt;/strong&gt;. It's like a hybrid of a spreadsheet and a database, you have cells but they can have types like checkbox or drop-down list and can have file attachments, for example images, which can be previewed. Everything is neatly compartmentalized:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;workspace:&lt;/strong&gt; an assortment of bases shared among a group of people&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;base:&lt;/strong&gt; a database with everything you need for the project. You can build it using the customizable templates provided by Airtable, use an existing spreadsheet or database or just make one from scratch.
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;table:&lt;/strong&gt; bases consist of one or more tables and tables contain all the information, think of them as spreadsheets but with additional useful features. They can be everything, a sales spreadsheet, a products catalogue or a calendar, really just anything you need.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;fields:&lt;/strong&gt; each entry in a table is a field, they provide more versatility than your usual spreadsheet, they‚Äôre customizable and there‚Äôs a lot of them to choose from: checkboxes, drop down lists, file attachments, URLs and a lot more.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;While there are both more complex programs for database handling (like FileMaker Pro) and simpler services, better suited for casual use (like Google Sheets) Airtable is the closest to a catch all solution that will work best in most cases. Now if you want to use that solution it could be prudent to combine its benefits with those of GraphQL and luckily there‚Äôs just the thing for that.&lt;/p&gt;

&lt;p&gt;All you need to do is a way to access the data stored in Airtable and that's what BaseQL was designed for.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hVXK9PBD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k3exo4ehd6a5bxqh00w8.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hVXK9PBD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k3exo4ehd6a5bxqh00w8.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#source-airtablecom"&gt;
  &lt;/a&gt;
  Source: &lt;a href="https://airtable.com/"&gt;Airtable.com&lt;/a&gt;
&lt;/h5&gt;

&lt;h2&gt;
  &lt;a href="#baseql"&gt;
  &lt;/a&gt;
  BaseQL
&lt;/h2&gt;

&lt;p&gt;BaseQL gives you a dynamic GraphQL API for your Airtable bases. This means you will be instantly able to query, search and mutate data from your Airtable bases using GraphQL and all its benefits. The key one being optimization as with GraphQL you get exactly what you wanted and just that, with no over or under fetching. Yes, unlike Airtable you‚Äôll need to know the basics of GraphQL, but you‚Äôll likely find it quite easy to get a hang of and BaseQL even provides you with a playground to test it out on their website. It also does not disturb anyone else in the workgroup who can just continue working on Airtable as usual while you get the data you need. The features are quite simple:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Advanced GraphiQL Explorer&lt;/strong&gt;: it will let you easily browse through the documentation and find exactly the queries you need and build complex ones by selecting them from a panel. It's really useful as a learning experience so if getting a hang of GraphQL sounded hard you‚Äôll want to check this out.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Data fetching&lt;/strong&gt;: BaseQL provides you with a lot of tools for querying, filtering, searching and sorting data from your Airtable bases and since it uses GraphQL to do so it's all kept efficient. It also supports nested queries, combining multiple arguments in a single query as well as mutations and pagination.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Integrations&lt;/strong&gt;: the real value is not in querying data yourself but using another app for that and BaseQL does just that. It can be integrated with any frontend framework or no-code tool which gives you a ton of possibilities.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To start you need to install the BaseQL app via &lt;a href="https://docs.baseql.com/install#airtable-pro"&gt;Airtable Marketplace (required Airtable PRO)&lt;/a&gt; or &lt;a href="https://docs.baseql.com/install#custom-blocks-beta"&gt;using Custom Blocks feature&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://api.baseql.com/airtable/graphql/appuzDcQEvfnkzXjD&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;method&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;POST&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Content-Type&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;application/json&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Accept&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;application/json&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Authorization&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Bearer SECRET_TOKEN&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;query&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;{ people: { name } }&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;data returned:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#source-docsbaseqlcom"&gt;
  &lt;/a&gt;
  Source: &lt;a href="https://docs.baseql.com/examples/javascript"&gt;docs.baseql.com&lt;/a&gt;
&lt;/h5&gt;

&lt;h2&gt;
  &lt;a href="#jack-of-all-trades"&gt;
  &lt;/a&gt;
  Jack of all trades
&lt;/h2&gt;

&lt;p&gt;To summarize Airtable with GraphQL makes for a pretty powerful combination. On the database side you can have anyone work on it and it requires no knowledge of programming at all. On the other side you can focus on building your app knowing that it will be able to fetch data efficiently via BaseQL from your Airtable bases. It gives you a lot of flexibility especially working in a group with different skills and it's also a great way to start getting into GraphQL if you want to do so. As mentioned before it's not perfect, but as far as working with databases goes it's definitely worth a try.&lt;/p&gt;




&lt;p&gt;&lt;em&gt;A guest blog post for &lt;a href="https://blog.graphqleditor.com/"&gt;GraphQL Editor blog&lt;/a&gt; by Micha≈Ç Tyszkiewicz&lt;/em&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#speed-up-your-graphql-api-development"&gt;
  &lt;/a&gt;
  Speed up your GraphQL API development
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;GraphQL Editor&lt;/strong&gt; is a supportive tool for both advanced GraphQL users as well as those taking their first steps with GraphQL APIs. Our all-in-one development environment for GraphQL will help you build, manage &amp;amp; deploy your GraphQL API much faster. &lt;strong&gt;&lt;a href="https://graphqleditor.com"&gt;Try GraphQL Editor for free!&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://graphqleditor.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Xh8ZaRkh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/hz2iv2u1073dy9orexxf.gif" alt="New features of GraphQL Editor gif"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>graphql</category>
      <category>database</category>
      <category>serverless</category>
    </item>
    <item>
      <title>Should you pick C# over JS? Maybe.</title>
      <author>Tim Myers</author>
      <pubDate>Fri, 09 Apr 2021 05:48:22 +0000</pubDate>
      <link>https://dev.to/denvercoder/should-you-pick-c-over-js-maybe-3dgh</link>
      <guid>https://dev.to/denvercoder/should-you-pick-c-over-js-maybe-3dgh</guid>
      <description>&lt;p&gt;As a new developer people tend to steer you towards Python or to an even greater degree, JavaScript. &lt;/p&gt;

&lt;p&gt;I know this to be the case because I‚Äôve done this myself. But I think I‚Äôve had a change of heart. &lt;/p&gt;

&lt;p&gt;You see the barrier to entry with JavaScript is VERY low. Technically all you need is VSCode and a Web Browser. Both free and bot available on almost every OS. &lt;/p&gt;

&lt;p&gt;Tip: if you setup VSCode in the cloud like I describe here:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://youtu.be/zQE13HTocpU"&gt;https://youtu.be/zQE13HTocpU&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;you can literally code on a tablet. &lt;/p&gt;

&lt;p&gt;When I was first exposed to Microsoft and dotnet back in 2004 there was an extremely high barrier to entry. You had to have a MSDN subscription, (which was $3000-5000 per year). &lt;/p&gt;

&lt;p&gt;But today Microsoft has really changed their tune. You can get a free community edition of Visual Studio, you can sign up for the free tier on Azure and even DevOps is free up to a certain number of users. &lt;/p&gt;

&lt;p&gt;Windows 10 is more open than ever, dotnet is cross-platform, etc. So what is the barrier to entry like now? I would say it‚Äôs about the same as with JavaScript. You have a choice of free IDEs and free hosting. &lt;/p&gt;

&lt;p&gt;So now this is where people argue that ‚ÄúJavaScript‚Äù is easier to learn. But is it though? I‚Äôve spent a lot of time with both and I have to say that the learning curve with C# might be just a little bit steeper but once you learn the basics you can advance at the same rate as someone learning JavaScript.&lt;/p&gt;

&lt;p&gt;One thing that I had forgotten about since I hadn‚Äôt done a great deal of dotnet development in almost 5 years was how much the IDE assists you. I can create a Model with 20 properties in about 10 minutes. The &lt;code&gt;prop&lt;/code&gt; snippet is your friend.&lt;/p&gt;

&lt;p&gt;I never really feel at home in a JavaScript codebase but I dove into a fairly complex ASP.NET backend project recently without having done much in over 5 years and everything was still accessible to me. I still had the muscle memory.&lt;/p&gt;

&lt;p&gt;I think one of the Pros (though it could be considered a con by some), is the fact that the C# language itself doesn‚Äôt seem to be evolving as rapidly as JavaScript. It‚Äôs more ‚Äúmature‚Äù if you will. Maybe that has more to do with the fact that its highly structured.&lt;/p&gt;

&lt;p&gt;One of the things that struck me as funny when I came back to dotnet was the fact that if you search online for how to do something the C# code snippets you find are going to be fairly similar. Whereas, with JavaScript you can find 100 posts with 100 different ways to do things.&lt;/p&gt;

&lt;p&gt;I think a lot JavaScript development is, ‚Äúlet‚Äôs see how clever I can be‚Äù instead of, ‚Äúlet‚Äôs see how readable and robust I can make this.‚Äù&lt;/p&gt;

&lt;p&gt;These are my personal opinions and I‚Äôm sure this ‚Äúhit-piece‚Äù is going to cause some controversy but I think if you commit to taking a look at the ‚Äúnew‚Äù dotnet you‚Äôll be pleasantly surprised.&lt;/p&gt;

&lt;p&gt;Thanks for reading and that's all y'all.&lt;/p&gt;

</description>
      <category>dotnet</category>
      <category>blazor</category>
      <category>csharp</category>
    </item>
    <item>
      <title>Maintaining Multiple Postgres Version</title>
      <author>Manish Pradhan</author>
      <pubDate>Fri, 09 Apr 2021 05:44:59 +0000</pubDate>
      <link>https://dev.to/younginnovations/maintaining-multiple-postgres-version-1h8n</link>
      <guid>https://dev.to/younginnovations/maintaining-multiple-postgres-version-1h8n</guid>
      <description>&lt;p&gt;Sometimes we need to have different Postgres versions in our local machine. We just need to know the port the versions are running and we are good to go.&lt;/p&gt;

&lt;p&gt;For this let's install two versions of Postgres 9.6 and 11 via commands&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Install Postgres 9.6&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo apt-get install postgresql-9.6 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Install Postgres 11&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo apt-get install postgresql-11
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Lists the postgres clusters&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pg_lsclusters
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;start-stop the clusters&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo pg_ctlcluster 9.6 main start
sudo pg_ctlcluster 9.6 main stop
sudo pg_ctlcluster 11 main start
sudo pg_ctlcluster 11 main stop
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;connects to 9.6&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo -i -u postgres psql -p 5432
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;connects to 11&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo -i -u postgres psql -p 5433
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;By changing the port only we can restore and dump db according to postgres version&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;dumps and restores 9.6&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pg_dump --host localhost --port 5432 --username "postgres" --encoding UTF8 --verbose --file "{{db_backup_path}}" "{{db_name}}"
pg_restore --host 127.0.0.1 --port 5432 --username "postgres" --dbname "{{db_name}}" --verbose "{{db.backup}}"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;dumps and restores 11&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pg_dump --host localhost --port 5433 --username "postgres" --encoding UTF8 --verbose --file "{{db_backup_path}}" "{{db_name}}"
pg_restore --host 127.0.0.1 --port 5433 --username "postgres" --dbname "{{db_name}}" --verbose "{{db.backup}}"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>postgres</category>
      <category>basic</category>
      <category>database</category>
    </item>
    <item>
      <title>12 Resources To Improve Your CSS Skills And Speed Up CSS Development</title>
      <author>The Code Lounge</author>
      <pubDate>Fri, 09 Apr 2021 05:26:01 +0000</pubDate>
      <link>https://dev.to/codeloungedev/12-resources-to-improve-your-css-skills-and-speed-up-css-development-3h06</link>
      <guid>https://dev.to/codeloungedev/12-resources-to-improve-your-css-skills-and-speed-up-css-development-3h06</guid>
      <description>&lt;p&gt;&lt;a href="https://codelounge.dev"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oZGLRauQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617198357271/uoNdlXnwM.png" alt="cover (1).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Originally posted on the codelounge.dev blog =&amp;gt; &lt;a href="https://codelounge.dev/12-resources-to-improve-your-css-skills-and-speed-up-css-development"&gt;12 Resources To Improve Your CSS Skills And Speed Up CSS Development&lt;br&gt;
&lt;/a&gt;!&lt;/strong&gt;&lt;/p&gt;



&lt;p&gt;In this article, you can find a list of resources that will help you improve your CSS skills and speed up CSS development. More specifically, there are twelve fantastic resources!&lt;/p&gt;

&lt;p&gt;Some of them are learning resources from where you can learn the CSS fundamentals, whereas others are generators that help you save time! Without further ado, let's see the resources!&lt;/p&gt;


&lt;h1&gt;
  &lt;a href="#1-awesome-css-learning"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://github.com/micromata/awesome-css-learning"&gt;Awesome CSS Learning&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;"Awesome CSS Learning" is a GitHub repository that contains links to amazing CSS learning resources. This resource is mainly about the language and its modules.&lt;/p&gt;

&lt;p&gt;You can find links to learn concepts such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Fundamental concepts&lt;/li&gt;
&lt;li&gt;CSS units&lt;/li&gt;
&lt;li&gt;Selectors&lt;/li&gt;
&lt;li&gt;Custom properties (aka CSS variables)&lt;/li&gt;
&lt;li&gt;Layout&lt;/li&gt;
&lt;li&gt;Animation&lt;/li&gt;
&lt;li&gt;Related&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you are looking for resources to learn the CSS fundamentals, this repository is excellent!&lt;/p&gt;


&lt;h1&gt;
  &lt;a href="#2-css-waves-generator"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://getwaves.io/"&gt;CSS Waves Generator&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;This CSS generator allows you to create SVG waves, which you can use in any way you want.&lt;/p&gt;

&lt;p&gt;You can choose:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the shape of the waves&lt;/li&gt;
&lt;li&gt;the direction&lt;/li&gt;
&lt;li&gt;the colour&lt;/li&gt;
&lt;li&gt;the opacity&lt;/li&gt;
&lt;li&gt;the "curviness"&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kza3HIRx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617944640217/ekUVOgrhj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kza3HIRx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617944640217/ekUVOgrhj.png" alt="getwaves.io-website"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It's a nice, handy tool that you can use to generate some section separators or art for your website.&lt;/p&gt;


&lt;h1&gt;
  &lt;a href="#3-magic-of-css"&gt;
  &lt;/a&gt;
  3. &lt;a href="https://github.com/adamschwartz/magic-of-css"&gt;Magic of CSS&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;This GitHub repository is the repository behind the &lt;a href="https://adamschwartz.co/magic-of-css/"&gt;Magic of CSS&lt;/a&gt; website. According to its GitHub description, it's a CSS course, and it's for web developers who want to be "magicians".&lt;/p&gt;

&lt;p&gt;The "Magic of CSS" course is split into six chapters:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Chapter 1: The Box&lt;/li&gt;
&lt;li&gt;Chapter 2: Layout&lt;/li&gt;
&lt;li&gt;Chapter 3: Tables&lt;/li&gt;
&lt;li&gt;Chapter 4: Color&lt;/li&gt;
&lt;li&gt;Chapter 5: Typography&lt;/li&gt;
&lt;li&gt;Chapter 6: Transitions&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Essentially, this course teaches you the fundamentals of CSS. One of the best thing about this course is that it includes links to further material. For instance, if you want to learn more about a concept, you can use the linked resources.&lt;/p&gt;


&lt;h1&gt;
  &lt;a href="#4-css-separator-generator"&gt;
  &lt;/a&gt;
  4. &lt;a href="https://wweb.dev/resources/css-separator-generator"&gt;CSS Separator Generator&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;Split your website section with style! This CSS generator allows you to generate fancy section separators. &lt;/p&gt;

&lt;p&gt;You can customise the separator, and you can see the preview in real-time. Once you decide what separator to use, the website gives you the HTML and CSS.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TIV6vXmE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617892537462/h27tJpbm8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TIV6vXmE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617892537462/h27tJpbm8.png" alt="Screenshot 2021-04-08 at 17.34.53.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The above figure illustrates the generator in action. It's a super handy tool that improves the design of your website!&lt;/p&gt;


&lt;h1&gt;
  &lt;a href="#5-spin-kit"&gt;
  &lt;/a&gt;
  5. &lt;a href="https://github.com/tobiasahlin/SpinKit"&gt;Spin Kit&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;SpinKit is a CSS package that allows you to use simple animated loading spinners. It only uses &lt;code&gt;transform&lt;/code&gt; and &lt;code&gt;opacity&lt;/code&gt; to create smooth, nice looking and easily customisable animations.&lt;/p&gt;

&lt;p&gt;To use SpinKit, you have to install it via &lt;code&gt;bower&lt;/code&gt; or &lt;code&gt;npm&lt;/code&gt;. After that, all you have to do is to use the class you want for your animation. For instance, if you wish to use the "pulse" animation, you need to use the &lt;code&gt;sk-pulse&lt;/code&gt; class:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div class="sk-pulse"&amp;gt;
.... your code
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It's a handy CSS package, and you can see all the animations on the &lt;a href="https://tobiasahlin.com/spinkit/"&gt;SpinKit's official website&lt;/a&gt;. You can test all animations and see how they look before using them.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#6-shadow-generator"&gt;
  &lt;/a&gt;
  6. &lt;a href="https://shadows.brumm.af/"&gt;Shadow Generator&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;This shadow generator application allows you to create and customise shadows (&lt;code&gt;box-shadow&lt;/code&gt;). See a picture with the generator below!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0DlQKtHk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617944723207/I8_ypi3gz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0DlQKtHk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617944723207/I8_ypi3gz.png" alt="CSS shadow generator"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can customise the:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;layers of shadows&lt;/li&gt;
&lt;li&gt;final transparency&lt;/li&gt;
&lt;li&gt;final vertical distance&lt;/li&gt;
&lt;li&gt;final blur strength&lt;/li&gt;
&lt;li&gt;reduce spread&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It's a great resource because you can see how the shadow looks in real-time. If you want to create beautiful shadows, I recommend you this generator.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#7-css-hover"&gt;
  &lt;/a&gt;
  7. &lt;a href="https://github.com/IanLunn/Hover"&gt;CSS Hover&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;The "CSS Hover" package is a collection of hover effects you use on links, buttons, logos, SVGs and more. You can use and modify them as you see fit!&lt;/p&gt;

&lt;p&gt;You can use this package in three ways:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;install it via npm&lt;/li&gt;
&lt;li&gt;install it via bower&lt;/li&gt;
&lt;li&gt;download the CSS file directly&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you do not want to install it or add all the animations to your project, simply open the CSS file and copy only the effect you want. You can check each hover effect on the &lt;a href="http://ianlunn.github.io/Hover/"&gt;Hover's official website&lt;/a&gt;.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#8-css-grid-generator"&gt;
  &lt;/a&gt;
  8. &lt;a href="https://cssgrid-generator.netlify.app/"&gt;CSS Grid Generator&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9fJmbwfW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617944792140/K7DFd9TSh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9fJmbwfW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617944792140/K7DFd9TSh.png" alt="CSS Grid generator"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The CSS grid generator allows you to create a custom CSS grid. You can specify the number of &lt;strong&gt;columns&lt;/strong&gt; and &lt;strong&gt;rows&lt;/strong&gt;. Additionally, you can set the &lt;strong&gt;column&lt;/strong&gt; and &lt;strong&gt;row gaps&lt;/strong&gt; in pixels.&lt;/p&gt;

&lt;p&gt;There is not much to say about the generator other than it's fantastic! See the application in the picture above.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#9-awesome-css"&gt;
  &lt;/a&gt;
  9. &lt;a href="https://github.com/awesome-css-group/awesome-css"&gt;Awesome CSS&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;The "Awesome CSS" repository is a curated list of CSS resources. According to its description, it's a list of "awesome frameworks, style guides, and other cool nuggets for writing amazing CSS".&lt;/p&gt;

&lt;p&gt;It's important to note that it does not include material to learn CSS. This resource is recommended for people who already know CSS, or at least the basics.&lt;/p&gt;

&lt;p&gt;Some of the information you can find in this repository include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Parsers&lt;/li&gt;
&lt;li&gt;Preprocessors&lt;/li&gt;
&lt;li&gt;Frameworks&lt;/li&gt;
&lt;li&gt;Toolkits&lt;/li&gt;
&lt;li&gt;CSS Structure&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;... and more. It's worth checking it out!&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#10-css-clip-path-maker"&gt;
  &lt;/a&gt;
  10. &lt;a href="https://bennettfeely.com/clippy/"&gt;CSS Clip Path Maker&lt;/a&gt;
&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;"The clip-path property allows you to make complex shapes in CSS by clipping an element to a basic shape (circle, ellipse, polygon, or inset) or an SVG source.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Thus, the CSS clip-path maker allows you to generate clip-path values to spice up your website! You can see the generator in action below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IGBQ_HBn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617893062854/E8Od23uuW.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IGBQ_HBn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617893062854/E8Od23uuW.png" alt="Screenshot 2021-04-08 at 17.43.55.png"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#11-fancy-border-generator"&gt;
  &lt;/a&gt;
  11. &lt;a href="https://9elements.github.io/fancy-border-radius/"&gt;Fancy Border Generator&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;Say goodbye to boring borders. From now on, you can use this border generator to create some beautiful borders!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--g-Idezeg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617893293937/baF5OJkja.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g-Idezeg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617893293937/baF5OJkja.png" alt="Screenshot 2021-04-08 at 17.47.26.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You might ask - how is that possible? It's possible because by specifying eight values for the border-radius property, you can build organic-looking shapes. The generator is awesome!&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#12-gradients-generator"&gt;
  &lt;/a&gt;
  12. &lt;a href="https://larsenwork.com/easing-gradients/"&gt;Gradients Generator&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;The usual linear gradients usually have hard edges where they start and/or end. However, you can make them look smoother by easing them.&lt;/p&gt;

&lt;p&gt;The figure below illustrates the difference between a linear gradient and easing. You can see that easing a linear gradient makes it look much better!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XnA4pVgd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617893674043/3Cgkssks9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XnA4pVgd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617893674043/3Cgkssks9.png" alt="Screenshot 2021-04-08 at 17.54.21.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It's important to note that it's not yet a CSS feature. You can a PostCSS/Figma plugin for it or the editor from the website.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;I hope you find these CSS resources. If you do, share the article on social media so other people can benefit!&lt;/p&gt;

&lt;p&gt;Also, if you have other suggestions, leave them in the comments below!&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>css</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>Compose an email with markdown and send it with a Python script</title>
      <author>Aahnik Daw</author>
      <pubDate>Fri, 09 Apr 2021 04:59:10 +0000</pubDate>
      <link>https://dev.to/aahnik/compose-email-with-markdown-and-send-it-with-a-python-script-9d</link>
      <guid>https://dev.to/aahnik/compose-email-with-markdown-and-send-it-with-a-python-script-9d</guid>
      <description>&lt;h2&gt;
  &lt;a href="#recap"&gt;
  &lt;/a&gt;
  Recap
&lt;/h2&gt;

&lt;p&gt;In the previous article of this series, we had written a simple script to send an email with Python.&lt;/p&gt;

&lt;p&gt;Let's recap the steps:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;we first imported &lt;code&gt;SMTP&lt;/code&gt; class from &lt;code&gt;smptplib&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;we then defined the variables &lt;code&gt;HOST&lt;/code&gt;,&lt;code&gt;PORT&lt;/code&gt;,&lt;code&gt;SENDER&lt;/code&gt; and &lt;code&gt;PASSWORD&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;we then created an object of the &lt;code&gt;SMTP&lt;/code&gt; class named &lt;code&gt;server&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Now call multiple server functions: 

&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;connect&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;&lt;code&gt;ehlo&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;starttls&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ehlo&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;login&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;define the &lt;code&gt;RECIPIENT&lt;/code&gt; and &lt;code&gt;MESSAGE&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;send the email by calling &lt;code&gt;server.sendmail&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To see the code, read my previous article.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/aahnik" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--28COnZ56--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--xJdF-Ep6--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/453833/0d554f6d-073a-47e0-b356-bbdf3de4f171.jpeg" alt="aahnik image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/aahnik/how-to-send-emails-with-python-simply-explained-for-beginners-hea" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;How to send emails with Python? Simply explained for beginners&lt;/h2&gt;
      &lt;h3&gt;Aahnik Daw „Éª Apr  7 „Éª 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#python&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#email&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#discuss&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#lets-enhance"&gt;
  &lt;/a&gt;
  Let's Enhance
&lt;/h2&gt;

&lt;p&gt;In this article, we will take further what we have learned in the previous article.&lt;/p&gt;

&lt;p&gt;We will add some &lt;strong&gt;new features&lt;/strong&gt; to our script:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;rich-text via markdown&lt;/li&gt;
&lt;li&gt;setting a subject of the email &lt;/li&gt;
&lt;li&gt;setting a sender name (you can set sender name to anything, like Mr. Bean irrespective of your email address)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--J5nP_Ers--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7m587kwr82reydz857j0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J5nP_Ers--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7m587kwr82reydz857j0.png" alt="alt text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#markdown"&gt;
  &lt;/a&gt;
  Markdown
&lt;/h2&gt;

&lt;p&gt;In the modern world, plain text looks boring. Professional emails have some logo, or title image, along with the richly formatted text.&lt;/p&gt;

&lt;p&gt;Writing HTML is time-consuming, so we will use the markdown format, to compose beautiful emails.&lt;/p&gt;

&lt;p&gt;If you are not familiar with the markdown formatting, then you should &lt;a href="https://www.markdownguide.org/cheat-sheet"&gt;learn it&lt;/a&gt; because:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;it is used to write posts in dev.to&lt;/li&gt;
&lt;li&gt;it is commonly used to write the README file for your GitHub projects&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To deal with markdown in python, we need the &lt;code&gt;markdown&lt;/code&gt; package.&lt;/p&gt;

&lt;p&gt;So install it via &lt;code&gt;pip&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;‚ùØ pip &lt;span class="nb"&gt;install &lt;/span&gt;Markdown
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#write-the-code"&gt;
  &lt;/a&gt;
  Write the code
&lt;/h2&gt;

&lt;p&gt;Let's say we will write our email in a file called &lt;code&gt;compose.md&lt;/code&gt;. Our script should send the content of that file as an email to our recipient.&lt;/p&gt;

&lt;p&gt;Delete the old &lt;code&gt;send.py&lt;/code&gt; that we have written last day. Let's refactor our code, to make it more mature and maintainable.&lt;/p&gt;

&lt;p&gt;Let's define all our variables in a file called &lt;code&gt;settings.py&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# settings.py
&lt;/span&gt;
&lt;span class="n"&gt;HOST&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'smtp.gmail.com'&lt;/span&gt;
&lt;span class="n"&gt;PORT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;587&lt;/span&gt;
&lt;span class="n"&gt;SENDER&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'youremail@gmail.com'&lt;/span&gt;
&lt;span class="n"&gt;PASSWORD&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'your12434(893**!@password'&lt;/span&gt;
&lt;span class="n"&gt;RECIPIENT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'some@example.com'&lt;/span&gt;
&lt;span class="n"&gt;MESSAGE_FILE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'compose.md'&lt;/span&gt;
&lt;span class="n"&gt;DISPLAY_NAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Mr. Bean'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's write down the &lt;code&gt;send.py&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# send.py
&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;email.mime.multipart&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;MIMEMultipart&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;email.mime.text&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;MIMEText&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;smtplib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;SMTP&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;markdown&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;settings&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HOST&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;PORT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                      &lt;span class="n"&gt;SENDER&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;DISPLAY_NAME&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;PASSWORD&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                      &lt;span class="n"&gt;RECIPIENT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;MESSAGE_FILE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MESSAGE_FILE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;


&lt;span class="n"&gt;server&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SMTP&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;host&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;HOST&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;PORT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;host&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;HOST&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;PORT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ehlo&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;starttls&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ehlo&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;login&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;SENDER&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;PASSWORD&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;multipart_msg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;MIMEMultipart&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"alternative"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;multipart_msg&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"Subject"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;splitlines&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;multipart_msg&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"From"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;DISPLAY_NAME&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;' &amp;lt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;SENDER&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;&amp;gt;'&lt;/span&gt;
&lt;span class="n"&gt;multipart_msg&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"To"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;RECIPIENT&lt;/span&gt;

&lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;
&lt;span class="n"&gt;html&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;markdown&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;markdown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;part1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;MIMEText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"plain"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;part2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;MIMEText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"html"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;multipart_msg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;attach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;part1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;multipart_msg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;attach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;part2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sendmail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SENDER&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;RECIPIENT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;multipart_msg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;as_string&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Sent email successfully!'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's it. Coding is over. Now let's run the script &lt;code&gt;send.py&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;‚ùØ python send.py
Sent email successfully!
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Your output will look like this üëÜ if you did everything alright. The email will be sitting right in the recipient's inbox.&lt;/p&gt;




&lt;p&gt;I am &lt;a href="https://aahnik.dev"&gt;Aahnik Daw&lt;/a&gt; and you can follow me on &lt;a href="https://github.com/aahnik"&gt;GitHub&lt;/a&gt; and &lt;a href="https://dev.to/aahnik"&gt;dev.to&lt;/a&gt; to stay updated with my latest repos and articles.&lt;/p&gt;

</description>
      <category>python</category>
      <category>discuss</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Efficient Learning</title>
      <author>Katherine Kavourakis</author>
      <pubDate>Fri, 09 Apr 2021 04:06:19 +0000</pubDate>
      <link>https://dev.to/katherinekavourakis/learning-to-learn-1ie7</link>
      <guid>https://dev.to/katherinekavourakis/learning-to-learn-1ie7</guid>
      <description>&lt;p&gt;I‚Äôm currently working my way through Flatiron School‚Äôs Software Engineering Bootcamp, and while I‚Äôm making good progress, I‚Äôm also struggling with burnout. I decided to take a step back and reassess the efficiency of my learning habits. I came across Andrei Neagoie‚Äôs Udemy course - Learning to Learn [Efficient Learning]. After going through  the 5.5 hour course, I realized that there were a number of ways in which I was holding myself back mentally, and simple and effective solutions to learning and retaining knowledge. &lt;/p&gt;

&lt;p&gt;Andrei breaks down the course into five sections: The Principles, The Lies, The Pillars, The Science, and the Techniques of efficient learning. Below is a brief synopsis of each concept (though I highly recommend taking the full course!).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-principles"&gt;
  &lt;/a&gt;
  ‚öñÔ∏è THE PRINCIPLES:
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;KEY TAKEAWAY - Adjust perspective from reactive to proactive; identify choices that can be shaped&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Learning Vs. Winning the System&lt;/strong&gt; - Learn long-term and retaining information vs. finding the easiest solution as a means to an end&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What Is Success?&lt;/strong&gt; - Drive and persistence lead to success, not simply being smart; take risks, make mistakes, do the unconventional&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Obstacle&lt;/strong&gt; - Where you are vs. where you want to be may seem unreachable. Instead of protecting the ego, refocus on the mindset that you‚Äôre doing something worthwhile. Failure teaches hard and valuable lessons and will define future success. No one is successful in the beginning!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Dip&lt;/strong&gt; - Some paths may not be the one for you - know when to quit. Push enough to overcome obstacles, but also recognize if the path isn‚Äôt the one for you (ex. I‚Äôm 5‚Äô2 - a goal of playing in the WNBA is most likely not realistic).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Compound Learning&lt;/strong&gt; - Idea comes from compound interest: compact learning into small, manageable units. ‚ÄúImprove by 1% a day, and in 70 days you‚Äôre twice as good.‚Äù - Alan Weiss. Persistence is key, and focused learning will not lead to burnout. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Failures Don‚Äôt Count&lt;/strong&gt; - Failures don‚Äôt count against you! Most successful people will tell you that it took years of failure to achieve success. Failures are learning experiences - those who don‚Äôt try will never surpass those who try and fail. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Choice vs. Chore&lt;/strong&gt; - Approach goals as ‚ÄúI get to‚Ä¶‚Äù instead of ‚ÄúI have to‚Ä¶‚Äù Learning and commitment are a choice. &lt;br&gt;
It‚Äôs All In the Frame - Frames and contexts shift perspectives. When the work is tough, reframe to perspective recognizing the discomfort as the process of growth. This is a healthy beginner mindset, vs. the beginner attitude of ‚ÄúI‚Äôm not good enough.‚Äù&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pareto Principle&lt;/strong&gt; - aka the 80/20 Rule, or Law of the Vital Few: 80% of effects come from 20% of cause. Process of elimination - cut down from 100% to the beneficial 20% or critical skills that yield the highest results. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Skill Stacking&lt;/strong&gt; - Gather and combine multiple skills to identify yourself as one of a kind, skills that work well together but also stand out.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Happiness Factors&lt;/strong&gt; - What are key things that make you happy? Being in a negative space is detrimental to learning and growth. Identify / monitor / maintain / improve 5-7 happiness factors.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Your Productivity Time&lt;/strong&gt; - Everyone is different; morning people, night owls, etc. Identify your productivity time and capitalize on it. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Self Learning Paradigm&lt;/strong&gt; - Core of self learning is personal autonomy - it‚Äôs a choice you make for yourself. There should be an intrinsic motivation to be an efficient learner each day. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-lies"&gt;
  &lt;/a&gt;
  ‚ùå THE LIES:
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;KEY TAKEAWAY: Identify bad advice&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Follow Your Passion&lt;/strong&gt; - Just because you enjoy something doesn‚Äôt mean you should pursue it as work or it may become a chore. Many people who love what they do are not innately passionate about it, but small interest combined with learning creates passion. Creativity, control, and impact should be defining characteristics of productive goals. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You Can Avoid Risk&lt;/strong&gt; - Risk is part or progress. To achieve anything worthwhile, you have to be able to tolerate and enjoy risk-taking. Butterflies mean you‚Äôre stretching your boundaries. The amount of failure doesn‚Äôt count - your last success does. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Trust This One Person&lt;/strong&gt; - Each person gives advice based on what was successful in their unique learning perspective. It‚Äôs important to research multiple sources and viewpoints. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;10,000 Hours Rule&lt;/strong&gt; - Quality learning trumps quantity of time spent. Strategize based on you personal strengths and weaknesses. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#%F0%9F%8F%9B-the-pillars"&gt;
  &lt;/a&gt;
  üèõ THE PILLARS:
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;KEY TAKEAWAY: Foundational concepts support science and techniques of efficient learning&lt;/em&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Everything Is a Game&lt;/strong&gt; - This is a frame of mind: growth mindset, the belief that intelligence can be developed and gained through hard work and effective strategies, vs. fixed mindset, the belief that talent and intelligence is inherent. Growth mindset embraces challenge as a means to growth, fixed mindset avoids failure and makes excuses for lack of growth. ‚ÄúI‚Äôm not smart enough‚Äù (fixed) vs. ‚ÄúI‚Äôm not smart enough, yet‚Äù (growth). &lt;br&gt;
Pt. 2 examines the Locus of Control - the degree to which individuals control the outcomes and events of their lives. Those with a strong locus of control believe their actions affect their outcomes; those with lower or external locus of control blame factors outside of themselves. Like in a game, we control our player and our destiny.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Feynman Technique&lt;/strong&gt; - To fully grasp a topic, you should be able to teach it in a simple, easy to understand level&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Trunk Based Knowledge&lt;/strong&gt; - Start learning from the roots (fundamentals, principles), the ‚Äúwhy‚Äù of a subject; Trunk knowledge provides a strong foundation for future learning that changes with trends. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Efficiency Trumps Grit&lt;/strong&gt; - Being constantly busy is a lack of efficiency&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-science"&gt;
  &lt;/a&gt;
  üß™ THE SCIENCE:
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;KEY TAKEAWAY: Use the latest research and studies to be more efficient learners&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Focus vs. Diffuse Mode&lt;/strong&gt; - Focus Mode - 100% focus on one taks; Diffuse Mode - mind wanders, daydreams, etc.; most efficient learning is a combination of the two: a dedicated amount of focus with periods of rest, as diffuse mode allows the brain to grow myelin sheaths on neurons to form stronger neural connections&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Science of Sleep&lt;/strong&gt; - Toxins build in the brain during the day; while sleeping, brain cells shrink and cerebral spinal fluid flushes toxins from the brain. The process is energy-intensive so the body must be shut down. Sleep is diffuse-mode thinking - allows brain to organize thinking, strengthen connections, and discard less important information. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Brain Training&lt;/strong&gt; - Learning creates more neural synapses. Repetition strengthens learning and neural connections, forgetting information indicates weakness in synaptic connections. Physical exercise, also a form of diffuse mode, promotes brain growth as well. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Science of Feedback&lt;/strong&gt; - Negative and positive are both beneficial, but negative feedback is more effective for learning because it is actionable. Positive feedback is better in the beginning to offer encouragement. Feedback is crucial to learning. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Procrastination&lt;/strong&gt; - Procrastination is mismanagement of emotion and avoidance of negative feeling. There is no easy solution - you just need to do the task at hand. Focus on long term vs. short term gratification. It‚Äôs easier to overcome procrastination if you are in a positive and happy mental place. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Long Term + Short Term Memory&lt;/strong&gt; - Practice and repetition lead to long-term memory. Fundamental concepts and principles are stored in long term memory and aid in future learning. Short term, or working memory, can hold four blocks of information. Spaced repetition - repeat action over multiple days; connect to different concepts already stored in long term memory. If new information is not used: in 1hr - 50% of information is lost, 24hrs - 75% lost, 1 week - up to 90% lost. New information must be converted to long term memory for retention using discussed techniques. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Active Learning vs. Passive Learning&lt;/strong&gt; - Passive Learning: Podcasts, YouTube videos, observing/listening vs. engaging; Active Learning: being involved, practicing, taking notes, problem solving; Problem solving and recall are more effective than looking up an answer and improve the chance of retrieval later. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Science of Motivation&lt;/strong&gt; - Intrinsic motivation comes from beliefs and wants; having a strong support system helps intrinsically. External motivation can be in the form of money, gifts, etc. and is helpful to complete unpleasant tasks. Intrinsic motivation is required for learning and include 3 components: 1. Autonomy - have control, work on things that we want to do and give us control of our lives, 2. Mastery - intrinsically motivated to be masters of a skill, and 3. Purpose - benefits to yourself and others. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Goals&lt;/strong&gt; - Research has shown that the amygdala triggers fear in response to uncertainty when faced with large goals. Continuous, small, incremental improvement does not trigger fear of failure and instead builds neural networks to achieve compound learning. Set ‚ÄúSMART‚Äù goals: Specific / Measurable / Achievable / Relevant / Time Bound&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It Pays to Not Be Busy&lt;/strong&gt; - Efficiency trumps grit. New neurons are born daily and need to be nurtured - social interaction, physical exercise, and rest keep the mind sharp.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Chunking&lt;/strong&gt; - Break down learning into ‚Äúchunks,‚Äù aka ‚Äúbottom-up learning‚Äù - creating a mindmap of small pieces of knowledge combined to create an overall understanding of a topic; ‚Äútop-down learning‚Äù - examining the big picture to understand the connections between the smaller chunks. The combination of the two creates knowledge and is crucial to long-term learning. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How to Solve Problems&lt;/strong&gt; - Focus Mode: sequential approach, do this then that; Diffuse Mode: intuitive, creative ideas and solutions. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Deliberate Practice&lt;/strong&gt; - Learning should be tough. Rock climbers, chess players, masters all visualize their moves to make accurate predictions based on deliberate practice. After initially learning a lot it is common to hit a plateau - deliberate practice pushes past the uncomfortable edge to continue progress. Specific goals, intense focus, immediate feedback, and frequent discomfort by being at the edge of our abilities and pushing past them requires maximal effort to maximize potential.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Spaced Repetition&lt;/strong&gt; - Revisiting and practicing what is learned is the best way to build and strengthen synaptic connections to improve memory. Law of Diminishing Return - learning is best spaced out over multiple sessions rather than cramming information as this does not build strong neural structures. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Habits As Energy Savers&lt;/strong&gt; - Habits are formed so we don‚Äôt need to focus energy on habitual tasks (ex. writing goals for the following day helps accomplish them). &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Be Adventurous&lt;/strong&gt; - Neural pathways are created and strengthened with new experiences. Learning new and unrelated skills keeps the brain sharp. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Have An Endpoint&lt;/strong&gt; - The brain needs an endpoint for unpleasant tasks in order to stay focused. Know your productivity hours - a finishing time is just as important as planning working time. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Be Bored&lt;/strong&gt; - The brain strengthens and grows during rest - that‚Äôs when diffuse mode of learning kicks in.&lt;br&gt;
***The brain is not static - it is constantly changing, growing, deteriorating. Just like physical exercise, the choice is ours to improve mental strength. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-techniques"&gt;
  &lt;/a&gt;
  üß† THE TECHNIQUES:
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;KEY TAKEAWAY: Find the techniques that work best for you - not everything is for everyone&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pomodoro Technique&lt;/strong&gt; - 25 minutes of focus mode, no interruptions, followed by 5 minutes of diffuse mode, and repeat. The goal is to alternate between focus and diffuse mode of learning to overcome procrastination - begin with the most unpleasant task of the day. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Chunk the Subject&lt;/strong&gt; - We can only hold 4 chunks of knowledge in working memory - divide and conquer large tasks, breaking them down into small chunks of working knowledge  that are combined to create an understanding of a concept. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Spaced Repetition Revisited&lt;/strong&gt; - Goal is to repeat and practice over time rather than overlearn in one sitting. Use multiple techniques in tandem with spaced repetition to learn a subject. Forgetting curve slope decreases with continued repetition. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Deliberate Practice Revisited&lt;/strong&gt; - Work smart AND hard, avoid easy tasks, take in challenges. Plan focus time that pushes to the edge of your ability, and give yourself immediate feedback by documenting what was done and your progress. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Create a Roadmap&lt;/strong&gt; - Make a plan - it doesn‚Äôt have to be perfect and can change along the way but it is important to have tangible goals. We overestimate what we can do in the short-term and underestimate what we‚Äôre capable of in the long-term; roadmap provides guidance and focus.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Interleaving&lt;/strong&gt; - Use different methods and techniques in learning. Variety is important, as is creativity and flexibility. Form knowledge from multiple sources and perspectives. Connect chunks in memory that are unique to you and your problem solving skills. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Einstellung Effect&lt;/strong&gt; - the negative effect of previous experience when solving new problems; an example of rigid, mechanized mindset closed off to new ideas that will not achieve new heights. SOLUTION: Integrative Complexity - willingness to accept multiple perspectives, integrate into larger, more coherent picture that continues to evolve; your understanding continues to grow and is never complete, beginner mindset is always ready to integrate new viewpoints and ideas. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Importance of Community&lt;/strong&gt; - Community helps to identify blind spots in your learning, gives immediate feedback, provides accountability. It is said that you are the average of the five people you surround yourself with most. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Habits Revisited&lt;/strong&gt; - Willpower is a bad strategy; habits and energy savers. The Power of Habit - 4 things needed to form habits: 1. Cue - trigger to put us in habit mode, 2. Routine - what brain does in response to cue, ritual, 3. Reward - something that makes us feel good, 4. Belief - in the positive effect of the habit. Atomic Habits - 4 things needed for behavior change: 1. Is it obvious? 2. Is it easy? Have you made it as easy as possible, 3. Is it attractive? Does this habit lead to a positive outcome, 4. Is it satisfying? Does it reward us? &lt;br&gt;
Use don‚Äôt break the chain method to track your habits. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;System vs. Goals&lt;/strong&gt; - Goals are good but systems are needed to achieve them. Set goals as an end point, and put systems in place to achieve those goals. Bonus points if systems become habitual!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Power of the Senses&lt;/strong&gt; - Utilizing multiple senses aids in recall. Metaphors, analogies, visualizations use the mind‚Äôs eye. Sensory memory and emotional elements can be accessed through storytelling. Seek new experiences to stimulate the brain, and work in stimulating environments.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pareto Principle Revisited&lt;/strong&gt; - Mastery requires you to be in the top 5% of the world. What are the critical 20% of skills to get 80% of the desired results. Remove anything superfluous and not of the highest quality. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Parkinson‚Äôs Law&lt;/strong&gt; -  Work expands so as to fill the full time available for its completion. A project is finished in the amount of time allotted - give yourself a realistic timeline to complete a task. Small goals and systems aid in achieving the larger goal within your timeline. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Stakes + Rewards&lt;/strong&gt; - Have rewards for motivation, stakes to keep you accountable. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Concepts vs. Facts&lt;/strong&gt; - Facts can be Googled, concepts must be learned. Recognition vs. recollections is the equivalent to active vs. passive learning. Focus on foundations and principles when learning to build conceptual knowledge.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Test Yourself&lt;/strong&gt; - Identify key ideas of what was learned, pause and recap. Seek feedback and learn from mistakes. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Method of Loci&lt;/strong&gt; - Latin for ‚Äúplaces‚Äù -  strategy of memory enhancement which uses visualizations of familiar spatial environments in order to enhance the recall of information. AKA the memory journey, memory palace, or mind palace technique. Create visual stories based on information and memories that are unique to you to learn information and assist in recall. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Deep Work&lt;/strong&gt; - Period of deep focus with no distractions where you push your capabilities to their limits. Dedicate a workspace, set an end time, prioritize power-ups (sleep, happiness, exercise), create and easy starting sequence. Deep work is important because in the future shallow work will become computerized and jobs requiring deep thinkers will be in high demand. The ability to do deep work will set you apart. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#in-conclusion"&gt;
  &lt;/a&gt;
  IN CONCLUSION:
&lt;/h3&gt;

&lt;p&gt;While this is a long list of information and techniques, I have been trying them little by little and finding what works best for me. For example, I‚Äôve found that the Pomodoro Technique has been incredibly helpful in combating fatigue and burnout, Spaced Repetition has cemented concepts and methods that I would have otherwise had to continue to refer back to notes for, and Chunking has made complex subjects, like Object Orientation, easier to process and understand. &lt;/p&gt;

&lt;p&gt;My favorite concept would have to be The Pillar that Everything is a Game. When starting my day, I remember that knowledge is an actionable choice, and that I have the good fortune to play the game and reach new levels. &lt;/p&gt;

&lt;p&gt;Happy learning everyone!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#additional-reading"&gt;
  &lt;/a&gt;
  üìö ADDITIONAL READING
&lt;/h3&gt;

&lt;p&gt;The Dip - Seth Godin&lt;br&gt;
Mastery - Robert Greene&lt;br&gt;
The Art of Learning - Josh Waitzkin&lt;br&gt;
Smartcuts - Shane Snow&lt;br&gt;
Obstacle is the Way - Ryan Holiday&lt;br&gt;
Learning How to Learn - Barbara Oakley&lt;br&gt;
Why We Sleep - Matthew Walker&lt;br&gt;
Peak - Anders Ericsson&lt;br&gt;
Thinking Fast and Slow - Daniel Kahneman&lt;br&gt;
The Power of Habit - Charles Duhigg&lt;br&gt;
Eat that Frog! - Brian Tracy&lt;br&gt;
Moonwalking With Einstein - Joshua Foer&lt;br&gt;
Deep Work - Cal Newport&lt;/p&gt;

</description>
      <category>productivity</category>
    </item>
    <item>
      <title>Developer Student Clubs</title>
      <author>kaline</author>
      <pubDate>Fri, 09 Apr 2021 03:12:45 +0000</pubDate>
      <link>https://dev.to/kaline/developer-student-clubs-5dah</link>
      <guid>https://dev.to/kaline/developer-student-clubs-5dah</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yx3ZHary--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q7pbmcg1b2rrm6sf94gl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yx3ZHary--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q7pbmcg1b2rrm6sf94gl.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#o-que-%C3%A9-o-dsc"&gt;
  &lt;/a&gt;
  O que √© o DSC?
&lt;/h6&gt;

&lt;p&gt;Os Developer Student Clubs s√£o grupos comunit√°rios baseados em universidades para alunos interessados ‚Äã‚Äãnas tecnologias desenvolvidas pela Google. Alunos de todos os programas de gradua√ß√£o ou p√≥s-gradua√ß√£o com interesse em crescer como desenvolvedores s√£o bem-vindos. Ao ingressar em um DSC, os alunos aumentam seus conhecimentos em um ambiente de aprendizagem ponto a ponto e criam solu√ß√µes para empresas locais e sua comunidade.&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#como-eu-me-tornei-uma-dsc-lead"&gt;
  &lt;/a&gt;
  Como eu me tornei uma DSC Lead?
&lt;/h6&gt;

&lt;p&gt;Eu me tornei uma DSC Lead submetendo um um formul√°rio no site oficial do DSC, no qual pedia informa√ß√µes referentes a meus soft skills e hard skills, por exemplo, havia perguntas sobre minhas habilidades comunicativas e sociais e tamb√©m sobre projetos nos quais eu j√° havia participado, tamb√©m √© importante destacar na submiss√£o comunidades de tecnologia no qual voc√™ participa ou j√° tenha participado. Al√©m das perguntas, tamb√©m √© pedido a submiss√£o de um v√≠deo de um minutos falando sobre um dos tr√™s t√≥picos: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Por que voc√™ √© apaixonado por tecnologia?&lt;/li&gt;
&lt;li&gt;Por que voc√™ gostaria de se tornar um DSC Lead?&lt;/li&gt;
&lt;li&gt;Conte um problema que pode ser observado no seus campus.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Eu escolhi o √∫ltimo t√≥pico, porque ele influencia diretamente na minha motiva√ß√£o de estar no mundo da tecnologia, no qual resolver problemas que afetam pessoas (porque s√£o pessoas que usam tecnologia, principalmente) e da√≠ surge minha paix√£o que, consequentemente me motiva a ser uma DSC Lead para eu possa compartilhar a minha paix√£o com outros estudantes que se interessam por tecnologias e queiram resolver problemas reais com ela.&lt;br&gt;
Eu estava me sentindo muito confiante quando submeti meu formul√°rio para o DSC, como se de algumaa forma fazer parte do DSC fosse meu destino e, assim um sentimento de acolhimento e uni√£o surge na minha mente. No entanto, a vida n√£o √© t√£o linear assim, mas quatro dia ap√≥s a submiss√£o recebi um email de aprova√ß√£o, esta not√≠cia me fez entrar em um flow sem fim para me preparar para a entrevista... &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9eD2CeOs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2m304vys4gg3zb1hyb0r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9eD2CeOs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2m304vys4gg3zb1hyb0r.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;No outro dia (uma quinta-feira quente do Cear√°), este flow foi interrompido bruscamente quando recebi um email informando que eu n√£o fui aprovada no programa, no qual eu tanto amava j√°! &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tc4IPnln--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x2l5gt39u48a927nothu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tc4IPnln--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x2l5gt39u48a927nothu.png" alt="Reprova√ß√£o"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Eu chorei, mas ainda n√£o conformada, eu enviei um email para meu entrvistador (sem resposta!) e, ap√≥s a segunda-feira, no qual seria a minha entrevista, considerando que eu j√° havia marcado com o link do calend√°rio que me foi enviado com o email de aprova√ß√£o, ent√£uo eu esperei durante meia hora e ningu√©m apareceu, depois de reenviar um email para meu entrevistador (sem reposta, novamente...), eu enviei uma mensagem para o Linkedln da Erica Hanson, a l√≠der global do DSC, no qual ela me respondeu afirmando que as inscri√ß√µes para o programa j√° haviam encerrado no Brasil, mas que o formul√°rio ainda estava aberto, porque em outros pa√≠ses ainda estava ocorrendo.&lt;br&gt;
A reposta da Erica Hanson me conformou e aceitei meu destino de n√£o fazer parte do DSC e aquilo se tornou somente uma ideia agrad√°vel de uma realidade na qual eu poderia estar em um universo paralelo. Ent√£o, no outro dia, eu recebi um email de confirma√ß√£o para eu me tornar uma DSC Lead (sem ter feito a entrevista!):&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r_2IT2bX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/evzgbxw55n9b56st1os6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r_2IT2bX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/evzgbxw55n9b56st1os6.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ent√£o no mesmo dia fui entrevistada pela gerente do DSC no Brasil, a Amanda Manzini. &lt;/p&gt;

&lt;p&gt;Eu estava t√£o animada que n√£o me importei nem ensaiar para a entrevista, parecia um sonho que me faz dormir mais.&lt;br&gt;
Finalmente, tornar-se uma DSC Lead n√£o parou na entrevista, √© um processo sem fim que, cada vez mais percebo que meu conhecimento √© bem pequeno comparado ao que existe e que outras pessoas sabem e podem me ensinar. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Agrade√ßo a grande oportunidade de crescimento proporcionada &amp;gt; pela Erica Hanson por me ajudar a fazer parte deste  &amp;gt; programa que moldou grande parte da minha forma de pensar &amp;gt; atualmente.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>studentcommnity</category>
    </item>
    <item>
      <title>Digital Clock Using HTML CSS and JavaScript</title>
      <author>Mehdi Aoussiad</author>
      <pubDate>Fri, 09 Apr 2021 03:00:50 +0000</pubDate>
      <link>https://dev.to/aoussiadmehdi/digital-clock-using-html-css-and-javascript-2ak3</link>
      <guid>https://dev.to/aoussiadmehdi/digital-clock-using-html-css-and-javascript-2ak3</guid>
      <description>&lt;p&gt;This article was originally published on my blog &lt;a href="https://webdevidea.com/blog/javascript-digital-clock/"&gt;WebDevIdea&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Building a digital clock is a good idea if you want to improve your JavaScript skills as a beginner. You will learn a lot about how to use JavaScript dates and timing functions. So this is a very useful project for beginners.&lt;/p&gt;

&lt;p&gt;It was one of the projects that I have tried in my 100 days of code challenge. Honestly, It's easy to build a digital clock, you just need some HTML/CSS basics and of course a little bit of JavaScript, especially date methods and manipulating the DOM.&lt;/p&gt;

&lt;p&gt;In this article, we will use HTML CSS and vanilla JavaScript in order to build a simple real-time digital clock. So let's get started.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-html-code"&gt;
  &lt;/a&gt;
  The HTML Code
&lt;/h2&gt;

&lt;p&gt;When it comes to HTML code, it's very simple. We just need one div that contains a heading where we will display the time in hours, minutes, and seconds using JavaScript.&lt;/p&gt;

&lt;p&gt;Here is the code example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div class="parent"&amp;gt;
    &amp;lt;h1&amp;gt;&amp;lt;/h1&amp;gt;
 &amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see, that's all we need in HTML. For the heading &lt;code&gt;h1&lt;/code&gt;, we will leave it empty because we will use JavaScript later to display the time on it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-javascript-logic"&gt;
  &lt;/a&gt;
  The JavaScript logic
&lt;/h2&gt;

&lt;p&gt;Now we will use JavaScript to display an updated time in hours, minutes, and seconds. We will also add a simple animation for our digital clock.&lt;br&gt;
Firstly, let's select our HTML elements:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// Selecting The HTML elements.
const parentDiv = document.querySelector('.parent');
const h1 = document.querySelector('h1');
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After that, we will create a function called &lt;code&gt;digitalClock&lt;/code&gt;. Inside that function, we will access the Date object to get the time in hours, minutes, and seconds.&lt;br&gt;
Here is the example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const digitalClock = () =&amp;gt; {
    const dateObj = new Date();
    let hours = dateObj.getHours();
    let minutes = dateObj.getMinutes();
    let secondes = dateObj.getSeconds();

  //Adding a zero to the left of the time if it's less or equal to 9.
    if(+hours &amp;lt;= 9){
        hours = `0${hours}`;
    }
   if(+minutes &amp;lt;= 9){
        minutes = `0${minutes}`;
    }
   if(+secondes &amp;lt;= 9){
        secondes = `0${secondes}`;
    }

//display the time on the h1 element.
 h1.innerHTML = `${hours}:${minutes}:${secondes}`;

//Toggling the animate class.
parentDiv.classList.toggle('animate');
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the example above, we added the time to the h1 with the property &lt;code&gt;innerHTML&lt;/code&gt;. In addition to that,  we have also toggled the class &lt;code&gt;animate&lt;/code&gt; that we have created in CSS in order to create an animation that changes the color of the clock‚Äôs border.&lt;/p&gt;

&lt;p&gt;Now in order to have a real-time clock that updates the time every second, we will need to use &lt;code&gt;setInterval&lt;/code&gt; in order to execute the function &lt;code&gt;digitalClock&lt;/code&gt; every 1000 milliseconds(1 second). As a result, the time will get updated every 1 second.&lt;br&gt;
Here is an example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;setInterval(digitalClock, 1000);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The CSS part&lt;br&gt;
After adding JavaScript, the clock is functional now. We just need to add some styling to it.&lt;br&gt;
Read the CSS code below to see our stylesheet:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: sans-serif;
}
body{
    display: flex;
    align-items: center;
    justify-content: center;
    height: 100vh;
    background: rgb(36, 35, 35);
    color: rgb(63, 252, 63);
}
.parent{
    width: 400px;
    height: 400px;
    background: rgb(22, 22, 22);
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 50%;
    border:  rgb(63, 252, 63) 10px solid;
}
/* Creating the class for our animation. */
.animate{
    border:  rgb(245, 39, 32) 10px solid;
}
/*the time styles*/
.parent h1{
    font-weight: 900;
    font-size: 60px;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's it. We built a simple digital clock using HTML CSS and JavaScript.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#javascript-clock"&gt;
  &lt;/a&gt;
  JavaScript Clock
&lt;/h2&gt;

&lt;p&gt;Here is a Codepen example of the &lt;a href="https://codepen.io/MehdiAoussiad/full/BaLVpab?editors=1010"&gt;Project Demo&lt;/a&gt; to check it out.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;As you can see, building a clock is not difficult. Also, if you practice a lot, you will definitely get better because practice is what makes the perfect. It's the only to grow and become a good developer.&lt;br&gt;
Thank you for reading this article.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>html</category>
      <category>css</category>
    </item>
    <item>
      <title>Private Docker Repository</title>
      <author>James Linden</author>
      <pubDate>Fri, 09 Apr 2021 01:17:56 +0000</pubDate>
      <link>https://dev.to/kodekrash/private-docker-repository-4ij5</link>
      <guid>https://dev.to/kodekrash/private-docker-repository-4ij5</guid>
      <description>&lt;p&gt;The &lt;a href="https://docs.docker.com/registry/deploying/"&gt;normal way to setup a private Docker repository&lt;/a&gt; is to simply use the container which has it all setup. This works really well for a lot of cases. I recently deployed a private repo where I need an implementation that was a bit easier to manage with existing tooling and infrastructure. Basically, this meant not running docker for the repo and integration with an existing authentication framework.&lt;/p&gt;

&lt;p&gt;Instructions are CentOS 7 specific, but shouldn't be too hard to map to your distribution of choice.&lt;/p&gt;

&lt;p&gt;nginx is used as a proxy to terminate TLS and handle the federated authentication, leaving the docker repository service running on localhost only. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#install"&gt;
  &lt;/a&gt;
  Install
&lt;/h2&gt;

&lt;p&gt;Repos: CentOS Extras, Docker-CE, (possibly EPEL)&lt;br&gt;
Packages: docker-distribution, docker-ce, nginx&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#configure"&gt;
  &lt;/a&gt;
  Configure
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#dockerdistribution"&gt;
  &lt;/a&gt;
  docker-distribution
&lt;/h3&gt;

&lt;p&gt;I only customized the rootdirectory and http addr. See Docker's &lt;a href="https://docs.docker.com/registry/configuration/"&gt;documentation&lt;/a&gt;.&lt;br&gt;
/etc/docker-distribution/registry/config.yml (select parts)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.1&lt;/span&gt;
&lt;span class="na"&gt;log&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;fields&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;service&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;registry&lt;/span&gt;
&lt;span class="na"&gt;storage&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;cache&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;layerinfo&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;inmemory&lt;/span&gt;
  &lt;span class="na"&gt;filesystem&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
     &lt;span class="na"&gt;rootdirectory&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/path/to/storage/repo&lt;/span&gt;
&lt;span class="na"&gt;http&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
   &lt;span class="na"&gt;addr&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;localhost:5000&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#nginx"&gt;
  &lt;/a&gt;
  nginx
&lt;/h3&gt;

&lt;p&gt;(Not including SSL and federated authentication)&lt;/p&gt;

&lt;p&gt;/etc/nginx/conf.d/docker.conf&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight nginx"&gt;&lt;code&gt;&lt;span class="k"&gt;server&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="kn"&gt;server_name&lt;/span&gt; &lt;span class="s"&gt;myrepo.mydomain&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="kn"&gt;listen&lt;/span&gt; &lt;span class="mi"&gt;443&lt;/span&gt; &lt;span class="s"&gt;ssl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="c1"&gt;# omit SSL directives here&lt;/span&gt;
   &lt;span class="kn"&gt;client_max_body_size&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="c1"&gt;# This just has a simple HTML info page&lt;/span&gt;
   &lt;span class="kn"&gt;root&lt;/span&gt; &lt;span class="n"&gt;/path/to/storage/docroot&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="kn"&gt;index&lt;/span&gt; &lt;span class="s"&gt;index.html&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="c1"&gt;# proxy docker API&lt;/span&gt;
   &lt;span class="kn"&gt;location&lt;/span&gt; &lt;span class="n"&gt;/v2&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kn"&gt;proxy_set_header&lt;/span&gt; &lt;span class="s"&gt;X-Forwarded-Host&lt;/span&gt; &lt;span class="nv"&gt;$host&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="kn"&gt;proxy_set_header&lt;/span&gt; &lt;span class="s"&gt;X-Forwarded-Server&lt;/span&gt; &lt;span class="nv"&gt;$host&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="kn"&gt;proxy_set_header&lt;/span&gt; &lt;span class="s"&gt;X-Forwarded-For&lt;/span&gt; &lt;span class="nv"&gt;$proxy_add_x_forwarded_for&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="kn"&gt;proxy_set_header&lt;/span&gt; &lt;span class="s"&gt;X-Forwarded-Proto&lt;/span&gt; &lt;span class="nv"&gt;$scheme&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="kn"&gt;proxy_set_header&lt;/span&gt; &lt;span class="s"&gt;Host&lt;/span&gt; &lt;span class="s"&gt;myrepo.mydomain&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="kn"&gt;proxy_pass&lt;/span&gt; &lt;span class="s"&gt;http://localhost:5000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#docker"&gt;
  &lt;/a&gt;
  docker
&lt;/h3&gt;

&lt;p&gt;(This is optional. I use it to do local admin and some maintenance scripts.&lt;/p&gt;

&lt;p&gt;/etc/docker/daemon.json&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="nl"&gt;"data-root"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"/path/to/storage/root"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#run-and-test"&gt;
  &lt;/a&gt;
  Run and Test
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#dockerdistribution"&gt;
  &lt;/a&gt;
  docker-distribution
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;systemctl start docker-distribution
systemctl &lt;span class="nb"&gt;enable &lt;/span&gt;docker-distribution
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#verify"&gt;
  &lt;/a&gt;
  Verify
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;curl http://localhost:5000/v2/_catalog
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Should return an empty repository list&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="nl"&gt;"repositories"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#nginx"&gt;
  &lt;/a&gt;
  nginx
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;systemctl start nginx
systemctl &lt;span class="nb"&gt;enable &lt;/span&gt;nginx
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#verify"&gt;
  &lt;/a&gt;
  Verify
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;curl https://myrepo.mydomain/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Should return whatever you put at /path/to/storage/docroot/index.html&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;curl https://myrepo.mydomain/v2/_catalog
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Should return an empty repository list&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="nl"&gt;"repositories"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#docker"&gt;
  &lt;/a&gt;
  docker
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;systemctl start docker
systemctl &lt;span class="nb"&gt;enable &lt;/span&gt;docker
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#verify"&gt;
  &lt;/a&gt;
  Verify
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker info
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Should return some information about your docker installation (including the customized root path).&lt;/p&gt;




&lt;p&gt;You have now setup a local Docker repository which will work just like the docker container based one.&lt;/p&gt;

</description>
      <category>docker</category>
    </item>
  </channel>
</rss>
