<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Making digital currency; How to create a new cryptocurrency</title>
      <author>milad</author>
      <pubDate>Wed, 11 Aug 2021 05:56:21 +0000</pubDate>
      <link>https://dev.to/milad75091361/making-digital-currency-how-to-create-a-new-cryptocurrency-42cf</link>
      <guid>https://dev.to/milad75091361/making-digital-currency-how-to-create-a-new-cryptocurrency-42cf</guid>
      <description>&lt;p&gt;In recent years, many startups have made a lot of money by creating a digital currency and selling tokens in the initial public offering. Creating a new digital currency may seem like an impossible process to most people. While making digital currency is possible if you have enough knowledge in this field. In this article, we will introduce you to the methods of making a digital currency and at the end, we will answer some common questions in this regard.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-are-new-digital-currencies-being-created"&gt;
  &lt;/a&gt;
  Why are new digital currencies being created?
&lt;/h2&gt;

&lt;p&gt;Even if virtual money has been available to the public for a long time, Bitcoin is the first known and most successful cryptocurrency in the cryptocurrency market. Many cryptocurrencies have been created today, the most popular of which are Bitcoin, Ripple, and Ethereum.&lt;/p&gt;

&lt;p&gt;Some unique features make companies and individuals think about creating cryptocurrencies. The most important features of digital currency are cryptography, security and confidentiality, no need to monitor a central institution, transparency of transactions, fast transactions, and ease of transfer.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-difference-between-coins-and-digital-currency-tokens"&gt;
  &lt;/a&gt;
  The difference between coins and digital currency tokens
&lt;/h2&gt;

&lt;p&gt;Some people mistakenly use tokens and quins as synonyms. While Token and Quinn are different. The most important thing that distinguishes a token from a quin is the lack of an independent blockchain. Tokens are created on the platform of other blockchains. But Quinn has an independent blockchain.&lt;/p&gt;

&lt;p&gt;Another important difference between coins and tokens is that coins are used to buy and sell and are considered a method of payment. While most tokens can be used for use in an application or as an asset. Bitcoin, Ethereum, Ripple, and Light Coin are the most popular coins in the digital currency market. Tetra, Chainlink, Dai, and Avi are also in the category of tokens.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#digital-currency-making-training-introducing-3-methods"&gt;
  &lt;/a&gt;
  Digital currency making training; Introducing 3 methods
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#method-one-create-a-new-digital-currency-by-creating-tokens"&gt;
  &lt;/a&gt;
  Method one: Create a new digital currency by creating tokens
&lt;/h3&gt;

&lt;p&gt;One way to make digital currency is to create tokens. As we have said, a token is a digital currency that does not have its independent blockchain and has been created and launched in the context of another blockchain. For this reason, when a token is generated, there is no need to work on the rules of consensus.&lt;/p&gt;

&lt;p&gt;Making tokens is cost-effective for blockchain developers because they do not need the astronomical cost of designing a blockchain to achieve their goals. Of course, it is also important to note that many digital currencies, when in their infancy, are implemented on another blockchain platform to save costs, but once they have been sufficiently developed, a dedicated blockchain for They are used to launch.&lt;/p&gt;

&lt;p&gt;The token can be created on all blockchain platforms that use smart contracts. Ethereum is one of the most popular token-building platforms. At the time of writing, Ethereum has hosted more than 80% of the tokens on the market. Bainenschin, Ias, Kazmas, Thezos, and Theron are other common platforms for making tokens.&lt;/p&gt;

&lt;p&gt;Ethereum's programming language is solidity. Solidarity uses concepts that exist in other programming languages ​​such as PHP. It is a high-level programming language that has all the capabilities and capabilities needed for blockchain software.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#method-2-create-digital-currency-by-copying-and-modifying-current-blockchains"&gt;
  &lt;/a&gt;
  Method 2: Create digital currency by copying and modifying current blockchains
&lt;/h3&gt;

&lt;p&gt;Another way to build digital currency is to use open-source blockchains. Open source blocks are made available to the public with programming code after they are created.&lt;/p&gt;

&lt;p&gt;Ethereum and Bitcoin programming codes are also open source and can be accessed by anyone on GitHub. Many blockchains have been launched following the example of these two digital currencies. For example, by making a few changes to the Bitcoin blockchain, the LightCoin network is created.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#method-3-create-a-digital-currency-by-creating-a-new-blockchain"&gt;
  &lt;/a&gt;
  Method 3: Create a digital currency by creating a new blockchain
&lt;/h3&gt;

&lt;p&gt;Build digital currency through the new blockchain&lt;br&gt;
Building and designing a blockchain network is another way to create a new digital currency. In a blockchain, data is stored in blocks and forms an interconnected chain. This structure creates an immutable storage system. The blocks are connected using hashes.&lt;/p&gt;

&lt;p&gt;Creating a new blockchain requires deep programming knowledge and a lot of time. In the following, the steps of creating a new digital currency through making blockchain are outlined in general.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Select the consensus mechanism&lt;br&gt;
Consensus mechanisms are protocols for verifying transactions performed in blockchain without the need for a third party (intermediary). Proof of work and the stock proof is currently the most well-known and basic blockchain consensus mechanisms.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Select the blockchain platform&lt;br&gt;
The correct choice of blockchain platform depends on the consensus mechanism you have chosen. The best blockchain operating systems are:&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Ethereum&lt;br&gt;
Waves (WAVES)&lt;br&gt;
Hyperledger Fabric&lt;br&gt;
NEM&lt;br&gt;
IBM blockchain&lt;br&gt;
Nxt (NXT)&lt;br&gt;
HydraChain&lt;br&gt;
BlockStarter&lt;br&gt;
BigChainDB&lt;br&gt;
EOS&lt;br&gt;
Quorum&lt;br&gt;
IOTA&lt;br&gt;
CoinList&lt;br&gt;
MultiChain&lt;br&gt;
Open chain&lt;br&gt;
Chain Core&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Design the nodes&lt;br&gt;
You need to decide how the blockchain works and design the nodes accordingly. For example, will the licenses be private or public? Will the hosting be on-premises web systems or cloud systems?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Specify the blockchain architecture&lt;br&gt;
Before launching a digital currency, you need to be sure of all aspects; Because you can not change multiple blockchain parameters after startup. For example, you need to specify what address blockchain will follow to track exchanges of different cryptocurrencies.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Design the user interface&lt;br&gt;
If your user interface is not good, the cipher project will fail. You need to make sure you are using the latest version of FTP servers, databases, etc.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#frequently-asked-questions-about-making-new-digital-currencies"&gt;
  &lt;/a&gt;
  Frequently Asked Questions about Making New Digital Currencies
&lt;/h2&gt;

&lt;p&gt;Here are some questions about building a new digital currency.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Does making a digital currency always lead to profitability?&lt;br&gt;
No. More than a few hundred thousand digital currencies have been launched on various platforms, many of which have failed. For this reason, all aspects of work must be well weighed before creating a digital currency.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What is the reason for the failure of some new digital currencies?&lt;br&gt;
Unfortunately, this perspective often causes us to become overwhelmed when it's time to start a new digital currency. That's why we see so many teams being forgotten after spending so much money and energy to create a new digital currency, without gaining popularity. One of the main reasons for their failure is that they failed to do good marketing. Therefore, before any action, the marketing system must be well defined.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What is the first step in building a new digital currency?&lt;br&gt;
The first step in creating a new digital currency is to have a well-defined digital currency white paper. White paper in the world of digital currencies means a comprehensive and complete report of the problem that the introduced project seeks to solve. Project objectives should be clearly defined within the white paper. A standard and complete white paper include an abstract, introduction, problem definition, product description, technical details, descriptions of the new digital currency, details of the public offering, and introduction of the development team.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;How much does it cost to create a new digital currency?&lt;br&gt;
Creating new passwords is not an easy task and will probably require some financial resources; Unless you can handle things like development, documentation, and marketing. The cost of building an encrypted currency depends on several factors, and no specific number can be specified.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#concluding-remarks"&gt;
  &lt;/a&gt;
  Concluding remarks
&lt;/h2&gt;

&lt;p&gt;Creating a new dedicated currency may seem like an attractive and profitable offer at first, but we must not forget that there are many challenges in this direction. For this reason, sufficient market research must be done before any action is taken. On the other hand, the necessary capital must be provided for manufacturing and marketing. Otherwise, the digital currency project is likely to fail in its infancy.&lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>crypto</category>
      <category>cryptocurrency</category>
    </item>
    <item>
      <title>W b development roadmap 2021</title>
      <author>Chris </author>
      <pubDate>Wed, 11 Aug 2021 05:52:54 +0000</pubDate>
      <link>https://dev.to/godeess/w-b-development-roadmap-2021-198h</link>
      <guid>https://dev.to/godeess/w-b-development-roadmap-2021-198h</guid>
      <description>&lt;p&gt; &lt;span&gt;Web developers work independently as freelancers or with company teams to create websites. Depending on the job, these professionals may focus on front-end development, which involves designing sites and producing content, or back-end development, which involves writing code to make website features work. Web developers may also become webmasters for a site, providing maintenance, updates, and troubleshooting when needed.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Prospective web developers can use the following information to choose a career path and understand the required steps for that career, such as completing education and understanding potential web developer roles and contexts. Read on to learn about the daily tasks and skills of a web developer, available career resources, and salary information.&lt;/p&gt;
&lt;h2&gt;What Does a Web Developer Do?&lt;/h2&gt;
&lt;p&gt;Web development and web design share many commonalities, but they differ in some key areas. Web design deals with the front-end of a website, concerning itself with appearance and user experience. Web development, on the other hand, deals with building technical front-end and/or back-end code that informs site function. Web developers may work exclusively on front-end code, back-end code, or both, and many modern jobs also require overlap into web design. These professionals may work independently on a freelance basis or with marketing or IT departments.&lt;/p&gt;
&lt;p&gt;Entry-level jobs often require only a small amount of formal education and training. As the internet continues to expand, so does the demand for talented web developers, making this career an attractive option. The U.S. Bureau of Labor Statistics (BLS) projects that web development jobs will grow by 13% between 2018 and 2028 — much faster than the national average growth for all occupations.&lt;/p&gt;

&lt;p&gt;There has never been a better time to learn to code or make a career change to software engineering. The demand for web developers is at an all-time high, and it’s only increasing. There are both free and premium tutorials online that teach you the skills to get a job as a developer — no CS degree required 🤓.&lt;/p&gt;
&lt;p id="561d"&gt;This article details the needed skills and the corresponding tutorials to learn them effectively. The illustrated guide is provided by &lt;b&gt;&lt;a href="http://www.codelivly.com"&gt;Codelivly&lt;/a&gt;&lt;/b&gt; and can be found on codelivly  — Codelivly work is excellent so be sure to star the repo and subscribe to his newsletter to support his efforts. Don’t be intimidated by the map. It may seem like a lot, but I’ll break it down so you can learn each part step-by-step.&lt;/p&gt;
&lt;p id="dda0"&gt;This article will be divided into the following sections:&lt;/p&gt;
&lt;p id="dda0"&gt;1. &lt;b&gt;&lt;a href="https://www.codelivly.com/web-developer-roadmap-2021/"&gt;Full Stack Web Development&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;
&lt;p id="dda0"&gt;2. &lt;b&gt;&lt;a href="https://www.codelivly.com/frontend-web-developer-roadmap/"&gt;Frontend Web Development&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;
&lt;p id="dda0"&gt;3. &lt;b&gt;&lt;a href="https://www.codelivly.com/backend-web-developer-roadmap/"&gt;Backend Web Development&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;
&lt;p id="dda0"&gt;4. &lt;b&gt;&lt;a href="https://www.codelivly.com/the-best-python-frameworks-for-web-development-in-2021/"&gt;Best Python Framework For Web Development&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

&lt;p id="dda0"&gt;&lt;b&gt;Dear Dev developer and users, You will get all the articles on this platform.&lt;/b&gt;&lt;/p&gt;

&lt;p id="dda0"&gt;Happy Coding 😊&lt;/p&gt;






</description>
    </item>
    <item>
      <title>How To Contribute To Open-Source Projects As A Beginner</title>
      <author>Muthu Annamalai Venkatachalam</author>
      <pubDate>Wed, 11 Aug 2021 05:10:12 +0000</pubDate>
      <link>https://dev.to/muthuannamalai12/how-to-contribute-to-open-source-projects-as-a-beginner-6cb</link>
      <guid>https://dev.to/muthuannamalai12/how-to-contribute-to-open-source-projects-as-a-beginner-6cb</guid>
      <description>&lt;p&gt;This article is about getting started with open source and more specifically how to contribute to open source as a beginner contributing to open source projects is a great way of improving your programming skills and contributing to the community also. It's important to understand that contributing to open source projects is not all about coding you can contribute in other ways such as improving the documentation, organizing the project, designing stuff reviewing code, and so on. Before moving on further I would advise everyone to read the contribution guidelines and the code of conduct they describe the workflow required to make contributions.&lt;/p&gt;

&lt;p&gt;The first step is to find a project where you can contribute as we know finding a project to contribute is a difficult task for beginners as a result. I advise you to start small and pick a small project at first and you may ask why should I do that the reason is that things move faster in a small project and it's more likely to get your first contributions moving further there are lots of websites where you can find projects to contribute to but in this article, I want to recommend four of them which are suited for beginners. The websites are:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://goodfirstissues.com/"&gt;good first issues.com&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://goodfirstissue.dev/"&gt;good first issue.dev&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://up-for-grabs.net/#/"&gt;up-for-grabs.net&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/explore"&gt;github.com/explore&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The 4th one here is more general than the other three and it's not targeted only to beginners so you have to do a little bit more work here. Moving forward these four websites should be more than enough to find a project if not pick a tool that you use daily and contribute to that tool if it's open-source alternatively you can follow this article where I will show you a repo where you can make a very simple contribution&lt;/p&gt;

&lt;p&gt;This article assumes basic knowledge of git and the git workflow we will be using is as follows:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Fork the repository to your GitHub account &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Clone the project on your machine&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create a branch before making changes&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Make your changes&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Commit and push your changes  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Open a pull request&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The above workflow is the most basic one and it's enough to contribute to open source projects&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The &lt;strong&gt;first step&lt;/strong&gt; is to fork the project you chose so all you have to do is to go to this URL which you can find in the description and click on the fork button and then you have to wait for forking to be finished now you might ask why fork it first and not clone it directly when you fork a project you make a copy of it in your account, as a result, you can work on it without affecting the original repository. Forking creates a separate copy whereas cloning downloads the project on your machine also you cannot make changes to the repository if you only clone it the reason is that only authorized people can make changes to a repository by forking the project you can make changes and submit put a request as you can see after the forking is complete it will redirect you to your copy of the project it's made of your GitHub username/repository name&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The &lt;strong&gt;next step&lt;/strong&gt; is to clone the forked repository to your machine. Go to your GitHub account, open the forked repository, click on the code button and then click the copy to clipboard icon.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FMje7wQq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624093193646/8ZBdSqEBZ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FMje7wQq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624093193646/8ZBdSqEBZ.png" alt="clone.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Open a terminal and run the following git command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git clone "URL you just copied"

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;where "URL you just copied" (without the quotation marks) is the URL to this repository (your fork of this project). See the previous steps to obtain the URL.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VwANLvtb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624093224527/wt1cqeK_N.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VwANLvtb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624093224527/wt1cqeK_N.png" alt="copy-to-clipboard.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git clone https://github.com/this-is-you/Open-Source-Contribution.git

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;where where &lt;code&gt;this-is-you&lt;/code&gt; is your GitHub username. Here you're copying the contents of the first-contributions repository on GitHub to your computer.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;strong&gt;next step&lt;/strong&gt; to create a new branch that allows people to work on the project without getting into conflict with each other. Also, each branch is independent of others so the changes from your branch are not visible in another branch unless they are merged of course. In the simplest words, your branch holds the changes you make to the project. Also, read the branch naming convention of each project they tell how you should name your branches some examples are your name/issue fix. For Example: muthu/add-name-1 which is my name slash issue fix. You can create a new branch as follows:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Change to the repository directory on your computer (if you are not already there):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd Open-Source-Contribution

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now create a branch using the &lt;code&gt;git checkout&lt;/code&gt; command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git checkout -b your-new-branch-name

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For Example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git checkout -b add-muthu-annamalai

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;The name of the branch does not need to have the word add in it, but it's a reasonable thing to include because the purpose of this branch is to add your name to a list.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;strong&gt;next step&lt;/strong&gt; is to Make necessary changes and commit those changes. The changes you make to each project depending on what the project is about and about what issues you are working on however using this example GitHub repository we will add our Name in the &lt;code&gt;Contributors.md&lt;/code&gt; file and commit our changes to our branch. Commit messages must be concise and descriptive as possible at the same time, it doesn't mean you should write a novel so let's write something short like added my name as a commit message&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now open the &lt;code&gt;Contributors.md&lt;/code&gt; file in a text editor, add your name to it and save the file.&lt;/p&gt;

&lt;p&gt;If you go to the project directory and execute the command &lt;code&gt;git status&lt;/code&gt;, you'll see there are changes.&lt;/p&gt;

&lt;p&gt;Add those changes to the branch you just created using the &lt;code&gt;git add&lt;/code&gt; command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git add Contributors.md

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now commit those changes using the &lt;code&gt;git commit&lt;/code&gt; command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git commit -m "Add &amp;lt;your-name&amp;gt; to Contributors list"

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;replacing &lt;code&gt;&amp;lt;your-name&amp;gt;&lt;/code&gt; with your name.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;strong&gt;next step&lt;/strong&gt; is to Push changes to GitHub&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Push your changes using the command &lt;code&gt;git push&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git push origin &amp;lt;add-your-branch-name&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;replacing  with the name of the branch you created earlier.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;strong&gt;next step&lt;/strong&gt; is to Submit your changes for review&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you go to your repository on GitHub, you'll see a Compare &amp;amp; pull request button. Click on that button.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Opc03EMr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624093866881/CuD__MFQa.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Opc03EMr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624093866881/CuD__MFQa.jpeg" alt="compare-pull-request.jpeg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now submit the pull request.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4K8d2yC3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624093841841/H78BMEVhS.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4K8d2yC3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624093841841/H78BMEVhS.jpeg" alt="submit-pull-request.jpeg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Soon the project admin will be merging all your changes into the master branch of their project. You will get a notification email once the changes have been merged.&lt;/p&gt;

&lt;p&gt;If you had followed the article up to here you should be able to make your open source contributions no matter the complexity of the project. I'm curious to see if you found this article useful please let me know in the comments&lt;/p&gt;

&lt;p&gt;If you want to contribute to open-source for the first time you can do it in my repository. I would be happy to help you to make your first contribution to Open-Source.&lt;/p&gt;

&lt;p&gt;Link to the GitHub Repository: &lt;a href="https://github.com/muthuannamalai12/Open-Source-Contribution"&gt;https://github.com/muthuannamalai12/Open-Source-Contribution&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You can now extend your support by buying me a Coffee.😊👇&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/muthuannamalai"&gt;Buy Me A Coffee&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If you want to contact me you can do it here:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Thanks for Reading 😊&lt;/p&gt;

</description>
      <category>github</category>
      <category>opensource</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Microfrontends With React</title>
      <author>kpiteng</author>
      <pubDate>Wed, 11 Aug 2021 05:04:37 +0000</pubDate>
      <link>https://dev.to/kpiteng/microfrontends-with-react-47jb</link>
      <guid>https://dev.to/kpiteng/microfrontends-with-react-47jb</guid>
      <description>&lt;p&gt;All we know about Microservices, which helps to develop, deploy and maintain applications individually. Like Uber where booking and payment services are individually developed and deployed. Same way we can develop, deploy react applications individually. It means, your application is divided into various individual applications and easy to maintain, that concept known as Micro Frontends.&lt;/p&gt;

&lt;p&gt;Today, we will see a React Website using Micro Frontends where we create three applications, Blogs App, Header App and Container App (Which glue Blog &amp;amp; Header and represent a single web application).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/kpiteng/microfrontends-using-reactjs"&gt;Please download full source code from our GitHub.&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-react-applications-"&gt;
  &lt;/a&gt;
  Create React Applications -
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Let’s create three react application,&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Blogs (Website Blogs App)&lt;/li&gt;
&lt;li&gt;Header (Website Header)&lt;/li&gt;
&lt;li&gt;Container (Actual Website, Where we merged Blog &amp;amp; Header)
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npx create-react-app container
npx create-react-app blogs
npx create-react-app header
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Blog Application -&lt;/strong&gt;&lt;br&gt;
Let’s create Constant add array of blogs,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;export const arrBlogs = [
    {
      "blogID": 1,
      "blogName": "React Navigation",
      "blogDetail": "Hello Developers! Let's see what's new in React Navigation 6.x.",
      "blogURL": "https://www.kpiteng.com/blogs/react-nativagation-6.x"
    },
    {
      "blogID": 2,
      "blogName": "Securing React Native Application",
      "blogDetail": "Discover a ways to develop secure react native application.",
      "blogURL": "https://www.kpiteng.com/blogs/securing-react-native-application"
    },
    {
      "blogID": 3,
      "blogName": "Top 10 React Tricks Every Developer Should Use",
      "blogDetail": "Discover a set of React best coding practices, tips and tricks that should be known by all developers.",
      "blogURL": "https://www.kpiteng.com/blogs/top-10-react-tricks-every-developer-should-use"
    }
  ] 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let’s do code for Blogs Listing, Create a file &lt;strong&gt;Blog.js&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React, { useState, useEffect } from "react";
import {arrBlogs} from './Constant';
import {
 Link
} from "react-router-dom";
import "./App.css";

function App() {
 return (
   &amp;lt;div className="container mt-5"&amp;gt;
     &amp;lt;div className="row"&amp;gt;
     {
       arrBlogs.map((blog, index) =&amp;gt; {
         return (
           &amp;lt;div className="col-xs-12 col-sm-12 col-md-6 col-lg-4 col-xl-4 mb-5"&amp;gt;
             &amp;lt;div className="card"&amp;gt;
               &amp;lt;Link to={{pathname: `/blogdetail/${blog.blogID}`, id: blog.blogID, item: blog}} &amp;gt;
                 &amp;lt;div class="card-body"&amp;gt;
                   &amp;lt;h5 class="card-title"&amp;gt;{`#${blog.blogID}`}&amp;lt;/h5&amp;gt;
                   &amp;lt;p class="card-text"&amp;gt;{blog.blogName}&amp;lt;/p&amp;gt;
                   &amp;lt;p class="card-text"&amp;gt;{blog.blogDetail}&amp;lt;/p&amp;gt;
                 &amp;lt;/div&amp;gt;
               &amp;lt;/Link&amp;gt;
             &amp;lt;/div&amp;gt;
           &amp;lt;/div&amp;gt;
         )
       })
     }
     &amp;lt;/div&amp;gt;
   &amp;lt;/div&amp;gt;
 );
}

export default App;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Blogs are located at url.com/blogs, So we need to set up &lt;strong&gt;react-router-dom and history&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn add react-router-dom history
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To see blog detail we need to setup code for BlogDetail, create file &lt;strong&gt;BlogDetail.js&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React, { useState, useEffect } from "react";
import {arrBlogs} from './Constant';
import "./App.css";

function BlogDetail(props) {

 const [blogDetail, setBlogDetail] = useState({});

 useEffect(() =&amp;gt; {
   const blogID = parseInt(props.match.params.blogid);
   const index = arrBlogs.findIndex((blog) =&amp;gt; blog.blogID === blogID);
   if (index !== -1){
     setBlogDetail(arrBlogs[index])
   }
 }, []);

  return (
   &amp;lt;div className="container mt-5"&amp;gt;
     &amp;lt;div className="row"&amp;gt;
       &amp;lt;div className="card"&amp;gt;
         {
           Object.keys(blogDetail).length &amp;gt; 0 &amp;amp;&amp;amp; &amp;lt;&amp;gt;
           &amp;lt;p&amp;gt;{`#${blogDetail.blogID}`}&amp;lt;/p&amp;gt;
           &amp;lt;p&amp;gt;{blogDetail.blogName}&amp;lt;/p&amp;gt;
           &amp;lt;p&amp;gt;{blogDetail.blogDetail}&amp;lt;/p&amp;gt;
           &amp;lt;p&amp;gt;{blogDetail.blogURL}&amp;lt;/p&amp;gt;
           &amp;lt;/&amp;gt;
         }
         {
           Object.keys(blogDetail).length === 0 &amp;amp;&amp;amp;
           &amp;lt;p&amp;gt;We're sorry, Cound't find Blog&amp;lt;/p&amp;gt;
         }
       &amp;lt;/div&amp;gt;
     &amp;lt;/div&amp;gt;
   &amp;lt;/div&amp;gt;
 );
}

export default BlogDetail;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally, We have Constant, Blogs and BlogDetail. Now Let’s do code for Blogs, BlogDetail routing. Replace App.js code with following,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React, { useState, useEffect } from "react";
import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';
import { createBrowserHistory } from "history";
import Blogs from './Blogs';
import BlogDetail from './BlogDetail';
import "./App.css";

const defaultHistory = createBrowserHistory();

function App({ history = defaultHistory }) {
 return (
   &amp;lt;Router&amp;gt;
     &amp;lt;Switch&amp;gt;
       &amp;lt;Route exact path="/" component={Blogs} /&amp;gt;
       &amp;lt;Route exact path="/blogdetail/:blogid" component={BlogDetail} /&amp;gt;
     &amp;lt;/Switch&amp;gt;
   &amp;lt;/Router&amp;gt;
 );
}

export default App;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, it’s time to run the application. We can see the list of Blogs and on press of the blog it redirect users to blog detail.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Header Application -&lt;/strong&gt;&lt;br&gt;
Here, We simply add header div to demonstrate Header Application. So, let’s add all required dependencies.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn add react-router-dom history
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let’s modify code for App.js&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React from "react";
import { createBrowserHistory } from "history";
import "./App.css";

const defaultHistory = createBrowserHistory();

function App({ history = defaultHistory }) {
 return (
   &amp;lt;div&amp;gt;
     &amp;lt;p&amp;gt;KPITENG (Header Application)&amp;lt;/p&amp;gt;
   &amp;lt;/div&amp;gt;
 );
}

export default App;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, let’s run the application, It will show a Simple Header.&lt;/p&gt;

&lt;p&gt;So, we have two applications ready, Blogs Application - where we do code for Blogs Listing, Header Application - Where we do code for Showing Header In Application.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Container Application -&lt;/strong&gt;&lt;br&gt;
Now, it's time to setup our Container Application which actually use/merge both Header and Blogs Application into our Container Application (Our Main Website)&lt;/p&gt;

&lt;p&gt;Let’s add react-router-dom, history to Container Application. After that let’s update code for App.js&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React, { useState } from "react";
import { BrowserRouter, Switch, Route } from "react-router-dom";
import { createBrowserHistory } from "history";
import MicroFrontend from "./MicroFrontend";

import "./App.css";

const defaultHistory = createBrowserHistory();

const {
 REACT_APP_HEADER_HOST: headerHost,
 REACT_APP_BLOGS_HOST: blogHost,
} = process.env;

function Header({ history }) {
 return &amp;lt;MicroFrontend history={history} host={headerHost} name="Header" /&amp;gt;;
}

function Blogs({ history }) {
 return &amp;lt;MicroFrontend history={history} host={blogHost} name="Blogs" /&amp;gt;;
}

function BlogDetail({history}) {
 return (
   &amp;lt;div&amp;gt;
     &amp;lt;MicroFrontend history={history} host={blogHost} name="Blogs" /&amp;gt;
   &amp;lt;/div&amp;gt;
 );
}


function Home({ history }) {

 return (
   &amp;lt;div className="container"&amp;gt;
      &amp;lt;Header /&amp;gt;
      &amp;lt;Blogs /&amp;gt;
   &amp;lt;/div&amp;gt;
 );
}

function App() {
 return (
   &amp;lt;BrowserRouter&amp;gt;
     &amp;lt;React.Fragment&amp;gt;
       &amp;lt;Switch&amp;gt;
         &amp;lt;Route exact path="/" component={Home} /&amp;gt;
         &amp;lt;Route exact path="/blogdetail/:blogid" component={BlogDetail} /&amp;gt;
       &amp;lt;/Switch&amp;gt;
     &amp;lt;/React.Fragment&amp;gt;
   &amp;lt;/BrowserRouter&amp;gt;
 );
}

export default App;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#setup-micro-frontends-"&gt;
  &lt;/a&gt;
  SetUp Micro Frontends -
&lt;/h3&gt;

&lt;p&gt;Think, how my Container app knows about Header Application and Blogs Application. Let’s set it up one by one.&lt;/p&gt;

&lt;p&gt;*&lt;em&gt;SetUp Web Application Port - *&lt;/em&gt;&lt;br&gt;
Container Application - Port 3000&lt;br&gt;
Header Application - Port 3001 &lt;br&gt;
Blogs Application - Port 3002&lt;/p&gt;

&lt;p&gt;To do this, update package.json,&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Container Application,&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"scripts": {
   "start": "PORT=3000 react-app-rewired start",
 },
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Header Application,&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"scripts": {
   "start": "PORT=3001 react-app-rewired start",
 },
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Blogs Application,&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"scripts": {
   "start": "PORT=3002 react-app-rewired start",
 },
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, Create .env file in root directory of Container Application,&lt;/p&gt;

&lt;p&gt;REACT_APP_HEADER_HOST=&lt;a href="http://localhost:3001"&gt;http://localhost:3001&lt;/a&gt;&lt;br&gt;
REACT_APP_BLOGS_HOST=&lt;a href="http://localhost:3002"&gt;http://localhost:3002&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You know, React App bundle entire applications to main.js, Where we have functions to render, mount, unmount components.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Render Function Name: render{ApplicationName}
UnMount Function Name: unmount{ApplicationName}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So, Your Blogs App looks like,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;renderBlogs
unmountBlogs
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Same way, Header App looks like,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;renderHeader
unmountHeader
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let’s create a MicroFrontend.js file in Container App, which has business logic for mount, unmount components.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React, { useEffect } from "react";

function MicroFrontend({ name, host, history }) {
 useEffect(() =&amp;gt; {
   const scriptId = `micro-frontend-script-${name}`;

   const renderMicroFrontend = () =&amp;gt; {

     window[`render${name}`](`${name}-container`, history);
   };

   if (document.getElementById(scriptId)) {
     renderMicroFrontend();
     return;
   }

   fetch(`${host}/asset-manifest.json`)
     .then((res) =&amp;gt; res.json())
     .then((manifest) =&amp;gt; {
       const script = document.createElement("script");
       script.id = scriptId;
       script.crossOrigin = "";
       script.src = `${host}${manifest.files["main.js"]}`;
       script.onload = () =&amp;gt; {
         renderMicroFrontend();
       };
       document.head.appendChild(script);
     });

   return () =&amp;gt; {
     window[`unmount${name}`] &amp;amp;&amp;amp; window[`unmount${name}`](`${name}-container`);
   };
 });

 return &amp;lt;main id={`${name}-container`} /&amp;gt;;
}

MicroFrontend.defaultProps = {
 document,
 window,
};

export default MicroFrontend;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see MicroFrontend component will take name, host and history as params. See the fetch function which fetch the asset-manifest.json from the host and create a script object using the main.js and it will use the render function to mount components.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SetUp Micro Frontends for Blogs Application -&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Let’s install react-app-rewired package which overrides the build config without ejecting the app.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn add react-app-rewired
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create config.overrides.js in the root directory of blogs application and add the following code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;module.exports = {
   webpack: (config, env) =&amp;gt; {
     config.optimization.runtimeChunk = false;
     config.optimization.splitChunks = {
       cacheGroups: {
         default: false,
       },
     };
      config.output.filename = "static/js/[name].js";
      config.plugins[5].options.filename = "static/css/[name].css";
     config.plugins[5].options.moduleFilename = () =&amp;gt; "static/css/main.css";
     return config;
   },
 };
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, let’s update scripts section of package.json file,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"scripts": {
   "start": "PORT=3002 react-app-rewired start",
   "build": "react-app-rewired build",
   "test": "react-app-rewired test",
   "eject": "react-app-rewired eject"
 },
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And final step in Blogs Application to update index.js,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React from 'react';
import ReactDOM from 'react-dom';
import './index.css';
import App from './App';

window.renderBlogs = (containerId, history) =&amp;gt; {
 ReactDOM.render(
   &amp;lt;App history={history} /&amp;gt;,
   document.getElementById(containerId),
 );
};

window.unmountBlogs = containerId =&amp;gt; {
 ReactDOM.unmountComponentAtNode(document.getElementById(containerId));
};

if (!document.getElementById('Blogs-container')) {
 ReactDOM.render(&amp;lt;App /&amp;gt;, document.getElementById('root'));
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;SetUp Microfrontends for Header Application -&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Install react-app-rewired&lt;/li&gt;
&lt;li&gt;Update package.json &lt;/li&gt;
&lt;li&gt;Update index.js file&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Finally, We run the Container App (Our Main Web Application)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/kpiteng/microfrontends-using-reactjs"&gt;Please download full source code from our GitHub.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Thanks for reading Blog!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;KPITENG | DIGITAL TRANSFORMATION&lt;br&gt;
&lt;a href="http://www.kpiteng.com/blogs"&gt;www.kpiteng.com/blogs&lt;/a&gt; | &lt;a href="mailto:hello@kpiteng.com"&gt;hello@kpiteng.com&lt;/a&gt;&lt;br&gt;
Connect | Follow Us On - &lt;a href="https://www.linkedin.com/company/kpiteng/"&gt;Linkedin&lt;/a&gt; | &lt;a href="https://www.facebook.com/kpiteng"&gt;Facebook&lt;/a&gt; | &lt;a href="https://www.instagram.com/kpiteng"&gt;Instagram&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>microfrontends</category>
      <category>javascript</category>
    </item>
    <item>
      <title>My Textable Cat Printer</title>
      <author>Mitch Pomery (he/him)</author>
      <pubDate>Wed, 11 Aug 2021 04:39:08 +0000</pubDate>
      <link>https://dev.to/mitchpommers/my-textable-cat-printer-18ge</link>
      <guid>https://dev.to/mitchpommers/my-textable-cat-printer-18ge</guid>
      <description>&lt;p&gt;I was scrolling on twitter one afternoon and saw that xssfox had a Bluetooth Thermal Cat Printer. I have had an idea that required a thermal printer for a while now and this looked like a really good printer for what I wanted to do, so I ordered one.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a16_kbfI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E7XCBEyVgAIDfM_.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--s8Ypsr-z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1344945017727582209/HuDd8zU__normal.jpg" alt="Chief Problem Solver Mitch profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Chief Problem Solver Mitch
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/mitchpommers"&gt;@mitchpommers&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      My new printer arrived! 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      05:28 AM - 28 Jul 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1420254881613451272" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1420254881613451272" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1420254881613451272" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;The original idea I had was to set up a thermal printer so you could message it a picture, have it print off and stick it in a guest book, like you might do with a polaroid at a wedding. But It doesn't look like I will be going to a wedding any time soon. So instead, to allow people to interact with it remotely, I decided to give it a phone number and let people send messages that would print out on my desk.&lt;/p&gt;

&lt;p&gt;To contact it, message &lt;code&gt;cat:[message to print]&lt;/code&gt; to one of the below numbers to have it printed.&lt;br&gt;
&lt;strong&gt;Aus:&lt;/strong&gt; +61 480 029 995&lt;br&gt;
&lt;strong&gt;US:&lt;/strong&gt; +1 520 521 0228&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#giving-the-cat-printer-a-number"&gt;
  &lt;/a&gt;
  Giving The Cat Printer A Number
&lt;/h1&gt;

&lt;p&gt;To be able to give the cat printer a number, first I had to get it to print. I pulled out a raspberry pi I had from the time I had my apartment lights controlled using amazon dash buttons. xssfox had some code that allowed you to send messages and images to be printed via HTTP requests. After getting that running on my pi and debugging some differences between how python handles bytes between Windows and Linux, I was able to send my first messages to print!&lt;/p&gt;

&lt;p&gt;The python code I am using is available at &lt;a href="https://gist.github.com/mpomery/6514e521d3d03abce697409609978ede"&gt;https://gist.github.com/mpomery/6514e521d3d03abce697409609978ede&lt;/a&gt;&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_hKcbgE0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E7b8By8VoAMb6MH.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--s8Ypsr-z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1344945017727582209/HuDd8zU__normal.jpg" alt="Chief Problem Solver Mitch profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Chief Problem Solver Mitch
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/mitchpommers"&gt;@mitchpommers&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      First words spoken by my printer! 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      04:19 AM - 29 Jul 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1420599852061237248" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1420599852061237248" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1420599852061237248" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;Once I had it printing, I went into my Twilio console and started adding some functions to my textable light project. I created a new function that would look at the incoming message for the prefix &lt;code&gt;cat:&lt;/code&gt; and redirect the message to the cat printer. Later I went back and made my light require the prefix &lt;code&gt;light:&lt;/code&gt; and an error message if neither of the prefixes were present.&lt;/p&gt;

&lt;p&gt;The function looks like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;exports&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;handler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;twiml&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Twilio&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;twiml&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;MessagingResponse&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toLowerCase&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;startsWith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;cat:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="nx"&gt;twiml&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;redirect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/cat_printer&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toLowerCase&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;startsWith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;light:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="nx"&gt;twiml&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;redirect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/textable_light&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;else&lt;/span&gt;
    &lt;span class="nx"&gt;twiml&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`"light:[colour]" to add a colour to the light
"cat:[text]" to print on the cat printer`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;twiml&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I then set up a second function &lt;code&gt;cat_printer&lt;/code&gt; to format the message to be sent to the printer. It takes the incoming message, removes the &lt;code&gt;cat:&lt;/code&gt; prefix, redacts part of the number it was received from and formats it with a timestamp for printing. Then it makes a call to the web server running on my raspberry pi (which was made available to the internet using ngrok) to print it. Once that request has been made, the response from the printer gets sent back to the number who texted it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;axios&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;exports&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;handler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;twiml&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Twilio&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;twiml&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;MessagingResponse&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;incomingMessage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Body&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;incomingMessage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toLowerCase&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;startsWith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;cat:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="nx"&gt;incomingMessage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;incomingMessage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;From&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;*&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;repeat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;now&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;printMessage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;now&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toLocaleString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;en-GB&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;timeZone&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Australia/Sydney&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\r\n&lt;/span&gt;&lt;span class="s2"&gt;From: &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\r\n&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;incomingMessage&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;printMessage&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="nx"&gt;axios&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;catURL&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;?text=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;encodeURIComponent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;printMessage&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;twiml&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;twiml&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;twiml&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`You sent a message with special characters or the cat printer is offline.`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;twiml&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#getting-people-to-message-it"&gt;
  &lt;/a&gt;
  Getting People To Message It
&lt;/h1&gt;

&lt;p&gt;Once I had it working I started telling people about it. Some of my friends had already seen my textable light, so the idea of sending a text message to something on my desk wasn't new to them. I was initially cryptic about what I had made, but once people knew what it was they started messaging it!&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
    &lt;div class="ltag__twitter-tweet__media ltag__twitter-tweet__media__two-pics"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uL7ugW9E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E7gGCqFVkAArkXD.jpg" alt="unknown tweet media content"&gt;
    &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--s8Ypsr-z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1344945017727582209/HuDd8zU__normal.jpg" alt="Chief Problem Solver Mitch profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Chief Problem Solver Mitch
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/mitchpommers"&gt;@mitchpommers&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      I've turned it back on this morning.&lt;br&gt;&lt;br&gt;Some of my favorites from yesterday:&lt;br&gt;1. The lyrics to Still Alive&lt;br&gt;2. The lyrics to What's Going On (We ended up watching He Man last night)&lt;br&gt;3. Me and my partner trying to get each other off the couch to see what was sent 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      23:42 PM - 29 Jul 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1420892406476468228" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1420892406476468228" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1420892406476468228" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;Some of my friends made me regret telling them about the cat printer:&lt;br&gt;
&lt;/p&gt;
&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4QzQtKFN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E7h5nzhVIAAfLJu.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--s8Ypsr-z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1344945017727582209/HuDd8zU__normal.jpg" alt="Chief Problem Solver Mitch profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Chief Problem Solver Mitch
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/mitchpommers"&gt;@mitchpommers&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      I regret telling some of my friends about this... 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      08:07 AM - 30 Jul 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1421019519485571072" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1421019519485571072" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1421019519485571072" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;I streamed it briefly so people could see what they sent print in real time, including this really long message:&lt;br&gt;
&lt;iframe src="https://clips.twitch.tv/embed?autoplay=false&amp;amp;clip=&amp;lt;a%20href=%22https://www.twitch.tv/mitchpommers/clip/PatientInexpensivePigTakeNRG-W0ojMkY5ohNpk5ha%22&amp;gt;https://www.twitch.tv/mitchpommers/clip/PatientInexpensivePigTakeNRG-W0ojMkY5ohNpk5ha&amp;lt;/a&amp;gt;&amp;amp;parent=dev.to" height="399" width="710"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Then I started to see several people sending it messages internationally, so I purchased a second Twilio number so I could respond to them:&lt;br&gt;
&lt;/p&gt;
&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QZMZKyl2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E8Z2cpwUUAAnybM.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--s8Ypsr-z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1344945017727582209/HuDd8zU__normal.jpg" alt="Chief Problem Solver Mitch profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Chief Problem Solver Mitch
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/mitchpommers"&gt;@mitchpommers&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      So it looks like I can't send responses to American/Canadian Numbers, but they do still print out.&lt;br&gt;&lt;br&gt;If anyone wants to test something for me though, you can message (520) 521-0228 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      05:03 AM - 10 Aug 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1424959545302937601" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1424959545302937601" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1424959545302937601" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;And then the TwilioDev twitter account tweeted it, expediting this blog post:&lt;br&gt;
&lt;/p&gt;
&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--Xz5LUGF---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1294344033972760581/CgW56Kuu_normal.png" alt="Twilio Developers profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Twilio Developers
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/twiliodevs"&gt;@twiliodevs&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Cat Printer lives and is now slightly-kind-of-sorta int'l!&lt;br&gt;Thanks for sharing, Mitch! 🙌 &lt;br&gt;&lt;br&gt;(quick notes:&lt;br&gt;- "cat:[message]" to print&lt;br&gt;- currently only supports ascii characters&lt;br&gt;- ascii art supported if lines are &amp;lt; 21 characters long &amp;amp; don't start with a space&lt;br&gt;) &lt;a href="https://t.co/tEgS8MWL9Z"&gt;twitter.com/MitchPommers/s…&lt;/a&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      00:40 AM - 11 Aug 2021
    &lt;/div&gt;

      &lt;div class="ltag__twitter-tweet__quote"&gt;
        &lt;div class="ltag__twitter-tweet__quote__header"&gt;
          &lt;span class="ltag__twitter-tweet__quote__header__name"&gt;
            Chief Problem Solver Mitch
          &lt;/span&gt;
          &lt;a class="mentioned-user" href="https://dev.to/mitchpommers"&gt;@mitchpommers&lt;/a&gt;

        &lt;/div&gt;
        Cat Printer has a second number now, making it easier for people who aren't in Australia to message it while I sleep.

Aus: +61 480 029 995
US: +1 520 521 0228

https://t.co/Qh4qmQNVBa
      &lt;/div&gt;

    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1425255647017324546" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1425255647017324546" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1425255647017324546" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;Now that I have it built and it has a semi-permanent position on my desk, I need to make a better way to keep all of my projects displayed on my desk. I would really like to make them all visible on the internet permanently. I have ideas on how I could achieve this, but don't have access to what I need to make it possible or the space to do it at the moment.&lt;/p&gt;

&lt;p&gt;And if you are considering making something similar yourself using Twilio Programmable Messaging, you can &lt;a href="//www.twilio.com/referral/QqpNkR"&gt;get $10 when you upgrade using this link&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>twilio</category>
      <category>showdev</category>
    </item>
    <item>
      <title>CSS3 flexbox in simple way for beginners to master.</title>
      <author>menomanabdulla</author>
      <pubDate>Wed, 11 Aug 2021 03:49:04 +0000</pubDate>
      <link>https://dev.to/menomanabdulla/css3-flexbox-in-simple-way-for-beginners-to-advance-53fi</link>
      <guid>https://dev.to/menomanabdulla/css3-flexbox-in-simple-way-for-beginners-to-advance-53fi</guid>
      <description>&lt;p&gt;Today’s world you can’t survive without flex-box  as a frontend developer whether you are expert or beginner. Flex-box give you extra superiority for managing your content in final layout, also flex-box has huge market demand for building complex web-layouts.&lt;/p&gt;

&lt;p&gt;CSS flexbox will added new weapon in your visual development portfolio. Here I am explained all CSS3 flex-box property in simple way with visual example and copy ready code. So stick till to the end and give your CSS expertise next shape.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://css3-flexbox.netlify.app/"&gt;Here is live examples, you can check it from here.&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/menomanabdulla/all-css3-flex-property"&gt;Here is github, you can see source-code from here.&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1display"&gt;
  &lt;/a&gt;
  1.Display:
&lt;/h2&gt;

&lt;p&gt;Display is CSS box-model properties,  it’s primary properties  for next all flex related properties. This defines a flex container, inline or block depending on the giver value. It enables a flex content for all its direct children. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FQVdOmSY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5opurevdgxqxo1saz2lt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FQVdOmSY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5opurevdgxqxo1saz2lt.png" alt="Display is CSS box-model properties"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2flex-order"&gt;
  &lt;/a&gt;
  2.Flex Order
&lt;/h2&gt;

&lt;p&gt;Flex item maintain default order as a source order.  Order properties can controls order in which they appear in the flex-container.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bmvXtdDt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uji28chsf6bk8ps32dfj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bmvXtdDt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uji28chsf6bk8ps32dfj.png" alt="Flex item maintain default order"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3flex-direction"&gt;
  &lt;/a&gt;
  3.Flex Direction
&lt;/h2&gt;

&lt;p&gt;Flex-direction defines how flex-box items are ordered within a flex-box container. Value example and use case: &lt;br&gt;
&lt;strong&gt;row:&lt;/strong&gt; Same as text direction&lt;br&gt;
&lt;strong&gt;row-reverse:&lt;/strong&gt;  Alternative to text direction&lt;br&gt;
&lt;strong&gt;column:&lt;/strong&gt; Same as row but top to bottom&lt;br&gt;
&lt;strong&gt;column-reverse:&lt;/strong&gt; Same as row-reverse but top to bottom &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mn8YMskz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9wdemjgziob5pgzr6o0x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mn8YMskz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9wdemjgziob5pgzr6o0x.png" alt="Flex-direction defines how flex-box items are ordered"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4flex-wrap"&gt;
  &lt;/a&gt;
  4.Flex Wrap
&lt;/h2&gt;

&lt;p&gt;For Flex-wrap stick by-default inline, flex-wrap is also flexible like others property. You can change that and allow the items to wrap as needed with its property. Value example and use case:&lt;br&gt;
&lt;strong&gt;nowrap:&lt;/strong&gt; all flexf items will be on one line&lt;br&gt;
&lt;strong&gt;wrap:&lt;/strong&gt; flex items will wrap onto multiple lines, fro&lt;br&gt;
&lt;strong&gt;wrap-reverse:&lt;/strong&gt; flex items will wrap into multiple lines, from bottom to top &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rf52j5H_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/quo6i0pxhhqa3frvjxyi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rf52j5H_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/quo6i0pxhhqa3frvjxyi.png" alt="For Flex-wrap stick by-default inline"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5flex-shrink"&gt;
  &lt;/a&gt;
  5.Flex Shrink
&lt;/h2&gt;

&lt;p&gt;Flex-shrink is just opposite of flex grow. It only comes into play if the elements must shrink to fit into their container(when the container is just too small).&lt;br&gt;
By-default every item has flex-shrink of 1 which means it will shrink as the box contracts. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fEpQ3H4P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/otmijgqjszarhl90oy3w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fEpQ3H4P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/otmijgqjszarhl90oy3w.png" alt="Flex-shrink is just opposite of flex grow"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6flex-flow"&gt;
  &lt;/a&gt;
  6.Flex Flow
&lt;/h2&gt;

&lt;p&gt;CSS This is short-hand for the flex-direction and flex-wrap properties, simultaneously they define flex containers main and cross axis. The default value is row and nowrap.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3dY4fldJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/83kqcbf8ku3fxqcbyxmm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3dY4fldJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/83kqcbf8ku3fxqcbyxmm.png" alt="CSS This is short-hand for the flex-direction and flex-wrap properties"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7flex-basis"&gt;
  &lt;/a&gt;
  7.Flex Basis
&lt;/h2&gt;

&lt;p&gt;This defines the default size of an element before the remaining space is distributed. It could be a length with unit or keyword like auto, content flex-basis default value is “auto”.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yEIf9AuN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/646ems4udq1fcwdmklix.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yEIf9AuN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/646ems4udq1fcwdmklix.png" alt="This defines the default size of an element before the remaining space is distributed"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8justify-content"&gt;
  &lt;/a&gt;
  8.Justify Content
&lt;/h2&gt;

&lt;p&gt;This properties define alignment of flex item along with ‘x’ axis or main axis. Justify-content’s default value is “flex-start”.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;flex-start:&lt;/strong&gt; item will appear at the starting of the flex-container along with ‘x’ axis.&lt;br&gt;
&lt;strong&gt;flex-end:&lt;/strong&gt; item will appear at the end of the flex-container along with ‘x’ axis. &lt;br&gt;
&lt;strong&gt;space-between:&lt;/strong&gt; items get space between those mainly left and right side when they appear along with ‘x’ axis.&lt;br&gt;
&lt;strong&gt;space-around:&lt;/strong&gt;  items get space combinedly mainly left and right side along with ‘x’ axis.&lt;br&gt;
&lt;strong&gt;center:&lt;/strong&gt; items will align center along with ‘x’ axis.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zhZ5koAz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nvh8fpxyoj5ppwispyvm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zhZ5koAz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nvh8fpxyoj5ppwispyvm.png" alt="This properties define alignment of flex item along with ‘x’ axis or main axis."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#9flex"&gt;
  &lt;/a&gt;
  9.Flex
&lt;/h2&gt;

&lt;p&gt;Flex properties determine short-hand of flex-grow, flex-shrink and flex-basis combined. The second and third property are optional. The default is ‘0 1 auto’ but if you set it with a single number value it’s like ‘1 0’;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--l-a1o8Q5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v079nrvvng1z74yc8t7k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--l-a1o8Q5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v079nrvvng1z74yc8t7k.png" alt="Flex properties determine short-hand of flex-grow"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#10align-items"&gt;
  &lt;/a&gt;
  10.Align Items
&lt;/h2&gt;

&lt;p&gt;Align-items properties defines the default behavior for how flex items are aligned or laid out along with ‘y’ or cross axis.&lt;br&gt;
&lt;strong&gt;flex-start:&lt;/strong&gt; item will appear at the starting of the flex-container along with ‘y’ axis.&lt;br&gt;
&lt;strong&gt;flex-end:&lt;/strong&gt; item will appear at the end of the flex-container along with ‘y’ axis.&lt;br&gt;
&lt;strong&gt;center:&lt;/strong&gt; item will appear at the center point of the flex-container along with ‘y’ axis.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f5gQAUUS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c7m8pvhas2ivuhc1d4ip.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f5gQAUUS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c7m8pvhas2ivuhc1d4ip.png" alt="Align-items properties defines the default behavior for how flex items are aligned or laid out along with ‘y’ or cross axis."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#11align-self"&gt;
  &lt;/a&gt;
  11.Align Self
&lt;/h2&gt;

&lt;p&gt;For This allows the default alignment, to be overridden for individual flex items. We can overridden align-items properties only for any individuals.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--x9gw4gU3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/za62sv71yide9feaob37.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x9gw4gU3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/za62sv71yide9feaob37.png" alt="For This allows the default alignment, to be overridden for individual flex items."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#12align-content"&gt;
  &lt;/a&gt;
  12.Align Content
&lt;/h2&gt;

&lt;p&gt;This property define flex container’s lines within when there is extra space in the ‘y’ axis, similar to how justify-content aligns individuals items within  the man the main-axis.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--djTMNQZT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xwao7c7ozslqvie2j85g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--djTMNQZT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xwao7c7ozslqvie2j85g.png" alt="This property define flex container’s lines within when there is extra space in the ‘y’ axis"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On this article I tried to cover all CSS3 flex-box properties with example and also include &lt;a href="https://css3-flexbox.netlify.app/"&gt;live example&lt;/a&gt; with&lt;a href="https://github.com/menomanabdulla/all-css3-flex-property"&gt; github source code&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I hope you enjoyed it, please let me know your words. If you want to deep drive with CSS3 coding guidelines and front-end web development best practices please &lt;a href="https://dev.to/menomanabdulla/15-css3-best-practices-of-for-beginners-to-pro-253d"&gt;check it&lt;/a&gt;. Also you can check my 15 Best practices of HTML5 for beginners for give your markup good shape from &lt;a href="https://dev.to/menomanabdulla/15-html5-best-practices-for-beginners-to-master-47fb"&gt;here&lt;/a&gt;. If you find any errors or mistakes then do let me know. Thanks for this journey  &amp;amp; Happy Coding.&lt;/p&gt;

</description>
      <category>css</category>
      <category>codenewbie</category>
      <category>webdev</category>
      <category>html</category>
    </item>
    <item>
      <title>Setup AWS Relational Databases - RDS Hands On</title>
      <author>Ajit Singh</author>
      <pubDate>Wed, 11 Aug 2021 03:12:53 +0000</pubDate>
      <link>https://dev.to/this-is-learning/setup-aws-relational-databases-rds-hands-on-3ndb</link>
      <guid>https://dev.to/this-is-learning/setup-aws-relational-databases-rds-hands-on-3ndb</guid>
      <description>&lt;p&gt;Last time we studied about databases now we create a RDS database in AWS. To create a RDS database follow the steps:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;In search bar type RDS. Select a service named RDS
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YxFvrfVO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s918yzkfolgdi98ymnhs.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;Then select databases. There click on create database
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---U_5HLe7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y82qs56axevr8lwm5i9j.png" alt="Alt Text"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3uG3qcf1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jxz93i3mf070sxmyqtjl.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;For this tutorial we would do a standard create in easy create there are some configured options that makes it really easy to create a DB. Select MySql in database engine. You can select the version too but right now I'll choosing the latest default version.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1riWYbt4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ygfsi2xornc6029iwm7a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1riWYbt4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ygfsi2xornc6029iwm7a.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Select the free tier in templates or select the option if you need to deploy the DB in prod or test as needed.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fYKPOxdf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4sf2f3ygur1v5d90n42f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fYKPOxdf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4sf2f3ygur1v5d90n42f.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In the settings setup database name, username and password as needed. I've set the db name as database-1, username as admin, password as password&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yd_SWhgl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qw26am6wjko453pukrhd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yd_SWhgl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qw26am6wjko453pukrhd.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Select the instance because of free tier we only have a t2.micro available&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9YosgmXI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/knisc4ml1j1m2d2r2gg4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9YosgmXI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/knisc4ml1j1m2d2r2gg4.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In storage select storage type as general purpose SSD with 20 GB storage as it is available in the free tier. Uncheck enable auto scaling as this is a test instance if in production enable it as the storage will automatically be increased as needed.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PccxbQm8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cn1ud9kywn3kt7cdet82.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PccxbQm8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cn1ud9kywn3kt7cdet82.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You can also select multi AZ deployments if you are using it for production but it is not available in the free tier.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JAZnMk2g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8to628xihdu37j9ruc3w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JAZnMk2g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8to628xihdu37j9ruc3w.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In connectivity select the VPC you want and subnets we will study about them in detail some other time, for now select the default ones and no need to change anything in this section defaults work just fine.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iFHyZ7Tf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/imjfk5bfuox73yfniz85.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iFHyZ7Tf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/imjfk5bfuox73yfniz85.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In authentication we will select password auth and in the costs you will see that this is in the free tier change settings from free tier to something else and you will see the monthly costs.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XbsvqoXJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nji5847fw40x5dpvxdzl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XbsvqoXJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nji5847fw40x5dpvxdzl.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--62SeBe_2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rmpfbutqxzdky7j1g1os.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--62SeBe_2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rmpfbutqxzdky7j1g1os.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Click on create database. This will create our DB.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mt_Ntdux--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/842a5jycleehfuehw9aa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mt_Ntdux--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/842a5jycleehfuehw9aa.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Don't forget to delete your Db if you are dong this as an exercise as it may cost you money with all the backups&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Do we have created our database we can use it now so we see how easy it was to setup a new DB in AWS if we would have done it on our own with backups, monitoring etc. It would have taken us a 1-2 days. Next we will study about Dynamo DB.&lt;/p&gt;

</description>
      <category>cloud</category>
      <category>aws</category>
      <category>cloudskills</category>
      <category>devops</category>
    </item>
    <item>
      <title>How to deploy a react application with docker in 6 steps</title>
      <author>Nelson Adonis Hernandez</author>
      <pubDate>Wed, 11 Aug 2021 03:10:18 +0000</pubDate>
      <link>https://dev.to/nelsoncode/how-to-deploy-a-react-application-with-docker-in-5-steps-1kf6</link>
      <guid>https://dev.to/nelsoncode/how-to-deploy-a-react-application-with-docker-in-5-steps-1kf6</guid>
      <description>&lt;h3&gt;
  &lt;a href="#1-dockerfile-of-frontend"&gt;
  &lt;/a&gt;
  1. DockerFile of Frontend
&lt;/h3&gt;

&lt;p&gt;if your &lt;strong&gt;environment variable&lt;/strong&gt; is for example &lt;br&gt;
&lt;a href="http://localhost:8000/api"&gt;http://localhost:8000/api&lt;/a&gt; put only &lt;strong&gt;/api&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; node:14&lt;/span&gt;

&lt;span class="k"&gt;WORKDIR&lt;/span&gt;&lt;span class="s"&gt; /app&lt;/span&gt;

&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; . /app&lt;/span&gt;

&lt;span class="k"&gt;ENV&lt;/span&gt;&lt;span class="s"&gt; REACT_APP_REST=/api&lt;/span&gt;

&lt;span class="k"&gt;RUN &lt;/span&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt;

&lt;span class="k"&gt;RUN &lt;/span&gt;npm i &lt;span class="nt"&gt;-g&lt;/span&gt; serve

&lt;span class="k"&gt;RUN &lt;/span&gt;npm run build

&lt;span class="k"&gt;EXPOSE&lt;/span&gt;&lt;span class="s"&gt; 5000&lt;/span&gt;

&lt;span class="k"&gt;CMD&lt;/span&gt;&lt;span class="s"&gt; ["serve", "-s", "build"]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#2-dockerfile-of-backend"&gt;
  &lt;/a&gt;
  2. DockerFile of Backend
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; node:14&lt;/span&gt;

&lt;span class="k"&gt;WORKDIR&lt;/span&gt;&lt;span class="s"&gt; /app&lt;/span&gt;

&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; . /app&lt;/span&gt;

&lt;span class="k"&gt;RUN &lt;/span&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt;

&lt;span class="k"&gt;EXPOSE&lt;/span&gt;&lt;span class="s"&gt; 8000&lt;/span&gt;

&lt;span class="k"&gt;CMD&lt;/span&gt;&lt;span class="s"&gt; [ "npm", "run", "serve" ]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#3-endpoint-of-backend-with-express-js"&gt;
  &lt;/a&gt;
  3. Endpoint of Backend with Express JS
&lt;/h3&gt;

&lt;p&gt;The endpoint begins with &lt;strong&gt;/api&lt;/strong&gt; as we had defined it in the Frontend&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;games&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./api&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;cors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;cors&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cors&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/api/games&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;games&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;8000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;port&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Example app listening at http://localhost:&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;port&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#4-create-file-dockerfile-of-nginx"&gt;
  &lt;/a&gt;
  4. Create file DockerFile of Nginx
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; nginx:latest&lt;/span&gt;

&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; nginx.conf /etc/nginx/nginx.conf&lt;/span&gt;

&lt;span class="k"&gt;EXPOSE&lt;/span&gt;&lt;span class="s"&gt; 80&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#5-create-nginx-conf"&gt;
  &lt;/a&gt;
  5. Create Nginx conf
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;events {
        worker_connections 768;
        # multi_accept on;
}

http {
    server {
        listen 80 default_server;
        listen [::]:80 default_server;

        root   /usr/share/nginx/html;
        index  index.html index.htm;
        try_files $uri /index.html =404;

        location / {
            proxy_pass http://frontendreact:5000;
        }

        location /api {
            proxy_pass http://backendnode:8000;
        }
    } 
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#6-docker-compose"&gt;
  &lt;/a&gt;
  6. Docker compose
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;3.9"&lt;/span&gt;
&lt;span class="na"&gt;services&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;backendnode&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;build&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;./backendnode&lt;/span&gt;
    &lt;span class="na"&gt;expose&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;8000"&lt;/span&gt;
    &lt;span class="na"&gt;volumes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;./backendnode:/usr/src/app&lt;/span&gt;
  &lt;span class="na"&gt;frontendreact&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;build&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;./frontend&lt;/span&gt;
    &lt;span class="na"&gt;expose&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;5000"&lt;/span&gt;
    &lt;span class="na"&gt;volumes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;./frontend:/usr/src/app&lt;/span&gt;
  &lt;span class="na"&gt;nginx&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;build&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;./nginx&lt;/span&gt;
      &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;80:80"&lt;/span&gt;
      &lt;span class="na"&gt;links&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;frontendreact&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;backendnode&lt;/span&gt;
      &lt;span class="na"&gt;restart&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;always&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://github.com/NelsonCode/react-github-actions"&gt;Code of example in Github 🔗&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>docker</category>
      <category>nginx</category>
      <category>deploy</category>
    </item>
    <item>
      <title>🏐 Ultimate Volleyball: A 3D Volleyball environment built using Unity ML-Agents</title>
      <author>Joy</author>
      <pubDate>Wed, 11 Aug 2021 02:13:33 +0000</pubDate>
      <link>https://dev.to/joooyz/ultimate-volleyball-a-3d-volleyball-environment-built-using-unity-ml-agents-5hmd</link>
      <guid>https://dev.to/joooyz/ultimate-volleyball-a-3d-volleyball-environment-built-using-unity-ml-agents-5hmd</guid>
      <description>&lt;p&gt;Inspired by &lt;a href="https://github.com/hardmaru/slimevolleygym"&gt;Slime Volleyball Gym&lt;/a&gt;, I built a 3D Volleyball environment using Unity's &lt;a href="https://github.com/Unity-Technologies/ml-agents"&gt;ML-Agents toolkit&lt;/a&gt;. The full project is open-source and available at: &lt;a href="https://github.com/CoderOneHQ/ultimate-volleyball"&gt;🏐 Ultimate Volleyball&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you're interested in an overview of the implementation details, challenges and learnings — read on! For a background on ML-Agents, please check out my &lt;a href="https://medium.com/nerd-for-tech/an-introduction-to-machine-learning-with-unity-ml-agents-af71938ca958"&gt;Introduction to ML-Agents article&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Versions used:&lt;/strong&gt; Release 18 (June 9, 2021)&lt;br&gt;
&lt;strong&gt;Python package:&lt;/strong&gt; 0.27.0&lt;br&gt;
&lt;strong&gt;Unity package:&lt;/strong&gt; 2.1.0&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#setting-up-the-court"&gt;
  &lt;/a&gt;
  🥅 Setting up the court
&lt;/h2&gt;

&lt;p&gt;Here's what I used:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Agent Cube prefabs from the ML-Agents sample projects&lt;/li&gt;
&lt;li&gt;Volleyball prefab &amp;amp; sand material from this &lt;a href="https://assetstore.unity.com/packages/3d/props/free-beach-essentials-asset-pack-131149"&gt;free Beach Essentials Asset Pack&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Net, walls and floor made up of resized &amp;amp; rotated cube objects (net material from &lt;a href="https://assetstore.unity.com/packages/2d/textures-materials/yughues-free-grids-nets-materials-13004"&gt;Free Grids &amp;amp; Nets Materials Pack&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Thin floor representing the blue and purple "goals"&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0uonaETr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/55z1pwu5h9tay9girrqs.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0uonaETr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/55z1pwu5h9tay9girrqs.PNG" alt="Volleyball"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Some other implementation details: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The agent cubes have a &lt;strong&gt;sphere&lt;/strong&gt; collider to help control the ball trajectory&lt;/li&gt;
&lt;li&gt;I used 2 layers for the ground: the thin 'goals' on top, and the walkable floor below it. Since the goal colliders are set as 'triggers' (to check when the ball hits the floor), they will no longer register collisions. Hence the walkable floor is used for collision physics instead.&lt;/li&gt;
&lt;li&gt;I also added an invisible boundary around the court. I found that during training, agents may shy away from learning to hit the ball at all if you penalize them for hitting the ball out of bounds.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#scripts"&gt;
  &lt;/a&gt;
  📃 Scripts
&lt;/h2&gt;

&lt;p&gt;4 scripts were used to define the environment:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;VolleyballAgent.cs&lt;/code&gt; (&lt;a href="https://github.com/CoderOneHQ/ultimate-volleyball/blob/master/Assets/Scripts/VolleyballAgent.cs"&gt;Link&lt;/a&gt;)

&lt;ul&gt;
&lt;li&gt;Defines observations&lt;/li&gt;
&lt;li&gt;Controls agents' movement &amp;amp; jump actions&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;VolleyballController.cs&lt;/code&gt; (&lt;a href="https://github.com/CoderOneHQ/ultimate-volleyball/blob/master/Assets/Scripts/VolleyballController.cs"&gt;Link&lt;/a&gt;)

&lt;ul&gt;
&lt;li&gt;Checks whether the ball has hit the floor, and triggers allocation of rewards in &lt;code&gt;VolleyballEnv.cs&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;VolleyballEnv.cs&lt;/code&gt; (&lt;a href="https://github.com/CoderOneHQ/ultimate-volleyball/blob/master/Assets/Scripts/VolleyballEnvController.cs"&gt;Link&lt;/a&gt;)

&lt;ul&gt;
&lt;li&gt;Randomises spawn positions&lt;/li&gt;
&lt;li&gt;Controls starting/stopping of an episode&lt;/li&gt;
&lt;li&gt;Allocates rewards to agents&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;VolleyballSettings.cs&lt;/code&gt; (&lt;a href="https://github.com/CoderOneHQ/ultimate-volleyball/blob/master/Assets/Scripts/VolleyballSettings.cs"&gt;Link&lt;/a&gt;)

&lt;ul&gt;
&lt;li&gt;Contains basic settings e.g. agent's run speed and jump height&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#agents"&gt;
  &lt;/a&gt;
  🤖 Agents
&lt;/h2&gt;

&lt;p&gt;I planned to train the agents using PPO + Self-Play. To set this up:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Set 'Team Id' under Behavior Parameters to identify opposing teams (0 = blue, 1 = purple)&lt;/li&gt;
&lt;li&gt;Ensure the environment is symmetric&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#observations"&gt;
  &lt;/a&gt;
  Observations:
&lt;/h3&gt;

&lt;p&gt;Total observation space size: 11&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Rotation (Y-axis) - &lt;em&gt;1&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;3D Vector from agent to the ball - &lt;em&gt;3&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;Distance to the ball - &lt;em&gt;1&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;Agent velocity (X, Y &amp;amp; Z-axis) - &lt;em&gt;3&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;Ball velocity (X, Y &amp;amp; Z-axis) - &lt;em&gt;3&lt;/em&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;An alternative to vector observations is to use &lt;a href="https://learn.unity.com/tutorial/let-s-try-shooting-with-raycasts#5c7f8528edbc2a002053b468"&gt;Raycasts&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#available-actions"&gt;
  &lt;/a&gt;
  Available actions
&lt;/h3&gt;

&lt;p&gt;4 discrete branches:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Move forward, backward, stay still (size: 3)&lt;/li&gt;
&lt;li&gt;Move left, right, stay still (size: 3)&lt;/li&gt;
&lt;li&gt;Rotate left, right, stay still (size: 3)&lt;/li&gt;
&lt;li&gt;Jump, no jump (size: 2)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#rewards"&gt;
  &lt;/a&gt;
  🍭 Rewards
&lt;/h2&gt;

&lt;p&gt;Self-play is finicky, and I had many unstable runs. From the &lt;a href="https://github.com/Unity-Technologies/ml-agents/blob/main/docs/Training-Configuration-File.md#self-play"&gt;ML-Agents documentation of Self-Play&lt;/a&gt;, they suggest keeping the rewards simple (+1 for the winner, -1 for the loser) and allowing for more training iterations to compensate.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  📚 Resources
&lt;/h2&gt;

&lt;p&gt;For others looking to build their own environments, I found these resources helpful:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://learn.unity.com/course/ml-agents-hummingbirds"&gt;Hummingbirds Course&lt;/a&gt; by Unity (unfortunately outdated, but still useful).&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Unity-Technologies/ml-agents/blob/main/docs/Learning-Environment-Examples.md#:~:text=The%20Unity%20ML%2DAgents%20Toolkit,Agents%2FExamples%20and%20summarized%20below."&gt;ML-Agents Sample Environments&lt;/a&gt; (particularly the Soccer &amp;amp; Wall Jump environments)&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#next-steps"&gt;
  &lt;/a&gt;
  👟 Next steps
&lt;/h2&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

&lt;p&gt;Next, I'll share my learnings training an agent using PPO + self-play.&lt;/p&gt;

&lt;p&gt;If you're interested in &lt;a href="https://github.com/CoderOneHQ/ultimate-volleyball"&gt;trying out the environment yourself&lt;/a&gt;, you can submit your model to play against others. &lt;a href="https://bit.ly/ulti-volleyball"&gt;Sign up&lt;/a&gt; to get notified when submissions open.&lt;/p&gt;

&lt;p&gt;Any feedback and suggestions are welcome.&lt;/p&gt;

</description>
      <category>unity3d</category>
      <category>machinelearning</category>
      <category>ai</category>
      <category>reinforcementlearning</category>
    </item>
    <item>
      <title>10 Magical Tips For Every Web Developer</title>
      <author>Chris </author>
      <pubDate>Wed, 11 Aug 2021 01:55:09 +0000</pubDate>
      <link>https://dev.to/godeess/10-magical-tips-for-every-web-developer-69j</link>
      <guid>https://dev.to/godeess/10-magical-tips-for-every-web-developer-69j</guid>
      <description>&lt;p id="f6cc"&gt;In this article, we will discuss the 15 useful JavaScript tips for every web developer to save their valuable and precious time.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p id="e1bb"&gt;I am always ready to learn although I do not always like being taught&lt;/p&gt;

&lt;p id="0fe5"&gt;— Winston Churchill&lt;/p&gt;


&lt;/blockquote&gt;
&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;h1 id="fa85"&gt;Tip 1. Flatten the array of the array&lt;/h1&gt;
&lt;p id="4e31"&gt;This tip will help you to flatten a deeply nested array of arrays by using &lt;code&gt;Infinity&lt;/code&gt; in &lt;code&gt;flat&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;span id="e3aa"&gt;var array = [123, 500, [1, 2, [34, 56, 67, [234, 1245], 900]], 845, [30257]]&lt;/span&gt;&lt;span id="16da"&gt;//flatten array of array&lt;br&gt;array.flat(Infinity)&lt;/span&gt;&lt;span id="b0d8"&gt;// output:&lt;br&gt;// [123, 500, 1, 2, 34, 56, 67, 234, 1245, 900, 845, 30257]&lt;/span&gt;&lt;/pre&gt;
&lt;h1 id="902c"&gt;Tip 2. Easy Exchange Variables&lt;/h1&gt;
&lt;p id="ebf9"&gt;You probably swap the two variables using a third variable &lt;code&gt;temp&lt;/code&gt;. But this tip will show you a new way to exchange variables using destructuring.&lt;/p&gt;
&lt;pre&gt;&lt;span id="298c"&gt;//example 1&lt;/span&gt;&lt;span id="3316"&gt;var a = 6;&lt;br&gt;var b = 7;&lt;/span&gt;&lt;span id="b133"&gt;[a,b] = [b,a]&lt;/span&gt;&lt;span id="aa36"&gt;console.log(a,b) // 7 6&lt;/span&gt;&lt;/pre&gt;
&lt;br&gt;Read More: &lt;span&gt;&lt;b&gt;&lt;a href="https://www.codelivly.com/magical-javascript-tips-for-every-web-developer/"&gt;10 Magical JavaScript Tips for Every Web Developer&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;

</description>
    </item>
    <item>
      <title>App Development Roadmap 2021</title>
      <author>Chris </author>
      <pubDate>Wed, 11 Aug 2021 01:51:15 +0000</pubDate>
      <link>https://dev.to/godeess/app-development-roadmap-2021-2m5g</link>
      <guid>https://dev.to/godeess/app-development-roadmap-2021-2m5g</guid>
      <description>&lt;h2&gt;What is App Development?&lt;/h2&gt;
&lt;p&gt;App Development refers to the creation of computer applications for use on mobile devices such as tablets, smartphones and smart watches. Mobile device features such as cameras, motion and location awareness can be used to create unique and inventive mobile-only applications for things such as taxi and bike sharing.&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Mobile devices typically have popular apps for searching, browsing and social media preinstalled and users can download and install additional apps&lt;/p&gt;From Google Play (Android) and the Apple App Store (iOS). Mobile applications are designed and built for different operating systems and developers will want to learn how to build for both the Android operating system and Apple’s iOS.
&lt;p&gt;&lt;span&gt;To learn android development from starting to become pro. You can follow these steps:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Originally Published: &lt;/span&gt;&lt;span&gt;&lt;b&gt;&lt;a href="https://www.codelivly.com/app-developer-roadmap/"&gt;App development roadmap 2021&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>10 VS Code extensions every Frontend Developer should use</title>
      <author>Chris </author>
      <pubDate>Wed, 11 Aug 2021 01:50:05 +0000</pubDate>
      <link>https://dev.to/godeess/10-vs-code-extensions-every-frontend-developer-should-use-1o52</link>
      <guid>https://dev.to/godeess/10-vs-code-extensions-every-frontend-developer-should-use-1o52</guid>
      <description>&lt;p&gt; &lt;span&gt;Hello everyone, my name is suman and I'm a frontend developer. In this blog post, I would like to share 10 VS code extensions that every frontend developer should use. The purpose of using these extensions is to write faster, cleaner, and more consistent code. &lt;/span&gt;&lt;span&gt;Let's Jump in!&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Read More: &lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;a href="https://www.codelivly.com/10-vs-code-extensions-every-frontend-developer-should-use/"&gt;10 VS Code extensions every Frontend Developer should use&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

</description>
    </item>
  </channel>
</rss>
