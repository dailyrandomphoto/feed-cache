<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How to build a crypto bot with Python 3 and the Binance API (part 3)</title>
      <author>nicolasbonnici</author>
      <pubDate>Mon, 19 Apr 2021 19:43:32 +0000</pubDate>
      <link>https://dev.to/nicolasbonnici/how-to-build-a-crypto-bot-with-python-3-and-the-binance-api-part-3-1c53</link>
      <guid>https://dev.to/nicolasbonnici/how-to-build-a-crypto-bot-with-python-3-and-the-binance-api-part-3-1c53</guid>
      <description>&lt;p&gt;Welcome to the third and last part of this post. The &lt;a href="https://dev.to/nicolasbonnici/how-to-build-a-crypto-bot-with-python-3-and-the-binance-api-part-1-1864"&gt;first part is here&lt;/a&gt; and &lt;a href="https://dev.to/nicolasbonnici/how-to-build-a-crypto-bot-with-python-3-and-the-binance-api-part-2-4eh4"&gt;the second part is here&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#dataset-creation"&gt;
  &lt;/a&gt;
  Dataset creation
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#dataset-business-object"&gt;
  &lt;/a&gt;
  Dataset business object
&lt;/h2&gt;

&lt;p&gt;First let's introduce a new "dataset" business object to group prices.&lt;/p&gt;

&lt;p&gt;./models/dataset.py&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;api&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;utils&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;models.model&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;AbstractModel&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;models.exchange&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Exchange&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;models.currency&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Currency&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Dataset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;AbstractModel&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;resource_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'datasets'&lt;/span&gt;

    &lt;span class="n"&gt;pair&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;''&lt;/span&gt;
    &lt;span class="n"&gt;exchange&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;''&lt;/span&gt;
    &lt;span class="n"&gt;period_start&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;''&lt;/span&gt;
    &lt;span class="n"&gt;period_end&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;''&lt;/span&gt;
    &lt;span class="n"&gt;currency&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;''&lt;/span&gt;
    &lt;span class="n"&gt;asset&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;''&lt;/span&gt;

    &lt;span class="n"&gt;relations&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'exchange'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Exchange&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'currency'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Currency&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'asset'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Currency&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pair&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_pair&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_pair&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;utils&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format_pair&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;currency&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;asset&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#import-service"&gt;
  &lt;/a&gt;
  Import service
&lt;/h1&gt;

&lt;p&gt;then we need to build a service to parse and load historical data from the Binance exchange or any other exchange with an API and such historical ticker endpoint.&lt;/p&gt;

&lt;p&gt;./services/importer.py&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;models.dataset&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Dataset&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Importer&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;exchange&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;period_start&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;period_end&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;interval&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exchange&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;exchange&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;interval&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;interval&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;period_start&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;period_start&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;period_end&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;period_end&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Dataset&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'exchange'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'/api/exchanges/'&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exchange&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="s"&gt;'periodStart'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;period_start&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'periodEnd'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;period_end&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                  &lt;span class="s"&gt;'candleSize'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                  &lt;span class="s"&gt;'currency'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'/api/currencies/'&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exchange&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;currency&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="s"&gt;'asset'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'/api/currencies/'&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exchange&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;asset&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;()})&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;process&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;price&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exchange&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;historical_symbol_ticker_candle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;period_start&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;period_end&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;interval&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;price&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s"&gt;'dataset'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'/api/datasets/'&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;uuid&lt;/span&gt;&lt;span class="p"&gt;}))&lt;/span&gt;

        &lt;span class="n"&gt;execution_time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Execution time: '&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;execution_time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;total_seconds&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;' seconds'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This service responsibility is really simple and clear, his name say it all, we import and store historical ticker data from exchanges. &lt;/p&gt;

&lt;p&gt;Here you can directly store your objects on a relational database like PostgreSQL for instance, you can also build and use an internal REST API as proxy to your database for high performance purposes.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#backtesting"&gt;
  &lt;/a&gt;
  Backtesting
&lt;/h1&gt;

&lt;p&gt;Backtesting is the most important tool to write your future bulletproof bot and test it against all market situations from historical ticker data.&lt;/p&gt;

&lt;p&gt;For that purpose we'll create a backtest service, his responsibilities will be to load a dataset from your current local data, and if not found then it load it directly from an exchange (Binance by default). Then run a given strategy against each price data candle from the historical dataset.&lt;/p&gt;

&lt;p&gt;/services/backtest.py&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;exchanges.exchange&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Exchange&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;models.dataset&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Dataset&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;models.price&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Price&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Backtest&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;exchange&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Exchange&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;period_start&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;period_end&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;interval&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;launchedAt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="c1"&gt;# Try to find dataset
&lt;/span&gt;        &lt;span class="n"&gt;dataset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Dataset&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'get'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"exchange"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'/api/exchanges/'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;exchange&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
                                          &lt;span class="s"&gt;"currency"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'/api/currencies/'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;exchange&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;currency&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
                                          &lt;span class="s"&gt;"asset"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'/api/currencies/'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;exchange&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;asset&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
                                          &lt;span class="s"&gt;"period_start"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;period_start&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"period_end"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;period_end&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"candleSize"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;interval&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;dataset&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
            &lt;span class="n"&gt;price&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Price&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;price&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;price&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'get'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"dataset"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;'uuid'&lt;/span&gt;&lt;span class="p"&gt;]}):&lt;/span&gt;
                &lt;span class="n"&gt;newPrice&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Price&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                &lt;span class="n"&gt;newPrice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;populate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;price&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;exchange&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strategy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_price&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;newPrice&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;exchange&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strategy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Dataset not found, external API call to "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;exchange&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;price&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;exchange&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;historical_symbol_ticker_candle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;period_start&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;period_end&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;interval&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                &lt;span class="n"&gt;exchange&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strategy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_price&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;price&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;exchange&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strategy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

        &lt;span class="n"&gt;execution_time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;launchedAt&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Execution time: '&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;execution_time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;total_seconds&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;' seconds'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#projects-configuration"&gt;
  &lt;/a&gt;
  Project's configuration
&lt;/h1&gt;

&lt;p&gt;We'll using dotenv library and conventions to manage environment variables. Here's the project's default values:&lt;/p&gt;

&lt;p&gt;./.env.local&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;AVAILABLE_EXCHANGES="coinbase,binance"
EXCHANGE="binance"

BINANCE_API_KEY="Your Binance API KEY"
BINANCE_API_SECRET="Your Binance API SECRET"

COINBASE_API_KEY="Your Coinbase API KEY""
COINBASE_API_SECRET="Your Coinbase API SECRET""

# Available modes
# "trade" to trade on candlesticks
# "live" to live trade throught WebSocket
# "backtest" to test a strategy for a given symbol pair and a period
# "import" to import dataset from exchanges for a given symbol pair and a period
MODE="trade"
STRATEGY="logger"
# Allow trading "test" mode or "real" trading
TRADING_MODE="test"
# Default candle size in seconds
CANDLE_INTERVAL=60
CURRENCY="BTC"
ASSET="EUR"
# Default period for backtesting: string in UTC format
PERIOD_START="2021-02-28T08:49"
PERIOD_END="2021-03-09T08:49"

DATABASE_URL="postgresql://postgres:password@127.0.0.1:15432/cryptobot"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#main-thread"&gt;
  &lt;/a&gt;
  Main thread
&lt;/h1&gt;

&lt;p&gt;Then put all those parts together on a main thread, mostly a CLI command using args and also environment variables. &lt;/p&gt;

&lt;p&gt;By doing so we can override any default environment settings and tweak all input parameters directly with the command line based client. &lt;/p&gt;

&lt;p&gt;Really useful too when using containerization tool like Docker for instance, just launch this main thread and it will run with the specific container's environment variables.&lt;/p&gt;

&lt;p&gt;We'll dynamically load and import each components we created according to the settings.&lt;/p&gt;

&lt;p&gt;./main.py&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;#!/usr/bin/python3
&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;importlib&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;signal&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;threading&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;decouple&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;services.backtest&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Backtest&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;services.importer&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Importer&lt;/span&gt;

&lt;span class="n"&gt;exchange_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'EXCHANGE'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;available_exchanges&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'AVAILABLE_EXCHANGES'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;','&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'MODE'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;strategy&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'STRATEGY'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;trading_mode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'TRADING_MODE'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;interval&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'CANDLE_INTERVAL'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;currency&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'CURRENCY'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;asset&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'ASSET'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;trading_mode&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'real'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"*** Caution: Real trading mode activated ***"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Test mode"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Parse symbol pair from first command argument
&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;currencies&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'_'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;currencies&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;currency&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;currencies&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;asset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;currencies&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;# Load exchange
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Connecting to {} exchange..."&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;exchange_name&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;upper&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;exchange_name&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:]))&lt;/span&gt;
&lt;span class="n"&gt;exchangeModule&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;importlib&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;import_module&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'exchanges.'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;exchange_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;package&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;exchangeClass&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;getattr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;exchangeModule&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;exchange_name&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;upper&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;exchange_name&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:])&lt;/span&gt;
&lt;span class="n"&gt;exchange&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;exchangeClass&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;exchange_name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;upper&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;'_API_KEY'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;exchange_name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;upper&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;'_API_SECRET'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="c1"&gt;# Load currencies
&lt;/span&gt;&lt;span class="n"&gt;exchange&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_currency&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;currency&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;exchange&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_asset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;asset&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Load strategy
&lt;/span&gt;&lt;span class="n"&gt;strategyModule&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;importlib&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;import_module&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'strategies.'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;strategy&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;package&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;strategyClass&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;getattr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;strategyModule&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;strategy&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;upper&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;strategy&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:])&lt;/span&gt;
&lt;span class="n"&gt;exchange&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_strategy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;strategyClass&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;exchange&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;interval&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="c1"&gt;# mode
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"{} mode on {} symbol"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;exchange&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_symbol&lt;/span&gt;&lt;span class="p"&gt;()))&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;mode&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'trade'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;exchange&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strategy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;mode&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'live'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;exchange&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;start_symbol_ticker_socket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;exchange&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_symbol&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;

&lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;mode&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'backtest'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;period_start&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'PERIOD_START'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;period_end&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'PERIOD_END'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s"&gt;"Backtest period from {} to {} with {} seconds candlesticks."&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;period_start&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;period_end&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;interval&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;Backtest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;exchange&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;period_start&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;period_end&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;interval&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;mode&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'import'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;period_start&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'PERIOD_START'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;period_end&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'PERIOD_END'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s"&gt;"Import mode on {} symbol for period from {} to {} with {} seconds candlesticks."&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;exchange&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_symbol&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
            &lt;span class="n"&gt;period_start&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;period_end&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;interval&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;importer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Importer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;exchange&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;period_start&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;period_end&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;interval&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;importer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;process&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Not supported mode.'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;signal_handler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;signal&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;exchange&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Closing WebSocket connection...'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;exchange&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close_socket&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'stopping strategy...'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;exchange&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strategy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="c1"&gt;# Listen for keyboard interrupt event
&lt;/span&gt;&lt;span class="n"&gt;signal&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;signal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;signal&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SIGINT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;signal_handler&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;forever&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;threading&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Event&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;forever&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;wait&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;exchange&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strategy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#usage"&gt;
  &lt;/a&gt;
  Usage
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Real time trading mode via WebSocket&lt;/span&gt;
&lt;span class="nv"&gt;MODE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;live ./main.py BTC_EUR

&lt;span class="c"&gt;# Trading mode with default 1 minute candle&lt;/span&gt;
&lt;span class="nv"&gt;MODE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;trade ./main.py BTC_EUR

&lt;span class="c"&gt;# Import data from Exchange&lt;/span&gt;
&lt;span class="nv"&gt;MODE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;import ./main.py BTC_EUR

&lt;span class="c"&gt;# Backtest with an imported dataset or Binance Exchange API&lt;/span&gt;
&lt;span class="nv"&gt;MODE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;backtest ./main.py BTC_EUR
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can easily override any settings at call like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;PERIOD_START&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"2021-04-16 00:00"&lt;/span&gt; &lt;span class="nv"&gt;PERIOD_END&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"2021-04-16 00:00"&lt;/span&gt; &lt;span class="nv"&gt;STRATEGY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;myCustomStrategy &lt;span class="nv"&gt;MODE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;backtest ./main.py BTC_EUR
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To exit test mode and trade for real just switch "trading_mode" from "test" to "real". Use with caution at your own risks.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;TRADING_MODE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;real ./main.py BTC_EUR
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#containerize-project"&gt;
  &lt;/a&gt;
  Containerize project
&lt;/h3&gt;

&lt;p&gt;We can containerize this program using Docker. Here's a dead simple self explaining Docker build file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; python:3.9&lt;/span&gt;

&lt;span class="k"&gt;WORKDIR&lt;/span&gt;&lt;span class="s"&gt; /usr/src/app&lt;/span&gt;

&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; requirements.txt ./&lt;/span&gt;
&lt;span class="k"&gt;RUN &lt;/span&gt;pip &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;--no-cache-dir&lt;/span&gt; &lt;span class="nt"&gt;-r&lt;/span&gt; requirements.txt

&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; . .&lt;/span&gt;

&lt;span class="k"&gt;CMD&lt;/span&gt;&lt;span class="s"&gt; [ "python", "./main.py" ]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#benchmark"&gt;
  &lt;/a&gt;
  Benchmark
&lt;/h1&gt;

&lt;p&gt;Using an old AMD Phenom II 955 quad core CPU with 16go of DDR3 ram, with other process running.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#import"&gt;
  &lt;/a&gt;
  Import
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#import-and-persist-prices-to-an-internal-api"&gt;
  &lt;/a&gt;
  Import and persist prices to an internal API
&lt;/h3&gt;

&lt;p&gt;1 day ticker spitted onto 1 minutes candles:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Execution time: 82.716666 seconds
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#1-week-ticker-spitted-onto-1-minutes-candles"&gt;
  &lt;/a&gt;
  1 week ticker spitted onto 1 minutes candles:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Execution time: 9,423079183 minutes

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#1-month-ticker-spitted-onto-1-minutes-candles"&gt;
  &lt;/a&gt;
  1 month ticker spitted onto 1 minutes candles:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Execution time: 27,48139456 minutes
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#6-months-ticker-spitted-onto-1-minutes-candles"&gt;
  &lt;/a&gt;
  6 months ticker spitted onto 1 minutes candles:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Execution time: 3.032364739 hours
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#backtest"&gt;
  &lt;/a&gt;
  Backtest
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#from-imported-dataset"&gt;
  &lt;/a&gt;
  From imported dataset
&lt;/h3&gt;

&lt;p&gt;1 day ticker spitted onto 1 minutes candles:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Execution time: 3.746787 seconds
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;1 week ticker spitted onto 1 minutes candles:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Execution time: 46.900068 seconds
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;1 month ticker spitted onto 1 minutes candles:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Execution time: 1.8953 seconds
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;6 months ticker spitted onto 1 minutes candles:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Execution time: 12,15175435 minutes
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#conclusions"&gt;
  &lt;/a&gt;
  Conclusions
&lt;/h1&gt;

&lt;p&gt;We built a kickass performances real time crypto trading bot. He is able to backtest your strategies over big market dataset REALLY QUICLY using a small amount of CPU and RAM. Import datasets from exchanges, perform live trading with customizable candle sizes or even real time using WebSocket.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#to-go-further"&gt;
  &lt;/a&gt;
  To go further
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Code a tests suite that cover all program's behaviors to ensure no future regression.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Build and use an internal Rest API to persist all crypto exchange markets data in real time. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Build a end user client such like mobile app or web app. Using WebSocket or Server Sent Events, to display real time metrics.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#source-code"&gt;
  &lt;/a&gt;
  Source code
&lt;/h1&gt;

&lt;p&gt;Want to start your own strategy with your custom indicators, or just contribute and improve this project, you can find the full project &lt;a href="https://github.com/nicolasbonnici/cryptobot"&gt;source code on github&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Use with &lt;a href="https://github.com/nicolasbonnici/cryptobot/tree/stable"&gt;the stable branch&lt;/a&gt; and contribute using  &lt;a href="https://github.com/nicolasbonnici/cryptobot"&gt;the main branch develop&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;As finishing this last post, I &lt;a href="https://github.com/nicolasbonnici/cryptobot/releases/tag/0.4"&gt;released the 0.4 stable version&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;All contributions are welcome! &lt;/p&gt;

&lt;p&gt;Thank's for reading this three parts post on how to build a crypto bot with python 3 and the Binance API.&lt;/p&gt;

</description>
      <category>crypto</category>
      <category>bot</category>
      <category>trading</category>
      <category>python</category>
    </item>
    <item>
      <title>Обучение</title>
      <author>Руденко Евгений</author>
      <pubDate>Mon, 19 Apr 2021 19:37:13 +0000</pubDate>
      <link>https://dev.to/evgen1312/-12e8</link>
      <guid>https://dev.to/evgen1312/-12e8</guid>
      <description>&lt;p&gt;когда научусь тогда и опишу..&lt;/p&gt;

</description>
    </item>
    <item>
      <title>The best GNOME shell extensions</title>
      <author>Topik</author>
      <pubDate>Mon, 19 Apr 2021 19:36:07 +0000</pubDate>
      <link>https://dev.to/topik0/the-best-gnome-shell-extensions-36h8</link>
      <guid>https://dev.to/topik0/the-best-gnome-shell-extensions-36h8</guid>
      <description>&lt;p&gt;&lt;em&gt;Last updated April 19th, 2021&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Extensions help fill in the hole of customization and functionality left by GNOME.  More is being added with every update, but there is still a lot that isn't there.  Below are my favorite GNOME shell extensions that I use with daily with my system.  I will provide links and note what versions it is compatible with.  The list is not in any particular order.&lt;/p&gt;

&lt;p&gt;A word on compatibility: Some extensions don't work on the latest versions simply because of the required version in the metadata.json file.  Adding any version to this file will make Gnome try to make it work, and sometimes it does.  However, since the extension doesn't officially work on said version, things will probably break.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-bluetooth-quick-connect"&gt;
  &lt;/a&gt;
  &lt;strong&gt;1. Bluetooth Quick Connect&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Bluetooth Quick Connect adds a toggle for bluetooth devices in the GNOME bluetooth menu. It works as expected and it’s insane to me that this functionality isn’t built into Gnome.&lt;br&gt;
Works on 40 and 3.38&lt;br&gt;
&lt;a href="https://extensions.gnome.org/extension/1401/bluetooth-quick-connect/"&gt;Gnome Extensions&lt;/a&gt; | &lt;a href="https://github.com/bjarosze/gnome-bluetooth-quick-connect"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GmAmSmg4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/ACEBIxd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GmAmSmg4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/ACEBIxd.png" alt="Screenshot of the Bluetooth Quick Connect Gnome extension&amp;lt;br&amp;gt;
"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-clipboard-indicator"&gt;
  &lt;/a&gt;
  &lt;strong&gt;2. Clipboard Indicator&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Clipboard Indicator is a clipboard manager that allows you to go back in your clipboard history. It sits on the top panel and does its job well.&lt;br&gt;
Works perfectly on 3.38, but the official version seems to be broken on 40.  The fork works fine.&lt;br&gt;
&lt;a href="https://extensions.gnome.org/extension/779/clipboard-indicator/"&gt;Gnome Extensions&lt;/a&gt; | &lt;a href="https://github.com/Tudmotu/gnome-shell-extension-clipboard-indicator"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There is a fork of Clipboard Indicator that aims to add image support and works well on Gnome 40.  &lt;a href="https://github.com/RuiGuilherme/gnome-shell-extension-clipboard-indicator"&gt;Check it out here&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vjJTOX7J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/yTEhIvj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vjJTOX7J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/yTEhIvj.png" alt="Screenshot of the Clipboard Indicator Gnome extension&amp;lt;br&amp;gt;
"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-disable-workspace-switcher-popup"&gt;
  &lt;/a&gt;
  &lt;strong&gt;3. Disable Workspace Switcher popup&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;This is an extension that gets rid of the little overlay that is displayed when you switch workspaces.&lt;/p&gt;

&lt;p&gt;The version on extensions.gnome.org works fine on 3.38, but the latest version from the Git repo must be used on 40.  It's just one command, it's simple.&lt;br&gt;
&lt;a href="https://extensions.gnome.org/extension/959/disable-workspace-switcher-popup"&gt;Gnome Extensions&lt;/a&gt; | &lt;a href="https://github.com/windsorschmidt/disable-workspace-switcher-popup"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-fullscreen-notifications"&gt;
  &lt;/a&gt;
  &lt;strong&gt;4. Fullscreen Notifications&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;The Fullscreen Notifications extension allows notifications to be displayed when a user is in a fullscreen app. It's useful if you still want to get notifications while gaming or something.&lt;br&gt;
Works on 40 and 3.38&lt;br&gt;
&lt;a href="https://extensions.gnome.org/extension/1610/fullscreen-notifications"&gt;Gnome Extensions&lt;/a&gt; | &lt;a href="https://github.com/soal/gnome-shell-extension-fullscreen-notifications"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-impatience"&gt;
  &lt;/a&gt;
  &lt;strong&gt;5. Impatience&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Impatience is an extension that allows you to set the global animation speed for the Gnome shell.&lt;br&gt;
Works on 40 and 3.38&lt;br&gt;
&lt;a href="https://extensions.gnome.org/extension/277/impatience"&gt;Gnome Extensions&lt;/a&gt; | &lt;a href="https://github.com/timbertson/gnome-shell-impatience"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-pixel-saver"&gt;
  &lt;/a&gt;
  &lt;strong&gt;6. Pixel Saver&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Pixel Saver is an extension that removes the title bar and puts the window controls in the top bar when in fullscreen.&lt;br&gt;
Works on 40 and 3.38&lt;br&gt;
&lt;a href="https://extensions.gnome.org/extension/723/pixel-saver"&gt;Gnome Extensions&lt;/a&gt; | &lt;a href="https://github.com/pixel-saver/pixel-saver"&gt;GitHub&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--69itAMM4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/ObdSS0Y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--69itAMM4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/ObdSS0Y.png" alt="Screenshot of the Pixel Saver extension&amp;lt;br&amp;gt;
"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#7-remove-dropdown-arrows"&gt;
  &lt;/a&gt;
  &lt;strong&gt;7. Remove Dropdown Arrows&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;For GNOME 3.x users only.  This extension removes the dropdown arrows found in many of the menus in the Gnome 3 top bar.&lt;br&gt;
Works on 3.38, not needed in 40&lt;br&gt;
&lt;a href="https://extensions.gnome.org/extension/800/remove-dropdown-arrows"&gt;Gnome Extensions&lt;/a&gt; | &lt;a href="https://github.com/mpdeimos/gnome-shell-remove-dropdown-arrows"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#8-remove-rounded-corners"&gt;
  &lt;/a&gt;
  &lt;strong&gt;8. Remove Rounded Corners&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;For GNOME 3.x users only. Removes the rounded corners on the top bar.&lt;br&gt;
Works on 3.38, not needed in 40&lt;br&gt;
&lt;a href="https://extensions.gnome.org/extension/448/remove-rounded-corners"&gt;Gnome Extensions&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#9-top-panel-workspace-scroll"&gt;
  &lt;/a&gt;
  &lt;strong&gt;9. Top Panel Workspace Scroll&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Enables switching of the workspace by scrolling on the top bar.&lt;br&gt;
Works on 40 and 3.38&lt;br&gt;
&lt;a href="https://extensions.gnome.org/extension/701/top-panel-workspace-scroll"&gt;Gnome Extensions&lt;/a&gt; | &lt;a href="https://github.com/timbertson/gnome-shell-scroll-workspaces"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#10-transparent-top-bar"&gt;
  &lt;/a&gt;
  &lt;strong&gt;10. Transparent Top Bar&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Makes the top bar transparent under certain conditions.&lt;br&gt;
Works on 40 and 3.38&lt;br&gt;
&lt;a href="https://extensions.gnome.org/extension/1708/transparent-top-bar"&gt;Gnome Extensions&lt;/a&gt; | &lt;a href="https://github.com/zhanghai/gnome-shell-extension-transparent-top-bar"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#11-middle-click-close"&gt;
  &lt;/a&gt;
  &lt;strong&gt;11. Middle Click Close&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Allows you to close windows in the overview by pressing the middle (scroll) button.  The button can be changed.&lt;br&gt;
Works on 40 and 3.38&lt;br&gt;
&lt;a href="https://extensions.gnome.org/extension/352/middle-click-to-close-in-overview"&gt;Gnome Extensions&lt;/a&gt; | &lt;a href="https://github.com/p91paul/middleclickclose"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#12-app-indicators"&gt;
  &lt;/a&gt;
  &lt;strong&gt;12. App Indicators&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;This extension adds application icons to the top panel with menus that can serve many different uses.  This extension is originally from Ubuntu.&lt;br&gt;
Works on 40 and 3.38&lt;br&gt;
&lt;a href="https://extensions.gnome.org/extension/615/appindicator-support/"&gt;Gnome Extensions&lt;/a&gt; | &lt;a href="https://github.com/ubuntu/gnome-shell-extension-appindicator"&gt;GitHub&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8sBc5zwG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/PL6OydP.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8sBc5zwG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/PL6OydP.png" alt="Screenshot of the App Indicators extension&amp;lt;br&amp;gt;
"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#13-user-themes"&gt;
  &lt;/a&gt;
  &lt;strong&gt;13. User Themes&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;This is a simple extension that allows the shell theme to be changed from the default theme.&lt;br&gt;
Works on 40 and 3.38&lt;br&gt;
&lt;a href="https://extensions.gnome.org/extension/615/appindicator-support/"&gt;Gnome Extensions&lt;/a&gt; | &lt;a href="https://gitlab.gnome.org/GNOME/gnome-shell-extensions"&gt;Gitlab&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#14-notification-banner-extension"&gt;
  &lt;/a&gt;
  &lt;strong&gt;14. Notification Banner Extension&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;This extension moves notifications to the upper right of the screen.&lt;br&gt;
Works on 40 and 3.38&lt;br&gt;
&lt;a href="https://extensions.gnome.org/extension/4105/notification-banner-position"&gt;Gnome Extensions&lt;/a&gt; | &lt;a href="https://github.com/brunodrugowick/notification-position-gnome-extension"&gt;Github&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--htKBKO7E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/n2nkxmU.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--htKBKO7E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/n2nkxmU.png" alt="Screenshot of notifications in the upper right"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#15-hide-top-bar"&gt;
  &lt;/a&gt;
  &lt;strong&gt;15. Hide Top Bar&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;This extension auto-hides the top bar.  When the mouse is brought near the top, it reappears.  If you're like me and like to have a few things on your screen as possible, this is a must use.&lt;br&gt;
Works on 3.38, no 40 support yet&lt;br&gt;
&lt;a href="https://extensions.gnome.org/extension/545/hide-top-bar"&gt;Gnome Extensions&lt;/a&gt; | &lt;a href="https://github.com/mlutfy/hidetopbar"&gt;Github&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#16-duckduckgo-search-provider"&gt;
  &lt;/a&gt;
  &lt;strong&gt;16. DuckDuckGo Search Provider&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;These extensions allow you to make DuckDuckGo searches from typing in the overview panel.&lt;br&gt;
Works on 40 and 3.38&lt;br&gt;
&lt;a href="https://extensions.gnome.org/extension/3306/duckduckgo-search-provider/"&gt;Gnome Extensions&lt;/a&gt; | &lt;a href="https://github.com/keithamus/gnome-shell-duckduckgo-search-provider"&gt;Github&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Oyr4_ANb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9o3wdrpzt5mqevbpu7dq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Oyr4_ANb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9o3wdrpzt5mqevbpu7dq.png" alt="Screenshot of the DuckDuckGo Search Provider extension&amp;lt;br&amp;gt;
"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#17-disconnect-wifi"&gt;
  &lt;/a&gt;
  &lt;strong&gt;17. Disconnect Wifi&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;This extension adds a disconnect option to the Wifi menu, and a reconnect option when a network has been disconnected.&lt;br&gt;
Works on 40 and 3.38&lt;br&gt;
&lt;a href="https://extensions.gnome.org/extension/904/disconnect-wifi"&gt;Gnome Extensions&lt;/a&gt; | &lt;a href="https://github.com/kgshank/gse-disconnect-wifi"&gt;Github&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--A7RINtTi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aeojhf7urlkcb5e93zgs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A7RINtTi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aeojhf7urlkcb5e93zgs.png" alt="Screenshot of the disconnect option&amp;lt;br&amp;gt;
"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Jca3Z47Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gii4ex5ul7gy818vjjjx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Jca3Z47Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gii4ex5ul7gy818vjjjx.png" alt="Screenshot of the reconnect option"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#18-draw-on-your-screen"&gt;
  &lt;/a&gt;
  &lt;strong&gt;18. Draw on Your Screen&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;This extension allows you to draw on your screen using various tools, similar to Windows Markup.&lt;br&gt;
Works on 3.38, no 40 support&lt;br&gt;
&lt;a href="https://extensions.gnome.org/extension/1683/draw-on-you-screen"&gt;Gnome Extensions&lt;/a&gt; | &lt;a href="https://framagit.org/abakkk/DrawOnYourScreen"&gt;Gitlab&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#19-system-action-hibernate"&gt;
  &lt;/a&gt;
  &lt;strong&gt;19. System Action - Hibernate&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;This extension adds a hibernate option among the power options in the menu.&lt;br&gt;
Works on 40.  Despite what it claims, it does not work on 3.38&lt;br&gt;
&lt;a href="https://extensions.gnome.org/extension/3814/system-action-hibernate"&gt;Gnome Extensions&lt;/a&gt; | &lt;a href="https://codeberg.org/kiyui/gnome-shell-hibernate-extension"&gt;Codeberg&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bBpxbYdO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2d1l7cfqixdw9bcb6j7v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bBpxbYdO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2d1l7cfqixdw9bcb6j7v.png" alt="Screenshot of the hibernate option in the system menu"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#20-x11-gestures"&gt;
  &lt;/a&gt;
  &lt;strong&gt;20. X11 Gestures&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;This extension adds Gnome 40's one-to-one gesture functionality to X11.  Touchégg must be installed for this to work.  Note that it is not as smooth as the default Wayland gestures.&lt;br&gt;
&lt;a href="https://extensions.gnome.org/extension/4033/x11-gestures"&gt;Gnome Extensions&lt;/a&gt; | &lt;a href="https://github.com/JoseExposito/gnome-shell-extension-x11gestures"&gt;Github&lt;/a&gt;&lt;/p&gt;

</description>
      <category>linux</category>
      <category>gnome</category>
      <category>opensource</category>
      <category>customization</category>
    </item>
    <item>
      <title>Insertion sort</title>
      <author>Pavel Ro</author>
      <pubDate>Mon, 19 Apr 2021 19:01:15 +0000</pubDate>
      <link>https://dev.to/buurzx/insertion-sort-45i2</link>
      <guid>https://dev.to/buurzx/insertion-sort-45i2</guid>
      <description>&lt;p&gt;The best analogy for insertion sort is a deck of cards. And you need to put them in the right order from smallest to greatest. You hold at least one card constant while you move the other cards around it to sort everything into order. The element that you considering could be moved one spot or over multiple spots.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;insertion_sort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;array&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;size&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;

  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;length&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;times&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
      &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;
      &lt;span class="k"&gt;end&lt;/span&gt;
      &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="n"&gt;array&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;return array if it's empty or include one element&lt;/li&gt;
&lt;li&gt;iterate through array with &lt;code&gt;(array.length).times&lt;/code&gt;, &lt;code&gt;i&lt;/code&gt; represents the index of the array&lt;/li&gt;
&lt;li&gt;in the loops when element's index &amp;gt; 0 &lt;/li&gt;
&lt;li&gt;we set &lt;code&gt;if/else&lt;/code&gt; condition and if previous value larger than current we swap them, else we terminate loops&lt;/li&gt;
&lt;li&gt;if loops does not terminate we decrease index of array and continue&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Time Complexity: О(n^2)&lt;br&gt;
Space Complexity: О(n)&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>ruby</category>
      <category>sorting</category>
      <category>algorithms</category>
    </item>
    <item>
      <title>Never use a number or currency formatting library again!</title>
      <author>Jordan Finneran</author>
      <pubDate>Mon, 19 Apr 2021 19:00:47 +0000</pubDate>
      <link>https://dev.to/jordanfinners/never-use-a-number-or-currency-formatting-library-again-mhb</link>
      <guid>https://dev.to/jordanfinners/never-use-a-number-or-currency-formatting-library-again-mhb</guid>
      <description>&lt;h2&gt;
  &lt;a href="#contents"&gt;
  &lt;/a&gt;
  Contents
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt; &lt;a href="#intro"&gt;Intro&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="#number"&gt;Number Format&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="#currency"&gt;Currency Format&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="#units"&gt;Units Format&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="#summary"&gt;Summary&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#intro"&gt;
  &lt;/a&gt;
  Intro &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Reducing dependencies that you ship with your frontend is always a good thing!&lt;br&gt;
If you are using a number or currency formatting library, check it out on &lt;a href="https://bundlephobia.com/"&gt;Bundlephobia&lt;/a&gt; and see how much time and bytes it adds to your application.&lt;/p&gt;

&lt;p&gt;All this can be done with a new cross browser API! &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat"&gt;Intl.NumberFormat&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#number-format"&gt;
  &lt;/a&gt;
  Number Format &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Formatting numbers is hard! Adding thousand separators, decimal places and so on.&lt;br&gt;
Never mind internationalization too! Some languages use comma separators, some dot separators and thats only the start!&lt;/p&gt;

&lt;p&gt;Enter &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat"&gt;Intl.NumberFormat&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl"&gt;Intl&lt;/a&gt; API has some really helpful methods but we are going to focus on number formatting in this blog.&lt;/p&gt;

&lt;p&gt;Let's jump straight in with an example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;numberFormat&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Intl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NumberFormat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ru-RU&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;numberFormat&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;654321.987&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="c1"&gt;// → "654 321,987"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we have specified the locale to be russian, however if you use the constructor without passing a locale it will auto detect based on the users browser.&lt;br&gt;
Meaning it will change depending on the users preference, localising to your users:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;numberFormat&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Intl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NumberFormat&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;numberFormat&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;654321.987&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat#browser_compatibility"&gt;supported across all browsers&lt;/a&gt; now, including Safari!&lt;/p&gt;

&lt;p&gt;But we can take it even further...&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#currency-format"&gt;
  &lt;/a&gt;
  Currency Format &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Not only can we format numbers this way, but we can also support currencies too.&lt;br&gt;
This is relatively new support across browsers, so what out of Safari versions your users are using.&lt;/p&gt;

&lt;p&gt;This works great for formatting numbers:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;123456.789&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Intl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NumberFormat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;de-DE&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;currency&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;currency&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;EUR&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="nx"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="c1"&gt;// expected output: "123.456,79 €"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There is &lt;a href="http://www.currency-iso.org/en/home/tables/table-a1.html"&gt;support for every currency&lt;/a&gt; I could think of.&lt;/p&gt;

&lt;p&gt;Remember this won't do any currency conversions between them, only format how they are displayed.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#units-format"&gt;
  &lt;/a&gt;
  Units Format &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;I didn't know this until researching this blog. But you can even format units!!&lt;br&gt;
This isn't yet supported on Safari, so again check the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#browser_compatibility"&gt;browser compatibility&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Intl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NumberFormat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;en-US&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;unit&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="na"&gt;unit&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;liter&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="na"&gt;unitDisplay&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;long&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="nx"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;amount&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// → '3,500 liters'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There are an enormous list of supported units, including speeds and loads more.&lt;br&gt;
It even allows you to format percentages, which I've always found a pain.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Intl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NumberFormat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;en-US&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;percent&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;signDisplay&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;exceptZero&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="nx"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.55&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// → '+55%'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat"&gt;Intl.NumberFormat&lt;/a&gt; is a really powerful tool in the arsenal of web developers!&lt;/p&gt;

&lt;p&gt;No need to add an additional dependencies to your application. Increase speed and international support with the Intl API!&lt;/p&gt;

&lt;p&gt;Happy Building!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>html</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Take break to be more productive</title>
      <author>Anjan Shomodder</author>
      <pubDate>Mon, 19 Apr 2021 18:31:00 +0000</pubDate>
      <link>https://dev.to/thatanjan/take-break-to-be-more-productive-59ph</link>
      <guid>https://dev.to/thatanjan/take-break-to-be-more-productive-59ph</guid>
      <description>&lt;p&gt;In this blog I will teach you how taking break can improve your productivity. I am writing this blog post from the perspective of a software developer. But even if you are not a developer, reading this blog post might help you.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#my-story"&gt;
  &lt;/a&gt;
  My story
&lt;/h3&gt;

&lt;p&gt;I am a full stack web developer. It is almost 3 years, I have been coding. I code everyday. Sometimes not so much but most of the time a lot. Some days may be 8-9 hours.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#but-do-i-really-code-that-much-time"&gt;
  &lt;/a&gt;
  But do I really code that much time?
&lt;/h4&gt;

&lt;p&gt;Absolutely not. Most of the time I do this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nBKtOS1O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qk6yirarc7ubovhc3o5a.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nBKtOS1O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qk6yirarc7ubovhc3o5a.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sXg9SYVv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iox39aksub3vyy844qnb.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sXg9SYVv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iox39aksub3vyy844qnb.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NWbunIee--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3idmlkoeelr335lsq1x2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NWbunIee--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3idmlkoeelr335lsq1x2.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And end of the day:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E2mfWkWa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h3cgdvtqjztg9xnjllyi.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E2mfWkWa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h3cgdvtqjztg9xnjllyi.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Because this is the reality. We do less coding more debugging.&lt;/p&gt;

&lt;p&gt;so Maybe you have started your day fully motivated. You have set a goal for your day. So you started coding. After sometime you got stuck in some part of the code. You have been debugging your code for hours. You have done hundred of print statements, tested so many variations. But none them didn't work.&lt;/p&gt;

&lt;p&gt;So you leave the day frustrated and lost your motivation. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bwrXvyuC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/camcwxs61vgg2bqawpba.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bwrXvyuC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/camcwxs61vgg2bqawpba.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But when you open the same code in the next day, quickly you started to feel like you are stupid. Why? Because you have made a stupid mistake. Maybe you have just missed a number or did a if check instead of if not check or so on. You have wasted the whole day for a stupid bug which you could have solved in a minute.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TVkPoz2N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j52hzt5dpewxz6m6x4ia.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TVkPoz2N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j52hzt5dpewxz6m6x4ia.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Don't worry if you feel stupid. This happens to all of us. From a begginer to a experienced FANG(Facebook Apple Netflix Google) engineer.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#so-is-there-any-way-that-we-can-be-more-efficient-on-finding-bugs-and-be-more-productive"&gt;
  &lt;/a&gt;
  So is there any way that we can be more efficient on finding bugs and be more productive?
&lt;/h3&gt;

&lt;p&gt;Short and long answer is yes. The solution is in front of you. The solution is taking break. Yes, taking break is the most efficient solution to me. How? &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7Lv5XTfJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vbe8d544pdflgtqwyh7u.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7Lv5XTfJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vbe8d544pdflgtqwyh7u.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's see.&lt;/p&gt;

&lt;p&gt;When you are coding for hours, your brain, eyes get tired.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aEt_xcnL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5xh332pq5d1ugb693bsm.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aEt_xcnL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5xh332pq5d1ugb693bsm.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Your brain produce less solutions and ideas to solve any problem. Your eyes get sleepy. And all of your code simply start to look the same. You apply a lot of approach to find and solve the problem but you don't succeed. Because your eyes didn't search efficiently and that evil bug remains hidden.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2MsrFk6x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bvswszftaehk1s2zkwqk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2MsrFk6x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bvswszftaehk1s2zkwqk.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But in the next day when you will see the code again you will easily find the bug. How? Because you just took a break to heal your body. And your brain can do its work efficiently. You can now easily now find that stupid bug in your code. And you don't have to waste your time.&lt;/p&gt;

&lt;p&gt;I use a 15 minute rule. I start coding normally. When something went wrong, I look at clock and note the time. My goal is to solve that bug in 15 minutes. If I succeed then I am happy.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QbUk3GlG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/joyv8ec7y17m1ns5v5xu.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QbUk3GlG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/joyv8ec7y17m1ns5v5xu.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If I don't succeed then I stopped coding that part of the code. I usually either work on other code or do any other thing. But I won't think about that bug anymore. After taking some break, I get back to that bug. And It gets so much easy to solve.&lt;/p&gt;

&lt;p&gt;Now it doesn't always work on first try. Sometimes it might need multiple try.&lt;br&gt;
But it works. I personally set 15 minute. And also it doesn't need to be 15 minute break. It is up to you.&lt;/p&gt;

&lt;p&gt;I think you should try this method. There is no harm in trying this method.&lt;/p&gt;

&lt;p&gt;So that's it for today. If you like this blog then give it a 💖 reaction. If you have any question, then you can connect to me on any social media as &lt;a class="mentioned-user" href="https://dev.to/thatanjan"&gt;@thatanjan&lt;/a&gt;
.&lt;br&gt;
Until then, stay safe and be happy 🙂&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#about-me"&gt;
  &lt;/a&gt;
  About me:
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#who-am-i"&gt;
  &lt;/a&gt;
  Who am I?
&lt;/h4&gt;

&lt;p&gt;My name is Anjan. I am a full stack web developer from Dhaka, Bangladesh.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#what-problems-do-i-solve"&gt;
  &lt;/a&gt;
  What problems do I solve?
&lt;/h4&gt;

&lt;p&gt;I can create complex full stack web applications like social media application, blogging, e-commerce website and many more.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#why-do-i-do-what-i-do"&gt;
  &lt;/a&gt;
  Why do I do what I do?
&lt;/h4&gt;

&lt;p&gt;I love to solve problems and develop new ideas. I also enjoy sharing my knowledge to other people who are wiling to learn. That's why I write blog posts and run a youtube channel called &lt;a href="https://www.youtube.com/channel/UCBaGowNYTUsm3IDaHbLRMYw?sub_confirmation=1"&gt;Cules Coding&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#think-we-should-work-together"&gt;
  &lt;/a&gt;
  Think we should work together?
&lt;/h4&gt;

&lt;h5&gt;
  &lt;a href="#feel-free-to-contact-me"&gt;
  &lt;/a&gt;
  Feel free to contact me
&lt;/h5&gt;

&lt;p&gt;Email: &lt;a href="mailto:anjancules@gmail.com"&gt;anjancules@gmail.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;linkedin: &lt;a href="https://linkedin.com/in/thatanjan/"&gt;@thatanjan&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;portofolio: &lt;a href="https://anjan.vercel.app/"&gt;anjan&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Github: &lt;a href="https://github.com/thatAnjan/"&gt;@thatanjan&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Instagram (personal): &lt;a href="https://instagram.com/thatAnjan/"&gt;@thatanjan&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Instagram (youtube channel): &lt;a href="https://instagram.com/cules_coding/"&gt;@thatanjan&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;twitter: &lt;a href="https://twitter.com/thatAnjan"&gt;@thatanjan&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#about-my-channel"&gt;
  &lt;/a&gt;
  About My channel:
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#why-would-you-subscribe-to-cules-coding"&gt;
  &lt;/a&gt;
  Why would you subscribe to &lt;a href="https://www.youtube.com/channel/UCBaGowNYTUsm3IDaHbLRMYw?sub_confirmation=1"&gt;Cules Coding&lt;/a&gt;?
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/channel/UCBaGowNYTUsm3IDaHbLRMYw?sub_confirmation=1"&gt; Cules Coding &lt;/a&gt; will teach you full stack development. I will teach you not only the basic concepts but also the advanced concepts that other youtube channels don't cover. I will also teach you Data Structures and Algorithms with abstraction and without Math. You will also find many tutorials about developer tools and technologies. I also explain advanced concepts and technologies with simplicity.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#so-what-are-you-waiting-for"&gt;
  &lt;/a&gt;
  So what are you waiting for?
&lt;/h4&gt;

&lt;p&gt;Subscribe to &lt;a href="https://www.youtube.com/channel/UCBaGowNYTUsm3IDaHbLRMYw?sub_confirmation=1"&gt;Cules Coding&lt;/a&gt;&lt;br&gt;
so that my friend you don't miss any of these cool stuffs.&lt;/p&gt;

</description>
      <category>programming</category>
      <category>productivity</category>
      <category>codenewbie</category>
      <category>react</category>
    </item>
    <item>
      <title>How (and Why) You Should Post on DevDojo Today</title>
      <author>Reed Barger</author>
      <pubDate>Mon, 19 Apr 2021 18:29:08 +0000</pubDate>
      <link>https://dev.to/reedbarger/how-and-why-you-should-post-on-devdojo-today-19h4</link>
      <guid>https://dev.to/reedbarger/how-and-why-you-should-post-on-devdojo-today-19h4</guid>
      <description>&lt;p&gt;Today I want to share a great new developer community that you can use to share your blog posts and knowledge that you want to make available to others. &lt;/p&gt;

&lt;p&gt;This community is called &lt;a href="https://devdojo.com"&gt;DevDojo&lt;/a&gt;. I want to share it with you because I believe it has everything blogging sites like Dev and Hashnode have, plus many more features that can accelerate your learning and reach a wider audience. &lt;/p&gt;

&lt;p&gt;In this article I'll show you why it's in your interest to start sharing your content on &lt;a href="https://devdojo.com"&gt;DevDojo&lt;/a&gt; as well as how you can move all of your previous blog posts over to it today. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;An important side note is that I am not affiliated with DevDojo. I am not getting paid for this post. As someone who's only very recently become part of their community and has enjoyed everything they offer (free), I believe it is a resource that all developers who are sharing their content online should be aware of.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#what-does-devdojo-have-to-offer"&gt;
  &lt;/a&gt;
  What Does DevDojo Have To Offer?
&lt;/h2&gt;

&lt;p&gt;The first question is--why would you want to join DevDojo? &lt;/p&gt;

&lt;p&gt;What does it offer as compared to places like Medium, Dev, or Hashnode? &lt;/p&gt;

&lt;p&gt;What's special about DevDojo is that it is &lt;em&gt;both&lt;/em&gt; a blogging community to share your developer knowledge with others and so much more.&lt;/p&gt;

&lt;p&gt;What's the blogging experience like? Very similar to Dev or Hashnode, you can post your any blog post you like, written in the Markdown syntax. If you're comfortable posting on any of these platforms, you'll be right at home on DevDojo.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#very-clean-markdown-editor"&gt;
  &lt;/a&gt;
  Very Clean Markdown Editor
&lt;/h2&gt;

&lt;p&gt;It's an incredibly easy-to-use editor that, in my opinion, looks very close to the Ghost editor: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2zirFYO6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f18qk5el8kq4glvtdxl3.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2zirFYO6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f18qk5el8kq4glvtdxl3.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#autogenerated-thumbnails-for-your-posts"&gt;
  &lt;/a&gt;
  Auto-Generated Thumbnails for your Posts
&lt;/h2&gt;

&lt;p&gt;What makes DevDojo every better than every other platform in terms of its editor is that it allows you to auto-generate and customize your own thumbnails. You can create your own totally custom thumbnails in seconds, directly within the editor. In fact, the cover for this post was auto-generated. How cool is that?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XSTzphE6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t9xisuilp7afjuwbqwc4.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XSTzphE6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t9xisuilp7afjuwbqwc4.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#exposure-to-a-larger-audience"&gt;
  &lt;/a&gt;
  Exposure to a Larger Audience
&lt;/h2&gt;

&lt;p&gt;Just like on any major platform, if users like your content, they can follow you to have your posts added to their feed. &lt;/p&gt;

&lt;p&gt;On top of that, any blog post that you make can be featured on the DevDojo homepage and reach a much wider audience. &lt;/p&gt;

&lt;p&gt;I was fortunate enough to have one of my posts featured on the homepage last week and was selected as one of their top 5 articles. I received a lot of exposure after being chosen--over 1700 views. As of today, it's received over 2000: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MkSFuHOA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/imeo384y15us7oi0swci.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MkSFuHOA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/imeo384y15us7oi0swci.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Plus, on top of gaining a larger readership, if your post is selected as one of the top five posts for each week, you also get $20. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#training-videos-and-courses-that-can-earn-you-money"&gt;
  &lt;/a&gt;
  Training Videos and Courses (That Can Earn You Money)
&lt;/h2&gt;

&lt;p&gt;While DevDojo is a great blogging platform, there's so much more to it than that. &lt;/p&gt;

&lt;p&gt;You can also very easily create video posts and courses. What's so great about this option is that when people watch your videos, you can earn money from all the users that have signed up to the pro tier on DevDojo. If you sign up for the pro tier, you can also watch any videos and courses that are featured on DevDojo: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xh_KDO48--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pywbw1jf6vi01vknmm99.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xh_KDO48--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pywbw1jf6vi01vknmm99.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So yes, in addition to being able to share and read others' blog posts, you can post videos and even entire courses from which you can earn money. &lt;/p&gt;

&lt;p&gt;As you can see, it goes much further than these other blogging platforms in terms of the resources you're able to use to learn and the tools you can leverage to earn money on the side.&lt;/p&gt;

&lt;p&gt;Additionally, there's a neat tool that allows you to create and manage helpful code snippets you want to keep from articles you've read. If there's a bit of code that you want to hold on to, you can save it in your code snippets area. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-do-i-move-my-blog-posts-to-devdojo"&gt;
  &lt;/a&gt;
  How Do I Move My Blog Posts to DevDojo?
&lt;/h2&gt;

&lt;p&gt;If you don't have any blog posts on other platforms, you create an account and start blogging right away on DevDojo.&lt;/p&gt;

&lt;p&gt;But what if you have a backlog of posts that you've made on sites like Hashnode or Dev? &lt;/p&gt;

&lt;p&gt;There's a very cool feature that allows you to import all of those posts very easily and have them published on your DevDojo account within 1-2 minutes. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Right now, you can only instantly migrate posts from Hashnode, but I believe there will be a way to do so with platforms like Dev and Ghost.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#import-your-hashnode-posts-in-devdojo"&gt;
  &lt;/a&gt;
  Import your Hashnode posts in DevDojo
&lt;/h2&gt;

&lt;p&gt;Once you are signed into your Hashnode account, head to your blog dashboard and select the Export option: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Sj1U30YF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qg6fduf9gmie147lxiou.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Sj1U30YF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qg6fduf9gmie147lxiou.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;From there, you will hit "Start Download", after which you will be given a JSON file that includes data for all of your Hashnode posts. Save this anywhere you like on your computer.&lt;/p&gt;

&lt;p&gt;Next, head to your DevDojo account. Go to "Settings" and then "Import". &lt;/p&gt;

&lt;p&gt;And all you need to do is select that JSON file and hit the Import button: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--anV_u_Se--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nvw8fq9o9d1uaakoq1ow.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--anV_u_Se--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nvw8fq9o9d1uaakoq1ow.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's it! &lt;/p&gt;

&lt;p&gt;You've published all of your Hashnode posts to DevDojo with just one click. 🎉&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;I hope you enjoyed this post and are interested in checking out DevDojo as a way to expand your learning as well your reach as a developer and educator. &lt;/p&gt;

&lt;p&gt;I want to be clear that I am not advocating for you or anyone to move away from platforms that they like. My aim is to give some exposure to another helpful site that can help you reach your goals, not to the exclusion of any other.&lt;/p&gt;

&lt;p&gt;Check it out at &lt;a href="https://devdojo.com"&gt;DevDojo.com&lt;/a&gt; and let me know what you think!&lt;/p&gt;

&lt;p&gt;Also, feel free to &lt;a href="https://devdojo.com/reedbarger"&gt;follow me&lt;/a&gt; over at DevDojo if you like.&lt;/p&gt;

</description>
      <category>tutorial</category>
      <category>devdojo</category>
      <category>blogging</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Top 7 Salary Negotiation Tips for Software Developers</title>
      <author>Ryan Thelin</author>
      <pubDate>Mon, 19 Apr 2021 18:21:33 +0000</pubDate>
      <link>https://dev.to/educative/top-7-salary-negotiation-tips-for-software-developers-g4o</link>
      <guid>https://dev.to/educative/top-7-salary-negotiation-tips-for-software-developers-g4o</guid>
      <description>&lt;p&gt;Tech jobs are notorious for their high &lt;strong&gt;pay variance&lt;/strong&gt;. Even developers of equal experience may have salaries that differ by tens of thousands of dollars. While this is sometimes due to company size or type, it's more often a result of skillful compensation negotiations. &lt;/p&gt;

&lt;p&gt;These negotiations are especially difficult for developers as most computer science education tracks do not teach how to plan and execute pay negotiations. Whether you're just &lt;a href="https://www.educative.io/blog/7-hard-truths-about-starting-a-career-as-a-developer"&gt;starting out as a developer&lt;/a&gt; or have years of experience, salary negotiation skills are a key part of earning your fair share.&lt;/p&gt;

&lt;p&gt;Today, we'll give you some essential tips to ensure you don't walk in unprepared.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Here’s what we’ll cover today:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#tip1"&gt;Tip 1: Be strategic with timing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tip2"&gt;Tip 2: Consider other benefits on the table&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tip3"&gt;Tip 3: Never say what salary you want&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tip4"&gt;Tip 4: Decide the lowest number you'll accept&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tip5"&gt;Tip 5: Focus on the company's wants, not yours&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tip6"&gt;Tip 6: Prepare a one sheet that tells your story&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tip7"&gt;Tip 7: Practice your negotiation beforehand&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;



&lt;h4&gt;&lt;b&gt; Get the salary you deserve &lt;/b&gt;&lt;/h4&gt;
 

&lt;p&gt;Learn negotiation techniques and tips that will ensure you never leave money on the table again.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;&lt;a href="https://www.educative.io/collection/5186009994625024/4957266294341632"&gt;Maximizing Total Comp in Tech&lt;/a&gt;&lt;br&gt;
&lt;/b&gt;&lt;/p&gt;



&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tip-1-be-strategic-with-timing"&gt;
  &lt;/a&gt;
  Tip 1: Be strategic with timing
&lt;/h2&gt;

&lt;p&gt;You have the most leverage as a candidate when you have multiple offers on the table. From here, you can push for employers to match other offers or compare the benefits of each offer. However, many candidates receive &lt;strong&gt;staggered offers&lt;/strong&gt; that make it more difficult to negotiate. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You can increase the chance that your offers line up well by carefully planning the timing of each interview step. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For example, imagine you're invited to a second interview at &lt;a href="https://www.educative.io/blog/google-coding-interview"&gt;Google&lt;/a&gt; before you've had your first interview at &lt;a href="https://www.educative.io/blog/crack-amazon-coding-interview-questions"&gt;Amazon&lt;/a&gt;. You should take the latest possible interview slot for your next Google interview to slow that process down.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Timing is equally important&lt;/strong&gt; for pursuing a pay raise. Many people wait to ask for a raise during review season, but most managers will have already decided who has earned a raise by that point. &lt;/p&gt;

&lt;p&gt;Asking earlier is a win-win for you because it either results in an immediate pay increase or puts you at the forefront of their mind when considering raises during the upcoming review period.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Avoid Ultimatums&lt;/strong&gt;: Nobody likes to be told "or else". It's better to state that you're considering multiple options and ask how the company could make their role more appealing to you when bringing up other offers. &lt;/p&gt;

&lt;p&gt;This avoids the standoffish attitude of a "match this or else" statement.&lt;/p&gt;
&lt;/blockquote&gt;



&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tip-2-consider-other-benefits-on-the-table"&gt;
  &lt;/a&gt;
  Tip 2: Consider other benefits on the table
&lt;/h2&gt;

&lt;p&gt;When evaluating an offer or negotiating a raise, remember that there are &lt;strong&gt;many benefits beyond salary&lt;/strong&gt;. These can be non-salary financial rewards like stock options, yearly bonuses, or sign-on bonuses. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;They can also be things that benefit your quality of life or help future job prospects like titles or leadership roles.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You should review each of these benefits to decide how valuable each is for you. For example, work-from-home opportunities may be essential for some while delivering no value to someone else who prefers to work at the office.&lt;/p&gt;

&lt;p&gt;For job offers, weighing these non-salary benefits helps you evaluate how valuable an offer is to you as a whole, rather than just looking at the salary number alone.&lt;/p&gt;

&lt;p&gt;For raises, remember which benefits sound appealing to you and try to negotiate for them. Companies are often more willing to provide these benefits than direct salary improvements. Keeping these as options to put forward increases the chance you'll leave the table with an improvement.&lt;/p&gt;



&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tip-3-never-say-what-salary-you-want"&gt;
  &lt;/a&gt;
  Tip 3: Never say what salary you want
&lt;/h2&gt;

&lt;p&gt;Even if you have a good idea of what your skills are worth, it's best not to list a specific number when discussing salary. &lt;/p&gt;

&lt;p&gt;Listing an explicit number essentially sets a ceiling for the maximum amount you could earn. Your listed amount could be less than the company was willing to pay, meaning you've accidentally lowered your pay. Even if your suggestion is spot on, the company will only negotiate down from there. &lt;/p&gt;

&lt;p&gt;Instead, ask what their budget is for this role. The company will often lowball this budget, which gives you a salary floor that you can negotiate up from. Asking for their budget also opens up the possibility to get benefits outside of salary to sweeten the deal while still respecting their budget.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Current compensation&lt;/strong&gt;: If you're negotiating for a new job, sometimes you'll be asked what you're currently making at your other job. Avoid answering this question because it may allow the company to provide you a lower offer than they otherwise would.&lt;/p&gt;

&lt;p&gt;Instead, say something like "I'm not comfortable sharing my current salary. I'd prefer we focus on the value I can bring to this company."&lt;/p&gt;
&lt;/blockquote&gt;


&lt;h4&gt;
  &lt;a href="#keep-the-learning-going" class="anchor"&gt;
  &lt;/a&gt;
  Keep the learning going.
&lt;/h4&gt;

&lt;p&gt;Learn top negotiating techniques to help you get the most out of any job. Educative's text-based courses allow you to learn at your own pace and learn practical tips from industry veterans.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;&lt;a href="https://www.educative.io/collection/5186009994625024/4957266294341632"&gt;Maximizing Total Comp in Tech&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;



&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tip-4-decide-the-lowest-number-youll-accept"&gt;
  &lt;/a&gt;
  Tip 4: Decide the lowest number you'll accept
&lt;/h2&gt;

&lt;p&gt;Before you enter the salary negotiation, decide what your lowest acceptable salary is. An easy way to find this number is to sum your total yearly expenses like rent, car payments, groceries, loans, etc. &lt;/p&gt;

&lt;p&gt;You'll want to be accumulating wealth over time, so multiply this number by 1.5 (keep one-third of your income) or 2 (keep half your income). This amount will be the lowest salary you can accept and still progress financially.&lt;/p&gt;

&lt;p&gt;You should also consider your next best alternative before going to negotiations. The stronger your backup plan is, the stronger your position and the more ambitious you can be with your lowest salary. &lt;/p&gt;

&lt;p&gt;If a company offers you a number that is &lt;strong&gt;lower than your minimum,&lt;/strong&gt; don’t outright tell them the number you want them to reach. &lt;/p&gt;

&lt;p&gt;Instead, pause, and say &lt;em&gt;“that is not quite what I was expecting. I’d be willing to accept [stretchGoal]. How can we get closer to that number?”&lt;/em&gt; &lt;/p&gt;

&lt;p&gt;If you've already asked for more and they're sticking to their original figure, it might be time to walk away. Let them know that you'll need some time to think about it, and they may find a way to raise it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Never give a yes or no answer during the meeting.&lt;/strong&gt; &lt;br&gt;
Wait until the last few days to respond with your answer. The period between will lean a bit of pressure on the interviewer and they may reach out with additional benefits. &lt;/p&gt;

&lt;p&gt;If not, refuse the offer. It's important to know the value of your work and when to avoid jobs that won't improve your financial situation.&lt;/p&gt;



&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tip-5-focus-on-the-companys-wants-not-yours"&gt;
  &lt;/a&gt;
  Tip 5: Focus on the company's wants, not yours
&lt;/h2&gt;

&lt;p&gt;Making an argument for a raised salary ultimately comes down to what you can do for the company. This argument is immediately undermined if you state that you &lt;strong&gt;want or deserve&lt;/strong&gt; higher pay. &lt;/p&gt;

&lt;p&gt;Bringing up your wants moves the conversation away from a logical argument to an empathetic request for the company to meet your desires. You are essentially asking the company to bargain with how they see your desires and worth. The compelling case you've made up to that point will be damaged as a result. &lt;/p&gt;

&lt;p&gt;Instead, focus on the company's needs and how you fulfill them. Keep the conversation centered on the value you provide and how the company can fairly compensate you for that.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Prepare for future negotiations&lt;/strong&gt;: Even if you're rejected for a raise, keep focusing on the company's wants. Ask "what do you need to see in the next 6 months to feel comfortable approving a raise?" &lt;/p&gt;

&lt;p&gt;The burden is then on you to prove your worth rather than on your manager to decide now, giving you a list of milestones you can use as evidence on your next negotiation.&lt;/p&gt;
&lt;/blockquote&gt;



&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tip-6-prepare-a-onesheet-that-tells-your-story"&gt;
  &lt;/a&gt;
  Tip 6: Prepare a one-sheet that tells your story
&lt;/h2&gt;

&lt;p&gt;Success in negotiation begins well before you sit down across from the representative. Your case for your salary needs to be on-topic and full of empirical metrics that prove your worth.&lt;/p&gt;

&lt;p&gt;To make sure you don't lose track of any talking points, write a &lt;strong&gt;one-page brag sheet&lt;/strong&gt; that outlines the measurable value you've provided in the past. This sheet should include any awards, accomplishments, or co-worker testimonials you've received. Writing these down will help you hit each point and demonstrate your value to the company as a worker.&lt;/p&gt;

&lt;p&gt;You should also collect market research for your chosen job, like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;National average salary for this role&lt;/li&gt;
&lt;li&gt;Average salary for this role in your area/city&lt;/li&gt;
&lt;li&gt;Salary data for roles in companies of similar size&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Use Metrics&lt;/strong&gt;: Whenever possible, use explicit metrics over summaries. For example, "My project increased user signup by 15%" is more compelling than "I helped increase user signup". &lt;/p&gt;
&lt;/blockquote&gt;



&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tip-7-practice-your-negotiation-beforehand"&gt;
  &lt;/a&gt;
  Tip 7: Practice your negotiation beforehand
&lt;/h2&gt;

&lt;p&gt;You also need to practice your negotiation aloud and review common rebuttals. The best way to do this is to get expert advice and do mock negotiations with a friend.&lt;/p&gt;

&lt;p&gt;This is especially important because many of us are conditioned to not talk about money. Practicing with a trusted friend or coworker helps you develop a natural flow to walk through the key points you want to hit and break down the common anxiety around financial discussions.&lt;/p&gt;

&lt;p&gt;Give them a list of tough questions to ask you like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Is this company your top choice?&lt;/li&gt;
&lt;li&gt;Have you received offers from other companies? What were they?&lt;/li&gt;
&lt;li&gt;If we meet your salary expectations, will you accept immediately?&lt;/li&gt;
&lt;li&gt;How did you choose your chosen salary amount?&lt;/li&gt;
&lt;li&gt;Is anyone else offering you a higher salary?&lt;/li&gt;
&lt;li&gt;Why don’t you want to give your salary requirements?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After you're done, ask your friend for feedback. Negotiating is a difficult skill to learn but practice will help you get better each time.&lt;/p&gt;

&lt;p&gt;To ensure you don't leave any money on the table, Educative has created the course &lt;a href="https://www.educative.io/collection/5186009994625024/4957266294341632"&gt;&lt;strong&gt;Maximizing Total Comp in Tech&lt;/strong&gt;&lt;/a&gt;. This course helps you prepare for salary or raise negotiations by exploring tips for every part of the process like pre-negotiation emails, words to avoid during the negotiation, and how to follow up. &lt;/p&gt;

&lt;p&gt;By the end of this course, you'll discover your power as a negotiator and be able to walk into your next negotiation with confidence.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Happy learning!&lt;/em&gt;&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#keep-reading-about-career-advice"&gt;
  &lt;/a&gt;
  Keep reading about career advice
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.educative.io/blog/how-to-become-product-manager"&gt;How to become a Product Manager: top three PM career paths&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.educative.io/blog/land-tech-job-advice"&gt;Land a job in tech: career advice for recent college graduates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.educative.io/blog/how-to-negotiate-salary-software-developer"&gt;How to negotiate your salary as a software developer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>career</category>
      <category>startup</category>
      <category>motivation</category>
      <category>resume</category>
    </item>
    <item>
      <title>SOLID - The Letter D - Dependency Inversion Principle</title>
      <author>Vitor Alves</author>
      <pubDate>Mon, 19 Apr 2021 18:07:16 +0000</pubDate>
      <link>https://dev.to/vitoraa/d-of-solid-dependency-inversion-principle-mcm</link>
      <guid>https://dev.to/vitoraa/d-of-solid-dependency-inversion-principle-mcm</guid>
      <description>&lt;p&gt;The last SOLID principle is the Dependency Inversion Principle (DIP). This principle tell us that the most flexible systems use abstract dependencies instead of concrete ones. The way you achieve this is using interfaces.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-is-interface"&gt;
  &lt;/a&gt;
  What is interface?
&lt;/h1&gt;

&lt;p&gt;Talking about software development, interface is a abstract type that contains no data but defines behaviours as method signatures.&lt;br&gt;
For example, imagine we want to insert an account in our database:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;AddAccountRepository&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;add&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;Account&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can see that the interface AddAccountRepository doesn't have an implementation, there is only a signature of the Add method. But you must be wondering: how could I use this method if there is no code?&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#how-to-implement-an-interface"&gt;
  &lt;/a&gt;
  How to implement an interface?
&lt;/h1&gt;

&lt;p&gt;Imagine we would like to write the code of Add method. We have to create a new class to implement this interface.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;AccountMongoRepository&lt;/span&gt; &lt;span class="k"&gt;implements&lt;/span&gt; &lt;span class="nx"&gt;AddAccountRepository&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If we write only this lines of code our IDE (Visual Studio, Eclipse, etc) will say that we must create a method called "Add". It means that when we use the word "implements" and after an interface, we have to describe and implement all the signatures of this interface. So, our code would  look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;AccountMongoRepository&lt;/span&gt; &lt;span class="k"&gt;implements&lt;/span&gt; &lt;span class="nx"&gt;AddAccountRepository&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;add&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nx"&gt;Account&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// insert an user into a MongoDb&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If we had another interface called DeleteAccountRepository.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;DeleteAccountRepository&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We just have to add the interface on the "implements" part and write the delete method implementation.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;AccountMongoRepository&lt;/span&gt; &lt;span class="k"&gt;implements&lt;/span&gt; &lt;span class="nx"&gt;AddAccountRepository&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;DeleteAccountRepository&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;add&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nx"&gt;Account&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// insert an user into a MongoDb&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;delete&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// delete an user&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we have an interface and a class that implements the methods of these interfaces. Now, how can we use this interface?&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#how-to-use-an-the-implementation-of-an-interface"&gt;
  &lt;/a&gt;
  How to use an the implementation of an interface?
&lt;/h1&gt;

&lt;p&gt;We have to inject this dependency in our class to use their implementations methods. If you want to know more about dependency injection, &lt;a href="https://dev.to/vitoraa/why-you-should-use-dependency-injection-31h9"&gt;click here&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;DbAddAccount&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="nx"&gt;addAccountRepository&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;AddAccountRepository&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;addUser&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nx"&gt;Account&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;accountCreated&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addAccountRepository&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;accountCreated&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the code above we see the injection of the interface AddAccountRepository. The class DbAddAccount doesn't know about the implementation about the method Add. This is important because we don't have to be aware of changes in dependencies classes.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#why-is-the-name-dependency-inversion"&gt;
  &lt;/a&gt;
  Why is the name Dependency Inversion?
&lt;/h1&gt;

&lt;p&gt;In one cenario, if we use a concrete class to insert a user into a database, the DbAddAccount class would be dependent of this class.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aP4r7-__--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yqode0q3nlf3nk0whg70.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aP4r7-__--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yqode0q3nlf3nk0whg70.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If we have to change our database to Postgres, for example, our class would be affected. Using the injection dependency we invert the dependency as we see in the image below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0mTY4sJ1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ehak8arnx19xrw28h7c3.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0mTY4sJ1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ehak8arnx19xrw28h7c3.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now DbAddAccount use AccountMongoRepository through the interface AddAccountRepository. The DbAddAccount doesn't depend on AccountMongoRepository, but on the contrary. To be used, the AccountMongoRepository depedens on DbAddAccount.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;Dependency Inversion Principle and Dependency Injection work together. We have to use one to get the other. Although can be more difficult to understand and to code, if you use both in your code the reusability will increase, your code will be more clean and more easier for changes.  &lt;/p&gt;

</description>
      <category>solid</category>
      <category>architecture</category>
      <category>dependencyinversion</category>
      <category>principle</category>
    </item>
    <item>
      <title>10 Things I've Learned After 3 Months as a Junior Software Engineer</title>
      <author>Alex Morton</author>
      <pubDate>Mon, 19 Apr 2021 18:01:23 +0000</pubDate>
      <link>https://dev.to/alexlsalt/10-things-i-ve-learned-after-3-months-as-a-junior-software-engineer-2m89</link>
      <guid>https://dev.to/alexlsalt/10-things-i-ve-learned-after-3-months-as-a-junior-software-engineer-2m89</guid>
      <description>&lt;p&gt;It's been about 3.5 months since I landed my first job as a software engineer with an awesome startup called Orbit and I've definitely learned a thing or two in this short time.&lt;/p&gt;

&lt;p&gt;In fact, I started out wanting to jot down three simple things for this blog post, but as soon as I started, I just couldn't stop! &lt;/p&gt;

&lt;p&gt;So, my friend, here are three (plus seven more) things I've learned after three months as a junior software engineer.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-developers-are-literally-always-learning"&gt;
  &lt;/a&gt;
  1. Developers are literally always learning.
&lt;/h2&gt;

&lt;p&gt;That's the job. Learning and solving problems, every single day. No matter what level you're at, there's always going to be a new and more complex problem to solve. &lt;/p&gt;

&lt;p&gt;I recently took on a task where I had to find a solution to something and I'd ask my teammates for help, almost expecting a "here's how you do it," step by step kinda thing, but it was so interesting to experience putting our heads together to &lt;em&gt;both&lt;/em&gt; work to figure it out. It's all thinking and solving a problem. And repeat day after day!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-dont-let-your-insecurities-get-the-best-of-you"&gt;
  &lt;/a&gt;
  2. Don't let your insecurities get the best of you.
&lt;/h2&gt;

&lt;p&gt;I had a week or so recently when I was really anxious for some unknown reason. I could tell that I wasn't on the right path with my thinking, and I even had these irrational fears of being fired. Seriously, for no rational reason.&lt;/p&gt;

&lt;p&gt;I was doing good work, learning actionable things, and completing my tasks - but for some reason, my brain was having this bizarre negative field day (or week). &lt;/p&gt;

&lt;p&gt;Looking back, the only way out was getting ahold of myself and my thoughts. Anytime I'd start to feel myself spiral, I'd reframe my mind to something concrete like "I'm capable of focusing on one thing at a time to get my work done and do my best today." &lt;/p&gt;

&lt;p&gt;Doing this often sets me on a good path and allows me to focus on one actionable thing at a time without going into this unpleasant and irrational work doom spiral.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-embrace-the-honeymoon-period-but-also-embrace-the-normal-daytoday"&gt;
  &lt;/a&gt;
  3. Embrace the honeymoon period, but also embrace the normal day-to-day.
&lt;/h2&gt;

&lt;p&gt;I think with any new job or opportunity, there's always the rose-colored period for the first three months where everything feels amazing and perfect and nothing can get you down. &lt;/p&gt;

&lt;p&gt;I love my job, but now I have a more level-headed view of everything. &lt;/p&gt;

&lt;p&gt;That's not to say you shouldn't be over-the-moon when you first start something! Embrace the honeymoon period but then also remember that it's okay to get out of the honeymoon and feel a little more settled and accepting of the good days that come with the "meh" days - as with absolutely anything in life!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-progress-is-progress-even-when-it-doesnt-feel-like-it"&gt;
  &lt;/a&gt;
  4. Progress is progress - even when it doesn't feel like it.
&lt;/h2&gt;

&lt;p&gt;As soon as we get more into the routine of a new job, we become less aware of just how much we're learning. To keep myself motivated and proud of myself for what I'm learning, I try to keep track of my learning by documenting new processes so that I can can refer back to them later or just feel proud when they start feeling more natural and second-nature to me.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-the-only-way-out-is-through"&gt;
  &lt;/a&gt;
  5. "The only way out is through."
&lt;/h2&gt;

&lt;p&gt;I saw this advice in  a Twitter thread a couple months ago when I was having a hard time not understanding a difficult topic and getting down on myself about it.&lt;/p&gt;

&lt;p&gt;Learning and growth are great (so great!) but actively going through those growing pains is uncomfortable as hell.&lt;/p&gt;

&lt;p&gt;The only way to improve and get to the other side is to stay the course and trust the process.&lt;/p&gt;

&lt;p&gt;In any given moment of learning or growth, it may feel like it'll always be this hard, but it's only a matter of time before you're through it and a better developer than before.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-every-hard-issue-that-takes-you-hours-is-just-time-invested-to-get-you-through-it-in-a-fraction-of-the-time-in-the-future"&gt;
  &lt;/a&gt;
  6. Every hard issue that takes you hours is just time invested to get you through it in a fraction of the time in the future.
&lt;/h2&gt;

&lt;p&gt;(I'm looking at you, local environment troubles and convoluted errors yet unbeknownst to StackOverflow!)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-try-not-to-ask-the-same-question-twice"&gt;
  &lt;/a&gt;
  7. Try not to ask the same question twice.
&lt;/h2&gt;

&lt;p&gt;This goes back to documenting any process that feels confusing or difficult. Especially if a teammate helps you through something - take the time after the discussion to write it down and truly absorb and understand it. &lt;/p&gt;

&lt;p&gt;I personally  don't enjoy explaining something over and over  again, so I try to never be the cause of a teammate feeling the need to do so for me.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-whenever-youre-learning-a-new-thing-pay-special-attention"&gt;
  &lt;/a&gt;
  8. Whenever you're learning a new thing - pay special attention.
&lt;/h2&gt;

&lt;p&gt;I'm thinking specifically of recently learning about Rails decorators and services - subjects I had no clue about before (though I'd seen them around the codebase every now and then). &lt;/p&gt;

&lt;p&gt;When I had a task where I had to use and code with them, it was the ideal moment to learn what their purposes were and how I could use them in the future.&lt;/p&gt;

&lt;p&gt;Reading documentation, blog posts, and using other learning resources helps to get a broad overview of the big picture so that you're able to understand unfamiliar topics, little by little.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#9-always-understand-and-consider-suggestions-from-your-teammates-in-code-reviews"&gt;
  &lt;/a&gt;
  9. Always understand and consider suggestions from your teammates in code reviews.
&lt;/h2&gt;

&lt;p&gt;Recently I'd worked for a long time on a certain issue and I wanted nothing more than to push it over the finish line.&lt;/p&gt;

&lt;p&gt;One of my teammates had some suggestions on ways to refactor the code and I literally almost did a "thanks, but no thanks" and pretended to understand it when I didn't. &lt;/p&gt;

&lt;p&gt;Thankfully, I gave myself an order to fully understand the suggestions before making my next move. To do this, I wrote in my notebook exactly what my teammate was suggesting (this helps me fully conceptualize something that's not yet clear to me).&lt;/p&gt;

&lt;p&gt;Surprise, surprise -- it was &lt;em&gt;really&lt;/em&gt; helpful advice for cleaner code and a more organized architectural solution.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#10-truly-understand-the-scope-of-your-problem-before-diving-in-to-a-solution-or-asking-for-help"&gt;
  &lt;/a&gt;
  10. Truly understand the scope of your problem before diving in to a solution or asking for help.
&lt;/h2&gt;

&lt;p&gt;I've found that if I'm confused about how to frame a question I want to ask a teammate, chances are pretty good that I haven't done my true best to figure out the problem itself.&lt;/p&gt;

&lt;p&gt;By making a serious effort to understand the question or problem you're trying to solve, I think it gives you such a good leg-up for ultimately finding the solution.&lt;/p&gt;

&lt;p&gt;Plus! It's a great feeling when you eventually do ask a teammate for help as you discover that your instincts were actually pretty close to the answer you're given!&lt;/p&gt;




&lt;p&gt;There you have 'em! Ten things I've learned after three months as a junior software engineer. &lt;/p&gt;

&lt;p&gt;Thanks so much for reading! I wanna know what resonated most with you! Feel free to leave a comment below and let me know what you think!&lt;/p&gt;




&lt;p&gt;&lt;em&gt;P.S. I send weekly newsletters about the self-taught coding journey and inspiration for other early-career developers! &lt;a href="https://ladies-code-collective.ck.page/e53b5fca44"&gt;Let's be friends! &amp;gt;&amp;gt;&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

</description>
      <category>codenewbie</category>
      <category>firstyearincode</category>
      <category>career</category>
      <category>womenintech</category>
    </item>
    <item>
      <title>Laravel Best Practice [Coding Standards Part 02] 🧑‍🦰👩‍🦰</title>
      <author>Lathindu Pramuditha</author>
      <pubDate>Mon, 19 Apr 2021 17:52:37 +0000</pubDate>
      <link>https://dev.to/lathindu1/laravel-best-practice-coding-standards-part-02-a40</link>
      <guid>https://dev.to/lathindu1/laravel-best-practice-coding-standards-part-02-a40</guid>
      <description>&lt;p&gt;Hello friends, This is the &lt;strong&gt;second&lt;/strong&gt; article of &lt;strong&gt;Laravel coding standards&lt;/strong&gt; article series. &lt;/p&gt;

&lt;p&gt;If you didn't see the first article, I recommend to read it for best practice.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#laravel-best-practice-article-01-gt-click-here-to-open-article"&gt;
  &lt;/a&gt;
  Laravel Best Practice Article 01 =&amp;gt; &lt;a href="https://dev.to/lathindu1/laravel-best-practice-coding-standards-part-01-304l"&gt;Click Here To Open Article&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Mj3oLC6P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uhvobpcrgn8m83cpio5a.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Mj3oLC6P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uhvobpcrgn8m83cpio5a.gif" alt="arraow"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#article-02-principles-should-adhere"&gt;
  &lt;/a&gt;
  Article 02: Principles should adhere.✊
&lt;/h1&gt;

&lt;p&gt;Here I will talk about &lt;strong&gt;some principles&lt;/strong&gt; which are developer &lt;strong&gt;should follow&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---96r8Zqd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/su6t2d5vzd2f6luhbipf.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---96r8Zqd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/su6t2d5vzd2f6luhbipf.jpg" alt="pK-gMzy3meGp1rdP21xe1TUB9Dde408OFq4S"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#01-dont-use-validations-inside-controller"&gt;
  &lt;/a&gt;
  01 Don't Use Validations Inside Controller 👈
&lt;/h2&gt;

&lt;p&gt;When I review my junior developer's code, I have seen there are bunch of validators in the controller. Some time they just google the issue and copy things from Stackowerflow  or some where and put in the code without investigating about it. so that's the main problem which I seen with them.&lt;/p&gt;

&lt;p&gt;Here You may see some &lt;strong&gt;Bad&lt;/strong&gt; code which are used &lt;strong&gt;validator&lt;/strong&gt; in controller.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;store&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;Request&lt;/span&gt; &lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
         &lt;span class="nc"&gt;Validator&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;make&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="s1"&gt;'first_name'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'required'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'string'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'max:255'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
            &lt;span class="s1"&gt;'last_name'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'required'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'string'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'max:255'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
            &lt;span class="s1"&gt;'email'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'required'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'string'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'email'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'max:255'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'unique:users'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
            &lt;span class="s1"&gt;'password'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'required'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'string'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Password&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'confirmed'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;validate&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nc"&gt;User&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;store&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;all&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;so this is not a correct way to put validator.&lt;br&gt;
we should use Customer Request to handle Validators.&lt;/p&gt;
&lt;h6&gt;
  &lt;a href="#01-create-custom-request"&gt;
  &lt;/a&gt;
  01 Create Custom Request. 👈
&lt;/h6&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;php artisan make:request UserCreateRequest
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;above as a request name. you may use actual scenario . ex-: if you want to handle user update form request. You may create Request as &lt;strong&gt;UserUpdateRequest&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Once Created Request from the command. you can see &lt;strong&gt;UserCreateRequest&lt;/strong&gt; inside your &lt;strong&gt;project root -&amp;gt; app -&amp;gt; Http -&amp;gt; Requests&lt;/strong&gt; .&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class="kn"&gt;namespace&lt;/span&gt; &lt;span class="nn"&gt;App\Http\Requests&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Illuminate\Foundation\Http\FormRequest&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;UserCreateRequest&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;FormRequest&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="cd"&gt;/**
     * Determine if the user is authorized to make this request.
     *
     * @return bool
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;authorize&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cd"&gt;/**
     * Get the validation rules that apply to the request.
     *
     * @return array
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;rules&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="c1"&gt;//&lt;/span&gt;
        &lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;In the class you may see two prebuilt functions called &lt;br&gt;
&lt;strong&gt;authorize()&lt;/strong&gt; and &lt;strong&gt;rules()&lt;/strong&gt; .&lt;/p&gt;
&lt;h6&gt;
  &lt;a href="#02-allow-csrf"&gt;
  &lt;/a&gt;
  02 Allow CSRF 👈
&lt;/h6&gt;

&lt;p&gt;in &lt;strong&gt;authorize()&lt;/strong&gt; function you need to change return as &lt;strong&gt;true&lt;/strong&gt; .&lt;/p&gt;

&lt;p&gt;otherwise your request will not work.&lt;/p&gt;
&lt;h6&gt;
  &lt;a href="#03-add-validation-rules"&gt;
  &lt;/a&gt;
  03 Add Validation Rules. 👈
&lt;/h6&gt;

&lt;p&gt;You can add validation methods inside &lt;strong&gt;rules()&lt;/strong&gt; function.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt; &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;rules&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="s1"&gt;'first_name'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'required'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'string'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'max:255'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
            &lt;span class="s1"&gt;'last_name'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'required'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'string'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'max:255'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
            &lt;span class="s1"&gt;'email'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'required'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'string'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'email'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'max:255'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'unique:users'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
            &lt;span class="s1"&gt;'password'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'required'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'string'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Password&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'confirmed'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h6&gt;
  &lt;a href="#04-add-custom-validation-messages"&gt;
  &lt;/a&gt;
  04 Add Custom Validation Messages. 👈
&lt;/h6&gt;

&lt;p&gt;Then you can add custom validation messages for every input, every validation methods. here you need to override &lt;strong&gt;message()&lt;/strong&gt; function  from formRequest Trait.&lt;/p&gt;

&lt;p&gt;and add messages by mentioning inputs and rules separating by dots.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="s2"&gt;"first_name.required"&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;"User first name is required"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s2"&gt;"first_name.string"&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;"User first name type must be a string"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s2"&gt;"email.unique"&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;"This email is already used."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Finally &lt;strong&gt;UserCreateRequest&lt;/strong&gt; may be like this.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class="kn"&gt;namespace&lt;/span&gt; &lt;span class="nn"&gt;App\Http\Requests&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Illuminate\Foundation\Http\FormRequest&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;UserCreateRequest&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;FormRequest&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="cd"&gt;/**
     * Determine if the user is authorized to make this request.
     *
     * @return bool
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;authorize&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cd"&gt;/**
     * Get the validation rules that apply to the request.
     *
     * @return array
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;rules&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="s1"&gt;'first_name'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'required'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'string'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'max:255'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
            &lt;span class="s1"&gt;'last_name'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'required'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'string'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'max:255'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
            &lt;span class="s1"&gt;'email'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'required'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'string'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'email'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'max:255'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'unique:users'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
            &lt;span class="s1"&gt;'password'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'required'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'string'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Password&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'confirmed'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="cd"&gt;/**
     * Get custom messages for validator errors.
     *
     * @return array
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="s2"&gt;"first_name.required"&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;"User first name is required"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s2"&gt;"first_name.string"&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;"User first name type must be a string"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s2"&gt;"email.unique"&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;"This email is already used."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Now You Can use &lt;strong&gt;UserCreateRequest&lt;/strong&gt; inside controller&lt;br&gt;&lt;br&gt;
function.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;   &lt;span class="cd"&gt;/**
     * Store Customer
     *
     * @param  UserCreateRequest $request
     * @return User
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;store&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;UserCreateRequest&lt;/span&gt; &lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nc"&gt;User&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;store&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;all&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;With this custom request you can have lot's of complex logics, rules inside it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WA8Cln8a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5vkm0psp0m81ohdeyruj.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WA8Cln8a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5vkm0psp0m81ohdeyruj.jpg" alt="images"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#02-use-config-constants-language-files-without-complexing-code"&gt;
  &lt;/a&gt;
  02 Use Config, Constants, Language Files without complexing code. 👈
&lt;/h2&gt;

&lt;p&gt;let's say you are adding users to database with number of status.&lt;/p&gt;

&lt;p&gt;like &lt;strong&gt;ApprovalPending&lt;/strong&gt; , &lt;strong&gt;Approved&lt;/strong&gt; , &lt;strong&gt;Declined&lt;/strong&gt; , &lt;strong&gt;ReSubmitted&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This the &lt;strong&gt;Bad&lt;/strong&gt; way which lot's of juniors are doing.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;
&lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;// do the things for Pending status&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;// do the things for Approved status&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;// do the things for Declined status&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;// do the things for Resubmitted status&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;above you may see if we changed integer for related status, we must change the switch function also for correct the status, and also if comments deleted by some how, you don't know what happened in case 1, what happened in case 2 like this.&lt;/p&gt;

&lt;p&gt;to avoid this we can use Constant Variable which is defined inside related model.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;
 &lt;span class="k"&gt;CONST&lt;/span&gt; &lt;span class="no"&gt;STATUS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="s2"&gt;"ApprovalPending"&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;"Approved"&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;"Declined"&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;"ReSubmitted"&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;];&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Then you can use STATUS variable inside the switch case anywhere.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;
&lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nc"&gt;User&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;STATUS&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'ApprovalPending'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;// do the things for Pending status&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nc"&gt;User&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;STATUS&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'Approved'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;// do the things for Approved status&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nc"&gt;User&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;STATUS&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'Declined'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;// do the things for Declined status&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nc"&gt;User&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;STATUS&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'ReSubmitted'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;// do the things for Resubmitted status&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CrGihhHx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l4xif2pxe28ue6lmanv2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CrGihhHx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l4xif2pxe28ue6lmanv2.png" alt="identify_sqlitebrowser"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#03-dont-execute-queries-inside-blade-files"&gt;
  &lt;/a&gt;
  03 Don't Execute Queries inside blade files. 👈
&lt;/h2&gt;

&lt;p&gt;lot's of junior developers are doing this thing without looking about it.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;
&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="k"&gt;foreach&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Customer&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;all&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nv"&gt;$customer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;$customer&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;street_address&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;
&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="k"&gt;endforeach&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This code is fine there no any issue. but let's look in to deep. This will execute &lt;strong&gt;1001 queries&lt;/strong&gt; for &lt;strong&gt;1000 customers&lt;/strong&gt; .&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;
&lt;span class="nv"&gt;$customers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Customer&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'address'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="k"&gt;foreach&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$customers&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nv"&gt;$customer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;$customer&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;street_address&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;
&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="k"&gt;endforeach&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This is perfect. This will execute only &lt;strong&gt;2 queries&lt;/strong&gt; for &lt;strong&gt;1000 of customers&lt;/strong&gt; . &lt;/p&gt;

&lt;p&gt;Above I talked about 3 main issues which junior developers are doing mostly.&lt;/p&gt;

&lt;p&gt;I hope you find my post useful! Any feedback is greatly appreciated!&lt;/p&gt;

&lt;p&gt;below I mentioned my other articles. you may also read them.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#other-articles"&gt;
  &lt;/a&gt;
  Other Articles 👈👈👈
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Laravel Best Practice &lt;a href="https://dev.to/lathindu1/laravel-best-practice-coding-standards-part-01-304l"&gt;Coding Standards Part 01 &lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;MetaMask Integration With Laravel Part2 &lt;a href="https://dev.to/lathindu1/validate-metamask-transactions-with-etherscan-metamask-integration-with-laravel-part-2-25h6"&gt;Click Here&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;MetaMask Integration With Laravel Part1 &lt;a href="https://dev.to/lathindu1/metamask-integration-with-laravel-4mng"&gt;Click Here&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here I'm Adding Public GitHub Repository which will store all of my tutorials. you may clone it and see every tutorials what I will publish 🤗.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;GitHub Repository&lt;/strong&gt; &lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/lathindu1"&gt;
        lathindu1
      &lt;/a&gt; / &lt;a href="https://github.com/lathindu1/tutorials"&gt;
        tutorials
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h2&gt;
Tutorials&lt;/h2&gt;
&lt;p&gt;Here I will show all the code blocks of my tutorials. you can copy anything or learn anything.&lt;/p&gt;
&lt;h3&gt;
Articles&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://dev.to/lathindu1/metamask-integration-with-laravel-4mng" rel="nofollow"&gt;How To Connect Metamask With Laravel(Part 01 Connect And Make A Transaction) &lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://dev.to/lathindu1/validate-metamask-transactions-with-etherscan-metamask-integration-with-laravel-part-2-25h6" rel="nofollow"&gt;How To Connect Metamask With Laravel(Part 02 Validate Transactions) &lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/lathindu1/tutorials"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Thank You Very much&lt;/strong&gt;.&lt;br&gt;
--Lathindu Pramuditha--&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;GitHub Profile&lt;/strong&gt; &lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/lathindu1"&gt;
        lathindu1
      &lt;/a&gt; / &lt;a href="https://github.com/lathindu1/lathindu1"&gt;
        lathindu1
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      It's About Lathindu Pramuditha's Account
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h2&gt;
 ආයුබෝවන් (Welcome)🙏🏻, I'm Lathindu Pramuditha Amarasekara! &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/2c8b3670d933220ae3c023fa1d568682975cce3f10799d0d3ff5ecac394b4ee8/68747470733a2f2f6d656469612e67697068792e636f6d2f6d656469612f31326f75664342304d795a31476f2f67697068792e676966"&gt;&lt;img src="https://camo.githubusercontent.com/2c8b3670d933220ae3c023fa1d568682975cce3f10799d0d3ff5ecac394b4ee8/68747470733a2f2f6d656469612e67697068792e636f6d2f6d656469612f31326f75664342304d795a31476f2f67697068792e676966" width="50"&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/62da68eb62b1e5f175f7d1f0191dd89a653d7908feb22d37d4a0ab07365d6791/68747470733a2f2f6d656469612e67697068792e636f6d2f6d656469612f4d3967624264396e6244724f5475314d71782f67697068792e676966"&gt;&lt;img src="https://camo.githubusercontent.com/62da68eb62b1e5f175f7d1f0191dd89a653d7908feb22d37d4a0ab07365d6791/68747470733a2f2f6d656469612e67697068792e636f6d2f6d656469612f4d3967624264396e6244724f5475314d71782f67697068792e676966" width="230"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Software Engineer at &lt;a href="http://www.speralabs.com" rel="nofollow"&gt;Speralabs&lt;/a&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/63371d36886ee658f5a97401f393e1ab1684b2fd3de674b8f5efc7d410b2a3d0/68747470733a2f2f6d656469612e67697068792e636f6d2f6d656469612f57556c706c634d704f43456d5447427442572f67697068792e676966"&gt;&lt;img src="https://camo.githubusercontent.com/63371d36886ee658f5a97401f393e1ab1684b2fd3de674b8f5efc7d410b2a3d0/68747470733a2f2f6d656469612e67697068792e636f6d2f6d656469612f57556c706c634d704f43456d5447427442572f67697068792e676966" width="30"&gt;&lt;/a&gt;
&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.linkedin.com/in/lathindu-pramuditha/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f448cae00c63958fe7acb4e23573cce483206c8225830946e57c1dc3959109a1/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d6c617468696e64752d626c75653f7374796c653d666c61742d737175617265266c6f676f3d4c696e6b6564696e266c6f676f436f6c6f723d7768697465266c696e6b3d68747470733a2f2f7777772e6c696e6b6564696e2e636f6d2f696e2f6c617468696e64752d7072616d7564697468612f" alt="Linkedin: lathindu-pramuditha"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/9c1fea2772e90520b8e18ed5c486d53a6f48beb4171e3b6e6235970b95b26502/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f6c6c6f776572732f6c617468696e6475313f6c6162656c3d466f6c6c6f77267374796c653d736f6369616c"&gt;&lt;img src="https://camo.githubusercontent.com/9c1fea2772e90520b8e18ed5c486d53a6f48beb4171e3b6e6235970b95b26502/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f6c6c6f776572732f6c617468696e6475313f6c6162656c3d466f6c6c6f77267374796c653d736f6369616c" alt="GitHub followers"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/5f6cd64a3b1532374b533f71fd295483c71db152556a7ed7a56936f67f70871d/68747470733a2f2f76697369746f722d62616467652e676c697463682e6d652f62616467653f706167655f69643d6c617468696e6475312e6c617468696e647531"&gt;&lt;img src="https://camo.githubusercontent.com/5f6cd64a3b1532374b533f71fd295483c71db152556a7ed7a56936f67f70871d/68747470733a2f2f76697369746f722d62616467652e676c697463682e6d652f62616467653f706167655f69643d6c617468696e6475312e6c617468696e647531" alt=""&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://github.com/anmol098/anmol098/workflows/Waka%20Readme/badge.svg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4xZf37TF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/anmol098/anmol098/workflows/Waka%2520Readme/badge.svg" alt="Waka Readme"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/be37cdc8f930300096c506ad4574eaae977c48fbb2705cfcb92f4eeab8282c7a/68747470733a2f2f6d656469612e67697068792e636f6d2f6d656469612f56674344417a634b767352364f4d307557672f67697068792e676966"&gt;&lt;img src="https://camo.githubusercontent.com/be37cdc8f930300096c506ad4574eaae977c48fbb2705cfcb92f4eeab8282c7a/68747470733a2f2f6d656469612e67697068792e636f6d2f6d656469612f56674344417a634b767352364f4d307557672f67697068792e676966" width="50"&gt;&lt;/a&gt; A little more about me...&lt;/h3&gt;
&lt;div class="highlight highlight-text-html-php js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;namespace&lt;/span&gt; &lt;span class="pl-v"&gt;App&lt;/span&gt;\&lt;span class="pl-v"&gt;Models&lt;/span&gt;
&lt;span class="pl-k"&gt;use&lt;/span&gt; &lt;span class="pl-v"&gt;Illuminate&lt;/span&gt;\&lt;span class="pl-v"&gt;Database&lt;/span&gt;\&lt;span class="pl-v"&gt;Eloquent&lt;/span&gt;\&lt;span class="pl-v"&gt;Factories&lt;/span&gt;\&lt;span class="pl-v"&gt;HasFactory&lt;/span&gt;
&lt;span class="pl-k"&gt;use&lt;/span&gt; &lt;span class="pl-v"&gt;Illuminate&lt;/span&gt;\&lt;span class="pl-v"&gt;Database&lt;/span&gt;\&lt;span class="pl-v"&gt;Eloquent&lt;/span&gt;\&lt;span class="pl-v"&gt;Life&lt;/span&gt;
&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-v"&gt;ProfileOfLathindu&lt;/span&gt; &lt;span class="pl-k"&gt;extends&lt;/span&gt; &lt;span class="pl-v"&gt;Life&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;use&lt;/span&gt; &lt;span class="pl-v"&gt;HasFactory&lt;/span&gt;;
    &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;LANGUAGES&lt;/span&gt; = [
        &lt;span class="pl-s"&gt;'PHP'&lt;/span&gt; =&amp;gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;,
        &lt;span class="pl-s"&gt;'JAVASCRIPT'&lt;/span&gt; =&amp;gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;,
        &lt;span class="pl-s"&gt;'PYTHON'&lt;/span&gt; =&amp;gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;,
        &lt;span class="pl-s"&gt;'SOLIDITY'&lt;/span&gt; =&amp;gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt;,
        &lt;span class="pl-s"&gt;'DART'&lt;/span&gt; =&amp;gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;
    ];

    &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;FRAMEWORKS&lt;/span&gt; = [
        &lt;span class="pl-s"&gt;'LARAVEL'&lt;/span&gt; =&amp;gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;,
        &lt;span class="pl-s"&gt;'FLUTTER'&lt;/span&gt; =&amp;gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;,
        &lt;span class="pl-s"&gt;'DJANGO'&lt;/span&gt; =&amp;gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;,
        &lt;span class="pl-s"&gt;'ANGULAR'&lt;/span&gt; =&amp;gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt;,
        &lt;span class="pl-s"&gt;'IONIC'&lt;/span&gt; =&amp;gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;
    ];

    &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;EXPERIENCE&lt;/span&gt; = &lt;span class="pl-s"&gt;'xxxxxxxxxx of hours from 2017'&lt;/span&gt;;

    &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;MORE_EXPERIENCE&lt;/span&gt; = [
        &lt;span class="pl-s"&gt;'PAYPAL_API'&lt;/span&gt; =&amp;gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;,
        &lt;span class="pl-s"&gt;'STRIPE_API'&lt;/span&gt; =&amp;gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;,
        &lt;span class="pl-s"&gt;'PAYHERE_SDK'&lt;/span&gt; =&amp;gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;,
        &lt;span class="pl-s"&gt;'UPHOLD_API'&lt;/span&gt; =&amp;gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt;,
        &lt;span class="pl-s"&gt;'VIMEO_SDK'&lt;/span&gt; =&amp;gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;,
        &lt;span class="pl-s"&gt;'NMI_API'&lt;/span&gt; =&amp;gt; &lt;span class="pl-c1"&gt;6&lt;/span&gt;,
        &lt;span class="pl-s"&gt;'SENDGRID_API'&lt;/span&gt; =&amp;gt; &lt;span class="pl-c1"&gt;7&lt;/span&gt;,
        &lt;span class="pl-s"&gt;'AWEBER_API'&lt;/span&gt; =&amp;gt; &lt;span class="pl-c1"&gt;8&lt;/span&gt;,
        &lt;span class="pl-s"&gt;'GETRESPOND_API'&lt;/span&gt; =&amp;gt; &lt;span class="pl-c1"&gt;9&lt;/span&gt;,
        &lt;span class="pl-s"&gt;'REMIX'&lt;/span&gt; =&amp;gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;,
        &lt;span class="pl-s"&gt;'BTCPAY_SERVER'&lt;/span&gt;&lt;/pre&gt;…
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/lathindu1/lathindu1"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b1W9oKWG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3q4lvrbmuupxu6o6pgx9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b1W9oKWG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3q4lvrbmuupxu6o6pgx9.png" alt="Screenshot 2021-04-19 at 23.08.02"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>laravel</category>
      <category>beginners</category>
      <category>php</category>
      <category>codequality</category>
    </item>
    <item>
      <title>The Serverless SWAG!</title>
      <author>Jones Zachariah Noel</author>
      <pubDate>Mon, 19 Apr 2021 17:45:03 +0000</pubDate>
      <link>https://dev.to/zachjonesnoel/the-serverless-swag-1p8k</link>
      <guid>https://dev.to/zachjonesnoel/the-serverless-swag-1p8k</guid>
      <description>&lt;p&gt;Serverless architecture has been on trending application architecture for the last couple of years with giant streaming applications such as Netflix, Disney+ have adopted AWS serverless architecture for their workloads. What is that makes serverless an adaptable architecture and also why does it interest the traditional server-based architecture/ monolithic architecture applications to migrate to serverless?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--80lPx7o7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9e9yj6kcg5vjmw4secvg.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--80lPx7o7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9e9yj6kcg5vjmw4secvg.jpg" alt="Serverless services by AWS vs GCP vs Azure"&gt;&lt;/a&gt;With reference to &lt;a href="https://logz.io/blog/serverless-guide/"&gt;https://logz.io/blog/serverless-guide/&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#what-is-the-serverless-swag"&gt;
  &lt;/a&gt;
  What is the serverless SWAG?
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;S&lt;/strong&gt; - Server management reduced.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;W&lt;/strong&gt; - Worthwhile&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;A&lt;/strong&gt; - Application focused.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;G&lt;/strong&gt; - Going global.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#server-management-reduced"&gt;
  &lt;/a&gt;
  Server management reduced
&lt;/h4&gt;

&lt;p&gt;Yes, with serverless as the name suggests, we as developers will not be focused on the server management or maintenance of the server which of-course is a huge deal in a server-based architecture. For eg, on AWS, any server is hosted on an EC2 Instance, and all the patches and upgrades such as the OS, security patches, network patches and the load etc have to be managed by an IT admin, in the serverless world, we are focused on the service to leverage and also code to write. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wa2QCbTT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u1nboq0p89aupsr96ms3.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wa2QCbTT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u1nboq0p89aupsr96ms3.jpg" alt=""&gt;&lt;/a&gt;&lt;br&gt;
Like it is commonly said, the serverless world includes servers which is running your code; just that you wouldn't have to manage the servers, let the cloud provider manage things for you - such as auto scaling, load balancing, etc.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#worthwhile"&gt;
  &lt;/a&gt;
  Worthwhile
&lt;/h4&gt;

&lt;p&gt;Serverless architecture includes cutting edge technologies which gives you goosebumps and you get to choose the right configurations and architecture design which leverage the right service/technology to optimize your compute and also making the application cost effective as you run the services &lt;strong&gt;on-demand&lt;/strong&gt; and you only pay for what you use and for the duration you use. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pqyklYht--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/klggf6meqlprch6m7ctl.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pqyklYht--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/klggf6meqlprch6m7ctl.jpg" alt="AWS Summit debunking the myths"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#application-focused"&gt;
  &lt;/a&gt;
  Application focused
&lt;/h4&gt;

&lt;p&gt;As we know we know that we don't have to worry about the under-laying servers where our code runs, we are more application focused. Where the developer of the application is only focused on building the application and choosing the right service for the application. Most of the cloud providers provide a way to develop in the language (Python, NodeJS, Java, GO, etc) of your choice. And for a backend developer to get started on serverless architecture is the only time taken to write the code and provision the end-points. For eg, you have a web application which needs an authentication setup and an API which does certain things, as a backend developer on AWS serverless architecture all you have to do is, setup a AWS Cognito User Pool, write the AWS Lambda function (in the language of your choice) which does the needed actions, configure API Gateway resources to direct requests to Lambda function and voila!! The backend is setup! (will go detailed on getting started on AWS Serverless Architecture in future posts).&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#going-global"&gt;
  &lt;/a&gt;
  Going global
&lt;/h4&gt;

&lt;p&gt;We look at applications such as Netflix, Uber, FaceBook etc which are available in any part of the world, the big question for most of the newbies/cloud enthusiasts, is that &lt;em&gt;"how to make it globally available with low latency!?"&lt;/em&gt; Well, in serverless architecture even though you develop/deploy/publish your application in one of the data centers, you can ensure that the application is available throughout the globe. &lt;strong&gt;HOW&lt;/strong&gt;!? well on AWS its the magic of global networks and caching and computing nearer to the user with &lt;a href="https://aws.amazon.com/cloudfront/"&gt;CloudFront&lt;/a&gt; (CDN network which caches the files nearer to the user) and also &lt;a href="https://aws.amazon.com/lambda/edge/#:~:text=Lambda%40Edge%20is%20a%20feature,multiple%20locations%20around%20the%20world"&gt;Lambda@Edge&lt;/a&gt; which is a feature of CloudFront which lets you compute nearer to the user making it more faster and easily available to the user.&lt;/p&gt;

&lt;p&gt;Well, now that's a SWAG to carry on!! &lt;/p&gt;

</description>
      <category>serverless</category>
      <category>aws</category>
      <category>googlecloud</category>
      <category>azure</category>
    </item>
  </channel>
</rss>
