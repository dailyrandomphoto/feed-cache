<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Best Black Friday Offer - 100% Open-Source and Free Starters</title>
      <author>Sm0ke</author>
      <pubDate>Sat, 27 Nov 2021 17:28:21 +0000</pubDate>
      <link>https://dev.to/sm0ke/best-black-friday-offer-100-open-source-and-free-starters-2825</link>
      <guid>https://dev.to/sm0ke/best-black-friday-offer-100-open-source-and-free-starters-2825</guid>
      <description>&lt;p&gt;Hello Guys!&lt;/p&gt;

&lt;p&gt;These days we are flooded from all directions with BF offers and &lt;code&gt;amazing&lt;/code&gt; discounts from &lt;code&gt;50%&lt;/code&gt; up to &lt;code&gt;95%&lt;/code&gt; for all sort of services, digital and physical products. Well, this list aims to provide another kind of &lt;strong&gt;Black Friday&lt;/strong&gt; offer: &lt;code&gt;100% Free products&lt;/code&gt; published on Github - &lt;code&gt;NO registration lock&lt;/code&gt; or newsletters subscription required to access the products. On top of this, all mentioned templates are &lt;code&gt;actively versioned and supported&lt;/code&gt; by their vendors. &lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Thanks for reading!&lt;/strong&gt; Feel free to suggest more &lt;strong&gt;free&lt;/strong&gt; deals in the comments.  &lt;/p&gt;
&lt;/blockquote&gt;




&lt;h2&gt;
  &lt;a href="#soft-ui-dashboard-react"&gt;
  &lt;/a&gt;
  ✨ Soft UI Dashboard React
&lt;/h2&gt;

&lt;p&gt;Start your Development with an Innovative Admin Template for MUI and React. If you like the look &amp;amp; feel of the hottest design trend right now, Soft UI, you will fall in love with this dashboard! It features a huge number of components built to fit together and look amazing.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;👉 &lt;a href="https://github.com/creativetimofficial/soft-ui-dashboard-react"&gt;Soft UI Dashboard React&lt;/a&gt; - source code&lt;/li&gt;
&lt;li&gt;👉 &lt;a href="https://demos.creative-tim.com/soft-ui-dashboard-react/#/dashboard"&gt;Soft UI Dashboard React&lt;/a&gt; - LIVE Demo&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Soft UI Dashboard React&lt;/strong&gt; is built with over 70 frontend individual elements, like buttons, inputs, navbars, nav tabs, cards, or alerts, giving you the freedom of choosing and combining. All components can take variations in color, which you can easily modify using MUI styled api and sx prop. &lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ws-JC5Qd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iqynuv0t1bgvsy3sc2ye.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ws-JC5Qd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iqynuv0t1bgvsy3sc2ye.png" alt="Best Black Friday Offer - Soft UI Dashboard React." width="880" height="472"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#react-berry-dashboard"&gt;
  &lt;/a&gt;
  ✨ React Berry Dashboard
&lt;/h2&gt;

&lt;p&gt;Berry is a free react admin template build using the M-UI. It is meant to be the best User Experience with highly customizable feature-riched pages. It is a complete React Dashboard Template with easy and intuitive responsive design as on retina screens or laptops.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;👉 &lt;a href="https://github.com/codedthemes/berry-free-react-admin-template"&gt;React Berry Dashboard&lt;/a&gt; - source code&lt;/li&gt;
&lt;li&gt;👉 &lt;a href="https://berrydashboard.io/free/"&gt;React Berry Dashboard&lt;/a&gt; - LIVE Demo&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Berry brings everything you need for dashboard development. We have added the following high-end features like modern aesthetics UI design, Material-UI components, easy to use code structure.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lecHXZd_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e6mhh0iee3lhrbc5bl1f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lecHXZd_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e6mhh0iee3lhrbc5bl1f.png" alt="Best Black Friday Offer - React Berry Dashboard." width="880" height="470"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#pixel-ui-kit"&gt;
  &lt;/a&gt;
  ✨ Pixel UI Kit
&lt;/h2&gt;

&lt;p&gt;Pixel is a free, fully responsive, modern Bootstrap UI Kit that will help you build creative and professional websites. Use our components and sections, switch some Sass variables to build and arrange pages to best suit your needs.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;👉 &lt;a href="https://github.com/themesberg/pixel-bootstrap-ui-kit"&gt;Pixel UI Kit - Bootstrap 5&lt;/a&gt; - source code&lt;/li&gt;
&lt;li&gt;👉 &lt;a href="https://demo.themesberg.com/pixel-bootstrap-5-ui-kit/"&gt;Pixel UI Kit - Bootstrap 5&lt;/a&gt; - LIVE Demo&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Pixel is a premium extension of the famous Bootstrap CSS Framework featuring pricing cards, profile cards, timelines and many more and additional plugins for datepickers and input sliders which Bootstrap does not have by default.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WJhkMIbT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wltbncmleyxwklbml21h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WJhkMIbT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wltbncmleyxwklbml21h.png" alt="Best Black Friday Offer - Pixel UI Kit, Bootstrap 5." width="880" height="438"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#adminkit"&gt;
  &lt;/a&gt;
  ✨ AdminKit
&lt;/h2&gt;

&lt;p&gt;A professional Admin &amp;amp; Dashboard template based on Bootstrap 5 that comes with hundreds of UI components, forms, tables, charts, pages and icons. AdminKit does not require jQuery and neither does one of the 3rd party libraries AdminKit is using.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;👉 &lt;a href="https://github.com/adminkit/adminkit"&gt;AdminKit&lt;/a&gt; - source code&lt;/li&gt;
&lt;li&gt;👉 &lt;a href="https://demo.adminkit.io/"&gt;AdminKit&lt;/a&gt; - LIVE Demo&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The theme includes a custom Webpack file, which can be used to quickly recompile and minify theme assets while developing or for deployment. You'll need to install Node.js before using Webpack.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ReLh2MbV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r7zblc9g73my062dvpgz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ReLh2MbV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r7zblc9g73my062dvpgz.png" alt="Best Black Friday Offer - AdminKit, Bootstrap 5 Desing." width="880" height="477"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#material-kit-2"&gt;
  &lt;/a&gt;
  ✨ Material Kit 2
&lt;/h2&gt;

&lt;p&gt;Material Kit is a Free Bootstrap 5 UI Kit with a fresh, new design inspired by Google's material design. You asked for it, so we built it. It's a great pleasure to introduce to you the material concepts in an easy to use and beautiful set of components. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;👉 &lt;a href="https://github.com/creativetimofficial/material-kit"&gt;Material Kit 2&lt;/a&gt; - source code&lt;/li&gt;
&lt;li&gt;👉 &lt;a href="https://demos.creative-tim.com/material-kit/index.html"&gt;Material Kit 2&lt;/a&gt; - LIVE Demo &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Material Kit makes use of light, surface, and movement. It uses a deliberate color choice, edge-to-edge imagery, and large scale typography. The general layout resembles sheets of paper following multiple different layers so that the depth and order are obvious. The navigation stays mainly on the left and the actions on the right.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QoCqaY6d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lsa2fifqs7z3uzdokjwe.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QoCqaY6d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lsa2fifqs7z3uzdokjwe.png" alt="Best Black Friday Offer - Material Kit 2, Bootstrap 5." width="880" height="453"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#django-bootstrap-5-volt"&gt;
  &lt;/a&gt;
  ✨ Django Bootstrap 5 Volt
&lt;/h2&gt;

&lt;p&gt;Open-source dashboard crafted in  Django Framework. Volt Dashboard is a free and open source Bootstrap 5 Admin Dashboard featuring over 100 components, 11 example pages and 3 plugins with Vanilla JS. There are more than 100 free Bootstrap 5 components included some of them being buttons, alerts, modals, datepickers and so on.&lt;/p&gt;

&lt;p&gt;👉 &lt;a href="https://github.com/app-generator/django-volt-dashboard"&gt;Django Bootstrap 5 Volt&lt;/a&gt; - source code&lt;br&gt;
👉 &lt;a href="https://django-volt-dashboard.appseed-srv1.com/"&gt;Django Bootstrap 5 Volt&lt;/a&gt; - LIVE deployment&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lB0u8o07--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/51070104/143471374-aa0e1ee3-ec50-46bc-971b-c990f5562ade.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lB0u8o07--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/51070104/143471374-aa0e1ee3-ec50-46bc-971b-c990f5562ade.gif" alt="DBest Black Friday Offer - Django Bootstrap 5 Volt." width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Thanks for reading! &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In order to make this list more useful, feel free to submit more &lt;code&gt;open-source&lt;/code&gt; &amp;amp; &lt;code&gt;free&lt;/code&gt; BF deals in the comments. &lt;/p&gt;

&lt;p&gt;The best ones will be added to the list.  &lt;/p&gt;

</description>
      <category>blackfriday</category>
      <category>opensource</category>
    </item>
    <item>
      <title>What was your win this week?</title>
      <author>Gracie Gregory (she/her)</author>
      <pubDate>Sat, 27 Nov 2021 17:24:37 +0000</pubDate>
      <link>https://dev.to/devteam/what-was-your-win-this-week-30gf</link>
      <guid>https://dev.to/devteam/what-was-your-win-this-week-30gf</guid>
      <description>&lt;p&gt;Hey there! &lt;/p&gt;

&lt;p&gt;Looking back on this past week, what was something you were proud of accomplishing?&lt;/p&gt;

&lt;p&gt;All wins count — big or small 🎉&lt;/p&gt;

&lt;p&gt;Examples of 'wins' include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Starting a new project&lt;/li&gt;
&lt;li&gt;Fixing a tricky bug&lt;/li&gt;
&lt;li&gt;Enjoying time with family or friends... or whatever else might spark joy ❤️ &lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Congrats on your accomplishments this week! &lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/3oz8xAFtqoOUUrsh7W/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/3oz8xAFtqoOUUrsh7W/giphy.gif" alt="Dancing flower" width="480" height="320"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>weeklyretro</category>
    </item>
    <item>
      <title>5 Useful and Interesting Web Animation Libraries</title>
      <author>Suraj Vishwakarma</author>
      <pubDate>Sat, 27 Nov 2021 17:23:05 +0000</pubDate>
      <link>https://dev.to/surajondev/5-useful-and-interesting-web-animation-libraries-4d6m</link>
      <guid>https://dev.to/surajondev/5-useful-and-interesting-web-animation-libraries-4d6m</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;Libraries help us to code faster through their predefined classes for different functions. Your idea of the project and combining it with the libraries to add functionality, make a great project.&lt;/p&gt;

&lt;p&gt;Today, we are going to look into CSS animation libraries to help you add beautiful customizable animation to your web page.&lt;/p&gt;

&lt;p&gt;So let's get started.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#animatecss"&gt;
  &lt;/a&gt;
  &lt;a href="https://animate.style/"&gt;Animate.css&lt;/a&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Animate.css is a library of ready-to-use, cross-browser animations for use in your web projects. Great for emphasis, home pages, sliders, and attention-guiding hints.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--K6IPbygM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://scotch-res.cloudinary.com/image/upload/w_1050%2Cq_auto:good%2Cf_auto/media/8630/XHRQu3mBQGmVGlD4C6tL_animatecss.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K6IPbygM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://scotch-res.cloudinary.com/image/upload/w_1050%2Cq_auto:good%2Cf_auto/media/8630/XHRQu3mBQGmVGlD4C6tL_animatecss.gif" alt="Animate.css" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h3&gt;

&lt;p&gt;NPM:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight batchfile"&gt;&lt;code&gt;$ &lt;span class="kd"&gt;npm&lt;/span&gt; &lt;span class="kd"&gt;install&lt;/span&gt; &lt;span class="kd"&gt;animate&lt;/span&gt;.css &lt;span class="na"&gt;--save
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;SCRIPT:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt;
    &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt;
    &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css"&lt;/span&gt;
  &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#usage"&gt;
  &lt;/a&gt;
  Usage
&lt;/h3&gt;

&lt;p&gt;You can add the pre-define animation classes to any element to which you want to add the animation.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"animate__animated animate__bounce"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;An animated element&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#codepen-example"&gt;
  &lt;/a&gt;
  CodePen Example
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Rerun to see the animation again&lt;/em&gt;&lt;br&gt;
&lt;iframe height="600" src="https://codepen.io/surajsrv11/embed/GRvXVXq?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#animejs"&gt;
  &lt;/a&gt;
  &lt;a href="https://animejs.com/"&gt;Anime.js&lt;/a&gt;
&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;Anime.js is a lightweight JavaScript animation library with a simple, yet powerful API.&lt;br&gt;
It works with CSS properties, SVG, DOM attributes and JavaScript Objects.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6RwrXpkW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://uploads.sitepoint.com/wp-content/uploads/2016/10/1477673935anime-logo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6RwrXpkW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://uploads.sitepoint.com/wp-content/uploads/2016/10/1477673935anime-logo.png" alt="Anime.js" width="642" height="170"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h3&gt;

&lt;p&gt;NPM:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight batchfile"&gt;&lt;code&gt;$ &lt;span class="kd"&gt;npm&lt;/span&gt; &lt;span class="kd"&gt;install&lt;/span&gt; &lt;span class="kd"&gt;animejs&lt;/span&gt; &lt;span class="na"&gt;--save
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;SCRIPT:&lt;/p&gt;

&lt;p&gt;You can download the script add it to the project download. Link the script as a normal script.&lt;/p&gt;

&lt;p&gt;Download script &lt;a href="https://github.com/juliangarnier/anime/archive/master.zip"&gt;&lt;strong&gt;here&lt;/strong&gt;&lt;/a&gt; or visit their &lt;a href="https://github.com/juliangarnier/anime/"&gt;GitHub&lt;/a&gt; page to download it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;  &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"anime.min.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#usage"&gt;
  &lt;/a&gt;
  Usage
&lt;/h3&gt;

&lt;p&gt;Anime.js is one of my favorites to add animation to my projects. You just need to use the &lt;code&gt;anime&lt;/code&gt; function and add all the animation parameters to it. You can find more about arguments and values in the documentation &lt;a href="https://animejs.com/documentation/"&gt;&lt;strong&gt;here&lt;/strong&gt;&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;anime&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;targets&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.box&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;translateY&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;duration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#4C0070&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;borderRadius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;1turn&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;easing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;easeInOutExpo&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#codepen-example"&gt;
  &lt;/a&gt;
  CodePen Example
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/surajsrv11/embed/GRvYKKr?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#hovercss"&gt;
  &lt;/a&gt;
  &lt;a href="http://ianlunn.github.io/Hover/"&gt;Hover.css&lt;/a&gt;
&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;A collection of CSS3 powered hover effects to be applied to links, buttons, logos, SVG, featured images and so on. Easily apply to your own elements, modify or just use for inspiration. Available in CSS, Sass, and LESS.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0W1rxnE---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://assets.codepen.io/239346/internal/screenshots/pens/waBgya.default.png%3Ffit%3Dcover%26format%3Dauto%26ha%3Dtrue%26height%3D540%26quality%3D75%26v%3D2%26version%3D1430082140%26width%3D960" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0W1rxnE---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://assets.codepen.io/239346/internal/screenshots/pens/waBgya.default.png%3Ffit%3Dcover%26format%3Dauto%26ha%3Dtrue%26height%3D540%26quality%3D75%26v%3D2%26version%3D1430082140%26width%3D960" alt="Hover.css" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h3&gt;

&lt;p&gt;NPM:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight batchfile"&gt;&lt;code&gt;$ &lt;span class="kd"&gt;npm&lt;/span&gt; &lt;span class="kd"&gt;install&lt;/span&gt; &lt;span class="kd"&gt;hover&lt;/span&gt;.css &lt;span class="na"&gt;--save
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;FILE:&lt;br&gt;
You can download the CSS file and link it in the HTML between head tag. Download it [&lt;strong&gt;here&lt;/strong&gt;] or visit &lt;a href="https://github.com/IanLunn/Hover"&gt;&lt;strong&gt;GitHub&lt;/strong&gt;&lt;/a&gt; page of hover.css.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"css/hover-min.css"&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#usage"&gt;
  &lt;/a&gt;
  Usage
&lt;/h3&gt;

&lt;p&gt;It is a set of predefined classes that you can use as a class name for your element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"hvr-underline-from-center"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  Click Me!
&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#codepen-example"&gt;
  &lt;/a&gt;
  CodePen Example
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/surajsrv11/embed/XWerrJw?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#velocity"&gt;
  &lt;/a&gt;
  &lt;a href="http://velocityjs.org/"&gt;Velocity&lt;/a&gt;
&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;Accelerated JavaScript animation. It's incredibly fast, and it features color animation, transforms, loops, easings, SVG support, and scrolling.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BB8rnwAH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://assets.awwwards.com/awards/external/2016/12/58414eaf71dcd.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BB8rnwAH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://assets.awwwards.com/awards/external/2016/12/58414eaf71dcd.jpg" alt="Velocity" width="880" height="629"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h3&gt;

&lt;p&gt;NPM:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight batchfile"&gt;&lt;code&gt;$ &lt;span class="kd"&gt;npm&lt;/span&gt; &lt;span class="kd"&gt;install&lt;/span&gt; &lt;span class="na"&gt;--save &lt;/span&gt;&lt;span class="kd"&gt;velocity&lt;/span&gt;&lt;span class="na"&gt;-react
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;SCRIPT:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"//cdn.jsdelivr.net/npm/velocity-animate@2.0/velocity.ui.min.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#usage"&gt;
  &lt;/a&gt;
  Usage
&lt;/h3&gt;

&lt;p&gt;Velocity functions take two objects, the first one is properties and the second one is options. You can define all the properties you want to animate in the properties object. Option object contains different options related to animation such duration, loop, easing, etc.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;velocity&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;marginTop&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;duration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;easing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;swing&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#codepen-example"&gt;
  &lt;/a&gt;
  CodePen Example
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/surajsrv11/embed/YzrKKQZ?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#three-dots"&gt;
  &lt;/a&gt;
  &lt;a href="https://nzbin.github.io/three-dots/"&gt;Three Dots&lt;/a&gt;
&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;The project is a set of CSS loading animations created with three dots which made by just single element. I think the project can not only enhance your CSS skills but also improve your imagination.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R8g35_bB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.bypeople.com/wp-content/uploads/2018/06/three-dots-css-loading-animations.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R8g35_bB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.bypeople.com/wp-content/uploads/2018/06/three-dots-css-loading-animations.png" alt="Three Dots" width="800" height="400"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h3&gt;

&lt;p&gt;NPM:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight batchfile"&gt;&lt;code&gt;$ &lt;span class="kd"&gt;npm&lt;/span&gt; &lt;span class="kd"&gt;install&lt;/span&gt; &lt;span class="kd"&gt;three&lt;/span&gt;&lt;span class="na"&gt;-dots --save
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;FILE:&lt;br&gt;
Include the CSS in your file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"/path/to/three-dots.css"&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#usage"&gt;
  &lt;/a&gt;
  Usage
&lt;/h3&gt;

&lt;p&gt;You just need to add the class name to the element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"dot-pulse"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#codepen-example"&gt;
  &lt;/a&gt;
  CodePen Example
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/surajsrv11/embed/PoJYNWJ?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#last-note"&gt;
  &lt;/a&gt;
  Last Note
&lt;/h1&gt;

&lt;p&gt;These are useful and interesting animation libraries to bring life to the web element. I hope you will use one of the above libraries in your next project.&lt;/p&gt;

&lt;p&gt;Thanks for reading the blog post.&lt;/p&gt;

</description>
      <category>css</category>
      <category>javascript</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Best thing about Symbl.ai Docs</title>
      <author>Asian Cat</author>
      <pubDate>Sat, 27 Nov 2021 17:20:28 +0000</pubDate>
      <link>https://dev.to/asiancat54x/best-thing-about-symblai-docs-43em</link>
      <guid>https://dev.to/asiancat54x/best-thing-about-symblai-docs-43em</guid>
      <description>&lt;p&gt;Hi, as you have probably known symbl.ai, it is a very powerful tool that you can use for conversation intellisence.&lt;/p&gt;

&lt;p&gt;The thing I loved is how they added different requests methods which can be very helpful for other devs.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>symbl</category>
      <category>buildwithsymbl</category>
    </item>
    <item>
      <title>Frame Development</title>
      <author>V.D.M.</author>
      <pubDate>Sat, 27 Nov 2021 17:06:31 +0000</pubDate>
      <link>https://dev.to/vdm/frame-development-3bam</link>
      <guid>https://dev.to/vdm/frame-development-3bam</guid>
      <description>&lt;p&gt;Internet of Things, Outdoor Monitorization, In Real Time WiFi&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>productivity</category>
      <category>testing</category>
      <category>database</category>
    </item>
    <item>
      <title>How To Implement OAuth2 Social Login(Single Sign-On)Using Facebook &amp; Spring Boot — Part 2</title>
      <author>ROHAN KADAM</author>
      <pubDate>Sat, 27 Nov 2021 16:29:18 +0000</pubDate>
      <link>https://dev.to/rohan2596/how-to-implement-oauth2-social-loginsingle-sign-onusing-facebook-spring-boot-part-2-33mf</link>
      <guid>https://dev.to/rohan2596/how-to-implement-oauth2-social-loginsingle-sign-onusing-facebook-spring-boot-part-2-33mf</guid>
      <description>&lt;h2&gt;
  &lt;a href="#oauth2-facebook"&gt;
  &lt;/a&gt;
  OAuth2 Facebook
&lt;/h2&gt;

&lt;p&gt;Hello, Its &lt;strong&gt;Rohan Kadam&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Hello All, Hope you are doing well. Today we are going to understand how we can implement OAuth2 Social Login Using Facebook and &lt;a href="https://medium.com/javarevisited/top-10-courses-to-learn-spring-boot-in-2020-best-of-lot-6ffce88a1b6e?source=---------39------------------"&gt;Spring Boot&lt;/a&gt;. Let us start coding.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XLc5Npkr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/6000/1%2Af5N7ntA9r7r6BStch93tww.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XLc5Npkr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/6000/1%2Af5N7ntA9r7r6BStch93tww.jpeg" alt="**Social Login Using Facebook and Spring Boot**" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Before going forward implementing Part 2. I request to go into taking a look in Part 1 — &lt;strong&gt;How To Implement OAuth2 Social Login Using Facebook&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://medium.com/@rohankadam965/how-to-implement-oauth2-social-login-using-facebook-part-1-e7995f30774e"&gt;&lt;strong&gt;How To Implement OAuth2 Social Login Using Facebook — Part 1&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#step-1-create-a-spring-boot-project-using-spring-initializer"&gt;
  &lt;/a&gt;
  **Step 1: **Create a Spring Boot Project using Spring initializer.
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://start.spring.io/"&gt;&lt;strong&gt;Spring Initializr&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#step-2-add-the-following-dependencies-in-your-project-pomxml"&gt;
  &lt;/a&gt;
  **Step 2: **Add the following dependencies in your project pom.xml
&lt;/h3&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;org.springframework.security&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;spring-security-oauth2-client&amp;lt;/artifactId&amp;gt;
&amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
  &lt;a href="#step-3-create-a-configuration-file-for-implementing-oauth2"&gt;
  &lt;/a&gt;
  **Step 3: **Create a Configuration File for implementing &lt;a href="https://medium.com/javarevisited/top-10-courses-to-learn-spring-security-and-oauth2-with-spring-boot-for-java-developers-8f0222d6066d?source=---------5-----------------------"&gt;OAuth2.&lt;/a&gt;
&lt;/h3&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#step-4-create-application-yml-which-will-consist-of-facebook-configuration"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Step 4:-&lt;/strong&gt; Create Application Yml which will consist of Facebook Configuration.
&lt;/h3&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#step-5-create-a-rest-controller-which-consists-of-two-endpoints"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Step 5:-&lt;/strong&gt; Create a &lt;a href="https://javarevisited.blogspot.com/2017/08/difference-between-restcontroller-and-controller-annotations-spring-mvc-rest.html#axzz6grO2U4Lp"&gt;Rest Controller&lt;/a&gt; which consists of two endpoints.
&lt;/h3&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#note"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Note:-&lt;/strong&gt;
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Principal Object contains username, email, and profile image depending on scope.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If an &lt;strong&gt;error&lt;/strong&gt; occurs regarding an incorrect &lt;strong&gt;redirect Url&lt;/strong&gt; add the following URL &lt;a href="https://localhost:8080/oauth2/callback/google"&gt;**https://localhost:8080/oauth2/callback/facebook&lt;/a&gt;**&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Test Endpoints for localhost:-&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#httplocalhost8080oauth2authorizefacebookredirecturihttplocalhost8080oauth2callbackfacebook"&gt;
  &lt;/a&gt;
  &lt;a href="http://localhost:8080/oauth2/authorize/google?redirect_uri=http://localhost:8080/oauth2/redirect"&gt;**http://localhost:8080/oauth2/authorize/facebook?redirect_uri=http://localhost:8080/oauth2/callback/facebook&lt;/a&gt;**
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tNroQqiA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2800/1%2Af9TMjifJVReTlh93qJ845Q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tNroQqiA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2800/1%2Af9TMjifJVReTlh93qJ845Q.png" alt="Thank You, Viewers" width="880" height="267"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>programming</category>
      <category>opensource</category>
    </item>
    <item>
      <title>Simple Machine Translation: Yorùbá to English</title>
      <author>Abid</author>
      <pubDate>Sat, 27 Nov 2021 16:07:02 +0000</pubDate>
      <link>https://dev.to/kingabzpro/simple-machine-translation-yoruba-to-english-gjd</link>
      <guid>https://dev.to/kingabzpro/simple-machine-translation-yoruba-to-english-gjd</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Finetuning Helsinki NLP Multilanguage model to translate text from Yorùbá to English.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In this article, we will build a machine translation model to translate sentences from the Yorùbá language to the English language. These sentences are from various resources such as news articles, conversations on social media, spoken transcripts, and books written purely in the Yorùbá language.&lt;/p&gt;

&lt;p&gt;Machine translation for low resource language is quite rare, and its quite hard to get accurate results due to the limited size of available training data for these languages. We have a dataset available for Yoruba text (JW300), but that is used to train in the religions domain. We need a model that is generalized and can be used in multiple domains. This is where ai4d.ai comes in with more generalized data, and all we have to do is train our model on this data and produce an accurate result to secure the top position in AI4D Yorùbá Machine Translation Challenge — Zindi.&lt;/p&gt;

&lt;p&gt;In this project we will be using the Helsinki NLP Model, so let's talk about them as an organization.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;🤩🚀 Check out how he got his top 20 ranking on the leaderboard, and try it out yourself!&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;#KeepLearning👉&lt;a href="https://bit.ly/310Ah3O"&gt;https://bit.ly/310Ah3O&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>machinelearning</category>
      <category>nlp</category>
      <category>transformers</category>
      <category>deeplearning</category>
    </item>
    <item>
      <title>How to use with another exciting framework</title>
      <author>Sean van Zuidam</author>
      <pubDate>Sat, 27 Nov 2021 15:33:52 +0000</pubDate>
      <link>https://dev.to/fylgja/how-to-use-with-another-exciting-framework-3cd2</link>
      <guid>https://dev.to/fylgja/how-to-use-with-another-exciting-framework-3cd2</guid>
      <description>&lt;p&gt;As we mention multiple times, on our site 😅, Fylgja is component based framework, meaning you can download and use each CSS component separately.&lt;/p&gt;

&lt;p&gt;Making it easier to combine and use with other CSS frameworks or to add it to an existing project.&lt;/p&gt;

&lt;p&gt;So how do you actually do this?&lt;/p&gt;

&lt;p&gt;First make sure to understand what compiler your running. There are 2 use cases;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;SCSS based&lt;/li&gt;
&lt;li&gt;PostCSS based with postcss-import&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;most other tools have no impact with using Fylgja.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-use-with-utility-based-frameworks-like-tailwindcss"&gt;
  &lt;/a&gt;
  How to use with Utility based frameworks, like TailwindCSS
&lt;/h2&gt;

&lt;p&gt;So for example if you are running a &lt;a href="https://tailwindcss.com/"&gt;TailwindCSS&lt;/a&gt; or other utility CSS based framework, like &lt;a href="https://windicss.org/"&gt;WindiCSS&lt;/a&gt;, thats one of the easiest use cases.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;The only components that might conflict are the Utilpack, Transition and Transform components, since these are also utility based CSS components.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;So if you are using TailwindCSS you can simply install the &lt;code&gt;@fylgja/form&lt;/code&gt; component and include it in your CSS like this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="s1"&gt;"tailwindcss/base"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="s1"&gt;"tailwindcss/components"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="s1"&gt;"@fylgja/form"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="s1"&gt;"tailwindcss/utilities"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And now you don't need to add any CSS classes for your form elements, since the &lt;code&gt;@fylgja/form&lt;/code&gt; component styles them directly.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FlVNHfdj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://fylgja.dev/images/noice.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FlVNHfdj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://fylgja.dev/images/noice.webp" alt="Noice" width="440" height="332"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And this way you can also add more and more Fylgja CSS components without having to create them with utility classes.&lt;/p&gt;

&lt;p&gt;So instead having to us &lt;code&gt;@apply&lt;/code&gt; to create a Card component, You can just include it, just as with the form. The only difference is the Fylgja Card component uses classes, but that is just wat we want, moving to a more DRY approach and still using the flexibly of utility classes. 😄&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-use-with-component-based-frameworks-like-bootstrap"&gt;
  &lt;/a&gt;
  How to use with Component based frameworks, like Bootstrap
&lt;/h2&gt;

&lt;p&gt;This is a little harder since some components already exists, so make sure to disable the CSS Component you want to replace.&lt;/p&gt;

&lt;p&gt;So you can add CSS Components that don't exist in Bootstrap, or replace existing ones with Fylgja CSS components.&lt;/p&gt;

&lt;p&gt;For Bootstrap you could extend the utilities with our Utilpack component, adding more utility power, or add some Native CSS components like the form to simplify the HTML.&lt;/p&gt;

&lt;p&gt;So how do you actually remove CSS components from Bootstrap?&lt;/p&gt;

&lt;p&gt;First make sure that you don't import Bootstrap using a single import. Instead load everything from the &lt;code&gt;bootstrap.scss&lt;/code&gt; file separately,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="s1"&gt;"bootstrap"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;load everything separately, like this;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="nt"&gt;Configuration&lt;/span&gt;
&lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="s1"&gt;"functions"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="s1"&gt;"variables"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="s1"&gt;"mixins"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="s1"&gt;"utilities"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="nt"&gt;Layout&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="nt"&gt;components&lt;/span&gt;
&lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="s1"&gt;"root"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="s1"&gt;"reboot"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="s1"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="s1"&gt;"offcanvas"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="s1"&gt;"placeholders"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="nt"&gt;Helpers&lt;/span&gt;
&lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="s1"&gt;"helpers"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="nt"&gt;Utilities&lt;/span&gt;
&lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="s1"&gt;"utilities/api"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and include this in your &lt;code&gt;main.css&lt;/code&gt; with the newer &lt;code&gt;@use&lt;/code&gt; syntax.&lt;/p&gt;

&lt;p&gt;Now in your &lt;code&gt;main.css&lt;/code&gt; add your Fylgja Components like you normally do. And in your custom Bootstrap import, you can disable unused components or components you want to replace with Fylgja Components.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&lt;a href="https://fylgja.dev/guides/using-fylgja-with-exciting-framework/"&gt;This Post and Guide&lt;/a&gt; is originally from the Fylgja site&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>fylgjacss</category>
      <category>css</category>
      <category>framework</category>
      <category>frontend</category>
    </item>
    <item>
      <title>Create Custom Scroll Bar Using CSS</title>
      <author>Muhammad Rauf</author>
      <pubDate>Sat, 27 Nov 2021 15:33:47 +0000</pubDate>
      <link>https://dev.to/softcodeon/create-custom-scroll-bar-using-css-8b3</link>
      <guid>https://dev.to/softcodeon/create-custom-scroll-bar-using-css-8b3</guid>
      <description>&lt;p&gt;If you are thinking about styling the browser’s scrollbar then you are in the right place. You may have tried to make a custom scrollbar but did not get the actual output that you were wanted. In this tutorial, you’ll come to know how to create a custom scrollbar for all browsers using pure CSS.&lt;/p&gt;

&lt;p&gt;Yes! you heard it right, we are not going to use any scrollbar plugin or custom scrolling function. We’ll just explore the ways to style the browser’s default scrollbar using CSS properties. Well! the benefit of using pure CSS is that the page scrolling will remain smooth as compare to scrolling plugins.&lt;/p&gt;

&lt;p&gt;The scrollbar styles that we are going to share replace the browser’s default scrollbar styles whether it is a horizontal or vertical scrollbar. You can check this custom scrollbar on the demo page. There you will see two scroll bars, one of them is a page scrollbar and the other is a scrollable section.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#how-to-create-custom-scrollbar"&gt;
  &lt;/a&gt;
  How to Create Custom Scrollbar
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--es7uKxkx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2tyt4nowh32e7g1ngu3t.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--es7uKxkx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2tyt4nowh32e7g1ngu3t.jpg" alt="Image description" width="600" height="300"&gt;&lt;/a&gt;&lt;br&gt;
In order to create a custom scrollbar, you just need to have some scrollable content on your webpage. Basically, you don’t need to create any special HTML for the custom scrollbar. If you have already a scrollbar in your webpage then simply skip the HTML and read the CSS styling guide. Anyhow, if you don’t have any element on your page, you may try the following scrollable box. Just keep some content inside it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"scrollable"&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;"height: 1000px; width: 400px"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; 
This is a scrollable div.
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Besides this, we created three classes for horizontal, vertical, and both horizontal and vertical scroll. You may add the "horizontal-scroll" class to a div element to make a horizontal scrollable box.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"horizontal-scroll"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
Place your div content here...
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Similarly, you can use the "vertical-scroll" class for the vertical scrollable box.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"vertical-scroll"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
Place your div content here...
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can add a class name "scrollable" that we styled a 500px both horizontal and vertical scrollable box.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"scrollable"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
Place your div content here...
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#styling-browsers-scrollbar-with-css"&gt;
  &lt;/a&gt;
  Styling Browsers Scrollbar with CSS
&lt;/h1&gt;

&lt;p&gt;In order to style the scrollbar, we’ll use the CSS -WebKit- extension and target the browser’s built-in selector for the scrollbar. So, select the scrollbar with the -webkit- prefix and define the width of the scrollbar. It will set the thickness of the scrollbar. You can define the custom value for the CSS width property (that we defined 15px) according to your needs.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="c"&gt;/* scrollbar width */&lt;/span&gt;
&lt;span class="nd"&gt;::-webkit-scrollbar&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#best-designed-web-scroll-bar"&gt;
  &lt;/a&gt;
  Best Designed Web Scroll bar.
&lt;/h1&gt;

&lt;p&gt;If you want to add custom scroll bar with hover effect just copy below code and add it to your webpage.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;style&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;/* width */&lt;/span&gt;
&lt;span class="nd"&gt;::-webkit-scrollbar&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c"&gt;/* Track */&lt;/span&gt;
&lt;span class="nd"&gt;::-webkit-scrollbar-track&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;inset&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt; &lt;span class="m"&gt;#ddd&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c"&gt;/* Handle */&lt;/span&gt;
&lt;span class="nd"&gt;::-webkit-scrollbar-thumb&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;orange&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c"&gt;/* Handle on hover */&lt;/span&gt;
&lt;span class="nd"&gt;::-webkit-scrollbar-thumb:hover&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#e30d00&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;style&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Want to read in detail from our official website &lt;a href="https://softcodeon.com/tutorials/create-custom-scroll-bar-using-css.htm"&gt;Create Custom Scroll Bar&lt;/a&gt;&lt;br&gt;
To SEE &lt;a href="https://codepen.io/softcodeon/pen/dyVbYOd"&gt;DEMO&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That’s all! I hope you have successfully designed browsers' custom scrollbar using CSS. If you have any questions or suggestions, let me know by discuss below.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>beginners</category>
      <category>css</category>
    </item>
    <item>
      <title>Simplest Drag and Drop setup in React, in 10 lines of code with SortableJS</title>
      <author>Arnaud Ambroselli</author>
      <pubDate>Sat, 27 Nov 2021 14:36:37 +0000</pubDate>
      <link>https://dev.to/arnaudambro/simplest-drag-and-drop-setup-in-react-in-10-lines-of-code-with-sortablejs-3dmi</link>
      <guid>https://dev.to/arnaudambro/simplest-drag-and-drop-setup-in-react-in-10-lines-of-code-with-sortablejs-3dmi</guid>
      <description>&lt;h2&gt;
  &lt;a href="#tdlr"&gt;
  &lt;/a&gt;
  TDLR
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/SortableJS/Sortable"&gt;SortableJS&lt;/a&gt; make things really easy !&lt;br&gt;
For those who just want the final result, here is the code and a demo just below&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#code"&gt;
  &lt;/a&gt;
  Code
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useRef&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Sortable&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;sortablejs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./style.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;initData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;_id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
  &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
&lt;span class="p"&gt;}));&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;SortableGrid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;gridRef&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useRef&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;sortableJsRef&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useRef&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setData&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sessionStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;my-grid&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;initData&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;onListChange&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;newData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[...&lt;/span&gt;&lt;span class="nx"&gt;gridRef&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_id&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

    &lt;span class="nx"&gt;sessionStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;my-grid&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newData&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="nx"&gt;setData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;sortableJsRef&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Sortable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;gridRef&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;animation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;150&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;onEnd&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;onListChange&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[]);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;gridRef&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"gridDemo"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(({&lt;/span&gt; &lt;span class="nx"&gt;_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;content&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;_id&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;_id&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"grid-square"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;SortableGrid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#demo"&gt;
  &lt;/a&gt;
  Demo
&lt;/h3&gt;

&lt;p&gt;Demo available &lt;a href="https://www.javolution.io/simple-dragging-grid-react/#demo"&gt;on my personal blog&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#so-many-dragndrop-libs-out-int-the-react-ecosystem"&gt;
  &lt;/a&gt;
  So many DragNDrop libs out int the react ecosystem...
&lt;/h2&gt;

&lt;p&gt;...and yet no easy solution for any of them !&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/atlassian/react-beautiful-dnd"&gt;React Beautiful Dnd&lt;/a&gt;: build by Atlassian for Trello, it's reliable BUT&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;This library continues to be relied upon heavily by Atlassian products, but we are focused on other priorities right now and have no current plans for further feature development or improvements.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;and also, not so easy to setup for someone who just want easy drag and drop&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/react-grid-layout/react-grid-layout"&gt;React Grid Layout&lt;/a&gt;: quite easy to setup, and quite powerful also. But I wanted to be able to move items in a grid so that it takes the position of another item in the grid and the grid keeps the same shape at the end of the drag/drop action - the defauilt behavior of this lib being to "make space" for the dragged item and break the grid layout. After spending one hour on it, I still couldn't find the way to achieve my goal, I quit.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;-&lt;a href="https://react-dnd.github.io/react-dnd/about"&gt;React DND&lt;/a&gt;: it seems also a powerful lib, but the API is sooooo ccomplicated ! And you have to &lt;a href="https://react-dnd.github.io/react-dnd/docs/tutorial"&gt;read their tutorial&lt;/a&gt; to setup anything, which is also giving headaches... I tried to implement the API, but after 200 lines of coding and 1 hours spent, I was lost, I tried something else&lt;/p&gt;

&lt;p&gt;-&lt;a href="https://www.npmjs.com/package/react-draggable"&gt;react-draggable&lt;/a&gt;: I must say I didn't see that one, and didn't try.&lt;/p&gt;

&lt;p&gt;-&lt;a href="https://github.com/bmcmahen/react-grid-dnd"&gt;react-grid-dnd&lt;/a&gt;: it looked like an easy setup and exactly want I was looking for, but... it's not maintained, and not working with npm7+ because it has react 16 as a dependency. So I had all the code setup before installing the lib, and I was quite fed up and tired when I discovered I would need to change my npm version to use it, or do some tricks here and there...&lt;/p&gt;

&lt;p&gt;-&lt;a href="https://github.com/SortableJS/react-sortablejs"&gt;react-sortablejs&lt;/a&gt;: I didn't try because it says as an introduction&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Please note that this is not considered ready for production, as there are still a number of bugs being sent through.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Then I thought : damn, there &lt;em&gt;should&lt;/em&gt; be out there a JavaScript library doing the simple thing I've asked for ! And I saw in this last &lt;a href="https://github.com/SortableJS/react-sortablejs"&gt;react-sortablejs&lt;/a&gt; that it was a "React bindings to SortableJS".&lt;/p&gt;

&lt;p&gt;I went to look for &lt;a href="https://github.com/SortableJS/Sortable"&gt;SortableJS&lt;/a&gt;, clicked on the &lt;a href="https://sortablejs.github.io/Sortable/"&gt;demo&lt;/a&gt;, scrolled to the &lt;a href="http://sortablejs.github.io/Sortable/#grid"&gt;grid example&lt;/a&gt; which was doing &lt;em&gt;exactly&lt;/em&gt; the simple stuff I was looking for.&lt;/p&gt;

&lt;p&gt;I checked in the dev tools, there was nothing else than a &lt;code&gt;div#gridDemo&lt;/code&gt; and some &lt;code&gt;div.square-items&lt;/code&gt; inside. I checkd for &lt;code&gt;gridDemo&lt;/code&gt; in the source code, and found out the code for that example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Grid demo&lt;/span&gt;
&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Sortable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;gridDemo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;animation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;150&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;ghostClass&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;blue-background-class&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I couldn't believe it... only those three lines of code and that's it ?&lt;br&gt;
And the &lt;a href="https://github.com/SortableJS/Sortable#options"&gt;api&lt;/a&gt; looks straight forward too : the &lt;code&gt;onEnd&lt;/code&gt; function seems doing the job I needed.&lt;/p&gt;

&lt;p&gt;I had to try it by myself !&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#start-with-a-simple-grid-and-just-add-a-few-more-lines"&gt;
  &lt;/a&gt;
  Start with a simple grid, and just add a few more lines
&lt;/h2&gt;

&lt;p&gt;I wrote the React initial code : an array of items display in a grid layout.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useRef&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Sortable&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;sortablejs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./style.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;initData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;_id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
  &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
&lt;span class="p"&gt;}));&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;SortableGrid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setData&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;initData&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"gridDemo"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(({&lt;/span&gt; &lt;span class="nx"&gt;_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;content&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;_id&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;_id&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"grid-square"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;SortableGrid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I then just added:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;one ref for the grid container&lt;/li&gt;
&lt;li&gt;one ref for the SortableJS element&lt;/li&gt;
&lt;li&gt;one Effect to initiate SortableJs&lt;/li&gt;
&lt;li&gt;one function to handle the drag and drop&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;data-id&lt;/code&gt; to all of the items in the grid layout&lt;/li&gt;
&lt;li&gt;a bit of refacto to save the new layout in storage (or in your back-end most probably)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;so that the code would be the &lt;a href="#code"&gt;one I wrote at the beginning&lt;/a&gt;, and as you can see, &lt;a href="#demo"&gt;it works !&lt;/a&gt;&lt;/p&gt;

</description>
      <category>dragndrop</category>
      <category>react</category>
      <category>sortablejs</category>
      <category>grid</category>
    </item>
    <item>
      <title>Nodejs Express RestAPI – Upload/Import Excel File to MySQL – using Read-Excel-File &amp; Multer
</title>
      <author>Harry Nguyen</author>
      <pubDate>Sat, 27 Nov 2021 13:49:02 +0000</pubDate>
      <link>https://dev.to/harrynguyen88/nodejs-express-restapi-uploadimport-excel-file-to-mysql-using-read-excel-file-multer-2icf</link>
      <guid>https://dev.to/harrynguyen88/nodejs-express-restapi-uploadimport-excel-file-to-mysql-using-read-excel-file-multer-2icf</guid>
      <description>&lt;p&gt;&lt;a href="https://ozenero.com/nodejs-express-restapi-upload-import-excel-file-to-mysql-using-read-excel-file-multer"&gt;https://ozenero.com/nodejs-express-restapi-upload-import-excel-file-to-mysql-using-read-excel-file-multer&lt;/a&gt;&lt;br&gt;
In the tutorial, Grokonez shows how to upload &amp;amp; import Excel File/Data to MySQL using read-excel-file and multer libs.&lt;br&gt;
Read more&lt;br&gt;
&lt;a href="https://ozenero.com/nodejs-express-restapi-upload-import-excel-file-to-mysql-using-read-excel-file-multer"&gt;https://ozenero.com/nodejs-express-restapi-upload-import-excel-file-to-mysql-using-read-excel-file-multer&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>First Month as an Accessibility Specialist at Oura</title>
      <author>Eevis (she/her)</author>
      <pubDate>Sat, 27 Nov 2021 13:40:00 +0000</pubDate>
      <link>https://dev.to/eevajonnapanula/first-month-as-an-accessibility-specialist-at-oura-132p</link>
      <guid>https://dev.to/eevajonnapanula/first-month-as-an-accessibility-specialist-at-oura-132p</guid>
      <description>&lt;p&gt;So, I joined Oura Health in October, and it's been a little bit over a month now. My role is an accessibility specialist, and I'm the first person to be hired in the company in such a role.&lt;/p&gt;

&lt;p&gt;During the past month, we've had busy times. We launched the new Gen3 ring, and it has brought a bustle. On the other hand, it's been super cool to join the company during such a time.&lt;/p&gt;

&lt;p&gt;From an accessibility perspective, I know that we aren't there yet. We have a long road to go to change things, but one thing I'm excited about is that there is a will to do that.&lt;/p&gt;

&lt;p&gt;In this blog post, I'll share some initial thoughts and feelings from the past month. I'm super thrilled about what is coming, and I'm feeling happy that I made this change.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#i-dont-have-to-sell-myself-or-accessibility"&gt;
  &lt;/a&gt;
  I Don't Have to Sell Myself or Accessibility
&lt;/h2&gt;

&lt;p&gt;One of the best things has been realizing that I don't need to sell myself to do accessibility-related work anymore. It has been given due to my role. It might sound obvious, but it is not for me.&lt;/p&gt;

&lt;p&gt;You see, I've been in a position before where I've expressed that I want to do more accessibility-related work. I've been very vocal about that. In the end, I've still been the front-end dev first and foremost, who doesn't have time to look into making the results of my work accessible. If accessibility didn't take too much time, it was ok to think about, but there were never actual resources for that.&lt;/p&gt;

&lt;p&gt;Those situations happened when I was working in a consultancy. I was sold as a front-end developer, and that was what the customer was paying for. They didn't have accessibility in their roadmaps, so they didn't want to spend money on that. And myself being a consultant, well, I cost money.&lt;/p&gt;

&lt;p&gt;So I've been super happy that whenever I'm talking about changing things due to accessibility reasons, just saying that is enough. I don't have to justify to people how they benefit from it.&lt;/p&gt;

&lt;p&gt;That means a lot. It has allowed me to use my skills and energy to actually do something without having to spend a long time selling the idea.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#im-expected-to-concentrate-on-accessibility"&gt;
  &lt;/a&gt;
  I'm Expected to Concentrate on Accessibility
&lt;/h2&gt;

&lt;p&gt;Continuing from the previous point, I'm super happy that I can concentrate on accessibility. It's actually expected of me. I kind of knew that from day one, but after a couple of weeks, I had this moment when it really hit me. I'm not the front-end developer anymore, but the one who does accessibility.&lt;/p&gt;

&lt;p&gt;That also means that I don't need to agree to complete something first, and then, if there is still time, I can look into accessibility-specific matters. No, I get to do it right away. That's expected of me.&lt;/p&gt;

&lt;p&gt;One example is that right now, I'm doing an audit of one of our services. I even got my own epic to do that. And it feels good. Maybe you might think that hey, that's nothing special. Well, for me, it is. Coming from a situation where I didn't get to do what I wanted, this feels amazing.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#im-not-alone"&gt;
  &lt;/a&gt;
  I'm not alone
&lt;/h2&gt;

&lt;p&gt;Another thing that's great at Oura is that I'm not alone in my accessibility mission. There are people across the company who understand the value of accessible services and that we need to do better. Yes, as mentioned, there's still a lot to do, but I feel that I'm not alone in this.&lt;/p&gt;

&lt;p&gt;Heck, we even have this part in our values:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Humanity is present in all that we do—connecting with kindness and empathy. We build products and culture that celebrate and support uniqueness, inclusivity, and diversity, where everyone belongs. We meet people where they are, as they are, and &lt;strong&gt;prioritize accessibility.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I've had so many great conversations with people during the past weeks. And what has surprised me the most was that people were waiting for me to start. In multiple different conversations, I've heard that "Oh, I've been waiting for you to join! I have so many questions for you!" That feels just amazing.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping Up
&lt;/h2&gt;

&lt;p&gt;So, as you might have guessed, I'm excited. There's certainly so much to do, but I get to work with talented people who care about their users. I believe that in the future, we can really say that our data is accessible, if not for all, then at least for a wider range of people.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#links"&gt;
  &lt;/a&gt;
  Links
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ouraring.com/about-us"&gt;Oura - About Us&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>a11y</category>
      <category>career</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
