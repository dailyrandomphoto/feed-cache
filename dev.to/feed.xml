<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Building UIs in Figma with hand movements</title>
      <author>Charlie Gerard</author>
      <pubDate>Thu, 20 Jan 2022 20:44:59 +0000</pubDate>
      <link>https://dev.to/devdevcharlie/building-uis-in-figma-with-hand-movements-3pi4</link>
      <guid>https://dev.to/devdevcharlie/building-uis-in-figma-with-hand-movements-3pi4</guid>
      <description>&lt;p&gt;&lt;em&gt;Post originally shared on my &lt;a href="https://charliegerard.dev"&gt;blog&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Since the release of the latest version of the &lt;a href="https://github.com/tensorflow/tfjs-models/tree/master/hand-pose-detection"&gt;MediaPipe handpose detection&lt;/a&gt; machine learning model that allows the detection of multiple hands, I've had in mind to try to use it to create UIs, and here's the result of a quick prototype built in a few hours!&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/AzV2ngmbiBw"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Before starting this, I also came across 2 projects mixing TensorFlow.js and Figma, one by &lt;a href="https://twitter.com/adispezio/status/1440153362872221701"&gt;Anthony DiSpezio to turn gestures into emojis&lt;/a&gt; and one by &lt;a href="https://twitter.com/sidahuj/status/1440705845973512195"&gt;Siddharth Ahuja to move Figma's canvas with hand gestures&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I had never made a Figma plugin before but decided to look into it to see if I could build one to design UIs using hand movements.&lt;/p&gt;

&lt;p&gt;The first thing to know is that you can't test your plugins in the web version so you need to install the Desktop version while you're developing.&lt;/p&gt;

&lt;p&gt;Then, even though you have access to some Web APIs in a plugin, access to the camera and microphone isn't allowed, for security reasons, so I had to figure out how to send the hand data to the plugin.&lt;/p&gt;

&lt;p&gt;The way I went about it is using &lt;a href="https://socket.io/"&gt;Socket.io&lt;/a&gt; to run a separate web app that handles the hand detection and send specific events to my Figma plugin via websockets.&lt;/p&gt;

&lt;p&gt;Here's a quick visualization of the architecture:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nkFkQYe8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o9wprstm7yfx9esybjgo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nkFkQYe8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o9wprstm7yfx9esybjgo.png" alt="A web app is running the hand detection with TensorFlow.js, sends events such as pinch or zoom to the express server with socket.io running on port 8080. The Figma plugin is listening on the same port to the zoom event and when received, triggers different actions in the Figma UI." width="880" height="615"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#gesture-detection-with-tensorflowjs"&gt;
  &lt;/a&gt;
  Gesture detection with TensorFlow.js
&lt;/h2&gt;

&lt;p&gt;In my separate web app, I am running &lt;a href="https://www.tensorflow.org/js"&gt;TensorFlow.js&lt;/a&gt; and the &lt;a href="https://github.com/tensorflow/tfjs-models/tree/master/hand-pose-detection"&gt;hand pose detection model&lt;/a&gt; to get the coordinates of my hands and fingers on the screen and create some custom gestures.&lt;/p&gt;

&lt;p&gt;Without going into too much details, here's a code sample for the "zoom" gesture:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;leftThumbTip&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;rightThumbTip&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;leftIndexTip&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;rightIndexTip&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;leftIndexFingerDip&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;rightIndexFingerDip&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;rightMiddleFingerDip&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;rightRingFingerDip&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;rightMiddleFingerTip&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;leftMiddleFingerTip&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;leftMiddleFingerDip&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;leftRingFingerTip&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;leftRingFingerDip&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;rightRingFingerTip&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;hands&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;hands&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;hands&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;hand&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;hand&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;handedness&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Left&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;//---------------&lt;/span&gt;
        &lt;span class="c1"&gt;// DETECT PALM&lt;/span&gt;
        &lt;span class="c1"&gt;//---------------&lt;/span&gt;
        &lt;span class="nx"&gt;leftMiddleFingerTip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;hand&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keypoints&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;middle_finger_tip&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;leftRingFingerTip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;hand&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keypoints&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ring_finger_tip&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;leftIndexFingerDip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;hand&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keypoints&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;index_finger_dip&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;leftMiddleFingerDip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;hand&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keypoints&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;middle_finger_dip&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;leftRingFingerDip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;hand&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keypoints&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ring_finger_dip&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="nx"&gt;leftIndexTip&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;leftIndexFingerDip&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
          &lt;span class="nx"&gt;leftMiddleFingerTip&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;leftMiddleFingerDip&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
          &lt;span class="nx"&gt;leftRingFingerTip&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;leftRingFingerDip&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;palmLeft&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;palmLeft&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

        &lt;span class="c1"&gt;//---------------&lt;/span&gt;
        &lt;span class="c1"&gt;// DETECT PALM&lt;/span&gt;
        &lt;span class="c1"&gt;//---------------&lt;/span&gt;
        &lt;span class="nx"&gt;rightMiddleFingerTip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;hand&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keypoints&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;middle_finger_tip&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;rightRingFingerTip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;hand&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keypoints&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ring_finger_tip&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;rightIndexFingerDip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;hand&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keypoints&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;index_finger_dip&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;rightMiddleFingerDip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;hand&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keypoints&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;middle_finger_dip&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;rightRingFingerDip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;hand&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keypoints&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ring_finger_dip&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="nx"&gt;rightIndexTip&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;rightIndexFingerDip&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
          &lt;span class="nx"&gt;rightMiddleFingerTip&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;rightMiddleFingerDip&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
          &lt;span class="nx"&gt;rightRingFingerTip&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;rightRingFingerDip&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;palmRight&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;palmRight&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;palmRight&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;palmLeft&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="c1"&gt;// zoom&lt;/span&gt;
          &lt;span class="nx"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;emit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;zoom&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;rightMiddleFingerTip&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;leftMiddleFingerTip&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This code looks a bit messy but that's intended. The goal was to validate the hypothesis that this solution would work before spending some time improving it.&lt;/p&gt;

&lt;p&gt;What I did in this sample was checking that the y coordinate of the tips of my index, middle finger and ring finger was smaller than the y coordinate of their dip cause it would mean my fingers are straight so I'm doing some kind of "palm" gesture.&lt;br&gt;
Once it is detected, I'm emitting a "zoom" event and sending the difference in x coordinate between my right middle finger and left middle finger to represent some kind of width.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#express-server-with-socketio"&gt;
  &lt;/a&gt;
  Express server with socket.io
&lt;/h2&gt;

&lt;p&gt;The server side uses &lt;code&gt;express&lt;/code&gt; to serve my front-end files and &lt;code&gt;socket.io&lt;/code&gt; to receive and emit messages.&lt;/p&gt;

&lt;p&gt;Here's a code sample of the server listening for the &lt;code&gt;zoom&lt;/code&gt; event and emitting it to other applications.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;http&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;http&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;server&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createServer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Server&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;socket.io&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;io&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Server&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;server&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;static&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;public&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

&lt;span class="nx"&gt;io&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;connection&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;a user connected&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="nx"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;zoom&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;io&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;emit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;zoom&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;server&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8080&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;listening on *:8080&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#figma-plugin"&gt;
  &lt;/a&gt;
  Figma plugin
&lt;/h2&gt;

&lt;p&gt;On the Figma side, there's two parts. A &lt;code&gt;ui.html&lt;/code&gt; file is usually responsible for showing the UI of the plugin and a &lt;code&gt;code.js&lt;/code&gt; file is reponsible for the logic.&lt;br&gt;
My html file starts the socket connection by listening to the same port as the one used in my Express server and sends the events to my JavaScript file.&lt;/p&gt;

&lt;p&gt;For example, here's a sample to implement the "Zoom" functionality:&lt;/p&gt;

&lt;p&gt;In &lt;code&gt;ui.html&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.4.1/socket.io.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;socket&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;io&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ws://localhost:8080&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;transports&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;websocket&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
  &lt;span class="c1"&gt;// Zoom zoom&lt;/span&gt;
  &lt;span class="nx"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;zoom&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;postMessage&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;pluginMessage&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;zoom&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;msg&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;*&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In &lt;code&gt;code.js&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;figma&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;showUI&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__html__&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;figma&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ui&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hide&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nx"&gt;figma&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ui&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onmessage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Messages sent from ui.html&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;zoom&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;normalizedZoom&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;normalize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;figma&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;viewport&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;zoom&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;normalizedZoom&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;normalize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;min&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;min&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;min&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;max&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;min&lt;/span&gt;&lt;span class="p"&gt;)));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;According to the Figma docs, the zoom level needs to be a number between 0 and 1, so I am normalizing the coordinates I get from the hand detection app to be a value between 0 and 1.&lt;/p&gt;

&lt;p&gt;So as I move my hands closer or further apart, I am zooming in or out on the design.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c71uSx7H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ewfigpcdyuin51apewe0.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c71uSx7H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ewfigpcdyuin51apewe0.gif" alt="Gif showing me moving my hands closer and further apart to zoom in and out of a UI design" width="880" height="519"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It's a pretty quick walkthrough but from there, any custom gesture from the frontend can be sent to Figma and used to trigger layers, create shapes, change colors, etc!&lt;/p&gt;

&lt;p&gt;Having to run a separate app to be able to do this is not optimal but I doubt Figma will ever enable access to the &lt;code&gt;getUserMedia&lt;/code&gt; Web API in a plugin so in the meantime, that was an interesting workaround to figure out!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>machinelearning</category>
      <category>tensorflow</category>
      <category>tfjs</category>
    </item>
    <item>
      <title>Configuring AWS with terraform using Ubuntu</title>
      <author>Tolulope Adeleke</author>
      <pubDate>Thu, 20 Jan 2022 19:51:37 +0000</pubDate>
      <link>https://dev.to/tioluwaniope/configuring-aws-with-terraform-using-ubuntu-42mn</link>
      <guid>https://dev.to/tioluwaniope/configuring-aws-with-terraform-using-ubuntu-42mn</guid>
      <description>&lt;p&gt;&lt;em&gt;Hello there 🙋‍♀️&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I will be sharing the basic steps on how to configure AWS with terraform using Ubuntu. If you're a beginner, this will definitely save you some time and energy.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Here we go... Yayyy&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Hey...&lt;strong&gt;You need to have an AWS account&lt;/strong&gt; you might want to try the free access account as a beginner.&lt;/p&gt;

&lt;p&gt;You need to download your &lt;strong&gt;&lt;em&gt;VMware workstation pro&lt;/em&gt;&lt;/strong&gt; (&lt;strong&gt;Make sure it is the latest version of Ubuntu&lt;/strong&gt;). It is quite heavy and takes a very long time to download and install this. &lt;/p&gt;

&lt;p&gt;Make sure to remember your Credentials (Username and Password) while installing your VMware. Note, this is very important&lt;/p&gt;

&lt;p&gt;&lt;em&gt;You should get this after installation&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It starts from here;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--192NQwik--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/73l9v90oggp5ah9xndo9.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--192NQwik--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/73l9v90oggp5ah9xndo9.PNG" alt="Image description" width="494" height="445"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;and ends here...&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---l3EROk9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n2v0qe3nvkz64945ijyx.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---l3EROk9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n2v0qe3nvkz64945ijyx.PNG" alt="Image description" width="880" height="509"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you follow this steps clearly, you should get &lt;strong&gt;terraform installed on your VMware workstation pro&lt;/strong&gt;. Here are the steps in order;&lt;/p&gt;

&lt;p&gt;On your platform, search for &lt;strong&gt;&lt;em&gt;terminal&lt;/em&gt;&lt;/strong&gt; then click on it to get started. Now run the following commands;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. wget &lt;a href="https://releases.hashicorp.com/terraform/1.1.3/terraform_1.1.3_linux_amd64.zip"&gt;https://releases.hashicorp.com/terraform/1.1.3/terraform_1.1.3_linux_amd64.zip&lt;/a&gt; (always confirm the latest version)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. sudo apt-get install zip -y&lt;/strong&gt; (Sudo means superuser do or substitute user do)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. unzip terraform*.zip&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4.sudo mv terraform /usr/local/bin&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. terraform --version&lt;/strong&gt;  or &lt;strong&gt;terraform -v&lt;/strong&gt; (this will give you the version of terraform you installed)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6. mkdir  /terraform&lt;/strong&gt; (this has to do with directory)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;7. cd /terraform&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;8. vim config.tf&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You should get this after running those commands;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7CF-wLGQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5fixlx45tyipr9lrh5em.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7CF-wLGQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5fixlx45tyipr9lrh5em.jpg" alt="Image description" width="607" height="722"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;If you have gotten this far...Kudos&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;9. You have to fill this in for configuration&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;provider "aws" {&lt;br&gt;
  project     = "my-project-id"&lt;br&gt;
  region      = "us-central1"&lt;br&gt;
}&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;You can leave the page by clicking on (esc ,then shift and : then type wq) with this you can leave the page, so as to go back to continue with deployment.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;10. Now run terraform innit&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Now log in to the AWS Management Console&lt;/strong&gt; click on your name on the dashboard, scroll down to security credentials. Copy the Access keys(access key ID and secret access key)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1qx4dWhD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5ciuxxl26matme7nreog.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1qx4dWhD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5ciuxxl26matme7nreog.PNG" alt="Image description" width="880" height="438"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_3a9FYVX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u0aaqmfp9it8ywv23gaf.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_3a9FYVX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u0aaqmfp9it8ywv23gaf.PNG" alt="Image description" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;11. sudo snap install aws-cli --classic&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;12. aws configure&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;fill all the required credentials here&lt;/em&gt; (credentials from step 10)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;13. mkdir  /terraform&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;14. cd /terraform&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;15. touch main.tf&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Make sure to fill in this command, it should appear like this&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zMLkuzqX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/48lvgok5va92dimfe61f.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zMLkuzqX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/48lvgok5va92dimfe61f.jpeg" alt="Image description" width="727" height="554"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;16. Now run terraform innit&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;17. terraform plan&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;18. terraform apply&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Now go to your AWS Console to check your deployment&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;That is all!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VriRxY3c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rhjagrjbd25dakd2xo9t.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VriRxY3c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rhjagrjbd25dakd2xo9t.jpg" alt="Image description" width="591" height="591"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;well done...  If you have gotten this far, Kudos&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;See you on my next blog&lt;/em&gt;👊&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>beginners</category>
      <category>terraform</category>
      <category>github</category>
    </item>
    <item>
      <title>React.js Core Concepts</title>
      <author>Suresh Pal Pranta</author>
      <pubDate>Thu, 20 Jan 2022 19:16:28 +0000</pubDate>
      <link>https://dev.to/pranta07/reactjs-core-concepts-51ha</link>
      <guid>https://dev.to/pranta07/reactjs-core-concepts-51ha</guid>
      <description>&lt;h2&gt;
  &lt;a href="#reactjs-and-its-pros-amp-cons"&gt;
  &lt;/a&gt;
  React.js and its pros &amp;amp; cons
&lt;/h2&gt;

&lt;p&gt;React is a declarative, component-based JavaScript library for building user interfaces.&lt;br&gt;
Pros:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Use virtual DOM to effectively render user interfaces.&lt;/li&gt;
&lt;li&gt;Supports component-based design which is reusable and easy to manage.&lt;/li&gt;
&lt;li&gt;Single page application means rendering different components on the same page efficiently without any reload. Which makes a better user experience. &lt;/li&gt;
&lt;li&gt;The HTML-like syntax is easy to learn and use.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Cons:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Continuously updated features which is a bit challenging for developers to cope up with new documentation. &lt;/li&gt;
&lt;li&gt;Still contains class-based components example in documentation instead of functional components.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#jsx"&gt;
  &lt;/a&gt;
  JSX
&lt;/h2&gt;

&lt;p&gt;JSX means JavaScript XML which allows HTML-like syntax with JavaScript in react. Using JSX we can create dynamic content in our react application easily. Without JSX the code is a bit lengthy and complex while using JSX the code is simple and easy to understand. Babel is used by React to convert the JSX to React elements.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React from "react";
const Blogs = () =&amp;gt; {
    return (
        &amp;lt;div&amp;gt;
            &amp;lt;img
                src="https://i.ibb.co/2SfqRWr/maxresdefault.jpg"
                alt=""
                width="100%"
            /&amp;gt;
        &amp;lt;/div&amp;gt;
    );
};

export default Blogs;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above code snippet inside the return statement it looks like html syntax actually it is JSX notation which makes us easier to understand what our code structure will looks like.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#virtual-dom"&gt;
  &lt;/a&gt;
  Virtual DOM
&lt;/h2&gt;

&lt;p&gt;It is a virtual representation or copy of the real DOM object. Whenever anything changes in our document react will create a new virtual DOM and compare it with the previous DOM, find out the change between these two DOMs using diff algorithm and finally update the specific changes into the real DOM without updating the entire dom. This makes DOM-manipulation more effective without updating the entire DOM whenever a small part of the DOM is changed.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#props-and-state"&gt;
  &lt;/a&gt;
  Props and State
&lt;/h2&gt;

&lt;p&gt;Props are mainly used for passing dynamic data from parent component to child components while the state is a variable that is used to store information about a specific component and that can be changed dynamically. Props are read-only and immutable which means we can not change props. When the state changes re-render will happen dynamically.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React from "react";
const Blogs = () =&amp;gt; {
    const blogs = ["blog1","blog2","blog3","blog4","blog5",]
    return (
        blogs.map(blogTitle =&amp;gt; &amp;lt;Blog title={blogTitle}&amp;gt;&amp;lt;/Blog&amp;gt;)
    );
};
export default Blogs;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React from "react";
const Blog = (props) =&amp;gt; {
    const {title} = props;
    return (
        &amp;lt;h1&amp;gt;{title}&amp;lt;/h1&amp;gt;
    );
};
export default Blog;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#lifting-state-up"&gt;
  &lt;/a&gt;
  Lifting State Up
&lt;/h2&gt;

&lt;p&gt;We cannot pass states from child to parent component. React follows a top-down approach for passing state between many level components. When a parent component needs the state we need to lift the state up to the parent component and pass this as a prop to the child components. This is called &lt;code&gt;lifting state up&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#props-drilling-and-context-api"&gt;
  &lt;/a&gt;
  Props Drilling and Context API
&lt;/h2&gt;

&lt;p&gt;When data are passed from component to component by props on a deeper level this is called props drilling.&lt;br&gt;
The best way to pass data 4-5 layers down is using context API. Context API is used to pass multiple data all over the document which is simple and easy to use. Whenever we need to share multiple data between many level components we can use context API to provide those data to the whole document. &lt;br&gt;
First, we have to create a context then we have to wrap our document between context Providers where we should specify the value we want to pass. We can get the value we provide from anywhere with the help of &lt;code&gt;useContext&lt;/code&gt; hook.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#custom-hook"&gt;
  &lt;/a&gt;
  Custom hook
&lt;/h2&gt;

&lt;p&gt;Hooks are mainly a JavaScript function that can perform some task and returns the results we need. Building our own custom hook will help us to simplify our code which is easy to understand. For creating a custom hook we have to create a JavaScript function and export it so that it can be imported from any component we want and use it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { useState } from "react";

const useProducts = () =&amp;gt; {
    const [products, setProducts] = useState([]);
    fetch(url)
    .then(res =&amp;gt; res.json())
    .then(data =&amp;gt; setProducts(data));
    return { products };
};

export default useProducts;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const products = useProducts();
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#performance-optimization"&gt;
  &lt;/a&gt;
  Performance Optimization
&lt;/h2&gt;

&lt;p&gt;To optimize a react.js app we should try to divide different parts of our application into smaller chunks, use react fragments to avoid unnecessary elements for wrapping, try to avoid using an index as a key for the map, using useMemo, pure component, use of spread operator, passing object as props, etc. which will prevent unnecessary component re-render in React.js.&lt;/p&gt;

</description>
      <category>blogging</category>
    </item>
    <item>
      <title>Using GitHub Codespaces with VNC/flexbox to create Pokémon maps from a web browser</title>
      <author>lowlighter 🦑</author>
      <pubDate>Thu, 20 Jan 2022 18:55:10 +0000</pubDate>
      <link>https://dev.to/lowlighter/using-github-codespaces-with-vncflexbox-to-create-pokemon-maps-from-a-web-browser-3ch6</link>
      <guid>https://dev.to/lowlighter/using-github-codespaces-with-vncflexbox-to-create-pokemon-maps-from-a-web-browser-3ch6</guid>
      <description>&lt;p&gt;Hi there 👋 !&lt;/p&gt;

&lt;p&gt;I'm currently working on a cool project, &lt;a href="https://github.com/lowlighter/gracidea"&gt;&lt;code&gt;🌺 Gracidea&lt;/code&gt;&lt;/a&gt;, which is an animated Pokémon live web map aiming to recreate the whole Pokémon world while being accessible directly from your browser:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jUtbE0Cn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lyf7bw0x2tm9kbqsw8x7.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jUtbE0Cn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lyf7bw0x2tm9kbqsw8x7.gif" alt="Gracidea preview" width="600" height="302"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I use a combination of several technologies, like &lt;a href="//deno.land"&gt;deno&lt;/a&gt;, &lt;a href="https://pixijs.com"&gt;pixi.js&lt;/a&gt;, &lt;a href="https://vercel.com"&gt;vercel.com&lt;/a&gt; and &lt;a href="https://www.mapeditor.org"&gt;Tiled map editor&lt;/a&gt; along additional other tools. Some of these, like Tiled, are graphical desktop apps so they need to be installed first.&lt;/p&gt;

&lt;p&gt;Which made wonder, what if it was possible to provide a graphic environment to access desktop apps and edit maps directly from a web browser... 🤔 ?&lt;/p&gt;

&lt;p&gt;And it is 🥳 !&lt;/p&gt;

&lt;p&gt;If you don't know, GitHub offers &lt;a href="https://github.com/features/codespaces"&gt;codespaces&lt;/a&gt; which lets you spawn a web-accessible docker instance from a repository with VS Code pre-installed. However, not many people know that it is actually possible to configure the dockerfile through the &lt;code&gt;.devcontainer&lt;/code&gt; folder of said repository.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sh0g9--i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/84lvivmxh4bg8ozwxcyg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sh0g9--i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/84lvivmxh4bg8ozwxcyg.png" alt="Codespaces" width="880" height="479"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;ℹ️ Note: Seems that this feature is in closed beta for users accounts&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;After playing a bit with &lt;a href="https://github.com/microsoft/vscode-dev-containers/blob/main/script-library/docs/desktop-lite.md"&gt;Microsoft's vscode-dev-containers' lightweight desktop&lt;/a&gt; I achieved to configure vnc and flexbox (the provided desktop env) to spawn a full-screen instance of Tiled!&lt;/p&gt;

&lt;p&gt;Below's a preview of the whole thing, in Firefox (yes, everything is happening in the browser !😮)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gQi4b4NI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/78ctqtvyjxlgpkjry90e.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gQi4b4NI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/78ctqtvyjxlgpkjry90e.gif" alt="Codespaces preview" width="600" height="339"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So yeah, basically all you need to setup this project now is just a web browser, no headaches caused by "but it works on my machine 😵 !"&lt;/p&gt;

&lt;p&gt;If you're interested in the required code to make this works, it is available &lt;a href="https://github.com/lowlighter/gracidea/tree/main/.devcontainer"&gt;here&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;Thanks for reading 💕 !&lt;/p&gt;

</description>
      <category>github</category>
      <category>showdev</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Safari 15’s IndexedDB Vulnerability, An Attack of the Wordle Clones, &amp; more on DevNews</title>
      <author>dev.to staff</author>
      <pubDate>Thu, 20 Jan 2022 18:50:57 +0000</pubDate>
      <link>https://dev.to/devteam/safari-15s-indexeddb-vulnerability-an-attack-of-the-wordle-clones-more-on-devnews-3ljh</link>
      <guid>https://dev.to/devteam/safari-15s-indexeddb-vulnerability-an-attack-of-the-wordle-clones-more-on-devnews-3ljh</guid>
      <description>&lt;p&gt;Tough luck for now if your browser uses WebKit 😬 &lt;/p&gt;

&lt;p&gt;Listen to that story and many more on this week's episode of the DevNews podcast&lt;/p&gt;


&lt;div class="podcastliquidtag"&gt;
  &lt;div class="podcastliquidtag__info"&gt;
    &lt;a href="/devnews/s7-e2-safari-15-s-indexeddb-vulnerability-an-attack-of-the-wordle-clones-walmart-ponders-nfts-and-more"&gt;
      &lt;h1 class="podcastliquidtag__info__episodetitle"&gt;S7:E2 - Safari 15’s IndexedDB Vulnerability, An Attack of the Wordle Clones, Walmart Ponders NFTs, and More&lt;/h1&gt;
    &lt;/a&gt;
    &lt;a href="/devnews"&gt;
      &lt;h2 class="podcastliquidtag__info__podcasttitle"&gt;
        DevNews
      &lt;/h2&gt;
    &lt;/a&gt;
  &lt;/div&gt;
  &lt;div id="record-s7-e2-safari-15-s-indexeddb-vulnerability-an-attack-of-the-wordle-clones-walmart-ponders-nfts-and-more" class="podcastliquidtag__record"&gt;
    &lt;img class="button play-butt" id="play-butt-s7-e2-safari-15-s-indexeddb-vulnerability-an-attack-of-the-wordle-clones-walmart-ponders-nfts-and-more" src="https://res.cloudinary.com/practicaldev/image/fetch/s--1SirfZpJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/playbutt-5e444a2eae28832efea0dec3342ccf28a228b326c47f46700d771801f75d6b88.png" alt="play"&gt;
    &lt;img class="button pause-butt" id="pause-butt-s7-e2-safari-15-s-indexeddb-vulnerability-an-attack-of-the-wordle-clones-walmart-ponders-nfts-and-more" src="https://res.cloudinary.com/practicaldev/image/fetch/s--8YU2a2mP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/pausebutt-bba7cb5f432cfb16510e78835378fa22f45fa6ae52a624f7c9794fefa765c384.png" alt="pause"&gt;
    &lt;img class="podcastliquidtag__podcastimage" id="podcastimage-s7-e2-safari-15-s-indexeddb-vulnerability-an-attack-of-the-wordle-clones-walmart-ponders-nfts-and-more" alt="DevNews" src="https://res.cloudinary.com/practicaldev/image/fetch/s--jJPvwj98--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--XOSCOlKI--/c_fill%2Cf_auto%2Cfl_progressive%2Cq_auto/https://dev-to-uploads.s3.amazonaws.com/uploads/podcast/image/346/5b0bd095-4a8c-4449-a43d-9e9b154b9d09.png"&gt;
  &lt;/div&gt;

  &lt;div class="hidden-audio" id="hidden-audio-s7-e2-safari-15-s-indexeddb-vulnerability-an-attack-of-the-wordle-clones-walmart-ponders-nfts-and-more"&gt;
  
    
    Your browser does not support the audio element.
  
  &lt;div id="progressBar" class="audio-player-display"&gt;
    &lt;a href="/devnews/s7-e2-safari-15-s-indexeddb-vulnerability-an-attack-of-the-wordle-clones-walmart-ponders-nfts-and-more"&gt;
      &lt;img id="episode-profile-image" alt="S7:E2 - Safari 15’s IndexedDB Vulnerability, An Attack of the Wordle Clones, Walmart Ponders NFTs, and More" width="420" height="420" src="https://res.cloudinary.com/practicaldev/image/fetch/s--84VpOv6S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--3GWkSFQs--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_420%2Cq_auto%2Cw_420/https://dev-to-uploads.s3.amazonaws.com/uploads/podcast/image/346/5b0bd095-4a8c-4449-a43d-9e9b154b9d09.png"&gt;
      &lt;img id="animated-bars" src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZzrPEFmt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev.to/assets/animated-bars-4e8c57c8b58285fcf7d123680ad8af034cd5cd43b4d9209fe3aab49d1e9d77b3.gif" alt="animated volume bars"&gt;
    &lt;/a&gt;
    &lt;span id="barPlayPause"&gt;
      &lt;img class="butt play-butt" alt="play" src="https://res.cloudinary.com/practicaldev/image/fetch/s--1SirfZpJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/playbutt-5e444a2eae28832efea0dec3342ccf28a228b326c47f46700d771801f75d6b88.png"&gt;
      &lt;img class="butt pause-butt" alt="pause" src="https://res.cloudinary.com/practicaldev/image/fetch/s--8YU2a2mP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/pausebutt-bba7cb5f432cfb16510e78835378fa22f45fa6ae52a624f7c9794fefa765c384.png"&gt;
    &lt;/span&gt;
    &lt;span id="volume"&gt;
      &lt;span id="volumeindicator" class="volume-icon-wrapper showing"&gt;
        &lt;span id="volbutt"&gt;
          &lt;img alt="volume" class="icon-img" height="16" width="16" src="https://res.cloudinary.com/practicaldev/image/fetch/s--vTou7JP3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/volume-cd20707230ae3fc117b02de53c72af742cf7d666007e16e12f7ac11ebd8130a7.png"&gt;
        &lt;/span&gt;
        &lt;span class="range-wrapper"&gt;
          
        &lt;/span&gt;
      &lt;/span&gt;
      &lt;span id="mutebutt" class="volume-icon-wrapper hidden"&gt;
        &lt;img alt="volume-mute" class="icon-img" height="16" width="16" src="https://res.cloudinary.com/practicaldev/image/fetch/s--OX5NjT0t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/volume-mute-8f08ec668105565af8f8394eb18ab63acb386adbe0703afe3748eca8f2ecbf3b.png"&gt;
      &lt;/span&gt;
      &lt;span class="speed" id="speed"&gt;1x&lt;/span&gt;
    &lt;/span&gt;
    &lt;span class="buffer-wrapper" id="bufferwrapper"&gt;
      &lt;span id="buffer"&gt;&lt;/span&gt;
      &lt;span id="progress"&gt;&lt;/span&gt;
      &lt;span id="time"&gt;initializing...&lt;/span&gt;
      &lt;span id="closebutt"&gt;×&lt;/span&gt;
    &lt;/span&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;


&lt;p&gt;&lt;em&gt;As a refresher, DevNews is the news show for developers by developers. Each season, our hosts cover the latest in the world of tech, and speak with diverse guests from a variety of backgrounds to dig deep into meaty topics such as security, the pros and cons of outsourcing your authentication, and the latest bugs and hacks.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Hosts:&lt;/strong&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a class="mentioned-user" href="https://dev.to/saronyitbarek"&gt;@saronyitbarek&lt;/a&gt; is the founder of Disco, founder of &lt;a href="https://community.codenewbie.org"&gt;CodeNewbie&lt;/a&gt; host of the &lt;a href="https://dev.to/codenewbie"&gt;CodeNewbie Podcast&lt;/a&gt;, and co-host of the &lt;a href="https://dev.to/basecspodcast"&gt;base.cs podcast&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;a class="mentioned-user" href="https://dev.to/joshpuetz"&gt;@joshpuetz&lt;/a&gt; is the Principal Software Engineer at &lt;a href="https://forem.com"&gt;Forem&lt;/a&gt; — the open source community software that powers DEV, CodeNewbie and a growing number of other online communities.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Guest:&lt;/strong&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Valentin Vasilyev&lt;/strong&gt; is an entrepreneur and open source enthusiast. He Co-founded FingerprintJS in 2020 based on the GitHub project he started in 2012&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In this episode, we talk about Walmart’s plans to get into NFTs and cryptocurrency, telecom operators starting to block Apple’s iCloud Private Relay, and an attack of the Wordle clones. Then we speak with Valentin Vasilyev, co-Founder and CTO at FingerprintJS, whose team spotted a vulnerability in Safari 15’s IndexedDB API.&lt;/p&gt;




&lt;p&gt;&lt;em&gt;You can &lt;a href="//dev.to/devnews"&gt;follow DevNews&lt;/a&gt; to get episode notifications and listen right in your feed&lt;/em&gt; &lt;em&gt;— or subscribe on your platform of choice! Plus, if you leave us a review, we'll send you a free pack of thank-you stickers. Details &lt;a href="https://airtable.com/shr8oKAIMZgdYnBxx"&gt;here&lt;/a&gt;.&lt;/em&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#quick-listening-links"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Quick Listening Links&lt;/strong&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://podcasts.apple.com/us/podcast/s7-e2-safari-15s-indexeddb-vulnerability-an-attack/id1525581923?i=1000548454367"&gt;Apple Podcasts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://open.spotify.com/episode/3vYkrY9EIGSMSxDBRDnU90"&gt;Spotify&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://podcasts.google.com/feed/aHR0cDovL2ZlZWRzLmNvZGVuZXdiaWUub3JnL2Rldm5ld3NfcG9kY2FzdC54bWw/episode/aHR0cHM6Ly9kZXZwb2RzLmRldi9wb2RjYXN0cy9kZXZuZXdzLzUw?sa=X&amp;amp;ved=0CAQQkfYCahcKEwj4m-Kr_8D1AhUAAAAAHQAAAAAQCg"&gt;Google&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.stitcher.com/show/devnews/episode/s7-e2-safari-15s-indexeddb-vulnerability-an-attack-of-the-wordle-clones-walmart-ponders-nfts-and-more-89841316"&gt;Stitcher&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.listennotes.com/podcasts/devnews/s7e2-safari-15s-indexeddb-5_N37Pcq2AM/"&gt;Listen Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tunein.com/podcasts/Technology-Podcasts/DevNews-p1352512/?topicId=169156078"&gt;TuneIn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://feeds.codenewbie.org/devnews_podcast.xml"&gt;RSS Feed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://devpods.herokuapp.com/podcasts/devnews/episodes/243"&gt;DEV Pods website&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#acknowledgements"&gt;
  &lt;/a&gt;
  &lt;em&gt;Acknowledgements&lt;/em&gt;
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;&lt;a class="mentioned-user" href="https://dev.to/levisharpe"&gt;@levisharpe&lt;/a&gt; for producing &amp;amp; mixing the show&lt;/em&gt; &lt;/li&gt;
&lt;li&gt;Our Season 7 Sponsor: &lt;a href="https://scoutapm.com/?utm_campaign=ad_q2_2021&amp;amp;utm_content=sponsored&amp;amp;utm_medium=podcast&amp;amp;utm_source=devnews"&gt;Scout APM&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We hope you enjoy this kickoff to a new season of DevNews 📰 &lt;/p&gt;

</description>
      <category>news</category>
      <category>podcast</category>
      <category>devnews</category>
    </item>
    <item>
      <title>Git Cheat Sheet 📄 (50 commands + Free PDF and poster)</title>
      <author>Danny Adams</author>
      <pubDate>Thu, 20 Jan 2022 18:49:47 +0000</pubDate>
      <link>https://dev.to/doabledanny/git-cheat-sheet-50-commands-free-pdf-and-poster-4gcn</link>
      <guid>https://dev.to/doabledanny/git-cheat-sheet-50-commands-free-pdf-and-poster-4gcn</guid>
      <description>&lt;p&gt;I was tired of looking up the same common Git commands - so I made a cheat sheet that I could print and put on my office wall.&lt;/p&gt;

&lt;p&gt;This cheat sheet contains 50 commonly used Git commands on the following topics:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Setting up Git&lt;/li&gt;
&lt;li&gt;Starting a project&lt;/li&gt;
&lt;li&gt;Making a change&lt;/li&gt;
&lt;li&gt;Basic concepts&lt;/li&gt;
&lt;li&gt;Branching&lt;/li&gt;
&lt;li&gt;Merging&lt;/li&gt;
&lt;li&gt;Rebasing&lt;/li&gt;
&lt;li&gt;Undoing things&lt;/li&gt;
&lt;li&gt;Reviewing your repo&lt;/li&gt;
&lt;li&gt;Stashing&lt;/li&gt;
&lt;li&gt;Synchronising local and remote repositories&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#free-git-commands-cheat-sheet-pdf"&gt;
  &lt;/a&gt;
  FREE Git Commands Cheat Sheet PDF
&lt;/h2&gt;

&lt;p&gt;One page PDF to make it easy to copy and paste in commands.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://doabledanny.gumroad.com/l/git-commands-cheat-sheet-pdf"&gt;Download the free Git Commands Cheat Sheet PDF here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Both PDF and poster are available in Light Mode and Dark Mode:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Zib71Fgv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n082uxea33j6zq3mca7u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Zib71Fgv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n082uxea33j6zq3mca7u.png" alt="Git cheat sheet poster in light mode" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--w-UEE2WQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8cl1lotlaikqp8vhhr6i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w-UEE2WQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8cl1lotlaikqp8vhhr6i.png" alt="Git cheat sheet poster in dark mode" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#git-cheat-sheet-poster"&gt;
  &lt;/a&gt;
  Git Cheat Sheet Poster
&lt;/h2&gt;

&lt;p&gt;Order a physical A3 poster for your office wall - so you can quickly look up commands, and keep them at the top of your head.&lt;/p&gt;

&lt;p&gt;It comes in thick durable paper, and a matte, light-absorbing finish.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://doabledanny.gumroad.com/l/git-cheat-sheet-poster"&gt;Order a Git Cheat Sheet Poster here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here's mine on my office wall:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XUn-4X_T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/60mjbucqvp3ojsq0fowy.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XUn-4X_T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/60mjbucqvp3ojsq0fowy.jpg" alt="The Git cheat sheet poster on my office wall" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here are all of the commands from the cheat sheet:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setup"&gt;
  &lt;/a&gt;
  Setup
&lt;/h2&gt;

&lt;p&gt;Set the name and email that will be attached to your commits and tags&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git config &lt;span class="nt"&gt;--global&lt;/span&gt; user.name &lt;span class="s2"&gt;"Danny Adams"&lt;/span&gt;

&lt;span class="nv"&gt;$ &lt;/span&gt;git config &lt;span class="nt"&gt;--global&lt;/span&gt; user.email &lt;span class="s2"&gt;"myemail@gmail.com"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#starting-a-project-with-git"&gt;
  &lt;/a&gt;
  Starting a Project with Git
&lt;/h2&gt;

&lt;p&gt;Create a local repo (omit &lt;code&gt;&amp;lt;directory&amp;gt;&lt;/code&gt; to initialise the current directory as a git repo)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git init &amp;lt;directory&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Download a remote repo&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git clone &amp;lt;url&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#make-a-change"&gt;
  &lt;/a&gt;
  Make a Change
&lt;/h2&gt;

&lt;p&gt;Add a file to staging&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git add &amp;lt;file&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Stage all files&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git add &lt;span class="nb"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Commit all staged files to git&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git commit &lt;span class="nt"&gt;-m&lt;/span&gt; &lt;span class="s2"&gt;"commit message"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Add all changes made to tracked files &amp;amp; commit&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git commit &lt;span class="nt"&gt;-am&lt;/span&gt; &lt;span class="s2"&gt;"commit message"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#basic-git-concepts"&gt;
  &lt;/a&gt;
  Basic Git Concepts
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;main&lt;/strong&gt;: default development branch&lt;br&gt;
&lt;strong&gt;origin&lt;/strong&gt;: default upstream repo&lt;br&gt;
&lt;strong&gt;HEAD&lt;/strong&gt;: current branch&lt;br&gt;
&lt;strong&gt;HEAD^&lt;/strong&gt;: parent of HEAD&lt;br&gt;
&lt;strong&gt;HEAD~4&lt;/strong&gt;: great-great grandparent of HEAD&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#branches"&gt;
  &lt;/a&gt;
  Branches
&lt;/h2&gt;

&lt;p&gt;List all local branches. Add &lt;code&gt;-r&lt;/code&gt; flag to show all remote branches. &lt;code&gt;-a&lt;/code&gt; flag for all branches.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git branch
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create a new branch&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git branch &amp;lt;new-branch&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Switch to a branch &amp;amp; update the working directory&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git checkout &amp;lt;branch&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create a new branch and switch to it&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git checkout &lt;span class="nt"&gt;-b&lt;/span&gt; &amp;lt;newbranch&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Delete a merged branch&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git branch &lt;span class="nt"&gt;-d&lt;/span&gt; &amp;lt;branch&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Delete a branch, whether merged or&lt;br&gt;
not&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git branch &lt;span class="nt"&gt;-D&lt;/span&gt; &amp;lt;branch&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Add a tag to current commit (often used for new version releases)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git tag &amp;lt;tag-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#merging"&gt;
  &lt;/a&gt;
  Merging
&lt;/h2&gt;

&lt;p&gt;Merge branch &lt;code&gt;a&lt;/code&gt; into branch &lt;code&gt;b&lt;/code&gt;. Add &lt;code&gt;--no-ff&lt;/code&gt; option for no-fast-forward merge&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P-4I6vZM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2zpi27oxqws7j39iaxs2.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P-4I6vZM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2zpi27oxqws7j39iaxs2.PNG" alt="fast-forward vs no-fast-forward merge in Git" width="594" height="429"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git checkout b

&lt;span class="nv"&gt;$ &lt;/span&gt;git merge a
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Merge &amp;amp; squash all commits into one new commit&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git merge &lt;span class="nt"&gt;--squash&lt;/span&gt; a
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#rebasing"&gt;
  &lt;/a&gt;
  Rebasing
&lt;/h2&gt;

&lt;p&gt;Rebase feature branch onto main (to incorporate new changes made to main). Prevents unnecessary merge commits into feature, keeping history clean&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6pTlAeTV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/99lln9qgsiiwz8w18vdp.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6pTlAeTV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/99lln9qgsiiwz8w18vdp.PNG" alt="Rebasing feature onto main in Git" width="634" height="300"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git checkout feature

&lt;span class="nv"&gt;$ &lt;/span&gt;git rebase main
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Interactively clean up a branches commits before rebasing onto main&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git rebase &lt;span class="nt"&gt;-i&lt;/span&gt; main
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Interactively rebase the last 3 commits on current branch&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git rebase &lt;span class="nt"&gt;-i&lt;/span&gt; Head~3
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#undoing-things"&gt;
  &lt;/a&gt;
  Undoing Things
&lt;/h2&gt;

&lt;p&gt;Move (&amp;amp;/or rename) a file &amp;amp; stage move&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git &lt;span class="nb"&gt;mv&lt;/span&gt; &amp;lt;existing_path&amp;gt; &amp;lt;new_path&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Remove a file from working directory &amp;amp; staging area, then stage the removal&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git &lt;span class="nb"&gt;rm&lt;/span&gt; &amp;lt;file&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Remove from staging area only&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git &lt;span class="nb"&gt;rm&lt;/span&gt; &lt;span class="nt"&gt;--cached&lt;/span&gt; &amp;lt;file&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;View a previous commit (READ only)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git checkout &amp;lt;commit_ID&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create a new commit, reverting the changes from a specified commit&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git revert &amp;lt;commit_ID&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Go back to a previous commit &amp;amp; delete all commits ahead of it (revert is safer). Add &lt;code&gt;--hard&lt;/code&gt; flag to also delete workspace changes (BE VERY CAREFUL)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git reset &amp;lt;commit_ID&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#review-your-repo"&gt;
  &lt;/a&gt;
  Review your Repo
&lt;/h2&gt;

&lt;p&gt;List new or modified files not yet committed&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git status
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;List commit history, with respective IDs&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git log &lt;span class="nt"&gt;--oneline&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Show changes to unstaged files. For changes to staged files, add &lt;code&gt;--cached&lt;/code&gt; option&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git diff
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Show changes between two commits&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git diff commit1_ID commit2_ID
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#stashing"&gt;
  &lt;/a&gt;
  Stashing
&lt;/h2&gt;

&lt;p&gt;Store modified &amp;amp; staged changes. To include untracked files, add &lt;code&gt;-u&lt;/code&gt; flag. For untracked &amp;amp; ignored files, add &lt;code&gt;-a&lt;/code&gt; flag.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git stash
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As above, but add a comment.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git stash save &lt;span class="s2"&gt;"comment"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Partial stash. Stash just a single file, a collection of files, or individual changes from within files&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git stash &lt;span class="nt"&gt;-p&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;List all stashes&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git stash list
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Re-apply the stash without deleting it&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git stash apply
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Re-apply the stash at index 2, then delete it from the stash list. Omit &lt;code&gt;stash@{n}&lt;/code&gt; to pop the most recent stash.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git stash pop stash@&lt;span class="o"&gt;{&lt;/span&gt;2&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Show the diff summary of stash 1. Pass the &lt;code&gt;-p&lt;/code&gt; flag to see the full diff.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git stash show stash@&lt;span class="o"&gt;{&lt;/span&gt;1&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Delete stash at index 1. Omit &lt;code&gt;stash@{n}&lt;/code&gt; to delete last stash made&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git stash drop stash@&lt;span class="o"&gt;{&lt;/span&gt;1&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Delete all stashes&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git stash clear
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#synchronizing"&gt;
  &lt;/a&gt;
  Synchronizing
&lt;/h2&gt;

&lt;p&gt;Add a remote repo&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git remote add &amp;lt;&lt;span class="nb"&gt;alias&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &amp;lt;url&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;View all remote connections. Add &lt;code&gt;-v&lt;/code&gt; flag to view urls.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git remote
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Remove a connection&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git remote remove &amp;lt;&lt;span class="nb"&gt;alias&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Rename a connection&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git remote rename &amp;lt;old&amp;gt; &amp;lt;new&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Fetch all branches from remote repo (no merge)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git fetch &amp;lt;&lt;span class="nb"&gt;alias&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Fetch a specific branch&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git fetch &amp;lt;&lt;span class="nb"&gt;alias&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &amp;lt;branch&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Fetch the remote repo's copy of the current branch, then merge&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git pull
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Move (rebase) your local changes onto the top of new changes made to the remote repo (for clean, linear history)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git pull &lt;span class="nt"&gt;--rebase&lt;/span&gt; &amp;lt;&lt;span class="nb"&gt;alias&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Upload local content to remote repo&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git push &amp;lt;&lt;span class="nb"&gt;alias&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Upload to a branch (can then pull request)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git push &amp;lt;&lt;span class="nb"&gt;alias&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &amp;lt;branch&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#thanks-for-reading"&gt;
  &lt;/a&gt;
  Thanks for reading
&lt;/h2&gt;

&lt;p&gt;Hope this cheat sheet is useful!&lt;/p&gt;

&lt;p&gt;Again, feel free to download the one-page PDF or order a poster:&lt;br&gt;
&lt;a href="https://doabledanny.gumroad.com/l/git-commands-cheat-sheet-pdf"&gt;One-page Git commands cheat sheet PDF&lt;/a&gt;&lt;br&gt;
&lt;a href="https://doabledanny.gumroad.com/l/git-cheat-sheet-poster"&gt;Order a physical poster&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For more from me, you can &lt;a href="https://twitter.com/DoableDanny"&gt;follow me on Twitter&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Cheers!&lt;/p&gt;

</description>
      <category>git</category>
      <category>github</category>
      <category>programming</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Public Speaking Class with Josh Constine</title>
      <author>Ali</author>
      <pubDate>Thu, 20 Jan 2022 18:30:00 +0000</pubDate>
      <link>https://dev.to/endingwithali/public-speaking-class-with-josh-constine-1jjo</link>
      <guid>https://dev.to/endingwithali/public-speaking-class-with-josh-constine-1jjo</guid>
      <description>&lt;p&gt;I recently had the chance to sit down in a small setting with &lt;a href="https://twitter.com/JoshConstine"&gt;Josh Constine&lt;/a&gt;, to learn about how to be a better public speaker and better moderator. I wrote notes voraciously, and wanted to share them with you:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EXVq0bGA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642702273742/R_VjFmoOE.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EXVq0bGA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642702273742/R_VjFmoOE.jpeg" alt="a group of gas station members listening to josh talk" width="880" height="572"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;you sound slower than you think when you’re speaking, but still &lt;strong&gt;try to speak a bit slower&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;the slower you speak, the less filler words you use&lt;/li&gt;
&lt;li&gt;you sound more dignified&lt;/li&gt;
&lt;li&gt;your brain can keep up with the words you’re saying&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;use &lt;strong&gt;dynamic tone&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;emphasize words that matter&lt;/li&gt;
&lt;li&gt;take pauses at end of sentences&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;“&lt;strong&gt;finish your sentence&lt;/strong&gt;” - make sure you come to the end of your sentence&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;&lt;strong&gt;ask questions with a finite ending&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;keeps speaker on edge&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;put the context at the start of the question&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;“Web3 is growing big... how do you get speaking gigs?”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;instead of&lt;/em&gt; &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;“how do you get speaking gigs? now that web3 is blowing up, there are more opportunities to find talks” &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;&lt;strong&gt;never answer for your panelist&lt;/strong&gt; - if they don't answer right away, let them have the time / give them the space to think&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;it's not on you as the moderator, to rescue the speaker&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;as a speaker, &lt;strong&gt;keep the answer hard and specific to the question&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;do not dilute the speaker’s question&lt;/li&gt;
&lt;li&gt;formulating good answers take time&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;small gestures on stage are actually really distracting → try and stay motionless&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;a little bit of gesture / posture change as a moderator is ok, but fidgeting is really noticeable&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;when you ask tough questions, be sure to &lt;strong&gt;ask in an empathetic tone&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;helps break down walls&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;as a panelist, have 3 points you want to keep going back to&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;prepare beforehand of what these three points will be - have a strategy&lt;/li&gt;
&lt;li&gt;if you don’t know the answer to a question asked, you can lead back to these 3 points&lt;/li&gt;
&lt;li&gt;3 points is easy for an audience to remember&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;if you’re being interviewed - &lt;strong&gt;prepare the interviewer with points you want to talk about&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;helps shape the direction of the conversation&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;if you need a prompt / interview helper, &lt;strong&gt;do not use your phone&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;better to have an analog prompt (piece of paper, notebook, index card, etc) to help with answering question&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;💡 &lt;strong&gt;interviewer pro-tip&lt;/strong&gt; - read the last few tweets of the person you’re interviewing! It will help you be relatable, also might be able to tie into the talk&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;listen to previous works / talks of the interviewee&lt;/strong&gt; → you can tie it into your questioning, and allows for deeper conversations / questions

&lt;ul&gt;
&lt;li&gt;It doesn’t have to be the whole thing, just a small snippet&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;pre-write your jokes&lt;/strong&gt;, even if they’re not funny

&lt;ul&gt;
&lt;li&gt;the audience will relax because bad jokes are still good jokes&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;prep calls are counter productive

&lt;ul&gt;
&lt;li&gt;vibe doesn't carry over to the interview&lt;/li&gt;
&lt;li&gt;audience wasn’t there, so if you refer to something from the prep call, audience wont understand the context&lt;/li&gt;
&lt;li&gt;email threads &amp;gt;&amp;gt;&amp;gt;&amp;gt; phone calls &lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;recommendation: have 2-3x more questions than needed

&lt;ul&gt;
&lt;li&gt;you will have flexibility and no stress of filling the time&lt;/li&gt;
&lt;li&gt;have list of questions ordered by themes

&lt;ul&gt;
&lt;li&gt;allows for organic flow of conversation&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;don’t give exact questions to speakers beforehand&lt;/strong&gt; because they’ll write canned / PR friendly answers

&lt;ul&gt;
&lt;li&gt;instead give topics and subtopics you expect to touch on&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;you can get people to talk about “thorny” or hard topics by asking them three times&lt;/li&gt;
&lt;li&gt;feel free to use “critics have said ____ how do you respond” or “people on twitter have said _____, what do you think?” to ask hard/edgy questions&lt;/li&gt;
&lt;li&gt;always know your next questions → no dead time on stage as the interviewer&lt;/li&gt;
&lt;li&gt;if you have a large number of speakers

&lt;ul&gt;
&lt;li&gt;start lightening round of questions to get speakers talking / riff

&lt;ul&gt;
&lt;li&gt;this also hooks in the listeners / audience&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;later you can ask to share a little bit more about their background and to answer a question at the same time&lt;/li&gt;
&lt;li&gt;personal and biographical questions help audience relate&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;“Give a quick 10 second intro and then answer what’s your favorite DAO right now?” &lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;get to the meat and potatoes of the talk in the beginning of the talk to be sure to give enough time for deep conversations and answers&lt;/li&gt;
&lt;li&gt;don’t be afraid to shut down long winded speakers

&lt;ul&gt;
&lt;li&gt;this is your duty as a moderator to the audience&lt;/li&gt;
&lt;li&gt;redirect to another person if they’re talking too much or back to a topic if they’re off topic&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;end panels with something future facing - “what's next?”&lt;/li&gt;
&lt;li&gt;do recaps - Josh likes to do recaps at the ends of talks

&lt;ul&gt;
&lt;li&gt;takes notes mid talk quickly (using analog means) to do recap for later&lt;/li&gt;
&lt;li&gt;helps keep audience’s memory fresh of what was covered&lt;/li&gt;
&lt;li&gt;very impressive skill to speaker bookers&lt;/li&gt;
&lt;li&gt;moderator or speaker, you should do this

&lt;ul&gt;
&lt;li&gt;josh literally will do this as a speaker by grabbing the mic and announcing things to recap&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;a good question ordering as a moderator

&lt;ol&gt;
&lt;li&gt;speed round&lt;/li&gt;
&lt;li&gt;personal/autobiographical question&lt;/li&gt;
&lt;li&gt;tactical question&lt;/li&gt;
&lt;li&gt;challenging question if needed&lt;/li&gt;
&lt;li&gt;future looking question &lt;/li&gt;
&lt;li&gt;recap&lt;/li&gt;
&lt;/ol&gt;


&lt;/li&gt;
&lt;li&gt;twitter spaces - talks do better with closed speaker loops and then allowing external listeners to ask questions&lt;/li&gt;
&lt;li&gt;breaking open shy speakers by giving them an easy question to start with&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#q-and-a"&gt;
  &lt;/a&gt;
  Q and A:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;it took Josh 4 years to start getting paid

&lt;ul&gt;
&lt;li&gt;how bad do they need you?&lt;/li&gt;
&lt;li&gt;as a reminder, you have a lot more leverage last minute for getting paid&lt;/li&gt;
&lt;li&gt;typically you want them to throw out the first number&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;looking for gigs → you can probably get paid if a conference has paid tickets and sponsorships&lt;/li&gt;
&lt;li&gt;find your core piece of credibility - “i made this and that’s why you want me to speak”

&lt;ul&gt;
&lt;li&gt;assemble your references / sources and have them easily available for people to find&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;the hardest speakers to find right now are keynote speakers

&lt;ul&gt;
&lt;li&gt;find a topic you care about and turn it into a 20 minute presentation&lt;/li&gt;
&lt;li&gt;conferences want keynote speakers&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;when do you  feel like you have mastery / competency to talk publicly about a subject?&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;💪 “Fake it till you make it”&lt;/p&gt;
&lt;/blockquote&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;how to get competency about a subject to publicly speak about it, quickly&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;get an advisor network to give advice, future insights, and to ask what are the current heated topics / debates in the field

&lt;ul&gt;
&lt;li&gt;get experts to tell you their insights&lt;/li&gt;
&lt;li&gt;read a few blog posts&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;formulate a new opinion after absorbing all this information&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;good keynotes have stats, lenses, and insights about a topic&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It was a really engaging discussion, and I'm excited to share these notes with you. Thank you Josh for taking time out of your busy schedule to talk to us! &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bonus-video"&gt;
  &lt;/a&gt;
  Bonus Video
&lt;/h2&gt;

&lt;p&gt;This was originally posted on my personal blog, &lt;a href="//blog.ali.dev"&gt;blog.ali.dev&lt;/a&gt;. If you want to watch the bonus YouTube video, &lt;a href="https://blog.ali.dev/professional/2022/01/20/public-speaking-with-josh-constine/"&gt;you'll need to check it out over there&lt;/a&gt; ;) &lt;/p&gt;

</description>
      <category>publicspeaking</category>
      <category>speaking</category>
      <category>podcast</category>
    </item>
    <item>
      <title>Conversation Intelligence Quest: Python CI Challenge</title>
      <author>Akanksha Bhasin</author>
      <pubDate>Thu, 20 Jan 2022 18:22:29 +0000</pubDate>
      <link>https://dev.to/symbldotai/conversation-intelligence-quest-python-ci-challenge-5h91</link>
      <guid>https://dev.to/symbldotai/conversation-intelligence-quest-python-ci-challenge-5h91</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Test Out Your Python Skills on Building Conversation Intelligence Functions&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Hey fellow devs!&lt;/p&gt;

&lt;p&gt;We are thrilled to announce a new &lt;strong&gt;&lt;a href="https://bit.ly/SymblCIQuest-Q1"&gt;Python CI coding challenge&lt;/a&gt;&lt;/strong&gt; on &lt;em&gt;Qualified.io&lt;/em&gt;. Put your Python skills to the test and win some cool prizes and bragging rights by building conversation intelligence functions. In case you are not familiar with what Conversation Intelligence (CI) is, it’s essentially AI that can understand natural human conversations, explicitly and contextually.&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#the-challenge"&gt;
  &lt;/a&gt;
  📜 The Challenge:
&lt;/h2&gt;

&lt;p&gt;In this cool challenge, you will take on the identity of a “Python Agent’ and venture into the mystic land of Convotopia. Combining your Python skills and CI APIs (provided by Symbl.ai), you will build functions for extracting the undiscovered secrets (conversation insights) hidden deep within Convotopia. Prepare yourself to take on greater challenges as you venture deeper into Convotopia. &lt;/p&gt;

&lt;p&gt;The challenge is divided into 5 Levels, with each passing level you gain super powers to unlock the next level and be a Python hero in Convotopia.⛳&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Start the challenge here: &lt;a href="https://bit.ly/SymblCIQuest-Q1"&gt;bit.ly/SymblCIQuest-Q1&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#time-commitment"&gt;
  &lt;/a&gt;
  ⏳ Time Commitment:
&lt;/h2&gt;

&lt;p&gt;The challenge will take approximately 1 hour and 30 mins (or less) to complete all levels, depending on your level of expertise with Python and/or conversation intelligence APIs (provided by Symbl.ai). &lt;/p&gt;

&lt;p&gt;Why should you commit 1.5 hours of your life? You can win some cool prizes completing the challenge (see section below for details).&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Approx time for each level:&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Level 1.&lt;/strong&gt; Access to Convotopia Land - 20 mins&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Level 2.&lt;/strong&gt; Connect with the locals - 20 mins&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Level 3.&lt;/strong&gt; Are you connecting with the locals? - 20 mins&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Level 4.&lt;/strong&gt; Let the extraction begin -  30 mins&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Level 5.&lt;/strong&gt; What is the ‘Talk of the town’ in Convotopia? - 30 mins&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--avYgfMDN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c4w0nffce5avj3tfcpnn.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--avYgfMDN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c4w0nffce5avj3tfcpnn.jpeg" alt="Image description" width="880" height="611"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#who-can-participate"&gt;
  &lt;/a&gt;
  👨🏻‍💻👩🏻‍💻 Who Can Participate:
&lt;/h2&gt;

&lt;p&gt;Our Challenge is open to programmers (or not) from all across the globe. If you are interested in building Python functions and exploring AI functions, this is the challenge for you.&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#prizes"&gt;
  &lt;/a&gt;
  🏆 Prizes:
&lt;/h2&gt;

&lt;p&gt;Complete the challenge and win some cool prizes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;$50 Amazon gift card -&lt;/strong&gt; The first 4 participants to complete the challenge with 100% by 15th February.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;$25 Amazon gift card -&lt;/strong&gt; not among the first 4 to complete the challenge or didn’t score 100%? No worries, every week, between 15th February to 30th March we will randomly select a winner who completed 80% or more of the challenge to win.&lt;br&gt;
Symbl.ai Developer Swag  - first 50 participants who complete 80% of the challenge by March 30th. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Certificate of completion&lt;/strong&gt; - All participants who successfully complete the challenge, will receive a certificate. (bragging rights to share on social).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;



&lt;h2&gt;
  &lt;a href="#how-to-participate"&gt;
  &lt;/a&gt;
  🔥 How to participate?
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Head over to the Challenge to register yourselves &amp;amp; get started - &lt;a href="https://bit.ly/SymblCIQuest-Q1"&gt;Link&lt;/a&gt; ✔️&lt;/li&gt;
&lt;li&gt;Join our &lt;a href="https://bit.ly/symbldotai-slack"&gt;slack channel&lt;/a&gt; 🚩&lt;/li&gt;
&lt;li&gt;Publish a social media post about your participation and experience, and tag &lt;a href="https://twitter.com/symbldotai"&gt;@symbldotai&lt;/a&gt; and &lt;a href="https://twitter.com/SymblDev"&gt;@symbldev&lt;/a&gt; .📢&lt;/li&gt;
&lt;li&gt;Add the #BuildWithSymbl #SymblQuest hashtag to your posts and share it with the community. ✨&lt;/li&gt;
&lt;li&gt;Fill in the &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLSfrNCuqIpuxMhe2_0LxfYbCZtvue0cTTfly-5v-_ymqt3Ktgw/viewform"&gt;Challenge completion swag form&lt;/a&gt;.🎁&lt;/li&gt;
&lt;/ol&gt;



&lt;h2&gt;
  &lt;a href="#join-our-symblai-community"&gt;
  &lt;/a&gt;
  🤗 Join our Symbl.ai Community!
&lt;/h2&gt;

&lt;p&gt;Become a part of our &lt;a href="https://bit.ly/symbldotai-slack"&gt;Slack community&lt;/a&gt; and do follow us on &lt;a href="https://twitter.com/Symbldotai"&gt;Twitter&lt;/a&gt;, &lt;a href="https://www.linkedin.com/company/symblai/"&gt;Linkedin&lt;/a&gt;, &lt;a href="https://www.youtube.com/channel/UCpqOyNdFI0kASCZL-eCnkcA"&gt;Youtube&lt;/a&gt;, &lt;a href="https://github.com/symblai/"&gt;Github&lt;/a&gt;, &lt;a href="https://www.facebook.com/symbldotai"&gt;Facebook&lt;/a&gt; and &lt;a href="https://www.instagram.com/symbldotai/"&gt;Instagram&lt;/a&gt;! ❤️&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#contact-us"&gt;
  &lt;/a&gt;
  📩 Contact us
&lt;/h2&gt;

&lt;p&gt;If you have any questions, please don't hesitate to drop me an email at (&lt;a href="mailto:akanksha.bhasin@symbl.ai"&gt;akanksha.bhasin@symbl.ai&lt;/a&gt;) &lt;/p&gt;



&lt;p&gt;Happy Hacking!&lt;br&gt;
May the source be with you! ✊🏻&lt;/p&gt;

&lt;p&gt;✍🏽 By &lt;a href="https://twitter.com/Akii_20"&gt;Akanksha Bhasin&lt;/a&gt;&lt;br&gt;
   DevRel &lt;a class="mentioned-user" href="https://dev.to/symbl"&gt;@symbl&lt;/a&gt;.ai&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/d4zHnLjdy48Cc/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/d4zHnLjdy48Cc/giphy.gif" width="500" height="365"&gt;&lt;/a&gt;   &lt;/p&gt;

</description>
      <category>python</category>
      <category>programming</category>
      <category>ai</category>
      <category>api</category>
    </item>
    <item>
      <title>Day 10 Of #100DaysOfCode Challenge - My experience</title>
      <author>Cate</author>
      <pubDate>Thu, 20 Jan 2022 18:22:23 +0000</pubDate>
      <link>https://dev.to/catevee/day-10-of-100daysofcode-challenge-my-experience-2250</link>
      <guid>https://dev.to/catevee/day-10-of-100daysofcode-challenge-my-experience-2250</guid>
      <description>&lt;p&gt;I just completed 10 days of the #100DaysOfCode challenge. Although the whole of last week I didn't code due to unavoidable circumstances, the good part is that I was awarded a full software development scholarship. I will be starting my lessons this Feb for the next 6 months, I'm really excited.&lt;br&gt;
So, here is what I learned in those 10 days.&lt;/p&gt;

&lt;p&gt;JavaScript&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;JS functions, objects, classes, Arrays.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;JS callback methods, async, and promises - although I didn't understand these very well. I will be going through them again.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I completed Frontend Mentor Challenges - Html &amp;amp; Css - newbie level and today I started the junior level. I'm proud of myself about this.&lt;/p&gt;

&lt;p&gt;General experience&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Coding for only one hour a day seems very short to me. I usually use a pomodoro app to time myself, but after 1 hour is over, I let myself code until I can't take it anymore. So, I usually code for more than 3 hours a day.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;I usually post my daily report on Twitter and there is a very great supportive community their, and a lot of people doing the same 100daysofcode challenge. This motivates me to continue coding without giving up. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Those 10 days have made me realise that I love coding. Seeing myself build a wesite component from scratch is my biggest joy. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;See you on day 20, as I share my great coding journey.&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>Create a Prismic IO Respository for Blog 👨🏽‍💻</title>
      <author>Matheus Maximiliano</author>
      <pubDate>Thu, 20 Jan 2022 18:17:35 +0000</pubDate>
      <link>https://dev.to/matheusmprado/create-a-prismic-io-respository-for-blog-kdc</link>
      <guid>https://dev.to/matheusmprado/create-a-prismic-io-respository-for-blog-kdc</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-prismic-io"&gt;
  &lt;/a&gt;
  what is Prismic IO?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://prismic.io/"&gt;Prismic&lt;/a&gt; is a Headless CMS very simples to work, a tool for editing online content totally custom with a very nice API and a great free plan... Basically you keep your content in a content repository that you can query via its simples REST API with the prismisc client.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-prismic-account"&gt;
  &lt;/a&gt;
  Creating Prismic account
&lt;/h2&gt;

&lt;p&gt;Now we going create a &lt;a href="https://prismic.io"&gt;prismic&lt;/a&gt; account, so, fill the information's and create your account. After your account created, open a new repository like this.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Iz-leXYR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cfsvhq31vf2urytf0oyq.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Iz-leXYR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cfsvhq31vf2urytf0oyq.jpg" alt="prismic created repository" width="880" height="534"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In prismic we have a two types of contents, &lt;em&gt;Repeatable&lt;/em&gt; and &lt;em&gt;unique&lt;/em&gt;, lets go understand the differences:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Repeatable is used to create content that you need create more that one, exemple:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Posts blog;&lt;/li&gt;
&lt;li&gt;faq contents;&lt;/li&gt;
&lt;li&gt;testimonials;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Unique is used in singles pages content like a about us page in your site.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After created your repository, we will go to build our first type content. This type is it a &lt;strong&gt;repeatable **type called **posts&lt;/strong&gt;, and here we add this modes with field names.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you want create more types, feel freedom for this, custom and create of your way.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;UID type | field name: &lt;strong&gt;uid&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Title type | field name: &lt;strong&gt;title&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Rich Text | field name: &lt;strong&gt;content&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vdyBuvXg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vfcit8rfi8i2kpinwg2v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vdyBuvXg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vfcit8rfi8i2kpinwg2v.png" alt="post type" width="865" height="448"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After created just save.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#get-environments-variables"&gt;
  &lt;/a&gt;
  Get Environments Variables
&lt;/h2&gt;

&lt;p&gt;To connect a Prisma client you need a two environments variables, the &lt;code&gt;PRISMIC_ACCESS_TOKEN&lt;/code&gt;and &lt;code&gt;PRISMIC_ENDPOINT&lt;/code&gt;, this variables. you can use in &lt;code&gt;.env.local&lt;/code&gt; for projects.&lt;/p&gt;

&lt;p&gt;For get your endpoint, he finds himself in top of the page settings. And for generate your access token, fill the application name in prismic settings and add application, so, now we have this two information for connect with prismic client.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;The prismic IO is a very good CMS, with a very nice free plan, so you can create news projects and use for manager your contents, and create singles pages, or repeatables contens, and in a very easy way to do.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Advanced JavaScript Series - Part 7: First Class Citizens &amp; Higher Order Functions</title>
      <author>Pranav</author>
      <pubDate>Thu, 20 Jan 2022 17:46:03 +0000</pubDate>
      <link>https://dev.to/pranav016/advanced-javascript-series-part-7-first-class-citizens-higher-order-functions-3cda</link>
      <guid>https://dev.to/pranav016/advanced-javascript-series-part-7-first-class-citizens-higher-order-functions-3cda</guid>
      <description>&lt;h2&gt;
  &lt;a href="#first-class-citizens"&gt;
  &lt;/a&gt;
  First Class Citizens
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;First-class citizenship simply means &lt;strong&gt;being able to do what everyone else can do.&lt;/strong&gt; In JavaScript, functions are objects (hence the designation of first-class object).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;JavaScript has all those abilities or features that are required to be a language having First Class Functions, hence functions are treated as First Class Citizens. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Let’s look at all the abilities of functions being a First Class Citizen.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#1-ability-to-treat-functions-as-values"&gt;
  &lt;/a&gt;
  1. Ability to treat functions as values-
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#code"&gt;
  &lt;/a&gt;
  Code-
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var hello = function(){
  return "hello world"
}

console.log(hello())
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output-
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"hello world"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#2-ability-to-pass-functions-as-arguments"&gt;
  &lt;/a&gt;
  2. Ability to Pass functions as arguments-
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#code"&gt;
  &lt;/a&gt;
  Code-
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function hello(fn){
  fn()
}

hello(function() { console.log("hello world") })
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output-
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"hello world"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#3-ability-return-a-function-from-another-function"&gt;
  &lt;/a&gt;
  3. Ability return a function from another function-
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#code"&gt;
  &lt;/a&gt;
  Code-
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function hello(){
  return function() {
    return "hello world"
  }
}

var hi=hello()
console.log(hi())
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output-
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"hello world"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Because this behavior of JS functions as first class citizens, we are also able to do functional programming that we will learn more about in further parts of our series.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#higher-order-functions"&gt;
  &lt;/a&gt;
  Higher Order Functions-
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;A higher order function is a function that takes a function as an argument, or returns a function.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#simplified-example"&gt;
  &lt;/a&gt;
  Simplified Example-
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#code"&gt;
  &lt;/a&gt;
  Code-
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const multiplyBy = (num1) =&amp;gt; {
  return function (num2) {
    return num1 * num2;
  }
}

const multiplyByTwo = multiplyBy(2);
multiplyByTwo(4)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output-
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;8
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#connect-with-me"&gt;
  &lt;/a&gt;
  Connect with me-
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Pranav016"&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.linkedin.com/in/pranav-mendiratta/"&gt;LinkedIn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#appendix"&gt;
  &lt;/a&gt;
  Appendix-
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://dev.to/pranav016/advanced-javascript-series-part-1-behind-the-scenes-javascript-engine-ats-hidden-classes-garbage-collection-3ajj"&gt;&lt;strong&gt;Advanced JavaScript Series - Part 1&lt;/strong&gt;: Behind the scenes (JavaScript Engine, ATS, Hidden Classes, Garbage Collection)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/pranav016/advanced-javascript-series-part-1-execution-context-and-call-stack-l1o"&gt;&lt;strong&gt;Advanced JavaScript Series - Part 2&lt;/strong&gt;: Execution Context and Call Stack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/pranav016/advanced-javascript-series-part-3-weird-js-behavior-strict-mode-and-hoisting-26a3"&gt;&lt;strong&gt;Advanced JavaScript Series - Part 3&lt;/strong&gt;: Weird JS behavior, Strict Mode and Hoisting, Temporal Dead Zone&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/pranav016/advanced-javascript-series-part-41-global-function-and-block-scope-lexical-vs-dynamic-scoping-20pg"&gt;&lt;strong&gt;Advanced JavaScript Series - Part 4.1&lt;/strong&gt;: Global, Function and Block Scope, Lexical vs Dynamic Scoping&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/pranav016/advanced-javascript-series-part-42-scope-chains-and-their-working-lexical-and-variable-environments-19d5"&gt;&lt;strong&gt;Advanced JavaScript Series - Part 4.2&lt;/strong&gt;: Scope Chains and their working, Lexical and Variable Environments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/pranav016/advanced-javascript-series-part-5-iife-this-keyword-in-jstricky-eg-call-apply-bind-curryingfunctional-prog-98c"&gt;&lt;strong&gt;Advanced JavaScript Series - Part 5&lt;/strong&gt;: IIFE &amp;amp; 'this' keyword in JS(tricky Eg.), call(), apply(), bind(), Currying(Functional Prog)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/pranav016/advanced-javascript-series-part-61-everything-in-js-is-an-object-primitive-non-primitive-types-1d8c"&gt;&lt;strong&gt;Advanced JavaScript Series - Part 6.1&lt;/strong&gt;: Everything in JS is an Object? Weird JS behaviors revealed, Primitive Non-Primitive Types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://dev.to/pranav016/advanced-javascript-series-part-62-pass-by-value-pass-by-reference-shallow-deep-copy-type-coercion-49f3"&gt;&lt;strong&gt;Advanced JavaScript Series - Part 6.2&lt;/strong&gt;: Pass by Value &amp;amp; Pass by Reference, Shallow &amp;amp; Deep Copy, Type Coercion&lt;/a&gt;

&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References-
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://www.developintelligence.com/blog/2016/10/javascript-functions-as-first-class-objects/"&gt;https://www.developintelligence.com/blog/2016/10/javascript-functions-as-first-class-objects/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.geeksforgeeks.org/what-is-first-class-citizen-in-javascript/"&gt;https://www.geeksforgeeks.org/what-is-first-class-citizen-in-javascript/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/javascript-scene/higher-order-functions-composing-software-5365cf2cbe99"&gt;https://medium.com/javascript-scene/higher-order-functions-composing-software-5365cf2cbe99&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>react</category>
      <category>node</category>
    </item>
    <item>
      <title>GitHub como Ferramenta Organizacional</title>
      <author>Victor Campos</author>
      <pubDate>Thu, 20 Jan 2022 17:31:04 +0000</pubDate>
      <link>https://dev.to/v360/github-como-ferramenta-organizacional-18b</link>
      <guid>https://dev.to/v360/github-como-ferramenta-organizacional-18b</guid>
      <description>&lt;p&gt;O nosso código dorme hoje dentro do Github e nos últimos seis meses passamos a nos organizar em volta dele.&lt;/p&gt;

&lt;p&gt;Faz todo sentido para a gente, quanto mais próximo a empresa está do nosso código, mais fácil fica a comunicação, identificação de problemas e oportunidades.&lt;/p&gt;

&lt;p&gt;——&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Repositório de código&lt;/strong&gt;&lt;br&gt;
Começamos a usar o Github como todos começam, usando para guardar o nosso código.&lt;/p&gt;

&lt;p&gt;Além dele, fizemos fork de algumas gemas que tivemos que fazer alguma modificação para atender nosso interesse.&lt;/p&gt;

&lt;p&gt;Essas gemas ficam em repositório aberto, enquanto nosso código permanece fechado.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Issues&lt;/strong&gt;&lt;br&gt;
Todo atendimento de Dev ocorre por meio de issues, as mesmas são divididas em melhorias, bugs ou no code.&lt;/p&gt;

&lt;p&gt;Uma ferramenta que o Github tem, na qual nos mudou de patamar, foi a possibilidade de templates de issues. Com isso, quando qualquer pessoa da empresa quer abrir uma issue, ela já sabe os pontos importantes que precisa preencher.&lt;/p&gt;

&lt;p&gt;O legal é que depois de um tempo toda a empresa mudou para issues. E quando alguma pessoa nova entra por exemplo, é criada uma issue de onboard.&lt;/p&gt;

&lt;p&gt;Assim todo mundo tem visibilidade do que cada time tem de tarefa, aumentando a viabilidade.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Projects&lt;/strong&gt;&lt;br&gt;
Abandonamos o Trello e migramos todos os nosso boards para o Projects.&lt;/p&gt;

&lt;p&gt;As issues deram visibilidade de quais tarefas existiam para cada time. No projects temos a ideia de qual etapa cada issue está no nosso processo de priorização.&lt;/p&gt;

&lt;p&gt;Assim, evitamos a necessidade de reuniões para ficar perguntando onde cada coisa está, e podemos usar as reuniões para focar em como podemos ajudar uns aos outros a mover a issue para frente.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Actions&lt;/strong&gt;&lt;br&gt;
Também movemos todo nosso pipe de CI para dentro do Github.&lt;/p&gt;

&lt;p&gt;Assim, o mesmo ficou integrado dentro do nosso processo, sendo executado tanto quando adicionamos uma label específica, quanto por commits.&lt;/p&gt;

&lt;p&gt;E também, geramos os nossos relatórios de releases semanais para informar a empresa tudo que entrou no produto na semana.&lt;/p&gt;

&lt;p&gt;Qualquer pessoa do time tem acesso, por exemplo, a deploys que funcionaram ou quebraram, testes que não passaram, etc…&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pull Request&lt;/strong&gt;&lt;br&gt;
O coração aonde o Dev faz suas tarefas. Todo pull request tem que estar vinculado a uma ou mais issues ao qual vai fechar/avançar.&lt;/p&gt;

&lt;p&gt;Ao ser marcado como pronto para revisão, o próprio Github atribui ele para algum outro Dev revisar, não necessariamente da mesma squad.&lt;/p&gt;

&lt;p&gt;Assim, além de melhorar a qualidade do que está sendo entregue, pois a modificação tem que ser simples para qualquer um entender, garantimos que todo o time tenha algum conhecimento de todas as partes do nosso produto.&lt;/p&gt;

&lt;p&gt;Muitas vezes as melhores decisões de código vêm de pessoas que estão mais afastadas do problema, pois essas tendem a questionar mais as decisões tomadas.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Github CLI&lt;/strong&gt;&lt;br&gt;
Infelizmente o insight do Github é bem ruim. Mas resolvemos isso adicionando labels necessárias nas issues e um pouco de código para pegar essas informações pela api do Github.&lt;/p&gt;

&lt;p&gt;Dessa maneira, conseguimos tirar métricas de velocidade do time, quantidade de bugs, etc.&lt;/p&gt;

&lt;p&gt;E assim, podemos saber se as mudanças organizacionais que tomamos estão tendo efeitos positivos ou negativos.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Discussion&lt;/strong&gt;&lt;br&gt;
Essa ferramenta acabou de deixar fase beta do Github.&lt;/p&gt;

&lt;p&gt;Ela é um fórum interno do mesmo, e usamos para registrar todas as discussões que temos internamente.&lt;/p&gt;

&lt;p&gt;Quando algo começa a se prolongar no Discord, migramos para lá.&lt;/p&gt;

&lt;p&gt;Até para ser fácil pessoas novas entenderem o contexto do porquê as coisas hoje são como são.&lt;/p&gt;

&lt;p&gt;Também registramos resumo de livros que gostamos, e como resolvemos algum problema mais sério dos nossos clientes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Wiki&lt;/strong&gt;&lt;br&gt;
Aqui mora toda a nossa documentação, desde documentação de como usar o produto, responder a certos questionamentos do cliente, até nossa boas práticas de programação.&lt;/p&gt;

&lt;p&gt;Também usamos nossa wiki para o nosso processo de onboard. Temos documentado nela (e gosto de acreditar que cada pessoa que entra melhora esse processo) o que se espera que a pessoa saiba a cada semana até conseguir chegar em um ponto que consegue realizar as primeiras atividades sozinha.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Futuro&lt;/strong&gt;&lt;br&gt;
Quem sabe não adotamos no futuro o editor de código que o Github acabou de lançar?&lt;/p&gt;

&lt;p&gt;O que eu posso falar é, cada dia que passa sinto menos necessidade de ter outras ferramentas de gestão de time, produto e código, além do próprio Github.&lt;/p&gt;

</description>
      <category>github</category>
      <category>startup</category>
      <category>productivity</category>
    </item>
  </channel>
</rss>
