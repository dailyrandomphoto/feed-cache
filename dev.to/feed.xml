<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How and why you should store React UI state in the URL</title>
      <author>Sidney Alcantara</author>
      <pubDate>Fri, 10 Dec 2021 02:50:19 +0000</pubDate>
      <link>https://dev.to/notsidney/how-and-why-you-should-store-react-ui-state-in-the-url-34pi</link>
      <guid>https://dev.to/notsidney/how-and-why-you-should-store-react-ui-state-in-the-url-34pi</guid>
      <description>&lt;h3&gt;
  &lt;a href="#deep-linking-in-react-as-simple-as-usestate"&gt;
  &lt;/a&gt;
  Deep linking in React, as simple as useState
&lt;/h3&gt;

&lt;p&gt;Have you ever used a complex web app with many features, modal windows, or side panels? Where you get to the perfect state with just the right information on the screen after a few clicks through different screens, but then you accidentally close the tab? (Or Windows decides to update?)&lt;/p&gt;

&lt;p&gt;It would be great if there were a way to return to this state without going through the same tedious process. Or be able to share that state so a teammate can work on the same thing you are.&lt;/p&gt;

&lt;p&gt;This problem could be solved with deep linking, which is used today in mobile apps to open the app to a specific page or UI state. But why does this not exist in many web apps?&lt;/p&gt;

&lt;p&gt;⏭ &lt;a href="#heading-the-code"&gt;Click here to skip to the solution and code snippets.&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bring-back-deep-linking-on-the-web"&gt;
  &lt;/a&gt;
  Bring back deep linking on the web
&lt;/h2&gt;

&lt;p&gt;The emergence of single-page applications (SPAs) has allowed us to craft new user experiences that are instantly interactive on the web. By doing more on the client side using JavaScript, we can respond to user events immediately, from opening custom dialog windows to live text editors like Google Docs.&lt;/p&gt;

&lt;p&gt;Traditional server-rendered websites send a request to get a new HTML page every single time. An excellent example is Google, which sends a request to its servers with the user’s search query in the URL: &lt;a href="https://www.google.com/search?q=your+query+here"&gt;https://www.google.com/search?&lt;strong&gt;q=your+query+here&lt;/strong&gt;&lt;/a&gt;. What’s great about this model is that if I filter by results from the past week, I can share the same search query by simply sharing the URL: &lt;a href="https://www.google.com/search?q=react+js&amp;amp;tbs=qdr:w"&gt;https://www.google.com/search?q=react+js&amp;amp;&lt;strong&gt;tbs=qdr:w&lt;/strong&gt;&lt;/a&gt;. And this paradigm is entirely natural for web users—sharing links has been part of the world wide web ever since it was invented!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--skixaD5A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x20gr9ovgelp6o8avmbu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--skixaD5A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x20gr9ovgelp6o8avmbu.png" alt="Annotated screenshot of a Google search page. The search term input is highlighted and an arrow points to the corresponding part in the URL that stores the search term. The results are filtered to only show those from the past week, and another arrow points to the corresponding part in the URL that stores this data." width="880" height="496"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When SPAs came along, we didn’t need to store this data in the URL since we no longer need to make a server request to change what is displayed on the screen (hence &lt;em&gt;single-page&lt;/em&gt;). But this made it easy to lose a unique experience of the web, the shareable link. Desktop and mobile apps never really had a standardized way to link to specific parts of the app, and modern implementations of deep linking rely on URLs on the web. So when we build web apps that function more like native apps, why would we throw away the deep linking functionality of URLs that we’ve had for decades?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#deadsimple-deep-linking"&gt;
  &lt;/a&gt;
  Dead-simple deep linking
&lt;/h2&gt;

&lt;p&gt;When building a web app that has multiple pages, the minimum you should do is change the URL when a different page is displayed, such as &lt;code&gt;/login&lt;/code&gt; and &lt;code&gt;/home&lt;/code&gt;. In the React ecosystem, &lt;a href="https://reactrouter.com/"&gt;React Router&lt;/a&gt; is perfect for client-side routing like this, and &lt;a href="https://nextjs.org/"&gt;Next.js&lt;/a&gt; is an excellent fully-featured React framework that also supports server-side rendering.&lt;/p&gt;

&lt;p&gt;But I’m talking about &lt;em&gt;deep&lt;/em&gt; linking, right down to the UI state after a few clicks and keyboard inputs. This is a killer feature for productivity-focused web apps, as it allows users to return right to the exact spot they were at even after closing the app or sharing it with someone else so they can start work without any friction.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sO30iNYa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3o4grhdkx1g2dzw1zatb.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sO30iNYa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3o4grhdkx1g2dzw1zatb.gif" alt='Screen recording of a modal window being opened, causing the URL to update to add `#modal="webhooks"`, which is the internal state that triggers the modal to open.' width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;


Notice how the URL updates to add `#modal="webhooks"` as the modal opens.





&lt;p&gt;You could use npm packages like &lt;a href="https://www.npmjs.com/package/query-string"&gt;query-string&lt;/a&gt; and write a basic React Hook to sync URL query parameters to your state, and there are &lt;a href="https://medium.com/swlh/using-react-hooks-to-sync-your-component-state-with-the-url-query-string-81ccdfcb174f"&gt;plenty&lt;/a&gt; of &lt;a href="https://www.npmjs.com/package/use-query-params"&gt;tutorials&lt;/a&gt; for &lt;a href="https://dev.to/gaels/an-alternative-to-handle-global-state-in-react-the-url--3753"&gt;this&lt;/a&gt;, but there’s a more straightforward solution.&lt;/p&gt;

&lt;p&gt;While exploring modern state management libraries for React for an architecture rewrite of our React app &lt;a href="https://rowy.io/?utm_source=dev.to&amp;amp;utm_medium=blog&amp;amp;utm_campaign=How%20and%20why%20you%20should%20store%20React%20UI%20state%20in%20the%20URL"&gt;Rowy&lt;/a&gt;, I came across &lt;a href="https://jotai.org/"&gt;Jotai&lt;/a&gt;, a tiny atom-based state library based on the React team’s &lt;a href="https://recoiljs.org/"&gt;Recoil&lt;/a&gt; library. The main benefit of this model is that state atoms are declared independent from the component hierarchy and can be manipulated from anywhere in the app. This solves the issue with React Context causing unnecessary re-renders, which I &lt;a href="https://betterprogramming.pub/how-to-useref-to-fix-react-performance-issues-4d92a8120c09"&gt;previously worked around with &lt;code&gt;useRef&lt;/code&gt;&lt;/a&gt;. You can read more about the atomic state concept in &lt;a href="https://jotai.org/docs/basics/concepts"&gt;Jotai’s docs&lt;/a&gt; and a more technical version in &lt;a href="https://recoiljs.org/docs/introduction/motivation"&gt;Recoil’s&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-code"&gt;
  &lt;/a&gt;
  The code
&lt;/h2&gt;

&lt;p&gt;Jotai has a type of atom called &lt;a href="https://jotai.org/docs/api/utils#atom-with-hash"&gt;&lt;code&gt;atomWithHash&lt;/code&gt;&lt;/a&gt;, which syncs the state atom to the URL hash.&lt;/p&gt;

&lt;p&gt;Suppose we want a modal’s open state stored in the URL. Let’s start by creating an atom:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Then in the modal component itself, we can use this atom just like &lt;code&gt;useState&lt;/code&gt;:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;And here’s how it looks:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1YOt00Ga--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gq08ssz4b61wl2pu4n2g.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1YOt00Ga--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gq08ssz4b61wl2pu4n2g.gif" alt="Screen recording of a modal being opened, causing the URL to update to reflect the UI state, with #modalOpen=true being appended. When the modal is closed, it is replaced with modalOpen=false." width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And that’s it! It’s that simple.&lt;/p&gt;

&lt;p&gt;What’s fantastic about Jotai’s &lt;code&gt;atomWithHash&lt;/code&gt; is that it can store any data that &lt;code&gt;useState&lt;/code&gt; can, and it automatically stringifies objects to be stored in the URL. So I can store a more complex state in the URL, making it sharable.&lt;/p&gt;

&lt;p&gt;In &lt;a href="https://rowy.io/?utm_source=dev.to&amp;amp;utm_medium=blog&amp;amp;utm_campaign=How%20and%20why%20you%20should%20store%20React%20UI%20state%20in%20the%20URL"&gt;Rowy&lt;/a&gt;, we used this technique to implement a UI for cloud logs. We’re building an open-source platform that makes backend development easier and eliminates friction for common workflows. So, reducing friction for sharing logs was perfect for us. You can see this in action on our demo, where I can link you to a specific deploy log: &lt;a href="https://demo.rowy.io/table/roadmap#modal=%22cloudLogs%22&amp;amp;cloudLogFilters=%7B%22type%22%3A%22build%22%2C%22timeRange%22%3A%7B%22type%22%3A%22days%22%2C%22value%22%3A7%7D%2C%22buildLogExpanded%22%3A1%7D"&gt;https://demo.rowy.io/table/roadmap#modal="cloudLogs"&amp;amp;cloudLogFilters={"type"%3A"build"%2C"timeRange"%3A{"type"%3A"days"%2C"value"%3A7}%2C"buildLogExpanded"%3A1}&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DmDj3dp4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638925723546/qT9qAZ0YZ.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DmDj3dp4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638925723546/qT9qAZ0YZ.gif" alt="Screen recording of the deep link opening the Rowy demo web app to the cloud logs modal being open." width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Decoding the URL component reveals the exact state used in React:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;A side effect of &lt;code&gt;atomWithHash&lt;/code&gt; is that it pushes the state to the browser history by default, so the user can click the back and forward buttons to go between UI states.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Fdw9_ruB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638925771468/ZyUEGiWcn.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Fdw9_ruB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638925771468/ZyUEGiWcn.gif" alt="Screen recording of the user clicking the back button in the browser repeatedly, causing the UI state to change with modals being opened and closed." width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This behavior is optional and can be disabled using the &lt;code&gt;replaceState&lt;/code&gt; option:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;





&lt;p&gt;Thanks for reading! I hope this has convinced you to expose more of your UI state in the URL, making it easily shareable and reducing friction for your users—especially since it’s effortless to implement.&lt;/p&gt;

&lt;p&gt;You can follow me on Twitter &lt;a href="https://twitter.com/nots_dney"&gt;@nots_dney&lt;/a&gt; for more articles and Tweet threads about front-end engineering.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/rowyio"&gt;
        rowyio
      &lt;/a&gt; / &lt;a href="https://github.com/rowyio/rowy"&gt;
        rowy
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Open-source Airtable-like experience for your database (Firestore) with GCP's scalability. Build any automation or cloud functions for your product. ⚡️✨
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
&lt;a rel="noopener noreferrer" href="https://github.com/rowyio/rowysrc/assets/logo-sticker.svg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gjaz7yQn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/rowyio/rowysrc/assets/logo-sticker.svg" alt="Rowy" height="69"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;h1&gt;
✨ Modern Backend Stack ✨ &lt;br&gt;
&lt;/h1&gt;

&lt;h3&gt;
Build prototypes that scale on Google Cloud Platform in minutes
&lt;/h3&gt;

&lt;p&gt;
Manage Firestore data in a spreadsheet-like UI, write Cloud Functions effortlessly in the browser, and connect to your favorite third party platforms such as SendGrid, Twilio, Algolia, Slack and more
&lt;/p&gt;

&lt;div&gt;
&lt;p&gt;&lt;a href="https://discord.gg/B8yAD5PDX4" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6dd327ede435fa2675b694e66ceca0c8e3f44d863a45b32e9f181cc3c8f39390/68747470733a2f2f696d672e736869656c64732e696f2f646973636f72642f3835333439383637353438343831393437363f636f6c6f723d253233343230304646266c6162656c3d43686174253230776974682532307573266c6f676f3d646973636f7264266c6f676f436f6c6f723d253233464646464646267374796c653d666f722d7468652d6261646765" alt="Discord"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
    &lt;a href="http://www.rowy.io" rel="nofollow"&gt;&lt;b&gt;Website&lt;/b&gt;&lt;/a&gt; •
    &lt;a href="http://docs.rowy.io" rel="nofollow"&gt;&lt;b&gt;Documentation&lt;/b&gt;&lt;/a&gt; •
    &lt;a href="https://discord.gg/B8yAD5PDX4" rel="nofollow"&gt;&lt;b&gt;Discord&lt;/b&gt;&lt;/a&gt; • 
    &lt;a href="https://twitter.com/rowyio" rel="nofollow"&gt;&lt;b&gt;Twitter&lt;/b&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/rowyio/rowy/blob/main/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/6fbaf79b7cc87b723985a9e7469929e909bb032ce246852daa542b3f9120714b/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f726f7779696f2f726f7779" alt="License"&gt;&lt;/a&gt;
&lt;a href="https://github.com/rowyio/rowy/commits/rc"&gt;&lt;img src="https://camo.githubusercontent.com/e322594629f502e65323f025bacd13336911d97dd95f085da18f2d0d6bd342fe/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6173742d636f6d6d69742f726f7779696f2f726f77792f7263" alt="Last commit"&gt;&lt;/a&gt;
&lt;a href="https://github.com/rowyio/rowy/stargazers/"&gt;&lt;img src="https://camo.githubusercontent.com/a1e3cefce46ee2314e926fee61f3a56e18516894696188d50ddbe066caf508da/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f726f7779696f2f726f7779" alt="GitHub stars"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/2600c32c6be5d0408b83200d8da7932d521329a32641fd686586c615f3f06667/68747470733a2f2f666972656261736573746f726167652e676f6f676c65617069732e636f6d2f76302f622f726f7779696f2e61707073706f742e636f6d2f6f2f7075626c696344656d6f253246526f777925323057656273697465253230566964656f253230474946253230536d616c6c2e6769663f616c743d6d6564696126746f6b656e3d33663639396138662d633166322d343034362d386564352d653466663636393437636438"&gt;&lt;img width="100%" src="https://camo.githubusercontent.com/2600c32c6be5d0408b83200d8da7932d521329a32641fd686586c615f3f06667/68747470733a2f2f666972656261736573746f726167652e676f6f676c65617069732e636f6d2f76302f622f726f7779696f2e61707073706f742e636f6d2f6f2f7075626c696344656d6f253246526f777925323057656273697465253230566964656f253230474946253230536d616c6c2e6769663f616c743d6d6564696126746f6b656e3d33663639396138662d633166322d343034362d386564352d653466663636393437636438"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
Live Demo&lt;/h2&gt;

&lt;p&gt;💥 Check out the &lt;a href="https://demo.rowy.io/" rel="nofollow"&gt;live demo&lt;/a&gt; of Rowy 💥&lt;/p&gt;

&lt;h2&gt;
Quick Deploy&lt;/h2&gt;

&lt;p&gt;Set up Rowy on your Google Cloud Platform project with this one-click deploy
button.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://deploy.cloud.run/?git_repo=https://github.com/rowyio/rowyRun.git" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5832b6a44b19b13a5a84f8e89d646780a5ec646a0dfeef52f001134caca93511/68747470733a2f2f6465706c6f792e636c6f75642e72756e2f627574746f6e2e737667" alt="Run on Google Cloud"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://deploy.cloud.run/?git_repo=https://github.com/rowyio/rowyRun.git" rel="nofollow"&gt;https://deploy.cloud.run/?git_repo=https://github.com/rowyio/rowyRun.git&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Documentation&lt;/h2&gt;
&lt;p&gt;You can find the full documentation with how-to guides
&lt;a href="http://docs.rowy.io/" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
Features&lt;/h2&gt;
&lt;h3&gt;
Powerful spreadsheet interface for Firestore&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;CRUD operations&lt;/li&gt;
&lt;li&gt;Sort and filter by row values&lt;/li&gt;
&lt;li&gt;Lock, Freeze, Resize, Hide and Rename columns&lt;/li&gt;
&lt;li&gt;Multiple views for the same collection&lt;/li&gt;
&lt;li&gt;Bulk import or export data - csv, json&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
Automate with cloud functions and ready made extensions&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Effortlessly build cloud functions on field level triggers right in the browser
&lt;ul&gt;
&lt;li&gt;Use any NPM…&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/rowyio/rowy"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


</description>
      <category>javascript</category>
      <category>react</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>4 Ways To Be Constantly Improving Your Code</title>
      <author>Grant McNamara</author>
      <pubDate>Fri, 10 Dec 2021 02:29:07 +0000</pubDate>
      <link>https://dev.to/grantrocks/4-ways-to-be-constantly-improving-your-code-15om</link>
      <guid>https://dev.to/grantrocks/4-ways-to-be-constantly-improving-your-code-15om</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;A Follow Helps Everyone &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;No Really if you follow now, more and better quality content will be published. Also follow medium so you don't miss out.&lt;br&gt;
See more amazing content here: &lt;a href="https://theoverpoweredpc.medium.com"&gt;https://theoverpoweredpc.medium.com&lt;/a&gt;&lt;br&gt;
Not much of world’s population is made up of programmers. In fact, only 22.1% of the population are programmers. This might make you think, “How is that possible? How can there be so little programmers but so many programs and apps?,” well at least it got me thinking. If there are so little programmers what could 1 programmer do to make their code be like a team of 100 programmers. There are 4 simple ways to easily improve your code.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Stay Organized&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;There is no way to describe how important keeping your code in an organized manner is. The organization of your code will give you a much more readable piece of software and it will also be a lot easier to fix bugs and or improve performance. Not only will it be easier to read but it will also be easier to spot out something that seems of or unwanted. When you have more organized code people are more willing to pitch in some ideas too because they will be able to understand what is going on and be able to help if they want to.&lt;/p&gt;

&lt;p&gt;Keeping your code organized will also improve the development of your program because it will be easier to find things to edit, add, remove, change, etc. I am not just talking about the code but also the files and the directory’s because that will also help you out when you are trying to find a script that is external that you need to link to your current script.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Read Documentation&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I know that reading documentation may not be the funnest thing to do but it can really help you out with a problem or struggle. Say you are trying to connect to a database for say Mongo DB, you are not going to know how to do it instantly by heart. You need to learn how to use the SDK and how to integrate it into your code for your program to work. It also really helps you out when you need help with something for say a tutorial, in our case, on how to connect to Mongo DB and read and write data to it.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Stack Overflow&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This may sound ridiculous, but it is not. Stack overflow is a site where people can share information on software and programs of all kinds, and you can also ask a question about a problem that you have and get an answer speedy fast. It may also seem like people do not know what they are doing there but plenty of people out there that got their jobs on stack overflow.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Tools&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Using simple tools to help your code is another fantastic way to improve your code. The tools that are out there can help you find and solve bugs, organize, script, lower lines of code for better performance, etc. Tools are also another wonderful way to find some code library’s that you may have never heard of before. For example, the site replit they have a smart code ide which I consider a tool that helped me out and I discovered jQuery and I accessed a whole new level of programming.&lt;br&gt;
Find the article also on my medium site: &lt;a href="https://theoverpoweredpc.medium.com/4-ways-to-be-constantly-improving-your-code-f5b05ddac433"&gt;https://theoverpoweredpc.medium.com/4-ways-to-be-constantly-improving-your-code-f5b05ddac433&lt;/a&gt;&lt;/p&gt;

</description>
      <category>codequality</category>
      <category>help</category>
      <category>programming</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Why Moving to Linux is My Best Decision in 2021</title>
      <author>Melvin Liu</author>
      <pubDate>Fri, 10 Dec 2021 01:35:35 +0000</pubDate>
      <link>https://dev.to/melvnl/why-moving-to-linux-is-my-best-decision-in-2021-18md</link>
      <guid>https://dev.to/melvnl/why-moving-to-linux-is-my-best-decision-in-2021-18md</guid>
      <description>&lt;h3&gt;
  &lt;a href="#backstory"&gt;
  &lt;/a&gt;
  Backstory
&lt;/h3&gt;

&lt;p&gt;I was lucky enough to be accepted as an intern at the &lt;a href="https://about.bukalapak.com/en/"&gt;first unicorn in my country that goes IPO&lt;/a&gt; for software engineer position, as a large tech e-commerce company that exist for 11 years the technology used behind must be quite mature, and more complex than usual (micro-frontend, micro-services, different virtual private network to access certain repository, private npm library, etc.).&lt;/p&gt;

&lt;p&gt;I've been using windows since my first day of college as a computer science student, and I should say that there is a few moment where I'm really stressed spending hours setting up the development environment (PATH, and mostly adjusting incompatible library). But I hit my breaking point a few weeks ago, due to incompatibility with my company codebase that is developed in UNIX operating system (like Mac or Linux), here's the list of my main problem :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Incompatible or missing packages, for instance &lt;a href="https://stackoverflow.com/questions/12917569/cmd-patch-is-not-recognised-as-an-internal-external-command-operable-program/18851897"&gt;this&lt;/a&gt; and &lt;a href="https://www.npmjs.com/package/link-module-alias"&gt;this&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Failed to install dependencies due to &lt;a href="https://stackoverflow.com/questions/45801457/node-js-python-not-found-exception-due-to-node-sass-and-node-gyp/53009640#53009640"&gt;node-gyp error&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Illegal file name in windows, but allowed in UNIX&lt;/li&gt;
&lt;li&gt;A few more&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;My friend keep suggesting me to implement dual boot, but I'm quite afraid that my machine will break down, or something will go wrong during the installation since I'm using a quite old machine (ASUS x550j from 2016). Hence I'm looking for alternative solutions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#trying-wsl-windows-subsystem-for-linux"&gt;
  &lt;/a&gt;
  Trying WSL (Windows Subsystem for Linux)
&lt;/h3&gt;

&lt;p&gt;I still want to play valorant during my work hours #oops. Hence I tried WSL, unfortunately I had a difficult time setting up openvpn in WSL due to certain networking issue. Without vpn I couldn't run the repository that I was working on. After a few cup of coffees, I finally give in to dual boot.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#using-dual-booth"&gt;
  &lt;/a&gt;
  Using Dual Booth
&lt;/h3&gt;

&lt;p&gt;In the end , I decided to implement dual boot in my machine. I'm following this tutorial from &lt;a href="https://www.youtube.com/watch?v=-iSAyiicyQY&amp;amp;t=622s"&gt;youtube&lt;/a&gt; to install Ubuntu along with my windows OS. Now, why Ubuntu ? why not arch-Linux? or other cool distros? Simple, I'm not a hardcore Linux fanboy, and there is this class in my 4th semester that teach terminal with Ubuntu, hence I've previous familiarity.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-like-after-a-week-using-linux"&gt;
  &lt;/a&gt;
  What is like after a week using Linux
&lt;/h3&gt;

&lt;p&gt;Here is few things that I noticed:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;My laptop's fan is much calmer (Usually it often make annoying noises, especially when I'm using an IDE)&lt;/li&gt;
&lt;li&gt;I also noticed that when I'm idle, Linux doesn't eat as much RAM as Windows does.&lt;/li&gt;
&lt;li&gt;and the most important is that I haven't face any incompatibility problem so far&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;As an engineer, I highly suggest you to move from windows to UNIX based like Linux or Mac as soon as you can. Here ! Have some Linus Trovalds Meme!.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2S3mcqhP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/usyzcxrtl18yu7497luw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2S3mcqhP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/usyzcxrtl18yu7497luw.png" alt="Linux Trovalds mad at Nvidia" width="639" height="349"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>linux</category>
      <category>ubuntu</category>
    </item>
    <item>
      <title>Huge RCE in log4j logging library in JVM ecosystem</title>
      <author>dzikoysk ✨</author>
      <pubDate>Fri, 10 Dec 2021 01:22:54 +0000</pubDate>
      <link>https://dev.to/dzikoysk/huge-rce-in-log4j-logging-library-in-jvm-ecosystem-4d1g</link>
      <guid>https://dev.to/dzikoysk/huge-rce-in-log4j-logging-library-in-jvm-ecosystem-4d1g</guid>
      <description>&lt;p&gt;5 days ago log4j received hot-fix for huge RCE. It's not quite known topic and today it has been expolited in multiple projects.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/dzikoysk/status/1469091718867951618"&gt;https://twitter.com/dzikoysk/status/1469091718867951618&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It's really easy to reproduce, you should take a look at dependencies in your projects to address this issue. At least bump it to 2.15, the best choice is to move to e.g. logback, at least for a while.&lt;/p&gt;

</description>
      <category>java</category>
      <category>jvm</category>
      <category>kotlin</category>
      <category>scala</category>
    </item>
    <item>
      <title>Automating AppSec with Contrast Security</title>
      <author>Conor Bronsdon</author>
      <pubDate>Thu, 09 Dec 2021 22:41:16 +0000</pubDate>
      <link>https://dev.to/linearb/automating-appsec-with-contrast-security-4dlb</link>
      <guid>https://dev.to/linearb/automating-appsec-with-contrast-security-4dlb</guid>
      <description>&lt;p&gt;Everything we do is online. We bank online, access healthcare, pay our taxes, build our businesses -  and along the way we put trust in companies to keep us protected.&lt;/p&gt;

&lt;p&gt;Unfortunately, companies aren’t great at writing secure software. Contrast Security wants to change that.&lt;/p&gt;

&lt;p&gt;Jeff Williams, Co-founder &amp;amp; CTO of Contrast Security, and Steve Wilson, CPO, join the Dev Interrupted podcast to discuss the future of application security (AppSec), the importance of security automation and why the traditional way of doing security - where you scan app after app a few times a year - is over.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/6G6iaZ6CUOdjx3EZW13chi"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#episode-highlights-include"&gt;
  &lt;/a&gt;
  Episode Highlights Include:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;By the numbers: the average application is attacked &lt;strong&gt;13,000 times a month&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;And has over &lt;strong&gt;35 vulnerabilities&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;The reasons AppSec should to be automated&lt;/li&gt;
&lt;li&gt;How to reduce the cost of AppSec&lt;/li&gt;
&lt;li&gt;Why shifting left doesn't result in more secure code&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#join-the-dev-interrupted-community"&gt;
  &lt;/a&gt;
  Join the Dev Interrupted Community
&lt;/h2&gt;

&lt;p&gt;With over 2000 members, the Dev Interrupted Discord Community is the best place for Engineering Leaders to engage in daily conversation. No sales people allowed. &lt;a href="https://discord.com/invite/devinterrupted"&gt;Join the community &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--q3ei4suK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9ug8aw08f09fmzk0631c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q3ei4suK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9ug8aw08f09fmzk0631c.png" alt="https://discord.com/invite/devinterrupted" width="880" height="182"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>security</category>
      <category>podcast</category>
      <category>cybersecurity</category>
      <category>devops</category>
    </item>
    <item>
      <title>TikTok’s Algorithm, Timnit Gebru’s New Research Institution, and More &amp; more on DevNews!</title>
      <author>dev.to staff</author>
      <pubDate>Thu, 09 Dec 2021 22:33:08 +0000</pubDate>
      <link>https://dev.to/devteam/tiktoks-algorithm-timnit-gebrus-new-research-institution-and-more-more-on-devnews-3447</link>
      <guid>https://dev.to/devteam/tiktoks-algorithm-timnit-gebrus-new-research-institution-and-more-more-on-devnews-3447</guid>
      <description>&lt;p&gt;Let's talk about TikTok, AI ethics, and lots more in this week's episode of DevDiscuss&lt;/p&gt;


&lt;div class="podcastliquidtag"&gt;
  &lt;div class="podcastliquidtag__info"&gt;
    &lt;a href="/devnews/s6-e6-tiktok-s-algorithm-jetbrain-s-fleet-ide-timnit-gebru-s-new-research-institution-and-more"&gt;
      &lt;h1 class="podcastliquidtag__info__episodetitle"&gt;S6:E6 - TikTok’s Algorithm, JetBrain’s Fleet IDE, Timnit Gebru’s New Research Institution, and More&lt;/h1&gt;
    &lt;/a&gt;
    &lt;a href="/devnews"&gt;
      &lt;h2 class="podcastliquidtag__info__podcasttitle"&gt;
        DevNews
      &lt;/h2&gt;
    &lt;/a&gt;
  &lt;/div&gt;
  &lt;div id="record-s6-e6-tiktok-s-algorithm-jetbrain-s-fleet-ide-timnit-gebru-s-new-research-institution-and-more" class="podcastliquidtag__record"&gt;
    &lt;img class="button play-butt" id="play-butt-s6-e6-tiktok-s-algorithm-jetbrain-s-fleet-ide-timnit-gebru-s-new-research-institution-and-more" src="https://res.cloudinary.com/practicaldev/image/fetch/s--1SirfZpJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/playbutt-5e444a2eae28832efea0dec3342ccf28a228b326c47f46700d771801f75d6b88.png" alt="play"&gt;
    &lt;img class="button pause-butt" id="pause-butt-s6-e6-tiktok-s-algorithm-jetbrain-s-fleet-ide-timnit-gebru-s-new-research-institution-and-more" src="https://res.cloudinary.com/practicaldev/image/fetch/s--8YU2a2mP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/pausebutt-bba7cb5f432cfb16510e78835378fa22f45fa6ae52a624f7c9794fefa765c384.png" alt="pause"&gt;
    &lt;img class="podcastliquidtag__podcastimage" id="podcastimage-s6-e6-tiktok-s-algorithm-jetbrain-s-fleet-ide-timnit-gebru-s-new-research-institution-and-more" alt="DevNews" src="https://res.cloudinary.com/practicaldev/image/fetch/s--jJPvwj98--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--XOSCOlKI--/c_fill%2Cf_auto%2Cfl_progressive%2Cq_auto/https://dev-to-uploads.s3.amazonaws.com/uploads/podcast/image/346/5b0bd095-4a8c-4449-a43d-9e9b154b9d09.png"&gt;
  &lt;/div&gt;

  &lt;div class="hidden-audio" id="hidden-audio-s6-e6-tiktok-s-algorithm-jetbrain-s-fleet-ide-timnit-gebru-s-new-research-institution-and-more"&gt;
  
    
    Your browser does not support the audio element.
  
  &lt;div id="progressBar" class="audio-player-display"&gt;
    &lt;a href="/devnews/s6-e6-tiktok-s-algorithm-jetbrain-s-fleet-ide-timnit-gebru-s-new-research-institution-and-more"&gt;
      &lt;img id="episode-profile-image" alt="S6:E6 - TikTok’s Algorithm, JetBrain’s Fleet IDE, Timnit Gebru’s New Research Institution, and More" width="420" height="420" src="https://res.cloudinary.com/practicaldev/image/fetch/s--84VpOv6S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--3GWkSFQs--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_420%2Cq_auto%2Cw_420/https://dev-to-uploads.s3.amazonaws.com/uploads/podcast/image/346/5b0bd095-4a8c-4449-a43d-9e9b154b9d09.png"&gt;
      &lt;img id="animated-bars" src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZzrPEFmt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev.to/assets/animated-bars-4e8c57c8b58285fcf7d123680ad8af034cd5cd43b4d9209fe3aab49d1e9d77b3.gif" alt="animated volume bars"&gt;
    &lt;/a&gt;
    &lt;span id="barPlayPause"&gt;
      &lt;img class="butt play-butt" alt="play" src="https://res.cloudinary.com/practicaldev/image/fetch/s--1SirfZpJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/playbutt-5e444a2eae28832efea0dec3342ccf28a228b326c47f46700d771801f75d6b88.png"&gt;
      &lt;img class="butt pause-butt" alt="pause" src="https://res.cloudinary.com/practicaldev/image/fetch/s--8YU2a2mP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/pausebutt-bba7cb5f432cfb16510e78835378fa22f45fa6ae52a624f7c9794fefa765c384.png"&gt;
    &lt;/span&gt;
    &lt;span id="volume"&gt;
      &lt;span id="volumeindicator" class="volume-icon-wrapper showing"&gt;
        &lt;span id="volbutt"&gt;
          &lt;img alt="volume" class="icon-img" height="16" width="16" src="https://res.cloudinary.com/practicaldev/image/fetch/s--vTou7JP3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/volume-cd20707230ae3fc117b02de53c72af742cf7d666007e16e12f7ac11ebd8130a7.png"&gt;
        &lt;/span&gt;
        &lt;span class="range-wrapper"&gt;
          
        &lt;/span&gt;
      &lt;/span&gt;
      &lt;span id="mutebutt" class="volume-icon-wrapper hidden"&gt;
        &lt;img alt="volume-mute" class="icon-img" height="16" width="16" src="https://res.cloudinary.com/practicaldev/image/fetch/s--OX5NjT0t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/volume-mute-8f08ec668105565af8f8394eb18ab63acb386adbe0703afe3748eca8f2ecbf3b.png"&gt;
      &lt;/span&gt;
      &lt;span class="speed" id="speed"&gt;1x&lt;/span&gt;
    &lt;/span&gt;
    &lt;span class="buffer-wrapper" id="bufferwrapper"&gt;
      &lt;span id="buffer"&gt;&lt;/span&gt;
      &lt;span id="progress"&gt;&lt;/span&gt;
      &lt;span id="time"&gt;initializing...&lt;/span&gt;
      &lt;span id="closebutt"&gt;×&lt;/span&gt;
    &lt;/span&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Hosts:&lt;/strong&gt; &lt;a class="mentioned-user" href="https://dev.to/saronyitbarek"&gt;@saronyitbarek&lt;/a&gt;
 &amp;amp; &lt;a class="mentioned-user" href="https://dev.to/joshpuetz"&gt;@joshpuetz&lt;/a&gt;
 &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Guests:&lt;/strong&gt; &lt;br&gt;
&lt;strong&gt;&lt;a href="https://twitter.com/en_Dal"&gt;Dennis Ushakov&lt;/a&gt;&lt;/strong&gt;, Fleet Developer at JetBrains&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/julianmcauley"&gt;Julian McAuley&lt;/a&gt;&lt;/strong&gt;, Computer Science Professor at the University of California San Diego&lt;/p&gt;

&lt;p&gt;In this episode, we talk about Timnit Gebru’s new research institute, researcher’s contentious relationship with Facebook, and a company that has been secretly helping governments track people’s mobile phones. Then we chat with Dennis Ushakov about Fleet, the company’s new IDE. Finally, we speak with Julian McAuley about an internal TikTok document the New York Times obtained titled, TikTok Algo 101.&lt;/p&gt;




&lt;p&gt;&lt;em&gt;You can &lt;a href="//dev.to/devnews"&gt;follow DevNews&lt;/a&gt; to get episode notifications and listen right in your feed&lt;/em&gt; &lt;em&gt;— or subscribe on your platform of choice! Plus, if you leave us a review, we'll send you a free pack of thank-you stickers. Details &lt;a href="https://airtable.com/shr8oKAIMZgdYnBxx"&gt;here&lt;/a&gt;.&lt;/em&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#quick-listening-links"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Quick Listening Links&lt;/strong&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://podcasts.apple.com/us/podcast/s6-e6-tiktoks-algorithm-jetbrains-fleet-ide-timnit/id1525581923?i=1000544407504"&gt;Apple Podcasts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://open.spotify.com/episode/4tb72VcYgQRLOGxDKWPNDe"&gt;Spotify&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://podcasts.google.com/feed/aHR0cDovL2ZlZWRzLmNvZGVuZXdiaWUub3JnL2Rldm5ld3NfcG9kY2FzdC54bWw/episode/aHR0cHM6Ly9kZXZwb2RzLmRldi9wb2RjYXN0cy9kZXZuZXdzLzQ2?sa=X&amp;amp;ved=0CAQQkfYCahcKEwjYrv7K4tf0AhUAAAAAHQAAAAAQCg"&gt;Google&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.stitcher.com/show/devnews/episode/s6-e6-tiktoks-algorithm-jetbrains-fleet-ide-timnit-gebrus-new-research-institution-and-more-88888450"&gt;Stitcher&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.listennotes.com/podcasts/devnews/s6e6-tiktoks-algorithm-GZiyNL7gd30/"&gt;Listen Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tunein.com/podcasts/Technology-Podcasts/DevNews-p1352512/?topicId=168317867"&gt;TuneIn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://feeds.codenewbie.org/devnews_podcast.xml"&gt;RSS Feed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://devpods.dev/podcasts/devnews/episodes/236"&gt;DEV Pods website&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#acknowledgements"&gt;
  &lt;/a&gt;
  &lt;em&gt;Acknowledgements&lt;/em&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;&lt;a class="mentioned-user" href="https://dev.to/levisharpe"&gt;@levisharpe&lt;/a&gt;
 for producing &amp;amp; mixing the show&lt;/em&gt; &lt;/li&gt;
&lt;li&gt;Our Season 6 sponsors: &lt;a href="https://www.hackatom.org/"&gt;Cosmos HackAtom&lt;/a&gt; &amp;amp; &lt;a href="https://www.microsoft.com/en-us/dev-community/Event/Register?eventId=DevNewsPodcast_FI2YKJLHvJdZ&amp;amp;ocid=aid3038582"&gt;Microsoft Azure&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We hope you enjoy the show this week! 📰 &lt;/p&gt;

</description>
      <category>news</category>
      <category>podcast</category>
    </item>
    <item>
      <title>Testing Email Templates in ASP.NET Core
</title>
      <author>Muhammad Azeez</author>
      <pubDate>Thu, 09 Dec 2021 21:59:41 +0000</pubDate>
      <link>https://dev.to/mhmd_azeez/testing-email-templates-in-aspnet-core-p80</link>
      <guid>https://dev.to/mhmd_azeez/testing-email-templates-in-aspnet-core-p80</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;This post is my annual contribution to the 2021 &lt;a href="https://www.csadvent.christmas/"&gt;C# Advent Calendar&lt;/a&gt;. Please check out all the great posts from our wonderful community!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Many systems require sending emails to notify users. And testing these notifications manually is a pain. So it's one of the best use cases for integration testing. First, let's create strongly typed model for our &lt;code&gt;Welcome&lt;/code&gt; email:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Welcome&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;FullName&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And we create a Razor template for the email in &lt;code&gt;EmailTemplates/Welcome.cshtml&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;@model EmailSnapshotTesting.EmailTemplates.Welcome
@{
    Layout = "~/EmailTemplates/_Layout.cshtml";
}

&lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Welcome @Model.FullName&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Welcome to our wonderful service!&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And this is how the layout is going to look like in &lt;code&gt;EmaiTemplates/_Layout.cshtml&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
        @RenderBody()
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And then we create a service to send emails:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MailerService&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;IMailerService&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="n"&gt;IEmailRenderer&lt;/span&gt; &lt;span class="n"&gt;_renderer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="n"&gt;IMailPostman&lt;/span&gt; &lt;span class="n"&gt;_postman&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;MailerService&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;IEmailRenderer&lt;/span&gt; &lt;span class="n"&gt;renderer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;IMailPostman&lt;/span&gt; &lt;span class="n"&gt;postman&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;_renderer&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;renderer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;_postman&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;postman&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt; &lt;span class="nf"&gt;SendWelcomeEmail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Welcome&lt;/span&gt; &lt;span class="n"&gt;welcome&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nf"&gt;SendEmail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;$"Welcome &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;welcome&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FullName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt;!"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;welcome&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt; &lt;span class="n"&gt;SendEmail&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;subject&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;T&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;html&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_renderer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_postman&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;SendEmail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Message&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;Subject&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;subject&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;Address&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;HtmlBody&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;html&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;MailerService&lt;/code&gt; needs an &lt;code&gt;IEmailRenderer&lt;/code&gt; to get HTML content from the strongly typed model and an &lt;code&gt;IMailPostman&lt;/code&gt; to send the emails.&lt;/p&gt;

&lt;p&gt;Here is an implementation of &lt;code&gt;IEmailRenderer&lt;/code&gt; that renders the Razor template we specified above:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;Microsoft.AspNetCore.Mvc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;Microsoft.AspNetCore.Mvc.Abstractions&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;Microsoft.AspNetCore.Mvc.ModelBinding&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;Microsoft.AspNetCore.Mvc.Razor&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;Microsoft.AspNetCore.Mvc.Rendering&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;Microsoft.AspNetCore.Mvc.ViewFeatures&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="nn"&gt;EmailSnapshotTesting.Services&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// https://stackoverflow.com/a/49275145&lt;/span&gt;
&lt;span class="c1"&gt;// https://ppolyzos.com/2016/09/09/asp-net-core-render-view-to-string/&lt;/span&gt;

&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;RazorEmailRenderer&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;IEmailRenderer&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="n"&gt;IRazorViewEngine&lt;/span&gt; &lt;span class="n"&gt;_razorViewEngine&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="n"&gt;ITempDataProvider&lt;/span&gt; &lt;span class="n"&gt;_tempDataProvider&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="n"&gt;IServiceProvider&lt;/span&gt; &lt;span class="n"&gt;_serviceProvider&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;RazorEmailRenderer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;IRazorViewEngine&lt;/span&gt; &lt;span class="n"&gt;razorViewEngine&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;ITempDataProvider&lt;/span&gt; &lt;span class="n"&gt;tempDataProvider&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;IServiceProvider&lt;/span&gt; &lt;span class="n"&gt;serviceProvider&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;_razorViewEngine&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;razorViewEngine&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;_tempDataProvider&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tempDataProvider&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;_serviceProvider&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;serviceProvider&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Render&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Note: You can also support multiple languages by separating each locale into a folder&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;viewPath&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;$"~/EmailTemplates/&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt;.cshtml"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_razorViewEngine&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetView&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;viewPath&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Success&lt;/span&gt; &lt;span class="p"&gt;!=&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;searchedLocations&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"\n"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SearchedLocations&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;InvalidOperationException&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;$"Could not find this view: &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;viewPath&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt;. Searched locations:\n&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;searchedLocations&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;view&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;View&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;httpContext&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;DefaultHttpContext&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="n"&gt;httpContext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RequestServices&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_serviceProvider&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;actionContext&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;ActionContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="n"&gt;httpContext&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="n"&gt;httpContext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetRouteData&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
                &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;ActionDescriptor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;writer&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;StringWriter&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;viewDataDict&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;ViewDataDictionary&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;EmptyModelMetadataProvider&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
                &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;ModelStateDictionary&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

            &lt;span class="n"&gt;viewDataDict&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Model&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

            &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;viewContext&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;ViewContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="n"&gt;actionContext&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="n"&gt;view&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="n"&gt;viewDataDict&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;TempDataDictionary&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                    &lt;span class="n"&gt;httpContext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HttpContext&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="n"&gt;_tempDataProvider&lt;/span&gt;
                &lt;span class="p"&gt;),&lt;/span&gt;
                &lt;span class="n"&gt;writer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;HtmlHelperOptions&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;);&lt;/span&gt;

            &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;view&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;RenderAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;viewContext&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;writer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ToString&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's create a fake implementation of the &lt;code&gt;IEmailPostman&lt;/code&gt; for the integration tests:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;FakePostman&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;IMailPostman&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt; &lt;span class="nf"&gt;SendEmail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Message&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;LastMessage&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CompletedTask&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;Message&lt;/span&gt; &lt;span class="n"&gt;LastMessage&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's now register all of our services:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;builder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Services&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddScoped&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;IMailerService&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;MailerService&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;();&lt;/span&gt;
&lt;span class="n"&gt;builder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Services&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddScoped&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;IEmailRenderer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;RazorEmailRenderer&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;();&lt;/span&gt;
&lt;span class="c1"&gt;// In your project, you have to register a real postman in your app&lt;/span&gt;
&lt;span class="c1"&gt;// and swap it our with this fake postman in the integration tests&lt;/span&gt;
&lt;span class="c1"&gt;// by creating a custom WebApplicationFactory. For more info see: &lt;/span&gt;
&lt;span class="c1"&gt;// https://docs.microsoft.com/en-us/aspnet/core/test/integration-tests?view=aspnetcore-6.0#customize-webapplicationfactory&lt;/span&gt;
&lt;span class="n"&gt;builder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Services&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddScoped&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;IMailPostman&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;FakePostman&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We create a test project called &lt;code&gt;IntegrationTests&lt;/code&gt; using XUnit and inside the test project we create a folder called &lt;code&gt;Snapshots&lt;/code&gt; to store the expected html results.&lt;/p&gt;

&lt;p&gt;Then we can create our snapshot tests:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;EmailTests&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;IClassFixture&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;WebApplicationFactory&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Program&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="n"&gt;IEmailRenderer&lt;/span&gt; &lt;span class="n"&gt;_renderer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;_folderPath&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;EmailTests&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;WebApplicationFactory&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Program&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;factory&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Get the path for the snapshots folder&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;environment&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;factory&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Services&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetRequiredService&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;IWebHostEnvironment&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;();&lt;/span&gt;
        &lt;span class="n"&gt;_folderPath&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Combine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;environment&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ContentRootPath&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"../IntegrationTests/Snapshots"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;scope&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;factory&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Services&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;CreateScope&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="n"&gt;_renderer&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ServiceProvider&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetRequiredService&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;IEmailRenderer&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Fact&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt; &lt;span class="nf"&gt;CanSendWelcomeEmail&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;postman&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;FakePostman&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;mailService&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;MailerService&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_renderer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;postman&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;mailService&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;SendWelcomeEmail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"person@example.com"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Welcome&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;FullName&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Example Person"&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;

        &lt;span class="n"&gt;Assert&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Equal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"person@example.com"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;postman&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LastMessage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Address&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;Assert&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Equal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Welcome Example Person!"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;postman&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LastMessage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Subject&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nf"&gt;SaveToFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Welcome.actual.html"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;postman&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LastMessage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HtmlBody&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;expectedBody&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;File&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ReadAllTextAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Combine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_folderPath&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Welcome.expected.html"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

        &lt;span class="n"&gt;Assert&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Equal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;Sanitize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;postman&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LastMessage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HtmlBody&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nf"&gt;Sanitize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;expectedBody&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="nf"&gt;Sanitize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"\r\n"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"\n"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sc"&gt;'\r'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="sc"&gt;'\n'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt; &lt;span class="nf"&gt;SaveToFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;fullPath&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Combine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_folderPath&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;Directory&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;CreateDirectory&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetDirectoryName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fullPath&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;File&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteAllTextAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fullPath&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The first time your run &lt;code&gt;CanSendWelcomeEmail&lt;/code&gt; it's going to fail because &lt;code&gt;IntegrationTests/Snapshots/Welcome.expected.html&lt;/code&gt; doesn't exist. But it has created &lt;code&gt;IntegrationTests/Snapshots/Welcome.actual.html&lt;/code&gt;. So go ahead and take a look at it, it should be something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Welcome Example Person&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Welcome to our wonderful service!&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can test out the html using something like &lt;a href="https://putsmail.com/"&gt;PutsMail&lt;/a&gt; or &lt;a href="https://testi.at/"&gt;Testi@&lt;/a&gt;. If you like the result, rename it the file to &lt;code&gt;IntegrationTests/Snapshots/Welcome.expected.html&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Because we don't want git to track the actual results, you'll have to add this line to your .gitignore file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;*.actual.html
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now you have snapshot tests for your email templates, whenever you change them, you can easily see the results without having to manually click through the UI to send the emails. This will make your feedback loop much faster.&lt;/p&gt;

&lt;p&gt;You can download the source code on &lt;a href="https://github.com/mhmd-azeez/EmailSnapshotTesting"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>dotnet</category>
      <category>email</category>
      <category>snapshot</category>
      <category>testing</category>
    </item>
    <item>
      <title>Adventuring Into PHP #1</title>
      <author>Vinicius Ithalo</author>
      <pubDate>Thu, 09 Dec 2021 21:54:41 +0000</pubDate>
      <link>https://dev.to/vinic/adventuring-into-php-1-19l</link>
      <guid>https://dev.to/vinic/adventuring-into-php-1-19l</guid>
      <description>&lt;p&gt;I'm planning to start a series of posts showing my first impressions as someone inexperienced in programming who had his first impressions in Python. I'll try to post every time I finish studying so that the original feeling is still clear.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#so-i-decided-to-learn-php"&gt;
  &lt;/a&gt;
  So, I decided to learn PHP
&lt;/h2&gt;

&lt;p&gt;While messing around on Discord, I found a discussion about this language and how it was useful in web development. It wasn't very long and not all that interesting, but they said something that really caught my attention. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6JdvtMIg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/57tuji5demj0uaknifdl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6JdvtMIg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/57tuji5demj0uaknifdl.png" alt="Screenshot of the discussion" width="472" height="132"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I really like python and my focus is on web development, so why not try it out?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This thought was what made me start looking for online resources, a task that apparently I'm not intelligent enough to do, so I asked on Discord.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-php"&gt;
  &lt;/a&gt;
  What is PHP
&lt;/h2&gt;

&lt;p&gt;PHP is a scripting language specialized in web development and that can be embedded inside HTML and is executed on the server, meaning no shady scripts running on the client computer and more freedom working with sensitive data.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#installing-php"&gt;
  &lt;/a&gt;
  Installing PHP
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vUiGGt2Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pyc0m538htdcjra3789i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vUiGGt2Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pyc0m538htdcjra3789i.png" alt="XAMPP interface" width="661" height="419"&gt;&lt;/a&gt;&lt;br&gt;
PHP can be manually installed by itself, or so I was told, but the easiest way when learning is through those already configured packages, like WAMP, LAMP and XAMPP. People from discord recommended using XAMPP, so I'll be sticking with it for now. Having installed it, everything left is understanding how it works.&lt;/p&gt;

</description>
      <category>php</category>
      <category>beginners</category>
      <category>codenewbie</category>
      <category>discuss</category>
    </item>
    <item>
      <title>How to Set up Neovim for Full Stack Development</title>
      <author>bashbunni</author>
      <pubDate>Thu, 09 Dec 2021 21:49:57 +0000</pubDate>
      <link>https://dev.to/bashbunni/how-to-set-up-neovim-for-full-stack-development-39fn</link>
      <guid>https://dev.to/bashbunni/how-to-set-up-neovim-for-full-stack-development-39fn</guid>
      <description>&lt;h1&gt;
  &lt;a href="#set-up-neovim-for-full-stack-development"&gt;
  &lt;/a&gt;
  Set up Neovim for Full Stack Development
&lt;/h1&gt;

&lt;p&gt;You'll need:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Coc &lt;/li&gt;
&lt;li&gt;emmet&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#if-youre-new-to-neovim"&gt;
  &lt;/a&gt;
  If you're new to neovim:
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/neovim/neovim/releases/tag/v0.6.0"&gt;install neovim&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Install vim-plug (or any other plugin manager)&lt;br&gt;
&lt;a href="https://github.com/junegunn/vim-plug"&gt;https://github.com/junegunn/vim-plug&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;I recommend checking out my &lt;a href="https://github.com/bashbunni/dotfiles"&gt;dotfiles&lt;/a&gt; which has lots of comments so you can find any extra features that might be helpful for you.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;em&gt;I will write another post for a more in-depth description of getting started with neovim...&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#install-coc"&gt;
  &lt;/a&gt;
  Install Coc
&lt;/h2&gt;

&lt;p&gt;To install Coc, you'll want to follow their instructions at the link below. It is &lt;br&gt;
&lt;a href="https://github.com/neoclide/coc.nvim"&gt;https://github.com/neoclide/coc.nvim&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#configuring-coc"&gt;
  &lt;/a&gt;
  Configuring Coc
&lt;/h2&gt;

&lt;p&gt;With neovim open, type the following:&lt;br&gt;
&lt;code&gt;:CocConfig coc-html coc-tsserver coc-json coc-emmet  coc-prettier&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Coc tsserver is for javascript, typescript, and JSX support&lt;/p&gt;

&lt;p&gt;You'll want to create a shortcut for &lt;code&gt;:call CocAction('format')&lt;/code&gt;. I have the following shortcut so that I can format my projects with space + f:&lt;br&gt;
&lt;code&gt;nnoremap &amp;lt;leader&amp;gt;f :call CocAction('format')&amp;lt;CR&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#install-node-and-npm"&gt;
  &lt;/a&gt;
  Install Node and Npm
&lt;/h2&gt;

&lt;p&gt;head over to the &lt;a href="https://nodejs.org/en/download/"&gt;Node.js downloads page&lt;/a&gt; and follow their installation instructions. You can also use your package manager to install Node. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#debian-and-ubuntu"&gt;
  &lt;/a&gt;
  Debian and Ubuntu
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;sudo apt install nodejs&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#arch-linux"&gt;
  &lt;/a&gt;
  Arch Linux
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;sudo pacman -S nodejs&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#other-recommendations"&gt;
  &lt;/a&gt;
  Other Recommendations
&lt;/h2&gt;

&lt;p&gt;I highly recommend installing &lt;a href="https://linuxize.com/post/getting-started-with-tmux/"&gt;tmux&lt;/a&gt; so you can run your frontend, backend, neovim, and git cli in the same terminal window which makes it &lt;em&gt;way&lt;/em&gt; easier to keep your workspace clear. Tmux is great because you can name your sessions and easily navigate to the right spot for what you're looking to do. &lt;br&gt;
e.g.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BYqoXqtm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a3ylgz2lnmejkgtcp95a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BYqoXqtm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a3ylgz2lnmejkgtcp95a.png" alt="tmux demo" width="370" height="22"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>vim</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Progress: my contribution to the open source project</title>
      <author>MizuhoOkimoto</author>
      <pubDate>Thu, 09 Dec 2021 21:43:09 +0000</pubDate>
      <link>https://dev.to/okimotomizuho/progress-contribute-to-the-open-source-project-120c</link>
      <guid>https://dev.to/okimotomizuho/progress-contribute-to-the-open-source-project-120c</guid>
      <description>&lt;p&gt;I planned how to contribute to an open source project last week and wrote about it in my &lt;a href="https://dev.to/okimotomizuho/planning-how-to-contribute-to-an-open-source-project-48o6"&gt;previous blog&lt;/a&gt;. In the blog, I mentioned I would write a progress blog on Monday, so here I am!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#issue"&gt;
  &lt;/a&gt;
  Issue
&lt;/h2&gt;

&lt;p&gt;For the last assignment(we call Release) of my open source course, I've decided to contribute to an open source project which is my college's C language course notes. The &lt;a href="https://github.com/Seneca-ICTOER/IPC144/issues/64"&gt;issue&lt;/a&gt; I'm working on is about "Standardize frontmatter across all pages". When we contributed to the project in our last Release, we added &lt;code&gt;slug&lt;/code&gt; as one of the properties for frontmatter. However, it made links broken since internal links use page names vs. slugs, so my professor told me to review some of the PRs if they included it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#made-a-pr"&gt;
  &lt;/a&gt;
  Made a PR
&lt;/h2&gt;

&lt;p&gt;I've done the following for the standardization of Frontmatter:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Added &lt;code&gt;id&lt;/code&gt;, &lt;code&gt;title&lt;/code&gt;, &lt;code&gt;sidebar_position&lt;/code&gt;, and &lt;code&gt;description&lt;/code&gt; for all markdown pages&lt;/li&gt;
&lt;li&gt;Each property of frontmatter was unified in order&lt;/li&gt;
&lt;li&gt;Unified format of description&lt;/li&gt;
&lt;li&gt;Shortened &lt;code&gt;description&lt;/code&gt; to maximum 160 characters (Reason: &lt;code&gt;description&lt;/code&gt; becomes the &lt;code&gt;&amp;lt;meta name="description" content="..."/&amp;gt;&lt;/code&gt; inside the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;tag, and Google generally truncates snippets to ~155-160 characters)&lt;/li&gt;
&lt;li&gt;Added "Standardize frontmatter" to the CONTRIBUTING.md file
PR Link: &lt;a href="https://github.com/Seneca-ICTOER/IPC144/pull/143"&gt;https://github.com/Seneca-ICTOER/IPC144/pull/143&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#getting-reviews-and-change-requests"&gt;
  &lt;/a&gt;
  Getting reviews and change requests
&lt;/h2&gt;

&lt;p&gt;One of my classmates reviewed my changes, and he asked me to reinsert &lt;code&gt;slug&lt;/code&gt; in the root of the file, and also add a step in the Workflow in Contributing.md. Also, one of the repo's owners requested to change some &lt;code&gt;description&lt;/code&gt;s in the frontmatter. When I worked on Standardizing frontmatter, the description was hard since I'm familiar with the course notes, but I wasn't very good at C language.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#next-step"&gt;
  &lt;/a&gt;
  Next step
&lt;/h2&gt;

&lt;p&gt;The goal for this Release is for my PR to get merged by this Friday. However, I didn't change any codes in this contribution. I still need to make more PRs for my previous Releases. It would be a lot of things to do in my final exams week. I will try my best and put lots of effort into all of these Releases.&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>beginners</category>
      <category>programming</category>
      <category>github</category>
    </item>
    <item>
      <title>How do we integrate responsible AI?</title>
      <author>Mage</author>
      <pubDate>Thu, 09 Dec 2021 21:39:14 +0000</pubDate>
      <link>https://dev.to/mage_ai/how-do-we-integrate-responsible-ai-4eag</link>
      <guid>https://dev.to/mage_ai/how-do-we-integrate-responsible-ai-4eag</guid>
      <description>&lt;h2&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TLDR
&lt;/h2&gt;

&lt;p&gt;Responsible AI uses AI to empower individuals and put people’s values first. Its ethical deployment is essential to fight against algorithmic bias.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#outline"&gt;
  &lt;/a&gt;
  Outline
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Intro&lt;/li&gt;
&lt;li&gt;What is Responsible AI?&lt;/li&gt;
&lt;li&gt;Steps for Responsible AI&lt;/li&gt;
&lt;li&gt;Responsible AI in practice&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#intro"&gt;
  &lt;/a&gt;
  Intro
&lt;/h2&gt;

&lt;p&gt;The rapid development of AI will have a big impact on nearly every aspect of private and professional life. The determination of that impact’s success should be judged by how ethically and responsibly the technology is created. With laws not being able to keep up with the pace that AI is being developed, it falls on companies and developers to make a responsible product.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-responsible-ai"&gt;
  &lt;/a&gt;
  What is Responsible AI?
&lt;/h2&gt;


&lt;center&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lie53RZa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1qip68mi6wuemuxko9xn.png" alt="Image description" width="760" height="368"&gt;&lt;em&gt;(Source: FCW)&lt;/em&gt;
&lt;/center&gt;
&lt;br&gt;
&lt;p&gt;&lt;br&gt;
Data has proven itself to be a strong driver in the way companies make decisions. AI and data are being used to move businesses and society forward at rapid rates, with nearly limitless innovation.&lt;/p&gt;

&lt;p&gt;The power of AI is in its ability to be deployed quickly across the world; however, this could also be AI’s greatest threat, as algorithms can spread bias on a massive scale at a rapid pace. This is happening in instances like Goldman Sachs and Apple allegedly using an algorithm which is biased against women when issuing credit limits; or predictive policing companies like PredPol who have been accused of increasing racial bias in law enforcement.&lt;/p&gt;

&lt;p&gt;The legislative process hasn’t been able to keep up with AI’s innovation and as a result, has left companies to choose between higher profits or ethical good. Co-director of &lt;a href="https://shorensteincenter.org/programs/digital-platforms-democracy/"&gt;Digital Platforms and Democracy&lt;/a&gt; at Harvard, &lt;a href="https://cyber.harvard.edu/people/dghosh"&gt;Dipayan Ghosh&lt;/a&gt;, said, “we’re not talking about bad people, but [tech companies] are being presented with the opportunity to make their own rules, and nobody has repealed the laws of human nature.” Companies have developed company-specific standards of ethical practice as congress has yet to pass clear resolutions to regulate technology.&lt;/p&gt;

&lt;p&gt;Tech giants implement their own set of rules for what it means to create AI responsibly. Responsible AI is the practice of using AI to empower individuals and put people’s values first. Microsoft’s ethical values of AI are as follows: fairness, reliability and safety, privacy and security, inclusiveness, transparency, and accountability. Other companies: Apple, Facebook, Twitter, PWC, and many more have developed a similar set of principles to guide their growth and innovation in a responsible way. How well these guidelines are upheld will be up to the companies themselves until proper legal measures are taken to address the growing AI sector.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#steps-for-responsible-ai"&gt;
  &lt;/a&gt;
  Steps for Responsible AI
&lt;/h2&gt;


&lt;center&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iT1nZxiz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kr05mhyzad8qhlj4e1v3.jpeg" alt="Image description" width="880" height="526"&gt;&lt;em&gt;(Source: wbur)&lt;/em&gt;
&lt;/center&gt;
&lt;br&gt;
&lt;p&gt;&lt;br&gt;
As we touched on in &lt;a href="https://www.mage.ai/blog/why-does-ai-responsibility-matter"&gt;Why does AI responsibility matter?&lt;/a&gt;, algorithmic bias has become a serious problem as a result of AI’s greater implementation. Founder of &lt;a href="https://www.linkedin.com/company/ajlunited/"&gt;The Algorithmic Justice League&lt;/a&gt; and student at the MIT media lab, &lt;a href="https://www.media.mit.edu/people/joyab/overview/"&gt;Joy Buolamwini&lt;/a&gt; was introduced to algorithmic bias when a facial recognition model she created only was able to recognize white faces. When testing other projects that were built on the same generic facial recognition database, the same results occurred. Buolamwini has since made it her mission to increase education and resources to create a more equitable AI space.&lt;/p&gt;

&lt;p&gt;In a &lt;a href="https://www.youtube.com/watch?v=UG_X_7g63rY"&gt;Ted Talk&lt;/a&gt;, Buolamwini details the ways in which she believes a more responsible AI ecosystem can be created:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Who codes matters: A study done by &lt;a href="https://www.zippia.com/software-engineer-jobs/demographics/"&gt;Zippia&lt;/a&gt; found that males made up 67% of software developers. Of that, 57% were white. A lack of diversity in software means that only a few voices and experiences are being heard when developing software that affects millions. More voices within software means that people’s innate blindspots to certain issues are able to be addressed.&lt;/li&gt;
&lt;li&gt;How we code matters: Without any responsible or ethical guidelines, developers have no clear path to develop inclusive AI. In a 2021 &lt;a href="https://appen.com/whitepapers/the-state-of-ai-and-machine-learning-report/?utm_source=Paid&amp;amp;utm_medium=VentureBeat&amp;amp;utm_campaign=2021-Predictions&amp;amp;utm_content=2021-Predictions"&gt;state of AI and Machine Learning report&lt;/a&gt;, only 25% of companies surveyed said unbiased AI is a critical mission. Tech giants are making steps to increase awareness and adoption of responsible AI practices, and in 2016 formed the &lt;a href="https://partnershiponai.org/"&gt;Partnership on AI&lt;/a&gt; to advance AI’s positive outcomes on people and society.&lt;/li&gt;
&lt;li&gt;Why we code matters: AI can be used as a powerful tool for business to make more informed decisions, improve technology, and increase profit. There is also great potential for the ways AI can be used to better society as a whole. According to Buolawini “we’ve used tools of computation creation to unlock immense wealth. We now have the opportunity to unlock even greater equality if we make social change a priority and not an afterthought.”&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#responsible-ai-in-practice"&gt;
  &lt;/a&gt;
  Responsible AI in practice
&lt;/h2&gt;


&lt;center&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8uBIEKas--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c1z83t5rtj3767jvydy7.png" alt="Image description" width="782" height="502"&gt;&lt;/center&gt;

&lt;p&gt;At its current state, responsible AI occurs in varying degrees from company to company. Company guidelines and coalitions, such as the Partnership on AI, are a starting point in increasing AI’s ethical deployment; however, much more work needs to be done in order for responsible AI to be synonymous with general AI.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.linkedin.com/in/natasha-crampton-21189717/"&gt;Natasha Crampton&lt;/a&gt;, Microsoft’s Chief Responsible AI Officer, believes that AI’s harm can occur in three ways: quality of service harm, allocation harm, and representational harm. To minimize the chance for any of these harms, Crampton asks her teams to first think about whom the systems are built for, forcing teams to think about what things could go right and wrong in the model’s deployment. Integrating checks at the early stages of development makes for checks to be done when building the model, not when the model is complete.&lt;/p&gt;

&lt;p&gt;Tools to check for a dataset’s inclusivity and how well it represents a population are also deployed in model creation. In a &lt;a href="https://www.brookings.edu/events/what-is-responsible-ai/"&gt;Brookings panel&lt;/a&gt; on responsible AI, Crampton clarifies that “it goes beyond data, sometimes the discussion heavily focuses on data… when we’re building models we make lots of choices… we need to prioritize fairness at every point.” While fairness can often be difficult to contextualize as a metric, thinking about who you are building a model for can fine-tune focus on the greater social impact of a model.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;AI is developing at a rapid rate, and it’s imperative that ethical practices are integrated into new technology. Data and technology aren’t inherent solutions to all problems, and end up creating their own set of issues when left unchecked. Companies must be made aware of AI’s ethical problems to minimize errors and ensure that AI can be used to generate a more equitable world.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Let's Talk Logical Operators</title>
      <author>Katelyn</author>
      <pubDate>Thu, 09 Dec 2021 21:26:31 +0000</pubDate>
      <link>https://dev.to/katelynjewel/lets-talk-logical-operators-1gnd</link>
      <guid>https://dev.to/katelynjewel/lets-talk-logical-operators-1gnd</guid>
      <description>&lt;h2&gt;
  &lt;a href="#were-going-to-go-over-three-of-the-logical-operators-that-javascript-uses"&gt;
  &lt;/a&gt;
  We're going to go over three of the logical operators that Javascript uses:
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--clDRrAbt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4ia76ynvidwmmwgd3557.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--clDRrAbt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4ia76ynvidwmmwgd3557.png" alt="truthy operator values" width="512" height="288"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-use-a-logical-operator"&gt;
  &lt;/a&gt;
  Why use a logical operator?
&lt;/h3&gt;

&lt;p&gt;The benefit of a logical operator is to connect two (or more!) expressions so that the value of the total (all of the expressions you just connected) is dependent on those expressions. &lt;/p&gt;

&lt;p&gt;These operators are used within code to compare variables and values when creating various logic methods, often using their boolean values. When used within functions it gives more logic options for the code to use and change based on user behavior. This can also help DRY up code in condensing functions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-not"&gt;
  &lt;/a&gt;
  ! (NOT)
&lt;/h3&gt;

&lt;p&gt;The NOT &lt;code&gt;!&lt;/code&gt; operator is generally used as a boolean. Logical NOT will have truthy value if the operator it's called on (like &lt;code&gt;!(6 === 3)&lt;/code&gt; is false and vice-versa (like &lt;code&gt;!(6 === 6)&lt;/code&gt; is considered a false value. Here's a different way of wording the NOT operator with the previous examples: Return true if x is not strictly equal to y, otherwise return false. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6CfijKl2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w7zfe4gt7jnhzc134bnp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6CfijKl2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w7zfe4gt7jnhzc134bnp.png" alt="Logical Operators" width="290" height="174"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ampamp-and"&gt;
  &lt;/a&gt;
  &amp;amp;&amp;amp; (AND)
&lt;/h3&gt;

&lt;p&gt;The AND &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; operator will return true if both sides of the operator or boolean values are true (&lt;code&gt;(x &amp;lt; 10 &amp;amp;&amp;amp; y &amp;gt; 1)&lt;/code&gt; is true) otherwise, it returns false. In other words, when using the AND operator, if both x and y are true, then the logic as a whole is true. If one part of the logic is false, the whole problem returns false. It's also important to not that you can chain on the AND operator more than once. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EFCswGPv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dn3yv2zl5t3ne63j8yiv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EFCswGPv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dn3yv2zl5t3ne63j8yiv.png" alt="AND Operator" width="648" height="314"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-or"&gt;
  &lt;/a&gt;
  || (OR)
&lt;/h3&gt;

&lt;p&gt;As with the other operators, the OR &lt;code&gt;||&lt;/code&gt; operator is usually used within a boolean context. A problem using the OR operator will return true if either side of the values are true. If either/both x or y are true, return true. If both are false, return false. It's also important to not that you can chain on the OR operator more than once. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pQY88TK9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8th6s63s8fiom947h8ja.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pQY88TK9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8th6s63s8fiom947h8ja.png" alt="OR Operator" width="678" height="374"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-if-you-mix-operators"&gt;
  &lt;/a&gt;
  What if you mix operators?
&lt;/h3&gt;

&lt;p&gt;Operators can be mixed within one expression. However, logical operators use an order of precedence, called logical operator precedence if that occurs. The order is as follows: logical NOT (&lt;code&gt;!&lt;/code&gt;), logical AND (&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;), then logical OR (&lt;code&gt;||&lt;/code&gt;)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SkjgcpOS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gvqvcgup97hhnj0osj12.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SkjgcpOS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gvqvcgup97hhnj0osj12.png" alt="example" width="795" height="253"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TL;DR
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;NOT &lt;code&gt;!&lt;/code&gt; - this will negate a boolean value (!is = is not)&lt;/li&gt;
&lt;li&gt;AND &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; - can be used with two (or more) values and will return true if all values are also true, will return false otherwise&lt;/li&gt;
&lt;li&gt;OR &lt;code&gt;||&lt;/code&gt; - can also be used with two (or more) values and will return if any of the values are true, will return false if all of the values are false&lt;/li&gt;
&lt;li&gt;if you use these operators in the same expression, keep in mind the order in which Javascript will go through them. &lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
    </item>
  </channel>
</rss>
