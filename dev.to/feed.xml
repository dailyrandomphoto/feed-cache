<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>What's the most scared you've ever been as a developer?</title>
      <author>Sherry</author>
      <pubDate>Tue, 19 Oct 2021 04:59:47 +0000</pubDate>
      <link>https://dev.to/sherrydays/whats-the-most-scared-youve-ever-been-as-a-developer-2f7a</link>
      <guid>https://dev.to/sherrydays/whats-the-most-scared-youve-ever-been-as-a-developer-2f7a</guid>
      <description></description>
      <category>discuss</category>
      <category>career</category>
    </item>
    <item>
      <title>A ping when your model is done training !</title>
      <author>Ghaiyur</author>
      <pubDate>Tue, 19 Oct 2021 04:55:36 +0000</pubDate>
      <link>https://dev.to/ghaiyur/a-ping-when-your-model-is-done-training--46d4</link>
      <guid>https://dev.to/ghaiyur/a-ping-when-your-model-is-done-training--46d4</guid>
      <description>&lt;p&gt;In the early stages of my DS practice, I spent most of my time waiting around for models to train. Going for a break was a brave risk because what if the session failed and I end up wasting 30 minutes just loitering about??&lt;/p&gt;

&lt;p&gt;Wish had this back then, would have saved me the worries!&lt;br&gt;
Waiting for the #pytorch integration!&lt;/p&gt;

&lt;p&gt;Repo : &lt;a href="https://github.com/aporia-ai/mlnotify"&gt;https://github.com/aporia-ai/mlnotify&lt;/a&gt;&lt;/p&gt;

</description>
      <category>ai</category>
      <category>machinelearning</category>
      <category>jupyter</category>
      <category>modeltraining</category>
    </item>
    <item>
      <title>How to get all months from the year  using in Laravel</title>
      <author>Vickyvn</author>
      <pubDate>Tue, 19 Oct 2021 04:47:41 +0000</pubDate>
      <link>https://dev.to/vickyvn5/how-to-get-all-months-in-the-year-with-carbon-using-in-laravel-faf</link>
      <guid>https://dev.to/vickyvn5/how-to-get-all-months-in-the-year-with-carbon-using-in-laravel-faf</guid>
      <description>&lt;p&gt;$month = [];&lt;/p&gt;

&lt;p&gt;for ($m=1; $m&amp;lt;=12; $m++) {&lt;br&gt;
     $month[] = date('F', mktime(0,0,0,$m, 1, date('Y')));&lt;br&gt;
}&lt;/p&gt;

&lt;p&gt;print_r($month);&lt;/p&gt;

&lt;p&gt;date('F') will get result current month of the year. example October.&lt;br&gt;
so with the help of mktime(0,0,0,2, 1, date('Y')) we will get output February.&lt;br&gt;
 so we replace 2 to $m in for each and get answer in $month array.&lt;br&gt;
we will get output like this.&lt;br&gt;
Array ( &lt;br&gt;
 [0] =&amp;gt; January&lt;br&gt;
 [1] =&amp;gt; February &lt;br&gt;
 [2] =&amp;gt; March&lt;br&gt;
 [3] =&amp;gt; April&lt;br&gt;
 [4] =&amp;gt; May&lt;br&gt;
 [5] =&amp;gt; June&lt;br&gt;
 [6] =&amp;gt; July&lt;br&gt;
 [7] =&amp;gt; August&lt;br&gt;
 [8] =&amp;gt; September&lt;br&gt;
 [9] =&amp;gt; October&lt;br&gt;
 [10] =&amp;gt; November&lt;br&gt;
 [11] =&amp;gt; December &lt;br&gt;
)&lt;/p&gt;

</description>
      <category>laravel</category>
      <category>php</category>
    </item>
    <item>
      <title>Control your version with git.</title>
      <author>Kavindu Santhusa</author>
      <pubDate>Tue, 19 Oct 2021 04:33:17 +0000</pubDate>
      <link>https://dev.to/ksengine/what-is-git-2knc</link>
      <guid>https://dev.to/ksengine/what-is-git-2knc</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-git"&gt;
  &lt;/a&gt;
  What is git?
&lt;/h2&gt;

&lt;p&gt;Git is software for tracking changes in any set of files, usually used for coordinating work among programmers collaboratively developing source code during software development. Its goals include speed, data integrity, and support for distributed, non-linear workflows.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Instead of using git, you can use Github and/or Github desktop.&lt;/strong&gt; You can learn more about them in next article.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--g7uSz69z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://git-scm.com/images/logo%402x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g7uSz69z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://git-scm.com/images/logo%402x.png" alt="Git workflow"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://git-scm.com/"&gt;Install Git (git-scm.com)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://training.github.com/downloads/github-git-cheat-sheet/"&gt;GitHub Git Cheat Sheet - GitHub Cheatsheets&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is a short article, because I will write about Github Desktop in next article.&lt;/p&gt;

&lt;p&gt;This is a series about web development.&lt;br&gt;
üèÉ‚Äç‚ôÇÔ∏èüèÉ‚Äç‚ôÄÔ∏è Follow me for more articles.&lt;br&gt;
‚≠ê Vote this article if you like this article.&lt;/p&gt;

&lt;p&gt;Thanks üíñüíñüíñ.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>programming</category>
      <category>git</category>
    </item>
    <item>
      <title>Softmax Activation Function with Python</title>
      <author>keshavs759</author>
      <pubDate>Tue, 19 Oct 2021 03:52:50 +0000</pubDate>
      <link>https://dev.to/keshavs759/softmax-activation-function-with-python-2cpa</link>
      <guid>https://dev.to/keshavs759/softmax-activation-function-with-python-2cpa</guid>
      <description>&lt;br&gt;
&lt;br&gt;


&lt;p&gt;The softmax function is the generalized form of the sigmoid function for multiple dimensions. It is the mathematical function that converts the vector of numbers into the vector of the probabilities. It is commonly used as an activation function in the case of multi-class classification problems in machine learning. The output of the softmax is interpreted as the probability of getting each class.&lt;/p&gt;

&lt;p&gt;¬†&lt;/p&gt;

&lt;p&gt;The mathematical expression of softmax function is,&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iJGo5kJQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/36/softmax%2520formula.png" class="article-body-image-wrapper"&gt;&lt;img title="softmax formula" src="https://res.cloudinary.com/practicaldev/image/fetch/s--iJGo5kJQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/36/softmax%2520formula.png" alt="softmax formula"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let‚Äôs learn about the working of the softmax function with an example. Let‚Äôs consider a neural network that classifies a given image, whether it is of &lt;strong&gt;cat, dog, tiger, or none.&lt;/strong&gt; Let &lt;strong&gt;X &lt;/strong&gt;is the feature vector (i.e. &lt;strong&gt;X = [x1, x2, x3, x4]&lt;/strong&gt;).&lt;/p&gt;

&lt;p&gt;¬†&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PuDEowo---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/36/multiclass%2520classification.png" class="article-body-image-wrapper"&gt;&lt;img title="multi-class classification" src="https://res.cloudinary.com/practicaldev/image/fetch/s--PuDEowo---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/36/multiclass%2520classification.png" alt="multi-class classification"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We normally use a softmax activation function in the last layer of a neural network as shown in the figure above.&lt;/p&gt;

&lt;p&gt;¬†&lt;/p&gt;

&lt;p&gt;In the neural network shown above, we have&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---ZNsBhwX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/36/calculation%2520of%2520Z.png" class="article-body-image-wrapper"&gt;&lt;img title="calculation of Z" src="https://res.cloudinary.com/practicaldev/image/fetch/s---ZNsBhwX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/36/calculation%2520of%2520Z.png" alt="calculation of Z"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;¬†&lt;/p&gt;

&lt;p&gt;Where,&lt;/p&gt;

&lt;p&gt;¬†&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WIMwDw_V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/36/hidden%2520layer%2520values.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WIMwDw_V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/36/hidden%2520layer%2520values.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;, calculated values at layer (L-1),&lt;/p&gt;

&lt;p&gt;¬†&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CS9Nvoq3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/36/weignt%2520matrix.png" class="article-body-image-wrapper"&gt;&lt;img title="weight matrix" src="https://res.cloudinary.com/practicaldev/image/fetch/s--CS9Nvoq3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/36/weignt%2520matrix.png" alt="weight matrix"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;¬†&lt;/p&gt;

&lt;p&gt;is the weight matrix.¬†&lt;/p&gt;

&lt;p&gt;m = total nodes in layer L-1 and n = nodes in output layer L.&lt;/p&gt;

&lt;p&gt;For this example, m = 3, n = 4.&lt;/p&gt;

&lt;p&gt;¬†&lt;/p&gt;

&lt;p&gt;And,&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OFTwf7zD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/36/bias-new.png" class="article-body-image-wrapper"&gt;&lt;img title="bias" src="https://res.cloudinary.com/practicaldev/image/fetch/s--OFTwf7zD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/36/bias-new.png" alt="bias"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;¬†&lt;/p&gt;

&lt;p&gt;is the bias matrix, n = 4 in this example.&lt;/p&gt;

&lt;p&gt;¬†&lt;/p&gt;

&lt;p&gt;Now we calculate the exponential values of elements of matrix Z&lt;sup&gt; [L]&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZLBnU65q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/36/exponential%2520value%2520of%2520Z.png" class="article-body-image-wrapper"&gt;&lt;img title="exponential values of Z" src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZLBnU65q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/36/exponential%2520value%2520of%2520Z.png" alt="exponential values of Z"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And,&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--o2g0YKdI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/36/sum%2520of%2520exp.png" class="article-body-image-wrapper"&gt;&lt;img title="sum of exponential" src="https://res.cloudinary.com/practicaldev/image/fetch/s--o2g0YKdI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/36/sum%2520of%2520exp.png" alt="sum of exponential"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The probabilities of being in different classes given input &lt;strong&gt;X &lt;/strong&gt;are calculated as follows.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gyA4KrX1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/36/probability%2520calculation%2520formula.png" class="article-body-image-wrapper"&gt;&lt;img title="calculation of probabilities" src="https://res.cloudinary.com/practicaldev/image/fetch/s--gyA4KrX1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/36/probability%2520calculation%2520formula.png" alt="calculation of probabilities"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;¬†&lt;/p&gt;

&lt;p&gt;On the basis of this probability distribution, our neural network classifies whether the given image is of &lt;strong&gt;cat, dog, tiger, or none&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;¬†&lt;/p&gt;

&lt;p&gt;Now let‚Äôs make it clearer by taking some numeric values.&lt;/p&gt;

&lt;p&gt;¬†&lt;/p&gt;

&lt;p&gt;Suppose we input an image and obtained these values&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--W-aNEZas--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/36/Z%2520values%2520supposition.png" class="article-body-image-wrapper"&gt;&lt;img title="Z values supposition" src="https://res.cloudinary.com/practicaldev/image/fetch/s--W-aNEZas--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/36/Z%2520values%2520supposition.png" alt="Z values supposition"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then,&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--48dlqdw4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/36/exponential%2520value%2520of%2520Z%2520numeric.png" class="article-body-image-wrapper"&gt;&lt;img title="exponential value calculated numeric" src="https://res.cloudinary.com/practicaldev/image/fetch/s--48dlqdw4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/36/exponential%2520value%2520of%2520Z%2520numeric.png" alt="exponential value calculated numeric"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;¬†&lt;/p&gt;

&lt;p&gt;And,&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yuwyTB1m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/36/sum%2520of%2520exp%2520numeric.png" class="article-body-image-wrapper"&gt;&lt;img title="sum of exp numeric" src="https://res.cloudinary.com/practicaldev/image/fetch/s--yuwyTB1m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/36/sum%2520of%2520exp%2520numeric.png" alt="sum of exp numeric"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;¬†&lt;/p&gt;

&lt;p&gt;Therefore the probability distribution is calculated as,&lt;/p&gt;

&lt;p&gt;¬†&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QE-QEV_6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/36/probability%2520calculation%2520formula%2520numeric.png" class="article-body-image-wrapper"&gt;&lt;img title="probability calculation formula numeric" src="https://res.cloudinary.com/practicaldev/image/fetch/s--QE-QEV_6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/36/probability%2520calculation%2520formula%2520numeric.png" alt="probability calculation formula numeric"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;¬†&lt;/p&gt;

&lt;p&gt;By observing the probability distribution, we can say that the supplied image is of a &lt;strong&gt;dog.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Now let's see how we implement the softmax activation function with python&lt;/p&gt;

&lt;h2&gt;&lt;code&gt;Python Code:&lt;/code&gt;&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;import numpy as np

def softmax(Z_data):
    exp_Z_data = np.exp(Z_data)
    #print("exp(Z_data) = ",exp_Z_data)
    
    sum_of_exp_Z_data = np.sum(exp_Z_data)
    #print("sum of exponentials = ", sum_of_exp_Z_data)
    prob_dist = [exp_Zi/sum_of_exp_Z_data for exp_Zi in exp_Z_data]

    return np.array(prob_dist, dtype=float)
    

Z_data = [1.25,2.44,0.78,0.12] #for cat, dog, tiger, none

p_cat = softmax(Z_data)[0]
print("probability of being cat = ",p_cat)
p_dog = softmax(Z_data)[1]
print("probability of being dog = ",p_dog)
p_tiger = softmax(Z_data)[2]
print("probability of being tiger = ",p_tiger)
p_none = softmax(Z_data)[3]
print("probability of being none = ",p_none)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;¬†&lt;/p&gt;

&lt;p&gt;The output of this code is:&lt;/p&gt;

&lt;pre&gt;probability of being cat =  0.19101770813831334
probability of being dog =  0.627890718698843
probability of being tiger =  0.11938650086860875
probability of being none =  0.061705072294234845&lt;br&gt;&lt;br&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;



</description>
      <category>python</category>
      <category>machinelearning</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Build and Deploy apps with Svelte and Vite</title>
      <author>Eternal Dev</author>
      <pubDate>Tue, 19 Oct 2021 03:42:06 +0000</pubDate>
      <link>https://dev.to/eternaldev/build-and-deploy-apps-with-svelte-and-vite-1226</link>
      <guid>https://dev.to/eternaldev/build-and-deploy-apps-with-svelte-and-vite-1226</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-vite"&gt;
  &lt;/a&gt;
  What is Vite
&lt;/h2&gt;

&lt;p&gt;Vite is known as Next Generation Frontend Tooling System in its documentation. It means that it helps in building and creating a good developer experience for the frontend project. It is an alternative to Svelte default Rollup bundler and it is faster than Rollup when starting the development server.&lt;/p&gt;

&lt;p&gt;Vite is also going to be the default bundler for &lt;a href="https://kit.svelte.dev/docs#introduction-before-we-begin"&gt;SvelteKit&lt;/a&gt; (Framework on top of Svelte) and it proves to be very fast and has lots of cool features for development such as preserving the state during Hot Reload of the page.&lt;/p&gt;

&lt;p&gt;Features of Vite&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Instant Server Start&lt;/li&gt;
&lt;li&gt;Fast Hot Module Reload&lt;/li&gt;
&lt;li&gt;Optimized Production Build&lt;/li&gt;
&lt;li&gt;Out of box support for CSS, Typescript&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Vite is also not specific to a particular frontend framework. It works for multiple frameworks and it has a list of supported templates to bootstrap your next application.&lt;/p&gt;

&lt;p&gt;At the time of writing this tutorial, the list of templates supported by Vite&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Vanilla Javascript (JS / Typescript support)&lt;/li&gt;
&lt;li&gt;Vue (JS / Typescript support)&lt;/li&gt;
&lt;li&gt;React (JS / Typescript support)&lt;/li&gt;
&lt;li&gt;Preact (JS / Typescript support)&lt;/li&gt;
&lt;li&gt;Svelte (JS / Typescript support)&lt;/li&gt;
&lt;li&gt;Lit (JS / Typescript support)&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#why-use-vite-over-rollup"&gt;
  &lt;/a&gt;
  Why use Vite over Rollup
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://rollupjs.org/guide/en/"&gt;Rollup&lt;/a&gt; finds all the files in the project and bundles them into a single file. The server is started after this and then the file is served in the server. This can work well when it is a small project and the number of files is limited. As the project grows, the time for bundling the files gets big and each change takes a lot of time to reflect which can cause frustration for the developer.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#image-of-bundle-based-development-server-rollup"&gt;
  &lt;/a&gt;
  Image of bundle based Development server (Rollup)
&lt;/h3&gt;

&lt;p&gt;&lt;a href="///static/8d2bca125a7ee84af38ab7e519532a02/f9218/bundlebasedevserver.jpg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W4r-dFHM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://eternaldev.com/static/8d2bca125a7ee84af38ab7e519532a02/f9218/bundlebasedevserver.jpg" alt="BundleBaseDevServer.jpg" title="BundleBaseDevServer"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Vite follows a different approach by starting the server first and creates a bundle of the dependencies which doesn't change often using &lt;a href="https://esbuild.github.io/"&gt;esbuild&lt;/a&gt;. It is extremely fast compared to other bundler and results in faster loading of the development server. Vite also has &lt;a href="https://vitejs.dev/guide/features.html#hot-module-replacement"&gt;Hot Module Replacement (HMR)&lt;/a&gt; which means that when some file is edited, only the file and its related modules are built again instead of the whole bundle.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#image-of-native-esm-based-development-server-vite"&gt;
  &lt;/a&gt;
  Image of Native ESM based Development server (Vite)
&lt;/h3&gt;

&lt;p&gt;&lt;a href="///static/7b2b2cfdcd750a743c1d25c841367b33/f9218/nativeesbasedbundler.jpg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pMJZ6aAI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://eternaldev.com/static/7b2b2cfdcd750a743c1d25c841367b33/f9218/nativeesbasedbundler.jpg" alt="NativeEsBasedBundler.jpg" title="NativeEsBasedBundler"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ok, that's a lot of theory on what and why to use Vite. Let's look at some code and getting started with Vite and Svelte. Trust me these steps are very simple compared to the other theory parts.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-a-vite-project"&gt;
  &lt;/a&gt;
  Create a Vite project
&lt;/h2&gt;

&lt;p&gt;Go to the directory where you want the project to reside and then run the following command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm init vite@latest
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Select the project name&lt;/li&gt;
&lt;li&gt;Select the framework from the list. We are going with svelte&lt;/li&gt;
&lt;li&gt;Select the variant from the list. We are going with svelte-ts which has typescript support&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="///static/62fac541778eee220f64eed7f54fd9e0/6e88f/setupvite.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--v_xH3JVI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://eternaldev.com/static/62fac541778eee220f64eed7f54fd9e0/6e88f/setupvite.png" alt="Vite Setup" title="Vite Setup"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Done! You have created a new Vite project.&lt;/p&gt;

&lt;p&gt;Follow the steps below to start the dev server after installing the dependencies&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd svelte-vite-starter
npm install
npm run dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can follow the official documentation for &lt;a href="https://vitejs.dev/guide/"&gt;Getting started with Vite.&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#starting-vite-development-server"&gt;
  &lt;/a&gt;
  Starting Vite development server
&lt;/h2&gt;

&lt;p&gt;After running the server, you should be able to see the counter on the page. Let's build something a little more fun using some open API. We will build a random cat fact generator.&lt;/p&gt;

&lt;p&gt;We will make use of this API to get random facts&lt;/p&gt;

&lt;p&gt;&lt;a href="https://catfact.ninja/"&gt;https://catfact.ninja/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Create a new svelte file and name is as &lt;code&gt;CatFacts.svelte&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#script"&gt;
  &lt;/a&gt;
  Script
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;script&amp;gt;
    import { onMount } from "svelte";

    let promise;
    onMount(async () =&amp;gt; {
        promise = getRandomCatFacts();
    });

    const getRandomCatFacts = async () =&amp;gt; {
        const res = await fetch("https://catfact.ninja/fact");
        const json = await res.json();

        if (json.fact) {
            return json.fact;
        } else {
            throw new Error("Not found any interesting facts");
        }
    };

    const reload = () =&amp;gt; {
        promise = getRandomCatFacts();
    };
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We are creating a function that will call the API to get a random cat fact. Since it is an &lt;code&gt;async&lt;/code&gt; function, it will return a &lt;code&gt;Promise&lt;/code&gt; when calling the function. That promise is getting stored in the variable and then used in the HTML to display the result of the promise.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;onMount&lt;/code&gt; is a lifecycle method from Svelte which will be called automatically when the component is loaded in the UI for the first time. So we can use this lifecycle method to call the API to get our facts for the first time.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#html"&gt;
  &lt;/a&gt;
  HTML
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;main&amp;gt;
    &amp;lt;h1&amp;gt;Cat Facts&amp;lt;/h1&amp;gt;
    &amp;lt;div class="cat-fact-container"&amp;gt;
        {#await promise}
            &amp;lt;p&amp;gt;...loading...&amp;lt;/p&amp;gt;
        {:then fact}
            &amp;lt;p&amp;gt;{fact}&amp;lt;/p&amp;gt;
        {:catch error}
            &amp;lt;p style="color: red"&amp;gt;{error.message}&amp;lt;/p&amp;gt;
        {/await}
    &amp;lt;/div&amp;gt;

    &amp;lt;button on:click={() =&amp;gt; reload()}&amp;gt;One more fact&amp;lt;/button&amp;gt;
&amp;lt;/main&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We are using the svelte syntax of &lt;code&gt;await&lt;/code&gt; to wait for the promise to finish. At the time of loading the API, UI will show the loading message. After the result is fetched, the fact is displayed on the screen. If there is any error, we are showing that as well in the UI. So either the &lt;code&gt;then&lt;/code&gt; block or the &lt;code&gt;catch&lt;/code&gt; block is displayed on the screen based on the result of the promise&lt;/p&gt;

&lt;p&gt;We also have another button to call the API again and giving us a new and interesting fact&lt;/p&gt;

&lt;p&gt;&lt;a href="///static/751a1c5ab13a0699c132d7f9ca5371d3/40a97/output.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Jtvjx1Vb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://eternaldev.com/static/751a1c5ab13a0699c132d7f9ca5371d3/40a97/output.png" alt="Output.PNG" title="Output.PNG"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#style"&gt;
  &lt;/a&gt;
  Style
&lt;/h3&gt;

&lt;p&gt;If you want a similar style to what is done in the example, you can have a look at these simple CSS styles for the component&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;style&amp;gt;
    .cat-fact-container {
        border: 0.2rem solid #ccc;
        padding: 5rem;
        margin: 2rem;
        border-radius: 1rem;
        background-color: beige;
    }

    button {
        padding: 1rem 2rem;
        background-color: olive;
        color: white;
        font-weight: bold;
        text-transform: uppercase;
        border: 0px;
        border-radius: 1rem;
        box-shadow: 2px 2px 5px grey;
    }
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#building-vite-for-production"&gt;
  &lt;/a&gt;
  Building Vite for production
&lt;/h2&gt;

&lt;p&gt;Building the app for production is also easy as you can just run a command and vite will generate the &lt;code&gt;dist&lt;/code&gt; folder.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm run build
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After running this command, you can check to see if the &lt;code&gt;dist&lt;/code&gt; folder is created.&lt;/p&gt;

&lt;p&gt;After the build is generated, you can verify if the build is working properly using another command in Vite&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm run serve

**Output:**
vite preview

  &amp;gt; Local: http://localhost:5000/
  &amp;gt; Network: use `--host` to expose
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This command internally call the vite preview command and it helps serve the files in the &lt;code&gt;dist&lt;/code&gt; folder in your local so as to verify the production build.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#deploy-the-static-site"&gt;
  &lt;/a&gt;
  Deploy the static site
&lt;/h2&gt;

&lt;p&gt;Follow the documentation provided in the Vite docs to deploy the application based on the cloud provider of your choice&lt;/p&gt;

&lt;p&gt;&lt;a href="https://vitejs.dev/guide/static-deploy.html"&gt;https://vitejs.dev/guide/static-deploy.html&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;Svelte and Vite are really good tools for building your next side project and will help in making the developer experience a really smooth process. If you have any questions or comments, join our discord server and we can have a discussion&lt;/p&gt;

&lt;p&gt;Discord - &lt;a href="https://discord.gg/AUjrcK6eep"&gt;https://discord.gg/AUjrcK6eep&lt;/a&gt;&lt;/p&gt;

</description>
      <category>svelte</category>
    </item>
    <item>
      <title>Product developers‚Äô guide to customize data for AI ‚Äî Part 2: Join &amp; merge dataframes</title>
      <author>Mage</author>
      <pubDate>Tue, 19 Oct 2021 03:34:23 +0000</pubDate>
      <link>https://dev.to/mage_ai/product-developers-guide-to-customize-data-for-ai-part-2-join-merge-dataframes-2ghg</link>
      <guid>https://dev.to/mage_ai/product-developers-guide-to-customize-data-for-ai-part-2-join-merge-dataframes-2ghg</guid>
      <description>&lt;h2&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TLDR
&lt;/h2&gt;

&lt;p&gt;Before training ML models from multiple datasets, we need to understand how to relate datasets together. We‚Äôll cover how to look at relationships in data using join and merge.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#outline"&gt;
  &lt;/a&gt;
  Outline
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Introduction&lt;/li&gt;
&lt;li&gt;Before we begin&lt;/li&gt;
&lt;li&gt;Relationships&lt;/li&gt;
&lt;li&gt;Merge Dataframes&lt;/li&gt;
&lt;li&gt;Join Dataframes&lt;/li&gt;
&lt;li&gt;Conclusion&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;In this guide we‚Äôll go over one of the most core concepts in AI that most search for today, how to combine dataframes with join, merge, or concat. Welcome to the 2nd part of the ‚ÄúProduct developers‚Äô guide to customizing data for AI‚Äù. In this article we‚Äôll go over intermediate concepts and run through examples using merge and join in Pandas. We‚Äôll look at the relationships between the email content dataset and user email dataset. By the end of this series, you‚Äôll be ready to tackle designing datasets in order to begin training machine learning models.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#before-we-begin"&gt;
  &lt;/a&gt;
  Before we begin
&lt;/h2&gt;

&lt;p&gt;In this guide, we‚Äôll reuse our &lt;a href="https://app.box.com/s/tcloz4exgtckf4ed5yx1ykcv9tio3su0/file/850326590682"&gt;email_content dataset&lt;/a&gt; and include the &lt;a href="https://app.box.com/s/tcloz4exgtckf4ed5yx1ykcv9tio3su0/file/850342238809"&gt;user_email dataset&lt;/a&gt;. Like all other guides, we‚Äôll be using Google Collab and start by importing those datasets into dataframes. There will be references back to &lt;a href="https://www.mage.ai/blog/product-developers-guide-to-customizing-data-for-ai-part-1"&gt;part 1&lt;/a&gt; where we looked at folding, and basic set relations and continue off from there. If you aren‚Äôt familiar with transforming or sorting data, please read our &lt;a href="https://www.mage.ai/blog/product-developers-guide-to-getting-started-with-ai-pt-1-intro-dataframes"&gt;introductory guide&lt;/a&gt; before continuing.&lt;/p&gt;


&lt;center&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MEgG_OYz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zf2c9dt40urec3uoenhh.png" alt="Image description"&gt;&lt;em&gt;Read from the start&lt;/em&gt;
&lt;/center&gt;
&lt;h2&gt;
  &lt;a href="#relationships"&gt;
  &lt;/a&gt;
  Relationships
&lt;/h2&gt;

&lt;p&gt;Previously, we covered unions and intersections by concatenating dataframes. Building off of it, we introduce relative joins to always include a certain set.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#relative-joins"&gt;
  &lt;/a&gt;
  Relative joins
&lt;/h3&gt;

&lt;p&gt;Another type of join is based on a certain side of the dataset. In set theory this is called a relative join, and contains everything on 1 side. In our case of having 2 datasets, we have 2 sides, the left side and the right side.&lt;/p&gt;


&lt;center&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MfUBl5o9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zqcnnkrihsvl3i6lc2pj.png" alt="Image description"&gt;&lt;em&gt;Include all values from the set (Source: &lt;a href="https://www.codeproject.com/Articles/33052/Visual-Representation-of-SQL-Joins"&gt;CodeProject&lt;/a&gt;)&lt;/em&gt;
&lt;/center&gt;
&lt;h2&gt;
  &lt;a href="#merge-dataframes"&gt;
  &lt;/a&gt;
  Merge dataframes
&lt;/h2&gt;

&lt;p&gt;In Pandas, the merge function can be used together with keys, or unique pairs used to form the relationships seen in above. These are demonstrated best when there is data that is unique to both dataframes, in other words when the data doesn‚Äôt always exist.&lt;/p&gt;

&lt;p&gt;Our starting dataframes are too ideal, so we‚Äôll begin by spliting them to make it more realistic for an email campaign. We‚Äôll take the leading 60 rows of the email_content, then ignore the 1st 10 email_id values from user_email. &lt;/p&gt;


&lt;center&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L8-eKjVi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4n69l2gh0kvtys4mt2j2.png" alt="Image description"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LqdK7DGN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/guykzbhkuczbdcexn2ik.png" alt="Image description"&gt;&lt;em&gt;This results in missing keys for email_id at the start, and id at the end&lt;/em&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vO5NBJCk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6azgutovena6pfvjgvvw.png" alt="Image description"&gt;&lt;em&gt;The left contains values not in the right, and the right contains values not in the left (Source: &lt;a href="https://stackoverflow.com/questions/53645882/pandas-merging-101"&gt;SO&lt;/a&gt;)&lt;/em&gt;
&lt;/center&gt;

&lt;p&gt;We can use merge to establish the same relationships from our previous section, completing an inner and outer join as an intersection or union. Merge is quite useful when the columns‚Äô names don‚Äôt match but we still want to relate them together. In this case our matching keys are the id in the campaign and email_id of the inbox.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#intersection"&gt;
  &lt;/a&gt;
  Intersection
&lt;/h3&gt;

&lt;p&gt;To perform an intersection, we need 2 matching keys, and pass how=‚Äôinner‚Äô. To check our result by an additional parameter called indicator and set it to True.&lt;br&gt;
&lt;/p&gt;
&lt;center&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uA5iXFup--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hj9xsdsof1ccvbrrilx7.png" alt="Image description"&gt;&lt;em&gt;Areas where email_id and id have matching values 11 to 60.&lt;/em&gt;
&lt;/center&gt;

&lt;p&gt;This is the correct result as the only valid _merge value for an intersection is both.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#union"&gt;
  &lt;/a&gt;
  Union
&lt;/h3&gt;

&lt;p&gt;To perform a union, we repeat the process of matching keys, and pass how=‚Äòouter‚Äô.&lt;br&gt;
This time we‚Äôll switch the order of the dataframes, choosing campaign on the left and inbox on the right. The results show the columns in the merge are displayed differently.&lt;/p&gt;


&lt;center&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LMRtqPai--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u8dnqro8ci1ic1nuexa3.png" alt="Image description"&gt;&lt;em&gt;Include all values in both, id and email_id ranging from 1 to 100&lt;/em&gt;
&lt;/center&gt;

&lt;p&gt;But merge can do more than concat, it can also perform the relative joins. This is categorized as a left or right join and may be used to relate the datasets. One such relation is columns, or features for ML models. Another relation is to introduce more rows, or samples for ML models.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#left-join"&gt;
  &lt;/a&gt;
  Left join
&lt;/h3&gt;

&lt;p&gt;To start off, let‚Äôs do a left join on the user_inbox dataframe with the email_content.&lt;br&gt;
Since email content and user inbox share the email_id we choose that as our parameter.&lt;br&gt;
For our matching values, we have id from email_content, and on the left we have email_id from user_inbox. We‚Äôll add back the indicator to check our result.&lt;/p&gt;


&lt;center&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---x7zU6Ye--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eddjqreadn1vi454t64f.png" alt="Image description"&gt;&lt;em&gt;From the campaign dataset there are values for ids ranging from 1 to 60&lt;/em&gt;
&lt;/center&gt;

&lt;p&gt;As a check, note that the _merge column doesn‚Äôt contain values for right_only.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#right-join"&gt;
  &lt;/a&gt;
  Right join
&lt;/h3&gt;

&lt;p&gt;To create the right join in Pandas, we merge and pass the ‚Äúon‚Äù values, using how=‚Äôright‚Äô. We include the indicator to check once again.&lt;/p&gt;


&lt;center&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jStGu0Yx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ru3gccuapixxuuysl5b1.png" alt="Image description"&gt;&lt;em&gt;From the inbox dataset, the email_id ranges from 11 to 100.&lt;/em&gt;
&lt;/center&gt;

&lt;p&gt;A common misconception is that if we flip the order of the datasets, it will be the same as switching from left to right. This is wrong, because choosing which dataset is on the right and which dataset is on the left decides the column order as well.&lt;/p&gt;

&lt;p&gt;Here we switch inbox and email, and perform another intersection.&lt;/p&gt;


&lt;center&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Qig9zNIh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2yrutbor3i34nzravw8p.png" alt="Image description"&gt;&lt;em&gt;The dimensions match the 1st example, but the order of the columns are changed&lt;/em&gt;
&lt;/center&gt;
&lt;h2&gt;
  &lt;a href="#join-dataframes"&gt;
  &lt;/a&gt;
  Join dataframes
&lt;/h2&gt;

&lt;p&gt;If you haven‚Äôt noticed, there‚Äôs the 2 pesky identical columns problem. In part 1, our previous approach was to convert the dataframes using concat and drop_duplicates, but here we don‚Äôt have a shared key. We can accomplish removing identical columns by applying the join and set_index method. This is a much better alternative, as its built-in functionality accomplishes it faster, looks cleaner, and with minimal effort or code.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#set-index"&gt;
  &lt;/a&gt;
  Set index
&lt;/h3&gt;

&lt;p&gt;Before we can call join, we need to tell it what the similarities are. By default, join uses the index to determine which values to join on. As a result, the set index function is used similarly to merge‚Äôs ‚Äúleft_on=‚Äù, and ‚Äúright_on=‚Äù. By changing the column into an index, it removes the column entirely. This is reminiscent of using drop_duplicates. But if you want the columns to remain you can include ‚Äòdrop=False‚Äô to keep the columns.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#join"&gt;
  &lt;/a&gt;
  Join
&lt;/h3&gt;

&lt;p&gt;Join works just like merge, instead of providing a list, the caller will represent the left, and the argument will represent the right, set_index is used to specify the match.&lt;/p&gt;


&lt;center&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---ijKtupH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rm72jqy72ahlo1nvluto.png" alt="Image description"&gt;&lt;em&gt;Notice how the index columns for id and email_id are gone now&lt;/em&gt;
&lt;/center&gt;

&lt;p&gt;With drop=False, the result is similar to merge.&lt;/p&gt;


&lt;center&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qyiik2Y0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/78drgc8wphvgvlejulk2.png" alt="Image description"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L_FZ37yd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gieabc1nwb43n4cklhsj.png" alt="Image description"&gt;&lt;em&gt;Result is similar, but the index values differ. Merge keeps row number, join was overwritten.&lt;/em&gt;
&lt;/center&gt;
&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Merge handles everything join and concat does, but each excels at different situations. In most cases, merge is more versatile and therefore used more. In the next part, we‚Äôll apply what we‚Äôve learned to handle larger datasets, thus completing the entire marketing campaign featuring data on emails, the inbox, and user statistics.&lt;/p&gt;

</description>
      <category>machinelearning</category>
      <category>programming</category>
      <category>tutorial</category>
      <category>python</category>
    </item>
    <item>
      <title>Guess the output of this JS code</title>
      <author>Shuvo</author>
      <pubDate>Tue, 19 Oct 2021 03:29:55 +0000</pubDate>
      <link>https://dev.to/0shuvo0/guess-the-output-of-this-js-code-117</link>
      <guid>https://dev.to/0shuvo0/guess-the-output-of-this-js-code-117</guid>
      <description>&lt;p&gt;Try to guess the output of this code without running it. Let me know in the comment what you got üòâ&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;hint: &lt;em&gt;You may have got the first half right&lt;/em&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>18 amazing ü§© GitHub repositories that will help you ü™Ñ make a Beautiful Project</title>
      <author>Coders</author>
      <pubDate>Tue, 19 Oct 2021 03:02:44 +0000</pubDate>
      <link>https://dev.to/huuah/18-amazing-github-repositories-that-will-help-you-make-a-beautiful-project-4hj2</link>
      <guid>https://dev.to/huuah/18-amazing-github-repositories-that-will-help-you-make-a-beautiful-project-4hj2</guid>
      <description>&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;Today I would like to give examples of good GitHub repositories that will help you implement complex animations, as well as useful functions in your projects.&lt;/p&gt;
&lt;p&gt;So let's get started¬†&lt;/p&gt;

&lt;p&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/10-awesome-github-repos-every-web-developer-should-know/&amp;amp;ved=2ahUKEwiw1e_qpqbzAhU78HMBHVvBAWkQFnoECBAQAQ&amp;amp;usg=AOvVaw1YdY91hlP3suK6HGMF0MXW"&gt;18 amazing ü§© GitHub repositories that will help you ü™Ñ make a Beautiful Project&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Making Better Pull Requests</title>
      <author>Eevis (she/her)</author>
      <pubDate>Tue, 19 Oct 2021 02:56:52 +0000</pubDate>
      <link>https://dev.to/eevajonnapanula/making-better-pull-requests-n01</link>
      <guid>https://dev.to/eevajonnapanula/making-better-pull-requests-n01</guid>
      <description>&lt;p&gt;Hactoberfest is here! Time to find those issues and participating repositories, write some code, and create pull requests! I've been eagerly waiting for October, mostly because of Hacktoberfest.&lt;/p&gt;

&lt;p&gt;Last year, I participated in Hacktoberfest by being a contributor and a maintainer. If you're interested, you can read about my blog post about last year's experiences: &lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/eevajonnapanula" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FpXj8uGX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--CEbP3D7X--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/201004/e005d101-0ca8-4346-86eb-91bf162b30c4.png" alt="eevajonnapanula"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/eevajonnapanula/story-of-an-accidental-open-source-maintainer-6jh" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Story of an accidental open source maintainer&lt;/h2&gt;
      &lt;h3&gt;Eevis (she/her) „Éª Nov 6 '20 „Éª 6 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#hacktoberfest&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#opensource&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#community&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;This year, I decided to take it a bit easier. I mean, as mentioned in the blog post, last year we bought a house and were moving during October. Another challenging thing from last year was the maintainer part. I loved it, but it really, really stressed me out. So I'm not going to do it this year. And there's another piece to the puzzle this year as well: I'm switching jobs, so that's another reason to take it easy during this Hacktoberfest.&lt;/p&gt;

&lt;p&gt;One big part of Hacktoberfest is creating pull requests. I remember the first time I made a PR in an open-source repository. I didn't know the repository's maintainers, and it didn't have any guidelines for pull requests, such as a pull request template. I had no idea what the maintainer expected from a PR. I felt super anxious.&lt;/p&gt;

&lt;p&gt;If I had known back then what I know now, it would've been easier for me. So that's why in this blog post, I'm sharing some tips on how to make better PRs. These are the best practices I've picked up along the way. However, note that there might be some other conventions in the project you're contributing. Be sure to check them. There might be a &lt;a href="https://docs.github.com/en/communities/using-templates-to-encourage-useful-issues-and-pull-requests/about-issue-and-pull-request-templates"&gt;pull request template&lt;/a&gt; or contribution guidelines.&lt;/p&gt;

&lt;p&gt;The tips I'm going to give are the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://eevis.codes/blog/2021-10-18/making-better-pull-requests/#keep-the-pull-request-in-scope"&gt;Keep the pull request in scope&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://eevis.codes/blog/2021-10-18/making-better-pull-requests/#give-context-to-the-reviewer"&gt;Give context to the reviewer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://eevis.codes/blog/2021-10-18/making-better-pull-requests/#add-a-picture-of-the-changes"&gt;Add a picture of the changes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://eevis.codes/blog/2021-10-18/making-better-pull-requests/#pull-request-is-a-place-for-discussion"&gt;Pull request is a place for discussion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#keep-the-pull-request-in-scope"&gt;
  &lt;/a&gt;
  Keep the Pull Request in Scope
&lt;/h2&gt;

&lt;p&gt;One reason for keeping the PR in scope is that smaller PRs are always easier to review than those with lots of changes. Sometimes, of course, the feature you are working on is a big one, and thus the PR gets enormous. However, keeping in the scope in those cases means that if you find things to fix or improve, I would suggest creating a separate PR if they're not part of the feature.&lt;/p&gt;

&lt;p&gt;Sometimes it would be good to separate the feature into smaller PRs. The scope gets smaller, and thus there will be less code to review. In these cases, I would advise splitting the PR into logical parts. For example, if you are building an app for period tracking, and the feature you're implementing is a calendar view where the user adds their data, there are multiple ways to split that.&lt;/p&gt;

&lt;p&gt;Maybe the first part would be creating the endpoint to the backend and then adding a simple way to input the data with just input fields (so, no calendar yet). Maybe you could combine these all into a feature branch in the end.&lt;/p&gt;

&lt;p&gt;Whatever you decide to do, be sure to check what the conventions are in the project you're working on. If you're working with a team, you can reach out and talk with them. There might also be a document about contributing, where there might be something about this topic.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#give-context-to-the-reviewer"&gt;
  &lt;/a&gt;
  Give Context to the Reviewer
&lt;/h2&gt;

&lt;p&gt;When I'm reviewing a pull request, I love seeing some context about the changes. It might be a link to an issue (with more info than a vague title), or it might be a text explaining the context in the PR description. Anyway, having that context helps me get into reviewing mode and know what I'm reviewing.&lt;/p&gt;

&lt;p&gt;Continuing from the example from the previous section, I would briefly write about the calendar view as a goal or link to the issue and then explain what I did in the pull request. I would also add some notes about the decision to split the feature and maybe some words about what's not yet included.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#add-a-picture-of-the-changes"&gt;
  &lt;/a&gt;
  Add a Picture of the Changes
&lt;/h2&gt;

&lt;p&gt;When the pull request is about changing something in the UI, I love seeing a picture of the changes. It's part of the context, and I know what to look for when I pull the branch and test it.&lt;/p&gt;

&lt;p&gt;Continuing with the example, after moving on to making changes to the UI, I would add screenshots of those changes to the pull request. I might consider adding a before picture when finally implementing the calendar view to see how the feature evolves. That, however, would depend on the situation.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pull-request-is-a-place-for-discussion"&gt;
  &lt;/a&gt;
  Pull Request is a Place for Discussion
&lt;/h2&gt;

&lt;p&gt;One piece of advice I want to give here is that pull requests are places for discussion. It's ok to submit a pull request with questions (you could use a draft pull request in Github for that). On the other hand, you'll likely get questions and comments. Maybe even request to change something. When you do, and if they're not clear, it's always ok to ask for clarification or the reasons for change requests.&lt;/p&gt;

&lt;p&gt;Why am I pointing this out? Well, at the beginning of my career, I felt like all the things said were God's truth, and I, as a newbie developer, didn't have any place to ask or question anything. That was even if the reviewers were friendly and tried to facilitate an atmosphere where that would've been ok. I would've needed to hear this advice many more times back then for it to sink in.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summing-up"&gt;
  &lt;/a&gt;
  Summing Up
&lt;/h2&gt;

&lt;p&gt;In this blog post, I've discussed pull requests and how to make them better. The advice is subjective, and it's based on my own experiences, and you might have other opinions. That's ok.&lt;/p&gt;

&lt;p&gt;I pointed out that it would be good to keep the pull request in scope and try not to do everything in one pull request. If you want to make some additional changes, I'd suggest opening a separate PR for that. Also, in the pull request description, give context about the pull request for the reviewer. Additionally, if there are changes in the UI, I suggest adding a screenshot of those changes. The last thing I pointed out is that pull requests are places for discussion.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#links"&gt;
  &lt;/a&gt;
  Links
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/godspowercuche/story-of-an-accidental-open-source-maintainer-4h01-temp-slug-4940294"&gt;Eevis Panula - Story of an accidental open source maintainer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.github.com/en/communities/using-templates-to-encourage-useful-issues-and-pull-requests/about-issue-and-pull-request-templates"&gt;Github - Pull request template&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Cover photo by &lt;a href="https://unsplash.com/@thisisengineering?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;ThisisEngineering RAEng&lt;/a&gt; on &lt;a href="https://unsplash.com/@thisisengineering?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

</description>
      <category>hacktoberfest</category>
      <category>opensource</category>
      <category>github</category>
      <category>programming</category>
    </item>
    <item>
      <title>15 reasons why everyone should learn JavaScript right now</title>
      <author>Coders</author>
      <pubDate>Tue, 19 Oct 2021 02:31:06 +0000</pubDate>
      <link>https://dev.to/huuah/15-reasons-why-everyone-should-learn-javascript-right-now-b1n</link>
      <guid>https://dev.to/huuah/15-reasons-why-everyone-should-learn-javascript-right-now-b1n</guid>
      <description>&lt;p&gt;There are two reasons why it‚Äôs sometimes hard to make a choice; either there are too few options to choose from, or there are too many. When it comes to programming languages, there is an embarrassment of riches, which in turn can cause mental gridlock. There‚Äôs Python, Java, JavaScript, C/CPP, PHP, Swift, C#, Ruby, Objective-C, and SQL, and that‚Äôs not even the full list! How do you choose?&lt;/p&gt;
&lt;p&gt;Now, bear in mind that as far as programmers go, there‚Äôs no such thing as knowing too many languages. A programmer with a grasp of many languages is a programmer who is highly marketable and very much in demand. Upskilling is always a smart way to go.¬†&lt;/p&gt;
&lt;p&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/15-reasons-why-you-should-learn-javascript-right-now/&amp;amp;ved=2ahUKEwjq3LetlNPzAhWCjeYKHXtzBaUQFnoECAQQBQ&amp;amp;usg=AOvVaw2jcX34baRnSUligpWiA29Q&amp;amp;cshid=1634532657525"&gt;15 reasons why you should learn JavaScript right now&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>The learning Path For Becoming Ethical Hacker [Beginners] 2021</title>
      <author>Coders</author>
      <pubDate>Tue, 19 Oct 2021 02:18:47 +0000</pubDate>
      <link>https://dev.to/huuah/the-learning-path-for-ethical-hacker-beginners-2021-16l4</link>
      <guid>https://dev.to/huuah/the-learning-path-for-ethical-hacker-beginners-2021-16l4</guid>
      <description>&lt;h2&gt;&lt;strong&gt;Who is an Ethical Hacker?&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;An ethical hacker is a computer network specialist who deals with the security posture of an organization. His job involves eliciting security flaws in the organization he is working for by testing all aspects of the system and its services for any sort of vulnerabilities. The key point to notice is that all this is done with the permission of the owners of the organization and without any malicious intent. An ethical hacker is also known as a white hat hacker and is the stark opposite of a black hat hacker, a.k.a crackers who hack with the sole purpose of bringing about some sort of disruption, or chaos from the vulnerabilities they find.¬†&lt;/p&gt;
&lt;p&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/ethical-hacking-roadmap-a-beginners-guide/&amp;amp;ved=2ahUKEwjSy6-98ZvzAhXQxTgGHSS8Bu84ChAWegQIGxAB&amp;amp;usg=AOvVaw3-vFooaWUJypOS-FfvXpjK"&gt;The learning Path For Ethical Hacker [Beginners] 2021&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

</description>
    </item>
  </channel>
</rss>
