<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>CAST AI vs. Spot.io: Two approaches to automated cloud cost optimization</title>
      <author>CAST AI</author>
      <pubDate>Tue, 24 Aug 2021 14:24:02 +0000</pubDate>
      <link>https://dev.to/castai/cast-ai-vs-spot-io-two-approaches-to-automated-cloud-cost-optimization-56oa</link>
      <guid>https://dev.to/castai/cast-ai-vs-spot-io-two-approaches-to-automated-cloud-cost-optimization-56oa</guid>
      <description>&lt;p&gt;&lt;span&gt;Automation is the best answer to controlling cloud costs, especially if you work with modern solutions like containers and Kubernetes. &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;But automated optimization solutions come in different forms: they focus on automating different cost-saving tactics and give you various levels of visibility and control.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Here’s a comparison of two automation solutions available to teams that work with Kubernetes: CAST AI and Spot.io. Keep on reading to find out which one supports your use cases better.&lt;/b&gt;&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;&lt;b&gt;CAST AI - Full-Service Cloud Native Platform&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;&lt;b&gt;Spot.io - Automated Spot Instance Use&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;Created by industry veterans, CAST AI is a comprehensive cloud automation platform for &lt;strong&gt;optimizing Kubernetes&lt;/strong&gt; environments. Companies across industries such as e-commerce and adtech are using CAST AI to &lt;strong&gt;save&lt;/strong&gt; &lt;strong&gt;from 50% to even 90% on their cloud bills&lt;/strong&gt;. Automation features include spot instances, autoscaling up &amp;amp; down, and AI VM type selection.&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;Developed by NetApp, Spot.io is a cloud cost management solution that focuses on optimizing cloud infrastructure costs with spot instance automation. Using machine learning and analytics algorithms, Spot.io helps teams to get spot capacity for their workloads automatically, cutting costs and ensuring high availability. &lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;&lt;span&gt;CAST AI vs. Spot.io - quick feature comparison&lt;/span&gt;&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;&lt;b&gt;Feature&lt;/b&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;b&gt;CAST AI 🥇&lt;/b&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;b&gt;Spot.io&lt;/b&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;&lt;b&gt;Supported platforms&lt;/b&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;AWS&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;Google Cloud&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;Microsoft Azure&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;&lt;b&gt;Cost visibility&lt;/b&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;Detailed cluster cost breakdown &lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;Automated cost forecasting&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;✖&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;Cost view across multi cloud&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;✖&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;Real-time alerting functionality&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;✖ (coming soon)&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;&lt;b&gt;Kubernetes cost optimization and automation&lt;/b&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;&lt;b&gt;Rightsizing&lt;/b&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;Recommendations for instance types and sizes&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;Automated rightsizing via AI-driven instance selection&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;✖&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;Multi-shape cluster construction&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;✖&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;&lt;b&gt;Autoscaling&lt;/b&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;Automated pod scaling parameters&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;Horizontal pod autoscaling&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;Node autoscaling&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;Cluster scheduling&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;Automatic bin packing&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;&lt;b&gt;Spot Instance automation&lt;/b&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;&lt;b&gt;Full multi cloud optimization&lt;/b&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;✖&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;&lt;span&gt;Detailed feature comparison of Spot.io and CAST AI&lt;/span&gt;&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;span&gt;&lt;a href="#costvisibilityandmonitoring"&gt;Cost visibility and monitoring&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&lt;a href="#costoptimizationandautomation"&gt;Cost optimization and automation&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&lt;a href="#spotinstanceautomation"&gt;Spot instance automation&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&lt;a href="#fullmulticloudoptimization"&gt;Full multi cloud optimization&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&lt;a href="#security"&gt;Security&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&lt;a href="#pricing"&gt;Pricing&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id="costvisibilityandmonitoring"&gt;&lt;span&gt;1. Cost visibility and monitoring&lt;/span&gt;&lt;/h2&gt;

&lt;h3&gt;&lt;strong&gt;Cluster cost breakdown &amp;amp; forecasting&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;&lt;span&gt;In &lt;/span&gt;&lt;b&gt;CAST AI&lt;/b&gt;&lt;span&gt;, you get a cost breakdown at the project, cluster, namespace, and deployment level. Teams can analyze costs down to individual microservices and then generate a detailed forecast of their cluster costs for better planning. CAST AI uses universal metrics that work with all supported cloud service providers.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;The platform also comes with a cost allocation feature that works per cluster and per node. A feature for ongoing cloud cost reporting is also in the near-future pipeline since the CAST AI team plans to expand cost dimensions beyond compute - such as control plane, network, egress, storage, and others.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Spot.io&lt;/b&gt;&lt;span&gt; breaks down the infrastructure costs of clusters and offers insights into each of the layers. Costs are broken down into namespaces and individual workloads within every namespace, with the option to filter them according to your container labels and annotations. For each workload, Spot.io displays compute and storage costs. &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;Users can use this data to analyze the application costs, perform chargebacks without extensive resource tagging, and estimate future cloud spend.&lt;/span&gt;&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;Cost view across multi cloud&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;&lt;span&gt;Many companies use more than one cloud service today. Allocating costs in a multi cloud context is challenging, but &lt;/span&gt;&lt;b&gt;CAST AI&lt;/b&gt;&lt;span&gt; equips teams with insights for addressing that. Its full multi cloud functionality comes with visibility via universal metrics from Grafana and Kibana that can be used for any supported cloud service providers.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Spot.io&lt;/b&gt;&lt;span&gt; currently doesn’t support multi cloud functionality or visibility across its solutions for containerized applications.&lt;/span&gt;&lt;/p&gt;

&lt;h2 id="costoptimizationandautomation"&gt;&lt;span&gt;2. Cost optimization and automation&lt;/span&gt;&lt;/h2&gt;

&lt;h3&gt;&lt;strong&gt;Rightsizing&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;&lt;b&gt;CAST AI &lt;/b&gt;&lt;span&gt;uses AI to choose the best instance types and sizes that meet an application’s requirements but still help teams save up on cloud costs. Whenever a cluster needs extra nodes, the AI-driven instance selection algorithm selects instances that achieve maximum performance at a minimum cost. Your team doesn’t have to lift a finger because it all happens automatically.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;The platform also comes with multi-shape cluster construction, since choosing the same instance shape for every node in a cluster may easily lead to overprovisioning. That’s why CAST AI delivers an optimized mix of different instance types adapted to an application’s requirements.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Spot.io &lt;/b&gt;&lt;span&gt;offers a handy Right Sizing recommendation mechanism. The tool monitors workload utilization in real-time to provide you with recommendations for adjusting the resource requirements of workloads when they start consuming significantly more or fewer resources than requested.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;The solution provides recommendations per container and summarizes them for the entire workload to enable easier visualization at a high level and faster implementation. &lt;/span&gt;&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;Autoscaling&lt;/strong&gt;&lt;/h3&gt;

&lt;h3&gt;&lt;span&gt;Horizontal pod autoscaling and node autoscaling&lt;/span&gt;&lt;/h3&gt;

&lt;p&gt;&lt;b&gt;CAST AI &lt;/b&gt;&lt;span&gt;automates pod scaling parameters to help teams avoid overprovisioning their infrastructures. The platform also includes a Horizontal Pod Autoscaler, which uses business metrics to generate the optimal number of required pod instances. The feature then scales the replica count of your pods up and down, scaling to zero and removing all pods if there’s no work to be done.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;CAST AI also ensures that the number of nodes in use matches the application’s requirements at all times, scaling nodes up and down automatically.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Spot.io &lt;/b&gt;&lt;span&gt;continuously checks for unschedulable pods and if it finds one, it scales up to make sure that all the pods have a place to run. The solution also removes nodes automatically when all pods running on the node can be moved to other nodes in the cluster. To optimize costs, Spot.io prioritizes downscaling the least utilized nodes.&lt;/span&gt;&lt;/p&gt;

&lt;h3&gt;&lt;span&gt;Cluster scheduling and termination&lt;/span&gt;&lt;/h3&gt;

&lt;p&gt;&lt;b&gt;CAST AI&lt;/b&gt;&lt;span&gt; automatically pauses and resumes clusters created within the platform to help teams avoid paying for resources they’re not using.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Spot.io&lt;/b&gt;&lt;span&gt; makes sure that all that pods and nodes are terminated in a case of scale-down or instance replacement. &lt;/span&gt;&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;Automatic bin packing &lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;&lt;span&gt;Kubernetes presents a cost challenge to teams because it distributes applications within a cluster evenly, with no attention paid to how cost-effective this setup is.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;CAST AI&lt;/b&gt;&lt;span&gt; changes the default pod scheduling behavior and uses automated bin-packing to achieve maximum savings in line with your settings. Fewer nodes translate to lower costs.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Spot.io&lt;/b&gt;&lt;span&gt; uses bin-packing algorithms as well. When the tool identifies an instance where workloads may be distributed across the cluster, it triggers a scale-down to drain and terminate the instance.&lt;/span&gt;&lt;/p&gt;

&lt;h2 id="spotinstanceautomation"&gt;&lt;span&gt;3. Spot instance automation&lt;/span&gt;&lt;/h2&gt;

&lt;p&gt;&lt;span&gt;Spot Instances can result in dramatic savings of up to 90% off the On-Demand pricing. But there’s a catch - the cloud provider can pull the plug anytime. That’s why automation is so critical for effective spot instance use.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;CAST AI &lt;/b&gt;&lt;span&gt;makes sure that the replacement of spot instances that were interrupted is fully automated. This means that teams don’t have to worry about their workloads not finding a place to run. The platform is always on the lookout for better instance alternatives and provisions instances in a split-second to guarantee high availability.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Spot.io&lt;/b&gt;&lt;span&gt; allows users to run their clusters on spot instances without the need to provision or scale instances. The tool also takes care of bin packing containers on spot instances to optimize their use even further. &lt;/span&gt;&lt;/p&gt;

&lt;h2 id="fullmulticloudoptimization"&gt;&lt;span&gt;4. Full multi cloud optimization&lt;/span&gt;&lt;/h2&gt;

&lt;p&gt;&lt;span&gt;As more and more companies use multiple cloud services to access best-in-class services and prevent disasters, the need to monitor, manage, and optimize costs across providers is greater than ever. &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;CAST AI meets this need by offering you the option to set up multi cloud clusters using a number of &lt;/span&gt;&lt;a href="https://cast.ai/disaster-prevention/"&gt;&lt;span&gt;multi cloud features&lt;/span&gt;&lt;/a&gt;&lt;span&gt;:&lt;/span&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;b&gt;Active-Active Multi Cloud&lt;/b&gt;&lt;span&gt; - CAST AI replicates applications and data across multiple cloud services. If one fails, others keep your workloads afloat, guaranteeing business continuity.&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;b&gt;Global Server Load Balancing&lt;/b&gt;&lt;span&gt; - the platform distributes traffic evenly across all the participating clouds, always choosing the endpoints that are up and healthy. &lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;b&gt;Multi cloud visibility&lt;/b&gt;&lt;span&gt; - CAST AI makes cost allocation across cloud services easier thanks to universal metrics from Grafana and Kibana.&lt;/span&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;Spot.io &lt;/b&gt;&lt;span&gt;doesn’t support the multi cloud functionality at the moment.&lt;/span&gt;&lt;/p&gt;

&lt;h2 id="security"&gt;&lt;span&gt;5. Security&lt;/span&gt;&lt;/h2&gt;

&lt;p&gt;&lt;span&gt;Since both automation solutions work directly with the cloud infrastructure, their security is essential.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;Created by cybersecurity experts, &lt;/span&gt;&lt;b&gt;CAST AI&lt;/b&gt;&lt;span&gt; offers a number of security features such as encryption at rest/in transit, secrets management, network security, logging, visibility, and more. The platform also comes with automatic patching and upgrades to VMs and Kubernetes to eliminate the chance of errors in your clusters. CAST AI doesn’t access any environment variables that are considered sensitive such as secrets, passwords, tokens, etc.&lt;/span&gt; &lt;span&gt;CAST AI is ISO-certified and well underway to obtaining SOC 2 certification. &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Spot.io&lt;/b&gt;&lt;span&gt; encrypts account data within the browser and re-encrypts it with a secure algorithm when it reaches its servers. The tool doesn’t store any private keys, passwords, or authentication tokens - authentication is based on the IAM Cross Account Role &amp;amp; External ID.&lt;/span&gt;&lt;/p&gt;

&lt;h2 id="pricing"&gt;&lt;span&gt;6. Pricing&lt;/span&gt;&lt;/h2&gt;

&lt;p&gt;&lt;b&gt;CAST AI&lt;/b&gt;&lt;span&gt; offers a free Savings report you can run to check whether you could save up on your cloud bill. The &lt;/span&gt;&lt;a href="https://cast.ai/blog/how-does-the-read-only-cast-ai-agent-work-and-what-data-can-it-read/"&gt;&lt;span&gt;read-only agent&lt;/span&gt;&lt;/a&gt;&lt;span&gt; analyzes your setup and generates actionable recommendations. You can implement them manually or turn automated cost optimization features - in that case, you can choose between two plans: Growth and Enterprise. &lt;/span&gt;&lt;b&gt;CAST AI offers guaranteed savings of at least 50%.&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Spot.io&lt;/b&gt;&lt;span&gt; offers a free trial after which users can choose from two different pricing models: Pay-as-you-Go without the annual commitment and Subscription that comes with a commitment but opens the doors to more discounts and priority support.&lt;/span&gt;&lt;/p&gt;

&lt;h2&gt;&lt;span&gt;Summary&lt;/span&gt;&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;&lt;b&gt;Overall winner&lt;/b&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;CAST AI&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;span&gt;Both Spot.io and CAST AI are great automation solutions for reducing cloud costs and facilitating processes like cost monitoring, management, and optimization.  &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Using spot instances is a smart method for reducing the cloud bill, but it’s just part of the picture.&lt;/b&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;By&lt;/span&gt;&lt;b&gt; rightsizing other instances&lt;/b&gt;&lt;span&gt; - for example, ones purchased within an AWS Savings Plan - you can drive your cloud bill down even more. &lt;/span&gt;&lt;b&gt;While&lt;/b&gt; &lt;b&gt;Spot.io offers recommendations, CAST AI does the job for you via automated instance selection.&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;The broad range of optimization features combined with automated cost forecasting and unique multi cloud functionality brings CAST AI to the top of cloud cost optimization platforms.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;To accurately estimate the savings that you would be able t&lt;/span&gt;o get - &lt;a href="http://To%20accurately%20estimate%20the%20savings%20that%20you%20would%20be%20able%20t" rel="noreferrer noopener"&gt;&lt;strong&gt;start with the free AI Cluster Analyzer&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://console.cast.ai/?screen_hint=SIGNUP" rel="noreferrer noopener"&gt;&lt;strong&gt;Estimate my savings for free&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;!-- /wp:button --&amp;gt;&lt;/p&gt;

</description>
      <category>cloudnative</category>
      <category>aws</category>
      <category>kubernetes</category>
      <category>googlecloud</category>
    </item>
    <item>
      <title>Are You Scared of Strongly Typed Languages?</title>
      <author>The Sharp Ninja</author>
      <pubDate>Tue, 24 Aug 2021 14:13:57 +0000</pubDate>
      <link>https://dev.to/sharpninja/are-you-scared-of-strongly-typed-languages-olf</link>
      <guid>https://dev.to/sharpninja/are-you-scared-of-strongly-typed-languages-olf</guid>
      <description>&lt;h2&gt;
  &lt;a href="#part-1-why-do-types-matter"&gt;
  &lt;/a&gt;
  Part 1: Why do types matter?
&lt;/h2&gt;

&lt;p&gt;I realize that the ratio of Senior Devs to Junior Devs is very low, especially in web development.  This lack of senior leadership shows in a lot of technology decisions made on web projects.  This is just an opinion that is cultivated by starting as a web developer in 1995 and doing just about every kind of project since then with startups to global industry powerhouses.&lt;/p&gt;

&lt;p&gt;One constant has been the usage of languages with strong typing increases with the maturity of the dev team, and especially its leadership.  I have also been doing C# for over 20 years continuously, so I've never worked anywhere that allowed Node or Python or Ruby to be used on the back end, although I have done a lot of projects mixing C# and JavaScript and even VBS and JavaScript for over two decades.  When I got a chance to learn Angular a few years ago it was the first time I felt productive on doing web dev because types mean something with TypeScript.&lt;/p&gt;

&lt;p&gt;Like most guys of my vintage, my first programming forays were with Microsoft BASIC, a language that is arguably more important than C in the history of computing because for most of GenX, having a home computer meant having a Commodore brand computer.  All of Commodore's 8-bit computers used a boot ROM that had the Kernel, Screen Manager, and Microsoft BASIC built into it.  I'm calling it Microsoft BASIC even though the boot banner says Commodore Basic.  The reason is that in the 1970's, Jack Tramiel, CEO of Commodore Business Machines, solicited a contract with Bill Gates to provide the operating system for Commodore's first computer, the PET 2001.  Tramiel was a hard negotiator and secured rights to replicate that Operating System on as many computers as he wanted for $50,000.  This deal made Microsoft a viable company, but Commodore would go on to include this OS on nearly &lt;strong&gt;30,000,000&lt;/strong&gt; computers.  So, just out of respect for the work that Bill and Paul Allen did, I'm calling it Microsoft BASIC.&lt;/p&gt;

&lt;p&gt;Anyways, MS BASIC was a Strongly Typed language, despite being interpreted.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;10 DIM A%: A% = 1
20 DIM B: B = 1.0
30 DIM C$: C$ = "1"
40 DIM D%(10)
50 DIM E(10)
60 DIM F$(10)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we have the who range of types supported by MS BASIC.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Line 10: A% is an integer initialized with 1&lt;/li&gt;
&lt;li&gt;Line 20: B is a floating point initialized with 1.0&lt;/li&gt;
&lt;li&gt;Line 30: C$ is a string initialized with "1"&lt;/li&gt;
&lt;li&gt;Line 40: D%(10) is an integer array of 10 elements&lt;/li&gt;
&lt;li&gt;Line 50: E(10) is a floating point array of 10 elements&lt;/li&gt;
&lt;li&gt;Line 60: F$(10) is a string array of 10 elements&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This was all the types available, and there were not structures of any kind.  We learned to code with a minimum palette of types and some phenomenal results happened, including many commercial games.&lt;/p&gt;

&lt;p&gt;If you tried to assign a number directly in a string you would get an error.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fngd9xDM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7zupu7xljmeqvxsb8uw6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fngd9xDM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7zupu7xljmeqvxsb8uw6.png" alt="Cannot place number in string."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What this does is teaches you how to be &lt;em&gt;intentional&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ARzdkrvo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/khmyp90btu4ci8zzec2f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ARzdkrvo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/khmyp90btu4ci8zzec2f.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Being intentional is a way of thinking where you make decisions based on the outcome you intend to happen.  In other words, you have a plan.&lt;/p&gt;

&lt;p&gt;So, when I'm writing my program, my intention is to store the number 3.1417 into a variable named PI.  3.1417 is a floating-point number, so I don't need to add any modifiers to the variable name:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;10 DIM PI: PI = 3.1417
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For better, or for worse, MS BASIC was lenient about placing floating point values into an INTEGER.  It would not complain at all, but unless it was &lt;em&gt;intentional&lt;/em&gt;, you wouldn't like the outcome.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XBXlMC3_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uig37o5rofvhmjcf5jh7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XBXlMC3_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uig37o5rofvhmjcf5jh7.png" alt="Does that Circumference look correct?"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Uh oh, our circumference is wrong because we were not &lt;em&gt;intentional&lt;/em&gt; in our actions and placed the value in the wrong type.  Fortunately, modern languages warn about loss of data when putting a float in an integer, but in the 1970's and 1980's, that wasn't a thing.&lt;/p&gt;

&lt;p&gt;However, we see our error right away and easily fix it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nGdMi250--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qtttfy8axq1c8h4gkglm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nGdMi250--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qtttfy8axq1c8h4gkglm.png" alt="Now the Circumference is correct."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Looking at this example, you may think, "Dynamic typing solves that problem."  But does it?  Let's look at some examples of being unintentional with a dynamically typed language.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mf"&gt;1.1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Could match not i to 3!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="cm"&gt;/* results

0
1.1
2.2
3.3000000000000003
Could match not i to 3!

*/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we initialize our loop counter &lt;code&gt;i&lt;/code&gt; with an integer.  And for the first iteration, it is an integer.  But then things go off the rails when I accidentally add a float to the integer and store the result back into the counter.  Now my counter is a float.  Worse, it can never match our exit criteria for the for loop, meaning this would run forever!  This is the worst possible result because the user interface would be locked up if we are on the main thread and would have no way to know what's happening until the number overflows the variable, which would take a very long time.&lt;/p&gt;

&lt;p&gt;These are the reasons that being intentional in your code are so important.  We are all human, so we will have lapses in our intentional processes, and when that happens, strongly typed languages help us prevent these kinds of bugs.&lt;/p&gt;

&lt;p&gt;The Grandaddy of most Typed Languages is C.  What does this code do in C?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="cp"&gt;#include &amp;lt;stdio.h&amp;gt;
&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"i: %i &lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Could match i to 3!"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="cm"&gt;/*

i: 0 
i: 1 
i: 2 

*/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we see that C has helped us stay intentional through strictly adhering to the specified type, just like MS BASIC did when we used integer to hold circumference.&lt;/p&gt;

&lt;p&gt;Newer languages, such as C# 9, go even further.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;System&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Program&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="p"&gt;!=&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="p"&gt;+=&lt;/span&gt; &lt;span class="m"&gt;1.1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;$"i: &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Could match i to 3!"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Compiling this results in:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Compilation error (line 7, col 29): Cannot implicitly convert type 'double' to 'int'. An explicit conversion exists (are you missing a cast?)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we have no chance to introduce a bug based on going from floating point to an integer because C# treats any data loss as an error.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;mut&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;i32&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;loop&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nd"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"i: {0}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mf"&gt;1.1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;           
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we have the Rust version of this loop.  Like, C#, Rust is concerned with data hygiene and throws an error trying to compile it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;E0277&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;cannot&lt;/span&gt; &lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;assign&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="nb"&gt;i32&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;
 &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="py"&gt;.rs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;
  &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;         &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mf"&gt;1.1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;|&lt;/span&gt;           &lt;span class="o"&gt;^^&lt;/span&gt; &lt;span class="n"&gt;no&lt;/span&gt; &lt;span class="n"&gt;implementation&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="nb"&gt;i32&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;
  &lt;span class="p"&gt;|&lt;/span&gt;
  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;help&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="k"&gt;trait&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="nn"&gt;std&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nn"&gt;ops&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;AddAssign&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;implemented&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="nb"&gt;i32&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;

&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;aborting&lt;/span&gt; &lt;span class="n"&gt;due&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;previous&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;

&lt;span class="n"&gt;For&lt;/span&gt; &lt;span class="n"&gt;more&lt;/span&gt; &lt;span class="n"&gt;information&lt;/span&gt; &lt;span class="n"&gt;about&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;try&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="n"&gt;rustc&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;explain&lt;/span&gt; &lt;span class="n"&gt;E0277&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="py"&gt;.
exit&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The error is different because the philosophies of the languages are different.  In C#, the compiler is strictly saying that it won't automatically convert a double to an int.  Period.  Rust, on the other hand, simply doesn't implement a language feature that could have resulted in an error, so you are notified that that specific use case is &lt;em&gt;intentionally&lt;/em&gt; not implemented.&lt;/p&gt;

&lt;p&gt;If I change to using &lt;code&gt;i = 1.1&lt;/code&gt; in Rust, a different error occurs.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;E0308&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;mismatched&lt;/span&gt; &lt;span class="n"&gt;types&lt;/span&gt;
 &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="py"&gt;.rs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;
  &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;         &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;1.1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;|&lt;/span&gt;             &lt;span class="o"&gt;^^^&lt;/span&gt; &lt;span class="n"&gt;expected&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="nb"&gt;i32&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;found&lt;/span&gt; &lt;span class="n"&gt;floating&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;point&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt;

&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;aborting&lt;/span&gt; &lt;span class="n"&gt;due&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;previous&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;

&lt;span class="n"&gt;For&lt;/span&gt; &lt;span class="n"&gt;more&lt;/span&gt; &lt;span class="n"&gt;information&lt;/span&gt; &lt;span class="n"&gt;about&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;try&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="n"&gt;rustc&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;explain&lt;/span&gt; &lt;span class="n"&gt;E0308&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="py"&gt;.
exit&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Rust is now telling use &lt;code&gt;error[E0308]: mismatched types&lt;/code&gt; because Rust considers ints and floats to be fundamentally distinct types.  And if there's not any implementation of &lt;code&gt;std::ops::AddAssign&amp;lt;T&amp;gt;&lt;/code&gt; that matches the type for &lt;code&gt;1.1&lt;/code&gt;, then the expression is simply invalid and cannot be compiled.  It's impossible to get this bug into production with either C# or Rust.&lt;/p&gt;

&lt;p&gt;Next time we'll look at some of the typed-vs-untyped arguments and try to place them into context from the perspective of the Senior Developer with Unpopular Opinions.&lt;/p&gt;

</description>
      <category>discuss</category>
    </item>
    <item>
      <title>Survivorship Bias</title>
      <author>Muhammad Fauzan</author>
      <pubDate>Tue, 24 Aug 2021 13:59:19 +0000</pubDate>
      <link>https://dev.to/fncolon/survivorship-bias-535a</link>
      <guid>https://dev.to/fncolon/survivorship-bias-535a</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Kegagalan adalah keberhasilan yang tertunda - Quote by Prankster&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Kegagalan itu dimana saja&lt;/strong&gt;, tidak ada keberhasilan yang tertunda, kata itu hanya membuat anda optimis dengan kegagalan, optimislah pada keberhasilan!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#survivorship-bias"&gt;
  &lt;/a&gt;
  Survivorship Bias
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Survivorship bias&lt;/strong&gt; atau &lt;strong&gt;survival bias&lt;/strong&gt; adalah kesalahan logika karena berkonsentrasi pada orang atau hal yang berhasil melewati beberapa proses dan mengabaikan yang tidak, biasanya karena kurangnya pengamatan. Hal ini dapat menyebabkan beberapa kesimpulan yang salah dalam beberapa cara yang berbeda. Ini adalah bentuk dari &lt;a href="https://en.wikipedia.org/wiki/Selection_bias"&gt;&lt;strong&gt;selection bias&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cerita-survivorship-bias"&gt;
  &lt;/a&gt;
  Cerita Survivorship Bias
&lt;/h2&gt;

&lt;p&gt;Survivorship Bias ini sangat erat dengan budaya indonesia yang sering membandingkan anaknya dengan anak orang lain, "ih si A bisa MTK kamu engga", "ih si B bisa IPA, masa kamu bisanya seni doang", padahal setiap anak punya potensi yang berbeda, yang bisa seni doang juga pasti bisa jadi sukses kok seperti &lt;strong&gt;Jeef Kons&lt;/strong&gt; dan &lt;strong&gt;Hajime Isayama&lt;/strong&gt;, tunggu, saya baru saja memperkenalkan &lt;strong&gt;survivorship bias&lt;/strong&gt;, dimana setiap anak yang walaupun bisa seni doang, pasti bisa jadi sukses kok seperti &lt;strong&gt;Jeef Kons&lt;/strong&gt; dan &lt;strong&gt;Hajime Isayama&lt;/strong&gt;, haha, plot twist bukan?&lt;/p&gt;

&lt;p&gt;Paragraf diatas saya memperkenalkan secara objektif apa itu survivorship bias, sebenarnya masih banyak lagi bentuk survivorship bias, seperti seminar 1 tahun menjadi pengusaha hebat, pengusaha hebat yang mana dulu, hebat karena emang punya modal yang banyak karena di environment orang berkecukupan atau emang hebat karena usaha dari 0? perlu dicari tahu dan ditanyakan pada pembicaranya.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cara-menghindari-survivorship-bias"&gt;
  &lt;/a&gt;
  Cara menghindari survivorship bias
&lt;/h2&gt;

&lt;p&gt;Caranya simple, stop memandang rendah dirimu sendiri, stop juga memandang tinggi dirimu sendiri dan memandang rendah orang lain, jadi orang normal yang berkolaborasi bukannya lebih enak? kalau di dunia pemrograman itu ibaratnya tanpa harus ngejek tools atau framework orang lain, siapa tau orang lain tersebut ternyata punya versi terbaik dari cara mengembangkan aplikasi menggunakan tools atau framework tersebut? hayoloh kamu kena skakmat langsung. Ya pakai aja tools atau framework yang kamu suka dan dari hasil research kamu atau kesepakatan tim itu bagus, itu sudah cukup. Tanpa harus mengejek atau menghina orang lain yang memakai tools atau framework lain.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#penutup"&gt;
  &lt;/a&gt;
  Penutup
&lt;/h2&gt;

&lt;p&gt;Setelah mengikuti bacaan diatas, kita jadi tahu kan bahwa membandingkan kita dengan orang lain itu perbuatan yang bias, ya selagi masih hidup, keep humble aja “Stay hungry, stay young, stay foolish, stay curious, and above all, stay humble because just when you think you got all the answers, is the moment when some bitter twist of fate in the universe will remind you that you very much don't.”, tapi jadi humble juga gk saya paksakan, pokonya jadi versi terbaik dari diri kamu dan apa yang kamu punya.&lt;/p&gt;

&lt;p&gt;Makasih, wikipedia dan pembaca.&lt;/p&gt;

</description>
      <category>motivation</category>
      <category>bias</category>
      <category>survive</category>
    </item>
    <item>
      <title>Case Study: Internal Tools at Raspberry Pi</title>
      <author>Monika Ambrozowicz</author>
      <pubDate>Tue, 24 Aug 2021 13:47:05 +0000</pubDate>
      <link>https://dev.to/forestadmin/case-study-internal-tools-at-raspberry-pi-38kk</link>
      <guid>https://dev.to/forestadmin/case-study-internal-tools-at-raspberry-pi-38kk</guid>
      <description>&lt;h2&gt;
  &lt;a href="#executive-summary"&gt;
  &lt;/a&gt;
  Executive Summary
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Raspberry Pi, the creator of famous tiny computers sold in over 40 million units around the world, has chosen Forest Admin as an internal tool solution to manage the network of trusted resellers and design partners.&lt;/li&gt;
&lt;li&gt;In the past, the development team at Raspberry Pi has built internal tools from scratch, then got started with Forest Admin using Lumber and a separate Node.js admin application, and eventually migrated to Forest Admin for Rails applications.&lt;/li&gt;
&lt;li&gt;Forest Admin saved Raspberry Pi a significant amount of time and resources by letting developers focus on the core product, and by automating the work of operations teams.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#about-raspberry-pi"&gt;
  &lt;/a&gt;
  About Raspberry Pi
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Raspberry Pi&lt;/strong&gt; is famous for its single-board, credit card-sized, low-cost, and powerful personal computers, sold in more than forty million copies around the world. Thanks to its tiny size and high performance, Raspberry Pi can become fully functional desktop computers, industrial controllers, robots, even retro games consoles. Such versatility makes them truly special, and it shouldn’t come as a surprise that Raspberry Pi computers are everywhere, including the International Space Station.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Cy_Mpr2e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wfiawbik5949lkffxqg8.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Cy_Mpr2e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wfiawbik5949lkffxqg8.jpg" alt="Raspberry Pi 4: A $35 dual-display computer."&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Raspberry Pi 4: A $35 dual-display computer.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#challenges-that-made-raspberry-pi-seeking-a-robust-and-flexible-internal-tool-solution"&gt;
  &lt;/a&gt;
  Challenges that made Raspberry Pi seeking a robust and flexible internal tool solution
&lt;/h2&gt;

&lt;p&gt;Raspberry Pi offers a wide portfolio of products, including ready-to-use computer kits, microcontroller boards and chips, cameras, touch displays, and various accessories such as cases, power supplies, and educational materials. Every item can be easily ordered online: Raspberry Pi’s official website signposts customers to a global network of trusted businesses called Raspberry Pi Approved Resellers.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sHm1K0lh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-eu-west-1.amazonaws.com/blog.forestadmin.com/2021/07/raspberry-pi-4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sHm1K0lh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-eu-west-1.amazonaws.com/blog.forestadmin.com/2021/07/raspberry-pi-4.png" alt="Raspberry Pi 4: A $35 dual-display computer."&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Raspberry Pi 4: A $35 dual-display computer.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Raspberry Pi needs an internal tool to handle the process that starts from clicking on ‘Buy now’ to the final purchase on the reseller’s website. Thanks to Forest Admin, Raspberry Pi can have one application dedicated to administering its data and one dedicated to serving it in a read-only fashion. This way, the company can delegate responsibility for user accounts, etc. to Forest Admin and keep the APIs as simple and focused as possible.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2uVwgtx3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-eu-west-1.amazonaws.com/blog.forestadmin.com/2021/07/raspberry-pi-400-1-.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2uVwgtx3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-eu-west-1.amazonaws.com/blog.forestadmin.com/2021/07/raspberry-pi-400-1-.jpeg" alt="Raspberry Pi 4: A $35 dual-display computer."&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Raspberry Pi 400, the newest addition to the Raspberry Pi’s portfolio, is a powerful computer built into a neat and portable keyboard.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Raspberry Pi also leverages Forest Admin to manage its operations with Approved Design Partners. This network is in charge of helping businesses that use Raspberry Pi to jump-start the design process of their products.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#forest-admin-the-ideal-admin-panel-solution"&gt;
  &lt;/a&gt;
  Forest Admin: The ideal admin panel solution
&lt;/h2&gt;

&lt;p&gt;As Raspberry Pi handles a large number of reseller links for each product, their staff needs to download and upload links as CSV files, sanitizing the data and associating it with the correct reseller, product, and country as it is imported. For such operations that are tight to a very specific use case, Raspberry Pi needed an admin panel that is highly configurable and flexible. That’s why they quickly set up &lt;a href="https://docs.forestadmin.com/documentation/reference-guide/actions/create-and-manage-smart-actions?utm_source=referral&amp;amp;utm_medium=devto&amp;amp;utm_campaign=devto-organic"&gt;Forest Admin Smart Actions&lt;/a&gt; that allowed Raspberry Pi to both add and update existing links in bulk without staff having to update each record individually in the admin panel.&lt;/p&gt;

&lt;p&gt;Raspberry Pi relies on Forest Admin's Data View to manage products, countries, approved resellers, design partners, and product links, using &lt;a href="https://blog.forestadmin.com/introducing-in-app-ruby-on-rails-support-on-forest-admin/?utm_source=referral&amp;amp;utm_medium=devto&amp;amp;utm_campaign=devto-organic"&gt;Rails Liana&lt;/a&gt; with a Rails API to power the integration. Its staff share CSV exports with the resellers who can then add their own links before they are imported back into the system.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yVXAZU6b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-eu-west-1.amazonaws.com/blog.forestadmin.com/2021/07/forest-admin-data-dashboard-1-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yVXAZU6b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-eu-west-1.amazonaws.com/blog.forestadmin.com/2021/07/forest-admin-data-dashboard-1-.png" alt="An example of the Data View in Forest Admin from the demo account."&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;An example of the Data View in Forest Admin from the demo account. Forest Admin doesn’t have access to customer data.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;When Raspberry Pi got started with Forest Admin, they used &lt;a href="https://docs.forestadmin.com/documentation/getting-started/installation?utm_source=referral&amp;amp;utm_medium=devto&amp;amp;utm_campaign=devto-organic#install-using-a-database-as-your-datasource"&gt;Lumber and a separate Node.js admin application&lt;/a&gt;, just like in this video: &lt;a href="https://www.youtube.com/watch?v=8ajGzG8QGn0"&gt;https://www.youtube.com/watch?v=8ajGzG8QGn0&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;However, Raspberry Pi made a decision to migrate using a &lt;a href="https://docs.forestadmin.com/documentation/getting-started/installation?utm_source=referral&amp;amp;utm_medium=devto&amp;amp;utm_campaign=devto-organic#install-using-a-rails-app-as-your-datasource"&gt;Rails app as a data source&lt;/a&gt;. Here is what one of the developers working on the project said about the move: &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;By migrating to Rails Liana we were able to consolidate our infrastructure and run a single Rails application that serves both our various product pages and provides the API necessary for Forest Admin. By relying on Forest Admin's single sign-on functionality with Google, we don't need to maintain our own authentication and permission system, avoiding yet another user account for our staff and keeping our application code entirely focused on our business problems.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://..."&gt;Read how to install Forest Admin for Rails app.&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#are-you-looking-for-an-internal-tool-solution-i-highly-recommend-trying-forest-admin-for-free"&gt;
  &lt;/a&gt;
  Are you looking for an internal tool solution? I highly recommend &lt;a href="https://app.forestadmin.com/signup?utm_source=referral&amp;amp;utm_medium=devto&amp;amp;utm_campaign=devto-organic"&gt;trying Forest Admin for free&lt;/a&gt;
&lt;/h2&gt;

</description>
    </item>
    <item>
      <title>Meet the world's tiniest 8bit MMORPG</title>
      <author>Diego Penha</author>
      <pubDate>Tue, 24 Aug 2021 13:38:38 +0000</pubDate>
      <link>https://dev.to/diguifi/meet-the-world-s-tiniest-8bit-mmorpg-3kj6</link>
      <guid>https://dev.to/diguifi/meet-the-world-s-tiniest-8bit-mmorpg-3kj6</guid>
      <description>&lt;p&gt;That's right, it may not be the super heavy lifting with beautiful graphics online RPG you may be used to, like WoW, or even the newest one on the block, Amazon's New World.&lt;br&gt;&lt;br&gt;
It's a tiny 8bit online RPG made using &lt;strong&gt;Deno&lt;/strong&gt; and &lt;strong&gt;HTML 5 canvas&lt;/strong&gt; only!&lt;br&gt;&lt;br&gt;
But hold on, we might be going too fast. You may not even be familiar with Deno. Let's start there&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#deno"&gt;
  &lt;/a&gt;
  Deno?
&lt;/h2&gt;

&lt;p&gt;Deno is a runtime for js/ts that uses V8 and is built in Rust. It was created by the same dude who created Node, Ryan Dahl, not as a "better Node" as some people think, but rather a "different" Node, with different aspects that may suit some cases better, and some cases worst than Node. You can see Ryan giving some insights of why he started Deno, in his talk &lt;a href="https://www.youtube.com/watch?v=M3BM9TB-8yA"&gt;10 Things I Regret About Node.js&lt;/a&gt;.&lt;br&gt;&lt;br&gt;
Deno is nonetheless an amazing runtime that also allows you to code in Typescript by default! It has a lot of security out of the box and you don't need "node_modules" in your projects anymore, things can be imported directly from URLs!&lt;br&gt;&lt;br&gt;
 If you didn't know Deno by now, I highly sugest you go look out for more information. But this post is about what have been done already with Deno, now that it's &lt;a href="https://deno.com/blog/v1"&gt;first major release (1.0)&lt;/a&gt; is a little more than just 1 year old.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tiny-land"&gt;
  &lt;/a&gt;
  Tiny Land
&lt;/h2&gt;

&lt;p&gt;What we really want to talk about here is what has been done already with this awesome shiny new runtime, specifically this tiny online RPG called &lt;strong&gt;Tiny Land&lt;/strong&gt;.&lt;br&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--M1RnDG8D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nyuywoduwq0kio3gqf99.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--M1RnDG8D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nyuywoduwq0kio3gqf99.png" alt="game map"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tiny Land is a project that started as a Node + Socket.io &lt;a href="https://en.wikipedia.org/wiki/Proof_of_concept"&gt;POC&lt;/a&gt;, but was quickly migrated to run on Deno as soon as v1 was comming out.&lt;br&gt;&lt;br&gt;
It's a tiny online 8bit RPG, that relies on &lt;a href="https://developer.mozilla.org/pt-BR/docs/Web/API/WebSockets_API"&gt;WebSockets&lt;/a&gt; provided by &lt;a href="https://deno.land/std@0.106.0/ws/README.md"&gt;Deno's STD library&lt;/a&gt;. And the best of all, Tiny Land is &lt;strong&gt;Open Source&lt;/strong&gt; and you can check the code &lt;a href="https://github.com/tiny-devs/tiny-dungeon-online"&gt;here&lt;/a&gt;  &lt;/p&gt;

&lt;p&gt;The game consists of basic top down movement. There's rooms, filled with NPC's (agressive or not), and there's 10x10 rooms in the world. Combat happens by simply touching an enemy, the same touching mechanic works for talking with NPC's. And that's basically it!&lt;/p&gt;

&lt;p&gt;It's super tiny and don't even has a database, your character's info is stored locally on your browser.  &lt;/p&gt;

&lt;p&gt;Well, if you're curious about how it looks, or feels, you can check it out &lt;a href="https://diguifi.itch.io/tiny-land"&gt;&lt;strong&gt;here&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#closure"&gt;
  &lt;/a&gt;
  Closure
&lt;/h2&gt;

&lt;p&gt;I really hope you enjoy Tiny Land, and if you consider helping the project that would be just awesome. If you're not into code, just leaving a star on the repo helps a lot spreading the word and it's very welcome!  &lt;/p&gt;

&lt;p&gt;Thank you very much for taking some time to read this article about this tiny game and I really hope you liked it!&lt;/p&gt;

</description>
      <category>deno</category>
      <category>gamedev</category>
      <category>rpg</category>
      <category>typescript</category>
    </item>
    <item>
      <title>Git-based vs API-first CMS</title>
      <author>Shada </author>
      <pubDate>Tue, 24 Aug 2021 13:10:59 +0000</pubDate>
      <link>https://dev.to/strapi/git-based-vs-api-first-cms-8k4</link>
      <guid>https://dev.to/strapi/git-based-vs-api-first-cms-8k4</guid>
      <description>&lt;p&gt;Content management system (CMS) platforms have been at the forefront of content creation for nearly two decades. However, a lot has changed since the release of WordPress in 2004. New technologies have been introduced and CMSs have evolved, decoupling where the content is managed from where it’s displayed.&lt;/p&gt;

&lt;p&gt;Even though WordPress is &lt;a href="https://w3techs.com/technologies/details/cm-wordpress"&gt;still in high use&lt;/a&gt;, it has a lot of drawbacks. To achieve better performance, higher reliability, greater security, and the freedom of displaying your content wherever and however you want, you may need to move to a &lt;a href="https://strapi.io/headless-cms-guide"&gt;headless CMS&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To do that, you’ll need first to decide which type of headless CMS you want to use—Git-based or API-driven?&lt;/p&gt;

&lt;p&gt;In this post I’ll compare both types of headless CMS platforms, focusing on the differences between them, the pros and cons, and the use cases, to help you make your decision.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-do-headless-cmss-work"&gt;
  &lt;/a&gt;
  How Do Headless CMSs Work?
&lt;/h2&gt;

&lt;p&gt;To better understand different types of CMSs, you first have to know the technologies that power them.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#gitbased"&gt;
  &lt;/a&gt;
  Git-Based
&lt;/h3&gt;

&lt;p&gt;Git-based CMSs are built upon the Git version control system (VCS).&lt;/p&gt;

&lt;p&gt;Git stores your files and their history of changes in a repository. It allows you to branch out, merge, clone, react to changes, and in general easily manage your content—especially the text element.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MP3QQ9FY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/uyMcCGi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MP3QQ9FY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/uyMcCGi.png" alt="Git-based CMS architecture"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In a Git-based CMS, you manage your content through mentioned Git functionalities or the Git-powered editor right in your CMS. Then, on selected changes, the CMS processes the new or updated content and automatically builds and updates your frontend (website or app, for instance). That’s usually done through integration with large Git providers like GitHub or GitLab.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#apifirst"&gt;
  &lt;/a&gt;
  API-First
&lt;/h3&gt;

&lt;p&gt;API-first CMSs work as unified pieces of software, serving content through an Application Programming Interface (API).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2GVsZ4SE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/Js82usp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2GVsZ4SE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/Js82usp.png" alt="API-first CMS architecture"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Developers can use the API (usually REST or GraphQL) to build the required frontend or other types of integrations. Reactions to specific updates and other outputs from the CMS also need to be directly handled.&lt;/p&gt;

&lt;p&gt;The content storage, editor, and general management are all handled by the CMS.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#if-you-use-a-gitbased-cms"&gt;
  &lt;/a&gt;
  If You Use a Git-Based CMS
&lt;/h2&gt;

&lt;p&gt;Each type of headless CMS offers benefits and drawbacks. Here are the pros and cons of a Git-based CMS. As you’ll see, its biggest strengths and weaknesses come from the Git VCS powering it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;The baked-in features of Git:&lt;/strong&gt; Full version control, auto backup, clean control structure.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Integrated development:&lt;/strong&gt; As Git is already the go-to VCS for software development, it’s easy to keep your frontend code right beside your content, keeping everything centralized.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;No lock-in:&lt;/strong&gt; Git is an open-source tool and industry standard allowing you to switch between Git cloud providers and Git-based CMSs relatively easily.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Easy setup:&lt;/strong&gt; Especially if you’re already used to working with Git, setting up Git-based CMS is relatively simple.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;A limited number of front-ends:&lt;/strong&gt; Due to its implementation as Git integration, a Git-based CMS doesn’t scale well for multiple, especially diverse, frontends.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Hard to use with complex or frequently updated content:&lt;/strong&gt; Git is also not a place for frequent live content and heavy static assets due to its update model and the Git architecture, respectively.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Limited querying options:&lt;/strong&gt; It depends on the CMS, but Git-based platforms usually have limited data querying options, limiting the front-end customization potential.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#if-you-use-an-apifirst-cms"&gt;
  &lt;/a&gt;
  If You Use an API-First CMS
&lt;/h2&gt;

&lt;p&gt;The advantages and disadvantages of API-first CMSs vary greatly from the Git-based CMSs. Not only are they based on a different foundation, but as unified pieces of software, they can be different even from each other. &lt;/p&gt;

&lt;p&gt;Because of this, some API-first CMS platforms might have pros and cons that others might not have. Still, some general points apply to most of them.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Well-suited for multiple frontends:&lt;/strong&gt; Single, headless CMSs can easily serve different frontends with the help of API.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Great customizability and choice:&lt;/strong&gt; As API-first CMSs are usually built from the ground up, there are many solutions available to choose from. You can even build custom CMSs on top of more advanced APIs.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Easily handles large data:&lt;/strong&gt; This might vary depending on the CMS, but API-first platforms can usually handle larger data sets than Git-based platforms.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Can handle frequently updated content:&lt;/strong&gt; Without Git in the way, updates can be delivered quickly and even more specifically designed.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;No Git features guaranteed:&lt;/strong&gt; Since Git isn’t part of the CMS architecture, you have to think twice about things like versioning or backup.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Storage and usage limits:&lt;/strong&gt; As API-first CMSs are more integrated, you can expect them to come with costly limits on storage and usage.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Fewer formatting options:&lt;/strong&gt; As with all locked-in CMSs, you’ll be limited only to the formatting options you’re given.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;More dependent on developers:&lt;/strong&gt; Even though API is great for custom frontends, it requires more custom handling and developer involvement.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#opportunities-and-challenges"&gt;
  &lt;/a&gt;
  Opportunities and Challenges
&lt;/h2&gt;

&lt;p&gt;Each type of headless CMS presents opportunities and challenges to the developer. How can you make the most out of either a Git-based or API-first CMS, and what bottlenecks can you expect as you go?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-power-of-gitbased-cmss"&gt;
  &lt;/a&gt;
  The Power of Git-Based CMSs
&lt;/h3&gt;

&lt;p&gt;The benefits of powering a CMS through Git cannot be understated.&lt;/p&gt;

&lt;p&gt;From the start, you’ll be working with a system you’re probably very familiar with. From version control to its open-source nature and multiple integrations to content formatting flexibility,  you’ve got everything you need to set up all kinds of great websites quickly.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#seo-and-scalability"&gt;
  &lt;/a&gt;
  SEO and Scalability
&lt;/h3&gt;

&lt;p&gt;However, with content format flexibility also comes more responsibilities, like handling SEO optimizations yourself. That’s something &lt;a href="https://strapi.io/blog/headless-cms-strapi-seo-best-practices"&gt;API-first CMSs will often do automatically&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;As for scalability, when going with a Git-based CMS, consider the future of your product. Plan the correct content format ahead of time. Know what frontends you’ll need to handle, how large your data set will get, and whether you’ll host frequently updated content, among other issues. A Git-based CMS doesn’t scale well for certain medium and larger or multiple frontends, so keep this in mind.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-flexibility-of-apifirst-cmss"&gt;
  &lt;/a&gt;
  The Flexibility of API-First CMSs
&lt;/h2&gt;

&lt;p&gt;Using an API-first CMS allows access to opportunities that aren’t possible with Git. It’s much more scalable, can drive multiple diverse frontends, and can even integrate with unique consumer devices like smart speakers. With API, you can do pretty much anything given enough time and the right tools.&lt;/p&gt;

&lt;p&gt;Additionally, API-first CMSs are better suited for handling heavy static assets and frequent content updates. Even if that’s not something you need currently, it’s important to consider as your content grows.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#developerheavy-and-higher-costs"&gt;
  &lt;/a&gt;
  Developer-Heavy and Higher Costs
&lt;/h3&gt;

&lt;p&gt;A drawback to all those API benefits is the fact that it drives higher reliance on developers. Whether that’s a deal breaker or not depends on your situation and use case.&lt;/p&gt;

&lt;p&gt;API-first CMSs offer a more closed, proprietary model than Git, and along with that come higher costs. However, the amount and quality of provided services might be worth it for your use case.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#use-cases"&gt;
  &lt;/a&gt;
  Use Cases
&lt;/h2&gt;

&lt;p&gt;Speaking of use cases, what exact products and services can you develop with either headless CMS?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#static-websites"&gt;
  &lt;/a&gt;
  Static Websites
&lt;/h3&gt;

&lt;p&gt;Static websites are among the most popular sites for coupling with headless CMSs. For all the blogs, landing pages, newsletter pages, documentation, and other elements, both Git-based and API-first CMSs will work well—particularly the Git-based ones, given their simplicity and fast setup.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ecommerce"&gt;
  &lt;/a&gt;
  E-Commerce
&lt;/h3&gt;

&lt;p&gt;The type of CMS recommended for e-commerce sites will vary depending on how often you need to update your content. For simple, infrequently updated, small- to medium-sized stores, a Git-based CMS will do just fine. If you’re looking at scalability and planning for future growth, though, you should consider investing in an API-first CMS.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#multiplatform"&gt;
  &lt;/a&gt;
  Multi-Platform
&lt;/h3&gt;

&lt;p&gt;For multi-platform products with multiple frontends, API-first CMS is definitely the way to go. It will require more developer involvement, but with good API, you’ll get access to a huge variety of platforms.&lt;/p&gt;

&lt;p&gt;However, depending on the type of multi-platform support you’re after, Git-based CMS could still be an option. Custom Git integration can work if you want your content to be available not only on your website but also through RSS, in PDF formats, or cross-posted to other websites.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#multisource"&gt;
  &lt;/a&gt;
  Multi-Source
&lt;/h3&gt;

&lt;p&gt;If in addition to targeting multiple platforms, you also have multiple content sources, API-first CMSs offer one more feature worth considering—content federation.&lt;/p&gt;

&lt;p&gt;With the right API (usually offered in GraphQL), you can utilize content federation to pull your content for multiple sources and access it all through a unified API-first CMS. That’s a huge advantage for large publications and a huge relief for content management.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Depending on your needs, there’s a use for both Git-based and API-first CMSs. While Git is great for rapid setup, guaranteed versioning, and simplicity of use, API-first CMSs provide more features, are more scalable, and offer more flexibility for future planning.&lt;/p&gt;

&lt;p&gt;Whichever you choose, headless CMSs can make a huge difference in content creation and management for your site. Consider your technical and business needs so you can choose the CMS with the features you most require. &lt;/p&gt;

</description>
      <category>git</category>
      <category>api</category>
      <category>cms</category>
      <category>headlesscms</category>
    </item>
    <item>
      <title>Everything you need to know about OpenTelemetry Java agent</title>
      <author>Ankit Anand ✨</author>
      <pubDate>Tue, 24 Aug 2021 13:00:55 +0000</pubDate>
      <link>https://dev.to/signoz/everything-you-need-to-know-about-opentelemetry-java-agent-4o3n</link>
      <guid>https://dev.to/signoz/everything-you-need-to-know-about-opentelemetry-java-agent-4o3n</guid>
      <description>&lt;p&gt;OpenTelemetry emerged as a single project after the merging of OpenCensus(from Google) and OpenTracing(from Uber) into a single project. The project aims to make telemetry data(logs, metrics, and traces) a built-in feature of cloud-native software applications.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/2WkkmL4"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--od2lB_mG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8yroh39ngk6sz6tv3z9y.png" alt="SigNoz GitHub repo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The OpenTelemetry Java agent enables Java applications to generate and capture telemetry data automatically. This article gives you a solid overview of the OpenTelemetry Java agent, including how it works. But first, let's take a short detour to understand what OpenTelemetry is.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-opentelemetry"&gt;
  &lt;/a&gt;
  What is OpenTelemetry?
&lt;/h2&gt;

&lt;p&gt;OpenTelemetry is a collection of code - a set of APIs, SDKs, tooling, and integrations that help you generate and manage telemetry data. It helps you generate, emit, collect, process, and export telemetry data.&lt;/p&gt;

&lt;p&gt;The telemetry data captured with OpenTelemetry enables observability for your systems and applications. It also aims to standardize this process. The data you collect with OpenTelemetry is vendor-agnostic and can be exported in many formats.&lt;/p&gt;

&lt;p&gt;OpenTelemetry does not come with a backend analysis tool. For storage, analysis, and visualization of telemetry data, you can use a full-stack observability platform like &lt;a href="https://signoz.io/"&gt;SigNoz&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-do-we-generate-telemetry-data-using-opentelemetry"&gt;
  &lt;/a&gt;
  How do we generate telemetry data using OpenTelemetry?
&lt;/h2&gt;

&lt;p&gt;Telemetry data is generated using a process called instrumentation. OpenTelemetry provides instrumentation libraries for both manual and automatic instrumentation. These libraries are specific to the languages that they are used for. Instructions for setting up instrumentation also vary with programming languages.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;OpenTelemetry defines instrumentation libraries as libraries that enable observability for another library.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#opentelemetry-java-libraries"&gt;
  &lt;/a&gt;
  OpenTelemetry Java libraries
&lt;/h2&gt;

&lt;p&gt;For Java applications, OpenTelemetry provides three repositories:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/open-telemetry/opentelemetry-java" rel="noopener noreferrer nofollow"&gt;&lt;b&gt;opentelemetry-java&lt;/b&gt;&lt;/a&gt;&lt;br&gt;This repo is the main OpenTelemetry Java SDK and provides components for manual instrumentation. Top-level components include OpenTelemetry API, extensions, SDK, bridge layers for OpenTracing and OpenCensus.&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/open-telemetry/opentelemetry-java-instrumentation" rel="noopener noreferrer nofollow"&gt;&lt;b&gt;opentelemetry-java-instrumentation&lt;/b&gt;&lt;/a&gt;&lt;br&gt;This is the sibling project of opentelemetry-java and provides the all-in-one, easy-to-install auto instrumentation Java agent. The OpenTelemetry Java agent enables you to capture telemetry data from many popular libraries and frameworks. You need to attach it to any Java 8+ application. We will learn more about the Java agent below.&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/open-telemetry/opentelemetry-java-contrib" rel="noopener noreferrer nofollow"&gt;&lt;b&gt;opentelemetry-java-contrib&lt;/b&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;
OpenTelemetry java provides this repo to cover JVM-based applications and workflows that don't fit into the scope of opentelemetry-java and opentelemetry-java-instrumentation.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#what-is-opentelemetry-java-agent"&gt;
  &lt;/a&gt;
  What is OpenTelemetry Java agent?
&lt;/h2&gt;

&lt;p&gt;OpenTelemetry has a very handy Java JAR agent that can be attached to any Java 8+ application for instrumenting Java applications. The Java JAR agent can detect a number of popular libraries and frameworks and instrument it right out of the box for generating telemetry data.&lt;/p&gt;

&lt;p&gt;OpenTelemetry collectors capture the generated telemetry data, which can then be exported in its desired format. If you're using &lt;a href="https://signoz.io/"&gt;SigNoz&lt;/a&gt;, then you can use the default OTLP exporters. The Java agent and the exporter can be configured via the command line with some environment variables. You will not need to make any changes to your code, and that's why it is so convenient to get started with the OpenTelemetry Java agent.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#how-to-use-opentelemetry-java-agent"&gt;
  &lt;/a&gt;
  How to use OpenTelemetry Java agent?
&lt;/h2&gt;

&lt;p&gt;The Java agent needs to be downloaded and distributed for each host that you want to monitor.&lt;/p&gt;

&lt;p&gt;Steps to use the OpenTelemetry Java agent:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Download and distribute the &lt;a href="https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/latest/download/opentelemetry-javaagent-all.jar"&gt;latest Java JAR agent&lt;/a&gt; to each monitored host and service.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Prepare environment variables like the service name of your monitored service and endpoint to where you will export your data&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Attach the agent to the jar of your application while running it&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you're exporting your data to an observability tool like &lt;a href="https://signoz.io/"&gt;SigNoz&lt;/a&gt;, you will have to specify the IP address of the host machine where SigNoz is hosted. SigNoz listens to incoming data at port number: 4317. So remember to allow incoming requests to port number 4317 where SigNoz is hosted.&lt;/p&gt;

&lt;p&gt;Examples of some of the environment variables to take care of:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;OTEL_TRACES_EXPORTER=otlp
OTEL_METRICS_EXPORTER=none
OTEL_EXPORTER_OTLP_ENDPOINT=&amp;lt;IP of SigNoz Backend&amp;gt;:4317
OTEL_RESOURCE_ATTRIBUTES="service.name=SERVICE_NAME"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's see how the command looks like when you want to run the Java agent attached to an application:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;OTEL_METRICS_EXPORTER=none
OTEL_EXPORTER_OTLP_ENDPOINT="http://&amp;lt;IP of SigNoz&amp;gt;:4317"
OTEL_RESOURCE_ATTRIBUTES=service.name=javaApp
java -javaagent:/path/to/opentelemetry-javaagent-all.jar -jar target/*.jar
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The path to the Java agent JAR file needs to be replaced with the location of the file downloaded. For example, for my local, the command looks like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;OTEL_METRICS_EXPORTER=none
OTEL_EXPORTER_OTLP_ENDPOINT="http://&amp;lt;IP of SigNoz&amp;gt;:4317"
OTEL_RESOURCE_ATTRIBUTES=service.name=javaApp
java -javaagent:/Users/Downloads/to/opentelemetry-javaagent-all.jar -jar target/*.jar
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And with that, the OpenTelemetry Java agent will dynamically inject bytecode to capture telemetry from a number of popular libraries and frameworks. Let's see what some of the libraries and frameworks included in the list are.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#list-of-libraries-and-frameworks-supported-by-opentelemetry-java-agent"&gt;
  &lt;/a&gt;
  List of libraries and frameworks supported by OpenTelemetry Java agent
&lt;/h2&gt;

&lt;p&gt;The supported libraries and frameworks supported by OpenTelemetry Java agent for automatic instrumentation includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Akka HTTP 10.0+&lt;/li&gt;
&lt;li&gt;Apache HttpClient 2.0+&lt;/li&gt;
&lt;li&gt;AWS Lambda 1.0+&lt;/li&gt;
&lt;li&gt;AWS SDK 1.11.x and 2.2.0+&lt;/li&gt;
&lt;li&gt;Cassandra Driver 3.0+&lt;/li&gt;
&lt;li&gt;Elasticsearch API 5.0+&lt;/li&gt;
&lt;li&gt;Elasticsearch REST Client 5.0+&lt;/li&gt;
&lt;li&gt;gRPC 1.6+&lt;/li&gt;
&lt;li&gt;JDBC Java 8+&lt;/li&gt;
&lt;li&gt;Jedis 1.4+&lt;/li&gt;
&lt;li&gt;Kafka 0.11+&lt;/li&gt;
&lt;li&gt;Kubernetes Client 7.0+&lt;/li&gt;
&lt;li&gt;MongoDB Driver 3.1+&lt;/li&gt;
&lt;li&gt;OkHttp 3.0+&lt;/li&gt;
&lt;li&gt;RabbitMQ Client 2.7+&lt;/li&gt;
&lt;li&gt;Spark Web Framework 2.3+&lt;/li&gt;
&lt;li&gt;Spring Web Services 2.0+&lt;/li&gt;
&lt;li&gt;Vert.x 3.0+&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Some of the popular application servers supported by the Java agent include Glassfish, JBoss EAP, Jetty, Payara, Tomcat, TomEE, Weblogic, and Wildfly.&lt;/p&gt;

&lt;p&gt;You can find the complete list of supported libraries and frameworks supported by OpenTelemetry Java agent at &lt;a href="https://github.com/open-telemetry/opentelemetry-java-instrumentation/blob/main/docs/supported-libraries.md#libraries--frameworks" rel="noopener noreferrer nofollow"&gt;opentelemetry-java-instrumentation&lt;/a&gt; GitHub repo.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;The OpenTelemetry Java Jar agent provides a quick and convenient way to enable your Java application for observability. With out-of-box instrumentation for many popular libraries, the Java agent can be a good starting point for instrumenting your apps with OpenTelemetry.&lt;/p&gt;

&lt;p&gt;As mentioned earlier, OpenTelemetry is a vendor-agnostic instrumentation library. So the telemetry data is portable. You can configure it to export in many different formats. A tool like &lt;a href="https://signoz.io/"&gt;SigNoz&lt;/a&gt; supports the default OTLP formats and is a perfect choice for sending your telemetry data. It also comes with a visualization layer where you can visualize charts like the popular RED metrics and distributed tracing with flame graphs and Gantt charts.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0vq7cMA8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u1qgy9r8vvzy5r8ivpo1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0vq7cMA8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u1qgy9r8vvzy5r8ivpo1.png" alt="SigNoz UI"&gt;&lt;/a&gt;SigNoz Dashboard with visualization of the popular RED metrics for your application (Number of requests, rate of error &amp;amp; duration)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GQ-jub8H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gts0usvvuv34lv6orr4u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GQ-jub8H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gts0usvvuv34lv6orr4u.png" alt="Flamegraphs"&gt;&lt;/a&gt;Flamegraphs and Gantt Charts for visualizing distributed tracing&lt;/p&gt;

&lt;p&gt;Read how to monitor your Spring Boot application with OpenTelemetry Java agent and SigNoz 👇&lt;br&gt;&lt;br&gt;
&lt;a href="https://signoz.io/blog/opentelemetry-spring-boot/"&gt;Monitor your Spring Boot application with OpenTelemetry and SigNoz&lt;/a&gt;&lt;/p&gt;

</description>
      <category>devops</category>
      <category>monitoring</category>
      <category>java</category>
      <category>opentelemetry</category>
    </item>
    <item>
      <title>Your First 30 Days as a Software Developer at a Tech Company</title>
      <author>Isabel Nyo</author>
      <pubDate>Tue, 24 Aug 2021 12:45:24 +0000</pubDate>
      <link>https://dev.to/eisabai/your-first-30-days-as-a-software-developer-at-a-tech-company-273e</link>
      <guid>https://dev.to/eisabai/your-first-30-days-as-a-software-developer-at-a-tech-company-273e</guid>
      <description>&lt;h2&gt;
  &lt;a href="#how-to-onboard-well-as-a-software-developer-by-knowing-and-nailing-the-expectation-of-your-role"&gt;
  &lt;/a&gt;
  How to onboard well as a software developer by knowing and nailing the expectation of your role
&lt;/h2&gt;

&lt;p&gt;Recently, Microsoft surveyed 30,000 workers in 31 countries about work, and according to the survey results, 41% of workers globally are thinking about quitting their current jobs. It doesn’t require a genius to figure out that tech companies are going to be the ones most impacted by this as the tech industry is one of the fastest-growing industries amidst the global pandemic. So if you are a software developer, you will likely be joining a new company in the next 12–18 months.&lt;/p&gt;

&lt;p&gt;—&lt;/p&gt;

&lt;p&gt;Changing to a new job can be quite stressful - but it’s also a good thing. It puts you outside of your comfort zone and stretches you. It makes you see and think about things that you wouldn’t normally think twice about at your previous job - such as making a commit to the company’s repo, seeing your work live on production, joining your team stand up, and asking someone to review your pull request. When you are too comfortable at your workplace and you have gotten used to the process and tools, you tend to take things for granted and operate on an auto-pilot mode. Changing your environment, be it a new team within the same company or a new job altogether at a different company, makes you become more aware of yourself and what you do day to day as a developer.&lt;br&gt;&lt;br&gt;
Besides generic new hire questions like What time should you start work? How friendly should you be in your first week?, this article aims to provide answers to all the software development-related questions that you, as a new developer, wanted to ask your fellow developers or your development manager but were too afraid to.&lt;/p&gt;

&lt;p&gt;—&lt;/p&gt;

&lt;p&gt;I am referring to the questions like:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;When should you add your code to the company repo?&lt;br&gt;&lt;br&gt;
When should you expect to see your work live on production?&lt;br&gt;&lt;br&gt;
When should you share your view on a particular design pattern?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As an engineering manager who has hired and onboarded many developers and tech leads, let me share with you some of the most commonly thought of (and sometimes asked) questions and my answers for them. I hope they will help you as you, as a new developer in a new job, make the best first impression and at the same time, let everyone know the real you and what you’ve got to offer.&lt;/p&gt;

&lt;p&gt;I will be providing two answers to each question: one for startups and small companies and one for medium to large enterprises. This is because, from my experience as a technology leader with almost 20 years working in the tech industry with startups to Fortune 500 tech companies, I know that the size of the company and the environment play a large role in expectation. Also, note that my answers are just guidelines as there may be some nuances that you might encounter. Regardless, I hope they are helpful in giving you a perspective on what you need to aim for as a newly hired software engineer at a company.&lt;/p&gt;

&lt;h3&gt;Part I: it all about the code&lt;br&gt;
&lt;/h3&gt;
&lt;p&gt;When should you set up your development instance on your machine?&lt;br&gt;
Small startup: On the first day&lt;br&gt;
Large enterprise: Within the first two weeks&lt;br&gt;&lt;br&gt;
When should you make your first commit?&lt;br&gt;
Small startup: Within the first three days&lt;br&gt;
Large enterprise: In the first two weeks&lt;br&gt;&lt;br&gt;
When should you expect to see your work live on production?&lt;br&gt;
Small startup: Within the first ten days&lt;br&gt;
Large enterprise: It depends. The next release cycle after your first month.&lt;br&gt;&lt;br&gt;
When should you learn about best practices and coding standards?&lt;br&gt;
Small startup: Within the first week&lt;br&gt;
Large enterprise: Within the first two weeks&lt;br&gt;&lt;br&gt;
When should you understand the architecture of the system(s) that you’ll be contributing code to?&lt;br&gt;
Small startup: In the first week&lt;br&gt;
Large enterprise: In the first month&lt;br&gt;&lt;br&gt;
When should you be independently picking up and completing a task from your team’s backlog?&lt;br&gt;
Small startup: Within your first sprint.&lt;br&gt;
Large enterprise: Within the first month.&lt;br&gt;&lt;br&gt;
Regardless of whether you’re a junior software developer or a senior one, your tech lead or engineering manager should have some tasks that you should be able to pick up independently based on your seniority level. Make sure you communicate this with them.&lt;br&gt;&lt;br&gt;
When should you start contributing to story estimation?&lt;br&gt;
Small startup: After your first sprint*.&lt;br&gt;
Large enterprise: After two sprints*.&lt;br&gt;&lt;br&gt;
One sprint=Two weeks.&lt;/p&gt;
&lt;h3&gt;Part II: It’s About the Process&lt;/h3&gt;

&lt;p&gt;When should you start being an on-call person for your team’s services (especially if the company practices YBIYRI)?&lt;br&gt;
Small startup: Within the first month.&lt;br&gt;
Large enterprise: After you’ve shadowed an on-call rotation. Usually after a few months.&lt;br&gt;&lt;br&gt;
When should you put your hands up to drive a team activity, e.g., running a retro?&lt;br&gt;
Small startup: After you’ve seen how it’s done at least two times.&lt;br&gt;
Large enterprise: Same as above.&lt;br&gt;&lt;br&gt;
When should you be comfortable being an Approver for someone else’s Pull Request?&lt;br&gt;
Small startup: Within 15 days&lt;br&gt;
Large enterprise: Within 60 days&lt;br&gt;&lt;br&gt;
When should you know about the build and release process?&lt;br&gt;
Small startup: Within the first week&lt;br&gt;
Large enterprise: Within the three weeks&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;Part III: It’s About the Big Picture&lt;/h3&gt;

&lt;p&gt;When should you start being an active participant in various guilds and charters, e.g., Frontend Guild, Technical Architecture Guild, etc.&lt;br&gt;
Small startup: In one month&lt;br&gt;
Large enterprise: In three months&lt;br&gt;&lt;br&gt;
When should you start contributing to technical discussions?&lt;br&gt;
Small startup: In three months&lt;br&gt;
Large enterprise: In six months&lt;br&gt;&lt;br&gt;
When should you learn about the product (as an end user) especially its features and capabilities?&lt;br&gt;
Small startup: Within the first three days&lt;br&gt;
Large enterprise: Within the first seven days&lt;br&gt;&lt;br&gt;
When should you have good knowledge of operational aspects of the engineering?&lt;br&gt;
Small startup: Within the first 20 days&lt;br&gt;
Large enterprise: Within the first 60 days&lt;br&gt;&lt;br&gt;
When should you start talking about your career aspirations with your manager?&lt;br&gt;
Small startup: Within 30 days&lt;br&gt;
Large enterprise: Within 90 days&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;Keep Your Own Onboarding Checklist&lt;/h3&gt;

&lt;p&gt;Your manager may provide you with an onboarding document, but it’s also important to keep your own to make sure you’re keeping track of your own progress and are meeting the minimum expectation for a software developer role in your first few weeks.&lt;br&gt;&lt;br&gt;
Apart from coding and technical tasks, you should also add the following important items to your checklist:&lt;br&gt;&lt;br&gt;
* Join necessary Slack, Microsoft Team, or any other communication channels&lt;br&gt;
* Ask to be included on important mailing lists and calendar invites&lt;br&gt;
* Set up a regular 1:1 with your manager&lt;br&gt;
* Learn about social groups and make connections with fellow employees&lt;br&gt;
* Find out about the expectation of your role and what success looks like from the point of view of your manager&lt;/p&gt;

&lt;p&gt;Here is a checklist to help you find your feet in your first 30 days as a software developer at a new company.&lt;br&gt;

⬜️ Dev instance set up&lt;br&gt;

⬜️ First commit made&lt;br&gt;

⬜️ Code live in production&lt;br&gt;

⬜️ Drove a team activity&lt;br&gt;

⬜ ️Actively contributed to estimation&lt;br&gt;

⬜ ️Have been on-call&lt;br&gt;

⬜ ️Independently completed a task from the backlog&lt;br&gt;

⬜ ️Shared your career aspirations with manager&lt;br&gt;

⬜ ️Approved a Pull Request&lt;br&gt;

⬜ ️Understood build and release process&lt;br&gt;

⬜ ️Participated in a Guild&lt;br&gt;

⬜ ️Contributed to a technical discussion&lt;br&gt;

⬜ ️Understood the architecture of the system(s)&lt;br&gt;

⬜ ️Learned about the product&lt;br&gt;

⬜ ️Learned about best practices and coding standards&lt;br&gt;

⬜ ️Gained operational knowledge&lt;br&gt;
&lt;br&gt;

⬜ ️Joined important communication channels &lt;br&gt;

⬜ ️Included on necessary mailing lists and calendar invites ️&lt;br&gt;

⬜ ️Set up a regular 1:1 with manager &lt;br&gt;

⬜ ️Made social connections with likeminded groups&lt;br&gt;

⬜ ️Understood the expectation of your role&lt;br&gt;


&lt;/p&gt;
&lt;h3&gt;Make a Great First Impression&lt;/h3&gt;
&lt;p&gt;We all know this: First impression matters. Your first impression with your engineering manager and fellow developers starts the moment you join the company, and that impression lasts for a long time, sometimes for the duration of the entire time you’re with the company. So set the bar high by knowing what is expected from you as a software developer and keeping track of your progress.&lt;/p&gt;

&lt;p&gt;—&lt;/p&gt;

&lt;h4&gt;Career Guide for Software Developers&lt;/h4&gt;

&lt;p&gt;If you enjoy this article, you might like to check out my ebook for software developers - &lt;a href="https://gum.co/softwaredevelopers"&gt;Career Guide for Software Developers&lt;/a&gt;.&lt;br&gt;&lt;br&gt;
The technology industry is one of the fastest-growing industries today. The future of work has arrived for developers. I know for a fact that it is different than work we know previously and thus requires different mindsets and skills from developers to be effective in their role. Check out the ebook and apply the strategies and tactics in your professional life to have a successful career as a software developer.&lt;/p&gt;

&lt;p&gt;The post &lt;a rel="nofollow" href="https://eisabainyo.net/weblog/2021/07/09/your-first-30-days-as-a-software-developer-at-a-tech-company/"&gt;Your First 30 Days as a Software Developer at a Tech Company&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://eisabainyo.net/weblog"&gt;Career Resources For Professionals In Tech&lt;/a&gt;.&lt;/p&gt;



</description>
      <category>advice</category>
      <category>productivity</category>
      <category>career</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Microsoft Server Üzerinde SQLite Kurulumu</title>
      <author>Zeki Ahmet Bayar</author>
      <pubDate>Tue, 24 Aug 2021 12:43:10 +0000</pubDate>
      <link>https://dev.to/aciklab/microsoft-server-uzerinde-sqlite-kurulumu-23k0</link>
      <guid>https://dev.to/aciklab/microsoft-server-uzerinde-sqlite-kurulumu-23k0</guid>
      <description>&lt;p&gt;SQLite bilindiği gibi çokça tercih edilen bir veri tabanı yazılımı. Diğer veri tabanı yazılımlarına göre daha sade olması ile öne çıkan SQLite'ın Microsoft Server 2016 üzerinde bir Powershell scripti içerisinde nasıl kullanılacağını beraber inceleyelim.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#versiyon-kontrol%C3%BC"&gt;
  &lt;/a&gt;
  Versiyon kontrolü
&lt;/h3&gt;

&lt;p&gt;Bu aşamada sistemimizle alakalı bazı versiyon bilgilerini öğreneceğiz. Bu bilgiler bize bir sonraki adım olan indirme adımında hangi SQLite versiyonunu indireceğimize karar verirken yardımcı olacak.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight powershell"&gt;&lt;code&gt;&lt;span class="n"&gt;PS&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;IntPtr&lt;/span&gt;&lt;span class="p"&gt;]::&lt;/span&gt;&lt;span class="nx"&gt;Size&lt;/span&gt;&lt;span class="w"&gt; 

&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;komutu sisteminizin kaç bit görmemize yardımcı olur. Bu komuttan 8 çıktısını alıyorsanız 64, 4 çıktısını alıyorsanız 32 bit bir sisteme sahip olduğunuz anlamına gelir.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight powershell"&gt;&lt;code&gt;&lt;span class="n"&gt;PS&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="bp"&gt;$PSVersionTable&lt;/span&gt;&lt;span class="w"&gt;


&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="w"&gt;                           &lt;/span&gt;&lt;span class="nx"&gt;Value&lt;/span&gt;&lt;span class="w"&gt;                                                                                                                                                                                                                             
&lt;/span&gt;&lt;span class="o"&gt;----&lt;/span&gt;&lt;span class="w"&gt;                           &lt;/span&gt;&lt;span class="o"&gt;-----&lt;/span&gt;&lt;span class="w"&gt;                                                                                                                                                                                                                             
&lt;/span&gt;&lt;span class="n"&gt;PSVersion&lt;/span&gt;&lt;span class="w"&gt;                      &lt;/span&gt;&lt;span class="nx"&gt;5.1.14393.693&lt;/span&gt;&lt;span class="w"&gt;                                                                                                                                                                                                                     
&lt;/span&gt;&lt;span class="n"&gt;PSEdition&lt;/span&gt;&lt;span class="w"&gt;                      &lt;/span&gt;&lt;span class="nx"&gt;Desktop&lt;/span&gt;&lt;span class="w"&gt;                                                                                                                                                                                                                           
&lt;/span&gt;&lt;span class="n"&gt;PSCompatibleVersions&lt;/span&gt;&lt;span class="w"&gt;           &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;2.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;3.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;4.0&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;                                                                                                                                                                                                           
&lt;/span&gt;&lt;span class="n"&gt;BuildVersion&lt;/span&gt;&lt;span class="w"&gt;                   &lt;/span&gt;&lt;span class="nx"&gt;10.0.14393.693&lt;/span&gt;&lt;span class="w"&gt;                                                                                                                                                                                                                    
&lt;/span&gt;&lt;span class="n"&gt;CLRVersion&lt;/span&gt;&lt;span class="w"&gt;                     &lt;/span&gt;&lt;span class="nx"&gt;4.0.30319.42000&lt;/span&gt;&lt;span class="w"&gt;                                                                                                                                                                                                                   
&lt;/span&gt;&lt;span class="n"&gt;WSManStackVersion&lt;/span&gt;&lt;span class="w"&gt;              &lt;/span&gt;&lt;span class="nx"&gt;3.0&lt;/span&gt;&lt;span class="w"&gt;                                                                                                                                                                                                                               
&lt;/span&gt;&lt;span class="n"&gt;PSRemotingProtocolVersion&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nx"&gt;2.3&lt;/span&gt;&lt;span class="w"&gt;                                                                                                                                                                                                                               
&lt;/span&gt;&lt;span class="n"&gt;SerializationVersion&lt;/span&gt;&lt;span class="w"&gt;           &lt;/span&gt;&lt;span class="nx"&gt;1.1.0.1&lt;/span&gt;&lt;span class="w"&gt;            
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;komut çıktısında ise ihtiyacımız olan CLRVersion bilgisi. Örneğin yukarıdaki çıktı için bu bilgi bize .NET 4.0 sürümünü kullanmamız gerektiğini ifade ediyor.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#uygun-sqlite-s%C3%BCr%C3%BCm%C3%BCn%C3%BCn-i%CC%87ndirilmesi"&gt;
  &lt;/a&gt;
  Uygun SQLite Sürümünün İndirilmesi
&lt;/h3&gt;

&lt;p&gt;SQLite &lt;a href="https://system.data.sqlite.org/index.html/doc/trunk/www/downloads.wiki"&gt;indirme bağlantısına&lt;/a&gt; giderek edindiğimiz versiyon bilgilerine göre sistemimize uygun SQLite sürümünü indirelim. Bu işlem tarayıcı ya da komut satırı üzerinden gerçekleştirilebilir.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--alIohtq3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a6jdo3tybx0gqtc04dj0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--alIohtq3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a6jdo3tybx0gqtc04dj0.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;PS&amp;gt; [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
PS&amp;gt; Invoke-WebRequest -Uri "https://system.data.sqlite.org/blobs/1.0.114.0/sqlite-netFx40-binary-bundle-x64-2010-1.0.114.0.zip" -OutFile C:\Windows\Temp\sqlite.zip
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Sıkıştırılmış dosya indirildikten sonra arayüz ya da komut satırı üzerinden ilgili dizine çıkartılmalıdır.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mkdir C:\Windows\sqlite
Expand-Archive C:\Temp\sqlite.zip -DestinationPath C:\Windows\sqlite
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#i%CC%87ndirilen-dosyan%C4%B1n-sisteme-eklenmesi"&gt;
  &lt;/a&gt;
  İndirilen Dosyanın Sisteme Eklenmesi
&lt;/h3&gt;

&lt;p&gt;İndirilen SQLite dosyasının aşağıdaki gibi sisteme eklenmesi gerekmektedir.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;PS&amp;gt; Add-Type -Path "C:\Windows\sqlite\System.Data.SQLite.dll"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>sql</category>
      <category>sqlite</category>
      <category>powershell</category>
    </item>
    <item>
      <title>Block npm package threats using a dependency firewall</title>
      <author>Daniel Parmenvik</author>
      <pubDate>Tue, 24 Aug 2021 12:39:48 +0000</pubDate>
      <link>https://dev.to/danielp/block-npm-package-threats-using-a-dependency-firewall-34bb</link>
      <guid>https://dev.to/danielp/block-npm-package-threats-using-a-dependency-firewall-34bb</guid>
      <description>&lt;p&gt;If you've ever installed an npm package to JavaScript projects you doubtlessly have seen the status messages with a list of known vulnerabilities in the terminal output.&lt;/p&gt;

&lt;p&gt;With npm, yarn or pnpm providing basic vulnerability information during package installation, it's hard to ignore how frequent vulnerabilities have become. That’s great service and security measure for the millions of daily users that rely on these tools for their projects.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;added 57 packages and audited 3 packages in 107 s
2 critical severity vulnerabilities
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;But what if you want to block threats before they even enter your supply chain?&lt;/strong&gt; Maybe you prefer getting automatic notifications with critical issues instead of checking manually? Or, would like to avoid potential security risks that may be critical for certain environments? &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;And what happens when it's no longer a developer installing dependencies, but rather an automated environment?&lt;/strong&gt; A key component of modern security tooling is to make sure threats are actively blocked, and you are notified of issues, even if no human is actively monitoring it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Below I will introduce you to how to quarantine problematic packages using the dependency firewall in &lt;a href="https://bytesafe.dev"&gt;Bytesafe&lt;/a&gt;.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Whenever a critical vulnerability is detected you might want to take immediate actions so that your teams, environments and business are protected - so your software supply chain can remain secure. Go ahead to learn how to quarantine unwanted packages from entering your supply chain!&lt;/p&gt;



&lt;blockquote&gt;
&lt;h2&gt;
  &lt;a href="#quarantine-in-short"&gt;
  &lt;/a&gt;
  Quarantine in short
&lt;/h2&gt;

&lt;p&gt;Quarantine allows you to automatically block the use of specific packages that surpass security threshold levels, for example npm packages with serious identified vulnerabilities. While simultaneously highlighting the issue for your teams to address instead of blocking (and hiding) them.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--noMOuCso--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v8eft8g5nj5k418dxd1z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--noMOuCso--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v8eft8g5nj5k418dxd1z.png" alt="Quarantined deprecated packaget" title="Quarantined deprecated package"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This means that you’ll get a powerful tool to control allowed packages for all developers &amp;amp; systems while being very easy to use.&lt;/p&gt;
&lt;/blockquote&gt;


&lt;h2&gt;
  &lt;a href="#why-use-automatic-quarantine-of-problematic-packages"&gt;
  &lt;/a&gt;
  Why use automatic quarantine of problematic packages?
&lt;/h2&gt;

&lt;p&gt;Secure usage of open source software is a necessity for modern organizations with cyber attacks becoming more and more of a common occurrence. And it's more than just an IT problem, with consequences that can potentially impact the whole organization. &lt;/p&gt;

&lt;p&gt;At the same time every development team is required to balance productivity with security needs. So security solutions need to protect you while still allowing you to be productive.&lt;/p&gt;

&lt;p&gt;Modern security problems require modern tooling. Efficient tooling that highlights potential issues while working within your regular workflow. Tooling like Bytesafe that continuously monitors your packages for issues and helps you stay secure.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#benefits-of-automatic-quarantine-of-vulnerable-packages"&gt;
  &lt;/a&gt;
  Benefits of automatic quarantine of vulnerable packages
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Prevent malicious threats with a firewall for your supply chain&lt;/strong&gt;. Quarantine packages according to your security thresholds. Automatically block the use of known vulnerable packages - while still securely holding the vulnerable version inside your Bytesafe workspace for you to address. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Highlight security issues for remediation&lt;/strong&gt;. Quarantine offers significant advantages to simply blocking packages outright. When a package is held securely within Bytesafe an issue will be created that notifies you of the problem. Allowing your team to easily and quickly remediate any issue and proceed with building awesome applications.   &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Avoid getting overwhelmed with issues - configure your thresholds &amp;amp; rules&lt;/strong&gt;. Reducing noise to a manageable level is critical for any team. Otherwise notifications of security issues will simply get ignored. With Bytesafe you can customize at what severity level you want packages to be quarantined. You can also decide to avoid quarantine for issues without patch versions solutions available - all to allow you to work efficiently with your supply chain security. &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Areas in the development life cycle (test, builds, deploys etc) are increasingly being automated with minimum human interaction. Make sure to keep up and manage open source dependencies securely with the appropriate level of detection and protection from vulnerabilities.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#configurable-security-thresholds-according-to-your-business-needs"&gt;
  &lt;/a&gt;
  Configurable security thresholds according to your business needs
&lt;/h2&gt;

&lt;p&gt;The &lt;a href="https://docs.bytesafe.dev/plugins/vulnerability-scanner/"&gt;Vulnerability&lt;/a&gt; and &lt;a href="https://docs.bytesafe.dev/plugins/license-scanner/"&gt;License&lt;/a&gt; scanners allow you to define when you want to pull the handbrake and immediately throw a package in quarantine.&lt;/p&gt;

&lt;p&gt;The vulnerable open source packages will be blocked from being used in your supply chain. This way you are effectively using Bytesafe as a firewall as a quarantined packaged cannot be used from the Bytesafe registry.&lt;/p&gt;

&lt;p&gt;The plugin settings contain additional configuration for when you want a package to be quarantined. When the quarantine feature has been enabled, the default threshold is set to High. This means that packages with a severity level higher or equal to High will be placed in quarantine.&lt;/p&gt;

&lt;p&gt;You can also configure to only quarantine packages if they have patch versions available, typically used when you want to be notified of problems but decide you want to continue your work without breaking any builds.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r8lHqi9h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/39b4tcg7vzhu1uj2bamb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r8lHqi9h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/39b4tcg7vzhu1uj2bamb.png" alt="Quarantine settings" title="Quarantine settings"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Visit &lt;a href="https://docs.bytesafe.dev/quarantine/"&gt;Bytesafe documentation&lt;/a&gt; to learn more on how to configure quarantine for your needs.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;
  &lt;a href="#release-a-package-from-quarantine"&gt;
  &lt;/a&gt;
  Release a package from quarantine
&lt;/h2&gt;

&lt;p&gt;In situations where you have evaluated the risks with a quarantined package and made an assessment to approve the use package you can easily release packages.&lt;/p&gt;

&lt;p&gt;Releasing from the quarantine area means the package version will be flagged as safe to use. The package will be accessible from Bytesafe by all developers and environments.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a1Lsh-LT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/02ybnmo7bnx3dzyqx6vs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a1Lsh-LT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/02ybnmo7bnx3dzyqx6vs.png" alt="Quarantined package" title="Quarantined package"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The activity log of any issues related to this package will also show that the package has been released from the quarantine.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sP8GKaz9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8de3xgto9e34ti8ttbhc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sP8GKaz9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8de3xgto9e34ti8ttbhc.png" alt="Activity log of release from quarantine" title="Activity log of release from quarantine"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#want-to-read-more-on-how-to-control-your-software-supply-chain"&gt;
  &lt;/a&gt;
  Want to read more on how to control your software supply chain?
&lt;/h2&gt;

&lt;p&gt;Stay up to date with other security related posts that might interest you:&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#how-to-use-a-secure-by-default-solution-for-dependency-confusion"&gt;
  &lt;/a&gt;
  How to use a secure by default solution for dependency confusion
&lt;/h3&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/sumstrm" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--urSEIX2S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--vGEdegLE--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/416513/551d6f2a-9e70-45a9-baae-50ae3bf58a0d.jpg" alt="sumstrm"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/sumstrm/automatically-protect-your-supply-chain-from-dependency-confusion-2n35" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Automatic protection from dependency confusion&lt;/h2&gt;
      &lt;h3&gt;Andreas Sommarström ・ May 19 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#npm&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#security&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#node&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#how-issue-tracking-across-your-registries-helps-you-get-an-overview-of-what-needs-your-attention"&gt;
  &lt;/a&gt;
  How issue tracking across your registries helps you get an overview of what needs your attention
&lt;/h3&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/danielp" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BbAG9oJQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--zBpYVsAn--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/381614/8d0e0ce8-754e-4a38-a6ec-a27e2b680d05.png" alt="danielp"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/danielp/track-issues-with-problematic-npm-packages-30cc" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Track issues with problematic npm packages&lt;/h2&gt;
      &lt;h3&gt;Daniel Parmenvik ・ Aug 24 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#npm&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#devops&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a href="https://twitter.com/bytesafedev"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xa6AP1T3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j3uehdo8j7i2g40bk382.png" alt="Follow Bytesafe on Twitter"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>npm</category>
      <category>devops</category>
      <category>security</category>
    </item>
    <item>
      <title>My Widow's mite: The "this" keyword in Javascript</title>
      <author>Qliqsee</author>
      <pubDate>Tue, 24 Aug 2021 12:39:07 +0000</pubDate>
      <link>https://dev.to/agboola_iyanu/my-widow-s-mite-the-this-keyword-in-javascript-1n86</link>
      <guid>https://dev.to/agboola_iyanu/my-widow-s-mite-the-this-keyword-in-javascript-1n86</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;“Truly I tell you, this poor widow has put more into the treasury than all the others.&lt;br&gt;
They all gave out of their wealth; but she, out of her poverty, put in everything— all she had to live on.”&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Mark 12: 43-44&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Warning, this is the most naïve approach but in the end, I hope to better help you understand the &lt;em&gt;this&lt;/em&gt; keyword even in cases where it proves most elusive to understand.&lt;/p&gt;

&lt;p&gt;I'm writing this passionately because I've witnessed firsthand, the muddling that comes with the &lt;em&gt;this&lt;/em&gt; keyword in context and reference.&lt;/p&gt;

&lt;p&gt;The word &lt;em&gt;This&lt;/em&gt; by itself  is a demonstrative pronoun which is used for indicating (point to) something. To understand you need to first grasp the concept of pronouns and how it saves you from looking like a complete fool on a daily basis 😁.&lt;/p&gt;

&lt;p&gt;Consider this example: &lt;em&gt;Richard scored highest in the test because Richard read all through the night.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Implementing the concept of pronouns as a sane person would, we write: &lt;em&gt;Richard scored highest in the test because&lt;/em&gt; &lt;strong&gt;he&lt;/strong&gt; &lt;em&gt;read all through the night.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Notice how we didn't reuse &lt;em&gt;Richard&lt;/em&gt;, we do this because we don't want people to run away from us. Trust me, any guy that does otherwise should bid farewell to his chances of landing a pretty model-like girlfriend 🤦‍♂️.&lt;/p&gt;

&lt;p&gt;So it is in JavaScript and programming in general, hence the need for a referent. The &lt;em&gt;this&lt;/em&gt; basically refers to an object (an antecedent) which is the subject in the context of an executing code. &lt;/p&gt;

&lt;p&gt;Here is an example to help you further understand:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Richard Doe&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;job&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Farming&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;jobFunction&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;'s occupation is &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;job&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;jobFunction&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;//Richard Doe's occupation is Farming&lt;/span&gt;

  &lt;span class="c1"&gt;// But of course this would also work&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Richard Doe&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;job&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Farming&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;jobFunction&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;'s occupation is &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;job&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;jobFunction&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;//Richard Doe's occupation is Farming&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Our code becomes superfluous writing it the second way as &lt;em&gt;person.name&lt;/em&gt; and &lt;em&gt;person.job&lt;/em&gt;, definitely a turnoff 🤮. Especially since there could be another global variable &lt;em&gt;person&lt;/em&gt; that we might not be aware of and this could lead to difficult-to-debug errors in our code. So we use the &lt;em&gt;this&lt;/em&gt; keyword to avoid ambiguity and emphasize precision, yeah and also for aesthetics (at least in my own case).&lt;/p&gt;

&lt;p&gt;Like objects all JavaScript functions have properties. And when executing, they get the &lt;em&gt;this&lt;/em&gt; property __ a variable with the value of the object that invokes the function where &lt;em&gt;this&lt;/em&gt; is used.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;When in strict mode, "this" holds the value of undefined in the global scope and anonymous in functions that aren't bound to any object.&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#gotcha"&gt;
  &lt;/a&gt;
  GOTCHA
&lt;/h2&gt;

&lt;p&gt;To expunge every confusion it is important that you understand this one principle; &lt;strong&gt;this&lt;/strong&gt; &lt;em&gt;is not assigned a value until an object invokes the function where this is defined&lt;/em&gt;.&lt;br&gt;
In most cases &lt;em&gt;this&lt;/em&gt; assumes the value of the object that invokes it. There are only few instances or scenarios when &lt;em&gt;this&lt;/em&gt; does not have the value of the invoking object and I'll touch on some of them here and drop a link to an article for a more in-depth and probably more comprehensive article.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#this-in-global-scope"&gt;
  &lt;/a&gt;
  &lt;em&gt;this&lt;/em&gt; in global scope
&lt;/h3&gt;

&lt;p&gt;This is getting too lengthy yeah? Just one more section with few points and we are done, &lt;strong&gt;Arigato&lt;/strong&gt; 🙏.&lt;/p&gt;

&lt;p&gt;In the global scope all global variables and functions are defined in the window object. Hence, in the global scope &lt;em&gt;this&lt;/em&gt; will have the value of the global window object (except in strict mode).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="c1"&gt;// in the global scope&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;print&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;purple&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;print&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;//purple&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;in strict mode:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;print&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;use strict&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;purple&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;print&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="c1"&gt;//Cannot set property 'color' of undefined&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here comes the tricky part, now I'll be touching on some scenarios where the &lt;em&gt;this&lt;/em&gt; keyword becomes confusing.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; When "this" is used in a method passed as a callback.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Things get touch hairy when we pass a method (that uses &lt;em&gt;this&lt;/em&gt;) as a parameter to be used as a call back function.&lt;/p&gt;

&lt;p&gt;Here is an example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt; &lt;span class="c1"&gt;// here is an object with a clickhandler method that is called when a button is clicked&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;farmers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Richard Doe&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;job&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Farmer&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}],&lt;/span&gt;
    &lt;span class="na"&gt;clickHandler&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;farmers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; is a &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;farmers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;job&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;button&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//button here is an object&lt;/span&gt;
  &lt;span class="nx"&gt;button&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clickHandler&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//the click() method here is a method on the button object and&lt;/span&gt;
  &lt;span class="c1"&gt;// Cannot read property '0' of undefined because there is no farmers property on the button object&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;this&lt;/em&gt; here is undefined because &lt;em&gt;button&lt;/em&gt; is an object all by itself and &lt;em&gt;person.clickHandler()&lt;/em&gt; is a method we are passing to &lt;em&gt;button&lt;/em&gt;'s click method as a callback. This implies that the &lt;em&gt;person.clickHandler()&lt;/em&gt; will no longer refer to the person object. &lt;em&gt;this&lt;/em&gt; here will now refer to the object where the &lt;em&gt;person.clickHandler()&lt;/em&gt; method is executed which is the button object.&lt;/p&gt;

&lt;p&gt;Hence it is lucid that when the context changes the &lt;em&gt;this&lt;/em&gt; keyword will no longer refer to the object where &lt;em&gt;this&lt;/em&gt; was originally defined but to the object that invokes the method where &lt;em&gt;this&lt;/em&gt; was defined.&lt;/p&gt;

&lt;p&gt;An approach to resolving this problem is to use the bind method. We will bind the &lt;em&gt;clickhandler()&lt;/em&gt; method to the person object.&lt;/p&gt;

&lt;p&gt;Here is an example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt; &lt;span class="c1"&gt;// An alternative approach&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;farmers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Richard Doe&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;job&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Farmer&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}],&lt;/span&gt;
    &lt;span class="na"&gt;clickHandler&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;farmers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; is a &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;farmers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;job&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;button&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//button here is an object&lt;/span&gt;
  &lt;span class="nx"&gt;button&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clickHandler&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;//the click() method here is a method on the button object and&lt;/span&gt;
  &lt;span class="c1"&gt;//Richard Doe is a Farmer&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;When &lt;em&gt;this&lt;/em&gt; is used inside a closure&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Closures are inner functions basically and it is expedient you grasp that closures can't access the &lt;em&gt;this&lt;/em&gt; variable of outer functions by using the &lt;em&gt;this&lt;/em&gt; keyword because the &lt;em&gt;this&lt;/em&gt; varaible can be accessed only by the function itself.&lt;/p&gt;

&lt;p&gt;See this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;farmersMotto&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Farming is our pride&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;farmers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Richard Doe&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;job&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Farmer&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Rachael Doe&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;job&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Farmer&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;clickHandler&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;farmers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Our motto as farmers is &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;farmersMotto&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//Our motto as farmers is undefined&lt;/span&gt;
        &lt;span class="c1"&gt;//why?&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;''&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// [object window]&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clickHandler&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;this&lt;/em&gt; inside an anonymous function is bound to the global window object because  it cannot access the outer function's &lt;em&gt;this&lt;/em&gt;(when strict mode is not in use)&lt;/p&gt;

&lt;p&gt;Resolving this on the other hand is quite easy, just set the &lt;em&gt;this&lt;/em&gt; value to a variable before entering the anonymous function. This is a fairly popular approach amongst developers.&lt;/p&gt;

&lt;p&gt;See this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt; &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;farmersMotto&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Farming is our pride&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;farmers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Richard Doe&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;job&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Farmer&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Rachael Doe&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;job&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Farmer&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;clickHandler&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;thisPerson&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;farmers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Our motto as farmers is: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;thisPerson&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;farmersMotto&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//Our motto as farmers is: Farming is our pride&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clickHandler&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;this&lt;/em&gt; when a method is assigned to a variable&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here is an example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="c1"&gt;// This data variable is a global variable&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;farmers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Rachael Doe&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;job&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Farming&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}];&lt;/span&gt;

  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// this data variable is a property on the Person object&lt;/span&gt;
    &lt;span class="na"&gt;farmers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Richard Doe&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;job&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Farming&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}],&lt;/span&gt;
    &lt;span class="na"&gt;showData&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;farmers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;'s job is &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;farmers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;job&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="c1"&gt;// Assign the person.showData to a variable&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;showPersonsData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;showData&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;//&lt;/span&gt;
  &lt;span class="nx"&gt;showPersonsData&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// Rachael Doe's job is Farming (from the global data array)&lt;/span&gt;
  &lt;span class="c1"&gt;//The output we desire is: Richard Doe's job is Farming. &lt;/span&gt;
  &lt;span class="c1"&gt;//so how do we fix this?&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A quick fix to this will be to use the bind method.&lt;/p&gt;

&lt;p&gt;Like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="c1"&gt;// This data variable is a global variable&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;farmers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Rachael Doe&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;job&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Farming&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}];&lt;/span&gt;

  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// this data variable is a property on the Person object&lt;/span&gt;
    &lt;span class="na"&gt;farmers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Richard Doe&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;job&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Farming&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}],&lt;/span&gt;
    &lt;span class="na"&gt;showData&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;farmers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;'s job is &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;farmers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;job&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="c1"&gt;// Assign the person.showData to a variable&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;showPersonsData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;showData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="c1"&gt;//&lt;/span&gt;
  &lt;span class="nx"&gt;showPersonsData&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// Richard Doe's job is Farming (from the global data array)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Of course, there  are other cases of the Javascript &lt;em&gt;this&lt;/em&gt; keyword errors and fixes. I recommend you read &lt;a href="https://www.javascripttutorial.net/javascript-apply-method/"&gt;this article&lt;/a&gt; for an in-depth understanding of the &lt;em&gt;this&lt;/em&gt; keyword.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-note"&gt;
  &lt;/a&gt;
  Final Note
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aDoq0QBo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gwo2jd9y4c8ne3baghsx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aDoq0QBo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gwo2jd9y4c8ne3baghsx.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I'm inexperienced myself but I hope I have been able to help you out with the little I know. Lemme know what you think 👋.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;In everything I did, I showed you that by this kind of hard work we must help the weak, remembering the words the Lord Jesus himself said: ‘It is more blessed to give than to receive.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Act 20:35&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>javascript</category>
      <category>functional</category>
      <category>beginners</category>
      <category>believer</category>
    </item>
    <item>
      <title>Interviews are about telling a story</title>
      <author>Laurie</author>
      <pubDate>Tue, 24 Aug 2021 12:34:23 +0000</pubDate>
      <link>https://dev.to/laurieontech/interviews-are-about-telling-a-story-21no</link>
      <guid>https://dev.to/laurieontech/interviews-are-about-telling-a-story-21no</guid>
      <description>&lt;p&gt;Last week I was in &lt;a href="https://twitter.com/DThompsonDev"&gt;Danny Thompson's&lt;/a&gt; twitter space talking about tech interviews. One piece of advice I gave was about preparing for conversational interviews and the types of questions you get asked.&lt;/p&gt;

&lt;p&gt;Apparently, people wanted to learn more!  And as always, I'm happy to oblige.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tech-interviews-arent-only-about-code"&gt;
  &lt;/a&gt;
  Tech Interviews aren't only about code
&lt;/h2&gt;

&lt;p&gt;You may be familiar with guides for studying and preparing to ace tech interviews. Oftentimes they focus on algorithms and data structures. You'll also find write-ups and websites on studying for systems design interviews and other abstract exercises. Prepping for these types of questions are great. However, they aren't the only type of interview rounds you're likely to encounter.&lt;/p&gt;

&lt;p&gt;In most interview processes you'll have rounds that are very conversational in nature. They're typically a mix of technical and people skills questions. This post is about setting yourself up for success in these interviews.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-type-of-questions-can-you-expect"&gt;
  &lt;/a&gt;
  What type of questions can you expect?
&lt;/h2&gt;

&lt;p&gt;The interviewer in conversational rounds can be anyone from a manager to a colleague to a skip level director. However, their goal is often the same. How do you collaborate? How do you communicate? What level of experience do you have handling challenges that are both technical and people-focused?&lt;/p&gt;

&lt;p&gt;Examples of the types of questions they might ask are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Tell me about a time where you had to say no to a request?&lt;/li&gt;
&lt;li&gt;Have you ever had to give feedback to a more senior engineer? Can you tell me about that?&lt;/li&gt;
&lt;li&gt;What mistakes have you made in implementing a system? What would you do differently next time?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are hundreds of these types of questions, but you get the idea.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-does-a-good-answer-look-like"&gt;
  &lt;/a&gt;
  What does a good answer look like?
&lt;/h2&gt;

&lt;p&gt;Sometimes these answers explicitly ask for a story, e.g. "tell me about a time". Sometimes it's less overt and they say "how would you handle". In either case, having a real life example you can point to helps ground your answer and show the experience you have.&lt;/p&gt;

&lt;p&gt;Stories should have a beginning, a middle and an end. They should show a positive outcome or an outcome where you can point to the mistakes that were made and what you'd do differently. They also need to be clear, concise and effective. Most importantly, the story needs to clearly connect to the question being asked.&lt;/p&gt;

&lt;p&gt;This sounds like a lot to ask on the spot! You have to think about the question, come up with an anecdote, package it well, and relay it back to the interviewer. All in 5 or so minutes, maybe less. Yikes!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how"&gt;
  &lt;/a&gt;
  How?!
&lt;/h2&gt;

&lt;p&gt;This is where my original advice comes into play. You don't need to think of every question you might be asked. But you should think of some stories ahead of time.&lt;/p&gt;

&lt;p&gt;Have 3-5 stories in your back pocket going into an interview. They should highlight different aspects of your collaboration and communication style so that they can fit the questions being asked.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A story where you did everything right&lt;/li&gt;
&lt;li&gt;A story where you did something wrong and learned from it&lt;/li&gt;
&lt;li&gt;A story involving a peer&lt;/li&gt;
&lt;li&gt;A story involving management&lt;/li&gt;
&lt;li&gt;A story involving another team, company, or external player&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This list isn't exhaustive, but it will help you start thinking about some good anecdotes. Once you've zeroed in on your stories you can start to practice talking about them.&lt;/p&gt;

&lt;p&gt;When prepping a story consider an interview enviroment. You want to:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Get to the point quickly - remove any extraneous or overly detailed pieces of information&lt;/li&gt;
&lt;li&gt;Be clear - beginning, middle and end, make sure that your point comes across&lt;/li&gt;
&lt;li&gt;Connect to the question - this takes some practice, but try and mention the keywords of the question as you're concluding the story and drive home how it connects&lt;/li&gt;
&lt;li&gt;Show off - this doesn't mean you should brag, but try and show yourself in a positive light, even when the story involves a misadventure&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Thinking through all of this ahead of time will give you confidence going into these types of interviews. You won't be stuck trying to think of a good anecdote in live time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#important-caveats"&gt;
  &lt;/a&gt;
  Important caveats
&lt;/h2&gt;

&lt;p&gt;There are a couple mistakes to avoid.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;If they ask for a time you weren't successful, don't use a story where you were. Always have a story for when you messed up. Be able to analyze what you could have done differently, but don't avoid the point of the question.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You don't need to be an engineer to answer these questions well. If you are a career changer you can tell a story involving retail managers, your fellow line cook, the military. Whatever it is, this is a great opportunity to show how your current experience relates to the role and why you have more to offer than someone straight out of school.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#interviews-are-about-you"&gt;
  &lt;/a&gt;
  Interviews are about you
&lt;/h2&gt;

&lt;p&gt;For all the flaws with technical interviews, conversational interviews are different. You don't need to be the most outgoing person in the room or have studied a textbook worth of potential questions. A few focused areas of prep will help you show off your skills and experience.&lt;/p&gt;

</description>
      <category>career</category>
      <category>interview</category>
      <category>beginners</category>
      <category>productivity</category>
    </item>
  </channel>
</rss>
