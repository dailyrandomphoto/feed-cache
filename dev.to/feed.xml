<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Kraken CI, New Kid on the CI Block</title>
      <author>Michal Nowikowski</author>
      <pubDate>Fri, 30 Apr 2021 08:41:39 +0000</pubDate>
      <link>https://dev.to/godfryd/kraken-ci-new-kid-on-the-ci-block-4imo</link>
      <guid>https://dev.to/godfryd/kraken-ci-new-kid-on-the-ci-block-4imo</guid>
      <description>&lt;p&gt;&lt;a href="https://kraken.ci"&gt;Kraken CI&lt;/a&gt; is a new Continuous Integration tool. It is a modern, open-source, on-premise CI/CD system that is highly scalable and focused on testing. It is licensed under Apache 2.0 license. Its source code is available on &lt;a href="https://github.com/kraken-ci/kraken"&gt;Kraken CI GitHub page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The main features of the system are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;flexible workflow planning using Starlark/Python&lt;/li&gt;
&lt;li&gt;distributed building and testing&lt;/li&gt;
&lt;li&gt;various executors: bare metal, Docker, LXD&lt;/li&gt;
&lt;li&gt;highly scalable to thousands of executors&lt;/li&gt;
&lt;li&gt;sophisticated test results analysis&lt;/li&gt;
&lt;li&gt;email and Slack notifications&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#1-download-kraken-files-for-docker-compose"&gt;
  &lt;/a&gt;
  1. Download Kraken Files for Docker Compose
&lt;/h3&gt;

&lt;p&gt;Download configuration files for Docker Compose from &lt;a href="https://github.com/Kraken-CI/kraken/releases"&gt;Kraken GitHub releases page&lt;/a&gt;.&lt;br&gt;
They are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;kraken-docker-compose-X.Y.yaml&lt;/strong&gt; - a services configuration file for Docker Compose&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;kraken-X.Y.env&lt;/strong&gt; - an example configuration for Kraken services that is used by Docker Compose file&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#2-start-kraken-services"&gt;
  &lt;/a&gt;
  2. Start Kraken Services
&lt;/h3&gt;

&lt;p&gt;In a terminal, in the folder where downloaded files are located, run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="go"&gt;docker-compose --env-file kraken-X.Y.env -f kraken-docker-compose-X.Y.yaml up
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now you should see lots of logs. They will not stop. First, Docker&lt;br&gt;
images are downloaded, and then services are started.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8H5I8NkC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/034ed3wyxqwgv6jt2fn5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8H5I8NkC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/034ed3wyxqwgv6jt2fn5.png" alt="Logs after starting docker-compose"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Try to get to the web page on &lt;a href="http://localhost:8080"&gt;http://localhost:8080&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-log-in"&gt;
  &lt;/a&gt;
  3. Log In
&lt;/h3&gt;

&lt;p&gt;On the main page, log in as admin using &lt;code&gt;admin/admin&lt;/code&gt; credentials.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BSyPy-fq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4x26abuhrx5jl5cuz0dx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BSyPy-fq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4x26abuhrx5jl5cuz0dx.png" alt="Login page"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After logging in, the dashboard page will appear. It shows tiles with&lt;br&gt;
projects and their branches.  There is already a prepared project&lt;br&gt;
called &lt;code&gt;Demo&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;But first, a built-in agent that will be executing jobs needs to be&lt;br&gt;
authorized.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-authorize-agent"&gt;
  &lt;/a&gt;
  4. Authorize Agent
&lt;/h3&gt;

&lt;p&gt;Go to the menu Agents -&amp;gt; Discovered. The Discovered Agents page shows&lt;br&gt;
agents that try to connect to the Kraken server but were not yet&lt;br&gt;
authorized by an admin.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r3J2jA0b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pzxgxy0cd48ihj78yu7i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r3J2jA0b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pzxgxy0cd48ihj78yu7i.png" alt="Dashboard page and a menu to Discovered Agents"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Select the checkbox and click the &lt;code&gt;Authorized&lt;/code&gt; button.&lt;/p&gt;

&lt;p&gt;Now we can go back to the main page (the dashboard) and explore&lt;br&gt;
&lt;code&gt;Demo&lt;/code&gt; project. Click on the Kraken logo in the top left corner.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-the-first-project-and-its-branch"&gt;
  &lt;/a&gt;
  5. The First Project and its Branch
&lt;/h3&gt;

&lt;p&gt;Click the cog icon on the right side of &lt;code&gt;Project Demo&lt;/code&gt;. It leads to&lt;br&gt;
the project settings page.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---nUSZ5Bq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bo2qhjsf81olwo0cciwq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---nUSZ5Bq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bo2qhjsf81olwo0cciwq.png" alt="Dashboard page and a cog link to project settings page"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On the project page, there is a list of branches. Let's go to the&lt;br&gt;
already prepared &lt;code&gt;Master&lt;/code&gt; branch:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vhJJeHc1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nfhzllbxxh21qhjq26zq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vhJJeHc1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nfhzllbxxh21qhjq26zq.png" alt="Project settings page and a link to branch page"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On the branch page, there is a defined workflow that consists of stages.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ElhQrbEm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/40fly35p0xzvuxo0z5bf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ElhQrbEm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/40fly35p0xzvuxo0z5bf.png" alt="Branch page"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On the screen, on the left, there is visible one stage, &lt;code&gt;Tests&lt;/code&gt;. The&lt;br&gt;
right side presents details of this stage. The black box shows the&lt;br&gt;
critical part of the stage: it is a workflow schema that is written in&lt;br&gt;
Starlark/Python.&lt;/p&gt;

&lt;p&gt;Currently, the stage's workflow pulls a sample project from&lt;br&gt;
&lt;a href="https://github.com/Kraken-CI/sample-project-python.git"&gt;https://github.com/Kraken-CI/sample-project-python.git&lt;/a&gt; and then run&lt;br&gt;
&lt;code&gt;pytest&lt;/code&gt; tests.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-trigger-the-first-flow"&gt;
  &lt;/a&gt;
  6. Trigger the First Flow
&lt;/h3&gt;

&lt;p&gt;Click the &lt;code&gt;Run CI Flow&lt;/code&gt; button to trigger the first flow of the branch&lt;br&gt;
workflow, and then confirm it by clicking the &lt;code&gt;Submit&lt;/code&gt; button.&lt;/p&gt;

&lt;p&gt;The next page shows triggered flow details.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ysuJzU8x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rpozn9pwqsai44usvimz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ysuJzU8x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rpozn9pwqsai44usvimz.png" alt="Flow page and a link to Stage Run page"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On the left side, there is a list of runs of stages (currently there is&lt;br&gt;
only one run: &lt;code&gt;Tests&lt;/code&gt;), and on the right, there are details of this&lt;br&gt;
stage run. All is green, so it means that all completed successfully.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#7-results-of-the-run"&gt;
  &lt;/a&gt;
  7. Results of The Run
&lt;/h3&gt;

&lt;p&gt;Click the &lt;code&gt;Tests&lt;/code&gt; run link to get to results of the run.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7axb0heY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2rc61q2vvy59imzecnhl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7axb0heY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2rc61q2vvy59imzecnhl.png" alt="Run page and Jobs tab"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The first tab, Jobs, on the run results page, shows a list of executed&lt;br&gt;
jobs. Our job was pretty quick, so we see the final results. If a&lt;br&gt;
job takes more time, then here will be presented its live status and&lt;br&gt;
logs.&lt;/p&gt;

&lt;p&gt;The next tab, Test Results, presents a table with test cases and their&lt;br&gt;
status (passed, failed, etc.).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y4VmcEJT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rymreichu4sajgpv5irk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y4VmcEJT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rymreichu4sajgpv5irk.png" alt="Run page and Test Results tab"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We may conclude the quick start guide here. We encourage you to try&lt;br&gt;
play with the workflow schema and check what can be accomplished more.&lt;/p&gt;

</description>
      <category>ci</category>
      <category>cd</category>
      <category>buildautomation</category>
    </item>
    <item>
      <title>Make A Modern Registration Form Using HTML And CSS</title>
      <author>Innocent Coder</author>
      <pubDate>Fri, 30 Apr 2021 08:12:38 +0000</pubDate>
      <link>https://dev.to/innocentcoder/make-a-modern-registration-form-using-html-and-css-1ag4</link>
      <guid>https://dev.to/innocentcoder/make-a-modern-registration-form-using-html-and-css-1ag4</guid>
      <description>&lt;p&gt;Designing an HTML sign-up form for a website or blog can be hard. Here we have listed down the most useful and unique CSS3 sign-up and registration form templates that are easy to download and use.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/_EnfdlGhg_s"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;A well-designed registration form is vital for any website to capture new users with ease. Whether it is an eCommerce-related project, social network, blog, portal, or anything, these below templates can be used regardless of the type of your website.&lt;/p&gt;

&lt;p&gt;Download Source Code:-  &lt;a href="https://www.websitemakers.xyz/2021/04/make-modern-registration-form-using.html"&gt;https://www.websitemakers.xyz/2021/04/make-modern-registration-form-using.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;HTML&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;section class="row"&amp;gt;
        &amp;lt;div class="column"&amp;gt;
            &amp;lt;div  class="left-container"&amp;gt;
                &amp;lt;h3&amp;gt;Simple way to sharing bill with friends&amp;lt;/h3&amp;gt;
                &amp;lt;p&amp;gt;
                    Lorem ipsum dolor sit amet consectetur adipisicing 
                    elit. Quo in sapiente adipisc.
                &amp;lt;/p&amp;gt;
                &amp;lt;div class="registration-container"&amp;gt;
                    &amp;lt;div class="register-content"&amp;gt;
                        &amp;lt;div class="input-content"&amp;gt;
                            &amp;lt;label for="register"&amp;gt;
                                Register with email address
                            &amp;lt;/label&amp;gt;
                            &amp;lt;input type="email" name="register" /&amp;gt; 
                        &amp;lt;/div&amp;gt;
                        &amp;lt;button&amp;gt;Register Now&amp;lt;/button&amp;gt;
                    &amp;lt;/div&amp;gt;
                    &amp;lt;img src="./images/dots-10.png" alt=""&amp;gt;
                &amp;lt;/div&amp;gt;  
            &amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
        &amp;lt;div class="column"&amp;gt;
            &amp;lt;div  class="right-container"&amp;gt;
               &amp;lt;img class="image1" src="./images/model1.png" alt=""&amp;gt;
               &amp;lt;span class="green-dot"&amp;gt;&amp;lt;/span&amp;gt;
               &amp;lt;img class="image2" src="./images/dots-10 white.png" alt=""&amp;gt;
               &amp;lt;img class="image3" src="./images/model2.png" alt=""&amp;gt;
               &amp;lt;span class="blue-dot"&amp;gt;&amp;lt;/span&amp;gt;
               &amp;lt;img class="image4" src="./images/model3.png" alt=""&amp;gt;
               &amp;lt;span class="purple-dot"&amp;gt;&amp;lt;/span&amp;gt;
               &amp;lt;span class="pink-dot"&amp;gt;&amp;lt;/span&amp;gt;
               &amp;lt;span class="neon-dot"&amp;gt;&amp;lt;/span&amp;gt;
               &amp;lt;span class="dark-blue-dot"&amp;gt;&amp;lt;/span&amp;gt;
               &amp;lt;img class="image5" src="./images/dots-10 white-4.png" alt=""&amp;gt;
               &amp;lt;img class="wave" src="./images/wave.png" alt=""&amp;gt;
               &amp;lt;img class="image6" src="./images/model4.png" alt=""&amp;gt;
               &amp;lt;span class="yellow-dot"&amp;gt;&amp;lt;/span&amp;gt;
               &amp;lt;span class="dark-purple-dot"&amp;gt;&amp;lt;/span&amp;gt;
               &amp;lt;img class="wave1" src="./images/wave.png" alt=""&amp;gt;
            &amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
    &amp;lt;/section&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;CSS&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@200;300;400;500;600&amp;amp;display=swap');
*{
    margin: 0;
    padding: 0;
    font-family: 'Poppins', sans-serif;
}
body{
    background: #DFE3EF;
}
.column {
    float: left;
    width: 50%;
    height: 100vh;
}
.row{
    overflow: hidden;
}
.row:after {
    content: "";
    display: table;
    clear: both;
}
.left-container{
    background-color: #fff;
    display: flex;
    justify-content: center;
    flex-direction: column;
    padding-left: 230px;
    position: relative;
    height: 100vh; 
}
.left-container h3{
    font-size: 45px;
    width: 70%;
    line-height: 60px;
    color: #0e1318;
    margin-top: -10px;
}
.left-container p{
    width: 58%;
    font-size: 13px;
    font-weight: 500;
    color: #727272;
    margin-top: 19px;
}
.left-container .register-content{
    width: 450px;
    box-shadow: 2px 2px 15px rgba(0,0,0,.2);
    padding: 15px 30px 20px;
    display: flex;
    align-items: center;
    margin-top: 40px;
    position: absolute;
    left: 5%;
    background-color: #fff;
    z-index: 10;
} 
.left-container .register-content .input-content{
    display: flex;
    flex-direction: column;
    width: 70%;
}
.input-content label{
    font-size: 13px;
    color: #727272;
    margin-bottom: 11px;
}
.input-content input{
    border: none;
    border-bottom: 1px solid #a7a7a7;
    padding-bottom: 2px;
}
.input-content input:focus{
    outline: none;
}
.registration-container{
    position: relative;
}
.register-content button{
    width: 140px;
    height: 45px;
    margin-top: 9px;
    margin-left: 10px;
    background-color: #FF7240;
    outline: none;
    border: none;
    color: #fff;
    font-size: 12px;
    cursor: pointer;
}
.registration-container img{
    width: 60px;
    margin-top: 100px;
    margin-left: -5px;
}
.right-container{
    background-color: #0E243C;
    height: 100vh; 
    position: relative;
    z-index: 1;
}
.right-container .image1{
    width: 140px;
    position: absolute;
    left: -10%;
    top: 6%;
}
.right-container .image2{
    width: 60px;
    position: absolute;
    left: 2%;
    top: 40%;
}
.right-container .green-dot{
    width: 70px;
    height: 70px;
    background-color: #19e49d;
    position: absolute;
    left: -5%;
    top: 35%;
    border-radius: 50%;
}
.right-container .image3{
    width: 100px;
    position: absolute;
    left: 15%;
    bottom: 30%;
    transform: rotate(-10deg);
}
.right-container .blue-dot{
    width: 10px;
    height: 10px;
    background-color: #3c69f0;
    position: absolute;
    left: 20%;
    bottom: 25%;
    border-radius: 50%;
}
.right-container .image4{
    width: 190px;
    position: absolute;
    left: 35%;
    top: 20%;
}
.right-container .purple-dot{
    width: 10px;
    height: 10px;
    background-color: #7c66c4;
    position: absolute;
    left: 22%;
    top: 20%;
    border-radius: 50%;
}
.right-container .pink-dot{
    width: 30px;
    height: 30px;
    background-color: #f35636;
    position: absolute;
    left: 30%;
    top: -2%;
    border-radius: 50%;
}
.right-container .neon-dot{
    width: 10px;
    height: 10px;
    background-color: #19e49d;
    position: absolute;
    right: 25%;
    top: 18%;
    border-radius: 50%;
}
.right-container .dark-blue-dot{
    width: 60px;
    height: 60px;
    background-color: #346BEF;
    position: absolute;
    right: -1%;
    top: 0%;
    transform: rotate(35deg);
}
.right-container .image5{
    width: 50px;
    position: absolute;
    right: 5%;
    top: 5%;
}
.right-container .wave{
    width: 70px;
    position: absolute;
    right: 25%;
    top: 40%;
}
.right-container .wave1{
    width: 70px;
    position: absolute;
    left: 35%;
    bottom: 15%;
}
.right-container .image6{
    width: 150px;
    position: absolute;
    right: 17%;
    bottom: 10%;
}
.right-container .yellow-dot{
    width: 10px;
    height: 10px;
    background-color: #f5c34e;
    position: absolute;
    right: 40%;
    top: 55%;
    border-radius: 50%;
}
.right-container .dark-purple-dot{
    width: 40px;
    height: 40px;
    background-color: #8949E3;
    position: absolute;
    right: -3%;
    top: 50%;
    border-radius: 50%;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Note:-&lt;/strong&gt; visit my youtube channel for frontend tutorials&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;subscribe to my youtube channel :-&lt;/strong&gt; &lt;a href="https://www.youtube.com/channel/UCR64vQptythbJ1SmI-ub0Rg"&gt;https://www.youtube.com/channel/UCR64vQptythbJ1SmI-ub0Rg&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Resent post :-&lt;/strong&gt; &lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/innocentcoder" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RGJ5NE5F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--ICZsIDfS--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/620705/764eb964-ecd2-4875-90c2-142dfc2f639c.jpg" alt="innocentcoder image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/innocentcoder/free-3d-illustration-libraries-5d6c" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;FREE 3D ILLUSTRATION LIBRARIES &lt;/h2&gt;
      &lt;h3&gt;Innocent Coder ・ Apr 29 ・ 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#illustration&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#freebies&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#discuss&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>html</category>
      <category>css</category>
    </item>
    <item>
      <title>Solution: Powerful Integers</title>
      <author>seanpgallivan</author>
      <pubDate>Fri, 30 Apr 2021 08:05:23 +0000</pubDate>
      <link>https://dev.to/seanpgallivan/solution-powerful-integers-1o2p</link>
      <guid>https://dev.to/seanpgallivan/solution-powerful-integers-1o2p</guid>
      <description>&lt;p&gt;&lt;em&gt;This is part of a series of Leetcode solution explanations (&lt;a href="https://dev.to/seanpgallivan/leetcode-solutions-index-57fl"&gt;index&lt;/a&gt;). If you liked this solution or found it useful,&lt;/em&gt; &lt;strong&gt;&lt;em&gt;please like&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;this post and/or&lt;/em&gt; &lt;strong&gt;&lt;em&gt;upvote&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;&lt;a href="https://leetcode.com/problems/powerful-integers/discuss/1183595"&gt;my solution post on Leetcode's forums&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#leetcode-problem-970-medium-powerful-integers"&gt;
  &lt;/a&gt;
  &lt;a href="https://leetcode.com/problems/powerful-integers/"&gt;Leetcode Problem #970 (&lt;em&gt;Medium&lt;/em&gt;): Powerful Integers&lt;/a&gt;
&lt;/h4&gt;




&lt;h4&gt;
  &lt;a href="#description"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Description:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Given three integers &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;, and &lt;code&gt;bound&lt;/code&gt;, &lt;em&gt;return a list of all the &lt;strong&gt;powerful integers&lt;/strong&gt; that have a value less than or equal to &lt;code&gt;bound&lt;/code&gt;&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;An integer is &lt;strong&gt;powerful&lt;/strong&gt; if it can be represented as &lt;code&gt;xi + yj&lt;/code&gt; for some integers &lt;code&gt;i &amp;gt;= 0&lt;/code&gt; and &lt;code&gt;j &amp;gt;= 0&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;You may return the answer in any order. In your answer, each value should occur &lt;strong&gt;at most once&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#examples"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Examples:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 1:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;x = 2, y = 3, bound = 10&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;[2,3,4,5,7,9,10]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Explanation:&lt;/td&gt;
&lt;td&gt;2 = 20 + 30&lt;br&gt;3 = 21 + 30&lt;br&gt;4 = 20 + 31&lt;br&gt;5 = 21 + 31&lt;br&gt;7 = 22 + 31&lt;br&gt;9 = 23 + 30&lt;br&gt;10 = 20 + 32&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 2:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;x = 3, y = 5, bound = 15&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;[2,4,6,8,10,14]&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#constraints"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Constraints:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;1 &amp;lt;= x, y &amp;lt;= 100&lt;/li&gt;
&lt;li&gt;0 &amp;lt;= bound &amp;lt;= 10^6&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#idea"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Idea:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;This problem is a pretty straightforward one. Since we need to return all powerful integers and not just a count of them, there aren't many shortcuts we can take; we'll have to actually come up with the solution iteratively with nested loops.&lt;/p&gt;

&lt;p&gt;First, we can use a &lt;strong&gt;set&lt;/strong&gt; structure (&lt;strong&gt;ans&lt;/strong&gt;) to prevent duplicate answers. Then we can have our nested loops increment the power of the &lt;strong&gt;x&lt;/strong&gt; and &lt;strong&gt;y&lt;/strong&gt; values while adding the appropriate results to our set.&lt;/p&gt;

&lt;p&gt;One somewhat tricky situation occurs when one or more of the values is a &lt;strong&gt;1&lt;/strong&gt;, as that power will continue to be &lt;strong&gt;1&lt;/strong&gt; forever, regardless of the exponent. To deal with that, we can force each nested loop to &lt;strong&gt;break&lt;/strong&gt; after the first iteration if its original value was a &lt;strong&gt;1&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Once we've iterated over all possible combinations, we can convert &lt;strong&gt;ans&lt;/strong&gt; to an array and &lt;strong&gt;return&lt;/strong&gt; it.&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#implementation"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Implementation:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;There are only minor differences in the code of each language.&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#javascript-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Javascript Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;powerfulIntegers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;bound&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;ans&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Set&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;xi&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;xi&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;bound&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;xi&lt;/span&gt; &lt;span class="o"&gt;*=&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;yj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;xi&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;yj&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="nx"&gt;bound&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;yj&lt;/span&gt; &lt;span class="o"&gt;*=&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;xi&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;yj&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;break&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;break&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#python-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Python Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;powerfulIntegers&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bound&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
        &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;xi&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;xi&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;bound&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;yj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
            &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;xi&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;yj&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;bound&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;xi&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;yj&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;break&lt;/span&gt;
                &lt;span class="n"&gt;yj&lt;/span&gt; &lt;span class="o"&gt;*=&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;break&lt;/span&gt;
            &lt;span class="n"&gt;xi&lt;/span&gt; &lt;span class="o"&gt;*=&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#java-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Java Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;powerfulIntegers&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;bound&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;Set&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;HashSet&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;xi&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;xi&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;bound&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;xi&lt;/span&gt; &lt;span class="o"&gt;*=&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;yj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;xi&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;yj&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;bound&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;yj&lt;/span&gt; &lt;span class="o"&gt;*=&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;xi&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;yj&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;ArrayList&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;(&lt;/span&gt;&lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#c-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;C++ Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;public:&lt;/span&gt;
    &lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;powerfulIntegers&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;bound&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;unordered_set&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;xi&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;xi&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;bound&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;xi&lt;/span&gt; &lt;span class="o"&gt;*=&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;yj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;xi&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;yj&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;bound&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;yj&lt;/span&gt; &lt;span class="o"&gt;*=&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;xi&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;yj&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>algorithms</category>
      <category>javascript</category>
      <category>java</category>
      <category>python</category>
    </item>
    <item>
      <title>TOP 10 MOBILE APP DEVELOPMENT TRENDS TO WATCH OUT FOR IN 2021</title>
      <author>LogicRays Technologies Pvt. Ltd.</author>
      <pubDate>Fri, 30 Apr 2021 08:05:06 +0000</pubDate>
      <link>https://dev.to/logicraystech/top-10-mobile-app-development-trends-to-watch-out-for-in-2021-3382</link>
      <guid>https://dev.to/logicraystech/top-10-mobile-app-development-trends-to-watch-out-for-in-2021-3382</guid>
      <description>&lt;p&gt;The mobile app development trends are evolving at a rapid speed every single day, there is no turning back in this industry. Every day there is a new trend in technology. Everything that took place in technology is beyond even the wildest delusions. In some years, smartphones have taken a very important position in our lives, and that’s the reason why mobile app development businesses are touching the heights of success.&lt;/p&gt;

&lt;p&gt;You will be astonished to know that the Mobile App Market Revenue will Reach $693 Billion. Ain’t that amazing?&lt;/p&gt;

&lt;p&gt;Since the Pandemic of Covid-19 took place in 2019, every business or organization is striving to reach their audience on their phone.&lt;/p&gt;

&lt;p&gt;To better support their customers, mobile app resellers must keep up with new trends. Content creators and developers who want to take their products to the next stage with mobile production are in the same boat.&lt;/p&gt;

&lt;p&gt;With the radical growth in competition, you need to make your mobile app development game stronger. To make it strong, you need to keep yourself updated with the top mobile app development trends in 2021.&lt;/p&gt;

&lt;p&gt;Let’s dive in!&lt;/p&gt;

&lt;p&gt;TABLE OF CONTENT&lt;br&gt;
Internet of Things (IoT)&lt;br&gt;
Artificial Intelligence &amp;amp; Machine Learning&lt;br&gt;
5G Mobile Network&lt;br&gt;
Virtual Reality &amp;amp; Augmented Reality&lt;br&gt;
Creating App for Foldable&lt;br&gt;
Smart Watch / Wearable App Integration&lt;br&gt;
Mobile Wallet App&lt;br&gt;
Enterprise Mobile App&lt;br&gt;
Blockchain Technology&lt;br&gt;
Geolocation Based App&lt;br&gt;
Wrapping up!&lt;br&gt;
INTERNET OF THINGS (IOT) APP INTEGRATION&lt;br&gt;
People’s daily life is now dependant on the Internet. If we believe the internet cannot regulate our bedroom, house, kitchen, we should be aware of the Internet of Things (IoT). The Internet of Things (IoT) is booming, and people are quite enthusiastic about it. &lt;/p&gt;

&lt;p&gt;It’s essential in a variety of fields, smart home protection systems, including wireless appliances, wearable health monitors, auto farming equipment, smart factory equipment, wireless inventory trackers, and biometric Cyber Security scanners, among others.&lt;/p&gt;

&lt;p&gt;People are growing faster to using technology to bring improvement in their life. Even brands like Google and Amazon have fully utilized this technology to strengthen the competition by introducing “Echo” and “Google Home Voice Controller” respectively.&lt;/p&gt;

&lt;p&gt;Internet of Things&lt;br&gt;
FUTURE TRENDS OF IOT:&lt;br&gt;
Smart Cities and Smart Home&lt;br&gt;
AI-powered IoT Devices&lt;br&gt;
AI-powered Filters for Instagram and Snapchat&lt;br&gt;
IoT in Healthcare&lt;br&gt;
ARTIFICIAL INTELLIGENCE &amp;amp; MACHINE LEARNING&lt;br&gt;
Artificial Intelligence (AI) and Machine Learning (ML) have already begun to appear in mobile apps and laptops. Voice Search, Chatbots, Face Unlock, and other similar examples may have caught our attention. Face App, Instagram Filter, Prisma, and other AI-powered photo filtering apps have brought AI to new heights.&lt;/p&gt;

&lt;p&gt;Modern search engines, virtual assistant solutions, marketplaces, business automation, and user preference identification are all now widely come in use of mobile economy. Indeed, the integration of AI and ML solutions into mobile is a factor that has aided and will continue to aid the mobile segment’s performance.&lt;/p&gt;

&lt;p&gt;Artificial intelligence can make apps smarter and, as a result, boost overall efficiency.&lt;br&gt;
From the backend creation phase to the frontend user interface, AI will shift the way apps are developed in 2021,&lt;/p&gt;

&lt;p&gt;Camila Queiroz Big Smile GIF - CamilaQueiroz Camila BigSmile GIFs&lt;br&gt;
Source: &lt;a href="https://tenor.com/view/camila-queiroz-camila-big-smile-instagram-filter-face-warp-gif-17789806"&gt;https://tenor.com/view/camila-queiroz-camila-big-smile-instagram-filter-face-warp-gif-17789806&lt;/a&gt;&lt;br&gt;
FUTURE TRENDS OF AI OF ML:&lt;br&gt;
Image recognition, Tagging, and Classification&lt;br&gt;
Predictive Maintenance&lt;br&gt;
Object Identification, Detection, Tracking, and Classification&lt;br&gt;
Content Distribution on Social Media&lt;br&gt;
Automated geophysical detection&lt;br&gt;
Commentary Prediction&lt;br&gt;
5G MOBILE INTERNET NETWORK&lt;br&gt;
We all know what is the current situation where 4G is leading over the world. Now just imagine, what will happen when everyone gets an introduction to 5G technology? By 2025, the number of 5G connections worldwide will reach 1.1 billion. The prediction says that 5G will alter the way to create an app.&lt;/p&gt;

&lt;p&gt;The speed and reliability of the process will greatly improve. In reality, 5G is project to reduce latency by a factor of ten while still increasing network reliability and traffic capacity. Depending on the mobile network provider, 5G can be up to 100 times faster than 4G.&lt;/p&gt;

&lt;p&gt;The adoption of 5G would improve the accessibility of mobile applications in the long run. This will allow app developers to add new features without compromising the app’s efficiency.&lt;/p&gt;

&lt;p&gt;Likeabosch 5g GIF - Likeabosch Bosch 5g GIFs&lt;br&gt;
Source: &lt;a href="https://tenor.com/view/likeabosch-bosch-5g-warp-gif-19353463"&gt;https://tenor.com/view/likeabosch-bosch-5g-warp-gif-19353463&lt;/a&gt;&lt;br&gt;
FUTURE TRENDS OF 5G NETWORK:&lt;br&gt;
Cloud Computing&lt;br&gt;
Reduced inequality&lt;br&gt;
More Jobs&lt;br&gt;
Fully-Automatic/ Driverless Vehicles&lt;br&gt;
VIRTUAL REALITY (VR) &amp;amp; AUGMENTED REALITY (AR)&lt;br&gt;
There was a time where everyone Drooled over ‘Pokemon Go’. Although it was a temporary trend that came like a wave in everyone’s life and went. But the thing is, VR and AR are here to stay.&lt;/p&gt;

&lt;p&gt;Theres APokemon Right Behind You Pokemon Game GIF - TheresAPokemonRightBehindYou Pokemon PokemonGame GIFs&lt;br&gt;
Source: &lt;a href="https://tenor.com/view/theres-apokemon-right-behind-you-pokemon-pokemon-game-game-pokemon-go-gif-15179719"&gt;https://tenor.com/view/theres-apokemon-right-behind-you-pokemon-pokemon-game-game-pokemon-go-gif-15179719&lt;/a&gt;&lt;br&gt;
AR and VR technology are the most common mobile app development trends, that come in use to prepare and improve high-quality gaming apps; these are actively chosen for a variety of other applications.&lt;/p&gt;

&lt;p&gt;AR is already coming in use for many technological behemoths such as Apple and Google to develop a slew of new applications. Google, for example, is about to launch a new AR feature for Google Maps that will provide people with real-time directions from their camera phones.&lt;/p&gt;

&lt;p&gt;Tech experts say that in 2021, AR integration in the mobile app development trend will become a necessity. It will shape the mobile industry in a way that the mobile industry will offer a seamless experience for every user.&lt;/p&gt;

&lt;p&gt;Many AR-dependant app ideas will develop into fully functional mobile applications. This would support industries such as tourism, healthcare, interior designing, education, real estate, e-commerce, and so on.&lt;/p&gt;

&lt;p&gt;For content developers, AR adaptation is a top app creation trend. You can use this technology to be innovative filters using AR for Instagram and Snapchat.&lt;/p&gt;

&lt;p&gt;FUTURE OF AR &amp;amp; VR:&lt;br&gt;
Virtual Training Simulation&lt;br&gt;
Instagram and Snapchat Filters&lt;br&gt;
AR-based Destination Navigator&lt;br&gt;
AR &amp;amp; VR Based Visual Learning&lt;br&gt;
Live Music Concerts and Festivals&lt;br&gt;
CREATING APP FOR FOLDABLE&lt;br&gt;
With the release of Samsung’s foldable OLED display, operating systems are preparing to use this technology to transform mobile experiences. Google officially declared foldable support on Android phones in 2018 by using its ‘screen continuity’ API.&lt;/p&gt;

&lt;p&gt;According to Samsung, hundreds of top Android apps including Amazon Prime Video, Facebook, Twitter, Spotify, VSCO, and Microsoft Office, have been optimized for the Galaxy Fold.&lt;/p&gt;

&lt;p&gt;‘Foldable Phone’ became a buzzword in the year 2020. Since this is trending, you should start scheduling your mobile app development strategy so that it runs smoothly on foldable devices — a daunting mobile app development trend in 2021.&lt;/p&gt;

&lt;p&gt;Video streaming and gaming applications can gain the most from foldable devices by simply increasing the size of their screens – or by using the extra spoace to provide additional details and controls.&lt;/p&gt;

&lt;p&gt;Creating App for foldable&lt;br&gt;
SMART WATCH / WEARABLE APP INTEGRATION&lt;br&gt;
Wearables have already created quite a hype among consumers. They are commercially available in the form of smartwatches, display devices (Google Glass), smart jewelry, body sensors, and so on. We should expect wearable applications to become an integral part of our daily lives as technology advances.&lt;/p&gt;

&lt;p&gt;Apple recently revealed its WatchOS update at the WWDC meeting. Apple Watch applications will no longer require to use a compatible iOS app and will have their own App Store. This clearly indicates the emergence of wearable technology, which will be one of the most significant mobile app development developments in 2021.&lt;/p&gt;

&lt;p&gt;With applications that run independently of the iPhone, Apple has elevated the Apple Watch to the status of a standalone unit that consumers can use for their digital needs.&lt;/p&gt;

&lt;p&gt;In other words, Application developers and companies should prepare applications that offer an outstanding digital experience to Apple Watch customers, giving them a distinct advantage over those that do not.&lt;/p&gt;

&lt;p&gt;These wearables can track and evaluate body movements, heartbeats, steps, body temperature, and other parameters. In 2021, we will see increased demand for wearable app growth.&lt;/p&gt;

&lt;p&gt;Apple Applewatch GIF - Apple Applewatch SmartWatch GIFs&lt;br&gt;
Source: &lt;a href="https://tenor.com/view/apple-applewatch-smart-watch-gif-12509437"&gt;https://tenor.com/view/apple-applewatch-smart-watch-gif-12509437&lt;/a&gt;&lt;br&gt;
FUTURE TRENDS OF WEARABLES:&lt;br&gt;
Virtual Assistant in Lenses&lt;br&gt;
Virtual Keyboards&lt;br&gt;
MOBILE WALLET APP&lt;br&gt;
Given the pervasiveness of smartphones and consumers’ desire to move to smartwatches. Mobile wallets such as Apple Pay and Google Wallet would undoubtedly push purchases through 2021. As a result, demand for mobile wallet apps (a key mobile app growth trend in 2021) will increase over the next year.&lt;/p&gt;

&lt;p&gt;Mobile wallets are coming in use by major brands such as Samsung, Apple, and Google. These major brands provide their users with a safe and easy forum for money transfers and bill payments.&lt;/p&gt;

&lt;p&gt;By integrating popular payment gateways with mobile wallets, the payment process becomes rapid and smoother.&lt;/p&gt;

&lt;p&gt;Mobile wallets like Google Pay, PhonePe, Amazon Pay, Paytm, and others have grown in popularity. Since the market has not yet reached saturation, there is still room for growth in the future.&lt;/p&gt;

&lt;p&gt;Mobile Wallet App&lt;br&gt;
Mobile Wallets&lt;br&gt;
FUTURE TRENDS OF MOBILE WALLETS:&lt;br&gt;
Audio Based Wallet&lt;br&gt;
Near-field communication-based payments&lt;br&gt;
Radio-frequency identification payments&lt;br&gt;
ENTERPRISE MOBILE APP&lt;br&gt;
Enterprise Mobile apps created by specific organizations for their employees to carry out tasks and functions necessary for the organization’s operation. Creating enterprise mobile applications is becoming a major trend all over the world. According to some statistics, businesses make more money when their workers have access to corporate mobile applications.&lt;/p&gt;

&lt;p&gt;Enterprise mobile applications boost internal connectivity within organizations, as well as employee satisfaction and productivity. In 2021, we will see a large number of businesses requesting the creation of an enterprise mobile app for their business.&lt;/p&gt;

&lt;p&gt;BLOCKCHAIN TECHNOLOGY&lt;br&gt;
Not everybody is aware of blockchain technology. This technology stores information in such a way that changing or hacking the device is extremely difficult or impossible. We’ve seen it in the form of cryptocurrency and smart contracts.&lt;/p&gt;

&lt;p&gt;If Bitcoin introduced us to cryptocurrency, Ethereum demonstrated the true potential of Blockchain. Another example of Blockchain is decentralized applications. Dapps do not need a middleman to manage their data. It has the ability to link users and providers directly. As a result, no one else can access the data.&lt;/p&gt;

&lt;p&gt;Dapps are now available in a wide range of sectors, including healthcare, banking, and trading. Dapps will explore other markets in 2021, indicating that the blockchain technology revolution is just around the corner.&lt;/p&gt;

&lt;p&gt;Marshall Hayner Proton Chain GIF - MarshallHayner ProtonChain MetalPay GIFs&lt;br&gt;
Source: &lt;a href="https://tenor.com/view/marshall-hayner-proton-chain-metal-pay-first-blockchain-fbb-gif-20560873"&gt;https://tenor.com/view/marshall-hayner-proton-chain-metal-pay-first-blockchain-fbb-gif-20560873&lt;/a&gt;&lt;br&gt;
FUTURE TRENDS OF BLOCKCHAIN TECHNOLOGY:&lt;br&gt;
Robotics&lt;br&gt;
In Anti-Piracy&lt;br&gt;
Secure Public Elections&lt;br&gt;
Blockchain as a Service(BaaS)&lt;br&gt;
GEOLOCATION BASED APP&lt;br&gt;
Geolocation mobile app creation is already a common trend that will only grow in the coming years. It enables mobile applications to provide consumers with a highly customized experience.&lt;/p&gt;

&lt;p&gt;Thus, apps that capture user geolocation can include location-based services, better marketing strategies, and so on. It also aids in the analysis of usage trends and gaining insight into user behavior and place.&lt;/p&gt;

&lt;p&gt;Geo-location Based App&lt;br&gt;
FUTURE TRENDS IF GEOLOCATION BASED APP:&lt;br&gt;
AR in astronomy or geography&lt;br&gt;
Better Suggestions&lt;br&gt;
Personalized Recommendations&lt;br&gt;
WRAPPING UP!&lt;br&gt;
There are already a plethora of smartphone applications available on Google Play, Apple App Store, Windows Store, and Amazon App Store. With all of these mobile app development trends, the mobile app market will continue to grow rapidly.&lt;/p&gt;

&lt;p&gt;Thus, in order to stand out in the increasingly competitive mobile app development market, business leaders must keep up to date on the latest developments and technologies. The evolution of mobile apps will be driven by evolving mobile app development technologies, rising backend architectures, and microservices, as well as new hardware capabilities. Also , when you develop app for any purpose, make sure that your Mobile app is secure and safe. It is necessary!&lt;/p&gt;

&lt;p&gt;It doesn’t matter which trend you go with or which platform you choose to develop your application on (iOS Mobile App or Android Mobile App). All the Mobile app trend mentioned above will give a boom to your application. Just make sure that whatever you create is best, unique, and giving a solution to any problem.&lt;/p&gt;

</description>
      <category>mobile</category>
      <category>android</category>
      <category>ios</category>
    </item>
    <item>
      <title>Avoid defective nouns when naming things</title>
      <author>Malte Riechmann</author>
      <pubDate>Fri, 30 Apr 2021 08:01:22 +0000</pubDate>
      <link>https://dev.to/visuellverstehen/avoid-defective-nouns-when-naming-things-47jm</link>
      <guid>https://dev.to/visuellverstehen/avoid-defective-nouns-when-naming-things-47jm</guid>
      <description>&lt;h2&gt;
  &lt;a href="#naming-things-is-hard"&gt;
  &lt;/a&gt;
  Naming things is hard
&lt;/h2&gt;

&lt;p&gt;You always have to keep in mind, software developers spend more time reading source code than actually writing it. A lot of other people will someday read the source code you are writing today. Better make sure to write it clear, consistent, and well structured. I can recommend reading &lt;a href="https://www.oreilly.com/library/view/clean-code-a/9780136083238/"&gt;Clean Code&lt;/a&gt; by &lt;a href="https://twitter.com/unclebobmartin"&gt;Robert C. Martin&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Naming things is one part of writing clean code and often it is quite hard to find the right names. In the following, I just want to show you one easy step to improve your source code.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#avoid-defective-nouns"&gt;
  &lt;/a&gt;
  Avoid defective nouns
&lt;/h2&gt;

&lt;p&gt;Defective nouns are nouns without singulars, nouns without plurals, or nouns that have the same singular and plural (e. g. information, music, or news). See &lt;a href="https://en.wikipedia.org/wiki/English_plurals#Defective_nouns"&gt;Wikipedia&lt;/a&gt; for more details.&lt;/p&gt;

&lt;p&gt;Usually, in software development, you will need a noun that differs in singular and plural. So you are well-advised not to use defective nouns.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#example"&gt;
  &lt;/a&gt;
  Example
&lt;/h2&gt;

&lt;p&gt;Think about the list of posts on &lt;a href="https://dev.to"&gt;DEV&lt;/a&gt;. How would you name those? There are multiple options, but you should definitely avoid a defective noun.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#bad-newssnews"&gt;
  &lt;/a&gt;
  ❌ Bad: newss/news
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;newss.forEach(function(news) {
    news.doSomething();
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#bad-newslistnews"&gt;
  &lt;/a&gt;
  ❌ Bad: newsList/news
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;newsList.forEach(function(news) {
    news.doSomething();
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#bad-newssinglenews"&gt;
  &lt;/a&gt;
  ❌ Bad: news/singleNews
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;news.forEach(function(singleNews) {
    currentNews.doSomething();
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#good-postspost"&gt;
  &lt;/a&gt;
  ✅ Good: posts/post
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;posts.forEach(function(post) {
    post.doSomething();
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#bonus-irregular-plural-nouns"&gt;
  &lt;/a&gt;
  Bonus: Irregular plural nouns
&lt;/h2&gt;

&lt;p&gt;I will tell you a little secret. This might be a bit fussy, but I try to avoid irregular plural nouns, too. I do not like medium and media, child and children, or radius and radii. I just like good ol' regular plural nouns like post and posts, user and users, list and lists.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>How many unfinished projects do you have?</title>
      <author>Madza</author>
      <pubDate>Fri, 30 Apr 2021 07:49:41 +0000</pubDate>
      <link>https://dev.to/madza/how-many-unfinished-projects-do-you-have-56fg</link>
      <guid>https://dev.to/madza/how-many-unfinished-projects-do-you-have-56fg</guid>
      <description>&lt;p&gt;Could you estimate how many projects are you normally working on simultaneously? Are you the type of person who works on a "start-to-finish" basis or do you like to switch between the projects in the making?&lt;/p&gt;

&lt;p&gt;For example, I usually keep around like 10 projects. Out of those 2-3 are normally larger scale projects and 5-7 are for learning/testing purposes.&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>productivity</category>
      <category>coding</category>
    </item>
    <item>
      <title>✔||🤢 Commit or Vomit | function currying 🍛</title>
      <author> 🐤🥇 Jasper de Jager</author>
      <pubDate>Fri, 30 Apr 2021 07:48:14 +0000</pubDate>
      <link>https://dev.to/jmdejager/commit-or-vomit-function-currying-4m17</link>
      <guid>https://dev.to/jmdejager/commit-or-vomit-function-currying-4m17</guid>
      <description>&lt;h1&gt;
  &lt;a href="#function-currying"&gt;
  &lt;/a&gt;
  Function currying
&lt;/h1&gt;

&lt;p&gt;Hard to put vomit and curry together in a title, but I had to ask 😁&lt;br&gt;&lt;br&gt;
I see this posted a lot on dev.to, function currying, but I find it not that readable myself TBH. What do you think? &lt;br&gt;
And please tell me why 😊&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;multiply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;multiply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;// 6&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#function-currying-%E2%9C%94"&gt;
  &lt;/a&gt;
  function currying  ✔||🤢?
&lt;/h4&gt;

&lt;p&gt;❤: Commit (I'd commit something like this)&lt;br&gt;
🏷: Vomit (we all know unicorns don't vomit)&lt;br&gt;
🦄: Like your post please continue this series!&lt;/p&gt;

&lt;p&gt;Let's vote! 😊&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@ninjason?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Jason Leung&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/curry?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>javacript</category>
      <category>webdev</category>
      <category>programming</category>
      <category>discuss</category>
    </item>
    <item>
      <title>Improve your unit tests with AssertJ</title>
      <author>Pavel Polívka</author>
      <pubDate>Fri, 30 Apr 2021 07:32:19 +0000</pubDate>
      <link>https://dev.to/pavel_polivka/improve-your-unit-tests-with-assertj-35m2</link>
      <guid>https://dev.to/pavel_polivka/improve-your-unit-tests-with-assertj-35m2</guid>
      <description>&lt;p&gt;You are probably writing unit tests, if not you probably should. Over the years of my career, I did a lot of workshops, speaks, etc about how to write those correctly. One of the points I always make is to have understandable outputs of those tests. Nothing is worst than failing a unit test with a message like&lt;br&gt;
&lt;br&gt;
 &lt;code&gt;Failed. True != False&lt;/code&gt;&lt;br&gt;
&lt;br&gt;
 what are you supposed to do with that? With standard assertions functions provided by all testing frameworks, you can improve this a bit by using correct functions, providing additional messages, etc... It's not perfect and it sometimes is a lot of work. &lt;/p&gt;

&lt;p&gt;Here comes &lt;a href="https://assertj.github.io/doc/"&gt;AssertJ&lt;/a&gt;. It's a simple library designed to improve your assertions. I would consider it essential for my testing needs. It provides a vast variety of assertions, state of the art error messages. Also, it improves code readability, it's super simple to understand what you want to assert. &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h2&gt;

&lt;p&gt;AssertJ is available on Maven central so installation is as simple as adding a test dependency.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight xml"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.assertj&lt;span class="nt"&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;assertj-core&lt;span class="nt"&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;version&amp;gt;&lt;/span&gt;3.19.0&lt;span class="nt"&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;scope&amp;gt;&lt;/span&gt;test&lt;span class="nt"&gt;&amp;lt;/scope&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#usage"&gt;
  &lt;/a&gt;
  Usage
&lt;/h2&gt;

&lt;p&gt;In this article, I will go over few examples of how awesome AssertJ is. These examples will be done in JUnit5 with the following structure.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;DtoComparisonTest&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

 &lt;span class="nd"&gt;@Test&lt;/span&gt;
 &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;testComparison&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
 &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;TestedDto&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"a"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"c"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;TestedNestedDto&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
 &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;TestedDto&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"a"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"b"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;TestedNestedDto&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;

 &lt;span class="nc"&gt;Assertions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;assertThat&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;isEqualTo&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
 &lt;span class="o"&gt;}&lt;/span&gt;

 &lt;span class="nd"&gt;@Data&lt;/span&gt;
 &lt;span class="nd"&gt;@AllArgsConstructor&lt;/span&gt;
 &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;TestedDto&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

 &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;firstString&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
 &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;secondString&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
 &lt;span class="nc"&gt;TestedNestedDto&lt;/span&gt; &lt;span class="n"&gt;nested&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
 &lt;span class="o"&gt;}&lt;/span&gt;

 &lt;span class="nd"&gt;@Data&lt;/span&gt;
 &lt;span class="nd"&gt;@AllArgsConstructor&lt;/span&gt;
 &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;TestedNestedDto&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
 &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;firstInt&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
 &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;secondInt&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
 &lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This example compares the &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; objects and prints the following error messages.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;org.opentest4j.AssertionFailedError: 
Expecting:
 &amp;lt;DtoComparisonTest.TestedDto(firstString=a, secondString=c, nested=DtoComparisonTest.TestedNestedDto(firstInt=1, secondInt=2))&amp;gt;
to be equal to:
 &amp;lt;DtoComparisonTest.TestedDto(firstString=a, secondString=b, nested=DtoComparisonTest.TestedNestedDto(firstInt=1, secondInt=3))&amp;gt;
but was not.
Expected :DtoComparisonTest.TestedDto(firstString=a, secondString=b, nested=DtoComparisonTest.TestedNestedDto(firstInt=1, secondInt=3))
Actual :DtoComparisonTest.TestedDto(firstString=a, secondString=c, nested=DtoComparisonTest.TestedNestedDto(firstInt=1, secondInt=2))
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;How awesome is that? &lt;/p&gt;

&lt;p&gt;It has a lot of built-in assertions for String. Let's see some examples:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt; &lt;span class="nd"&gt;@Test&lt;/span&gt;
 &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;testComparison&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

 &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;TestedDto&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Dragon"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Goblin"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;TestedNestedDto&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;

 &lt;span class="nc"&gt;Assertions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;assertThat&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getFirstString&lt;/span&gt;&lt;span class="o"&gt;())&lt;/span&gt;
 &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;startsWith&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"D"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
 &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;endsWith&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"n"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
 &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;isLowerCase&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
 &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will output&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;java.lang.AssertionError: 
Expecting &amp;lt;"Dragon"&amp;gt; to be a lowercase
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Imagine doing this and having the same output with normal assertions. &lt;/p&gt;

&lt;p&gt;It also has tons of built-ins for collections.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt; &lt;span class="nd"&gt;@Test&lt;/span&gt;
 &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;testComparison&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

 &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;TestedDto&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"a"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"b"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;TestedNestedDto&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
 &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;TestedDto&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"c"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"d"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;TestedNestedDto&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
 &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;collection&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Arrays&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;asList&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

 &lt;span class="nc"&gt;Assertions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;assertThat&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;collection&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
 &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;hasSize&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
 &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;contains&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
 &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;allMatch&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tested&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;tested&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getNested&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;getFirstInt&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
 &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;anyMatch&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tested&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;tested&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getSecondString&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;equals&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"b"&lt;/span&gt;&lt;span class="o"&gt;))&lt;/span&gt;
 &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;containsNull&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
 &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Prints this error message&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;java.lang.AssertionError: 
Expecting:
 &amp;lt;[DtoComparisonTest.TestedDto(firstString=a, secondString=b, nested=DtoComparisonTest.TestedNestedDto(firstInt=1, secondInt=2)),
 DtoComparisonTest.TestedDto(firstString=c, secondString=d, nested=DtoComparisonTest.TestedNestedDto(firstInt=1, secondInt=2))]&amp;gt;
to contain a &amp;lt;null&amp;gt; element
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I am pretty much in love with this library. It's super simple to start with and improves your tests so much. I recommend you to start using it today (also dive into their documentation, there is so much more to AssertJ). &lt;/p&gt;

&lt;p&gt;... &lt;/p&gt;

&lt;p&gt;For more tips like this, you can follow me on &lt;a href="https://twitter.com/pavel_polivka"&gt;Twitter&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>java</category>
      <category>testing</category>
    </item>
    <item>
      <title>How do you deal with unproductive days?</title>
      <author>Madza</author>
      <pubDate>Fri, 30 Apr 2021 07:25:49 +0000</pubDate>
      <link>https://dev.to/madza/what-do-you-do-on-less-productive-days-1j6</link>
      <guid>https://dev.to/madza/what-do-you-do-on-less-productive-days-1j6</guid>
      <description>&lt;p&gt;We all have unproductive days. For content creators, this state is often referred to as 'the writer's block' or 'the wall'.&lt;/p&gt;

&lt;p&gt;How do you fill up these days?&lt;br&gt;
Do you take the day off from content creation or coding (if possible) or do you still have some tasks you like to do?&lt;/p&gt;

&lt;p&gt;For example, I try to relax the mind as much as possible (usually longer activities outside, sports).&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>productivity</category>
      <category>writing</category>
      <category>coding</category>
    </item>
    <item>
      <title>27 Bootstrap Cards</title>
      <author>MD Bootstrap</author>
      <pubDate>Fri, 30 Apr 2021 06:50:55 +0000</pubDate>
      <link>https://dev.to/mdbootstrap/27-bootstrap-cards-3j9d</link>
      <guid>https://dev.to/mdbootstrap/27-bootstrap-cards-3j9d</guid>
      <description>&lt;p&gt;A stunning collection of cards built with the newest Bootstrap 5. Weather cards, cards with charts, animated cards &amp;amp; many more. All of them are responsive and compatible with the newest Bootstrap 5.&lt;/p&gt;

&lt;p&gt;If you want to learn more about the construction of the cards and get to know the basic and advanced usage of this component - read &lt;a href="https://mdbootstrap.com/docs/standard/components/cards/"&gt;📄 Cards documentation&lt;/a&gt; &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#minimalist-statistics-cards"&gt;
  &lt;/a&gt;
  Minimalist statistics cards
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://mdbootstrap.com/snippets/standard/mdbootstrap/2898120?view=side"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1JS0HbmX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mdbcdn.b-cdn.net/wp-content/themes/mdbootstrap4/content-gh/en/_mdb5/standard/web/docs/components/cards/examples/assets/1.jpg" alt="Minimalist statistics cards"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#statistics-with-subtitle"&gt;
  &lt;/a&gt;
  Statistics with subtitle
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://mdbootstrap.com/snippets/standard/mdbootstrap/2898141?view=side"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ftj9dhuH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mdbcdn.b-cdn.net/wp-content/themes/mdbootstrap4/content-gh/en/_mdb5/standard/web/docs/components/cards/examples/assets/2.jpg" alt="Statistics with subtitle"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#card-with-a-quote"&gt;
  &lt;/a&gt;
  Card with a quote
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://mdbootstrap.com/snippets/standard/mdbootstrap/2898144?view=side"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--73Rmc1CD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mdbcdn.b-cdn.net/wp-content/themes/mdbootstrap4/content-gh/en/_mdb5/standard/web/docs/components/cards/examples/assets/3.jpg" alt="Card with a quote"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#promoting-card"&gt;
  &lt;/a&gt;
  Promoting card
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://mdbootstrap.com/snippets/standard/mdbootstrap/2898159?view=side"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4CG-DxbJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mdbcdn.b-cdn.net/wp-content/themes/mdbootstrap4/content-gh/en/_mdb5/standard/web/docs/components/cards/examples/assets/4.jpg" alt="Promoting card"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#weather-card"&gt;
  &lt;/a&gt;
  Weather card
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://mdbootstrap.com/snippets/standard/mdbootstrap/2898164?view=side"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J-ZRe-gh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mdbcdn.b-cdn.net/wp-content/themes/mdbootstrap4/content-gh/en/_mdb5/standard/web/docs/components/cards/examples/assets/5.jpg" alt="Weather card"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#map-card"&gt;
  &lt;/a&gt;
  Map card
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://mdbootstrap.com/snippets/standard/mdbootstrap/2898271?view=side"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t9oMB-zr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mdbcdn.b-cdn.net/wp-content/themes/mdbootstrap4/content-gh/en/_mdb5/standard/web/docs/components/cards/examples/assets/8.jpg" alt="Map card"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#calendar-card"&gt;
  &lt;/a&gt;
  Calendar card
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://mdbootstrap.com/snippets/standard/mdbootstrap/2898281?view=side"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Czj8WWm1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mdbcdn.b-cdn.net/wp-content/themes/mdbootstrap4/content-gh/en/_mdb5/standard/web/docs/components/cards/examples/assets/9.jpg" alt="Calendar card"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#panels-card"&gt;
  &lt;/a&gt;
  Panels card
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://mdbootstrap.com/snippets/standard/mdbootstrap/2898303?view=side"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2dH9G7Hj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mdbcdn.b-cdn.net/wp-content/themes/mdbootstrap4/content-gh/en/_mdb5/standard/web/docs/components/cards/examples/assets/10.jpg" alt="Panels card"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#testimonial-card"&gt;
  &lt;/a&gt;
  Testimonial card
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://mdbootstrap.com/snippets/standard/mdbootstrap/2898316?view=side"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lUmamZcD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mdbcdn.b-cdn.net/wp-content/themes/mdbootstrap4/content-gh/en/_mdb5/standard/web/docs/components/cards/examples/assets/12.jpg" alt="Testimonial card"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#form-card"&gt;
  &lt;/a&gt;
  Form card
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://mdbootstrap.com/snippets/standard/mdbootstrap/2898319?view=side"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZWc34GDT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mdbcdn.b-cdn.net/wp-content/themes/mdbootstrap4/content-gh/en/_mdb5/standard/web/docs/components/cards/examples/assets/13.jpg" alt="Form card"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#booking-card"&gt;
  &lt;/a&gt;
  Booking card
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://mdbootstrap.com/snippets/standard/mdbootstrap/2898188?view=side"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--np_lRcea--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mdbcdn.b-cdn.net/wp-content/themes/mdbootstrap4/content-gh/en/_mdb5/standard/web/docs/components/cards/examples/assets/6.jpg" alt="Booking card"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#chart-card"&gt;
  &lt;/a&gt;
  Chart card
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://mdbootstrap.com/snippets/standard/mdbootstrap/2898195?view=side"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aJ81l_up--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mdbcdn.b-cdn.net/wp-content/themes/mdbootstrap4/content-gh/en/_mdb5/standard/web/docs/components/cards/examples/assets/7.jpg" alt="Chart card"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#cards-with-chips"&gt;
  &lt;/a&gt;
  Cards with chips
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://mdbootstrap.com/snippets/standard/mdbootstrap/2898306?view=side"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r_-2R0ks--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mdbcdn.b-cdn.net/wp-content/themes/mdbootstrap4/content-gh/en/_mdb5/standard/web/docs/components/cards/examples/assets/11.jpg" alt="Cards with chips"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>bootstrap</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>html</category>
    </item>
    <item>
      <title>Oracle Cheat Sheet</title>
      <author>Neha Soni</author>
      <pubDate>Fri, 30 Apr 2021 06:29:19 +0000</pubDate>
      <link>https://dev.to/nehasoni__/oracle-cheat-sheet-5fg7</link>
      <guid>https://dev.to/nehasoni__/oracle-cheat-sheet-5fg7</guid>
      <description>&lt;p&gt;Hello everyone! In this blog, we will learn the most common-used commands of the Oracle database.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-oracle-database"&gt;
  &lt;/a&gt;
  What is Oracle database?
&lt;/h2&gt;

&lt;p&gt;Oracle Database allows you to quickly and safely create, maintain and retrieve data. It is a relational database system developed by Oracle Corporation in 1980. It is cross-platform i.e it can run on various hardware across operating systems. It has its networking stack that allows applications from different platforms to communicate. It is a relational database in which data is accessed by users through query language called SQL.Oracle database has several structural features like Logical data structure, Memory caching, Backup and recovery, Clustering, etc. that make it popular.&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;em&gt;To know more about Oracle database  &lt;a href="https://www.oracletutorial.com/getting-started/what-is-oracle-database/"&gt;Click Here&lt;/a&gt;&lt;/em&gt; &lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#basic-queries"&gt;
  &lt;/a&gt;
  Basic queries:-
&lt;/h2&gt;

&lt;p&gt;1.) &lt;strong&gt;CREATE TABLE - The create table statement is used to create a new table in the database.&lt;/strong&gt; &lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Syntax:-&lt;/em&gt; &lt;code&gt;CREATE TABLE table_name(col1_name data_type,col2_name data_type,..,colN_name data_type); &lt;br&gt;
&lt;/code&gt; &lt;/p&gt;

&lt;p&gt;2.) &lt;strong&gt;SELECT - The select statement is used to fetch records from database.&lt;/strong&gt; &lt;br&gt;&lt;br&gt;
&lt;em&gt;Syntax:-&lt;/em&gt; &lt;code&gt;SELECT * FROM table_name;&lt;/code&gt;&lt;br&gt;
 &lt;br&gt;&lt;/p&gt;

&lt;p&gt;3.) &lt;strong&gt;INSERT - The insert statement is used to insert records into table.&lt;/strong&gt; &lt;br&gt;&lt;br&gt;
&lt;em&gt;Syntax:-&lt;/em&gt; &lt;code&gt;INSERT into table_name values(value1, value2,.., valuen);&lt;/code&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;4.) &lt;strong&gt;UPDATE - The update statement is used to update records of a table.&lt;/strong&gt; &lt;br&gt;&lt;br&gt;
&lt;em&gt;Syntax:-&lt;/em&gt; &lt;code&gt;UPDATE table_name set col1_name="exp1", col2_name="exp2" WHERE [condition]&lt;/code&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;5.)&lt;strong&gt;WHERE - The where statement is used to filter the records of a table.&lt;/strong&gt; &lt;br&gt;&lt;br&gt;
&lt;em&gt;Syntax:-&lt;/em&gt;&lt;code&gt;SELECT * FROM table_name where col_name=value;&lt;/code&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;6.)&lt;strong&gt;DELETE - The delete statement is used to delete the records of a table from database.&lt;/strong&gt; &lt;br&gt;&lt;br&gt;
&lt;em&gt;Syntax:-&lt;/em&gt;&lt;code&gt;DELETE FROM table_name WHERE col_name=value;&lt;/code&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;7.)&lt;strong&gt;TRUNCATE - The truncate statement is used to remove records of a table.&lt;/strong&gt; &lt;br&gt;&lt;br&gt;
&lt;em&gt;Syntax:-&lt;/em&gt;&lt;code&gt;TRUNCATE table table_name;&lt;/code&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;8.)&lt;strong&gt;DROP - The truncate statement is used to drop a table.&lt;/strong&gt; &lt;br&gt;&lt;br&gt;
&lt;em&gt;Syntax:-&lt;/em&gt;&lt;code&gt;DROP table table_name;&lt;/code&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;9.)&lt;strong&gt;DISTINCT - The Distinct clause is used to remove the duplicate records from the result set.&lt;/strong&gt; &lt;br&gt;&lt;br&gt;
&lt;em&gt;Syntax:-&lt;/em&gt;&lt;code&gt;SELECT DISTINCT expression FROM table_name WHERE [condition];&lt;/code&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;10.)&lt;strong&gt;GROUP BY - The Group By clause is used with SELECT statement to collect data from multiple records and group the results by one or more columns.&lt;/strong&gt; &lt;br&gt;&lt;br&gt;
&lt;em&gt;Syntax:-&lt;/em&gt;&lt;code&gt;SELECT col_name FROM table_name WHERE condition GROUP BY col_name(s);&lt;/code&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;11.)&lt;strong&gt;ORDER BY - The Order By clause is used to sort the records in result set&lt;/strong&gt; &lt;br&gt;&lt;br&gt;
&lt;em&gt;Syntax:-&lt;/em&gt;&lt;code&gt;SELECT * FROM table_name WHERE condition ORDER BY expression [ASC|DESC];&lt;/code&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;12.)&lt;strong&gt;VIEW - It is basically a virtual table which is stored in Oracle data dictionary.&lt;/strong&gt; &lt;br&gt;&lt;br&gt;
&lt;em&gt;Syntax:-&lt;/em&gt;&lt;code&gt;CREATE VIEW view_name AS SELECT col_1,col_2...col_n FROM table_name WHERE [condition];&lt;/code&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;13.)&lt;strong&gt;UNION - The UNION operator is used to combine the result sets of two or more Oracle SELECT statements.&lt;/strong&gt; &lt;br&gt;&lt;br&gt;
&lt;em&gt;Syntax:-&lt;/em&gt;&lt;code&gt;SELECT exp_1,..exp_n FROM table_1 WHERE condition UNION SELECT exp_1,..exp_n FROM table_2 WHERE condition;&lt;/code&gt;&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Note:-&lt;/strong&gt;Each SELECT statement within the UNION operator must have the same number of fields in the result sets with similar data types&lt;/p&gt;

&lt;p&gt;14.)&lt;strong&gt;INTERSECT - The INTERSECT operator is used to pick the common records from compound SELECT queries.&lt;/strong&gt; &lt;br&gt;&lt;br&gt;
&lt;em&gt;Syntax:-&lt;/em&gt;&lt;code&gt;SELECT exp_1,..exp_n FROM table_1 WHERE condition INTERSECT SELECT exp_1,..exp_n FROM table_2 WHERE condition;&lt;/code&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#oracle-joins"&gt;
  &lt;/a&gt;
  Oracle Joins:-
&lt;/h2&gt;

&lt;p&gt;Join statement is used to combine data or rows from two or more tables based on a common field between them.Different types of Joins are:&lt;/p&gt;

&lt;p&gt;1.)&lt;strong&gt;INNER JOIN - The INNER JOIN returns all rows from multiple tables where the join condition is met.&lt;/strong&gt; &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mJXeOvFj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1611739402565/C5Wg-q-3X.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mJXeOvFj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1611739402565/C5Wg-q-3X.png" alt="innerjoin.png"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Syntax:-&lt;/em&gt;&lt;code&gt;SELECT col_1,..col_n  from table_1 INNER JOIN ON table_1.col = table2.col&lt;/code&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;2.)&lt;strong&gt;LEFT OUTER JOIN - The LEFT OUTER JOIN returns all the rows of the table on the left side of the join and matching rows for the table on the right side of join.&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z9fuaGxG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1611739820085/6KKLx0J0e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z9fuaGxG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1611739820085/6KKLx0J0e.png" alt="leftjoin.png"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Syntax:-&lt;/em&gt;&lt;code&gt;SELECT table1.col1, table1.col2, table2.col1,… FROM table1 LEFT JOIN table2 ON condition;&lt;/code&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;3.)&lt;strong&gt;RIGHT OUTER JOIN - The RIGHT OUTER JOIN returns all the rows of the table on the right side of the join and matching rows for the table on the left side of join.&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7zLjLSXh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1611739900303/lX6mu-yL2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7zLjLSXh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1611739900303/lX6mu-yL2.png" alt="right-outer.png"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Syntax:-&lt;/em&gt;&lt;code&gt;SELECT table1.col1, table1.col2, table2.col1,… FROM table1 RIGHT JOIN table2 ON condition;&lt;/code&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;4.)*&lt;em&gt;FULL OUTER JOIN - The FULL OUTER JOIN returns all rows from the left-hand table and right-hand table. *&lt;/em&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fz5cyjx6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1611740196328/vcVOxBYhF.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fz5cyjx6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1611740196328/vcVOxBYhF.png" alt="fulljoin.png"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Syntax:-&lt;/em&gt;&lt;code&gt;SELECT table1.col1, table1.col2, table2.col1,… FROM table1 FULL JOIN table2 ON condition;&lt;/code&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;5.)&lt;strong&gt;SEMI JOINS - A semi-join between two tables returns one copy of each row in first table where one or more matches are found in the second table.&lt;/strong&gt;&lt;br&gt;
&lt;em&gt;Syntax:-&lt;/em&gt;&lt;code&gt;SELECT col1, col2 FROM table1 WHERE id IN (SELECT table1_id FROM table2 WHERE condition)&lt;/code&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sql-keys"&gt;
  &lt;/a&gt;
  SQL KEYS:-
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;KEYS&lt;/strong&gt; in the database helps you to identify a tuple(row) in a relation(table).&lt;br&gt;
It allows you to establish a relationship between tables and also identify the relationships between tables. There are no. of keys in database like **super key, primary key, foreign key, composite key, unique key, alternate key, etc.&lt;/p&gt;

&lt;p&gt;1.)&lt;strong&gt;PRIMARY KEY - A column of a table is said to be a primary key if it uniquely identifies each row in that table.&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
&lt;em&gt;Syntax:-&lt;/em&gt;&lt;code&gt;CREATE TABLE table_name(column1 datatype CONSTRAINT constraint_name PRIMARY KEY, column2 datatype [ NULL | NOT NULL ],...);&lt;/code&gt;&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Note:-&lt;/strong&gt; None of the fields that are part of the primary key can contain a NULL value.&lt;br&gt;&lt;/p&gt;

&lt;p&gt;2.)*&lt;em&gt;FOREIGN KEY - A foreign key is a column that is used to link two tables together.&lt;br&gt;
*&lt;/em&gt;&lt;br&gt;&lt;br&gt;
&lt;em&gt;Syntax:-&lt;/em&gt;&lt;code&gt;CREATE TABLE table_name(col1 datatype null/not null,col2 datatype null/not null,... CONSTRAINT fkey_column FOREIGN KEY (col1, col2, ...col_n)&lt;br&gt;
    REFERENCES parent_table (col1, col2, ... col_n)&lt;br&gt;
);&lt;/code&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;3.)&lt;strong&gt;COMPOSITE KEY - It is the combination of two or more columns in a table that can be used to uniquely identify each row in the table.&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
&lt;em&gt;Syntax:-&lt;/em&gt;&lt;code&gt;CREATE TABLE table_name(col_1 datatype_1, col datatype_2,...  &lt;br&gt;
PRIMARY KEY (col_1, col_2, ...));&lt;/code&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;4.)&lt;strong&gt;UNIQUE KEY -It is a set of one or more than one column of a table that uniquely identifies a record in a database table.&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
&lt;em&gt;Syntax:-&lt;/em&gt;&lt;code&gt;CREATE TABLE table_name(col_1 datatype_1 NOT NULL UNIQUE, col_2 datatype_2,...col_n datatype_n);&lt;/code&gt;&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#thanks-for-reading"&gt;
  &lt;/a&gt;
  Thanks for reading 😃
&lt;/h3&gt;

&lt;p&gt;I would ❤ to connect with you at  &lt;a href="https://twitter.com/nehasoni__"&gt;Twitter&lt;/a&gt;  |  &lt;a href="https://www.linkedin.com/in/neha-soni-70a6231b1/"&gt;LinkedIn&lt;/a&gt; | &lt;a href="https://github.com/nehasoni05"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Share your queries in the comments section.&lt;/p&gt;

</description>
      <category>database</category>
      <category>sql</category>
      <category>beginners</category>
    </item>
    <item>
      <title>All you need to Know About Berry React</title>
      <author>Rakesh S Nakrani</author>
      <pubDate>Fri, 30 Apr 2021 06:22:04 +0000</pubDate>
      <link>https://dev.to/rakesh_nakrani/all-you-need-to-know-about-berry-react-li6</link>
      <guid>https://dev.to/rakesh_nakrani/all-you-need-to-know-about-berry-react-li6</guid>
      <description>&lt;p&gt;In my previous blog, I introduced my upcoming product &lt;a href="https://berrydashboard.io"&gt;Berry&lt;/a&gt; - The react admin dashboard template. If you don't know what is Berry, Please look into this &lt;a href="https://dev.to/rakesh_nakrani/introducing-berry-react-material-design-admin-template-27dk"&gt;article&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In this post, I am going to provide everything about Berry - The React-based Material Admin Template. This blog will cover the following topics.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What makes Berry different from others?

&lt;ul&gt;
&lt;li&gt;Design&lt;/li&gt;
&lt;li&gt;Flexibility&lt;/li&gt;
&lt;li&gt;Technology stack&lt;/li&gt;
&lt;li&gt;Pages&lt;/li&gt;
&lt;li&gt;Package Includes&lt;/li&gt;
&lt;li&gt;Compatibility&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Our Continuous Involvement in customer satisfaction&lt;/li&gt;
&lt;li&gt;Future planning &amp;amp; roadmap&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let me explain all the above points in detail.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-makes-berry-different-from-others"&gt;
  &lt;/a&gt;
  What makes Berry different from others?
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pVpI8jtg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bt9gt0irjh4otflozuhi.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pVpI8jtg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bt9gt0irjh4otflozuhi.jpg" alt="berry react dashboard template"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;At First glance, minimal &lt;strong&gt;Design&lt;/strong&gt; makes Berry an Identical React backend template. Our focus is not just to achieve a simplistic design but it also provides a great User Experience and Berry will prove it. There are numerous features that make Berry one of the best, most powerful react admin templates available.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#design"&gt;
  &lt;/a&gt;
  Design
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Light / Dark Layouts&lt;/li&gt;
&lt;li&gt;LTR / RTL (Right-to-Left) Layouts&lt;/li&gt;
&lt;li&gt;Live customization of Font Family&lt;/li&gt;
&lt;li&gt;Use Eye-catchy warm color palette.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#flexibility"&gt;
  &lt;/a&gt;
  Flexibility
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Easy &amp;amp; consistent folder structure&lt;/li&gt;
&lt;li&gt;Prettier and well-Commented code style&lt;/li&gt;
&lt;li&gt;Organized code structure&lt;/li&gt;
&lt;li&gt;The hassle-free setup process and convenient helper guide&lt;/li&gt;
&lt;li&gt;Easy to implement components and pages&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#technology-stack"&gt;
  &lt;/a&gt;
  Technology Stack
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Built with &lt;a href="https://github.com/mui-org/material-ui"&gt;Material-UI&lt;/a&gt; v5 components library&lt;/li&gt;
&lt;li&gt;Authentication Methods - Auth0, Firebase, JWT&lt;/li&gt;
&lt;li&gt;Built with React Hooks API&lt;/li&gt;
&lt;li&gt;Redux &amp;amp; React Context API for State Management&lt;/li&gt;
&lt;li&gt;React Router for Navigation Routing&lt;/li&gt;
&lt;li&gt;Axios to Mock APIs&lt;/li&gt;
&lt;li&gt;Support of react-script&lt;/li&gt;
&lt;li&gt;Code Splitting&lt;/li&gt;
&lt;li&gt;CSS-in-JS where CSS is composed using JavaScript instead of defined in external files&lt;/li&gt;
&lt;li&gt;Multi-Language Support&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#pages"&gt;
  &lt;/a&gt;
  Pages
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;100+ Ready to use pages&lt;/li&gt;
&lt;li&gt;5+ Working Apps like Mail, Chat, User Management, Contact, Calendar, and more to come soon.&lt;/li&gt;
&lt;li&gt;Vertical page Layout with unlimited Menu level support.&lt;/li&gt;
&lt;li&gt;Menu Header with creative yet useful Notification &amp;amp; User Dialog options.&lt;/li&gt;
&lt;li&gt;Live Customizer with support of font selection, Layout switcher, Border radius and Button shadow enables/disable options.&lt;/li&gt;
&lt;li&gt;2 Dashboards with Footer features.&lt;/li&gt;
&lt;li&gt;50+ Useful Data, Statistics, and Chart Widgets.&lt;/li&gt;
&lt;li&gt;Contact cards Grid &amp;amp; List variants.&lt;/li&gt;
&lt;li&gt;10+ Important Form Plugins like Masking, Editor, Autocomplete, Clipboard, etc...&lt;/li&gt;
&lt;li&gt;Table variants like Simple table, Data table, Enhanced table with search, filter, pagination support.&lt;/li&gt;
&lt;li&gt;3 Variants of Authentication pages like login, register, forget &amp;amp; reset the password, OTP verification.&lt;/li&gt;
&lt;li&gt;Maintenance Pages like Error, coming soon (2), under construction.&lt;/li&gt;
&lt;li&gt;Utility pages like Typography, Color, Shadows, Icons (i.e. 2000+ Material Icons, Tabler Icons)&lt;/li&gt;
&lt;li&gt;Landing Page&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#package-includes"&gt;
  &lt;/a&gt;
  Package Includes
&lt;/h4&gt;

&lt;p&gt;The final download package includes the following directory.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Full &amp;amp; Skeleton (Quick start) package.&lt;/li&gt;
&lt;li&gt;Separate JavaScript &amp;amp; TypeScript package.&lt;/li&gt;
&lt;li&gt;Figma Design Resource File.&lt;/li&gt;
&lt;li&gt;Documentation.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#compatibility"&gt;
  &lt;/a&gt;
  Compatibility
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EhmWh2Iz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d6k5zlf6mroutki77zf2.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EhmWh2Iz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d6k5zlf6mroutki77zf2.jpg" alt="berry material react admin template"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We have tested the Berry in the following environment.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Browser compatibility - Chrome, Mozilla, Edge, Safari (macOS), Opera&lt;/li&gt;
&lt;li&gt;Design Tested on Retina Displays, Laptop media, and responsive media like Tablet / iPad and Mobile devices.&lt;/li&gt;
&lt;li&gt;Page speed test made using Google Page Speed, GT Metrix tools.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#our-continuous-involvement-in-customer-satisfaction"&gt;
  &lt;/a&gt;
  Our Continuous Involvement in customer satisfaction
&lt;/h3&gt;

&lt;p&gt;Customers always wanted a product that gives them satisfaction in terms of usability, support, and easy-to-find query solutions. To achieve that we have a plan for continuous involvement in Berry. From our past experience, we found that manage the following things makes a good impact on customers that helps them quickly find solutions in the very first step without writing a ticket to us. us.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Knowledge Base&lt;/li&gt;
&lt;li&gt;Video Tutorials&lt;/li&gt;
&lt;li&gt;Quick FAQs&lt;/li&gt;
&lt;li&gt;A Support System with minimum turnaround time query resolution
Act upon Customer Feedback queries&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#future-planning-amp-road-map"&gt;
  &lt;/a&gt;
  Future Planning &amp;amp; Road Map
&lt;/h3&gt;

&lt;p&gt;We consider Berry react dashboard as a long run project. We shake our hand with ongoing trends, by doing our continuous involvement in our users' needs &amp;amp; their problem statement. So we will work based upon it.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#what-we-are-considering-next"&gt;
  &lt;/a&gt;
  What we are considering next?
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;More App Pages like E-commerce, File Manager, Sass.&lt;/li&gt;
&lt;li&gt;Conceptual Analytic, Sass, E-commerce Dashboards.&lt;/li&gt;
&lt;li&gt;Rich set of Widgets for Statistics, Data, Charts.&lt;/li&gt;
&lt;li&gt;More Page Layouts - Horizontal, Collapse.&lt;/li&gt;
&lt;li&gt;Considering Form pages like Form Wizard, Multi-Column Forms, Form Validations.&lt;/li&gt;
&lt;li&gt;Considering Form Plugins like Form Mega Options, MaxLength, Multi-Select, Select2, noUISlider, Form Repeater, Auto resize Textarea, MarkDown Editor, File Upload.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#summer-up"&gt;
  &lt;/a&gt;
  Summer up
&lt;/h3&gt;

&lt;p&gt;Hope you enjoy this detailed post. I try to cover up the many things about our Berry Project which make sense upon Technology aspects and our future plan for The Berry Material UI admin template. I will regularly make a post on Berry, so you can better know it. Stay tuned and stay safe.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#follow-us"&gt;
  &lt;/a&gt;
  Follow us
&lt;/h3&gt;

&lt;p&gt;Follow &amp;amp; receive updates about Berry's Progress. Soon we will launch Berry Open source and premium version.&lt;/p&gt;

&lt;p&gt;Website - &lt;a href="http://berrydashboard.io"&gt;http://berrydashboard.io&lt;/a&gt;&lt;br&gt;
Blog - &lt;a href="https://blog.berrydashboard.io"&gt;https://blog.berrydashboard.io&lt;/a&gt;&lt;br&gt;
Facebook - &lt;a href="https://www.facebook.com/codedthemes"&gt;https://www.facebook.com/codedthemes&lt;/a&gt;&lt;br&gt;
Twitter - &lt;a href="https://twitter.com/codedthemes"&gt;https://twitter.com/codedthemes&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>startup</category>
      <category>react</category>
      <category>javascript</category>
    </item>
  </channel>
</rss>
