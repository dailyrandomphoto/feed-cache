<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>I made 150+ high-quality illustrations, totally free. Use it anywhere without attribution.</title>
      <author>hrishikesh1990</author>
      <pubDate>Wed, 07 Jul 2021 12:42:05 +0000</pubDate>
      <link>https://dev.to/hrishikesh1990/i-made-150-high-quality-illustrations-totally-free-use-it-anywhere-without-attribution-1lbg</link>
      <guid>https://dev.to/hrishikesh1990/i-made-150-high-quality-illustrations-totally-free-use-it-anywhere-without-attribution-1lbg</guid>
      <description>&lt;p&gt;Hey everyone,&lt;/p&gt;

&lt;p&gt;I know that all of you are working on exciting products. To help you make it a bit more beautiful, I have made 150+ high-quality illustrations.&lt;/p&gt;

&lt;p&gt;As the title suggests, they are:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Totally free&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;2. Absolutely need NO attribution :)&lt;/strong&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#scale-and-its-launch"&gt;
  &lt;/a&gt;
  Scale and its launch
&lt;/h3&gt;

&lt;p&gt;Here's Scale's link: &lt;a href="https://2.flexiple.com/scale/multi-color-illustrations"&gt;Scale&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I just launched this on Product Hunt. Your support would mean a lot to me: &lt;a href="https://www.producthunt.com/posts/multicolor-illustrations-by-scale"&gt;https://www.producthunt.com/posts/multicolor-illustrations-by-scale&lt;/a&gt;.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#whats-new-in-scale-20"&gt;
  &lt;/a&gt;
  What's new in Scale 2.0?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Now you can tweak 3 colors in the illustration&lt;/li&gt;
&lt;li&gt;Add/remove masks from the characters&lt;/li&gt;
&lt;li&gt;Filter illustrations by Gender&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Have fun and build great projects!&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Run Frontend of BitClout without running node</title>
      <author>Aditya Chaudharyüë®‚Äçüíª</author>
      <pubDate>Wed, 07 Jul 2021 12:31:26 +0000</pubDate>
      <link>https://dev.to/itsaditya/run-frontend-of-bitclout-without-running-node-1n4f</link>
      <guid>https://dev.to/itsaditya/run-frontend-of-bitclout-without-running-node-1n4f</guid>
      <description>&lt;p&gt;You might want to make some changes to the frontend of BitClout but running a node is beyond your league ? Well, you are on the right place of the Internet then!&lt;/p&gt;

&lt;p&gt;You can easily run the frontend of BitClout locally on your PC without running node by using some browser hacks :)&lt;br&gt;
If you were to follow the official &lt;a href="https://docs.bitclout.com/code/dev-setup"&gt;docs&lt;/a&gt; of BitClout, you will have to run your own node (aka backend) and identity service in order to run the frontend. &lt;br&gt;
While you read further you must know that this article is about running the frontend for local development only and you can't deploy the frontend for public use. The only use case of this article is to set up the frontend development environment locally so that you can make pull request and contribute to the frontend of BitClout.&lt;/p&gt;

&lt;p&gt;Before you get started make sure you are using the latest version of NodeJS and NPM on your PC. Another prerequisite is to have &lt;a href="https://git-scm.com/downloads"&gt;git&lt;/a&gt; installed. The frontend of BitClout is made in AngularJS so you must have atleast some basic knowledge of what single page application is.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Fork and Clone the frontend repository.&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Fork the repository of the frontend from &lt;a href="https://github.com/bitclout/frontend"&gt;here&lt;/a&gt;. When done open your terminal and run &lt;code&gt;git clone &amp;lt;https://github.com/YOUR_GITHUB_USERNAME/frontend&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--U8QbTBdE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625654737180/rS0LgP_dk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U8QbTBdE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625654737180/rS0LgP_dk.png" alt="Screenshot from 2021-07-07 16-14-53.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Open the frontend in your code editor&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now change the current working directory into the newly created frontend folder by &lt;code&gt;cd frontend&lt;/code&gt;. &lt;br&gt;
You can open the &lt;strong&gt;frontend&lt;/strong&gt; folder in your code editor to scroll through the code. We are using &lt;a href="https://code.visualstudio.com/"&gt;Visual Studio Code&lt;/a&gt; here. Run &lt;code&gt;code .&lt;/code&gt; in the terminal to open the folder in VS Code. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZjcB0NXh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625655181145/SPNLW_UXZ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZjcB0NXh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625655181145/SPNLW_UXZ.png" alt="Screenshot from 2021-07-07 16-22-01.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now you have the frontend code of the world's best social media on your PC :)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r9_VvV2A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625655630344/WLfiTZnFw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r9_VvV2A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625655630344/WLfiTZnFw.png" alt="Screenshot from 2021-07-07 16-29-20.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Install project dependencies&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;As mentioned earlier, the frontend of BitClout is made in AngularJS. To install all the project dependencies run &lt;code&gt;npm install&lt;/code&gt; in your terminal. This may take a while.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OzNKTCV_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625656077971/hF6-jfTgy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OzNKTCV_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625656077971/hF6-jfTgy.png" alt="Screenshot from 2021-07-07 16-36-56.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If everything went good, you may only get some warnings (or worst case tons of errors. If this is the case, google your problem)&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Run the frontend&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;To run the frontend on your browser run &lt;code&gt;ng serve&lt;/code&gt; in your terminal. This may take some time since there are bunch of files to compile.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LNDCFiEz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625656479013/iSHgJsNAr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LNDCFiEz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625656479013/iSHgJsNAr.png" alt="Screenshot from 2021-07-07 16-44-13.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Have your fingers crossed and let the code compile. For my case I got some circular dependency warnings, but finally I can see my frontend live at &lt;code&gt;http://localhost:4200/&lt;/code&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--beXjOp2o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625656635965/qTZxub-c1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--beXjOp2o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625656635965/qTZxub-c1.png" alt="Screenshot from 2021-07-07 16-46-01.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Open your browser at &lt;code&gt;http://localhost:4200/&lt;/code&gt; and have dev tools open. In the dev tools you will see tons errors. Congratulation! You have almost set-up the frontend dev environment!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FWctgT3S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625656980369/jG2YHpNpU.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FWctgT3S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625656980369/jG2YHpNpU.png" alt="Screenshot from 2021-07-07 16-49-57.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Point the node to BitClout's main node&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;By default, your browser will point the node to a local hosted node (which does not exists in our case because we are only running the frontend). So you need to point the node to the main node of bitclout.&lt;br&gt;
Just open up the dev tools in your browser, go to the applications tab and in the local storage of &lt;code&gt;http://localhost:4200&lt;/code&gt; change &lt;code&gt;lastLocalNodeV2&lt;/code&gt; to &lt;code&gt;"https://bitclout.com"&lt;/code&gt;&lt;br&gt;
Here is an image to get things easier:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3_R6--u0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625657278534/1T0ht0oFW.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3_R6--u0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625657278534/1T0ht0oFW.png" alt="Screenshot from 2021-07-07 16-56-20.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you now reload the page and check your dev tools you will notice that you still have tons of errors. These errors are known as CORS errors. For the sake of security, browsers block cross origin resource sharing. Here you are sharing the resource of &lt;code&gt;https://bitclout.com&lt;/code&gt; through you local host i.e &lt;code&gt;https://localhost:4200&lt;/code&gt;.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0878uFiF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625657531318/UoZ3FsTjj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0878uFiF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625657531318/UoZ3FsTjj.png" alt="Screenshot from 2021-07-07 16-59-13.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Unblock CORS for one's browser&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You now need to unblock CORS by using some third party extensions. For our case we are using &lt;a href="https://chrome.google.com/webstore/detail/cors-unblock/lfhmikememgdcahcdlaciloancbhjino/related"&gt;CORS Unblock&lt;/a&gt;  browser extension &lt;/p&gt;

&lt;p&gt;NOTE: Use this extension only when it's required and have it disabled most of the time. There is security reasons why your browser gives CORS error&lt;/p&gt;

&lt;p&gt;Install the extension and enable it while you want to run the BitClout's frontend through the main node. Make sure you have enabled all forms of CORS unblock especially the &lt;code&gt;Enable Access-Control-[Allow/Expose]-Headers&lt;/code&gt;.&lt;br&gt;
Have the extension on with all the above mentioned settings and reload the page!&lt;br&gt;
Now login with the identity service and you have your frontend running locally on your PC without running node!&lt;/p&gt;

&lt;p&gt;Here is a preview of the frontend on my local host!&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gfRFChKh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625659185404/FGvrJadvi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gfRFChKh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625659185404/FGvrJadvi.png" alt="Screenshot from 2021-07-07 17-27-20.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Congratulations! You are now running the frontend of the world's best social media (Ok, I maybe biased)&lt;br&gt;
Why not improve some UI and do some PR ?&lt;/p&gt;

&lt;p&gt;If you like the article don't forget to let us know in the comments or maybe give a shout to &lt;a href="https://bitclout.com/u/DevsClout"&gt;DevsClout&lt;/a&gt; ? You can also join DevsClout &lt;a href="https://discord.gg/4tCW2C8WhQ"&gt;discord server&lt;/a&gt; to chat with more devs who are building awesome projects on BitClout! We would love to hear back from you!&lt;/p&gt;

</description>
      <category>bitclout</category>
      <category>frontend</category>
      <category>angular</category>
    </item>
    <item>
      <title>How to Export Database Records to Excel using PHP(Laravel)</title>
      <author>John Samuel Obinna</author>
      <pubDate>Wed, 07 Jul 2021 12:20:58 +0000</pubDate>
      <link>https://dev.to/adroitcoder/how-to-export-database-records-to-excel-using-php-laravel-1g30</link>
      <guid>https://dev.to/adroitcoder/how-to-export-database-records-to-excel-using-php-laravel-1g30</guid>
      <description>&lt;p&gt;Have you encountered a challenge where you need to export records from the database to excel using Laravel?&lt;/p&gt;

&lt;p&gt;We will be using &lt;a href="https://laravel-excel.com"&gt;Maatwebsite&lt;/a&gt; Laravel package &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h2&gt;

&lt;p&gt;First require the Maatwebsite laravel package in your &lt;code&gt;composer.json&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;composer require maatwebsite/excel
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;Maatwebsite\Excel\ExcelServiceProvider&lt;/code&gt; is registered by default. But you can manually register the ServiceProvider in your &lt;code&gt;config/app.php&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;'providers' =&amp;gt; [
    /*
     * Service Providers...
     */
    Maatwebsite\Excel\ExcelServiceProvider::class,
]

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The Excel Facade is discovered and registered by default. But you can add it manually to your &lt;code&gt;config/app.php&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;'aliases' =&amp;gt; [
    ....
    'Excel' =&amp;gt; Maatwebsite\Excel\Facades\Excel::class,
]


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Publish config by running the vendor command&lt;/p&gt;

&lt;p&gt;&lt;code&gt;php artisan vendor:publish --provider="Maatwebsite\Excel\ExcelServiceProvider" --tag=config&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This will create a new config file named &lt;code&gt;config/excel.php.&lt;/code&gt; and your setup is completed.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#exporting"&gt;
  &lt;/a&gt;
  Exporting
&lt;/h2&gt;

&lt;p&gt;On our already seeded database, we will be exporting those records to an excel file.&lt;a href="https://laravel.com/docs/8.x/seeding"&gt;Checkout how to seed in laravel&lt;/a&gt; First we create a controller using:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; php artisan make:controller ExportToExcelController
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;then we create an export class in the &lt;code&gt;app\Export&lt;/code&gt; using the:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;php artisan make:export UsersExport --model=User
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;the &lt;code&gt;UsersExport&lt;/code&gt; is the Export class while the flag &lt;code&gt;--model=User&lt;/code&gt; is referencing the model class in use.&lt;/p&gt;

&lt;p&gt;The result of the command &lt;code&gt;php artisan make:export UsersExport --model=User&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
&amp;lt;?php

namespace App\Exports;

use App\Models\User;
use Maatwebsite\Excel\Concerns\FromCollection;

class UsersExport implements FromCollection
{
    public function collection()
    {
        return User::all();
    }
}


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Head over to your &lt;code&gt;ExportToExcelController&lt;/code&gt; you can export records&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
&amp;lt;?php

namespace App\Http\Controllers;

use App\Exports\UsersExport;
use Maatwebsite\Excel\Facades\Excel;

class ExportToExcelController extends Controller 
{
    public function ExportRecords() 
    {
        return Excel::download(new UsersExport, 'users.xlsx');
    }
}


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Ooh one more thing, add a route to be able to access ExportRecords:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Route::get('data/export/', 'ExportToExcelController@ExportRecords');
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Thats IT!&lt;/strong&gt; üòé&lt;/p&gt;

</description>
      <category>laravel</category>
      <category>php</category>
    </item>
    <item>
      <title>No More Google</title>
      <author>.Onion</author>
      <pubDate>Wed, 07 Jul 2021 12:08:04 +0000</pubDate>
      <link>https://dev.to/dotonion/no-more-google-29ll</link>
      <guid>https://dev.to/dotonion/no-more-google-29ll</guid>
      <description>&lt;p&gt;&lt;strong&gt;Privacy-friendly alternatives to Google that don't track you&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#google-chrome"&gt;
  &lt;/a&gt;
  Google Chrome
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://firefox.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Vp4HD0Hf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/FireFox-FF7139%3Fstyle%3Dflat%26logo%3Dfirefox-browser%26logoColor%3Dwhite" alt="FireFox"&gt;&lt;/a&gt;&lt;a href="https://brave.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xlJyv-LH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/Brave-FB542B%3Fstyle%3Dflat%26logo%3Dbrave%26logoColor%3Dwhite" alt="Brave"&gt;&lt;/a&gt;&lt;a href="https://www.apple.com/safari/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2cU7GKtv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/Safari-000000%3Fstyle%3Dflat%26logo%3Dsafari%26logoColor%3Dwhite" alt="Safari"&gt;&lt;/a&gt;&lt;a href="https://vivaldi.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Bdr3Sdys--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/Vivaldi-EF3939%3Fstyle%3Dflat%26logo%3Dvivaldi%26logoColor%3Dwhite" alt="Vivaldi"&gt;&lt;/a&gt;&lt;a href="https://www.opera.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e2yfMLK8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/Opera-FF1B2D%3Fstyle%3Dflat%26logo%3Dopera%26logoColor%3Dwhite" alt="Opera"&gt;&lt;/a&gt;&lt;a href="https://www.torproject.org/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--olOSkfGU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/Tor-7D4698%3Fstyle%3Dflat%26logo%3Dtor-browser%26logoColor%3Dwhite" alt="Tor"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#google-search"&gt;
  &lt;/a&gt;
  Google Search
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://duckduckgo.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6O5rqWfu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/DuckDuckGo-DE5833%3Fstyle%3Dflat%26logo%3Dduckduckgo%26logoColor%3Dwhite" alt="DuckDuckGo"&gt;&lt;/a&gt;&lt;a href="https://www.bing.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SiTO2UWY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/Bing-258FFA%3Fstyle%3Dflat%26logo%3Dbing%26logoColor%3Dwhite" alt="Bing"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#google-chrome-passwords"&gt;
  &lt;/a&gt;
  Google Chrome Passwords
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://keepass.info/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HjQS-3Zw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/KeePassXC-6CAC4D%3Fstyle%3Dflat%26logo%3Dkeepassxc%26logoColor%3Dwhite" alt="KeePassXC"&gt;&lt;/a&gt;&lt;a href="https://bitwarden.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u_SevJZE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/BitWarden-175DDC%3Fstyle%3Dflat%26logo%3Dbitwarden%26logoColor%3Dwhite" alt="BitWarden"&gt;&lt;/a&gt;&lt;a href="https://1password.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B05nWHpk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/1Password-0094F5%3Fstyle%3Dflat%26logo%3D1password%26logoColor%3Dwhite" alt="1Password"&gt;&lt;/a&gt;&lt;a href="https://www.lastpass.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K_MOPf-u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/LastPass-D32D27%3Fstyle%3Dflat%26logo%3Dlastpass%26logoColor%3Dwhite" alt="LastPass"&gt;&lt;/a&gt;&lt;a href="https://dashlane.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9y7JAQqI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/DashLane-0E353D%3Fstyle%3Dflat%26logo%3Ddashlane%26logoColor%3Dwhite" alt="DashLane"&gt;&lt;/a&gt;&lt;a href="https://www.enpass.io/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MIvv32xM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/EnPass-0D47A1%3Fstyle%3Dflat%26logo%3Denpass%26logoColor%3Dwhite" alt="EnPass"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#google-analytics"&gt;
  &lt;/a&gt;
  Google Analytics
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://matomo.org/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gCbqvKxo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/Matomo-3152A0%3Fstyle%3Dflat%26logo%3Dmatomo%26logoColor%3Dwhite" alt="Matomo"&gt;&lt;/a&gt;&lt;a href="https://usefathom.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Jx9r8Yo8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/Fathom-9187FF%3Fstyle%3Dflat%26logo%3Dfathom%26logoColor%3Dwhite" alt="Fathom"&gt;&lt;/a&gt;&lt;a href="https://simpleanalytics.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UduENIdD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/Simple%2520Analytics-FF4F64%3Fstyle%3Dflat%26logo%3Dsimple-analytics%26logoColor%3Dwhite" alt="Simple Analytics"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#google-mail"&gt;
  &lt;/a&gt;
  Google Mail
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://protonmail.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_-kLNq_s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/ProtonMail-8B89CC%3Fstyle%3Dflat%26logo%3Dprotonmail%26logoColor%3Dwhite" alt="ProtonMail"&gt;&lt;/a&gt;&lt;a href="https://tutanota.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Widxx8f8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/Tutanota-840010%3Fstyle%3Dflat%26logo%3Dtutanota%26logoColor%3Dwhite" alt="Tutanota"&gt;&lt;/a&gt;&lt;a href="https://www.zoho.com/mail"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S-J9wbUC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/Zoho-C8202B%3Fstyle%3Dflat%26logo%3Dzoho%26logoColor%3Dwhite" alt="Zoho"&gt;&lt;/a&gt;&lt;a href="https://hey.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t5_burXV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/HEY-5522FA%3Fstyle%3Dflat%26logo%3Dhey%26logoColor%3Dwhite" alt="Hey"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#google-docs"&gt;
  &lt;/a&gt;
  Google Docs
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.notion.so/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4BCGJWxl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/Notion-000000%3Fstyle%3Dflat%26logo%3Dnotion%26logoColor%3Dwhite" alt="Notion"&gt;&lt;/a&gt;&lt;a href="https://www.zoho.com/sheet"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S-J9wbUC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/Zoho-C8202B%3Fstyle%3Dflat%26logo%3Dzoho%26logoColor%3Dwhite" alt="Zoho"&gt;&lt;/a&gt;&lt;a href="https://quip.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q7TzBUUb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/Quip-F27557%3Fstyle%3Dflat%26logo%3Dquip%26logoColor%3Dwhite" alt="Quip"&gt;&lt;/a&gt;&lt;a href="https://www.zoho.com/docs"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S-J9wbUC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/Zoho-C8202B%3Fstyle%3Dflat%26logo%3Dzoho%26logoColor%3Dwhite" alt="Zoho"&gt;&lt;/a&gt;&lt;a href="https://www.libreoffice.org/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7bZwEHQJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/LibreOffice-18A303%3Fstyle%3Dflat%26logo%3Dlibreoffice%26logoColor%3Dwhite" alt="LibreOffice"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#google-sheets"&gt;
  &lt;/a&gt;
  Google Sheets
&lt;/h2&gt;

&lt;p&gt;&lt;a href="http://airtable.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h4m1mZ95--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/AirTable-18BFFF%3Fstyle%3Dflat%26logo%3Dairtable%26logoColor%3Dwhite" alt="AirTable"&gt;&lt;/a&gt;&lt;a href="https://www.zoho.com/sheet"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S-J9wbUC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/Zoho-C8202B%3Fstyle%3Dflat%26logo%3Dzoho%26logoColor%3Dwhite" alt="Zoho"&gt;&lt;/a&gt;&lt;a href="https://coda.io/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qWcKNZtF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/Coda-F46A54%3Fstyle%3Dflat%26logo%3Dcoda%26logoColor%3Dwhite" alt="Coda"&gt;&lt;/a&gt;&lt;a href="https://quip.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q7TzBUUb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/Quip-F27557%3Fstyle%3Dflat%26logo%3Dquip%26logoColor%3Dwhite" alt="Quip"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#youtube"&gt;
  &lt;/a&gt;
  YouTube
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://vimeo.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7QIaqioC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/Vimeo-1AB7EA%3Fstyle%3Dflat%26logo%3Dvimeo%26logoColor%3Dwhite" alt="Vimeo"&gt;&lt;/a&gt;&lt;a href="https://joinpeertube.org/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RvFsZhuh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/PeerTube-F1680D%3Fstyle%3Dflat%26logo%3Dpeertube%26logoColor%3Dwhite" alt="PeerTube"&gt;&lt;/a&gt;&lt;a href="https://dailymotion.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RJd7aG-d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/DailyMotion-0D0D0D%3Fstyle%3Dflat%26logo%3DDailyMotion%26logoColor%3Dwhite" alt="DailyMotion"&gt;&lt;/a&gt;&lt;a href="https://d.tube/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yumDWmEQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/DTube-F01A30%3Fstyle%3Dflat%26logo%3Ddtube%26logoColor%3Dwhite" alt="DTube"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#google-maps-for-websites"&gt;
  &lt;/a&gt;
  Google Maps for Websites
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://leafletjs.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fXytbjW_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/LeafLet-199900%3Fstyle%3Dflat%26logo%3Dleaflet%26logoColor%3Dwhite" alt="LeafLet"&gt;&lt;/a&gt;&lt;a href="https://mapbox.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d7JY5MED--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/MapBox-000000%3Fstyle%3Dflat%26logo%3Dmapbox%26logoColor%3Dwhite" alt="MapBox"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#google-authenticator"&gt;
  &lt;/a&gt;
  Google Authenticator
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://authy.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7OZl-P2M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/Authy-EC1C24%3Fstyle%3Dflat%26logo%3Dauthy%26logoColor%3Dwhite" alt="Authy"&gt;&lt;/a&gt;&lt;a href="https://1password.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B05nWHpk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/1Password-0094F5%3Fstyle%3Dflat%26logo%3D1password%26logoColor%3Dwhite" alt="1Password"&gt;&lt;/a&gt;&lt;a href="https://github.com/andOTP/andOTP"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HGd8QrCQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/And0TP-181717%3Fstyle%3Dflat%26logo%3Dgithub%26logoColor%3Dwhite" alt="And0TP"&gt;&lt;/a&gt;&lt;a href="https://www.lastpass.com/auth"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K_MOPf-u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/LastPass-D32D27%3Fstyle%3Dflat%26logo%3Dlastpass%26logoColor%3Dwhite" alt="LastPass"&gt;&lt;/a&gt;&lt;a href="https://dashlane.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9y7JAQqI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/DashLane-0E353D%3Fstyle%3Dflat%26logo%3Ddashlane%26logoColor%3Dwhite" alt="DashLane"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#google-blogger"&gt;
  &lt;/a&gt;
  Google Blogger
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://wordpress.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1wWoGa1Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/WordPress-21759B%3Fstyle%3Dflat%26logo%3Dwordpress%26logoColor%3Dwhite" alt="WordPress"&gt;&lt;/a&gt;&lt;a href="https://medium.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--l7pYt3CK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/Medium-000000%3Fstyle%3Dflat%26logo%3Dmedium%26logoColor%3Dwhite" alt="Medium"&gt;&lt;/a&gt;&lt;a href="https://ghost.org/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XoXG_Skh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/Ghost-15171A%3Fstyle%3Dflat%26logo%3Dghost%26logoColor%3Dwhite" alt="Ghost"&gt;&lt;/a&gt;&lt;a href="https://www.squarespace.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IoZYZYBQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/SquareSpace-000000%3Fstyle%3Dflat%26logo%3Dsquarespace%26logoColor%3Dwhite" alt="SquareSpace"&gt;&lt;/a&gt;&lt;a href="https://substack.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lqq6bL58--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/SubStack-FF6719%3Fstyle%3Dflat%26logo%3Dsubstack%26logoColor%3Dwhite" alt="SubStack"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#google-dns"&gt;
  &lt;/a&gt;
  Google DNS
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://blog.cloudflare.com/announcing-1111/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5FDKd0CJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/CloudFlare-F38020%3Fstyle%3Dflat%26logo%3Dcloudflare%26logoColor%3Dwhite" alt="CloudFlare"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#google-drive"&gt;
  &lt;/a&gt;
  Google Drive
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://nextcloud.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hlIW_2Sp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/NextCloud-0082C9%3Fstyle%3Dflat%26logo%3Dnextcloud%26logoColor%3Dwhite" alt="NextCloud"&gt;&lt;/a&gt;&lt;a href="https://www.dropbox.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jYA3iNdT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/DropBox-0061FF%3Fstyle%3Dflat%26logo%3Ddropbox%26logoColor%3Dwhite" alt="DropBox"&gt;&lt;/a&gt;&lt;a href="https://mega.nz/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AnRQfP9E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/Mega-D9272E%3Fstyle%3Dflat%26logo%3Dmega%26logoColor%3Dwhite" alt="Mega"&gt;&lt;/a&gt;&lt;a href="https://www.zoho.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S-J9wbUC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/Zoho-C8202B%3Fstyle%3Dflat%26logo%3Dzoho%26logoColor%3Dwhite" alt="Zoho"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#google-hangouts"&gt;
  &lt;/a&gt;
  Google Hangouts
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://telegram.org/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7aFcJM0d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/Telegram-26A5E4%3Fstyle%3Dflat%26logo%3Dtelegram%26logoColor%3Dwhite" alt="Telegram"&gt;&lt;/a&gt;&lt;a href="https://signal.org/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--v8CEZBhc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/Signal-2592E9%3Fstyle%3Dflat%26logo%3Dsignal%26logoColor%3Dwhite" alt="Signal"&gt;&lt;/a&gt;&lt;a href="https://discordapp.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4haNnIAt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/Discord-5865F2%3Fstyle%3Dflat%26logo%3Ddiscord%26logoColor%3Dwhite" alt="Discord"&gt;&lt;/a&gt;&lt;a href="https://slack.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lShlCYPf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/Slack-4A154B%3Fstyle%3Dflat%26logo%3Dslack%26logoColor%3Dwhite" alt="Slack"&gt;&lt;/a&gt;&lt;a href="https://wire.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hHkYEGnR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/Wire-000000%3Fstyle%3Dflat%26logo%3Dwire%26logoColor%3Dwhite" alt="Wire"&gt;&lt;/a&gt;&lt;a href="https://zoom.us/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fhX4N-Pf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/Zoom-2D8CFF%3Fstyle%3Dflat%26logo%3Dzoom%26logoColor%3Dwhite" alt="Zoom"&gt;&lt;/a&gt;&lt;a href="https://matrix.org/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hxCiA1n4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/Matrix-000000%3Fstyle%3Dflat%26logo%3Dmatrix%26logoColor%3Dwhite" alt="Matrix"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#google-images"&gt;
  &lt;/a&gt;
  Google Images
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://unsplash.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CL-1Mb0b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/Unsplash-000000%3Fstyle%3Dflat%26logo%3Dunsplash%26logoColor%3Dwhite" alt="Unsplash"&gt;&lt;/a&gt;&lt;a href="https://500px.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aekrb_Hr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/500PX-0099E5%3Fstyle%3Dflat%26logo%3D500px%26logoColor%3Dwhite" alt="500PX"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#google-maps"&gt;
  &lt;/a&gt;
  Google Maps
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://openstreetmap.org/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2TQ-U4Jt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/OpenStreetMap-7EBC6F%3Fstyle%3Dflat%26logo%3Dopenstreetmap%26logoColor%3Dwhite" alt="OpenStreetMap"&gt;&lt;/a&gt;&lt;a href="https://wego.here.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j9o8iRRE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/HERE-00AFAA%3Fstyle%3Dflat%26logo%3Dhere%26logoColor%3Dwhite" alt="HERE"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#google-poly"&gt;
  &lt;/a&gt;
  Google Poly
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://sketchfab.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2zITZF4U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/SketchFab-1CAAD9%3Fstyle%3Dflat%26logo%3Dsketchfab%26logoColor%3Dwhite" alt="SketchFab"&gt;&lt;/a&gt;&lt;a href="https://turbosquid.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E9fTf35U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/TurboSquid-FF8135%3Fstyle%3Dflat%26logo%3Dturbosquid%26logoColor%3Dwhite" alt="TurboSquid"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#google-scholar"&gt;
  &lt;/a&gt;
  Google Scholar
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://arxiv.org/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cm3EtGSJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/ArXiv-B31B1B%3Fstyle%3Dflat%26logo%3Darxiv%26logoColor%3Dwhite" alt="ArXiv"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;This &lt;a href="https://nomoregoogle.com/"&gt;website&lt;/a&gt; and article are non-commercial and are not affiliated with Google or any of the alternatives listed here. The alternatives are submitted and voted on by the general public (crowdsourcing)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;And &lt;a href="https://dev.to/1nj3ct0r/no-more-google-1lbg"&gt;this article&lt;/a&gt; is the main article&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>google</category>
      <category>alternative</category>
      <category>tips</category>
      <category>privacy</category>
    </item>
    <item>
      <title>How to Become a Hacker in a Year</title>
      <author>.Onion</author>
      <pubDate>Wed, 07 Jul 2021 12:05:12 +0000</pubDate>
      <link>https://dev.to/dotonion/how-to-become-a-hacker-in-a-year-5h67</link>
      <guid>https://dev.to/dotonion/how-to-become-a-hacker-in-a-year-5h67</guid>
      <description>&lt;p&gt;There is so much potential in hacking. You can keep learning forever and never get bored or keep doing the same thing over and over while earning some nice rewards. So how do you become a hacker? Where should you start? What steps do you need to take and what should you avoid? In this article, I'll do my best to answer these questions - but first, let's break down what a hacker is so we know what we're working towards.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-hacker"&gt;
  &lt;/a&gt;
  What is hacker?
&lt;/h2&gt;

&lt;p&gt;I think that every hacker is unique and has their own skillset, so let‚Äôs avoid giving some cookie-cutter definition and instead focus on the attributes that make a good hacker.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#they-are-creative"&gt;
  &lt;/a&gt;
  They are creative
&lt;/h2&gt;

&lt;p&gt;As a hacker, you will find many new problems, but not many answers. This is both a blessing and a curse. A curse because you won't always have someone to help you find the answers, but a blessing because you'll have the chance to leave some marks with a little out-of-the-box thinking. That means you're going to need a lot of creative thinking. And that creativity is needed in all aspects of hacking, from bug bounties to penetration testing to malware analyst, every hacker needs to be as creative as a graphic designer.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#love-of-problem-solving"&gt;
  &lt;/a&gt;
  Love of problem solving
&lt;/h2&gt;

&lt;p&gt;As a hacker, I think one of my defining aspects is my need to solve puzzles. It's an itch I have to scratch - but it didn't start out that way. As humans, we try to relieve the boredom in our lives with constant entertainment or simply moving from one task to the next. But in doing so, we neglect a small but powerful aspect of the human spirit. I found that when I didn't avoid or neglect my boredom, I began to see problems that others had trouble seeing. I began to see puzzles and solutions simply because I did not avoid this state of mind. Over time, I learned to enjoy the process of discovering new puzzles (and solving them), even if they were discovered during a boring task. Embrace the boredom!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#fights-against-the-existing-order"&gt;
  &lt;/a&gt;
  Fights against the existing order
&lt;/h2&gt;

&lt;p&gt;This topic may sound like all hackers are pure anarchists who love to fight the government, but that's not what I'm talking about. A long time ago I read this statement, "Trust, but verify" - and it has stuck with me ever since. I don't like being told that something works a certain way just because it's known to work that way. When you question things, you tend to find weaknesses that others have overlooked or simply not considered. You should question everything, even me! That was my mentality when I started hacking, and that's what led to me discovering things I never thought possible, all because I chose to ignore my gut feeling about how a system works.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#is-very-competent"&gt;
  &lt;/a&gt;
  Is very competent
&lt;/h2&gt;

&lt;p&gt;Hacking is more than running a script and calling it a day. Our craft requires a lot of passion, even for the things we don't care about. Hacking is a symphony of several fields of knowledge playing a beautiful song, but to know what to play as a whole, we need to know how to play each instrument very well. It's a niche, and while I believe there is training for it, I also believe there are some aspects that you need to master but just can't study. That means that at some point you have to dive in and pursue that thirst for knowledge on your own. That's what makes hackers some of the most multidisciplinary and capable types of people I've met.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#general-steps"&gt;
  &lt;/a&gt;
  General steps
&lt;/h2&gt;

&lt;p&gt;Cool, now that you know what the attributes of great hackers are, let's determine what skills you'll need. Hackers, like scientists, come in many different types. And while the topic of focus may change, they all share some basic skills. Here are the basic skills a hacker needs to master:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;### learn how to program (use some free resources?). 
This part is essential. It's not so much about the actual programming languages, but more about understanding programming concepts. If you can understand how something was designed, then you know where the weak spots are. I've put the following languages in the order I think you should learn them first to last - I'll explain a bit why I think these are so important.

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;HTML&lt;/strong&gt; (and possibly CSS): while not directly applicable to hacking, it will teach you the basics of what the web is built on, and it's a great introductory language for those who want to quickly create something visible with a large margin of error. A great addition would be CSS to make those web pages shine!&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;PHP&lt;/strong&gt;: With PHP, you can transform your web applications from boring, static websites into fancy, backend-driven workhorses. You will be able to create useful applications to store data and much more. The downside of this language is that it allows some things that more strict languages like ASPX don't. But the fact that you'll be able to easily deploy a PHP application and have a slightly larger fault tolerance is a big plus.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Python&lt;/strong&gt;: Python is a generalist language that any hacker can use to quickly whip up a script. Python is cross-platform, which means it will run on any operating system that supports it, but unlike other, bulkier languages like Java, you can run it much faster. It's also less strict on end users, forcing them to make their code clean and readable through its design.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;### learn how to run and use Linux
This may seem daunting at first, especially if you're not used to using anything other than Windows. Well, get over that fear because Linux is pretty essential for hacking as many of the popular tools are built on Unix-based systems, so many hackers stick with Unix because of its open nature and adaptability. You can also hack on a Windows system, it will just be a bit more difficult in the beginning since most tutorials and popular tools are written for Unix.&lt;/li&gt;
&lt;li&gt;### learn the basics of networking
It's really important to know what's going on in a network. You need to learn how packets are sent from one computer to another, because eventually you will need to learn how to interpret and carefully analyse that traffic. So it really pays to start early with this skill. I would highly recommend starting with the basics, like learning how to set up your own wireless network at home. This can go beyond the basics as well. You don't have to limit yourself to installing a wireless access point, you can also play with things like firewall settings and port forwarding. Once you're comfortable with that, start analysing other networks.&lt;/li&gt;
&lt;li&gt;### read some articles about hacking
Whatever image of hacking you have in your head, chances are it's wrong because of pop culture. We've grown up with the idea that hacking is like pounding on a keyboard. So to find the connexion between what you've practised yourself and what's real, it helps to read about real hackers to see how their techniques have been applied in the real world. Don't be discouraged by the complexity, though. Things won't make much sense at first, but as you read more, you'll find that you'll start to understand things you didn't before.
Now that we've covered a lot of the basics, it's time to take a closer look at choosing a specialisation. As I mentioned earlier, there are many aspects to hacking and I don't think one should preclude the other, but it's good to start somewhere.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#choose-a-specialisation"&gt;
  &lt;/a&gt;
  Choose a specialisation
&lt;/h2&gt;

&lt;p&gt;It may seem that the choice you make now is final, but nothing could be further from the truth. All of the options below are just an entry point into a very fluid field that allows us to interact with and learn things from other disciplines. I keep comparing hacking to science and I think my comparison keeps proving valid. Just like in science, we end up having to know things from many disciplines to become a better hacker.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#web-application-hacking"&gt;
  &lt;/a&gt;
  Web application hacking
&lt;/h2&gt;

&lt;p&gt;Web application hacking may seem like a narrow field but it can lead to many options. You can either try your luck and skill level against other hackers in bug bounty hunting or we can go into more stable jobs such as penetration testing. The cool thing about web application hacking is that it will also allow us to go into either very functional exploits such as business logic flaws and very technical ones such as insecure deserilisation plus anything in between.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#network-hacking"&gt;
  &lt;/a&gt;
  Network Hacking
&lt;/h2&gt;

&lt;p&gt;Network hacking is very technical, if you pursue this specialization you could become a penetration tester or Systems Operation Center Management - basically taking responsibility for a network to secure, manage and respond to incidents. To get there, you'll need to focus on networking, with basic certifications like Cisco's CCNA helping to solidify knowledge, albeit with less focus on security and more on general networking knowledge. As a security-conscious hacker, you can try sites like &lt;a href="https://www.hackthebox.eu/"&gt;hack-the-box&lt;/a&gt; and &lt;a href="https://www.vulnhub.com/"&gt;vulnhub&lt;/a&gt;, which allow us to practice our hacking skills and then aim for security certifications like eJPT and OSCP.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#malware-analysis"&gt;
  &lt;/a&gt;
  Malware Analysis
&lt;/h2&gt;

&lt;p&gt;Malware analysis can be a little more daunting, but the rewards are much greater. Hackers can look forward to a more specialised job where learning will play a central role. To get here, we need to focus more on static code analysis and application decompilation.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Having said all that, I hope I was able to give you some insight into what hacking is and what it takes to become a hacker. It will certainly take some time, but with dedication and hard work, you can get a foothold in this field. It's never too late to start, and it might take a while, but if you take a step every day, you can become a hacker in a year.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#resource"&gt;
  &lt;/a&gt;
  Resource
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://cult.honeypot.io/reads/how-to-become-a-hacker-in-a-year/"&gt;&lt;strong&gt;How To Become a Hacker In a Year&lt;/strong&gt;&lt;/a&gt; by &lt;a href="https://twitter.com/theXSSrat"&gt;&lt;strong&gt;XSS Rat&lt;/strong&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>hack</category>
      <category>hacker</category>
      <category>howtos</category>
      <category>roadmap</category>
    </item>
    <item>
      <title>Introduction to Networking and Content Delivery with AWS</title>
      <author>Adit Modi</author>
      <pubDate>Wed, 07 Jul 2021 11:06:13 +0000</pubDate>
      <link>https://dev.to/aws-builders/introduction-to-networking-and-content-delivery-with-aws-22hc</link>
      <guid>https://dev.to/aws-builders/introduction-to-networking-and-content-delivery-with-aws-22hc</guid>
      <description>&lt;p&gt;When most people think of the Internet, they think of a magical cloud that lets you access your favorite websites, shop online, and your seemingly endless stream of movies and web series. But in reality, there isn‚Äôt any magic involved. There‚Äôs no mysterious entity that grants us an online resource. The Internet is just an interconnection of computers around the world, like a giant spider web that brings all of us together. We call the interconnection of computers, a network.&lt;/p&gt;

&lt;p&gt;By using a cloud network an organization can deliver content more rapidly, reliably, and securely, without having to bear the costs and difficulties of building and operating its own network.&lt;/p&gt;

&lt;p&gt;Many organizations around the world are deciding to move their workloads to the cloud, and it‚Äôs only a matter of time before it gains universal adoption. The demand for the AWS backbone to support the interconnectivity needs of all types of business models will continue to grow and the need for highly available cloud-based services will grow with it. AWS is the cloud leader and thus uniquely positioned with the greatest potential and customer base to respond to those growing needs and power the innovations needed to continue to move the needle.&lt;/p&gt;

&lt;p&gt;In this blog post, we will discuss some of the most important AWS networking services that help you quickly set up, secure, and monitor your network. This services improve security, availability, performance, and help with streamlined monitoring both on-premises as well as on AWS cloud.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--A-dmePjX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p0te04q232j69ky1eezy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A-dmePjX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p0te04q232j69ky1eezy.png" alt="Introduction to Developer Tools with AWS"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;My Background: Cloud Engineer | AWS Community Builder | AWS Educate Cloud Ambassador | 4x AWS Certified | 3x OCI Certified | 3x Azure Certified.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The Introduction to AWS is a Series containing different articles that provide a basic introduction to different aws topics/categories. Each article covers the detailed guide on how to work with particular topic/category . This series aims at providing "A Getting Started Guide on Different aws topics / categories ."&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#networking-and-content-delivery"&gt;
  &lt;/a&gt;
  Networking and Content Delivery
&lt;/h1&gt;

&lt;p&gt;AWS provides the broadest and deepest set of networking services with the highest reliability, most security features, and highest performance in the world. This helps ensure you can run any kind of workload you have in the cloud.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#amazon-vpc"&gt;
  &lt;/a&gt;
  Amazon VPC
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sgHiS6hg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oqyneq3i6kcuf3h46vfl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sgHiS6hg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oqyneq3i6kcuf3h46vfl.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Amazon Virtual Private Cloud (Amazon VPC) lets you provision a logically isolated section of the AWS Cloud where you can launch AWS resources in a virtual network that you define. You have complete control over your virtual networking environment, including selection of your own IP address range, creation of subnets, and configuration of route tables and network gateways. You can use both IPv4 and IPv6 in your VPC for secure and easy access to resources and applications.&lt;/p&gt;

&lt;p&gt;You can easily customize the network configuration for your VPC. For example, you can create a public-facing subnet for your web servers that has access to the Internet, and place your backend systems, such as databases or application servers, in a private-facing subnet with no Internet access. You can leverage multiple layers of security (including security groups and network access control lists) to help control access to EC2 instances in each subnet.&lt;/p&gt;

&lt;p&gt;Additionally, you can create a hardware virtual private network (VPN) connection between your corporate data center and your VPC and leverage the AWS Cloud as an extension of your corporate data center.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#amazon-cloudfront"&gt;
  &lt;/a&gt;
  Amazon CloudFront
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AjTUY40v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/259255aqlrxend85ix5q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AjTUY40v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/259255aqlrxend85ix5q.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Amazon CloudFront is a fast content delivery network (CDN) service that securely delivers data, videos, applications, and APIs to customers globally with low latency, high transfer speeds, all within a developer-friendly environment. CloudFront is integrated with AWS ‚Äì both physical locations that are directly connected to the AWS global infrastructure, as well as other AWS services. CloudFront works seamlessly with services including AWS Shield for DDoS mitigation, Amazon S3, Elastic Load Balancing or Amazon EC2 as origins for your applications, and Lambda@Edge to run custom code closer to customers‚Äô users and to customize the user experience.&lt;/p&gt;

&lt;p&gt;You can get started with the Content Delivery Network in minutes, using the same AWS tools that you're already familiar with: APIs, AWS Management Console, AWS CloudFormation, CLIs, and SDKs. Amazon's CDN offers a simple, pay-as-you-go pricing model with no upfront fees or required long-term contracts, and support for the CDN is included in your existing AWS Support subscription.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#amazon-route-53"&gt;
  &lt;/a&gt;
  Amazon Route 53
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mhqr6B-J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lah64ii86hh3si5tgwle.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mhqr6B-J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lah64ii86hh3si5tgwle.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Amazon Route 53 is a highly available and scalable cloud Domain Name System (DNS) web service. It is designed to give developers and businesses an extremely reliable and cost-effective way to route end users to Internet applications by translating human readable names, such as &lt;a href="http://www.example.com"&gt;www.example.com&lt;/a&gt;, into the numeric IP addresses, such as 192.0.2.1, that computers use to connect to each other. Amazon Route 53 is fully compliant with IPv6 as well.&lt;/p&gt;

&lt;p&gt;Amazon Route 53 effectively connects user requests to infrastructure running in AWS‚Äîsuch as EC2 instances, Elastic Load Balancing load balancers, or Amazon S3 buckets‚Äîand can also be used to route users to infrastructure outside of AWS. You can use Amazon Route 53 to configure DNS health checks to route traffic to healthy endpoints or to independently monitor the health of your application and its endpoints. Amazon Route 53 traffic flow makes it easy for you to manage traffic globally through a variety of routing types, including latency-based routing, Geo DNS, and weighted round robin‚Äîall of which can be combined with DNS Failover in order to enable a variety of low-latency, fault-tolerant architectures. Using Amazon Route 53 traffic flow‚Äôs simple visual editor, you can easily manage how your end users are routed to your application‚Äôs endpoints‚Äîwhether in a single AWS Region or distributed around the globe. Amazon Route 53 also offers Domain Name Registration‚Äîyou can purchase and manage domain names such as example.com and Amazon Route 53 will automatically configure DNS settings for your domains.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#aws-privatelink"&gt;
  &lt;/a&gt;
  AWS PrivateLink
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NQeo5ABE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y5d6l9kuxrvh9plskvi1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NQeo5ABE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y5d6l9kuxrvh9plskvi1.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AWS PrivateLink simplifies the security of data shared with cloud-based applications by eliminating the exposure of data to the public Internet. AWS PrivateLink provides private connectivity between VPCs, AWS services, and on-premises applications, securely on the Amazon network. AWS PrivateLink makes it easy to connect services across different accounts and VPCs to significantly simplify the network architecture.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#aws-direct-connect"&gt;
  &lt;/a&gt;
  AWS Direct Connect
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hWMXIfC---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m6rbybapefw6m8qzsnk4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hWMXIfC---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m6rbybapefw6m8qzsnk4.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AWS Direct Connect makes it easy to establish a dedicated network connection from your premises to AWS. Using AWS Direct Connect, you can establish private connectivity between AWS and your data center, office, or co-location environment, which in many cases can reduce your network costs, increase bandwidth throughput, and provide a more consistent network experience than Internet-based connections.&lt;/p&gt;

&lt;p&gt;AWS Direct Connect lets you establish a dedicated network connection between your network and one of the AWS Direct Connect locations. Using industry standard 802.1Q virtual LANS (VLANs), this dedicated connection can be partitioned into multiple virtual interfaces. This allows you to use the same connection to access public resources, such as objects stored in Amazon S3 using public IP address space, and private resources such as EC2 instances running within a VPC using private IP address space, while maintaining network separation between the public and private environments. Virtual interfaces can be reconfigured at any time to meet your changing needs.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#aws-global-accelerator"&gt;
  &lt;/a&gt;
  AWS Global Accelerator
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HqB3ncJT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zdy2ry35yxeipgtnvkec.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HqB3ncJT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zdy2ry35yxeipgtnvkec.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AWS Global Accelerator is a networking service that improves the availability and performance of the applications that you offer to your global users.&lt;/p&gt;

&lt;p&gt;Today, if you deliver applications to your global users over the public internet, your users might face inconsistent availability and performance as they traverse through multiple public networks to reach your application. These public networks are often congested and each hop can introduce availability and performance risk. AWS Global Accelerator uses the highly available and congestion-free AWS global network to direct internet traffic from your users to your applications on AWS, making your users‚Äô experience more consistent.&lt;/p&gt;

&lt;p&gt;To improve the availability of your application, you must monitor the health of your application endpoints and route traffic only to healthy endpoints. AWS Global Accelerator improves application availability by continuously monitoring the health of your application endpoints and routing traffic to the closest healthy endpoints.&lt;/p&gt;

&lt;p&gt;AWS Global Accelerator also makes it easier to manage your global applications by providing static IP addresses that act as a fixed entry point to your application hosted on AWS which eliminates the complexity of managing specific IP addresses for different AWS Regions and Availability Zones. AWS Global Accelerator is easy to set up, configure and manage.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#aws-transit-gateway"&gt;
  &lt;/a&gt;
  AWS Transit Gateway
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---z3PZQPI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bzmxojf4jfhbp8daheej.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---z3PZQPI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bzmxojf4jfhbp8daheej.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AWS Transit Gateway is a service that enables customers to connect their Amazon Virtual Private Clouds (VPCs) and their on-premises networks to a single gateway. As you grow the number of workloads running on AWS, you need to be able to scale your networks across multiple accounts and Amazon VPCs to keep up with the growth. Today, you can connect pairs of Amazon VPCs using peering. However, managing point-to-point connectivity across many Amazon VPCs, without the ability to centrally manage the connectivity policies, can be operationally costly and cumbersome. For on-premises connectivity, you need to attach your AWS VPN to each individual Amazon VPC. This solution can be time consuming to build and hard to manage when the number of VPCs grows into the hundreds.&lt;/p&gt;

&lt;p&gt;With AWS Transit Gateway, you only have to create and manage a single connection from the central gateway in to each Amazon VPC, on-premises data center, or remote office across your network. Transit Gateway acts as a hub that controls how traffic is routed among all the connected networks which act like spokes. This hub and spoke model significantly simplifies management and reduces operational costs because each network only has to connect to the Transit Gateway and not to every other network. Any new VPC is simply connected to the Transit Gateway and is then automatically available to every other network that is connected to the Transit Gateway. This ease of connectivity makes it easy to scale your network as you grow.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#aws-app-mesh"&gt;
  &lt;/a&gt;
  AWS App Mesh
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6op5iRPv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ggd95claa3uism093gh4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6op5iRPv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ggd95claa3uism093gh4.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AWS App Mesh makes it easy to monitor and control microservices running on AWS. App Mesh standardizes how your microservices communicate, giving you end-to-end visibility and helping to ensure high-availability for your applications.&lt;/p&gt;

&lt;p&gt;Modern applications are often composed of multiple microservices that each perform a specific function. This architecture helps to increase the availability and scalability of the application by allowing each component to scale independently based on demand, and automatically degrading functionality when a component fails instead of going offline. Each microservice interacts with all the other microservices through an API. As the number of microservices grows within an application, it becomes increasingly difficult to pinpoint the exact location of errors, re-route traffic after failures, and safely deploy code changes. Previously, this has required you to build monitoring and control logic directly into your code and redeploy your microservices every time there are changes.&lt;/p&gt;

&lt;p&gt;AWS App Mesh makes it easy to run microservices by providing consistent visibility and network traffic controls for every microservice in an application. App Mesh removes the need to update application code to change how monitoring data is collected or traffic is routed between microservices. App Mesh configures each microservice to export monitoring data and implements consistent communications control logic across your application. This makes it easy to quickly pinpoint the exact location of errors and automatically re-route network traffic when there are failures or when code changes need to be deployed.&lt;/p&gt;

&lt;p&gt;You can use App Mesh with Amazon ECS and Amazon EKS to better run containerized microservices at scale. App Mesh uses the open source Envoy proxy, making it compatible with a wide range of AWS partner and open source tools for monitoring microservices.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#aws-cloud-map"&gt;
  &lt;/a&gt;
  AWS Cloud Map
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--95Mdv6Xv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7wxc7c1b1suepw21kmav.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--95Mdv6Xv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7wxc7c1b1suepw21kmav.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AWS Cloud Map is a cloud resource discovery service. With Cloud Map, you can define custom names for your application resources, and it maintains the updated location of these dynamically changing resources. This increases your application availability because your web service always discovers the most up-to-date locations of its resources.&lt;/p&gt;

&lt;p&gt;Modern applications are typically composed of multiple services that are accessible over an API and perform a specific function. Each service interacts with a variety of other resources such as databases, queues, object stores, and customer-defined microservices, and they also need to be able to find the location of all the infrastructure resources on which it depends, in order to function. You typically manually manage all these resource names and their locations within the application code. However, manual resource management becomes time consuming and error-prone as the number of dependent infrastructure resources increases or the number of microservices dynamically scale up and down based on traffic. You can also use third-party service discovery products, but this requires installing and managing additional software and infrastructure.&lt;/p&gt;

&lt;p&gt;Cloud Map allows you to register any application resources such as databases, queues, microservices, and other cloud resources with custom names. Cloud Map then constantly checks the health of resources to make sure the location is up-to-date. The application can then query the registry for the location of the resources needed based on the application version and deployment environment.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#elastic-load-balancing"&gt;
  &lt;/a&gt;
  Elastic Load Balancing
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GhQtTym4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u1ayddlpka9jpc0jpvr3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GhQtTym4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u1ayddlpka9jpc0jpvr3.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Elastic Load Balancing (ELB) automatically distributes incoming application traffic across multiple targets, such as Amazon EC2 instances, containers, and IP addresses. It can handle the varying load of your application traffic in a single Availability Zone or across multiple Availability Zones. Elastic Load Balancing offers three types of load balancers that all feature the high availability, automatic scaling, and robust security necessary to make your applications fault tolerant.&lt;/p&gt;

&lt;p&gt;Application Load Balancer is best suited for load balancing of HTTP and HTTPS traffic and provides advanced request routing targeted at the delivery of modern application architectures, including microservices and containers. Operating at the individual request level (Layer 7), Application Load Balancer routes traffic to targets within Amazon Virtual Private Cloud (Amazon VPC) based on the content of the request.&lt;/p&gt;

&lt;p&gt;Network Load Balancer is best suited for load balancing of TCP traffic where extreme performance is required. Operating at the connection level (Layer 4), Network Load Balancer routes traffic to targets within Amazon Virtual Private Cloud (Amazon VPC) and is capable of handling millions of requests per second while maintaining ultra-low latencies. Network Load Balancer is also optimized to handle sudden and volatile traffic patterns.&lt;/p&gt;

&lt;p&gt;Classic Load Balancer provides basic load balancing across multiple Amazon EC2 instances and operates at both the request level and connection level. Classic Load Balancer is intended for applications that were built within the EC2-Classic network.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;A strong network setup is the foundation of any AWS environment. AWS networking help you quickly set up, secure, and monitor your network. AWS networking provide your traditional and modern applications with improved security, availability, performance, and streamlined monitoring. AWS networking provides secure and performant networking for user-facing application data. Deliver your data with single-digit millisecond latency. AWS networking helps create fast, secure, and reliable connections between your on-premises and AWS networks.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jKOTCZJe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lbz5oamkzvlp7f136vph.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jKOTCZJe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lbz5oamkzvlp7f136vph.png" alt="2021-06-22 (2)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hope this guide helps you with the Introduction to Networking and Content Delivery with AWS, feel free to connect with me on &lt;a href="https://www.linkedin.com/in/adit-modi-2a4362191/"&gt;LinkedIn.&lt;/a&gt;&lt;br&gt;
You can view my badges &lt;a href="https://www.youracclaim.com/users/adit-modi/badges"&gt;here.&lt;/a&gt;&lt;br&gt;
If you are interested in learning more about AWS Services then follow me on &lt;a href="https://github.com/AditModi"&gt;github.&lt;/a&gt;&lt;br&gt;
If you liked this content then do clap and share it . Thank You .&lt;/p&gt;

</description>
      <category>aws</category>
      <category>cloud</category>
      <category>beginners</category>
    </item>
    <item>
      <title>11 Ways To Be Just Another Mediocre Developer Suffocating In A Terrible Coding Job</title>
      <author>Dragos Nedelcu</author>
      <pubDate>Wed, 07 Jul 2021 10:59:22 +0000</pubDate>
      <link>https://dev.to/dragosnedelcu/11-ways-to-be-just-another-mediocre-developer-suffocating-in-a-terrible-coding-job-49i1</link>
      <guid>https://dev.to/dragosnedelcu/11-ways-to-be-just-another-mediocre-developer-suffocating-in-a-terrible-coding-job-49i1</guid>
      <description>&lt;p&gt;Pretty scary isn‚Äôt it? &lt;/p&gt;

&lt;p&gt;You are doing course after course, you started an AWS certification and you are on HackerRank every week. But a terrifying thought still troubles you. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-makes-you-different-from-the-hundreds-of-developers-out-there"&gt;
  &lt;/a&gt;
  &lt;strong&gt;What makes you different from the hundreds of developers out there?&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;You are building side projects, messing around with some Node.js, hanging around on Twitter, checking out some job postings - a developer‚Äôs routine. You are all doing the same, listening to the same podcast, reading the same blogs. &lt;/p&gt;

&lt;p&gt;But your tech lead doesn't care. They have seen it all before. Another ambitious coder in the sea of fresh devs, bootcampers and self-taught wizards. Why should they anyway?&lt;/p&gt;

&lt;p&gt;That is the million-dollar question. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#and-the-tragedy-is-you-dont-have-an-answer"&gt;
  &lt;/a&gt;
  And the tragedy is, you don‚Äôt have an answer.
&lt;/h3&gt;

&lt;p&gt;Because despite the infinite vacuum of blog articles, despite the numerous tricks and shortcuts, you struggle. You stumble navigating the codebase and you check Stackoverflow more than you should.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#programming-still-feels-like-a-guessing-game"&gt;
  &lt;/a&gt;
  Programming still feels like a guessing game.
&lt;/h3&gt;

&lt;p&gt;If you expect a magic answer, some bullet points to get you out of trouble, I am sorry to disappoint you. I have none. I would give you my compassion, but that‚Äôs not going to help you anyway. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The truth is, you don‚Äôt need more tricks or new secret ways.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;What will benefit you right now, is to stop doing some of the things that are literally dragging you down. &lt;/p&gt;

&lt;p&gt;After working with dozens of developers, I made a list of the things that literally kill their progress. How many of them are you still doing?&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#1-doing-it-for-the-fun"&gt;
  &lt;/a&gt;
  1.) Doing it for the fun
&lt;/h1&gt;

&lt;p&gt;Why? Look, when you code for fun, you only do the fun part. The coding puzzles, the sexy features, the shiny stuff. And guess what? That is what all other developers out there love to do as well.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Many times, magic happens when you are not having fun. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Accept once for all that this coding thing is not a hobby, it is a profession. And it is not always going to be fun. Like anything in life, it has ugly parts. &lt;/p&gt;

&lt;p&gt;The road to expert developer involves legacy code, hidden errors and unclear requirements. But hidden bugs and not found HTTP codes will teach you more than a PhD in Computer Science. &lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#accept-that-hard-work-is-not-always-fun"&gt;
  &lt;/a&gt;
  Accept that hard work is not always fun.
&lt;/h5&gt;

&lt;h1&gt;
  &lt;a href="#2-listening-to-the-community"&gt;
  &lt;/a&gt;
  2.) Listening to the "community"
&lt;/h1&gt;

&lt;p&gt;If the first thing you do in the morning is read a newsletter from ‚Äògurus‚Äô recommending this and that other tool. No offence, but many are just trying to reinvent the wheel in order to self promote themselves. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#you-are-becoming-a-communitys-puppet"&gt;
  &lt;/a&gt;
  You are becoming a community‚Äôs puppet.
&lt;/h3&gt;

&lt;p&gt;Don‚Äôt get me wrong, as a developer you should pay attention to what others are doing. But jumping to the ‚Äúhot shit‚Äù wagon and not doing your own judgements is dangerous.&lt;/p&gt;

&lt;p&gt;Why? The things you read online are disconnected from the reality of your code. A nice library in one project can be a terrible choice for another project. &lt;/p&gt;

&lt;p&gt;Use your brain and take advice (particularly tech advice) with a bit of salt.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#3-fixing-it-later"&gt;
  &lt;/a&gt;
  3.) Fixing it ‚Äòlater‚Äô
&lt;/h1&gt;

&lt;p&gt;The one character trait all great programmers have in common is they live in the now. A piece of code needs refactoring, they do it now. There is a bug in the UI, they fix it now. The local environment is a bit slow, they optimize it now. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#great-developers-live-in-the-now"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Great developers live in the now.&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Great developers know very well that later translates to never. What I am asking you is to be honest with yourself.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-truth-is-you-wont-fix-it-later"&gt;
  &lt;/a&gt;
  &lt;strong&gt;The truth is, you won‚Äôt fix it later.&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;You won‚Äôt refactor it tomorrow. You won‚Äôt go over that algorithm book next week. &lt;a href="https://dev.to/dragosnedelcu/5-software-development-skills-that-will-put-you-in-the-top-3-of-software-developers-1k6b"&gt;If you want to be in the top 3%&lt;/a&gt;, you must start living in the now.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#4-winning-popularity-contests-on-twitter"&gt;
  &lt;/a&gt;
  4.) Winning popularity contests on Twitter
&lt;/h1&gt;

&lt;p&gt;There is a big popularity contest going on in the software development community and everyone wants to be part of it. They call it ‚Äúbeing active in the community‚Äù. In reality, it is more gossip and trend spotting than anything else. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lets-be-realyou-know-you-are-procrastinating"&gt;
  &lt;/a&gt;
  Let‚Äôs be real.You know you are procrastinating.
&lt;/h3&gt;

&lt;p&gt;You know the latest prefabricated 280 characters tweets about ‚Äúnot giving up‚Äù will not make you pass the next tech interview. Coding will.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#prefabricated-280-characters-tweets-about-not-giving-up-will-not-help-you-pass-the-next-tech-interview"&gt;
  &lt;/a&gt;
  Prefabricated 280 characters tweets about ‚Äúnot giving up‚Äù will not help you pass the next tech interview.
&lt;/h4&gt;

&lt;p&gt;Or the freaking JavaScript snippets. You don‚Äôt learn JavaScript on social media, you learn it on MDN. The sooner you opt-out of the 17 newsletters repeating the same and out of this mass distraction, the sooner you will be able to do some real work.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-secret-to-success-is-no-secret"&gt;
  &lt;/a&gt;
  &lt;strong&gt;The secret to success is no secret.&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;If you want to get far in this profession, spend less time on Twitter and more time on VS Code.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#5-having-a-pity-party"&gt;
  &lt;/a&gt;
  5.) Having a pity party
&lt;/h1&gt;

&lt;p&gt;If you think you are too old, too unqualified or too slow to be a successful developer, it is time for you to stop licking your wounds and get going.&lt;/p&gt;

&lt;p&gt;Just because you were not born without a keyboard around your neck, you did not start coding when you were 14 (whoever did?) or you have no formal degree doesn't mean you cannot succeed in this profession and &lt;a href="https://dev.to/dragosnedelcu/7-steps-to-become-an-expert-software-engineer-without-endless-online-courses-or-waiting-for-years-m8j"&gt;become an expert developer&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Yes, exposure to technology from an early age and a formal Computer Science degree does give you an advantage. And not having all these things means you will need to catch up.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#but-can-you-build-an-amazingly-successful-developer-career-even-though-you-dont-have-all-these-things-hell-you-can"&gt;
  &lt;/a&gt;
  But, can you build an amazingly successful developer career even though you don‚Äôt have all these things? Hell, you can.
&lt;/h3&gt;

&lt;p&gt;Remember, hard work beats talent every given day. Back to the code editor now.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#6-feeling-proud-of-writing-crappy-code"&gt;
  &lt;/a&gt;
  6.) Feeling proud of writing crappy code
&lt;/h1&gt;

&lt;p&gt;You spend three hours writing some spaghetti code. &lt;br&gt;
Functionality is split over 15 different files, all classes are stitched together and there are no tests. But hey, it works. And it is almost 5 in the evening, time to close the laptop and go home. Really?&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#the-it-works-mentality-is-not-cool-it-is-selfindulgence"&gt;
  &lt;/a&gt;
  &lt;strong&gt;The ‚Äú&lt;em&gt;it works mentality&lt;/em&gt;‚Äù is not cool, it is self-indulgence.&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;You see, with time the buts accumulate. The one line of spaghetti code becomes a legacy monster, and a lazy evening becomes a failed programmer career. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#in-real-life-things-work-until-they-dont"&gt;
  &lt;/a&gt;
  In real life, things work until they don't.
&lt;/h3&gt;

&lt;p&gt;If nobody can read it, extend it and maintain it, it doesn't work. Be honest with yourself and stop feeling proud of poorly written crap. Professional developers have high standards.  &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#7-writing-great-code-for-the-wrong-people"&gt;
  &lt;/a&gt;
  7.) Writing great code for the wrong people
&lt;/h1&gt;

&lt;p&gt;Michelangelo was working for the Medici family. Same for Leonardo Da Vinci and many of the best artists that ever lived.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-quality-of-your-code-software-career-and-life-depends-as-much-on-your-skills-as-on-the-people-that-employ-you"&gt;
  &lt;/a&gt;
  The quality of your code, software career and life depends as much on your skills as on the people that employ you.
&lt;/h3&gt;

&lt;p&gt;You might be into TDD, BDD and clean code. But if the company you work for wants things fast and wants things now, good luck clean coding on the weekends. &lt;/p&gt;

&lt;p&gt;We tend to replicate what we see around us. So if what you have around you is a lack of professional standards and short term mentalities, then you will do just that. &lt;/p&gt;

&lt;p&gt;You can‚Äôt write great code for the wrong people.&lt;/p&gt;

&lt;p&gt;Don‚Äôt lie to yourself, companies don‚Äôt change, people rarely do. &lt;a href="https://dev.to/dragosnedelcu/how-to-escape-a-soul-crushing-developer-job-in-3-simple-steps-3dnb"&gt;You must find a better programming job&lt;/a&gt;. One where the other developers you work with share your professional standards.&lt;/p&gt;

&lt;p&gt;If you are in a bad place, &lt;a href="https://dev.to/dragosnedelcu/should-you-quit-your-software-developer-job-5-alternatives-for-struggling-developers-2a5e"&gt;check your options&lt;/a&gt; and pack your bags.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#8-starting-3-side-projects-finishing-none"&gt;
  &lt;/a&gt;
  8.) Starting 3 side projects, finishing none
&lt;/h1&gt;

&lt;p&gt;Every day I get approached by developers that struggle to finish things. They try to do too much, they underestimate efforts or they simply procrastinate. In my experience, to win the race you must first finish. And to finish, you need to focus on one thing at a time. &lt;/p&gt;

&lt;p&gt;So if you are working 40 hours a week you need to be realistic about the time you can dedicate to learning outside work and your ability to take on new projects.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#your-time-is-limited-pick-your-battles-carefully"&gt;
  &lt;/a&gt;
  Your time is limited. Pick your battles carefully.
&lt;/h3&gt;

&lt;p&gt;Starting more than one or two side projects is nuts. First because if you won‚Äôt finish your side projects, you better not start them at all.Second because at best you will end up burned out with some extra folders on your desktop. &lt;/p&gt;

&lt;p&gt;The same applies to Udemy courses, certifications and coding challenges. Pick your battles. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#9-obsessing-over-the-tech-stack"&gt;
  &lt;/a&gt;
  9.) Obsessing over the tech stack
&lt;/h1&gt;

&lt;p&gt;Probably one of the most common questions that come in my inbox: What technology should I learn next? What is the ‚Äòhottest‚Äô thing I can add to my knowledge?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#my-answer-the-tech-stack-doesnt-really-matter"&gt;
  &lt;/a&gt;
  My answer: the tech stack doesn‚Äôt really matter.
&lt;/h3&gt;

&lt;p&gt;It doesn‚Äôt matter because you are a programmer, not a walking GitHub repository. And it does not matter because the tech stack always changes. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#the-tech-stack-doesnt-really-matter-because-the-tech-stack-always-changes"&gt;
  &lt;/a&gt;
  The tech stack doesn‚Äôt really matter, because the tech stack always changes.
&lt;/h4&gt;

&lt;p&gt;The tech stack changes all the time. Stop obsessing about the details. Whether the next big thing is going to be Svelte or Nuxt. Is still some HTML document travelling over HTTP.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-happens-in-between-can-change-but-the-fundamentals-always-stay-the-same"&gt;
  &lt;/a&gt;
  What happens in between can change, but the fundamentals always stay the same.
&lt;/h3&gt;

&lt;h1&gt;
  &lt;a href="#10-trying-to-be-the-next-uncle-bob"&gt;
  &lt;/a&gt;
  10.) Trying to be the next ‚Äòuncle Bob‚Äô
&lt;/h1&gt;

&lt;p&gt;From time to time some developer (usually male in their 20‚Äôies) approaches me and starts lecturing on clean code. &lt;/p&gt;

&lt;p&gt;Look, is a good book written 20 years ago in a field where things change every year. Most of it covers Java syntax. And no offence but if you are reading this article, you are probably late already. &lt;/p&gt;

&lt;p&gt;Same for Martin Fowler and all the other greats of the past decade. These people are work-obsessed veterans, maniacs and genetic freaks. They have been in the software industry for years now and got into it when the internet was not a thing yet. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#you-are-not-the-gurus-you-should-not-try-to-be-them-not-by-reading-a-freaking-book-focus-on-writing-good-code-and-getting-better-at-it"&gt;
  &lt;/a&gt;
  You are not the gurus. You should not try to be them. Not by reading a freaking book. Focus on writing good code, and getting better at it.
&lt;/h4&gt;

&lt;p&gt;Stop trying to emulate the ‚Äògurus‚Äô. &lt;a href="https://dev.to/dragosnedelcu/the-3-steps-to-technical-excellence-as-a-software-developer-4i8"&gt;Work hard&lt;/a&gt; and form your own opinion on technical topics.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#11-giving-up"&gt;
  &lt;/a&gt;
  11.) Giving up
&lt;/h1&gt;

&lt;p&gt;By now you should probably be a bit depressed. Oh, another article telling me how much I don‚Äôt know. Funny enough I am doing this on a positive note. During my developer journey, it was only when I started to be honest with myself that I really took action. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#there-is-no-way-to-sugarcoat-the-price-of-success"&gt;
  &lt;/a&gt;
  There is no way to sugarcoat the price of success.
&lt;/h4&gt;

&lt;p&gt;We all made mistakes. We all were sloppy in our pull requests and we googled a bit too much. The big difference between the developers that are now working at top tech companies as technical leaders in their domains and the ones still ‚Äòtagging along‚Äô is they persisted. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-one-way-to-lose-is-quitting"&gt;
  &lt;/a&gt;
  The one way to lose is quitting.
&lt;/h3&gt;

&lt;p&gt;Is the people that show up every day and go through the daily hardships of being a software developer that make it in this industry. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#great-developers-persist-again-and-again"&gt;
  &lt;/a&gt;
  Great developers persist again and again.
&lt;/h4&gt;

&lt;p&gt;This is the one thing all our mentees have in common at CodeWithDragos is persistence, and that is why I have no doubts about their success (our world-class training program also helps :).&lt;/p&gt;

&lt;p&gt;If you are an ambitious software developer looking to get to the next level, I am confident this article will definitely help you get rid of stuff you should not be doing and all the noise out there. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;And if you are truly interested in fulfilling your full potential as a programmer, then I recorded a free video case study where I explain the exact steps you should follow to build extreme confidence in your technical skills and get paid what you deserve.&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#you-can-watch-it-here-for-free"&gt;
  &lt;/a&gt;
  &lt;a href="https://bit.ly/3w76Mar"&gt;&lt;strong&gt;You can watch it here for free.&lt;/strong&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;In it you will learn: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The Biggest Mistake Most Software Developers Are Making When It Comes To Their Technical Growth and Earning More The&lt;/li&gt;
&lt;li&gt;Three Things That Highly Paid Programmers Use To Build Extreme Confidence In Their Technical Skills&lt;/li&gt;
&lt;li&gt;The Proven ‚Äú4-Step-System‚Äù That Will Help You And Put Your Dev Career On Autopilot And How You Can Use It Right Now&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#click-here-now-to-watch-the-free-video"&gt;
  &lt;/a&gt;
  &lt;a href="https://bit.ly/3w76Mar"&gt;&lt;strong&gt;Click here now to watch the free video!&lt;/strong&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Best of success!üí™&lt;br&gt;
Dragos Nedelcu&lt;/p&gt;

&lt;p&gt;&lt;em&gt;P.S. Like thousands of other ambitious software developers you are probably craving unbiased advice about what it really takes to build long-lasting confidence in your technical skills, become an expert developer and earn more. If so, then I invite you to follow me on &lt;a href="https://www.linkedin.com/in/dragosnedelcu/"&gt;LinkedIn&lt;/a&gt; or &lt;a href="https://twitter.com/dragosgn"&gt;Twitter&lt;/a&gt; :) I will make sure to keep delivering you fresh pieces of wisdom straight from the trenches of software development. I will also make you get off your but and take action from time to time!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Ôªø&lt;/p&gt;

</description>
      <category>programming</category>
      <category>career</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Creating web music player in Howler.js and JQuery</title>
      <author>Jahongir Sobirov</author>
      <pubDate>Wed, 07 Jul 2021 10:00:40 +0000</pubDate>
      <link>https://dev.to/jahongir2007/creating-web-music-player-in-howler-js-and-jquery-489l</link>
      <guid>https://dev.to/jahongir2007/creating-web-music-player-in-howler-js-and-jquery-489l</guid>
      <description>&lt;p&gt;Today we will learn with you how to create a simple music player in Howler.js and JQuery libraries. I recommend howler.js if you want to put a song on your website. Let's get to work! We can write these codes in our HTML file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Web Music Player&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://unpkg.com/howler@2.2.3/dist/howler.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"./sound.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"play"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Play&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt; &lt;span class="c"&gt;&amp;lt;!--Play button--&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"pause"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Pause&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt; &lt;span class="c"&gt;&amp;lt;!--Pause button--&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"voladd"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Vol+&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt; &lt;span class="c"&gt;&amp;lt;!--Add volume button--&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"volmin"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Vol-&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt; &lt;span class="c"&gt;&amp;lt;!--SUbtract volume button--&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In Howler.js we write the song file and the volume:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;howler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Howl&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
   &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./auf.mp3&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="c1"&gt;// file name&lt;/span&gt;
   &lt;span class="na"&gt;volume&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt; &lt;span class="c1"&gt;// volue&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We will add functions in JQuery to the keys written in our HTML file above.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;ready&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;

   &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#play&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){});&lt;/span&gt; &lt;span class="c1"&gt;// this function for play button&lt;/span&gt;
   &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#pause&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){});&lt;/span&gt; &lt;span class="c1"&gt;// this function for pause button&lt;/span&gt;
   &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#voladd&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){});&lt;/span&gt; &lt;span class="c1"&gt;// this function for add volume button&lt;/span&gt;
   &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#volmin&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){});&lt;/span&gt; &lt;span class="c1"&gt;// this function for subtract volume button&lt;/span&gt;

&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we will combine the code written in Howler.js into our file where these JQuery codes are written and attach several methods of Howler.js to the functions written in JQuery for our music player.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;ready&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;

   &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;howler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Howl&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./auf.mp3&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; 
      &lt;span class="na"&gt;volume&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt; 
   &lt;span class="p"&gt;});&lt;/span&gt;

   &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#play&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
      &lt;span class="nx"&gt;howler&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;play&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// this method for playing music&lt;/span&gt;
   &lt;span class="p"&gt;});&lt;/span&gt;

   &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#pause&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
      &lt;span class="nx"&gt;howler&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pause&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// this method for pause music&lt;/span&gt;
   &lt;span class="p"&gt;});&lt;/span&gt; 

   &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#voladd&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
      &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;vol&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;howler&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;volume&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// this method get currently volume music&lt;/span&gt;
      &lt;span class="nx"&gt;vol&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// adding volume&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;vol&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
         &lt;span class="nx"&gt;vol&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// If the volume is greater than 1, it is equal to 1&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nx"&gt;howler&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;volume&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;vol&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// This method determines the volume&lt;/span&gt;
   &lt;span class="p"&gt;});&lt;/span&gt; 

   &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#volmin&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
            &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;vol&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;howler&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;volume&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// this method get currently volume music&lt;/span&gt;
      &lt;span class="nx"&gt;vol&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// subtracting volume&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;vol&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
         &lt;span class="nx"&gt;vol&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// If the volume is smaller than 0, it is equal to 0&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nx"&gt;howler&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;volume&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;vol&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// This method determines the volume&lt;/span&gt;
   &lt;span class="p"&gt;});&lt;/span&gt; 

&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can see the results on &lt;a href="https://github.com/Jahongir2007/web-music-player"&gt;github&lt;/a&gt;. I hope you enjoyed this article.&lt;/p&gt;

</description>
      <category>jquery</category>
      <category>howlerjs</category>
      <category>tutorial</category>
      <category>javascript</category>
    </item>
    <item>
      <title>How to create a Slack-like chatbox with TalkJS Themes</title>
      <author>Jamie</author>
      <pubDate>Wed, 07 Jul 2021 09:46:18 +0000</pubDate>
      <link>https://dev.to/talkjs/how-to-create-a-slack-like-chatbox-with-talkjs-themes-34bf</link>
      <guid>https://dev.to/talkjs/how-to-create-a-slack-like-chatbox-with-talkjs-themes-34bf</guid>
      <description>&lt;p&gt;Creating a chat function in your app can be a long and difficult process, thankfully the &lt;a href="https://talkjs.com/"&gt;TalkJS chat API&lt;/a&gt; makes that easy, we can even customise it to make it look in keeping with our app. We'll explore how we can recreate a chat UI that looks similar to Slack.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nqZpKT0P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8kb6ol0ipa1uj671fad4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nqZpKT0P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8kb6ol0ipa1uj671fad4.png" alt="Slack type UI theme built with TalkJS"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-a-new-theme"&gt;
  &lt;/a&gt;
  Create a new theme
&lt;/h2&gt;

&lt;p&gt;Head over to the 'Theme Editor' and create a new theme and name it something useful to you, in this case, we'll call it 'slack-like'.&lt;/p&gt;

&lt;p&gt;Then we should apply this theme to a Role since different roles can have different themes. You can learn a bit more about roles in the &lt;a href="https://talkjs.com/docs/Reference/Concepts/Roles.html"&gt;TalkJS Docs&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#editing-layout"&gt;
  &lt;/a&gt;
  Editing Layout
&lt;/h2&gt;

&lt;p&gt;We need to make our chatbox expand to fill the space available. Go to the Theme Editor, select your theme and select &lt;strong&gt;Chatbox&lt;/strong&gt; and we will just remove the value for maxWidth, since we want it to fill the available area.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8xbaot-P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2g4nvirzentou1a6n1fo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8xbaot-P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2g4nvirzentou1a6n1fo.png" alt="Layout form in TalkJS Admin"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#chat-header"&gt;
  &lt;/a&gt;
  Chat Header
&lt;/h2&gt;

&lt;p&gt;The Header is quite straightforward, it's quite plain with a Title, which can be user names or the chat subject, along with an avatar if it's a single user.&lt;/p&gt;

&lt;p&gt;In the theme editor, select your theme to edit, then open the component called &lt;strong&gt;ChatHeader&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;Let's change some styles first, head down to the &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; section and change the background color of the header class, we'll add a bottom border in too.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.header&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;4.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#D0D8DC&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;flex-shrink&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now adjust the &lt;code&gt;.title&lt;/code&gt; class, which show's either the chat's subject, user or users. We'll make it slightly larger and make the text black.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.title&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;text-overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ellipsis&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;white-space&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;nowrap&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.25rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You should end up with something like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hQJo21u2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e1dloulcese6ga0922is.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hQJo21u2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e1dloulcese6ga0922is.png" alt="TalkJS header UI with an avatar and title"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finally we want to only show the image if it's a singular user we're chatting to. We can use a conditional for this. &lt;/p&gt;

&lt;p&gt;At the top of the ChatHeader component, you'll see a large comment which contains the available data for this component. There, you'll see a &lt;code&gt;Conversation&lt;/code&gt; object with a property called &lt;code&gt;isGroupChat&lt;/code&gt;. Sounds perfect for what we want to achieve, which is only to show an avatar if it's a singular chat, not a group chat.&lt;/p&gt;

&lt;p&gt;Scroll down to the markup and look for where we show the image, in this case, &lt;code&gt;&amp;lt;ConversationImage conversation="{{conversation }}" /&amp;gt;&lt;/code&gt;. On the parent &lt;code&gt;div&lt;/code&gt; we can add our condition.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="nt"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;"image"&lt;/span&gt; &lt;span class="nt"&gt;t&lt;/span&gt;&lt;span class="nd"&gt;:if&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;"{{conversation.isGroupChat | is_falsy}}"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;ConversationImage&lt;/span&gt; &lt;span class="nt"&gt;conversation&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;"{{conversation }}"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We've used some &lt;code&gt;t:if="{{ ... }}"&lt;/code&gt; attributes here, these are a part of the &lt;a href="https://talkjs.com/docs/Features/Themes/Editing_Component_Templates/Template_Language_Reference.html"&gt;TalkJS template language&lt;/a&gt;, if the value is false then this whole element will not be included in the DOM.&lt;/p&gt;

&lt;p&gt;Now if we have if the conversation is a group chat we won't show the image.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6ZUrd5uD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5hsszghv4zwnhvpzg84o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6ZUrd5uD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5hsszghv4zwnhvpzg84o.png" alt="TalkJS header UI with just a title for group chats"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#chat-messages"&gt;
  &lt;/a&gt;
  Chat Messages
&lt;/h2&gt;

&lt;p&gt;Currently, chat messages are in message bubbles with avatars to the side. We want our messages to display avatars to the left with the name and message next to it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#avatars"&gt;
  &lt;/a&gt;
  Avatars
&lt;/h3&gt;

&lt;p&gt;We're going to make the avatars rounded rectangles, rather than circles ‚Äî feel free to skip this step if you'd like to keep them circular. &lt;/p&gt;

&lt;p&gt;Open the &lt;strong&gt;Avatar&lt;/strong&gt; component in the Theme Editor and make some changes.&lt;/p&gt;

&lt;p&gt;We can go ahead and remove the border, and then set a border-radius  to something to resemble a rounded rectangle, maybe &lt;code&gt;4px&lt;/code&gt; is enough. We'll also make the size slightly smaller too.&lt;/p&gt;

&lt;p&gt;You'll end up with some CSS in that file that looks like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.avatar&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;cover&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-repeat&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;no-repeat&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;136&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;153&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;166&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;0.15&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;4px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="c"&gt;/* prevent the avatar from shrinking if the contents next to it is large */&lt;/span&gt;
  &lt;span class="nl"&gt;flex-shrink&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="c"&gt;/* Align to the start (top in this case) but because we use align-items: center
     on the parent the message will be vertically centered, unless it is taller 
     than this Avatar */&lt;/span&gt;
  &lt;span class="nl"&gt;align-self&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex-start&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c"&gt;/* Avatar width is also used when sizing message bubbles, be sure to update
     the width in UserMessage if needed */&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You'll notice this &lt;strong&gt;Avatar&lt;/strong&gt; also represents the avatar in our &lt;strong&gt;ChatHeader&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#user-message"&gt;
  &lt;/a&gt;
  User Message
&lt;/h3&gt;

&lt;p&gt;Each message is wrapped in it's own container and in there we have &lt;strong&gt;Avatar&lt;/strong&gt; and &lt;strong&gt;MessageBody&lt;/strong&gt; (which we'll edit after this section). This will form the new layout for each message row.&lt;/p&gt;

&lt;p&gt;For each row we want a &lt;code&gt;div&lt;/code&gt; with some classes on and we can use some of the data from each message to add an additional class if the data meets a condition; in this instance, we will add a class called 'previous-same' if the message sent before this one was also the same sender.&lt;/p&gt;

&lt;p&gt;By using &lt;code&gt;&amp;lt;t:set ... /&amp;gt;&lt;/code&gt; we can set a new variable based off of some values. Here we use it so we don't have to type out the full object since we are going to be reusing the previousSenderId later too, but we'll get to that.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;t:set&lt;/span&gt; 
    &lt;span class="na"&gt;t:if=&lt;/span&gt;&lt;span class="s"&gt;"{{ previousMessage and previousMessage.sender }}"&lt;/span&gt; 
    &lt;span class="na"&gt;previousSenderId=&lt;/span&gt;&lt;span class="s"&gt;"{{ previousMessage.sender.id }}"&lt;/span&gt;
&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"message-container {{ [sender.id](http://sender.id/) == previousSenderId | then: 'previous-same' }}"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; 
    ... 
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then we can use these classes to set some styles for spacing between each row. You can use whatever values you like for the margin values.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.message-container&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.25rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.message-container.previous-same&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.25rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Inside the container, we will set the layout of the contents, which is an avatar, the sender's name, the timestamp and the message body.&lt;/p&gt;

&lt;p&gt;So let's break this section down, in the &lt;code&gt;.message-container&lt;/code&gt; we will have another div that we'll give a class, and then some conditional classes too; &lt;code&gt;{{ body.type }}&lt;/code&gt; will attach some classes that we could use to style some messages differently, e.g 'file', 'location' or 'text'. You can find out all the variables and components at the top of the 'UserMessage' file as a comment.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"message-row {{ body.type }}"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    ...
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's get some content in this row. We want to display an avatar, but if that user has sent multiple messages we just want to show it once.&lt;/p&gt;

&lt;p&gt;By setting &lt;code&gt;t:if&lt;/code&gt; we can conditionally show the avatar depending on the outcome of the passed data, in this case, if the current sender is not the same as the previous sender. The variable we set earlier.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"message-row {{ body.type }}"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="c"&gt;&amp;lt;!-- show the avatar, but only if the previous message was by a different sender --&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;Avatar&lt;/span&gt; 
        &lt;span class="na"&gt;t:if=&lt;/span&gt;&lt;span class="s"&gt;"{{ sender.id != previousSenderId }}"&lt;/span&gt;
    &lt;span class="na"&gt;photoUrl=&lt;/span&gt;&lt;span class="s"&gt;"{{ sender.photoUrl }}"&lt;/span&gt;
  &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And some styles for that section could be:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.message-row&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c"&gt;/* Align the avatar and the message centrally, but if the message's height 
       is greater than the avatar we will align it to the top
       -- See Avatar.template for how this is achieved */&lt;/span&gt;
    &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We should show which user has sent this message too, but again, we don't want to show the name every time if they send 5 messages. So we can reuse our previousSenderId variable again here. We'll also display what time that message was sent too.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"message-row {{ body.type }}"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="c"&gt;&amp;lt;!-- show the avatar, but only if the previous message was by a different sender --&amp;gt;&lt;/span&gt;.
  &lt;span class="nt"&gt;&amp;lt;Avatar&lt;/span&gt;
    &lt;span class="na"&gt;t:if=&lt;/span&gt;&lt;span class="s"&gt;"{{ sender.id != previousSenderId }}"&lt;/span&gt;
    &lt;span class="na"&gt;photoUrl=&lt;/span&gt;&lt;span class="s"&gt;"{{ sender.photoUrl }}"&lt;/span&gt;
  &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"message"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"message-header"&lt;/span&gt; &lt;span class="na"&gt;t:if=&lt;/span&gt;&lt;span class="s"&gt;"{{ sender.id != previousSenderId }}"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"message-author"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; {{ sender.name }} &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"message-timestamp"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;TimeAgo&lt;/span&gt; &lt;span class="na"&gt;timestamp=&lt;/span&gt;&lt;span class="s"&gt;"{{ timestamp }}"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And some styles for that could be:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.message&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;word-wrap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;break-word&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;/* in case there are long links */&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#111&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.message-header&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;padding-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.message-author&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin-right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.75rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.message-timestamp&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.85em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#4E606A&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A message row without a message isn't very useful, let's add in the message body by using the built-in MessageBody component, we'll pass it the relevant properties too.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"message-row {{ body.type }}"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="c"&gt;&amp;lt;!-- show the avatar, but only if the previous message was by a different sender --&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;Avatar&lt;/span&gt;
    &lt;span class="na"&gt;t:if=&lt;/span&gt;&lt;span class="s"&gt;"{{ sender.id != previousSenderId }}"&lt;/span&gt;
    &lt;span class="na"&gt;photoUrl=&lt;/span&gt;&lt;span class="s"&gt;"{{ sender.photoUrl }}"&lt;/span&gt;
  &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"message"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"message-header"&lt;/span&gt; &lt;span class="na"&gt;t:if=&lt;/span&gt;&lt;span class="s"&gt;"{{ sender.id != previousSenderId }}"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"message-author"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; {{ sender.name }} &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"message-timestamp"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;TimeAgo&lt;/span&gt; &lt;span class="na"&gt;timestamp=&lt;/span&gt;&lt;span class="s"&gt;"{{ timestamp }}"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;MessageBody&lt;/span&gt;
      &lt;span class="na"&gt;body=&lt;/span&gt;&lt;span class="s"&gt;"{{ body }}"&lt;/span&gt;
      &lt;span class="na"&gt;timestamp=&lt;/span&gt;&lt;span class="s"&gt;"{{ timestamp }}"&lt;/span&gt;
      &lt;span class="na"&gt;floatTimestamp=&lt;/span&gt;&lt;span class="s"&gt;"auto"&lt;/span&gt;
      &lt;span class="na"&gt;showStatus=&lt;/span&gt;&lt;span class="s"&gt;"{{ sender.isMe }}"&lt;/span&gt;
      &lt;span class="na"&gt;isLongEmailMessage=&lt;/span&gt;&lt;span class="s"&gt;"{{isLongEmailMessage}}"&lt;/span&gt;
    &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Lets see how this looks&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wD9A-KcZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f2hs6wmiu77xi5d6c0fq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wD9A-KcZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f2hs6wmiu77xi5d6c0fq.png" alt="UI showing 2 messages, &amp;quot;Hey cool we have a fluid chat&amp;quot;, &amp;quot;here's another message&amp;quot;, but the messages don't line up how you'd expect"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hmm, the second message we sent is out of alignment with the messages, but that's because we aren't displaying an avatar here, we can fix that by adding some padding on those messages that don't have avatars. Let's use a conditional class on the message to fix that problem.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"message {{ sender.id == previousSenderId | then: 'has-avatar-spacer' }}"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    ...
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And the CSS we just need to add some padding-left which is the same width as our Avatar from earlier.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="c"&gt;/* Avatar spacer is for when multiple messages are sent by the same user but 
   only 1 avatar is displayed, so we need a space  */&lt;/span&gt;
&lt;span class="nc"&gt;.message.has-avatar-spacer&lt;/span&gt;  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c"&gt;/* Avatar width (see Avatar component) */&lt;/span&gt;
    &lt;span class="nl"&gt;padding-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This looks aligned and much tidier. Now we can adjust the spacing between messages since that's pretty large right now.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nah494eC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hqwice1wncf1yptmzg2s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nah494eC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hqwice1wncf1yptmzg2s.png" alt="Chat messages with alignment fixed"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We can just reuse our previousSenderId variable again to fix this, let's add a conditional class to the 'message-container' div.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"message-container {{ sender.id == previousSenderId | then: 'previous-same' }}"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;...&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then we can set the margin to be smaller with this class:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.message-container&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.25rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.message-container.previous-same&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.25rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0rSbfO8o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uyb2vfo0sb6hg5qqxqxf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0rSbfO8o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uyb2vfo0sb6hg5qqxqxf.png" alt="Chat messages with spacing tightened up"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It's better but the gap is still large, that's because each MessageBody has its own styles, and theres some default padding on there. &lt;/p&gt;

&lt;p&gt;Open up the MessageBody subcomponent and remove some of the things we probably don't need anymore like the time stamp, since we have that on the UserMessage instead. We'll also adjust the padding here since we don't have 'bubbles' around each message anymore.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;template&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;t:if=&lt;/span&gt;&lt;span class="s"&gt;"{{ body.type == 'location' }}"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"thumbnail"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;Thumbnail&lt;/span&gt; &lt;span class="na"&gt;location=&lt;/span&gt;&lt;span class="s"&gt;"{{ body.location }}"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt;
    &lt;span class="na"&gt;t:else-if=&lt;/span&gt;&lt;span class="s"&gt;"{{ body.type == 'file' and body.hasThumbnail }}"&lt;/span&gt;
    &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"thumbnail"&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;Thumbnail&lt;/span&gt; &lt;span class="na"&gt;file=&lt;/span&gt;&lt;span class="s"&gt;"{{ body.file }}"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;t:set&lt;/span&gt; &lt;span class="na"&gt;t:if=&lt;/span&gt;&lt;span class="s"&gt;"{{ body.type == 'file' }}"&lt;/span&gt; &lt;span class="na"&gt;filetype=&lt;/span&gt;&lt;span class="s"&gt;"{{ body.file.type }}"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;t:if=&lt;/span&gt;&lt;span class="s"&gt;"{{ isLongEmailMessage }}"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;small&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;i&amp;gt;&amp;lt;Icon&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"email"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt; {{ strings.MESSAGE_SENT_VIA_EMAIL }}&lt;span class="nt"&gt;&amp;lt;/i&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/small&amp;gt;&amp;lt;br&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&amp;lt;br&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;t:if=&lt;/span&gt;&lt;span class="s"&gt;"{{ body.type == 'location' }}"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"message-text"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt;
        &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://maps.google.com/maps?q={{ body.location }}"&lt;/span&gt;
        &lt;span class="na"&gt;target=&lt;/span&gt;&lt;span class="s"&gt;"_blank"&lt;/span&gt;
        &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"noopener"&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        https://maps.google.com/maps?q={{ body.location }}
      &lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;t:if=&lt;/span&gt;&lt;span class="s"&gt;"{{ body.type == 'file' }}"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"message-text"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt;
        &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"download-link"&lt;/span&gt;
        &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"{{ body.file.url }}"&lt;/span&gt;
        &lt;span class="na"&gt;target=&lt;/span&gt;&lt;span class="s"&gt;"_blank"&lt;/span&gt;
        &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"noopener noreferrer"&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;Icon&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"download"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;span&amp;gt;&lt;/span&gt;{{ body.file.formattedFilename }}&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"filesize"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; ({{ body.file.size | filesize }})&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;t:if=&lt;/span&gt;&lt;span class="s"&gt;"{{ body.type == 'text' }}"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"message-text"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      {{ body.formattedText }}
    &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;t:if=&lt;/span&gt;&lt;span class="s"&gt;"{{ body.type == 'typing-indicator' }}"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"typing-indicator"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;TypingIndicator&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;style &lt;/span&gt;&lt;span class="na"&gt;scoped&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nc"&gt;.text&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.25rem&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;white-space&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pre-wrap&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nc"&gt;.text&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;currentColor&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nc"&gt;.thumbnail&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;200px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;400px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#e7ecee&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nc"&gt;.download-link&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;word-break&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;break-all&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;text-decoration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nc"&gt;.download-link&lt;/span&gt; &lt;span class="nt"&gt;span&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;text-decoration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;underline&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nc"&gt;.filesize&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;white-space&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;nowrap&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.75rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#message-field"&gt;
  &lt;/a&gt;
  Message Field
&lt;/h2&gt;

&lt;p&gt;Finally let's set our input border color to be a bit darker, we do that in the &lt;strong&gt;layout&lt;/strong&gt; section under &lt;strong&gt;Message field:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Wqs2rZQo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/21nekt7ndjmojiz6sjg4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wqs2rZQo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/21nekt7ndjmojiz6sjg4.png" alt="UI for editing a border color via a text input"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lets-check-it-out-now"&gt;
  &lt;/a&gt;
  Let's check it out now!
&lt;/h2&gt;

&lt;p&gt;Looks pretty good! Full code snippets for each file/section are below if you would rather just copy/paste into your own theme.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nqZpKT0P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8kb6ol0ipa1uj671fad4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nqZpKT0P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8kb6ol0ipa1uj671fad4.png" alt="Slack type UI theme built with TalkJS"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#code-snippets"&gt;
  &lt;/a&gt;
  Code Snippets
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#avatar"&gt;
  &lt;/a&gt;
  Avatar
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;template&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"avatar float-{{ float }}"&lt;/span&gt; 
         &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;"background-image: url('{{ photoUrl }}')"&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;style &lt;/span&gt;&lt;span class="na"&gt;scoped&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nc"&gt;.avatar&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;cover&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background-repeat&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;no-repeat&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background-position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;136&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;153&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;166&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;0.15&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;4px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c"&gt;/* prevent the avatar from shrinking if the contents next to it is large */&lt;/span&gt;
    &lt;span class="nl"&gt;flex-shrink&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c"&gt;/* Align to the start (top in this case) but because we use align-items: center
       on the parent the message will be vertically centered, unless it is taller 
       than this Avatar */&lt;/span&gt;
    &lt;span class="nl"&gt;align-self&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex-start&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c"&gt;/* Avatar width is also used when sizing message bubbles, be sure to update
       the width in UserMessage if needed */&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#chatheader"&gt;
  &lt;/a&gt;
  ChatHeader
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;template&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;header&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"header"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;SearchBox&lt;/span&gt; &lt;span class="na"&gt;t:if=&lt;/span&gt;&lt;span class="s"&gt;"{{ showSearchBox }}"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"search"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;t:else&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"inner"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"content"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"image"&lt;/span&gt; &lt;span class="na"&gt;t:if=&lt;/span&gt;&lt;span class="s"&gt;"{{conversation.isGroupChat | is_falsy}}"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;ConversationImage&lt;/span&gt; &lt;span class="na"&gt;conversation=&lt;/span&gt;&lt;span class="s"&gt;"{{conversation }}"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;t:set&lt;/span&gt; &lt;span class="na"&gt;names=&lt;/span&gt;&lt;span class="s"&gt;"{{ conversation.others | map: 'name' | join: ', ' }}"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;t:if=&lt;/span&gt;&lt;span class="s"&gt;"{{ conversation.formattedSubject }}"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"info"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"title"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;{{ conversation.formattedSubject }}&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"subtitle"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;{{ names }}&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;t:else&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"info"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"title"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;{{ names }}&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"actions"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;SearchButton&lt;/span&gt; &lt;span class="na"&gt;t:if=&lt;/span&gt;&lt;span class="s"&gt;"{{ showSearchButton }}"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"action-button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;Icon&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"search"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/SearchButton&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;CloseButton&lt;/span&gt; &lt;span class="na"&gt;t:if=&lt;/span&gt;&lt;span class="s"&gt;"{{ showCloseButton }}"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"action-button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;Icon&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"close"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/CloseButton&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/header&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;style &lt;/span&gt;&lt;span class="na"&gt;scoped&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nc"&gt;.header&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;4.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#D0D8DC&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;flex-shrink&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.inner&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;flex-grow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;flex-basis&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding-right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;min-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.content&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;flex-grow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;min-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.image&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;45px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;flex-shrink&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin-right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.25rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.info&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;flex-grow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;flex-basis&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;min-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.actions&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;flex-shrink&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.title&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;text-overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ellipsis&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;white-space&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;nowrap&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.25rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.subtitle&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;text-overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ellipsis&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;white-space&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;nowrap&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.actions&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.action-button&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c"&gt;/* removing the browser's default button styles: */&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;outline&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;inherit&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;17&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;17&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;17&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.4&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.2s&lt;/span&gt; &lt;span class="n"&gt;ease-out&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c"&gt;/* Increase the tap size of the button */&lt;/span&gt;
  &lt;span class="nl"&gt;box-sizing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;content-box&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.75rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-0.75rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.action-button&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nc"&gt;.action-button&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;margin-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.action-button&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;17&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;17&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;17&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.8&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.search&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;flex-grow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#usermessage"&gt;
  &lt;/a&gt;
  UserMessage
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;template&amp;gt;&lt;/span&gt;
    &lt;span class="c"&gt;&amp;lt;!-- set this to `false` to hide the avatars besides messages --&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;t:set&lt;/span&gt; &lt;span class="na"&gt;showAvatars=&lt;/span&gt;&lt;span class="s"&gt;"{{true}}"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;t:set&lt;/span&gt; &lt;span class="na"&gt;t:if=&lt;/span&gt;&lt;span class="s"&gt;"{{ previousMessage and previousMessage.sender }}"&lt;/span&gt; &lt;span class="na"&gt;previousSenderId=&lt;/span&gt;&lt;span class="s"&gt;"{{ previousMessage.sender.id }}"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"message-container {{ sender.id == previousSenderId | then: 'previous-same' }}"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"message-row {{ body.type }}"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

            &lt;span class="c"&gt;&amp;lt;!-- show the avatar, but only if the previous message was by a different sender --&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;Avatar&lt;/span&gt; &lt;span class="na"&gt;t:if=&lt;/span&gt;&lt;span class="s"&gt;"{{ sender.id != previousSenderId }}"&lt;/span&gt;
                &lt;span class="na"&gt;photoUrl=&lt;/span&gt;&lt;span class="s"&gt;"{{ sender.photoUrl }}"&lt;/span&gt;
            &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"message {{ sender.id == previousSenderId | then: 'has-avatar-spacer' }} {{ body.hasThumbnail | then: 'has-thumbnail' }}"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"message-header"&lt;/span&gt; &lt;span class="na"&gt;t:if=&lt;/span&gt;&lt;span class="s"&gt;"{{ sender.id != previousSenderId }}"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"message-author"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                        {{ sender.name }}
                    &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"message-timestamp"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;TimeAgo&lt;/span&gt; &lt;span class="na"&gt;timestamp=&lt;/span&gt;&lt;span class="s"&gt;"{{ timestamp }}"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

                &lt;span class="nt"&gt;&amp;lt;MessageBody&lt;/span&gt; &lt;span class="na"&gt;body=&lt;/span&gt;&lt;span class="s"&gt;"{{ body }}"&lt;/span&gt; &lt;span class="na"&gt;timestamp=&lt;/span&gt;&lt;span class="s"&gt;"{{ timestamp }}"&lt;/span&gt; &lt;span class="na"&gt;floatTimestamp=&lt;/span&gt;&lt;span class="s"&gt;"auto"&lt;/span&gt; &lt;span class="na"&gt;showStatus=&lt;/span&gt;&lt;span class="s"&gt;"{{ sender.isMe }}"&lt;/span&gt; &lt;span class="na"&gt;isLongEmailMessage=&lt;/span&gt;&lt;span class="s"&gt;"{{isLongEmailMessage}}"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;style &lt;/span&gt;&lt;span class="na"&gt;scoped&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nc"&gt;.message-container&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.25rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.message-container.previous-same&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.25rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.message-row&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c"&gt;/* Align the avatar and the message centrally, but if the message's height 
       is greater than the avatar we will align it to the top
       -- See Avatar.template for how this is achieved */&lt;/span&gt;
    &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.message&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;white-space&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;normal&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;word-wrap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;break-word&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#111&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c"&gt;/* Avatar spacer is for when multiple messages are sent by the same user but 
   only 1 avatar is displayed, so we need a space  */&lt;/span&gt;
&lt;span class="nc"&gt;.message.has-avatar-spacer&lt;/span&gt;  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c"&gt;/* Avatar width (see Avatar component) */&lt;/span&gt;
    &lt;span class="nl"&gt;padding-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.message-header&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;padding-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.message-author&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.75rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.message-timestamp&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.85em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#4E606A&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* If there's a thumbnail, show the author name in a bar above the thumbnail */&lt;/span&gt;
&lt;span class="nc"&gt;.has-thumbnail&lt;/span&gt; &lt;span class="nc"&gt;.message-author&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;margin-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.typing-indicator&lt;/span&gt; &lt;span class="nc"&gt;.message&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;max-content&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#messagebody"&gt;
  &lt;/a&gt;
  MessageBody
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;template&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;t:if=&lt;/span&gt;&lt;span class="s"&gt;"{{ body.type == 'location' }}"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"thumbnail"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;Thumbnail&lt;/span&gt; &lt;span class="na"&gt;location=&lt;/span&gt;&lt;span class="s"&gt;"{{ body.location }}"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt;
    &lt;span class="na"&gt;t:else-if=&lt;/span&gt;&lt;span class="s"&gt;"{{ body.type == 'file' and body.hasThumbnail }}"&lt;/span&gt;
    &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"thumbnail"&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;Thumbnail&lt;/span&gt; &lt;span class="na"&gt;file=&lt;/span&gt;&lt;span class="s"&gt;"{{ body.file }}"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;t:set&lt;/span&gt; &lt;span class="na"&gt;t:if=&lt;/span&gt;&lt;span class="s"&gt;"{{ body.type == 'file' }}"&lt;/span&gt; &lt;span class="na"&gt;filetype=&lt;/span&gt;&lt;span class="s"&gt;"{{ body.file.type }}"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;t:if=&lt;/span&gt;&lt;span class="s"&gt;"{{ isLongEmailMessage }}"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;small&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;i&amp;gt;&amp;lt;Icon&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"email"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt; {{ strings.MESSAGE_SENT_VIA_EMAIL }}&lt;span class="nt"&gt;&amp;lt;/i&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/small&amp;gt;&amp;lt;br&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&amp;lt;br&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;t:if=&lt;/span&gt;&lt;span class="s"&gt;"{{ body.type == 'location' }}"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"message-text"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt;
        &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://maps.google.com/maps?q={{ body.location }}"&lt;/span&gt;
        &lt;span class="na"&gt;target=&lt;/span&gt;&lt;span class="s"&gt;"_blank"&lt;/span&gt;
        &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"noopener"&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        https://maps.google.com/maps?q={{ body.location }}
      &lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;t:if=&lt;/span&gt;&lt;span class="s"&gt;"{{ body.type == 'file' }}"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"message-text"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt;
        &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"download-link"&lt;/span&gt;
        &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"{{ body.file.url }}"&lt;/span&gt;
        &lt;span class="na"&gt;target=&lt;/span&gt;&lt;span class="s"&gt;"_blank"&lt;/span&gt;
        &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"noopener noreferrer"&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;Icon&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"download"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;span&amp;gt;&lt;/span&gt;{{ body.file.formattedFilename }}&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"filesize"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; ({{ body.file.size | filesize }})&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;t:if=&lt;/span&gt;&lt;span class="s"&gt;"{{ body.type == 'text' }}"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"message-text"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      {{ body.formattedText }}
    &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;t:if=&lt;/span&gt;&lt;span class="s"&gt;"{{ body.type == 'typing-indicator' }}"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"typing-indicator"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;TypingIndicator&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;style &lt;/span&gt;&lt;span class="na"&gt;scoped&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nc"&gt;.text&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.25rem&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;white-space&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pre-wrap&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nc"&gt;.text&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;currentColor&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nc"&gt;.thumbnail&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;200px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;400px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#e7ecee&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nc"&gt;.download-link&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;word-break&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;break-all&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;text-decoration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nc"&gt;.download-link&lt;/span&gt; &lt;span class="nt"&gt;span&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;text-decoration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;underline&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nc"&gt;.filesize&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;white-space&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;nowrap&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.75rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
      <category>slack</category>
    </item>
    <item>
      <title>How to build a LinkedIn lookalike chat using TalkJS Chat API</title>
      <author>Aswin Rajeev</author>
      <pubDate>Wed, 07 Jul 2021 09:44:26 +0000</pubDate>
      <link>https://dev.to/talkjs/how-to-build-a-linkedin-lookalike-chat-using-talkjs-chat-api-1o0k</link>
      <guid>https://dev.to/talkjs/how-to-build-a-linkedin-lookalike-chat-using-talkjs-chat-api-1o0k</guid>
      <description>&lt;p&gt;Recently, we have been looking at how we can use the &lt;a href="https://talkjs.com/docs/Features/Themes/The_Theme_Editor.html"&gt;Theme Editor&lt;/a&gt; present in the &lt;a href="https://talkjs.com/"&gt;TalkJS Chat API&lt;/a&gt; to theme our chat. We previously themed the chat to make it look more like &lt;a href="https://dev.to/talkjs/building-a-whatsapp-clone-with-talkjs-chat-api-cdf"&gt;WhatsApp&lt;/a&gt; and even &lt;a href="https://dev.to/talkjs/how-to-create-a-chat-like-discord-with-talkjs-4660"&gt;Discord&lt;/a&gt;. Today, we are going to try our hands at making it look like the LinkedIn chat. LinkedIn has had major UI overhauls in the recent past and we will try to implement the latest theme which is mostly white and black with a subtle hint of that famous LinkedIn blue.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FJ7h3o6d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tgst2j0adgosastgeuwc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FJ7h3o6d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tgst2j0adgosastgeuwc.png" alt="LinkedIn Chat - Original"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#things-to-do"&gt;
  &lt;/a&gt;
  Things to do
&lt;/h2&gt;

&lt;p&gt;Log in to your TalkJS dashboard and create a new theme. We are going to name it ‚ÄòLinkedIn‚Äô. Then head over to the ‚ÄòRoles‚Äô section and select the default role. When you scroll down, you can see the UI Theme section. Select the ‚ÄòLinkedIn‚Äô theme that you created earlier in this section and save it. Now, the changes that you make on the Theme Editor can be viewed live just by refreshing your browser. The default theme on the TalkJS chatbox looks like this. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aR6beuf4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kpxpxqzarncapubaihfe.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aR6beuf4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kpxpxqzarncapubaihfe.JPG" alt="TalkJS Default Chatbox Theme"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here is a brief summary of the changes that we need to make.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Change the header color to white, and the header text to black.&lt;/li&gt;
&lt;li&gt;Remove avatar from the header.&lt;/li&gt;
&lt;li&gt;Remove the chat bubbles and their background colors.&lt;/li&gt;
&lt;li&gt;Move the user avatar to the left side.&lt;/li&gt;
&lt;li&gt;Add the user‚Äôs name to the chat bubble.&lt;/li&gt;
&lt;li&gt;Change the format of the time and move it next to the user‚Äôs name&lt;/li&gt;
&lt;li&gt;Change the message field background and highlight color&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You have to set up a very basic chatbox on your system to view these changes. To do that, follow our &lt;a href="https://talkjs.com/docs/Getting_Started/index.html"&gt;Getting Started guide&lt;/a&gt;. After all of these changes have been made, your chat should look like this. As you can see, it is almost identical to the LinkedIn chat. Without further ado, let‚Äôs dive in to see where we made these changes and explain what they are. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--B2LTK4xk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dgeyppk31svn4bxoktgh.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B2LTK4xk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dgeyppk31svn4bxoktgh.JPG" alt="LinkedIn Chat Clone with TalkJS"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#chatheader"&gt;
  &lt;/a&gt;
  ChatHeader
&lt;/h2&gt;

&lt;p&gt;The first section that we will look at is the ChatHeader. Open up the stylesheet for the ChatHeader from the left menu and you will see a header class there. Change the background color to #FFF and the color to #000. This will give the header the brand new look present in LinkedIn and the text inside it will be black. Scroll down to the content class and add a padding-left of 3rem. This will move the name of the person towards the right-hand side, just like how it is on the LinkedIn chat.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#avatar"&gt;
  &lt;/a&gt;
  Avatar
&lt;/h2&gt;

&lt;p&gt;Next, we need to alter the avatar ever so slightly. Find the avatar class on the stylesheet and change the width and height to 2.8rem and the align-self property to center.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#usermessage"&gt;
  &lt;/a&gt;
  UserMessage
&lt;/h2&gt;

&lt;p&gt;The majority of the changes are present in the UserMessage section of your TalkJS Editor. We need to first edit the code to ensure that the user‚Äôs name is displayed above the message. For that, change line 67 to this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;t:if=&lt;/span&gt;&lt;span class="s"&gt;"{{ sender.id != previousSenderId and conversation.others.length &amp;gt; 0 }}"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will ensure that for every conversation whose length is greater than 0 and is not sent from the same user as the current user, the user‚Äôs name will be displayed. We will also change the color of the user‚Äôs name to black and increase its font-size to 13. This will be on line 69.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;style="font-size: 13px; color: #000"&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, in the LinkedIn chat, we have the timestamp next to the user‚Äôs name. For that, we will use the timestamp variable inside a &lt;span&gt; tag and filter it using the available filters on line 70.&lt;br&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;{{ sender.name }} &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class = &lt;/span&gt;&lt;span class="s"&gt;"time-sent"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; ‚Ä¢ {{ timestamp |  date: "%H:%m %p"}}&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Next, we need to remove the tick marks from the message as well as the time. For that, we need to remove the timestamp property and the &lt;code&gt;showStatus&lt;/code&gt; property from line 73. Once these changes are completed, we will now scroll down to the style classes. First up, we have the message-row class. We need to change the &lt;code&gt;margin-bottom&lt;/code&gt; to &lt;code&gt;0.1rem&lt;/code&gt; and &lt;code&gt;margin-top&lt;/code&gt; to &lt;code&gt;0.1rem&lt;/code&gt;. This will reduce the gap between each message.&lt;/p&gt;

&lt;p&gt;To ensure that both the sender and receiver messages are on the same side, we need to remove the &lt;code&gt;flex-direction: row-reverse&lt;/code&gt; property from the class &lt;code&gt;message-row by-me&lt;/code&gt;. After that, edit the message class so that it looks like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.message&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;white-space&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;normal&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;word-wrap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;break-word&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;inline-block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;100%&lt;/span&gt; &lt;span class="n"&gt;-&lt;/span&gt; &lt;span class="m"&gt;4rem&lt;/span&gt; &lt;span class="n"&gt;-&lt;/span&gt; &lt;span class="m"&gt;0.2rem&lt;/span&gt; &lt;span class="n"&gt;-&lt;/span&gt; &lt;span class="m"&gt;0.2rem&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the by-me message class, change the color to &lt;code&gt;#000&lt;/code&gt; (black). If you noticed before, we had added a new class to the timestamp next to the user‚Äôs name. This new class is called time-sent and we will add the following styles to it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.time-sent&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#8F8F8F&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;normal&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;One last change we need to make is to change the padding-right to padding-left in the by-me previous-same class.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#layout"&gt;
  &lt;/a&gt;
  Layout
&lt;/h2&gt;

&lt;p&gt;The last section we need to edit is the layout. Head over to the panel footer sub-section and make the following changes.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;backgroundColor #F9FAFB
borderTopWidth 2px
borderTopColor #E5E5E5
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We have a few changes to make in the message field sub-section. The changes are given below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;borderRadius 10px
borderColor #D9D9D9
backgroundColor #FFFFFF
color #232529
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Lastly, in the ‚ÄòHighlights‚Äô section change the background color to &lt;code&gt;#0866C8&lt;/code&gt; and you should be all set. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EE_FNDm5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h365irqh2sqj6tm7hsh3.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EE_FNDm5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h365irqh2sqj6tm7hsh3.gif" alt="LinkedIn Chat Clone in Action"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With that, you should have a chat that looks like this. It is very close to the actual LinkedIn chat and thanks to the Theme Editor on TalkJS, you can come up with many such themes with its easy-to-use interface and minimal coding requirement. We can‚Äôt wait to see what you guys come up with using the Theme Editor. The possibilities are endless. &lt;/p&gt;

</description>
      <category>css</category>
      <category>html</category>
      <category>tutorial</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Docker</title>
      <author>pssingh21</author>
      <pubDate>Wed, 07 Jul 2021 09:36:43 +0000</pubDate>
      <link>https://dev.to/pssingh21/docker-97j</link>
      <guid>https://dev.to/pssingh21/docker-97j</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-docker"&gt;
  &lt;/a&gt;
  What is Docker?
&lt;/h2&gt;

&lt;p&gt;Docker is a tool that allows developers to package applications and all their dependencies in a container (sandbox) and deploy and run the application on host operating system (Linux). &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-containers-images"&gt;
  &lt;/a&gt;
  What are Containers, Images?
&lt;/h2&gt;

&lt;p&gt;A container is a discrete process that has been isolated from all other processes on the host machine. This is made possible by &lt;a href="https://medium.com/@saschagrunert/demystifying-containers-part-i-kernel-space-2c53d6979504"&gt;Kernel Namespaces and Cgroups&lt;/a&gt;. This decoupling allows applications to run consistently anywhere isolated from the rest of the applications. Containers run images, which contain everything required to run: application code, runtime environment, dependencies, scripts, etc. Containers run layers of stacked images (eg. a base linux image (mostly alpine due to its compact size), node image and application image on top). &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#docker-vs-vms"&gt;
  &lt;/a&gt;
  Docker vs VMs
&lt;/h2&gt;

&lt;p&gt;Note that docker containers do not run in their own virtual machines. VMs run on virtual hardware provided by host OS, whereas containers share the host kernel, thus avoiding computation overhead for virtualizing hardware. Also note that Docker requires Linux runtime environment, so running Docker on Windows/Mac requires a single Linux virtual machine that is shared among all the containers run in the system.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h2&gt;

&lt;p&gt;Download and install docker from &lt;a href="https://docs.docker.com/get-docker/"&gt;Docker docs&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Check if installation was successful using&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker version
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#docker-hub"&gt;
  &lt;/a&gt;
  Docker Hub
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://hub.docker.com/"&gt;Docker hub&lt;/a&gt; is the official public repository from docker hosting images of widely used applications. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pull-from-docker-repository"&gt;
  &lt;/a&gt;
  Pull from docker repository
&lt;/h2&gt;

&lt;p&gt;Pull image from repository (by default Docker hub unless specified otherwise).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker pull redis
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#list-all-images"&gt;
  &lt;/a&gt;
  List all images
&lt;/h2&gt;

&lt;p&gt;View all locally available images.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker images
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker image &lt;span class="nb"&gt;ls&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#run-container"&gt;
  &lt;/a&gt;
  Run container
&lt;/h2&gt;

&lt;p&gt;Creates a new container from an image, and execute the container. Pulls image from repository (Docker Hub) if container is not found locally. Notice that different layers are pulled separately from the repository. Splitting the layers provides the advantage that if some layers already exist locally, they are skipped from downloading again.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker run postgres:9.6
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker run docker/whalesay cowsay Hello World!
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Run in detached mode. Returns id of the container and starts running the container.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker run &lt;span class="nt"&gt;-d&lt;/span&gt; postgres:9.6
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Re-attach detached container. Requires id of detached container.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker attach ee8f2eb0b433
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#docker-ps"&gt;
  &lt;/a&gt;
  docker ps
&lt;/h2&gt;

&lt;p&gt;View all currently running containers.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker ps
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;View all running and stopped containers (history). Containers can be restarted using the given container id.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker ps &lt;span class="nt"&gt;-a&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#stop-container"&gt;
  &lt;/a&gt;
  Stop container
&lt;/h2&gt;

&lt;p&gt;Stops the running container. Requires id/name of container. Returns id/name of stopped container.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker stop ee8f2eb0b433
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#start-container"&gt;
  &lt;/a&gt;
  Start container
&lt;/h2&gt;

&lt;p&gt;Can be used to restart stopped container. Requires id/name of stopped container. Returns id/name of started container. It does not create a new container, unlike &lt;code&gt;docker run&lt;/code&gt;. All configurations are restored which were set while running &lt;code&gt;doc run&lt;/code&gt; command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker start ee8f2eb0b433
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#port-mapping-container-port-host-port"&gt;
  &lt;/a&gt;
  Port Mapping [Container port : Host port]
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;docker ps&lt;/code&gt; displays the port the application is listening inside the container. To connect to this port inside the container, we need the IP the application is running in. Every Docker container gets an IP assigned by default. This is an internal IP and can only be accessed from the host machine. Users outside of the docker host cannot access using this IP. For this, we need to use the IP of the docker host and map a free port from the docker host to the container port. You can also run multiple instances of application and map them to different ports on the host machine.&lt;/p&gt;

&lt;p&gt;There should be a binding between the host port and container port. Conflicts will occur if you open two same ports on your host machine. Different containers can however listen on the same port because these two containers are completely isolated of one another.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker run &lt;span class="nt"&gt;-p6000&lt;/span&gt;:6379 redis
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Port 6000 of host machine is binded with port 6379 of container running redis. Redis runs on port 6479. This can be viewed using &lt;code&gt;docker ps&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#display-logs"&gt;
  &lt;/a&gt;
  Display logs
&lt;/h2&gt;

&lt;p&gt;View logs of docker container (eg. while using in detached mode). Requires id/name of running container.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker logs 777f0e06c4c
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker logs 777f0e06c4c | &lt;span class="nb"&gt;tail&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#custom-naming-containers"&gt;
  &lt;/a&gt;
  Custom naming containers
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker run &lt;span class="nt"&gt;-d&lt;/span&gt; &lt;span class="nt"&gt;--name&lt;/span&gt; my-custom-name redis
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#docker-exec"&gt;
  &lt;/a&gt;
  docker exec
&lt;/h2&gt;

&lt;p&gt;Get the terminal of the running container as a root user. &lt;code&gt;-it&lt;/code&gt; stands for interactive terminal. &lt;code&gt;-i&lt;/code&gt; maps the standard input of the host to the Docker container. &lt;code&gt;-t&lt;/code&gt; stands for pseudo terminal,which displays prompts from the terminal. Requires id/name of container. You can even navigate around the virtual file system, check logs, manage environment, etc.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker &lt;span class="nb"&gt;exec&lt;/span&gt; &lt;span class="nt"&gt;-it&lt;/span&gt; 777f0e06c4c /bin/sh
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker &lt;span class="nb"&gt;exec &lt;/span&gt;777f0e06c4c &lt;span class="nb"&gt;cat&lt;/span&gt; /etc/hosts
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#docker-network"&gt;
  &lt;/a&gt;
  Docker network
&lt;/h2&gt;

&lt;p&gt;Docker creates it's own isolated network where the containers are running in. When two containers are deployed in the same docker network, they can refer to each other using just the container name because they are in the same network. Applications running outside of docker connect to this network using localhost:port-number. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#display-docker-networks"&gt;
  &lt;/a&gt;
  Display docker networks
&lt;/h2&gt;

&lt;p&gt;Displays all docker networks.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker network &lt;span class="nb"&gt;ls&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#create-new-docker-network"&gt;
  &lt;/a&gt;
  Create new docker network
&lt;/h2&gt;

&lt;p&gt;Creates new docker network&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker network create my-network
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#docker-run-with-network-option"&gt;
  &lt;/a&gt;
  Docker run with network option
&lt;/h2&gt;

&lt;p&gt;To run containers in custom docker network, it should be specified in the docker run command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker run &lt;span class="nt"&gt;-d&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="nt"&gt;-p27017&lt;/span&gt;:27017 &lt;span class="se"&gt;\ &lt;/span&gt;
&lt;span class="nt"&gt;-e&lt;/span&gt; &lt;span class="nv"&gt;MONGO_INITDB_ROOT_USERNAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;admin &lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="nt"&gt;-e&lt;/span&gt; &lt;span class="nv"&gt;MONGO_INITDB_ROOT_PASSWORD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;password &lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="nt"&gt;--name&lt;/span&gt; mongodb &lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="nt"&gt;--net&lt;/span&gt; my-network &lt;span class="se"&gt;\&lt;/span&gt;
mongo
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker run &lt;span class="nt"&gt;-d&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="nt"&gt;-p8081&lt;/span&gt;:8081 &lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="nt"&gt;-e&lt;/span&gt; &lt;span class="nv"&gt;ME_CONFIG_MONGODB_ADMINUSERNAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;admin &lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="nt"&gt;-e&lt;/span&gt; &lt;span class="nv"&gt;ME_CONFIG_MONGODB_ADMINPASSWORD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;password &lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="nt"&gt;--net&lt;/span&gt; my-network &lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="nt"&gt;--name&lt;/span&gt; mongo-express &lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="nt"&gt;-e&lt;/span&gt; &lt;span class="nv"&gt;ME_CONFIG_MONGODB_SERVER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;mongodb &lt;span class="se"&gt;\&lt;/span&gt;
mongo-express

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;-e&lt;/code&gt; sets the required environment variables.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#docker-inspect"&gt;
  &lt;/a&gt;
  Docker inspect
&lt;/h2&gt;

&lt;p&gt;View details of a container in JSON format such as mounts, configuration settings, network settings, etc. Requires id/name of container.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker inspect dreamy_hellman
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#docker-compose"&gt;
  &lt;/a&gt;
  Docker Compose
&lt;/h2&gt;

&lt;p&gt;With docker compose, docker commands can be mapped to a file, so that configurations are well structured. Note that format of Docker-compose yaml file depends on the version of docker-yaml.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;3'&lt;/span&gt;
&lt;span class="na"&gt;services&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;mongodb&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;mongo&lt;/span&gt;
        &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;27017:27017&lt;/span&gt;
        &lt;span class="na"&gt;environment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;MONGO_INITDB_ROOT_USERNAME=admin&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;MONGO_INITDB_ROOT_PASSWORD=password&lt;/span&gt;
    &lt;span class="na"&gt;mongo-express&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;mongo-express&lt;/span&gt;
        &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;8080:8081&lt;/span&gt;
        &lt;span class="na"&gt;environment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;ME_CONFIG_MONGODB_ADMINUSERNAME=admin&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;ME_CONFIG_MONGODB_ADMINPASSWORD=password&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;ME_CONFIG_MONGODB_SERVER=mongodb&lt;/span&gt;
        &lt;span class="na"&gt;depends_on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;mongodb&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The network configuration is not included in docker compose. Docker compose will automatically create a common network for all services listed in the docker compose file. Save it as a .yaml file.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-docker-compose-yaml-file"&gt;
  &lt;/a&gt;
  Using Docker compose yaml file
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#start-a-container"&gt;
  &lt;/a&gt;
  Start a container
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker-compose &lt;span class="nt"&gt;-f&lt;/span&gt; my-docker-compose-file.yaml up
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#stop-a-container"&gt;
  &lt;/a&gt;
  Stop a container
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker-compose &lt;span class="nt"&gt;-f&lt;/span&gt; my-docker-compose-file.yaml down
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#dockerfile"&gt;
  &lt;/a&gt;
  Dockerfile
&lt;/h2&gt;

&lt;p&gt;A dockerfile is a document for building images. Filename must be &lt;code&gt;Dockerfile&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; node&lt;/span&gt;

&lt;span class="k"&gt;ENV&lt;/span&gt;&lt;span class="s"&gt; MONGO_INITDB_ROOT_USERNAME=admin \&lt;/span&gt;
    MONGO_INITDB_ROOT_PASSWORD=password

&lt;span class="k"&gt;RUN &lt;/span&gt;&lt;span class="nb"&gt;mkdir&lt;/span&gt; &lt;span class="nt"&gt;-p&lt;/span&gt; /home/app

&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; . /home/app&lt;/span&gt;

&lt;span class="k"&gt;WORKDIR&lt;/span&gt;&lt;span class="s"&gt; /home/app&lt;/span&gt;

&lt;span class="k"&gt;CMD&lt;/span&gt;&lt;span class="s"&gt; ["node","server.js"]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;FROM&lt;/code&gt; &lt;em&gt;image&lt;/em&gt; - build on a base image&lt;br&gt;
&lt;code&gt;ENV&lt;/code&gt; - set environment variables&lt;br&gt;
&lt;code&gt;RUN&lt;/code&gt; - execute any Linux commands on the container environment&lt;br&gt;
&lt;code&gt;COPY&lt;/code&gt; - executes on the host. Copies file from host to the container&lt;br&gt;
&lt;code&gt;WORKDIR&lt;/code&gt; - set current working directory so that you don't need to provide full path from /home.&lt;br&gt;
&lt;code&gt;CMD&lt;/code&gt; - executes an entry point. There can be multiple RUN commands, but only one CMD command. The command and parameters should be separate entries in the list.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; ubuntu&lt;/span&gt;

&lt;span class="k"&gt;CMD&lt;/span&gt;&lt;span class="s"&gt; sleep 5&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Running &lt;code&gt;docker run sleeper sleep 10&lt;/code&gt;, the &lt;code&gt;sleep 10&lt;/code&gt; will overwrite the command specified on &lt;code&gt;CMD&lt;/code&gt;. To provide custom arguments, use the &lt;code&gt;ENTRYPOINT&lt;/code&gt; command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; ubuntu&lt;/span&gt;

&lt;span class="k"&gt;ENTRYPOINT&lt;/span&gt;&lt;span class="s"&gt; ["sleep"]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Running &lt;code&gt;docker run sleeper 10&lt;/code&gt; will append the argument &lt;code&gt;10&lt;/code&gt; to the list of &lt;code&gt;ENTRYPOINT&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;To set a default value for argument, use the combination of both &lt;code&gt;ENTRYPOINT&lt;/code&gt; and &lt;code&gt;CMD&lt;/code&gt;. Both &lt;code&gt;ENTRYPOINT&lt;/code&gt; and &lt;code&gt;CMD&lt;/code&gt; should be specified in JSON format.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; ubuntu&lt;/span&gt;

&lt;span class="k"&gt;ENTRYPOINT&lt;/span&gt;&lt;span class="s"&gt; ["sleep"]&lt;/span&gt;

&lt;span class="k"&gt;CMD&lt;/span&gt;&lt;span class="s"&gt; ["5"]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If no arguments is provieded, argument from &lt;code&gt;CMD&lt;/code&gt; will be appended to &lt;code&gt;ENTRYPOINT&lt;/code&gt;. If arguments are provided, they will be appended to &lt;code&gt;ENTRYPOINT&lt;/code&gt; and the values on &lt;code&gt;CMD&lt;/code&gt; will be disregarded. You can also overwrite the whole entrypoint command using&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker run &lt;span class="nt"&gt;--entrypoint&lt;/span&gt; somethine-else sleeper 10
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#building-image-from-dockerfile"&gt;
  &lt;/a&gt;
  Building image from Dockerfile
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker build &lt;span class="nt"&gt;-t&lt;/span&gt; my-app:1.0 &lt;span class="nb"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;my-app - image name&lt;br&gt;
1.0 - tag&lt;br&gt;
. - path to &lt;code&gt;Dockerfile&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#delete-image"&gt;
  &lt;/a&gt;
  Delete image
&lt;/h2&gt;

&lt;p&gt;Remove image from local host. Requires image id. Image id can be found running &lt;code&gt;docker images&lt;/code&gt;. Image can be deleted if all containers built from the image are deleted.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker rmi e455275b486c
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#delete-container"&gt;
  &lt;/a&gt;
  Delete container
&lt;/h3&gt;

&lt;p&gt;Remove container from local host. Requires container id/name. Container id/name can be found running &lt;code&gt;docker ps&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker &lt;span class="nb"&gt;rm &lt;/span&gt;silly_gagarin
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#data-persistence-using-docker-volumes"&gt;
  &lt;/a&gt;
  Data persistence using Docker volumes
&lt;/h3&gt;

&lt;p&gt;Data from virtual file system of container is lost when the container is restarted or removed. Docker volumes is used where changes needs to be persisted between restarts. Using Docker volumes, a folder in the physical file system is mounted in the virtual file system of the container. The data is automatically replicated between host file system and virtual file system. Thus, data is persisted even when the container is turned down. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#docker-volume-types"&gt;
  &lt;/a&gt;
  Docker Volume types
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#host-volumes"&gt;
  &lt;/a&gt;
  Host volumes
&lt;/h3&gt;

&lt;p&gt;Host volumes allows you to determine where on the host file system the data is replicated.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker run &lt;span class="nt"&gt;-v&lt;/span&gt; /home/mount/data:/var/lib/mysql/data
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is in the form host-file-system-path:virtual-file-system-path.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#anonymous-volumes"&gt;
  &lt;/a&gt;
  Anonymous Volumes
&lt;/h3&gt;

&lt;p&gt;Only path in the virtual file system is provided. Docker automatically maintains where in the host file system the replica should reside. For each container, a folder is generated in the host file system path &lt;code&gt;/var/lib/docker/volumes/{hash}/_data&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker run &lt;span class="nt"&gt;-v&lt;/span&gt; /var/lib/mysql/data
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#named-volumes"&gt;
  &lt;/a&gt;
  Named Volumes
&lt;/h3&gt;

&lt;p&gt;This is similar to anonymous volumes, but you can specify the name of the folder on the host file system. This type of volume can be referenced simply using the name, so you don't have to know the path.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker run &lt;span class="nt"&gt;-v&lt;/span&gt; name:/var/lib/mysql/data
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#volumes-in-dockercompose"&gt;
  &lt;/a&gt;
  Volumes in docker-compose
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;3'&lt;/span&gt;
&lt;span class="na"&gt;services&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;mongodb&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;mongo&lt;/span&gt;
        &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;27017:27017&lt;/span&gt;
        &lt;span class="na"&gt;environment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;MONGO_INITDB_ROOT_USERNAME=admin&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;MONGO_INITDB_ROOT_PASSWORD=password&lt;/span&gt;
        &lt;span class="na"&gt;volumes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;my-volume:/data/db&lt;/span&gt;
    &lt;span class="na"&gt;mongo-express&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;mongo-express&lt;/span&gt;
        &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;8080:8080&lt;/span&gt;
        &lt;span class="na"&gt;environment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;ME_CONFIG_MONGODB_ADMINUSERNAME=admin&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;ME_CONFIG_MONGODB_ADMINPASSWORD=password&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;ME_CONFIG_MONGODB_SERVER=mongodb&lt;/span&gt;
&lt;span class="na"&gt;volumes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;my-volume&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;driver&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;local&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note that here we have used named volumes. Also note that we can mount the reference of the same folder on the host file system to more than one container, for example if the containers need to share the same data.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#container-orchestration"&gt;
  &lt;/a&gt;
  Container Orchestration
&lt;/h2&gt;

&lt;p&gt;Container orchestration contains of multiple docker hosts that can host containers, so that if one fails, the application is still available through the others. Some orchestration solutions can help automatically scale up the number of container instances when users increase and scale down when the demand decreases. They also help in load balancing requests across hosts. Some container orchestration solutions are docker swarm, kubernetes and mesos.&lt;/p&gt;

&lt;p&gt;Happy Hacking!&lt;/p&gt;

</description>
      <category>docker</category>
      <category>devops</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Building a Netflix clone with Vanilla JavaScript.</title>
      <author>Emmanuel Ugwu</author>
      <pubDate>Wed, 07 Jul 2021 09:33:53 +0000</pubDate>
      <link>https://dev.to/ugwutotheeshoes/building-a-netflix-clone-with-vanilla-javascript-6cd</link>
      <guid>https://dev.to/ugwutotheeshoes/building-a-netflix-clone-with-vanilla-javascript-6cd</guid>
      <description>&lt;p&gt;Without the application of JavaScript, the Internet as we know it would not be at the level it is at today. JavaScript has become integral to the Internet experience as developers build both basic as well as advanced applications with the aim of a dynamic and increased interaction experience for users. This means that social media apps, e-commerce platforms, online video streaming, search and map engines would not be possible without it. Online video streaming platforms like &lt;a href="http://www.netflix.com"&gt;Netflix&lt;/a&gt; have contributed to the Internet through the distribution of high quality media content, the type of entertainment that has been traditionally produced by the Hollywood studios and major television networks. Today we‚Äôll be building a Netflix clone using plain JavaScript and the main prerequisite for building or understanding this article is knowledge of HTML, CSS and vanilla JavaScript.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting Started
&lt;/h1&gt;

&lt;p&gt;In this article, we will go about how a Netflix clone can be created using HTML, CSS and plain JavaScript, written in a way where every developer, regardless of skill level, should be able to follow.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#defining-our-elements"&gt;
  &lt;/a&gt;
  Defining our elements
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#background-header"&gt;
  &lt;/a&gt;
  Background header
&lt;/h2&gt;

&lt;p&gt;The header is made with a background image that uses a &lt;code&gt;cover&lt;/code&gt; CSS property as its background size to cover the entire container, even if it has to stretch the image or cut a little bit off one of the edges. The ‚ÄúSign in‚Äù and ‚ÄúGet Started‚Äù buttons created are linked to our sign-in page with the help of an &lt;code&gt;onclick()&lt;/code&gt; element, which calls onto a function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function displayButton(){
    var final = document.getElementById('final');
    var main = document.getElementById('main');
    final.classList.toggle('closed');
    main.classList.add('closed');
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The purpose of the function above is to hide the Netflix header then show the sign-in page once either of the ‚ÄúSign in‚Äù or ‚ÄúGet Started‚Äù buttons are clicked.&lt;/p&gt;

&lt;p&gt;The image below shows the Netflix header:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iPKVX_Pe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b5zfnqer37bjl83q6oi7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iPKVX_Pe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b5zfnqer37bjl83q6oi7.png" alt="Background Header"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#sign-in-feature"&gt;
  &lt;/a&gt;
  Sign In Feature
&lt;/h2&gt;

&lt;p&gt;The sign-in feature consists of ‚ÄúE-mail Address‚Äù and ‚ÄúPassword‚Äù &lt;code&gt;input&lt;/code&gt; elements, where the email uses a &lt;a href="https://en.wikipedia.org/wiki/Regular_expression"&gt;regex&lt;/a&gt; sequence of characters to validate an &lt;code&gt;if/else&lt;/code&gt; statement. The &lt;code&gt;if/else&lt;/code&gt; statement checks whether any value put into the email address &lt;code&gt;input&lt;/code&gt; element is in the form of an email, else an alert would pop up stating that the email is invalid. In a situation where it is left blank, a different alert pops up stating that the email cannot be left blank.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;if(eVal === ''){
  alert('Email cannot be left blank');
  } else if(!isEmail(eVal)){
    alert('Email is invalid');
  } else if(isEmail(eVal)){
    console.log(true);
  }

function isEmail(EmailVal){
  return /^(([^&amp;lt;&amp;gt;()\[\]\\.,;:\s@"]+(\.[^&amp;lt;&amp;gt;()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(EmailVal);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The password input element also uses an if/else  statement to prevent it form being left blank. If both input elements pass the validation test, a message saying ‚ÄúThanks for signing in. Click the sign out button‚Äù pops up below the sign-in button.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;if(pVal === ''){
  alert('Password cannot be left blank');
  } else {
    console.log(true);
  }
  if(isEmail(eVal) == true &amp;amp;&amp;amp; pVal !== true){
    thanks.innerHTML = 'Thanks for signing in. Click the sign out button'
  }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#videos-and-gifs"&gt;
  &lt;/a&gt;
  Videos and Gifs
&lt;/h2&gt;

&lt;p&gt;This section applies the use of videos, images ,and gifs. The attribute &lt;code&gt;autoplay playsinline muted loop&lt;/code&gt; is added to the video element, where the &lt;code&gt;playsinline&lt;/code&gt; attribute enables the video to always play in a required position rather than in fullscreen. With the help of some CSS properties the videos and gifs are also sized and adjusted to fit their required positions.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/aNK9ZKxUc4Y"&gt;Click here&lt;/a&gt; to watch a demo of our videos and gifs in use.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#building-an-accordion-menu"&gt;
  &lt;/a&gt;
  Building an accordion menu
&lt;/h2&gt;

&lt;p&gt;We'll need to build an accordion to house the FAQs(Frequently Asked Questions) and answers to them, for that an accordion menu will be needed.&lt;br&gt;
An &lt;a href="https://en.wikipedia.org/wiki/Accordion_(GUI)"&gt;accordion&lt;/a&gt; menu is a graphical control element comprising a vertically stacked list of items that can be clicked to reveal or hide content associated with them. Suitable answers are provided within the list of items, in a way that when the control element is clicked on, the answers will be revealed. A function is linked to the FAQ element to enable it to show and hide its content with ease.&lt;/p&gt;

&lt;p&gt;The function below reveals or hide the accordion content.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function toggle1(){
    var x = document.getElementById('ans1');
    var y = document.getElementById('rot1');
    y.classList.toggle('rotate');
    x.classList.toggle('closed');
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As shown above, the function toggles on the class of our control element answers using a &lt;code&gt;classlist&lt;/code&gt; property, where the &lt;code&gt;closed&lt;/code&gt; class has a CSS property of &lt;code&gt;display: none&lt;/code&gt; to hide or show its content.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#footer"&gt;
  &lt;/a&gt;
  Footer
&lt;/h2&gt;

&lt;p&gt;The footer makes use of a &lt;code&gt;grid&lt;/code&gt; CSS property to style it in the form of rows and columns, making it easier to design web pages without having to use floats and positioning. The CSS property &lt;code&gt;grid-template-columns: repeat(4, 1fr)&lt;/code&gt; creates 4 columns and a row. The extra CSS properties below are applied to make it look better.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.footer-column{
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-gap: 4rem;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#video"&gt;
  &lt;/a&gt;
  Video
&lt;/h2&gt;

&lt;p&gt;This is a full demo of our Netflix clone application.&lt;br&gt;
&lt;a href="https://youtu.be/Bd-3CsRGnm0"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n6N3pAB9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6r1wrndutt7zsi4lmjxy.png" alt="Netflix Clone Demo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Click on the image above to watch a demo of our application being tested&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;With basic knowledge of JavaScript and the application of these few steps, you can build a Netflix clone. To have better understanding of the code base of this article, you can check it out on &lt;a href="https://github.com/ugwutotheeshoes/netflix-clone"&gt;Github&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>fintech</category>
      <category>css</category>
      <category>beginners</category>
    </item>
  </channel>
</rss>
