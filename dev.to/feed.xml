<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How to generate a random string in Python?</title>
      <author>hrishikesh1990</author>
      <pubDate>Thu, 28 Oct 2021 12:03:07 +0000</pubDate>
      <link>https://dev.to/hrishikesh1990/how-to-generate-a-random-string-in-python-hke</link>
      <guid>https://dev.to/hrishikesh1990/how-to-generate-a-random-string-in-python-hke</guid>
      <description>&lt;p&gt;In this short tutorial, we look at how we can generate a random string in Python. We also look at all the various types of string that can be generated.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table of Contents:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#importing-string-and-random-modules"&gt;Importing string and random modules&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#generate-random-string-python"&gt;Generate random string Python&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#string-in-different-cases"&gt;String in different cases&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="#cryptographically-secure-strings"&gt;Cryptographically Secure strings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#closing-thoughts"&gt;Closing thoughts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#importing-string-and-random-modules"&gt;
  &lt;/a&gt;
  Importing string and random modules:
&lt;/h2&gt;

&lt;p&gt;In order to generate random strings in Python, we use the string and random modules. The string module contains Ascii string constants in various text cases, digits, etc. The random module on the other hand is used to generate pseudo-random values. In the last method, we would be using the secrets module to help us generate cryptographically secure strings.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#generate-random-string-python"&gt;
  &lt;/a&gt;
  Generate random string Python:
&lt;/h2&gt;

&lt;p&gt;Random strings are commonly generated and used widely. Although they serve a large number of use cases, the most common ones are random placeholder usernames, random phone numbers, passwords, etc.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#string-module"&gt;
  &lt;/a&gt;
  String Module
&lt;/h3&gt;

&lt;p&gt;Before we use the string module to generate a random string, let us look at the various types of string constants available.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;String.ascii_letters - returns a string of letters containing various cases.&lt;/li&gt;
&lt;li&gt;String.ascii_lowercase - returns a string with letters in lowercase.&lt;/li&gt;
&lt;li&gt;String.ascii_uppercase - returns a string with letters in uppercase.&lt;/li&gt;
&lt;li&gt;String.digits - returns a string containing digits&lt;/li&gt;
&lt;li&gt;String.punctuation - returns a string containing punctuations
I have listed the most commonly used string constant. However, you can view the entire list on the module documentation (String module).&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#random-module"&gt;
  &lt;/a&gt;
  Random Module:
&lt;/h3&gt;

&lt;p&gt;The random module is quite straightforward. It helps us pick a character at random. We use this method to pick characters from the string constant.&lt;br&gt;
However, there are two important sequences that you should be aware of:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Random.choices - returns elements at random. Here characters can not be unique.&lt;/li&gt;
&lt;li&gt;Random.sample - returns unique elements.
So while generating a random string in Python, If you are okay with repeating characters you can use the first method, and the second if you want unique characters.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#code-and-explanation"&gt;
  &lt;/a&gt;
  Code and Explanation:
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;string&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;choices&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ascii_lowercase&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This code generated returns one character at random. You can change the string constant method based on the characters you want.&lt;/p&gt;

&lt;p&gt;Now let us write the code to generate a string of length 5.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;string&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;''&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;choices&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ascii_lowercase&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For this, we pass another argument ‘k’ which denotes the size of the string. This method returns a list of characters, and hence we use the join method to convert it into a string.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#string-in-different-cases"&gt;
  &lt;/a&gt;
  String in different cases:
&lt;/h3&gt;

&lt;p&gt;In the previous method, we used string.ascii_lowercase. Let us try the letters constantly, we can also concatenate two different types of constants.&lt;/p&gt;

&lt;p&gt;Random string in uppercase:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;string&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;''&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;choices&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ascii_uppercase&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Using String.ascii.letters:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;string&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;''&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;choices&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ascii_letters&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Concatenating different types of string constants:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;string&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;''&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;choices&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ascii_uppercase&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ascii_lowercase&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I haven’t provided output snippets as my output would vary from yours. Also, in all the methods I have used the random.choices. Please feel free to try it out using the random.sample as well.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cryptographically-secure-strings"&gt;
  &lt;/a&gt;
  Cryptographically Secure strings:
&lt;/h2&gt;

&lt;p&gt;While we could use the random method to generate random string in Python, the string generated is not cryptographically secure. Hence it is not recommended while creating temp passwords.&lt;/p&gt;

&lt;p&gt;Python versions 3.6 and greater have a better way to generate a cryptographically secure random string. This method makes use of the secrets &amp;amp; string methods. Secrets are very similar to the random method, you can read more about it here.&lt;/p&gt;

&lt;p&gt;Code and Explanation:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;secrets&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;string&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;''&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;secrets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;choice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ascii_uppercase&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ascii_lowercase&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The secret methods do not have a .choices method which takes a second argument. Hence we use a loop and get the range to the number of characters.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#closing-thoughts"&gt;
  &lt;/a&gt;
  Closing thoughts:
&lt;/h2&gt;

&lt;p&gt;Both methods can be used to generate a random string in Python. However, which method you use would largely depend on your use case.&lt;/p&gt;

&lt;p&gt;A common mistake I have seen beginners make is forgetting to import the module before they use it. Do keep this in mind while you practice using the methods with other string contents.&lt;/p&gt;

</description>
      <category>python</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Top 10 dev.to articles of the month🏁.</title>
      <author>Kavindu Santhusa</author>
      <pubDate>Thu, 28 Oct 2021 11:37:57 +0000</pubDate>
      <link>https://dev.to/ksengine/top-10-devto-articles-of-the-month-3ngp</link>
      <guid>https://dev.to/ksengine/top-10-devto-articles-of-the-month-3ngp</guid>
      <description>&lt;p&gt;DEV is a community of software developers getting together to help one another out. The software industry relies on collaboration and networked learning. They provide a place for that to happen.&lt;br&gt;
Here is the most popular articles published on this platform.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/jburroughs" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7K0-XOS5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--vvj__Eh4--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/706259/8bb55f32-ccfd-4c18-bca0-9e93c9ac4c77.jpg" alt="jburroughs"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/jburroughs/bookmark-these-8-front-end-websites-now-gl0" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Bookmark These 8 Front-End Websites Now!&lt;/h2&gt;
      &lt;h3&gt;Jordan Burroughs ・ Sep 29 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#frontend&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/tyaga001" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HLEVy15e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--r5R8g_-j--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/350031/8417c751-9076-4e36-a6f5-757c7e279615.jpg" alt="tyaga001"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/tyaga001/if-i-were-to-restart-javascript-again-from-scratch-then-i-will-follow-this-roadmap-5c02" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;If I were to restart JavaScript again from scratch then I will follow this roadmap.&lt;/h2&gt;
      &lt;h3&gt;Ankur Tyagi ・ Oct 11 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#career&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/olanetsoft" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vcxcdfdQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--5q3JQbfH--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/229877/03a90e17-73eb-4c7a-9f6d-16a001ceb897.png" alt="olanetsoft"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/olanetsoft/12-github-repositories-to-help-you-ace-your-job-interview-2a08" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;12+ Github Repositories to Help You Ace Your Job Interview&lt;/h2&gt;
      &lt;h3&gt;Olubisi Idris Ayinde💡 ・ Sep 29 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/sourcegraph" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__org__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KF6o1GaU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--4xYIFUjp--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/organization/profile_image/4522/36950af1-cf2c-4979-bd0f-79873ddbc44d.png" alt="Sourcegraph" width="150" height="150"&gt;
      &lt;div class="ltag__link__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DKGnU9sV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--lqZ7uLPe--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/304853/b1f707ad-5975-4aca-a2bd-db854a60dda5.jpg" alt="" width="150" height="150"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/sourcegraph/15-developer-tools-to-make-you-super-productive-2g0a" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;15 Developer Tools to Make You Super Productive&lt;/h2&gt;
      &lt;h3&gt;Prosper Otemuyiwa for Sourcegraph ・ Sep 28 ・ 7 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#codenewbie&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#productivity&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#codequality&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/muthuannamalai12" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MmS9oXMT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--GDTulbee--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/561644/95b85f88-c16f-4b47-8552-b085d58e4362.jpeg" alt="muthuannamalai12"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/muthuannamalai12/10-github-repository-every-web-developer-should-know-10pm" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;10 GitHub Repository every Web Developer should Know&lt;/h2&gt;
      &lt;h3&gt;Muthu Annamalai Venkatachalam ・ Sep 30 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#productivity&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/j471n" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BBYX3NMU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--c3GArzgL--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/495014/71a61e33-e7af-4096-a8c7-db8e34db04e7.png" alt="j471n"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/j471n/10-css-resources-that-you-should-bookmark-46l6" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;10 CSS Resources that you should bookmark&lt;/h2&gt;
      &lt;h3&gt;Jatin Sharma ・ Oct 24 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/0shuvo0" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wZgMNup---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j0_lvM9_--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/728097/0f6e1da9-f243-42d0-b446-301ac6ea6412.jpeg" alt="0shuvo0"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/0shuvo0/lets-create-a-screen-recorder-with-js-3leb" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Lets create a screen recorder with JS&lt;/h2&gt;
      &lt;h3&gt;Shuvo ・ Oct 21 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/ali6nx404" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6eKJHV5k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--lDAn59NE--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/718375/5d79790f-4842-4a47-9082-e98b90319589.png" alt="ali6nx404"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/ali6nx404/cheat-sheets-that-always-save-my-time-during-web-development-2ga4" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Cheat Sheets that always save my time during web development 🚀&lt;/h2&gt;
      &lt;h3&gt;Mahesh Patidar ・ Oct 22 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#react&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdeveloper&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/madza" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hNmPLxzK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--Murl_iDf--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/159737/9f8f2a93-d0a1-4d77-a1f6-c3fc67ebde90.jpg" alt="madza"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/madza/12-simple-html-snippets-to-avoid-complex-libraries-3na8" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;12 Simple HTML Snippets To Avoid Complex Libraries ⚡✨&lt;/h2&gt;
      &lt;h3&gt;Madza ・ Oct 11 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#productivity&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/aviyel" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__org__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Jk48Byhz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--8ml24Y9z--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/organization/profile_image/3818/2fd02162-3471-44cd-8f8f-5336ddc7abc1.png" alt="Aviyel Inc" width="150" height="150"&gt;
      &lt;div class="ltag__link__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X1bzjyno--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--co8MU9_n--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/413418/f04996e5-b2bc-48b2-b362-dbe716bb5b38.JPG" alt="" width="150" height="150"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/aviyel/node-js-from-beginners-to-advance-31id" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Node.js from Beginners to Advance&lt;/h2&gt;
      &lt;h3&gt;Pramit Marattha for Aviyel Inc ・ Oct 8 ・ 9 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#node&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#mern&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
Enjoy these articles.&lt;br&gt;
Follow me for more articles.&lt;br&gt;
Thanks 💖💖💖

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>NodeJS + Express partie 3 : Les Middlewares</title>
      <author> Eric Le Codeur</author>
      <pubDate>Thu, 28 Oct 2021 11:37:24 +0000</pubDate>
      <link>https://dev.to/ericlecodeur/nodejs-express-partie-3-les-middlewares-2ljb</link>
      <guid>https://dev.to/ericlecodeur/nodejs-express-partie-3-les-middlewares-2ljb</guid>
      <description>&lt;p&gt;Voici une série d'articles qui vous permettra créer des applications backend avec NodeJS + Express.&lt;/p&gt;

&lt;p&gt;Cette série est la suite de ma série sur les bases de NodeJS. Si vous n'avez pas les connaissances de bases en NodeJS lisez cette série d'abord : &lt;a href="https://dev.to/ericlecodeur/creer-un-backend-en-javascript-introduction-a-node-js-3014"&gt;Introduction à NodeJS&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Node.js est aujourd'hui un incontournable, il est donc essentiel pour un développeur de le maitriser.&lt;/p&gt;

&lt;p&gt;Je vais donc publier un nouvel article environ au deux jours et petit à petit vous apprendrez tout ce qu'il y a à savoir sur Node.js + Espress&lt;/p&gt;

&lt;p&gt;Pour ne rien manquer suivez moi sur twitter : &lt;a href="https://twitter.com/EricLeCodeur"&gt;https://twitter.com/EricLeCodeur&lt;/a&gt;&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#les-middlewares"&gt;
  &lt;/a&gt;
  Les Middlewares
&lt;/h3&gt;

&lt;p&gt;Les middlewares sont des fonctions qui s'exécutent lors de la requête au serveur. Ces fonctions ont accès aux paramètres de la requête et de la réponse et peuvent donc effectuer beaucoup de choses pour améliorer/automatiser les fonctionnalités de l'API&lt;/p&gt;

&lt;p&gt;Le middleware se situe entre la requête et la réponse&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="nx"&gt;request&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;midlleware&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#cr%C3%A9ez-votre-premier-middleware"&gt;
  &lt;/a&gt;
  Créez votre premier Middleware
&lt;/h3&gt;

&lt;p&gt;Supposons que nous voulions une fonction pour enregistrer l'adresse URL de la requête chaque fois qu'une page est visitée.&lt;/p&gt;

&lt;p&gt;Sans middleware, nous aurions pu le faire avec un code comme celui-ci :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/about&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;About Page&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Cela fonctionnera très bien, mais que se passe-t-il si nous avons 100 chemin différents ? Nous ne pouvons pas copier/coller ces lignes console.log() sur toutes les routes.&lt;/p&gt;

&lt;p&gt;Une solution consiste à mettre ces log dans une fonction middleware&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;logger&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;C'est une fonction assez simple. Vous connaissez déjà les paramètres req et res. La nouveauté ici est la fonction next(). La fonction next() est une fonction prédéfinie Espress qui redonne le contrôle aux routes appelantes. Après l'exécution de console.log(), la requête doit continuer sa route vers la route d'appel.&lt;/p&gt;

&lt;p&gt;Voici un exemple complet d'un middleware&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;logger&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// execute your middleware for all requests&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/about&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;About Page&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Lorsque l'utilisateur visite "/about" Express exécute le app.get(). Mais juste avant, il exécutera le middleware spécifié dans app.use(). Une fois le middleware exécuté, next() continuera l'exécution de app.get()&lt;/p&gt;

&lt;p&gt;Voici la séquence d'exécution :&lt;/p&gt;

&lt;p&gt;requête client → /about ⇒ logger() → app.get() → réponse client&lt;/p&gt;

&lt;p&gt;Lors de la création d'un middleware, vous n'êtes pas obligé d'utiliser le next(). Vous pouvez envoyer votre propre réponse et remplacer/omettre complètement app.get()&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;logger&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Custom About page&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Voici la séquence d'exécution :&lt;/p&gt;

&lt;p&gt;requête client → /about ⇒ logger() → réponse client&lt;/p&gt;

&lt;p&gt;Si le middleware ne s'applique qu'à une ou deux routes, vous pouvez utiliser cette syntaxe pour exécuter le middleware uniquement pour ces routes&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;logger&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/about&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;About Page&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Nous avons noté que nous n'avons pas utilisé l'app.use() mais seulement spécifié une fonction middleware en tant que paramètre de l'app.get()&lt;/p&gt;

&lt;p&gt;Vous pouvez également exécuter votre middleware uniquement pour les requêtes qui se trouvent sous un chemin spécifique ex : /api&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/api&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Plusieurs middleware peuvent être utilisés en même temps&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="nx"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notez que le middleware sera exécuté dans le même ordre que declare.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#le-middleware-peut-modifier-lobjet-req-et-lobjet-res"&gt;
  &lt;/a&gt;
  Le middleware peut modifier l'objet req et l'objet res
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;auth&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;admin&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;admin&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;401&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Unauthorized&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Dans le dernier exemple, nous ajoutons un objet utilisateur à la requête. Cet objet utilisateur peut maintenant être utilisé avec les routes.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/about&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;About Page&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Cet exemple a été ultra simplifié mais il montre la vraie puissance d'un middleware&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;C'est tout pour aujourd'hui, suivez moi sur twitter : &lt;a href="https://twitter.com/EricLeCodeur"&gt;https://twitter.com/EricLeCodeur&lt;/a&gt; afin d'être avisé de la parution du prochain article (d'ici deux jours).&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>node</category>
      <category>express</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Streaming Data Solutions on AWS with Amazon Kinesis | AWS White Paper Summary</title>
      <author>Adit Modi</author>
      <pubDate>Thu, 28 Oct 2021 11:03:56 +0000</pubDate>
      <link>https://dev.to/awsmenacommunity/streaming-data-solutions-on-aws-with-amazon-kinesis-aws-white-paper-summary-5f47</link>
      <guid>https://dev.to/awsmenacommunity/streaming-data-solutions-on-aws-with-amazon-kinesis-aws-white-paper-summary-5f47</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Businesses today receive data at massive scale and speed due to the explosive growth of data sources that continuously generate streams of data. Whether it is log data from application servers, clickstream data from websites and mobile apps, or telemetry data from Internet of Things (IoT) devices, it all contains information that can help you learn about what your customers, applications, and products are doing right now.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#realtime-and-nearrealtime-application-scenarios"&gt;
  &lt;/a&gt;
  Real-time and near-real-time application scenarios
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;You can use streaming data services for real-time and near-real-time applications such as application monitoring, fraud detection, and live leaderboards. Real-time use cases require millisecond end-to-end latencies– from ingestion, to processing, all the way to emitting the results to target data stores and other systems.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;For example, Netflix uses Amazon Kinesis Data Streams to monitor the communications between all its applications so it can detect and fix issues quickly, ensuring high service uptime and availability to its customers. While the most commonly applicable use case is application performance monitoring, there are an increasing number of real-time applications in ad tech, gaming, and IoT that fall under this category.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#difference-between-batch-and-stream-processing"&gt;
  &lt;/a&gt;
  Difference between batch and stream processing
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;You need a different set of tools to collect, prepare, and process real-time streaming data than those tools that you have traditionally used for batch analytics. With traditional analytics, you gather the data, load it periodically into a database, and analyze it hours, days, or weeks later. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Analyzing real-time data requires a different approach. Stream processing applications process data continuously in real-time, even before it is stored. Streaming data can come in at a blistering pace and data volumes can vary up and down at any time. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Stream data processing platforms have to be able to handle the speed and variability of incoming data and process it as it arrives, often millions to hundreds of millions of events per hour.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#stream-processing-challenges"&gt;
  &lt;/a&gt;
  Stream processing challenges
&lt;/h1&gt;

&lt;p&gt;building and operating your own custom streaming data pipelines is complicated and resource-intensive:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;You have to build a system that can cost-effectively collect, prepare, and transmit data coming simultaneously from thousands of data sources.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You need to fine-tune the storage and compute resources so that data is batched and transmitted efficiently for maximum throughput and low latency.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You have to deploy and manage a fleet of servers to scale the system so you can handle the varying speeds of data you are going to throw at it.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Version upgrade is a complex and costly process. After you have built this platform, you have to monitor the system and recover from any server or network failures by catching up on data processing from the appropriate point in the stream, without creating duplicate data. You also need a dedicated team for infrastructure management.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#streaming-data-solutions-examples"&gt;
  &lt;/a&gt;
  Streaming data solutions: examples
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#scenario-1-internet-offering-based-on-location"&gt;
  &lt;/a&gt;
  Scenario 1: Internet offering based on location
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z4HMadNo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n0c84wqpnqb86ajor393.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z4HMadNo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n0c84wqpnqb86ajor393.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Company InternetProvider leveraged Amazon Kinesis Data Streams to stream user details and location. The stream of record was consumed by AWS Lambda to enrich the data with bandwidth options stored in the function’s library. After the enrichment, AWS Lambda published the bandwidth options back to the application. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Amazon Kinesis Data Streams and AWS Lambda handled provisioning and management of servers, enabling company InternetProvider to focus more on business application development. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#scenario-2-nearrealtime-data-for-security-teams"&gt;
  &lt;/a&gt;
  Scenario 2: Near-real-time data for security teams
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LIps8PXx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bk8940ee3sob5xnmvz3t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LIps8PXx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bk8940ee3sob5xnmvz3t.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Kinesis Data Firehose can persistently deliver your streaming data to a supported destination. It’s a fully-managed solution, requiring little or no development. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;For Company ABC2Badge, using Kinesis Data Firehose was a natural choice. They were already using Amazon Redshift as their data warehouse solution. Because their data sources continuously wrote to transaction logs, they were able to leverage the Amazon Kinesis Agent to stream that data without writing any additional code. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Now that company ABC2Badge has created a stream of sensor records and are receiving these records via Kinesis Data Firehose, they can use this as the basis for the security team use case.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#scenario-3-preparing-clickstream-data-for-data-insights-processes"&gt;
  &lt;/a&gt;
  Scenario 3: Preparing clickstream data for data insights processes
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VFzMU5ev--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j8soujtj9z0donbpd5xh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VFzMU5ev--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j8soujtj9z0donbpd5xh.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Amazon Kinesis Data Streams makes it easy to collect, process, and analyze real-time, streaming data so you can get timely insights and react quickly to new information. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Combined with the AWS Glue serverless data integration service, you can create real-time event streaming applications that prepare and combine data for ML.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Because both Kinesis Data Streams and AWS Glue services are fully managed, AWS takes away the undifferentiated heavy lifting of managing infrastructure for your big data platform, letting you focus on generating data insights based on your data.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Fast Sneakers can utilize real-time event processing and ML to enable their website to make fully automated real-time price adjustments, to maximize their product stock. This brings the most value to their business while avoiding the need to create and maintain a big data platform.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#scenario-4-device-sensors-realtime-anomaly-detection-and-notifications"&gt;
  &lt;/a&gt;
  Scenario 4: Device sensors real-time anomaly detection and notifications
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nV4jYk09--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6x35n8vmwgd7oo6tl261.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nV4jYk09--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6x35n8vmwgd7oo6tl261.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;By making use of the AWS streaming services Amazon Kinesis Data Streams, Amazon Kinesis Data Analytics, and Amazon Kinesis Data Firehose,&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ABC4Logistics can detect anomalous patterns in temperature readings and notify the driver and the fleet management team in real-time, preventing major accidents such as complete vehicle breakdown or fire. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#scenario-5-real-time-telemetry-data-monitoring-with-apache-kafka"&gt;
  &lt;/a&gt;
  Scenario 5: Real time telemetry data monitoring with Apache Kafka
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8jAJmaUt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hgreo2ppy3sedjl6hg72.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8jAJmaUt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hgreo2ppy3sedjl6hg72.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;With Apache Kafka offered as a managed service on AWS, you can focus on consumption rather than on managing the coordination between the brokers, which usually requires a detailed understanding of Apache Kafka. Features such as high availability, broker scalability, and granular access control are managed by the Amazon MSK platform.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ABC1Cabs utilized these services to build production application without needing infrastructure management expertise. They could focus on the processing layer to consume data from Amazon MSK and further propagate to visualization layer.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Spark Streaming on Amazon EMR can help real-time analytics of streaming data, and publishing on OpenSearch Dashboards on Amazon OpenSearch Service for the visualization layer. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;This document reviewed several scenarios for streaming workflows. In these scenarios, streaming data processing provided the example companies with the ability to add new features and functionality.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;By analyzing data as it gets created, you will gain insights into what your business is doing right now. AWS streaming services enable you to focus on your application to make time-sensitive business decisions, rather than deploying and managing the infrastructure.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#reference"&gt;
  &lt;/a&gt;
  Reference
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://docs.aws.amazon.com/whitepapers/latest/streaming-data-solutions-amazon-kinesis/streaming-data-solutions-amazon-kinesis.pdf#conclusion-and-contributors"&gt;Original paper&lt;/a&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>cloud</category>
      <category>datascience</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Building a Search UI with Typesense</title>
      <author>Farhan Hasin Chowdhury</author>
      <pubDate>Thu, 28 Oct 2021 10:43:06 +0000</pubDate>
      <link>https://dev.to/fhsinchy/building-a-search-ui-with-typesense-1ki2</link>
      <guid>https://dev.to/fhsinchy/building-a-search-ui-with-typesense-1ki2</guid>
      <description>&lt;p&gt;If you've been working as a web developer for some time, then you may have worked on a search feature in one of your projects. Search bars are one of the most common components of any website and depending on the type of website you're working on, not having a fast and powerful search feature can be a deal breaker.&lt;/p&gt;

&lt;p&gt;As easy to find on the web as they may be, creating a search functionality that's fast and works flawlessly is hard, and that's where &lt;a href="https://aviyel.com/projects/typesense"&gt;Typesense&lt;/a&gt; can make your life a lot easier. According to their &lt;a href="https://typesense.org/about/"&gt;About Us&lt;/a&gt; page, "Typesense is an open source, typo tolerant search engine optimized for instant sub-50ms searches while providing an intuitive developer experience."&lt;/p&gt;

&lt;p&gt;It's similar to Elastic Search or Algolia but free and open source. &lt;a href="https://typesense.org/"&gt;Typesense&lt;/a&gt; is written in C++ and comes as a Docker image, making it very straightforward to self-host. They also have a managed service aptly called &lt;a href="https://cloud.typesense.org"&gt;Typesense Cloud&lt;/a&gt;. In this article, I'll guide you through building a robust search functionality using Typesense and Vue.&lt;/p&gt;

&lt;p&gt;You can read the entire write-up on &lt;a href="https://aviyel.com/post/1288/building-a-search-ui-with-typesense"&gt;Aviyel&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>vue</category>
      <category>docker</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>7 Qualitative Metrics to Measure Code Quality Engineer Should Know</title>
      <author>Alex Omeyer</author>
      <pubDate>Thu, 28 Oct 2021 10:14:59 +0000</pubDate>
      <link>https://dev.to/alexomeyer/7-qualitative-metrics-to-measure-code-quality-engineer-should-know-odd</link>
      <guid>https://dev.to/alexomeyer/7-qualitative-metrics-to-measure-code-quality-engineer-should-know-odd</guid>
      <description>&lt;p&gt;High-quality code is critical to creating functional error and bug-free software that is easy to edit and understand. But while we sometimes spot our own errors, we need to really dig a little deeper.&lt;/p&gt;

&lt;p&gt;Measuring code quality lets Engineers troubleshoot effectively, prioritise their time and run better &lt;a href="https://www.stepsize.com/blog/how-to-run-an-effective-sprint-planning-meeting"&gt;sprint planning meetings&lt;/a&gt;. With these code quality metrics, engineering teams can see trends and patterns of the problem areas that need fixing.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-measure-code-quality-the-7-most-critical-qualitative-metrics"&gt;
  &lt;/a&gt;
  How to measure code quality: The 7 most critical qualitative metrics
&lt;/h2&gt;

&lt;p&gt;Do a bunch of reading on code quality, and seven things appear consistently as a way to measure your code quality. You can ask yourself these questions that are as much about how you code, as your bigger workplace priorities:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Can your code be easily read by even beginner developers?&lt;/li&gt;
&lt;li&gt;Is your code extensible, can it be edited by developers who aren't the original author?&lt;/li&gt;
&lt;li&gt;Is your code easy to maintain? &lt;/li&gt;
&lt;li&gt;How's the code for portability?&lt;/li&gt;
&lt;li&gt;Is your code well tested for quality and bugs?&lt;/li&gt;
&lt;li&gt;Does regularly updated documentation accompany your code?&lt;/li&gt;
&lt;li&gt;Is your code &lt;a href="https://www.stepsize.com/blog/when-to-refactor-code-and-how-to-get-buy-in"&gt;refactored&lt;/a&gt; regularly to reduce the problem of technical debt? &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you want to track these qualitative metrics, try out editor-fist tool &lt;a href="https://www.stepsize.com/?utm_medium=dev.to&amp;amp;utm_source=referral&amp;amp;utm_campaign=code%20quality%20metrics"&gt;Stepsize&lt;/a&gt;. You can create &amp;amp; prioritise technical issues and gradually improve your codebase quality.&lt;/p&gt;

&lt;p&gt;It’ll help you answer questions such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Does this issue slow down your development? Will the next sprint be affected by it?&lt;/li&gt;
&lt;li&gt;How difficult is it to work with this code? Can other Engineers understand and change it quickly?&lt;/li&gt;
&lt;li&gt;How does this issue affect our customers?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These metrics are impossible to automate but you can create a habit in your Engineering team to report and address technical issues on a regular basis.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hxjFd10u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v90e6gi5ykba2xwf59os.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hxjFd10u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v90e6gi5ykba2xwf59os.png" alt="Image description" width="872" height="272"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-about-quantitative-metrics"&gt;
  &lt;/a&gt;
  What about quantitative metrics?
&lt;/h2&gt;

&lt;p&gt;The 1970s were a big time for software development, and two key schools of thought emerged that aim to improve code quality by reducing code complexity, especially regarding maintainability: &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#halstead-complexity-measures"&gt;
  &lt;/a&gt;
  Halstead Complexity Measures
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8FVro1bX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wzh2okyskzxr1g3cwf1f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8FVro1bX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wzh2okyskzxr1g3cwf1f.png" alt="Image description" width="880" height="462"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The &lt;a href="https://www.stepsize.com/blog/how-to-measure-code-quality-7-metrics-every-engineer-should-know#:~:text=The-,Halstead%20Complexity%20Measures,-offer%20an%20algorithmic"&gt;Halstead Complexity&lt;/a&gt; Measures offer an algorithmic way of identifying the measurable properties of software and their relationships with each other. These metrics include vocabulary, program length, the number of bugs, and testing time. They are primarily used to measure maintainability. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cyclomatic-complexity"&gt;
  &lt;/a&gt;
  Cyclomatic Complexity
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Cyclomatic_complexity"&gt;Cyclomatic complexity&lt;/a&gt; counts the number of linearly independent paths within your source code. The hypothesis is that the higher the cyclomatic complexity, the more chance of errors. A modern use of cyclomatic complexity is to improve software testability. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#yes-you-can-automate-that-shiz"&gt;
  &lt;/a&gt;
  Yes, you can automate that shiz:
&lt;/h3&gt;

&lt;p&gt;If your eyes are blurring over as you slept through the quantitative metrics class at university, don't stress. There's plenty of tools available that help teams automate the code review process: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.codacy.com/"&gt;Codacy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://codeclimate.com/quality/"&gt;Code Climate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.codegrip.tech/"&gt;CodeGrip&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://codescene.io/"&gt;CodeScene&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reviewboard.org/"&gt;Reviewboard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://smartbear.com/"&gt;Smartbear&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.sonarqube.org/"&gt;SonarQube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.veracode.com/"&gt;Veracode&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A static code analyser can help you highlight possible vulnerabilities within 'static' (non-running) source code, such as security vulnerabilities. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.stepsize.com/blog/how-to-measure-code-quality-7-metrics-every-engineer-should-know#:~:text=as%20security%20vulnerabilities.%C2%A0-,OWASP,-keeps%20a%20great"&gt;OWASP&lt;/a&gt; keeps a great list of Source Code Analysis Tools. There's also a &lt;a href="https://en.wikipedia.org/wiki/List_of_tools_for_static_code_analysis"&gt;mammoth list&lt;/a&gt; on Wikipedia, including tools suitable for more esoteric programming languages. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tips-on-how-to-improve-code-quality"&gt;
  &lt;/a&gt;
  Tips on how to improve code quality
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qD7GYdX8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cwqzjyn8ws95onyds6zu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qD7GYdX8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cwqzjyn8ws95onyds6zu.png" alt="Image description" width="880" height="697"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A &lt;a href="https://static1.smartbear.co/smartbearbrand/media/pdf/the-2020-state-of-code-review.pdf"&gt;2020 Code Review&lt;/a&gt; survey by Smart Bear found that the number one way a company can improve code quality is through Code Review. Results also indicated that Unit Testing is the second most important at 20% of responses, followed by Continuous Integration and Continuous Testing.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mlYTXs3T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y6jtcevs9t34nc5uqfmd.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mlYTXs3T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y6jtcevs9t34nc5uqfmd.jpeg" alt="Image description" width="880" height="411"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What's significant about the top six tasks is that they require intention (they don't just magically happen). Even better, you can largely automate them. &lt;/p&gt;

&lt;p&gt;Automating tasks makes it easy to incorporate them into your everyday work tasks rather than something that involves a mammoth undertaking to fix. &lt;/p&gt;

&lt;p&gt;Would you rather deal with tasks like &lt;a href="https://www.stepsize.com/blog/how-to-convince-people-to-deal-with-a-tech-debt"&gt;technical debt&lt;/a&gt; and code refactoring in small increments or have to block out large chunks of time to fix them because your code smells? Has &lt;a href="https://www.stepsize.com/blog/engineers-guide-to-legacy-code-and-technical-debt"&gt;legacy code&lt;/a&gt; your team should have dealt with stopped you from bug fixing, and are project deadlines pushed back time and time again? &lt;/p&gt;

&lt;p&gt;Then there are things like style guides, documentation, and clear version control. How a company prioritises these often depends on their turnover - a short-staffed team with high turnover is unlikely to make these a priority, nor training and onboarding. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-choose-the-right-code-quality-metrics-for-your-team"&gt;
  &lt;/a&gt;
  How to choose the right code quality metrics for your team
&lt;/h2&gt;

&lt;p&gt;Ultimately, what metrics serve you best will depend on a range of factors. These include: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The size of the team.&lt;/li&gt;
&lt;li&gt;The level of experience in your team.&lt;/li&gt;
&lt;li&gt;Passion projects (some people love code refactoring while others are happy writing documentation, for example).&lt;/li&gt;
&lt;li&gt;Company values - does your company prioritise code quality, or is it simply ship fast and fix later only if more than a handful of people complain?&lt;/li&gt;
&lt;li&gt;Time management: How often do you allocate time to work on bug fixing and technical debt.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#start-tracking-code-issues-and-reducing-technical-debt"&gt;
  &lt;/a&gt;
  Start tracking code issues and reducing technical debt
&lt;/h2&gt;

&lt;p&gt;Many great tools help measure code quality. However, there are technical issues that affect your code quality that these tools simply can't catch. &lt;/p&gt;

&lt;p&gt;The simplest way to start improving your code quality is to install Stepsize &lt;a href="https://www.stepsize.com/r/vscode?utm_medium=dev.to&amp;amp;utm_source=referral&amp;amp;utm_campaign=code%20quality%20metrics"&gt;VS Code&lt;/a&gt; and &lt;a href="https://www.stepsize.com/r/jetbrains?utm_medium=dev.to&amp;amp;utm_source=referral&amp;amp;utm_campaign=code%20quality%20metrics"&gt;JetBrains&lt;/a&gt; extensions and start tracking codebase issues with your team. You will quickly see how much information you already have to improve your code quality and ship functional software faster.&lt;/p&gt;

</description>
      <category>codequality</category>
      <category>tooling</category>
      <category>programming</category>
      <category>vscode</category>
    </item>
    <item>
      <title>7 Sources To Learn New Skills For Free</title>
      <author>Danish Saleem</author>
      <pubDate>Thu, 28 Oct 2021 10:04:56 +0000</pubDate>
      <link>https://dev.to/mrdanishsaleem/7-sources-to-learn-new-skills-for-free-h5c</link>
      <guid>https://dev.to/mrdanishsaleem/7-sources-to-learn-new-skills-for-free-h5c</guid>
      <description>&lt;p&gt;These free sources will certainly help you to learn and improve your skills. Here's the 7 free sources you can go to learn new skills for free.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#coursera"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.coursera.org/"&gt;Coursera&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Just choose a course, and apply for a &lt;a href="https://www.coursera.org/degrees/coursera-financial-resources"&gt;financial fund&lt;/a&gt;, they give it all.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#udemy"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.udemy.com/"&gt;Udemy&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Many courses are free. They have almost every course you need to learn. (PS: You can also download pirated courses)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#linkedin-learning"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.linkedin.com/learning/"&gt;LinkedIn Learning&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;They teach very good and got a vast learning library. They offer 1-month free trial, and it's best, and recommended.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#datacamp"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.datacamp.com/"&gt;DataCamp&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;From DataCamp, you can learn &lt;a href="https://www.datacamp.com/courses/data-engineering-for-everyone"&gt;Data Science&lt;/a&gt;, &lt;a href="https://www.datacamp.com/courses/free-introduction-to-r"&gt;R&lt;/a&gt;, &lt;a href="https://www.datacamp.com/courses/intro-to-python-for-data-science"&gt;Python&lt;/a&gt; and much more for free.&lt;/p&gt;

&lt;p&gt;They provide 2 months free through Microsoft Virtual Studio account.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#udacity"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.udacity.com/"&gt;Udacity&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;You can audit some of the courses for free, but you won't get the certificate.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#skillshare"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.skillshare.com/"&gt;SkillShare&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;My most favorite to learn something new. It is fully free for students and gives up to 1 year free membership.&lt;/p&gt;

&lt;p&gt;Highly recommended.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#youtube"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.youtube.com/"&gt;YouTube&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The information is raw and outstanding but its not organized. &lt;a href="https://www.youtube.com/"&gt;YouTube&lt;/a&gt; is still the best way to get started with learning for free.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#lets-connect"&gt;
  &lt;/a&gt;
  Let's connect!
&lt;/h2&gt;

&lt;p&gt;You can follow me on &lt;a href="https://twitter.com/MrDanishSaleem"&gt;Twitter&lt;/a&gt;, &lt;a href="https://www.linkedin.com/in/mrdanishsaleem/"&gt;LinkedIn&lt;/a&gt; &amp;amp; &lt;a href="https://github.com/mrdanishsaleem/"&gt;GitHub&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;If you like this post. Kindly support me by &lt;a href="https://www.buymeacoffee.com/mrdanishsaleem"&gt;Buying Me a Coffee&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IrvJezlq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v0ikih5nlsqs0oops11e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IrvJezlq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v0ikih5nlsqs0oops11e.png" alt="Buy Me a Coffee" width="880" height="193"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>tutorial</category>
      <category>career</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>P42 for GitHub is now P42+</title>
      <author>Lars Grammel</author>
      <pubDate>Thu, 28 Oct 2021 09:53:08 +0000</pubDate>
      <link>https://dev.to/p42/p42-for-github-is-now-p42-59g3</link>
      <guid>https://dev.to/p42/p42-for-github-is-now-p42-59g3</guid>
      <description>&lt;p&gt;Over the last five months, P42 has grown from a code modernization tool for GitHub to a programming assistant for JavaScript and TypeScript with VS Code integration. The modernization included a significant update for &lt;a href="https://p42.ai/p42-plus"&gt;P42+&lt;/a&gt; (previously P42 for GitHub). &lt;/p&gt;

&lt;p&gt;What has changed?&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#p42-javascript-assistant-for-vs-code-replaces-pull-request-creation"&gt;
  &lt;/a&gt;
  P42 JavaScript Assistant for VS Code Replaces Pull Request Creation
&lt;/h4&gt;

&lt;p&gt;The &lt;a href="https://marketplace.visualstudio.com/items?itemName=p42ai.refactor"&gt;P42 JavaScript Assistant&lt;/a&gt; adds 46 refactorings, cleanups, and code actions for JavaScript and TypeScript to VS Code. It replaces the previous pull request creation by P42. You now have complete control and flexibility to update single files and folders, test and review the changes, and land them in version control without being limited to P42-generated GitHub pull requests. As a bonus, P42+ now only needs read access to your GitHub repository.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#analysis-results-on-repository-page"&gt;
  &lt;/a&gt;
  Analysis Results on Repository Page
&lt;/h4&gt;

&lt;p&gt;All analysis results are shown on a single repository page for each of your repositories now. P42 organizes the results by file so that you can find all suggestions for a single file in one place.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#21-additional-code-analyses"&gt;
  &lt;/a&gt;
  21 Additional Code Analyses
&lt;/h4&gt;

&lt;p&gt;P42+ adds 21 code analyses that look for improvement opportunities in your codebase. For example, modernizations such as &lt;a href="https://p42.ai/documentation/code-action/add-numeric-separator"&gt;adding numeric separators&lt;/a&gt; and simplifications such as &lt;a href="https://p42.ai/documentation/code-action/merge-nested-if"&gt;merging nested if statements&lt;/a&gt;. In total, P42+ has 32 analyses now. You can configure them in the "configure" tab of the repository page. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#public-p42-results-for-public-repositories"&gt;
  &lt;/a&gt;
  Public P42+ Results for Public Repositories
&lt;/h4&gt;

&lt;p&gt;Starting Nov 15, the P42+ analysis results for public GitHub repositories will be available publicly on the P42 website. Analysis results for private repositories remain private (and cannot be publicly shared for security reasons).&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#new-p42-team-plan-pricing"&gt;
  &lt;/a&gt;
  New P42+ Team Plan Pricing
&lt;/h4&gt;

&lt;p&gt;The new price for the P42+ Team plan is $9 per active contributor per month (previously $19). The price for the Personal plan is $4 per active contributor per month. P42+ is free for public open-source GitHub repositories. See the &lt;a href="https://p42.ai/p42-plus"&gt;P42+ page&lt;/a&gt; for pricing plan details.&lt;/p&gt;

&lt;p&gt;I hope the new features of P42+ will make your work easier!&lt;/p&gt;

&lt;p&gt;Happy refactoring!&lt;/p&gt;

</description>
      <category>github</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>news</category>
    </item>
    <item>
      <title>Cost to Create Real Estate App like Zillow</title>
      <author>WebClues Infotech</author>
      <pubDate>Thu, 28 Oct 2021 09:53:05 +0000</pubDate>
      <link>https://dev.to/idrishwebclues/cost-to-create-real-estate-app-like-zillow-25dm</link>
      <guid>https://dev.to/idrishwebclues/cost-to-create-real-estate-app-like-zillow-25dm</guid>
      <description>&lt;p&gt;The traditional way of buying or selling a real estate property used to be with the help of an agent or broker. The broker is generally familiar with all of the builders in the city/town they work in and are being regularly updated by the builders of the available properties for selling/buying.&lt;/p&gt;

&lt;p&gt;So whenever a new customer wishes to buy the real estate property they contact the brokers. The broker depending on the budget &amp;amp; requirement of the customer shows different properties for a physical tour.&lt;/p&gt;

&lt;p&gt;Usually, a buyer and seller have taken time out of their busy schedule to take the property tour and after checking out multiple properties the customer decides on one property to be purchased.&lt;/p&gt;

&lt;p&gt;On finalization of the deal, the broker is paid a certain percentage of the transaction value as brokerage fees by both the buyer and seller. These brokerage fees are an extra dent in the customer's pocket be it a buyer or a seller.&lt;/p&gt;

&lt;p&gt;As mentioned earlier this method is a traditional one and the millennial generation believes in breaking the tradition of the past and inventing easy and convenient options for everything that can be accessed or fulfilled with the help of the internet.&lt;/p&gt;

&lt;p&gt;Real estate app like Zillow is one such making of the internet revolution that swapped the world with the easy and convenient option in buying and selling real estate properties.&lt;/p&gt;

&lt;p&gt;So the question here is how does a real estate app like Zillow work?&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hOyI3BPM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w98ko2i1yhl7sdm84p1a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hOyI3BPM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w98ko2i1yhl7sdm84p1a.png" alt="Real Estate App Development" width="880" height="517"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#how-does-zillow-app-work"&gt;
  &lt;/a&gt;
  How does Zillow App Work
&lt;/h1&gt;

&lt;p&gt;Zillow app connects buyers and sellers without the need of the broker in between for the transaction. A property seller registers on the platform uploads the details of the property like the land area, build-up area, condition, how old is the property, maintenance cost, uploads pictures of the property, creates a virtual video tour, expected cost, etc.&lt;/p&gt;

&lt;p&gt;Now once the properties are registered on the platform the buyer who is looking for good property registers on the platform. Searches for property types like flats, bungalows, and office spaces in the designated location. The properties available on the location are shown to the buyer on their web or app screen. Based on the icon images the user checks out the property details along with a virtual tour and if the property is worth consideration they contact the seller directly within the app for a physical tour of the property.&lt;/p&gt;

&lt;p&gt;On real estate property meeting the desired requirement the deal is finalized and the brokerage cost is highly saved by the buyer and seller which is the benefit of both the parties&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#mindblowing-facts-about-online-real-estate"&gt;
  &lt;/a&gt;
  Mind-Blowing Facts about Online Real Estate
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Bob4UEO7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lw2b6a9swzgdegqb90dt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Bob4UEO7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lw2b6a9swzgdegqb90dt.png" alt="Facts about Online Real Estate" width="880" height="1245"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If we are going to &lt;a href="https://www.webcluesinfotech.com/how-to-create-a-real-estate-marketplace-like-zillow/"&gt;develop a real estate app like Zillow&lt;/a&gt; then it is important to understand the competitors in the space. So let us look at some of the online real estate competitors.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-the-other-real-estate-platforms-like-zillow"&gt;
  &lt;/a&gt;
  What are the other real estate platforms like Zillow?
&lt;/h2&gt;

&lt;p&gt;Zillow is considered to be one of the front runners in the online real estate space. Be it launching new properties or creating a better user experience for the property buyers.&lt;/p&gt;

&lt;p&gt;The list of competitors of real estate app Zillow that are fast trying to cover the market and are head to head with Zillow are&lt;/p&gt;

&lt;p&gt;• Trulia (Now acquired by Zillow)&lt;br&gt;
• Yahoo Homes&lt;br&gt;
• Realtor&lt;br&gt;
• Redfin&lt;br&gt;
• Homes&lt;br&gt;
• Apartment Guide&lt;br&gt;
• Curbed&lt;/p&gt;

&lt;p&gt;There are many other real estate apps operating in the USA but the major share of the market is covered by this real estate website and apps.&lt;/p&gt;

&lt;p&gt;Once you are aware of the competitors in real estate apps it is time to study each in detail and list out the features that help them stand apart from their competitors in terms of unique offerings and user experience.&lt;/p&gt;

&lt;p&gt;So let us briefly understand the features required in real estate app like Zillow as features are the direct &lt;a href="https://www.webcluesinfotech.com/how-to-create-a-real-estate-marketplace-like-zillow/"&gt;cost affecting factors behind developing an app like Zillow&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#features-in-real-estate-app-like-zillow"&gt;
  &lt;/a&gt;
  Features in Real Estate App like Zillow
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;1. User Registration &amp;amp; Login&lt;/strong&gt;&lt;br&gt;
If the user visiting the app is a first-time visitor then they should be easily able to register themselves or is a repeating user then should be able to login with the login credential unique to each user.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Search with Filters&lt;/strong&gt;&lt;br&gt;
A user once registered will start looking for properties by filtering the results with location, type of property, budget range, amenities, buy/rent, etc.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Access to Property &amp;amp; Neighbourhood Info&lt;/strong&gt;&lt;br&gt;
On the results/listing page, the user should be able to check the basic details like image, price, location, and type of properties. The user should be able to get detailed info on the property like the space details, neighborhood details like nearby hospitals, schools, etc.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Property submission feature for Seller&lt;/strong&gt;&lt;br&gt;
A buyer would not be able to find anything if there are no properties listed by sellers. So a property listing features for sellers should be available for people who wish to sell their properties on the platform.&lt;/p&gt;

&lt;p&gt;The seller should be able to submit high-quality images that assist in the decision-making process of the buyers.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. Geolocation&lt;/strong&gt;&lt;br&gt;
Geo-location features help the user filter properties based on location as well as find navigation routes when physically visiting properties.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6. CRM Integration for Builders&lt;/strong&gt;&lt;br&gt;
Most properties listed on real estate platforms are by the builders of the properties. So a feature to integrate the platform with the CRM system of the builder will make managing the properties and customers convenient for the builder.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;7. Heat Maps&lt;/strong&gt;&lt;br&gt;
Heat maps are an analytics feature that helps the seller and knows which part of the property is deeply researched by the buyer. This feature helps the marketing team to focus on the area of properties most searched by the buyers.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;8. Cost Calculator&lt;/strong&gt;&lt;br&gt;
The cost calculator is used when the property allows customizations in the amenities offered. The cost calculator should be automatically able to find the cost involved for certain amenities.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;9. Notifications&lt;/strong&gt;&lt;br&gt;
Notifications are one of the primary reasons some businesses prefer to develop an app. Notifications help you in keeping your customers updated about the promotions or any other event that be of use to them.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://webcluesinfotech.com/get-quote/"&gt;I Want to Build with my Own Feature Set&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#advanced-features-in-real-estate-app-like-zillow"&gt;
  &lt;/a&gt;
  Advanced Features in Real Estate app like Zillow
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;1. Video Walk Through&lt;/strong&gt;&lt;br&gt;
This feature lets the buyer take a video walk-through uploaded by the seller. The video walk-through reduces the time of checking put each property physically by the buyer and the seller.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Satellite / Map / Street View&lt;/strong&gt;&lt;br&gt;
This feature lets the buyer check out the nearby areas in all of the views which makes the decision-making process quick and satisfying. This feature can easily be integrated with the use of map API.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. In-App Message &amp;amp; Call Feature&lt;/strong&gt;&lt;br&gt;
To maintain the privacy of the user and the builder, the app should offer an in-app chat/call feature so that the personal data of both the individuals involved is not shared.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Dark Mode&lt;/strong&gt;&lt;br&gt;
This is not the must-have feature but now a day’s people find browsing in the dark mode less tiresome as it reduces the screen impact on the eyes. The dark mode also reduces the battery usage of the mobile phone and tablet.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. Home Loans&lt;/strong&gt;&lt;br&gt;
This feature can be a game-changer for 2 businesses at once. The online real estate business should partner with the housing loan providers like banks, NBFCs, etc. to offer loan options to their prospective buyers.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6. Homes on rent&lt;/strong&gt;&lt;br&gt;
The app should offer options for users to purchase or rent the property or filter based on the properties available for rent. This is an added advantage to attract more users to the platform like those looking to rent the properties.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ELTyri-K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mgwjp8nzl46fp5u261q3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ELTyri-K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mgwjp8nzl46fp5u261q3.png" alt="Real Estate App Development Company" width="880" height="587"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#technology-stack-used-for-real-estate-app-like-zillow"&gt;
  &lt;/a&gt;
  Technology Stack used for real estate app like Zillow
&lt;/h2&gt;

&lt;p&gt;The technology stack used for the high performance of real estate app like Zillow is the major factor that is directly proportional to the cost. The highly advanced technology means the greater cost involved in development.&lt;/p&gt;

&lt;p&gt;• Location Tracker&lt;br&gt;
• Google Places API&lt;br&gt;
• Realm Framework&lt;br&gt;
• Zillow API&lt;br&gt;
• Facebook SDK&lt;br&gt;
• SimplyRets&lt;br&gt;
• iHome Finder&lt;br&gt;
• Spark API&lt;br&gt;
• Firebase SDK&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#monetization-models-of-real-estate-app-like-zillow"&gt;
  &lt;/a&gt;
  Monetization models of real estate app like Zillow
&lt;/h3&gt;

&lt;p&gt;The monetization model is a subjective thing that depends on each entrepreneur’s model of the app. There are various ways through which you can monetize the services you offer with real estate app like Zillow. Some of the suggested and common monetization models for real estate app like Zillow are&lt;/p&gt;

&lt;p&gt;• Advertisements revenue from property owners&lt;br&gt;
• Property management solution for builders&lt;br&gt;
• Commission model on Buy/Sell &amp;amp; Rent&lt;br&gt;
• Fix cost of listing for property owners&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cost-to-build-a-real-estate-app-like-zillow"&gt;
  &lt;/a&gt;
  Cost to Build a Real Estate App like Zillow
&lt;/h3&gt;

&lt;p&gt;Considering all of the above-explained points like basic + advanced features, business model, and technology stack, for developing a real estate app like Zillow. The cost to build an app like Zillow can somewhere be derived in the range of $30,000 — $75,000.&lt;/p&gt;

&lt;p&gt;The above costing is just the ballpark view of the cost involved in building a real estate app like Zillow. For a detailed and exact cost involved in developing an app like Zillow feel free to ask for a free quote from the team of WebClues Infotech.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://webcluesinfotech.com/get-quote/"&gt;Get Me My Customized Quote&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#suggestion-on-ways-to-compete-in-the-real-estate-app-market"&gt;
  &lt;/a&gt;
  Suggestion on ways to compete in the real estate app market
&lt;/h4&gt;

&lt;p&gt;One of the most important factors in deciding the agency that can build your real estate app like Zillow is the creative suggestions they offer that can improve as well as reduce the time duration for the app to be successful.&lt;/p&gt;

&lt;p&gt;• Use Blockchain Technology&lt;br&gt;
• AR/VR for a virtual tour of the Property&lt;br&gt;
• AI for personalized suggestions&lt;br&gt;
• Update the details in real-time&lt;br&gt;
• Exclusive properties only available on your app.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#conclusion-on-developing-real-estate-app-like-zillow"&gt;
  &lt;/a&gt;
  Conclusion on Developing real estate app like Zillow
&lt;/h4&gt;

&lt;p&gt;The explanation offered in this article to develop a real estate app like Zillow has many assumptions to it. So it is important to get a personalized explanation based on your requirement to develop a real estate app like Zillow.&lt;/p&gt;

&lt;p&gt;I hope the article helps you get a clear picture of the factors involved in developing an app like Zillow. For a further detailed guide read our guide on &lt;a href="https://www.webcluesinfotech.com/how-to-create-a-real-estate-marketplace-like-zillow/"&gt;How to create a real estate marketplace like Zillow&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://webcluesinfotech.com/get-quote/"&gt;Get Quote&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>realestateappdevelopment</category>
      <category>zillowappdevelopment</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Recursive list rendering with React and Vue</title>
      <author>Shuvo</author>
      <pubDate>Thu, 28 Oct 2021 09:52:52 +0000</pubDate>
      <link>https://dev.to/0shuvo0/recursive-list-rendering-with-react-and-vue-45i5</link>
      <guid>https://dev.to/0shuvo0/recursive-list-rendering-with-react-and-vue-45i5</guid>
      <description>&lt;p&gt;Sometimes your list may have a sublist inside it which again may have another sublist in it.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4koD6R6g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hw4utav8rnpy79q9r4tj.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4koD6R6g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hw4utav8rnpy79q9r4tj.jpeg" alt="Twitter thread tree demo" width="814" height="377"&gt;&lt;/a&gt;&lt;br&gt;
In that case simple loop won't work. You have to use recursion.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#so-lets-see-how-we-can-render-recursive-list-using-react-js"&gt;
  &lt;/a&gt;
  So let's see how we can render recursive list using React JS.
&lt;/h2&gt;

&lt;p&gt;Since react supports JSX and we can use regular JavaScript functions so we can simply use a recursive function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//App.js&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;item&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Wakeup&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;blue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;item&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Get Fresh&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;blue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;item&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Study&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;blue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;list&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
                &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;item&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Study JavaScript&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;green&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
                &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;item&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Study OOP&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;green&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
                &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;list&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="na"&gt;items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
                        &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;item&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Make game using OOP&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;red&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
                    &lt;span class="p"&gt;]&lt;/span&gt;
                &lt;span class="p"&gt;},&lt;/span&gt;
                &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;item&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Study NodeJs&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;green&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;renderList&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;list&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;listTree&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;item&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
                    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;list-item&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;border&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="na"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;                        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;title&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;                    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;                &lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
                    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;list&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;renderList&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;items&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
                    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;                &lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;list&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;listTree&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;My&lt;/span&gt; &lt;span class="nx"&gt;Nested&lt;/span&gt; &lt;span class="nx"&gt;ToDo&lt;/span&gt; &lt;span class="nx"&gt;List&lt;/span&gt;&lt;span class="o"&gt;-&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;renderList&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Now depending on how you style it in CSS it should look something like this.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QmhSk4cE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s2p0jvobuw34n2dpwgkd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QmhSk4cE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s2p0jvobuw34n2dpwgkd.png" alt="Recursive list demo" width="880" height="370"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#now-lets-see-how-to-render-recursive-list-in-vue-js"&gt;
  &lt;/a&gt;
  Now let's see how to render recursive list in Vue JS.
&lt;/h2&gt;

&lt;p&gt;Now we can't use recursive JavaScript function in Vue like we did in react but We can use recursive component.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#to-be-able-to-use-component-recursively-it-must-have-a-name-properly"&gt;
  &lt;/a&gt;
  To be able to use component recursively it must have a name properly!!!
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;App.vue&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;template&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;My Nested ToDo List-&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;RenderList&lt;/span&gt; &lt;span class="na"&gt;:list=&lt;/span&gt;&lt;span class="s"&gt;"list"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;RenderList&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./components/RenderList.vue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;components&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;RenderList&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="na"&gt;list&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;item&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Wakeup&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;blue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;item&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Get Fresh&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;blue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;item&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Study&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;blue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;list&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
                    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;item&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Study JavaScript&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;green&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
                    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;item&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Study OOP&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;green&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
                    &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;list&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="na"&gt;items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
                            &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;item&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Make game using OOP&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;red&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
                        &lt;span class="p"&gt;]&lt;/span&gt;
                    &lt;span class="p"&gt;},&lt;/span&gt;
                    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;item&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Study NodeJs&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;green&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
                &lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;RenderList.vue&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;template&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"list"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;v-for=&lt;/span&gt;&lt;span class="s"&gt;"item in list"&lt;/span&gt; &lt;span class="na"&gt;:key=&lt;/span&gt;&lt;span class="s"&gt;"item.title"&lt;/span&gt; &lt;span class="na"&gt;:class=&lt;/span&gt;&lt;span class="s"&gt;"{'list': item.type == 'list', 'list-item': item.type == 'item'}"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;v-if=&lt;/span&gt;&lt;span class="s"&gt;"item.type == 'item'"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"border"&lt;/span&gt; &lt;span class="na"&gt;:style=&lt;/span&gt;&lt;span class="s"&gt;"{background: item.color}"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;v-if=&lt;/span&gt;&lt;span class="s"&gt;"item.type == 'item'"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"title"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;{{ item.title }}&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;RenderList&lt;/span&gt; &lt;span class="na"&gt;v-if=&lt;/span&gt;&lt;span class="s"&gt;"item.type == 'list'"&lt;/span&gt; &lt;span class="na"&gt;:list=&lt;/span&gt;&lt;span class="s"&gt;"item.items"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;RenderList&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;props&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;list&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Again depending on how you style it in CSS it should look something like this.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QmhSk4cE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s2p0jvobuw34n2dpwgkd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QmhSk4cE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s2p0jvobuw34n2dpwgkd.png" alt="Recursive list demo" width="880" height="370"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Make sure to check out my other articles and YouTube channel.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__user ltag__user__id__728097"&gt;
  
    .ltag__user__id__728097 .follow-action-button {
      background-color: #000000 !important;
      color: #ffffff !important;
      border-color: #000000 !important;
    }
  
    &lt;a href="/0shuvo0" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wZgMNup---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j0_lvM9_--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/728097/0f6e1da9-f243-42d0-b446-301ac6ea6412.jpeg" alt="0shuvo0 image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/0shuvo0"&gt;Shuvo&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/0shuvo0"&gt;Frontend Developer and YouTuber.
Channel link: https://www.youtube.com/c/AngleBrace&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;



</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>react</category>
      <category>vue</category>
    </item>
    <item>
      <title>code everyday with me</title>
      <author>duccanhole</author>
      <pubDate>Thu, 28 Oct 2021 09:43:44 +0000</pubDate>
      <link>https://dev.to/coderduck/code-everyday-with-me-2f86</link>
      <guid>https://dev.to/coderduck/code-everyday-with-me-2f86</guid>
      <description>&lt;h2&gt;
  &lt;a href="#day-10"&gt;
  &lt;/a&gt;
  --DAY 10--
&lt;/h2&gt;

&lt;p&gt;Hi, I am going to make #100DaysOfCode Challenge. Everyday I will try solve 1 problem from leetcode or hackerrank. Hope you can go with me until end.&lt;br&gt;
&lt;strong&gt;Now let's solve problem today:&lt;/strong&gt;&lt;br&gt;
-Problem: Subarray Division&lt;br&gt;
-Detail: &lt;a href="https://www.hackerrank.com/challenges/the-birthday-bar/problem"&gt;https://www.hackerrank.com/challenges/the-birthday-bar/problem&lt;/a&gt;&lt;br&gt;
-My solution (javascript):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function birthday(arr, d, m) {
    let ans=0,s=0;
    for(let i=0;i&amp;lt;arr.length;i++){
        for(let j=i;j&amp;lt;(i+m);j++) s+=arr[j];
        if(s==d) ans++;
        s=0;
    }
    return ans;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;--&amp;gt;&lt;em&gt;If you have better solution or any question, please comment below. I will appreciate.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>programming</category>
      <category>100daysofcode</category>
      <category>algorithms</category>
    </item>
    <item>
      <title>Data Visualization Techniques and Tools</title>
      <author>paulpriya</author>
      <pubDate>Thu, 28 Oct 2021 09:26:55 +0000</pubDate>
      <link>https://dev.to/paulpriya/data-visualization-techniques-and-tools-1gf7</link>
      <guid>https://dev.to/paulpriya/data-visualization-techniques-and-tools-1gf7</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-data-visualization-"&gt;
  &lt;/a&gt;
  What is Data Visualization ?
&lt;/h2&gt;

&lt;p&gt;Data visualization may be defined as the graphical representation of information and data in a pictorial or graphical format in the form of charts, graphs or maps.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The different Data visualization tools provide an accessible way to see and understand trends, patterns in data and outliers.&lt;/li&gt;
&lt;li&gt;Analyzing massive amounts of information and making data-driven decisions require Data visualization tools and technologies.&lt;/li&gt;
&lt;li&gt;The idea of using pictures is to understand data has been used since a long time. Some common types of data visualizations are Charts, Tables, Graphs, Maps, Dashboards.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#benefits-of-data-visualization"&gt;
  &lt;/a&gt;
  Benefits of Data Visualization
&lt;/h2&gt;

&lt;p&gt;Data visualization is actually another form of visual art that grabs our attention and keeps our eyes on the message. When we see a chart, we quickly see trends and outliners. If we can visualize something, we can internalize it quickly. It is basically a kind of storytelling with a purpose. If we stare at a massive spreadsheet of data, it is difficult to see a trend. Therefore we understand the importance of data visualization. The uses of Data Visualization as follows:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Data Visualization has proven to be a powerful way to explore data with presentable results.&lt;/li&gt;
&lt;li&gt;The primary use is the pre-processing portion of the data mining process.&lt;/li&gt;
&lt;li&gt;It also supports the data cleaning process by finding incorrect and missing values.&lt;/li&gt;
&lt;li&gt;For variable derivation and selection means to determine which variable to include and discarded in the analysis.&lt;/li&gt;
&lt;li&gt;Data Visualization also plays a key role in combining categories as part of the data reduction process.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#data-visualization-techniques"&gt;
  &lt;/a&gt;
  Data Visualization Techniques
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1-charts"&gt;
  &lt;/a&gt;
  1. Charts
&lt;/h3&gt;

&lt;p&gt;One of the most easiest ways to show the development of one or several data sets is a Chart. Charts may actually vary from bar and line charts that show the relationship between elements over time to pie charts which demonstrates the components or proportions between the elements of one whole.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-maps"&gt;
  &lt;/a&gt;
  2. Maps
&lt;/h3&gt;

&lt;p&gt;Maps are popular ways to visualize data used in different industries. They allow to locate elements on relevant objects and areas, like, geographical maps, building plans, website layouts, etc. Among the most popular map visualizations are heat maps, dot distribution maps, cartograms.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-plots"&gt;
  &lt;/a&gt;
  3. Plots
&lt;/h3&gt;

&lt;p&gt;Plots allows us to distribute two or more data sets over a two dimensional or even three dimensional space to show the actual relationship between these sets and the parameters on the plot. Plots also vary, like, Scatter and Bubble plots are some of the most commonly-used data visualizations. When it comes to big data, analysts often use more complex box plots that help visualize the relationship between large volumes of data.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-diagrams-and-matrices"&gt;
  &lt;/a&gt;
  4. Diagrams and Matrices
&lt;/h3&gt;

&lt;p&gt;Diagrams are commonly used to demonstrate complex data relationships and links and include various types of data on one visualization. The diagrams can be hierarchical, multidimensional, tree-like. Speaking of Matrices, a Matrix is one of the most advanced data visualization techniques that can help to determine the correlation between multiple constantly updating data sets.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#data-visualization-tools"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Data Visualization Tools&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Along with the demand for data visualization and analysis, the tools and solutions in this area develop fast and extensively. Novel 3D visualizations, immersive experiences and shared VR offices are getting common alongside traditional web and desktop interfaces. Here are certain categories of data visualization tools for different types of users with different purposes.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tools-for-everyone"&gt;
  &lt;/a&gt;
  Tools for Everyone
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Tableau&lt;/em&gt; is considered as one of the leaders in this field. Newbies and professional analytics companies like Statista rely on Tableau tool to derive meaning from data and use insights for effective storytelling. Along with a user-friendly interface and a rich library of interactive visualizations, Tableau is known for its powerful capabilities. The platform provides large integration options including My SQL, Teradata, Hadoop and Amazon Web Services. This is an amazing tool for both occasional data visualizations and professional data analytics. The system can easily handle any type of data, including streaming performance data and machine learning insights, and also allow to combine visualizations into dashboards. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tools-for-coders"&gt;
  &lt;/a&gt;
  T*&lt;em&gt;ools for Coders&lt;/em&gt;*
&lt;/h3&gt;

&lt;p&gt;Tools for coders include more sophisticated platforms that not only allow to visualize data but also add data analytics features to the applications.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Plotly&lt;/em&gt; is referred to as one of the most popular platforms in this category. It is more complex than Tableau, however, it comes with analytics perks. With this visualization tool, we can create charts using R or Python language, build custom data analytics web applications with Python, and even use and collaborate in rich open-source libraries for R, Python and JavaScript.&lt;/p&gt;

&lt;p&gt;Similarly, &lt;em&gt;Sisense&lt;/em&gt; is another data visualization tool having some full-stack analytics capabilities. This cloud-based platform has a drag-and-drop interface which can handle multiple data sources and also supports natural language queries. But, it can be a bit complicated for rookies though.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;IBM Watson Analytics&lt;/em&gt; is widely known for its NLP capabilities. The platform literally supports conversational data control alongside strong dashboard building and data reporting tools. But, IBM Watson Analytics is expensive and works best for large-scale data visualization and analytics tasks.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tools-for-complex-data-visualization-and-analytics"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Tools for complex Data Visualization and Analytics&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;The increasing demand and growing adoption of connected technology provides a lot of opportunities for the companies and organizations. To deal with large volumes of multi-source often unstructured data, businesses search for more complex visualization and analytics solutions. This category includes Microsoft Azure Power BI, ELK stack Kibana and Grafana.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Power BI&lt;/em&gt; is exceptional  and widely-used because of its highly intuitive drag-and-drop interface, short learning curve and large integration capabilities, including Salesforce and MailChimp. Along with that, it is not much expensive. Owing to the Azure services, Power BI became one of the most powerful data visualization and analytics tools that can handle literally any amount and any type of data.&lt;/p&gt;

&lt;p&gt;First of all, the platform enables us to create customized reports from different data sources and get insights at a couple of clicks. Along with that, Power BI is strong enough to process streaming real-time data and therefore easily handles big data analytics. Finally, it is not only fully compatible with Azure and other Microsoft services but also can directly connect to existing apps and drive analytics to custom systems.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;In today's marketplace, Data visualization is proven to be a valuable addition to any presentation and the quickest path to understanding the data.&lt;/li&gt;
&lt;li&gt;Besides, the process of visualizing data can be both enjoyable and challenging.&lt;/li&gt;
&lt;li&gt;However, with the many data visualization techniques available like, charts, maps, plots and others, it is easy to end up presenting the information using a wrong tool. Understanding the &lt;a href="https://www.boardinfinity.com/learning-path/data-science"&gt;appropriate techniques and concepts&lt;/a&gt; is important.&lt;/li&gt;
&lt;li&gt;To choose the most appropriate visualization technique we need to understand the data, its type and composition, the information that we are trying to convey to our audience, and how viewers process visual information.&lt;/li&gt;
&lt;li&gt;Data Visualization tools like Tableau, Sisense, Plotly, Power BI and others make the the task easier by saving time and effort. For more such articles and learning concepts, &lt;a href="https://www.boardinfinity.com"&gt;click here&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>datascience</category>
      <category>tooling</category>
      <category>programming</category>
      <category>beginners</category>
    </item>
  </channel>
</rss>
