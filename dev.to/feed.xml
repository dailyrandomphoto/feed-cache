<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Develop a Spam Filtering Model in Python &amp; Deploy it with Django</title>
      <author>paulsaul621</author>
      <pubDate>Wed, 17 Nov 2021 15:30:09 +0000</pubDate>
      <link>https://dev.to/paulwababu/develop-a-spam-filtering-model-in-python-deploy-it-with-django-2pco</link>
      <guid>https://dev.to/paulwababu/develop-a-spam-filtering-model-in-python-deploy-it-with-django-2pco</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Spam is a fact of life on the internet. If you enable comments or contact sections on your website, you will have to deal with spammers. To prevent your site from making a poor first impression, you’ll need to find a way to stop spam in its tracks. This is especially important if you are developing a website without a content management system like Wordpress as they come bundled with spam filtering plugins. You could also use an API like &lt;a href="https://akismet.com/"&gt;Akismet&lt;/a&gt;, however this comes at a cost, which can be avoided by implementing a relatively accurate model of your own.&lt;/p&gt;

&lt;p&gt;Kaggle and other data science bootcamps are great for learning how to build and optimize models, but they don’t teach you how to actually use this models in real world scenarios, where there’s a major difference between building a model, and deploying it to be used by end users on the internet. &lt;/p&gt;

&lt;p&gt;In this tutorial, you’re going to build an SMS spam detection web application. This application will be built in Python using the Django framework, and will include a deep learning model that you will train to detect SMS spam by leveraging the Naive Bayes theorem. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#naive-bayes-classification"&gt;
  &lt;/a&gt;
  Naive Bayes classification
&lt;/h2&gt;

&lt;p&gt;The classification of Naive Bayes is a simple probability algorithm based on the fact that all model characteristics are independent. We assume that every word in the message is independent of all other words in the context of the spam filters, and we count them with the ignorance of the context.&lt;/p&gt;

&lt;p&gt;By the state of the current set of terms, our classification algorithm generates probabilities of the message to be spam or not spam. The probability estimation is based on the Bayes formula, and the formula components are determined on the basis of the word frequencies in the whole message package.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#model-building"&gt;
  &lt;/a&gt;
  Model Building
&lt;/h2&gt;

&lt;p&gt;The data is a collection of SMS messages tagged as spam or ham that can be found &lt;a href="https://raw.githubusercontent.com/paulwababu/datasets/main/spam.csv"&gt;here&lt;/a&gt;. First, we will use this dataset to build a prediction model that will accurately classify which texts are spam and which are not, then save the model to be used later for predictions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#exploration-of-dataset"&gt;
  &lt;/a&gt;
  Exploration of dataset
&lt;/h2&gt;

&lt;p&gt;The first thing that should be done is to import dependencies. If you do not have the libraries installed, kindly do so before proceeding.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import pandas as pd
import numpy as np
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import classification_report
import joblib
import pickle
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, we load the dataset using pandas:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;df = pd.read_csv('https://raw.githubusercontent.com/paulwababu/datasets/main/spam.csv', encoding = 'latin-1')
print(df.head())
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Drop the unwanted columns, like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;df.drop(['Unnamed: 2', 'Unnamed: 3', 'Unnamed: 4'], axis=1, inplace=True)

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We have to convert the non-numerical column 'spam' and 'ham' into numerical values using pandas map() function&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;df['label'] = df['v1'].map({'ham': 0, 'spam': 1})
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then we have to separate the feature columns(independent variables) from the target column(dependent variable).&lt;/p&gt;

&lt;p&gt;The feature columns are the columns that we try to predict from, and the target column is the column with the values we try to predict.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;X = df['v2'] 
y = df['label']

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#ml-model-building"&gt;
  &lt;/a&gt;
  ML Model Building
&lt;/h2&gt;

&lt;p&gt;Let us now proceed to building our actual model.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cv = CountVectorizer()
X = cv.fit_transform(X) 
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=42)
model = MultinomialNB()
model.fit(X_train,y_train)
#model.score(X_test,y_test)
y_pred = model.predict(X_test)
print(classification_report(y_test, y_pred))
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;              precision    recall  f1-score   support

           0       0.99      0.99      0.99      1587
           1       0.93      0.92      0.92       252

    accuracy                           0.98      1839
   macro avg       0.96      0.95      0.96      1839
weighted avg       0.98      0.98      0.98      1839
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Not only Naive Bayes classifier easy to implement but also provides very good result. &lt;/p&gt;

&lt;p&gt;In the code above, we create a vectorize function that transforms a given text into a vector on the basis of the frequency (count) of each word that occurs in the entire text. We then proceed to splitting the data into train and test variables which we use to get the classification report of the model. We then call the multinomial Naive Bayes model which is suitable for classification with discrete features (e.g., word counts for text classification)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#model-and-vectorizer-persistence"&gt;
  &lt;/a&gt;
  Model and Vectorizer Persistence.
&lt;/h2&gt;

&lt;p&gt;After training the model, we should to have a way to persist the model for future use without having to retrain. To achieve this, need to save the model for the later use. Add the following lines of code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# Save the model
joblib_file = "MultinomialNaiveBayesModel.joblib"
joblib.dump(clf, joblib_file) 

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We also need to save the vectorize function that we created earlier otherwise you throw it away because a vectorizer once created, doesn't exist past the lifetime of your vectorize function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# Save the vectorizer
vec_file = 'MultinomialNaiveBayesModelVectorizer.pickle'
pickle.dump(cv, open(vec_file, 'wb'))
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If we intend to retrain the model, we can use the partial_fit function in order to keep improving the model incase of model degradation over time. I will post a blog later that addresses how to identify and correct &lt;a href="https://www.section.io/engineering-education/correcting-data-shift/#:~:text=Prior%20probability%20shift%20is%20characterized,the%20reverse%20of%20covariate%20shift.&amp;amp;text=If%20the%20prior%20probabilities%20are,50%25%20non%2Dspam%20mail."&gt;dataset shift in machine learning&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#turning-the-spam-message-classifier-into-a-django-web-application"&gt;
  &lt;/a&gt;
  Turning the Spam Message Classifier into a Django Web Application
&lt;/h2&gt;

&lt;p&gt;Having trained and saved the model for classifying SMS messages in the previous section, we will develop a web application that consists of a simple web page with a form field that lets us enter a message. After submitting the message to the web application, it will render it on a new page which gives us a result of spam or not spam.&lt;/p&gt;

&lt;p&gt;Below is snapshot of the final implementation&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5bzq99ry--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637150283253/YWtssz89w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5bzq99ry--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637150283253/YWtssz89w.png" alt="CfyuGX7l5aBe6TuCx-PjciFKywPM_rAAmOCaJcTuStURvV.width-800.png" width="800" height="326"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Following Python best practices, we will create a virtual environment for our project, and install the required packages.&lt;/p&gt;

&lt;p&gt;First, create the project directory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ mkdir djangoapp
$ cd djangoapp

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, create a virtual environment and install the required packages.&lt;/p&gt;

&lt;p&gt;For macOS and Unix systems:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ python3 -m venv myenv
$ source myenv/bin/activate
(myenv) $ pip install django requests numpy joblib scikit-learn

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For Windows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ python3 -m venv myenv
$ myenv\Scripts\activate
(myenv) $ pip install django requests numpy joblib scikit-learn
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#setting-up-your-django-application"&gt;
  &lt;/a&gt;
  Setting Up Your Django Application
&lt;/h2&gt;

&lt;p&gt;First, navigate to the directory djangoapp we created and establish a Django project.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;(myenv) $ django-admin startproject mainapp

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will auto-generate some files for your project skeleton:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mainapp/
    manage.py
    mainapp/
        __init__.py
        settings.py
        urls.py
        asgi.py
        wsgi.py
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, navigate to the directory you just created (make sure you are in the same directory as manage.py) and create your app directory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;(myenv) $ python manage.py startapp monitor
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will create the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;monitor/
    __init__.py
    admin.py
    apps.py
    migrations/
        __init__.py
    models.py
    tests.py
    views.py
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;On the mainapp/settings.py file, look for the following line and add the app we just created above.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'monitor', #new line
]

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Ensure you are in the monitor directory then create a new directory called templates then a new file called urls.py. Your directory structure of monitor application should look like this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;monitor/
    __init__.py
    admin.py
    apps.py
    migrations/
    templates/
        __init__.py
    models.py
    tests.py
    urls.py
    views.py
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Ensure your mainapp/urls.py file, add our monitor app URL to include the URLs we shall create next on the monitor app:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from django.contrib import admin
from django.urls import path, include

urlpatterns = [
    #path('admin/', admin.site.urls),
    path('', include('monitor.urls')),#monitor app url
]

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, on the monitor/urls.py file, add our website there:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from django.urls import path
from .views import *

urlpatterns = [
    path('', views.sms, name = 'sms'),
    path('inbox/', views.inbox, name='inbox')
]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let’s create another directory to store our machine learning model. I’ll also add the dataset to the project for those who want to achieve the whole dataset. (It is not compulsory to create a data folder.) Be sure to move the vectorizer file and the joblib file we created earlier to ml/model folder&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;(venv)$ mkdir ml
(venv)$ mkdir ml/models
(venv)$ mkdir ml/data
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We also need to tell Django where our machine learning model and our vectorizer file is located. Add these lines to settings.py file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import os
MODELS = os.path.join(BASE_DIR, 'ml/models')
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#load-model-and-vectorizer-through-appspy"&gt;
  &lt;/a&gt;
  Load Model and Vectorizer through apps.py
&lt;/h2&gt;

&lt;p&gt;Load your machine learning models and your vectorizer in apps.py so that when the application starts, the trained model is loaded only once. Otherwise, the trained model is loaded each time an endpoint is called, and then the response time will be slower. &lt;/p&gt;

&lt;p&gt;Let’s update apps.py&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import os
import joblib
from django.apps import AppConfig
from django.conf import settings


class ApiConfig(AppConfig):
    name = 'api'
    MODEL_FILE = os.path.join(settings.MODELS, "MultinomialNaiveBayesModel.joblib")
    model = joblib.load(MODEL_FILE)

class VectorizerConfig(AppConfig):
    name = 'api2'
    MODEL_FILE = os.path.join(settings.MODELS, "MultinomialNaiveBayesModelVectorizer.pickle")
    model = joblib.load(MODEL_FILE)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#edit-modelspy"&gt;
  &lt;/a&gt;
  Edit models.py
&lt;/h2&gt;

&lt;p&gt;Create our database models which we shall use to store our classified models. On the monitor/models.py file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from django.db import models

# Create your models here.
class Monitor2(models.Model):
    message = models.CharField(max_length=50, blank=True, null=True)
    SPAM = 1
    HAM = 0
    IS_SPAM_OR_NAH = [(SPAM, 'spam'), (HAM, 'not_spam')]
    messageClassified = models.IntegerField(choices=IS_SPAM_OR_NAH, null=True)
    contact = models.CharField(max_length=50, blank=True, null=True)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#edit-viewspy"&gt;
  &lt;/a&gt;
  Edit views.py
&lt;/h2&gt;

&lt;p&gt;The views will be mainly responsible for two tasks:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Process incoming POST requests.&lt;/li&gt;
&lt;li&gt;Make a prediction with the incoming data and give the result as a Response.&lt;/li&gt;
&lt;li&gt;Display the classified text into a HTML template.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import os
from datetime import datetime
from .models import *
from django.shortcuts import render, redirect


def sms(request):
    if request.method == 'POST':
        number = request.POST['contact']
        message = request.POST['message']
# datetime object containing current date and time
        now = datetime.now()    
        now = now.strftime("%d/%m/%Y %H:%M:%S")

        naiveModel = ApiConfig.model
        naiveVect = VectorizerConfig.model
        convertString = str(message)
        message = convertString
        data = [message]
        vect = naiveVect.transform(data).toarray()
        my_prediction = naiveModel.predict(vect)
        print(my_prediction)
        saveNow = Monitor2(
            message=message,
            messageClassified=my_prediction,
            contact=number
        )
        saveNow.save()
    return render(request, 'sms.html')

#inbox view
def inbox(request):
    dataSaved = Monitor2.objects.all()
    data = {
        "dataSaved": dataSaved,
    }
    print(data)
    return render(request, 'inbox.html', data)

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;On the monitor/templates folder, create sms.html and inbox.html web page and add the lines below:&lt;/p&gt;

&lt;p&gt;monitor/templates/sms.html file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang="en"&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta charset="UTF-8"&amp;gt;
    &amp;lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&amp;gt;
    &amp;lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&amp;gt;
    &amp;lt;title&amp;gt;Document&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;form id="myform" method="POST"&amp;gt;
        {% csrf_token %}
          &amp;lt;div class="row"&amp;gt;
              &amp;lt;div class="col-6 form-group"&amp;gt;
                  &amp;lt;input type="text" name="name1" class="form-control p-4" placeholder="Your Name" required="required"&amp;gt;
              &amp;lt;/div&amp;gt;
              &amp;lt;div class="col-6 form-group"&amp;gt;
                  &amp;lt;input type="text" name="contact" class="form-control p-4" placeholder="Your Contact" required="required"&amp;gt;
              &amp;lt;/div&amp;gt;
          &amp;lt;/div&amp;gt;

          &amp;lt;div class="form-group"&amp;gt;
              &amp;lt;textarea class="form-control py-3 px-4" name="message" rows="5" placeholder="Message" required="required"&amp;gt;&amp;lt;/textarea&amp;gt;
          &amp;lt;/div&amp;gt;
          &amp;lt;div&amp;gt;
              &amp;lt;button class="btn btn-primary py-3 px-5" type="submit"&amp;gt;Send Message&amp;lt;/button&amp;gt;
          &amp;lt;/div&amp;gt;
      &amp;lt;/form&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;monitor/templates/inbox.html file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;style&amp;gt;
table, th, td {
  border:1px solid black;
}
&amp;lt;/style&amp;gt;
&amp;lt;body&amp;gt;

&amp;lt;h2&amp;gt;A basic HTML table&amp;lt;/h2&amp;gt;

&amp;lt;table style="width:100%"&amp;gt;
    &amp;lt;tr&amp;gt;
        &amp;lt;th&amp;gt;#&amp;lt;/th&amp;gt;
        &amp;lt;th&amp;gt;From&amp;lt;/th&amp;gt;
        &amp;lt;th&amp;gt;Body&amp;lt;/th&amp;gt;
        &amp;lt;th&amp;gt;Classification&amp;lt;/th&amp;gt;
    &amp;lt;/tr&amp;gt;
  {% for x in dataSaved %}
  &amp;lt;tr&amp;gt;
      &amp;lt;td&amp;gt;{{ loop.index }}&amp;lt;/td&amp;gt;
      &amp;lt;td&amp;gt;{{ x.contact }}&amp;lt;/td&amp;gt;
      &amp;lt;td&amp;gt;{{ x.message }}&amp;lt;/td&amp;gt;
      {% if x.messageClassified == 1 %}
      &amp;lt;td&amp;gt;Spam&amp;lt;/td&amp;gt;
      {% else %}
      &amp;lt;td&amp;gt;Non Spam&amp;lt;/td&amp;gt;
      {% endif %}
  &amp;lt;/tr&amp;gt;
  {% endfor %}
&amp;lt;/table&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Make the necessary migrations like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;(myenv) $ python manage.py makemigrations
(myenv) $ python manage.py migrate
(myenv) $ python manage.py runserver
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#testing-if-it-works"&gt;
  &lt;/a&gt;
  Testing if it works!
&lt;/h2&gt;

&lt;p&gt;Head over &lt;a href="http://127.0.0.1:8000"&gt;http://127.0.0.1:8000&lt;/a&gt; and complete the form with both spam and non spam&lt;/p&gt;

&lt;p&gt;Proceed to &lt;a href="http://127.0.0.1:8000/inbox"&gt;http://127.0.0.1:8000/inbox&lt;/a&gt; to check out the classified data! Below is a snapshot of my implementation, sorry I couldn't make the CSS;(&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Tt-_QaVt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637159575230/G4Yj5QNXf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Tt-_QaVt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637159575230/G4Yj5QNXf.png" alt="Screenshot from 2021-11-17 17-32-30.png" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thanks-for-staying-tuned"&gt;
  &lt;/a&gt;
  Thanks for staying tuned!
&lt;/h3&gt;

</description>
      <category>algorithms</category>
      <category>django</category>
      <category>machinelearning</category>
      <category>webdev</category>
    </item>
    <item>
      <title>What Is Crypto and How Does It Work ?</title>
      <author>Bek Brace</author>
      <pubDate>Wed, 17 Nov 2021 15:27:25 +0000</pubDate>
      <link>https://dev.to/bekbrace/what-is-crypto-and-how-does-it-work--3h0k</link>
      <guid>https://dev.to/bekbrace/what-is-crypto-and-how-does-it-work--3h0k</guid>
      <description>&lt;p&gt;I hate changes ! I like to use what I know and what I'm used to use .. if that makes any sense!&lt;br&gt;
I love real cigarettes (when I used to smoke!) and never had Vype or e-cigarettes, I like to date real women drinking coffee and having a human interaction [have you seen that video in Japan where there was a wedding between a man and his digital girlfriend living in a hologram ?!] and of course I love real money in coin and paper ..&lt;/p&gt;

&lt;p&gt;As technology evolves, things around us change, take a look to Zuckerberg's Meta where he wants to have a paralel world using Augmented reality, where people live virtually and trade virtually using digital money .. the term “digital money” is frequently used to characterize cryptocurrency. While this definition is accurate, it falls short of capturing what makes cryptocurrency so special and intriguing to so many investors.&lt;/p&gt;

&lt;p&gt;Let's talk a little bit about "what is Crypto?"&lt;/p&gt;

&lt;p&gt;Cryptocurrency is, at its foundation, a value system. &lt;br&gt;
When you buy a cryptocurrency, you then are betting that the asset’s value will rise in the future, similar to how stock market investors purchase securities in the hopes of seeing the company’s stock price rise .. exact same concept&lt;/p&gt;

&lt;p&gt;Stock values are based on discounted projections of future cash flows .. and because there is no underlying corporation, there is no valuation metric for cryptocurrencies; the value of a cryptocurrency is solely determined by investor appetite [acquiring or getting rid of] !&lt;/p&gt;

&lt;p&gt;Now the two elements that determine the cryptocurrency’s value are :&lt;br&gt;
1- The chance of other investors buying whatever cryptocurrency they want.&lt;br&gt;
2- The utility of that cryptocurrency’s blockchain &lt;/p&gt;

&lt;p&gt;Let's discuss this further and ask :&lt;br&gt;
What is cryptocurrency really and how does it actually work?&lt;/p&gt;

&lt;p&gt;Blockchain technology is the heart and sould of cryptocurrency, but what exactly is a blockchain?&lt;/p&gt;

&lt;p&gt;Simply put, a blockchain is a digital ledger of transactions. This database (or ledger) is shared over a network of computer systems. The ledger is not controlled by a single system. Instead, a blockchain is maintained and transactions are authenticated by a decentralized network of computers.&lt;/p&gt;

&lt;p&gt;Those who are in favor of blockchain technology [ and I - miraculously - became one of them!] claim that it can improve data openness, trust, and security when shared across a network. &lt;/p&gt;

&lt;p&gt;Detractors claim that blockchain is inconvenient, inefficient, expensive, and wasteful of energy.&lt;/p&gt;

&lt;p&gt;If a rational crypto investor believes in the power and utility of a digital asset’s underlying blockchain, they will purchase it. All cryptocurrencies are built on the blockchain, which means that crypto investors are betting (whether they realize it or not) on the blockchain’s robustness and attractiveness.&lt;/p&gt;

&lt;p&gt;On the underlying blockchain, cryptocurrency transactions are recorded in eternity. In the form of ‘blocks,’ groups of transactions are added to the ‘chain,’ which authenticate the transactions’ legitimacy and keep the network up and operating. The shared ledger, which is open to the public, records all batches of transactions. Anyone can look at the transactions on the biggest blockchains, such as Bitcoin (BTC) and Ethereum (ETH), at any time (ETH).&lt;/p&gt;

&lt;p&gt;However, why do users devote computing resources to verifying blockchain transactions?&lt;/p&gt;

&lt;p&gt;They are compensated with the underlying cryptocurrency, to be sure. A proof-of-work (PoW) mechanism is an incentive-driven system. Miners are the computers that ‘work’ to ‘verify’ the authenticity of blockchain transactions. Miners receive freshly generated crypto currencies in exchange for their energy.&lt;/p&gt;

&lt;p&gt;By the way, I am preparing some quick tutorials with streamlit on blockchain and crypto, if you're into Python programming, I think you'll like it :)&lt;/p&gt;

&lt;p&gt;Back to our crypto-talk .. So, cryptocurrency investors - and this could be you -  do not keep their funds in regular bank accounts, right? You have digital addresses instead. These addresses include private and public keys, which are long sequences of numbers and letters that allow cryptocurrency users to send and receive money. Unlocking and sending cryptocurrency requires private keys. Public keys are made available to the public and allow the possessor to receive cryptocurrency from anyone.&lt;/p&gt;

&lt;p&gt;Bitcoin, without a doubt, has shifted the paradigm; there has never been anything quite like it before, and it has created an altogether new platform for investing, and a new way of thinking about money.&lt;/p&gt;

&lt;p&gt;I still love real things , but to tell the truth cryptocurrency is the future of global finance, maybe next year maybe in 10 or 20 years, either way it's gonna happen and you better be ready.&lt;/p&gt;

</description>
      <category>bigdata</category>
      <category>blockchain</category>
      <category>cryptocurrency</category>
      <category>machinelearning</category>
    </item>
    <item>
      <title>A better way to discover junior front-end developers</title>
      <author>Matt Studdert</author>
      <pubDate>Wed, 17 Nov 2021 15:12:17 +0000</pubDate>
      <link>https://dev.to/frontendmentor/a-better-way-to-discover-junior-front-end-developers-58e6</link>
      <guid>https://dev.to/frontendmentor/a-better-way-to-discover-junior-front-end-developers-58e6</guid>
      <description>&lt;p&gt;Since launching the &lt;a href="https://www.frontendmentor.io/"&gt;Frontend Mentor platform&lt;/a&gt; in April 2019, our community has grown to over 250,000 members (🎉). The idea for Frontend Mentor came to me when I was teaching front-end web development at General Assembly. I wanted to make it easier for my students to practice and create projects for their portfolios.&lt;/p&gt;

&lt;p&gt;Our projects, or "challenges", mimic a real-life workflow for a front-end developer. In a professional setting, a designer would do the design work, and it would then be the developer’s job to recreate it in code.&lt;/p&gt;

&lt;p&gt;Our challenges help developers focus on what developers do best: writing code. We come up with the project ideas and the designs; our community builds the projects to help improve their coding skills. Not only does this mean they gain hands-on experience working from realistic designs, but it also means our community members end up with a professional-looking portfolio of beautiful projects!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xBKHCB8h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dz209s6jk/image/upload/v1637154220/Articles/design-screenshot.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xBKHCB8h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dz209s6jk/image/upload/v1637154220/Articles/design-screenshot.png" alt="Example screenshot of a Frontend Mentor challenge Figma design file" width="880" height="620"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Example screenshot of a Frontend Mentor challenge Figma design file&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It's been incredible to see Frontend Mentor grow into a vibrant, positive community where everyone supports each other. &lt;/p&gt;

&lt;p&gt;As we've looked for more ways to help our community, we found one common theme: &lt;strong&gt;it's hard to land junior roles&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Recurring sticking points include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Companies often have unrealistic expectations. For example, it's not uncommon to see junior roles advertised requiring several years of experience.&lt;/li&gt;
&lt;li&gt;Many interview processes include whiteboarding assessments based on algorithms, even for junior front-end roles.&lt;/li&gt;
&lt;li&gt;Good junior job listings are often hyper-competitive. Some even receive hundreds of applications in the first day or two of being advertised.&lt;/li&gt;
&lt;li&gt;Companies are often vague about their salary ranges, interview process, and training paths.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Helping our community find work has always been a goal of Frontend Mentor. To better understand the problem, we started talking to people in hiring positions to see if they also experienced difficulties hiring juniors. &lt;/p&gt;

&lt;p&gt;It very quickly became apparent that they did! Common issues people in hiring positions highlighted when hiring juniors include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;There’s no clear “best” strategy for discovering junior talent. Companies often use a mixture of job listings, partnerships with educational institutions, trawling LinkedIn, and getting recommendations from existing employees. &lt;/li&gt;
&lt;li&gt;Large numbers of applicants, many of whom don't meet the specified criteria. This means companies are often drowning in a sea of resumés and cover letters.&lt;/li&gt;
&lt;li&gt;The resumé and cover letter review process is often very high level and error-prone, so it's easy for talented developers to slip through the net.&lt;/li&gt;
&lt;li&gt;GitHub profiles can be hard to navigate when trying to find suitable projects to assess skills.&lt;/li&gt;
&lt;li&gt;Portfolio projects can often be old, and the developer might have only had a small role in the codebase.&lt;/li&gt;
&lt;li&gt;Portfolio projects for juniors often don't look great (after all, developers are not designers), so it can be hard to see past the UI/UX and focus on the code.&lt;/li&gt;
&lt;li&gt;There's no track record to base decisions on, so finding the right developer can be a lottery.&lt;/li&gt;
&lt;li&gt;The process is often bloated and inefficient. There can be many stages, including initial applications, resumé review, screening calls, technical tests, in-person interviews, and more.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After talking to a wide range of people, we believe we're in a unique position: we have an opportunity to help both the developers within our community and companies looking to hire juniors.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#introducing-the-frontend-mentor-hiring-platform"&gt;
  &lt;/a&gt;
  Introducing the Frontend Mentor Hiring platform
&lt;/h2&gt;

&lt;p&gt;Due to launch in early 2022, we've started working on a hiring platform to complement our learning platform. Our mission will be to help connect great companies with our incredible developer community.&lt;/p&gt;

&lt;p&gt;Our first offering within the hiring platform will be called Talent Search, which will enable companies to search for developers using specific criteria. This includes attributes like experience, skills, and location. Talent Search will then surface the developers on our platform that best match these criteria.&lt;/p&gt;

&lt;p&gt;Talent Search will make it possible to proactively search for developers instead of waiting for people to apply to open roles. In a sea of resumés and cover letters, so many talented developers can slip through the cracks with traditional job applications. Our goal is to let the completed projects and code reviews posted speak for themselves. This will provide incredible insights into developers' talent, knowledge, and written communication skills.&lt;/p&gt;

&lt;p&gt;It might even help bypass a stage or two of the hiring process, saving time and money. We've had numerous developers in the community who have been hired based on the strength of their Frontend Mentor projects. After a technical conversation about their projects and an interview, they've received job offers. We’d love to make this a regular occurrence!&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--EOX3mYX0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1143128450074648576/GFvxviNV_normal.jpg" alt="Marko Nikolajević profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Marko Nikolajević
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @markez1317
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      In a few weeks I’ll start a new job as &lt;a href="https://twitter.com/angular"&gt;@angular&lt;/a&gt; developer☺️ the funny thing is that they didn’t aske any test to do thanks to projects I made from &lt;a href="https://twitter.com/frontendmentor"&gt;@frontendmentor&lt;/a&gt; &lt;a href="https://twitter.com/_mattstuddert"&gt;@_mattstuddert&lt;/a&gt; 🎉🎉🎉 &lt;a href="https://twitter.com/hashtag/angular"&gt;#angular&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/FrontEndDeveloper"&gt;#FrontEndDeveloper&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/frontendmentor"&gt;#frontendmentor&lt;/a&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      13:03 PM - 23 Aug 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1429791321703829513" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1429791321703829513" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1429791321703829513" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;The developers will have to state that they're available for work through their settings. If a developer doesn't opt-in, they won't show up on the hiring platform. Showing only the developers looking for work will filter out the noise for hiring managers. It will also ensure our developers aren't receiving unsolicited messages when they're not looking for a new job.&lt;/p&gt;

&lt;p&gt;We have lots of ideas for the hiring platform, but we'll start with our Talent Search offering and evolve it from there based on feedback.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-can-you-do"&gt;
  &lt;/a&gt;
  What can you do?
&lt;/h2&gt;

&lt;p&gt;If you're involved in your company's hiring process, please &lt;a href="https://www.frontendmentor.io/hiring"&gt;check out the hiring platform page on Frontend Mentor&lt;/a&gt;, where you can learn more and sign up for our waitlist.&lt;/p&gt;

&lt;p&gt;If you're already a professional developer, please share with anyone in your organization who is part of the developer hiring process.&lt;/p&gt;

&lt;p&gt;We'll launch a closed beta before our public launch. We'd love to get as much feedback as possible to provide a great solution that works for everyone. Also, if you've got any questions, please feel free ask!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>career</category>
      <category>news</category>
      <category>beginners</category>
    </item>
    <item>
      <title>My favourite DevOps &amp; cloud native tools By Civo </title>
      <author>Aniket mishra</author>
      <pubDate>Wed, 17 Nov 2021 15:06:25 +0000</pubDate>
      <link>https://dev.to/aniketmishra/my-favourite-devops-cloud-native-tools-by-civo-6cl</link>
      <guid>https://dev.to/aniketmishra/my-favourite-devops-cloud-native-tools-by-civo-6cl</guid>
      <description>&lt;p&gt;Hello everyone,&lt;/p&gt;

&lt;p&gt;since I have been working in the DevOps space for a year now, I thought that it would be interesting to create an overview of my favourite cloud native tool. This is a list of tools that I either currently use or got to use within the previous year.&lt;/p&gt;

&lt;p&gt;I would love to hear from you about your favourite tools — and if I don't know them yet, I might create an overview video so please do reach out.&lt;/p&gt;

&lt;p&gt;All tools are divided by category — now there are maybe some tools that I have not thought of and will later on. Thus, this blog post will likely be a live update of my favourite tools.&lt;/p&gt;

&lt;p&gt;If you prefer the video version of this post, here is the accompanying YouTube video:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cicd-pipelines"&gt;
  &lt;/a&gt;
  CI/CD pipelines
&lt;/h2&gt;

&lt;p&gt;The CI/CD pipeline tool that you choose to use, either for your personal development needs or for your business, will highly depend on the version control system that you are already using and the resources that you have available. For instance, if you are already using GitLab, it makes sense to utilise the GitLab ecosystem. Similarly, when you are using GitHub, the GitHub ecosystem will likely be your preferred choice.&lt;/p&gt;

&lt;p&gt;When I started working in the cloud native ecosystem, I was first introduced to Codefresh. Codefresh is a really nice platform that is easy to use and will allow you to cover complex use cases while getting comprehensive insights into your deployments. However, I would argue that for most companies it is going to be an overkill and you would not actually need most of their features. Codefresh provides DevOps specific tools and Dashboards to provide you with additional insights into your deployments. Their platform is constantly evolving and not all features might be supported at the same level. Similarly, you have a chance to get access to an innovative platform that provides you with additional GitOps specific functionality. This is something that you are less likely to find on conventional platforms.&lt;/p&gt;

&lt;p&gt;Other than Codefresh, I have worked with GitHub Actions and GitLab CI. For most teams, I would argue that both provide enough functionality to aut7omate your deployments. In this case, I would make it dependent on where your project is hosted. With GitHub Actions, you will have a lot more community supports.&lt;/p&gt;

&lt;p&gt;For further information, have a look at this video I made providing an overview of GitHub Actions.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/3LBLTGfVuj4"&gt;Introduction to GitHub Actions&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#observability"&gt;
  &lt;/a&gt;
  Observability
&lt;/h2&gt;

&lt;p&gt;I really really love using Grafana. It takes some time to get started and use it to its "best". However, once you figure out how to set up new dashboards for your data, it allows you to filter your metrics for the data that is useful for your application.&lt;/p&gt;

&lt;p&gt;Below is a gif from this examples tutorial on Katacoda that Bartek and I created a while ago. Try it out yourself! The link to the Katacoda tutorial is in the description of the repository.&lt;/p&gt;

&lt;p&gt;Furthermore, Grafana launched on-call functionality alongside other highly requested features during ObservabilityCON (8th to 10th of November). This, alongside Grafana alerts and other features, makes Grafana the go-to-tool for all things monitoring and observability that you can no longer live without.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#kubernetes-provider"&gt;
  &lt;/a&gt;
  Kubernetes Provider
&lt;/h2&gt;

&lt;p&gt;I am highly biased here since I am working for Civo. However, if your main interest is Kubernetes clusters and you are looking for a managed solution, Civo has the best user experience. It is really easy to get started with AND your cloud bill will stay low. Many companies are already using Civo in production and you can get started too. Everything that can be built on k8s clusters can also be built on Civo k3s clusters.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/_aZLHlzuG9U"&gt;Civo Cloud Kubernetes Overview&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;For further information, have a look at this video I made providing an overview of Civo.&lt;/p&gt;

&lt;p&gt;Note that with the Prometheus operator on the marketplace, you can spin up your entire observability stack, including Prometheus and Grafana, alongside your Kubernetes cluster in just a few minutes.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#kubernetes-configurations-and-policy"&gt;
  &lt;/a&gt;
  Kubernetes Configurations and Policy
&lt;/h2&gt;

&lt;p&gt;I have talked about Datree a lot before — first of all, because you get it practically for free. Secondly, Kubernetes is difficult and Datree is THE tool that can make it a little bit easier for you to get started by checking your Kubernetes Manifests for any misconfiguration that might have been introduced. You can set policies and even customise policies to fit your application needs.&lt;/p&gt;

&lt;p&gt;For further information, have a look at this video I made providing an overview of Datree.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/MpdhrabnpYs"&gt;Verify Kubernetes Deployments with Datree&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#infrastructure"&gt;
  &lt;/a&gt;
  Infrastructure
&lt;/h2&gt;

&lt;p&gt;I work with Terraform on a daily basis for the past 6 months. The documentation is great. Once you have figured out a flow for your infrastructure setup and deployments, you will basically do the same thing every time you deploy new tools or you introduce any updates. Automating your testing and deployment process can help you save a lot of time in the long term.&lt;/p&gt;

&lt;p&gt;This video shows a simplified version of the flow that we have in place at Civo. If you are interested in what the use of Terraform may look like in production, then have a look at this Civo meetup recording.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/Qq1cfVw1Mx4"&gt;Full Tutorial: Deploying Helm Charts in Kubernetes with Terraform&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cloud-native-to-the-extreme"&gt;
  &lt;/a&gt;
  Cloud Native to the extreme
&lt;/h2&gt;

&lt;p&gt;Those of you who already know me are aware of my constant involvement with Crossplane and how much I like to showcase its use. I've also had the chance to create the Civo-Crossplane provider — so, if you are already using Civo, you might want to have a look at Crossplane on how you can optimise your cloud native infrastructure management. Overall, I like Crossplane because it allows me to show how far cloud native resource management can go. Crossplane helps you to manage your infrastructure as Kubernetes resources, spin up and reconcile infrastructure like you would manage any other Kubernetes resources. If this got you curious, have a look at this overview video:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/Dw0SMLHZvXM"&gt;Tutorial Using Crossplane to Setup Your Azure Kubernetes Service: Day 25 of #100DaysOfKubernetes&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#security"&gt;
  &lt;/a&gt;
  Security
&lt;/h2&gt;

&lt;p&gt;Aqua Sec has several open source tools that allow you to scan your cloud native deployments for vulnerabilities. I am just getting started with Security-related tools. However, if this is something you are interested in, I would suggest having a look at Aqua Sec or Falco. (Maybe I will write a separate blog post about using their tools).&lt;/p&gt;

&lt;p&gt;FYI&lt;/p&gt;

&lt;p&gt;You might wonder why I am not including any "developer platforms". Hereby, I mean platforms that allow you to deploy containers on Kubernetes clusters with minimum effort. I have a very strong opinion on "end-to-end" platforms. If you would like to hear it, please do let me know and I am happy to make a separate video about it. However, this would detract from the tools that I have outlined in this post.&lt;/p&gt;

&lt;p&gt;Summarising&lt;br&gt;
The CNCF landscape is massive and as you can imagine, there is always "yet another tool to explore". Thus, this list will likely change over the next months or years. Maybe at some point, I will redo it completely. Until then, I hope this gave you some insights into the tools that I like to use (some of them on a daily basis) and the tools that I would generally recommend.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>How Jason Docton Used React and WoW to Help People’s Mental Health</title>
      <author>Mikhail Karan</author>
      <pubDate>Wed, 17 Nov 2021 14:57:23 +0000</pubDate>
      <link>https://dev.to/mikhailkaran/how-jason-docton-used-react-and-wow-to-help-peoples-mental-health-l48</link>
      <guid>https://dev.to/mikhailkaran/how-jason-docton-used-react-and-wow-to-help-peoples-mental-health-l48</guid>
      <description>&lt;p&gt;&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/0odZiJAdwMfi9aiaQD1RRW"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#episode-sponsor"&gt;
  &lt;/a&gt;
  Episode Sponsor
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Shortcut&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Project management has never been easier.&lt;/p&gt;

&lt;p&gt;We bring the flow to your software team's workflow. Plan, collaborate, build, and measure success with Shortcut.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://shortcut.com/hatt"&gt;FREE Trial for Shortcut&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-html-all-the-things"&gt;
  &lt;/a&gt;
  What is HTML All The Things
&lt;/h2&gt;

&lt;p&gt;HTML All The Things is a &lt;a href="https://podcast.htmlallthethings.com/"&gt;web development podcast&lt;/a&gt; and &lt;a href="https://discord.com/invite/jweMCx9"&gt;discord community&lt;/a&gt; which was started by Matt and Mike, developers based in Ontario, Canada. &lt;/p&gt;

&lt;p&gt;The podcast speaks to web development topics as well as running a small business, self-employment and time management. You can join them for both their successes and their struggles as they try to manage expanding their Web Development business without stretching themselves too thin.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#announcements"&gt;
  &lt;/a&gt;
  Announcements
&lt;/h2&gt;

&lt;p&gt;The &lt;strong&gt;Svelte for Beginners&lt;/strong&gt; Udemy course is now live! Mike took his experience in teaching and learning Svelte and created a course. &lt;/p&gt;

&lt;p&gt;This course will teach you the fundamentals of JavaScript frameworks. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Get it now on Udemy!&lt;/strong&gt; 👇&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.udemy.com/course/svelte-for-beginners/?couponCode=HATTSALE"&gt;Svelte For Beginners&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-this-one-about"&gt;
  &lt;/a&gt;
  What's This One About?
&lt;/h2&gt;

&lt;p&gt;In this episode Matt and Mike sit down with Jason Docton to discuss how his web development journey led him to help thousands of people with their mental health. Starting out in World of Warcraft, Jason helped fellow players find the help they needed with their mental health struggles. He started working alongside more people in-game, forming a guild of players willing to help. Fast forward to today, Jason is running RAD (Rise Above the Disorder) a website that has helped 38, 000 people in 133 countries so far. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/JasonDocton"&gt;Jason Docton's Twitter&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.youarerad.org/"&gt;RAD - Nonprofit covering the cost of mental health care for everyone&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/youarerad/youarerad"&gt;RAD - Github if you want to contribute and help&lt;/a&gt;&lt;br&gt;
&lt;a href="https://osrg.t3.gg/"&gt;The Open Source Raid Guild&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#show-notes"&gt;
  &lt;/a&gt;
  Show Notes
&lt;/h2&gt;

&lt;p&gt;3:40 - What is your 'origin' story?&lt;br&gt;
17:05 - Is it true you taught yourself to code to launch your non-profit site Rise Above the Disorder?&lt;br&gt;
23:10 - How did you learn?&lt;br&gt;
46:25 - Developers are known to overexert themselves, What are some signs of burnout?&lt;br&gt;
57:00 - Passion projects vs work projects&lt;br&gt;
1:04:00 - What can you do to mitigate/prevent burnout?&lt;br&gt;
1:10:20 - When is the right time to reach out for help with mental health?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#key-takeaways"&gt;
  &lt;/a&gt;
  Key Takeaways
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Some people need professional mental health help&lt;/li&gt;
&lt;li&gt;Find the right people to learn from. The experts or first party sources in the technologies you're using&lt;/li&gt;
&lt;li&gt;The difference between a good developer and a great developer, is a great developer knows where to steal code from&lt;/li&gt;
&lt;li&gt;Big sign of burnout is when we start to find different ways to get away from what is causing us stress&lt;/li&gt;
&lt;li&gt;Create a boundary with work so you can disconnect&lt;/li&gt;
&lt;li&gt;When it feels like more days are struggling than not, that is the right time to reach out for help. &lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#thank-you"&gt;
  &lt;/a&gt;
  Thank you!
&lt;/h2&gt;

&lt;p&gt;If you're enjoying the podcast consider giving us a review on &lt;a href="https://podcasts.apple.com/us/podcast/html-all-things-web-development-web-design-small-business/id1412209136"&gt;Apple Podcasts&lt;/a&gt; or checking out our Patreon to get a shoutout on the podcast. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.patreon.com/htmlallthethings"&gt;Support us on Patreon&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can find us on all the podcast platforms out there as well as&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.instagram.com/htmlallthethings/"&gt;Instagram (@htmlallthethings)&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/htmleverything"&gt;Twitter (@htmleverything)&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.tiktok.com/@htmlallthethings"&gt;TikTok (Html All The Things)&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>podcast</category>
      <category>mentalhealth</category>
    </item>
    <item>
      <title>Automate your Ibis eBook build process with this GitHub Action + Workflow</title>
      <author>Bobby Iliev</author>
      <pubDate>Wed, 17 Nov 2021 14:40:37 +0000</pubDate>
      <link>https://dev.to/bobbyiliev/automate-your-ibis-ebook-build-process-no5</link>
      <guid>https://dev.to/bobbyiliev/automate-your-ibis-ebook-build-process-no5</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;ibis-build-action&lt;/code&gt; action is a GitHub Action to automatically run your &lt;code&gt;ibis&lt;/code&gt; builds on push events to your &lt;code&gt;main&lt;/code&gt; branch.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/themsaid/ibis"&gt;Ibis&lt;/a&gt; is an open-source PHP tool that lets you write eBooks in Markdown. It was created by &lt;a href="https://github.com/themsaid"&gt;Mohamed Said&lt;/a&gt; who used it to generate his own eBook that he was writing at the time!&lt;/p&gt;

&lt;p&gt;Ibis has allowed me to create multiple eBooks already. However not everyone has PHP and Composer installed on their laptops, so people who contribute to your eBook project might not be able to export the PDF of your eBook after their changes.&lt;/p&gt;

&lt;p&gt;This is why I decided to create a GitHub Action that would let you automatically generate your Ibis builds directly on GitHub, without having PHP installed on your laptop.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#submission-category"&gt;
  &lt;/a&gt;
  Submission Category:
&lt;/h3&gt;

&lt;p&gt;Maintainer Must-Haves&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#my-workflow"&gt;
  &lt;/a&gt;
  My Workflow
&lt;/h2&gt;

&lt;p&gt;In order to automatically build your Ibis PDF files, create a directory called &lt;code&gt;.github/workflows/&lt;/code&gt; and add a fill called &lt;code&gt;ibis.yml&lt;/code&gt; with the following content:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Ibis eBook Generation&lt;/span&gt;
&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;push&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;branches&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;main&lt;/span&gt;

&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;build&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/checkout@main&lt;/span&gt;
      &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;fetch-depth&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;0'&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Build Ibis Export Files&lt;/span&gt;
      &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;bobbyiliev/ibis-build-action@main&lt;/span&gt;
      &lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;GITHUB_TOKEN&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.GITHUB_TOKEN }}&lt;/span&gt;
        &lt;span class="na"&gt;IBIS_PATH&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;./'&lt;/span&gt;
        &lt;span class="na"&gt;IBIS_BRANCH&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;main'&lt;/span&gt;
        &lt;span class="na"&gt;EMAIL&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;bobby@bobbyiliev.com'&lt;/span&gt;
        &lt;span class="na"&gt;COMMIT_MESSAGE&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Updated&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Ibis&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Exorted&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Files'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#environment-variables"&gt;
  &lt;/a&gt;
  Environment Variables
&lt;/h3&gt;

&lt;p&gt;This is the list of the environment variables that you need to keep in mind:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;GITHUB_TOKEN&lt;/code&gt;: Required for permission to tag the repo. You can leave it as it is.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;IBIS_PATH&lt;/code&gt;: The path to the Ibis init folder. By default it is &lt;code&gt;./&lt;/code&gt; but if you have a custom location, make sure to update it&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;IBIS_BRANCH&lt;/code&gt;: The Branch that the Ibis exported files will be commited and pushed to. Default is &lt;code&gt;main&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;EMAIL&lt;/code&gt;: The email address that the commit will be associated with.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;COMMIT_MESSAGE&lt;/code&gt;: The commit message.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#overview"&gt;
  &lt;/a&gt;
  Overview
&lt;/h3&gt;

&lt;p&gt;You can find the &lt;code&gt;ibis-build-action&lt;/code&gt; GitHub Action repository here:&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/bobbyiliev"&gt;
        bobbyiliev
      &lt;/a&gt; / &lt;a href="https://github.com/bobbyiliev/ibis-build-action"&gt;
        ibis-build-action
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      GitHub Action to run ibis builds on merge
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
ibis-build-action&lt;/h1&gt;
&lt;p&gt;A GitHub Action to automatically run ibis builds on merge to &lt;code&gt;main&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/21223421/139258477-107b1da3-6c02-4a81-a827-d58380a43252.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NI6Ut4AK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/21223421/139258477-107b1da3-6c02-4a81-a827-d58380a43252.png" alt="Ibis GitHub Action"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
Ibis&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/themsaid/ibis"&gt;Ibis&lt;/a&gt; is a PHP tool that lets you write eBooks in Markdown.&lt;/p&gt;

&lt;h3&gt;
Usage&lt;/h3&gt;
&lt;p&gt;In order to automatically build your Ibis PDF files, create a directory called &lt;code&gt;.github/workflows/&lt;/code&gt; and add a fill called &lt;code&gt;ibis.yml&lt;/code&gt; with the following content:&lt;/p&gt;
&lt;div class="highlight highlight-source-yaml position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-ent"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;Ibis eBook Generation&lt;/span&gt;
&lt;span class="pl-ent"&gt;on&lt;/span&gt;:
  &lt;span class="pl-ent"&gt;push&lt;/span&gt;:
    &lt;span class="pl-ent"&gt;branches&lt;/span&gt;:
      - &lt;span class="pl-s"&gt;main&lt;/span&gt;

&lt;span class="pl-ent"&gt;jobs&lt;/span&gt;:
  &lt;span class="pl-ent"&gt;build&lt;/span&gt;:
    &lt;span class="pl-ent"&gt;runs-on&lt;/span&gt;: &lt;span class="pl-s"&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class="pl-ent"&gt;steps&lt;/span&gt;:
    - &lt;span class="pl-ent"&gt;uses&lt;/span&gt;: &lt;span class="pl-s"&gt;actions/checkout@main&lt;/span&gt;
      &lt;span class="pl-ent"&gt;with&lt;/span&gt;:
        &lt;span class="pl-ent"&gt;fetch-depth&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    - &lt;span class="pl-ent"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;Build Ibis Export Files&lt;/span&gt;
      &lt;span class="pl-ent"&gt;uses&lt;/span&gt;: &lt;span class="pl-s"&gt;bobbyiliev/ibis-build-action@main&lt;/span&gt;
      &lt;span class="pl-ent"&gt;env&lt;/span&gt;:
        &lt;span class="pl-ent"&gt;GITHUB_TOKEN&lt;/span&gt;: &lt;span class="pl-s"&gt;${{ secrets.GITHUB_TOKEN }}&lt;/span&gt;
        &lt;span class="pl-ent"&gt;IBIS_PATH&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;./&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
        &lt;span class="pl-ent"&gt;IBIS_BRANCH&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;main&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
        &lt;span class="pl-ent"&gt;EMAIL&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;bobby@bobbyiliev.com&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
        &lt;span class="pl-ent"&gt;COMMIT_MESSAGE&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Updated Ibis Exorted Files&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
Environment Variables&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;GITHUB_TOKEN&lt;/code&gt;: Required for permission to tag the repo. You can leave it as it is.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;IBIS_PATH&lt;/code&gt;: The path to the Ibis…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/bobbyiliev/ibis-build-action"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;ibis-build-action&lt;/code&gt; GitHub Action does the following things once added to your repository. &lt;/p&gt;

&lt;p&gt;Every time you push to &lt;code&gt;main&lt;/code&gt; or merge a PR to &lt;code&gt;main&lt;/code&gt; this workflow takes palce:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;On push (or merge), the action will:

&lt;ul&gt;
&lt;li&gt;Clone the repository&lt;/li&gt;
&lt;li&gt;Run the &lt;code&gt;ibis build&lt;/code&gt; commands including the sample builds&lt;/li&gt;
&lt;li&gt;Stage and commit the new exported eBook files to the specified branch&lt;/li&gt;
&lt;li&gt;Pushes tag to GitHub&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k3WLPuuz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/ZaQUbKc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k3WLPuuz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/ZaQUbKc.png" alt="ibis-build-action screenshot of completed action" width="337" height="340"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This will provide you with your eBook PDF file generated and stored in your repository's content folder.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ebook-projects-using-the-raw-ibisbuildaction-endraw-github-action"&gt;
  &lt;/a&gt;
  Ebook Projects using the &lt;code&gt;ibis-build-action&lt;/code&gt; GitHub action:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/bobbyiliev/introduction-to-docker-ebook"&gt;Introduction to Docker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bobbyiliev/introduction-to-git-and-github-ebook"&gt;Introduction to Git and GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bobbyiliev/introduction-to-bash-scripting"&gt;Introduction to Bash Scripting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bobbyiliev/introduction-to-sql"&gt;Introduction to SQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bobbyiliev/laravel-tips-and-tricks-ebook"&gt;Laravel tips and tricks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#alternative-approach"&gt;
  &lt;/a&gt;
  Alternative approach
&lt;/h4&gt;

&lt;p&gt;As brought up to my attention recently by &lt;a href="https://twitter.com/RmeetsH"&gt;Roberto B&lt;/a&gt;, in case that you need more flexibility about managing the PDF, rather than using the &lt;code&gt;ibis-build-action&lt;/code&gt; GitHub action, you can produce an artifact instead. &lt;/p&gt;

&lt;p&gt;Here is an example GitHub workflow provided by Robert which would do the same build but store the PDF as an artifact:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/roberto-butti/50-drops-of-php/blob/main/.github/workflows/build-sample.yml"&gt;Ibis artifact workflow&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Ibis is a great tool and in case that you are planning to write an eBook make sure to give it a try!&lt;/p&gt;

&lt;p&gt;By using the &lt;code&gt;ibis-build-action&lt;/code&gt; GitHub Action, you can automate your eBook PDF generation on each push to a specific branch and always have an up-to date export of your eBook!&lt;/p&gt;

&lt;p&gt;If you like this, make sure to follow me on Twitter:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/bobbyiliev_"&gt;@bobbyiliev &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I hope that this was helpful!&lt;/p&gt;

</description>
      <category>actionshackathon21</category>
      <category>github</category>
      <category>git</category>
      <category>books</category>
    </item>
    <item>
      <title>Icon Navigation Bar With Animated Hover Effects</title>
      <author>Pasindu Codes</author>
      <pubDate>Wed, 17 Nov 2021 14:39:15 +0000</pubDate>
      <link>https://dev.to/pasinducodes/icon-navigation-bar-with-animated-hover-effects-3ec0</link>
      <guid>https://dev.to/pasinducodes/icon-navigation-bar-with-animated-hover-effects-3ec0</guid>
      <description>&lt;p&gt;Welcome back, guys. ✌ In this article you will be learning how to create this beautiful navigation bar with HTML, CSS, and a little bit of JavaScript. This is a quick preview of what we are going to create today. 👇&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aKTiN6-Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/spt1ugh0vt7p9lee2rv0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aKTiN6-Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/spt1ugh0vt7p9lee2rv0.png" alt="Image description" width="880" height="456"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It is very easy and simple to understand. So let's make this 😉. I have discussed step by step how to create this and at the end, there is a complete code also.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#html-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;HTML CODE&lt;/strong&gt;
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;nav&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;data-color=&lt;/span&gt;&lt;span class="s"&gt;"#3f3f64"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"./images/service-icon.png"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"service-icon"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt;
          &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"color-image"&lt;/span&gt;
          &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"./images/service-icon-color.png"&lt;/span&gt;
          &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"service-icon"&lt;/span&gt;
        &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;data-color=&lt;/span&gt;&lt;span class="s"&gt;"#794343"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"./images/support-icon.png"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"support-icon"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt;
          &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"color-image"&lt;/span&gt;
          &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"./images/support-icon-color.png"&lt;/span&gt;
          &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"support-icon"&lt;/span&gt;
        &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;data-color=&lt;/span&gt;&lt;span class="s"&gt;"#8be8ff"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"./images/home-icon.png"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"home-icon"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt;
          &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"color-image"&lt;/span&gt;
          &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"./images/home-icon-color.png"&lt;/span&gt;
          &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"home-icon"&lt;/span&gt;
        &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;data-color=&lt;/span&gt;&lt;span class="s"&gt;"#f7a11fa2"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"./images/stats-icon.png"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"stats-icon"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt;
          &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"color-image"&lt;/span&gt;
          &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"./images/stats-icon-color.png"&lt;/span&gt;
          &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"stats-icon"&lt;/span&gt;
        &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;data-color=&lt;/span&gt;&lt;span class="s"&gt;"#b33136"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"./images/feedback-icon.png"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"feedback-icon"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt;
          &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"color-image"&lt;/span&gt;
          &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"./images/feedback-icon-color.png"&lt;/span&gt;
          &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"feedback-icon"&lt;/span&gt;
        &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/nav&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So as this is a navigation bar I decided to use the &lt;code&gt;&amp;lt;nav&amp;gt;&lt;/code&gt; element to create this. Everything is inside the &lt;code&gt;&amp;lt;nav&amp;gt;&lt;/code&gt; tag, and there is an unordered list in it to create the links.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#css-for-nav-bar"&gt;
  &lt;/a&gt;
  &lt;strong&gt;CSS for Nav Bar&lt;/strong&gt;
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;nav&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;nav&lt;/span&gt; &lt;span class="nt"&gt;ul&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;list-style-type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;space-around&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#8395a7&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Created a flex box and &lt;code&gt;justify-content: space-around&lt;/code&gt; to create equal spaces between images. &lt;code&gt;list-style-type: none&lt;/code&gt; to remove the bullets and &lt;code&gt;overflow: hidden&lt;/code&gt; to avoind overflowing the content. set a &lt;code&gt;bacground-color&lt;/code&gt; and &lt;code&gt;border-radius&lt;/code&gt; to look better. 😏&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ltligt-tag"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&amp;lt;li&amp;gt; Tag&lt;/strong&gt;
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;data-color=&lt;/span&gt;&lt;span class="s"&gt;"#3f3f64"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"./images/service-icon.png"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"service-icon"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt;
    &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"color-image"&lt;/span&gt;
    &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"./images/service-icon-color.png"&lt;/span&gt;
    &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"service-icon"&lt;/span&gt;
  &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The images are created inside the &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; tag. And you can see there are two images inside the&lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; tag. One is the black and white and the other is color image. the &lt;code&gt;data-color&lt;/code&gt; attribute in the&lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; tag is made for the function of JavaScript. You can see it at the end of this article.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;nav&lt;/span&gt; &lt;span class="nt"&gt;ul&lt;/span&gt; &lt;span class="nt"&gt;li&lt;/span&gt; &lt;span class="nt"&gt;span&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;These are the stylings for &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; tag. &lt;code&gt;display: block&lt;/code&gt; unless we can't change the padding values because it is a inline element by default. &lt;code&gt;position: relative&lt;/code&gt; because the colored image is going to be absolute to that element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;img&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;70px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Set an fixed &lt;code&gt;width&lt;/code&gt; to the image.&lt;/p&gt;

&lt;p&gt;The most important part is positioning the colored image. I position the colored image right in front of the black and white image. So that the black and white image is under the colored image. Then I set the colored image's&lt;code&gt;opacity: 0&lt;/code&gt; so that the colored image cannot be seen. But still, the colored image is in front of the black and white image. So the hover effect is to bring back the opacity with a transition. And it will be like an animation of color-changing 😁.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.color-image&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="m"&gt;0.25s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.color-image&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;👍 &lt;em&gt;So here is the complete CSS code for the project.&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;box-sizing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;border-box&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="m"&gt;1s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#3f3f64&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;nav&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;nav&lt;/span&gt; &lt;span class="nt"&gt;ul&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;list-style-type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;space-around&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#8395a7&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;nav&lt;/span&gt; &lt;span class="nt"&gt;ul&lt;/span&gt; &lt;span class="nt"&gt;li&lt;/span&gt; &lt;span class="nt"&gt;span&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;img&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;70px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.color-image&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="m"&gt;0.25s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.color-image&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#javascript"&gt;
  &lt;/a&gt;
  &lt;strong&gt;JAVASCRIPT&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;This is the JavaScript part. It is very simple. All it does is change the &lt;code&gt;background-color&lt;/code&gt; of the document when an icon is clicked. (Just for fun 😂). So here it is...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;link&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelectorAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;span&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Getting all the span elements&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;body&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;body&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Getting the body&lt;/span&gt;

&lt;span class="nx"&gt;link&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;bodyColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;backgroundColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;bodyColor&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So in here I have selected all the &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; elements using &lt;code&gt;querySelectorAll&lt;/code&gt; and when a &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; element is clicked, it takes the &lt;code&gt;data-color&lt;/code&gt; attribute of that element and set that color as the &lt;code&gt;bacground-color&lt;/code&gt; of the document.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#links"&gt;
  &lt;/a&gt;
  🔗 &lt;strong&gt;LINKS&lt;/strong&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Link to the &lt;a href="https://github.com/Pasindu-Uthum/nav-bar-animation"&gt;Github Repository&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Follow me on &lt;a href="https://twitter.com/PasinduUthum"&gt;Twitter&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Follow me on &lt;a href="https://www.instagram.com/pasindu_uthum/"&gt;Instagram&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Download SVG icons from &lt;a href="https://www.flaticon.com/"&gt;flaticon&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Leave a like 👍 and share 🤙 this article to your friends so that they will also learn what you learned from this. Comment 💬 down you ideas about this. See you in the article. :)&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>AWS Gotchas</title>
      <author>Jon Ashdown</author>
      <pubDate>Wed, 17 Nov 2021 14:36:25 +0000</pubDate>
      <link>https://dev.to/jonashdown/aws-gotchas-47kj</link>
      <guid>https://dev.to/jonashdown/aws-gotchas-47kj</guid>
      <description>&lt;h2&gt;
  &lt;a href="#aws-gotchas"&gt;
  &lt;/a&gt;
  AWS Gotchas
&lt;/h2&gt;

&lt;p&gt;I will highlight AWS gotchas as I find them&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dynamodb"&gt;
  &lt;/a&gt;
  Dynamodb
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#ttl-fields-are-in-seconds"&gt;
  &lt;/a&gt;
  TTL Fields are in Seconds
&lt;/h4&gt;

&lt;p&gt;TTL Fields on dynamodb are great, as they allow a grace period between marking a record for deletion and the actual deletion. Meaning that when you have finished with a record, you can set a TTL field to a time in the future and AWS internal mechanisms will remove the record at some point soon after the that time has passed.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#gotcha"&gt;
  &lt;/a&gt;
  Gotcha:
&lt;/h5&gt;

&lt;p&gt;The TTL field is an integer in &lt;strong&gt;seconds&lt;/strong&gt; from the Unix epoch, all other dates, including explicit date fields in dynamodb are stored as ISO dates, which are stored under the hood as &lt;strong&gt;microseconds&lt;/strong&gt; from the Unix epoch. This is documented at &lt;a href="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/time-to-live-ttl-before-you-start.html#time-to-live-ttl-before-you-start-formatting"&gt;Using DynamoDB Time to Live (TTL)&lt;/a&gt;. However, it is easy to forget hence the reason for this gotcha.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#workaround"&gt;
  &lt;/a&gt;
  Workaround:
&lt;/h5&gt;

&lt;p&gt;Calculate the TTL using your standard date library, convert to integer and divide by 1000 to convert milliseconds to seconds.&lt;br&gt;
e.g&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;DocumentClient&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;aws-sdk/clients/dynamodb&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;dynamoDb&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;DocumentClient&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;hoursInTheFuture&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getFutureTimeInSeconds&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;hours&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getHours&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;hoursInTheFuture&lt;/span&gt;

  &lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setHours&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;hours&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getTime&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;deleteInTheFuture&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;dynamoDb&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;update&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;TableName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;myDynamoDbTable&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;Key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;id&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;UpdateExpression&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;SET ttl = :t&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;ExpressionAttributeValues&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;:t&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;getFutureTimeInSeconds&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;//record will be deleted 24 hours from now&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="nx"&gt;promise&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>aws</category>
      <category>gotchas</category>
      <category>timestanps</category>
    </item>
    <item>
      <title>10 Top SaaS Startups to Inspire You in 2022</title>
      <author>Codica</author>
      <pubDate>Wed, 17 Nov 2021 14:36:09 +0000</pubDate>
      <link>https://dev.to/codicacom/10-top-saas-startups-to-inspire-you-in-2022-35n</link>
      <guid>https://dev.to/codicacom/10-top-saas-startups-to-inspire-you-in-2022-35n</guid>
      <description>&lt;p&gt;&lt;em&gt;The article was initially published on &lt;a href="https://www.codica.com/blog/best-saas-startups/"&gt;Codica Blog&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Today we are witnessing the high growth of the SaaS segment. It is &lt;a href="https://99firms.com/blog/saas-statistics/#gref"&gt;reported&lt;/a&gt; that at least one SaaS app is used in 80% of companies across industries.&lt;/p&gt;

&lt;p&gt;Will this forecast work? We shall see. Nevertheless, the idea of starting a SaaS company seems very appealing.&lt;/p&gt;

&lt;p&gt;Below we have gathered 10 successful SaaS startups, which stand out from the crowd with fast-growing products that bring real value to customers. So let’s not beat over the bush and take a look at the most promising SaaS startups marked by Growthlist and AngelList.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Orders.co&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7Cccn2UI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r1btn9tjdsgcdnupicms.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7Cccn2UI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r1btn9tjdsgcdnupicms.jpg" alt="Image description" width="880" height="451"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SaaS product:&lt;/strong&gt; Food delivery&lt;br&gt;
&lt;strong&gt;Founded:&lt;/strong&gt; 2020&lt;br&gt;
&lt;strong&gt;Headquarters:&lt;/strong&gt; Los Angeles, California, United States&lt;br&gt;
&lt;strong&gt;CEO:&lt;/strong&gt; Arsen Stepanyan&lt;/p&gt;

&lt;p&gt;Food delivery has become a common thing for Americans, at least for 60% of them. &lt;a href="https://orders.co/"&gt;Orders.co&lt;/a&gt; is a SaaS company that knows how to help restaurants benefit from this trend.&lt;/p&gt;

&lt;p&gt;The startup integrates the well-known delivery services into an extensive system. Restaurant owners get the opportunity to manage all menus and orders from a single device. It also enables them to create a smart ordering site in no time.&lt;/p&gt;

&lt;p&gt;Orders.co seems a great startup that caught on to a timely idea and brought it into reality. Its mission is to help restaurants stay relevant in the new environment.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Working Den&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T0d47J-F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0lcgodlybu5efem96fci.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T0d47J-F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0lcgodlybu5efem96fci.jpg" alt="Image description" width="880" height="372"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SaaS product:&lt;/strong&gt; Home healthcare&lt;br&gt;
&lt;strong&gt;Founded:&lt;/strong&gt; 2020&lt;br&gt;
&lt;strong&gt;Headquarters:&lt;/strong&gt; London, Great Britain&lt;br&gt;
&lt;strong&gt;Founder:&lt;/strong&gt; Daniel Hall&lt;/p&gt;

&lt;p&gt;Today many companies switch to remote work. It seems that many employees are more than happy with this. Thus, &lt;a href="https://www.weforum.org/agenda/2020/06/coronavirus-covid19-remote-working-office-employees-employers/"&gt;98% of people&lt;/a&gt; would eagerly work remotely for the rest of their career. For this category of employees, keeping fit and maintaining mental wellness is crucial. Luckily, a promising SaaS startup &lt;a href="https://www.workingden.com/"&gt;Working Den&lt;/a&gt; helps them cope with this task.&lt;/p&gt;

&lt;p&gt;The startup offers a complex solution that helps keep a healthy work-life balance. Specifically, it has tools for protecting your eyesight, preventing chronic diseases, and reducing stress levels.&lt;/p&gt;

&lt;p&gt;The extensive functionality and the noble goal of helping people improve their physical and mental health make Working Den one of the best startups in its category.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Virtually&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pWRsRPYv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vh12jhsygmgnxvc3hiy0.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pWRsRPYv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vh12jhsygmgnxvc3hiy0.jpg" alt="Image description" width="880" height="409"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SaaS product:&lt;/strong&gt; &lt;a href="https://www.codica.com/blog/how-to-build-elearning-website-like-udemy-or-coursera/"&gt;Online learning platform&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Founded:&lt;/strong&gt; 2019&lt;br&gt;
&lt;strong&gt;Headquarters:&lt;/strong&gt; Seattle, Washington, United States&lt;br&gt;
&lt;strong&gt;CEO:&lt;/strong&gt; Ish Baid&lt;/p&gt;

&lt;p&gt;Today, e-learning is considered a decent alternative to traditional education. Virtually is a platform designed to make online learning comfortable to the max. The platform offers different student management tools, multiple chatting options, and simplified payment processing. In addition, you can find online programs to suit any taste there.&lt;/p&gt;

&lt;p&gt;It is worth noting that Virtually allows users to customize their experience. Enterprise customers get the opportunity of white-labeling the user experience with a color scheme, custom domain, and branding.&lt;/p&gt;

&lt;p&gt;A fully-customizable solution Virtually has got $125,000 through seed investments so far.&lt;/p&gt;

&lt;p&gt;ClickUp &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2DnugbuB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x8dxbfkwroe9f1bsn01r.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2DnugbuB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x8dxbfkwroe9f1bsn01r.jpg" alt="Image description" width="880" height="451"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SaaS product:&lt;/strong&gt; Workplace productivity platform &lt;br&gt;
&lt;strong&gt;Founded:&lt;/strong&gt; 2017&lt;br&gt;
&lt;strong&gt;Headquarters:&lt;/strong&gt; San Diego, California, United States&lt;br&gt;
&lt;strong&gt;CEO:&lt;/strong&gt; Zeb Evans&lt;/p&gt;

&lt;p&gt;SaaS startups aimed at helping businesses to optimize their teamwork are on the rise now. &lt;a href="https://www.clickup.com/"&gt;ClickUp&lt;/a&gt; is one of them. This platform comprises multiple tools that simplify the collaboration process. Its functionality includes time tracking, custom statuses, docs, wikis, etc.&lt;/p&gt;

&lt;p&gt;Besides, the platform can be easily integrated with such well-known productivity services as Slack, GitHub, Figma, and Google Drive.&lt;/p&gt;

&lt;p&gt;The solution is noted for multi-tasking and superb user experience that make ClickUp one of the most prominent startups in its niche. It has managed to receive $37.5 million through seed investments.&lt;/p&gt;

&lt;p&gt;Funnell&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zBYfZuTe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t6p8wcw1yxt26u89t0y3.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zBYfZuTe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t6p8wcw1yxt26u89t0y3.jpg" alt="Image description" width="880" height="451"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SaaS product:&lt;/strong&gt; Conversion tracking automation&lt;br&gt;
&lt;strong&gt;Founded:&lt;/strong&gt; 2019&lt;br&gt;
&lt;strong&gt;Headquarters:&lt;/strong&gt; Wilmington, Delaware, United States&lt;br&gt;
CEO: Sherif Ali&lt;/p&gt;

&lt;p&gt;Need help in running your marketing campaigns? In this case, &lt;a href="https://www.funnelll.com/"&gt;Funnel&lt;/a&gt; is definitely worth looking at. With this platform, you will be able to track your conversions and streamline your promotional campaigns much easier. The solution is famous for its seamless integration with Google Analytics, Slack, Quora Ads, Facebook Pixel, and LinkedIn Ads.&lt;/p&gt;

&lt;p&gt;In addition, Funnel allows you to build funnel visualizations. Thus, you will be able to improve your customer journey and increase the conversion rate in no time.&lt;br&gt;
This promising marketing solution has already raised &lt;strong&gt;$75,000&lt;/strong&gt; through seed investments.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Qobra&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QRp3CboK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kxenvxez6l72ilm8r3s6.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QRp3CboK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kxenvxez6l72ilm8r3s6.jpg" alt="Image description" width="880" height="426"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SaaS product:&lt;/strong&gt; Automation for commission calculations&lt;br&gt;
&lt;strong&gt;Founded:&lt;/strong&gt; 2020&lt;br&gt;
&lt;strong&gt;Headquarters:&lt;/strong&gt; Paris, France&lt;br&gt;
&lt;strong&gt;CEO:&lt;/strong&gt; Antoine Fort&lt;/p&gt;

&lt;p&gt;Commissions can become a real pain in the neck if you manage them in the spreadsheets. Luckily now we have a solution that can automate sales commission calculations. The SaaS startup called &lt;a href="https://www.qobra.co/"&gt;Qobra&lt;/a&gt; gives you such an opportunity. With its help, you can sync your commission data in real-time, manage disputes, and control approval workflows.&lt;/p&gt;

&lt;p&gt;When it comes to the platform functionality, we should mention personal award dashboards, dispute management tools, and approval workflows as key features.&lt;/p&gt;

&lt;p&gt;Qobra is a perfect solution for strategic planning. It allows you to predict future revenue based on a compensation plan.&lt;/p&gt;

&lt;p&gt;To this day, the Qobra managed to get a pre-seed investment of &lt;strong&gt;€100,000&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;RightBound&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b49OWuZ_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5wyk8r1dcq8d9ha28rg7.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b49OWuZ_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5wyk8r1dcq8d9ha28rg7.jpg" alt="Image description" width="880" height="371"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SaaS product:&lt;/strong&gt; Sales automation&lt;br&gt;
&lt;strong&gt;Founded:&lt;/strong&gt; 2019&lt;br&gt;
&lt;strong&gt;Headquarters:&lt;/strong&gt; Kirkland, Washington, United States&lt;br&gt;
&lt;strong&gt;CEO:&lt;/strong&gt; Ran Oelgiesser&lt;/p&gt;

&lt;p&gt;Usually, sales teams are torn between multiple apps for optimizing the sales development process. That fact drives up the demand for all-in-one solutions that help analyze and improve performance. The classic example of such platforms is &lt;a href="https://rightbound.com/why-rightbound/"&gt;RightBound&lt;/a&gt;. It is designed for handling repetitive prospecting routine including cadence tracking, list building, and account research.&lt;/p&gt;

&lt;p&gt;RightBound gives sales teams the set of special tools that help optimize their work. For example, sales specialists receive real-time notifications related to the prospect’s engagement stage or previous customer information.&lt;/p&gt;

&lt;p&gt;RightBound turned out to be extremely valuable for sales development teams, and already got &lt;strong&gt;$3.1 million&lt;/strong&gt; through seed investment.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Yac&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Kawvco02--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2imlcw30kpbecwrhhxhm.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kawvco02--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2imlcw30kpbecwrhhxhm.jpg" alt="Image description" width="880" height="416"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SaaS product:&lt;/strong&gt; Voice messaging service&lt;br&gt;
&lt;strong&gt;Founded:&lt;/strong&gt; 2019&lt;br&gt;
&lt;strong&gt;Headquarters:&lt;/strong&gt; Kissimmee, Florida, United States&lt;br&gt;
&lt;strong&gt;CEO:&lt;/strong&gt; Justin Mitchell&lt;/p&gt;

&lt;p&gt;In the face of remote work, holding daily meetings becomes quite a challenging task. So you have to find a new, more comfortable way to collaborate with your team. For example, you can replace meetings with async voice messages. In this regard, the platform &lt;a href="https://www.yac.com/"&gt;Yac&lt;/a&gt; comes in especially handy. This service allows shortening calls by voice messaging. Besides, its diverse functionality includes screen sharing, group messaging, and public share links. &lt;/p&gt;

&lt;p&gt;In addition, there is a searchable audio transcription that helps you find the required messages quickly and effortlessly.&lt;/p&gt;

&lt;p&gt;This comprehensive system for team voice communication has managed to get &lt;strong&gt;$2 million&lt;/strong&gt; through seed investment.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;OpenSea&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OASqrn6r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/azhg2xg4f3zstg6qbels.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OASqrn6r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/azhg2xg4f3zstg6qbels.jpg" alt="Image description" width="880" height="358"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SaaS product:&lt;/strong&gt; Marketplace for crypto goods&lt;br&gt;
&lt;strong&gt;Founded:&lt;/strong&gt; 2017&lt;br&gt;
&lt;strong&gt;Headquarters:&lt;/strong&gt; New York, United States&lt;br&gt;
&lt;strong&gt;CEO:&lt;/strong&gt; Devin Finzer&lt;/p&gt;

&lt;p&gt;It’s not a secret that  the game market is currently booming, and &lt;a href="https://newzoo.com/insights/articles/newzoo-games-market-numbers-revenues-and-audience-2020-2023/#:~:text=Games-,The%20World's%202.7%20Billion%20Gamers%20Will%20Spend%20%24159.3%20Billion%20on,Surpass%20%24200%20Billion%20by%202023&amp;amp;text=We%20forecast%20that%202020's%20global,year%20growth%20of%20%2B9.3%25."&gt;latest research&lt;/a&gt; proves this. Therefore, users need a specific medium where they can buy and sell various crypto assets, such as gaming items or domain names. &lt;a href="https://opensea.io/"&gt;OpenSea&lt;/a&gt; became the first and largest marketplace for digital goods.&lt;/p&gt;

&lt;p&gt;OpenSea is scaling rapidly and does not show any sign of stopping. At present, the platform contains more than 12 million items and 700,000 asset types.&lt;br&gt;
Thanks to the unique product idea and its successful execution, the startup got &lt;strong&gt;$4.2 million&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Prodly&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9N0yMrEu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8kykmb1wkyjh71p3o5da.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9N0yMrEu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8kykmb1wkyjh71p3o5da.jpg" alt="Image description" width="880" height="403"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SaaS product:&lt;/strong&gt; Low-code development automation&lt;br&gt;
&lt;strong&gt;Founded: 2017&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Headquarters:&lt;/strong&gt; Palo Alto, California, United States&lt;br&gt;
&lt;strong&gt;CEO:&lt;/strong&gt; Max Rudman&lt;/p&gt;

&lt;p&gt;The last but not least SaaS startup that we want to discuss is &lt;a href="http://www.prodly.co"&gt;Prodly&lt;/a&gt;. It is aimed at helping developers build and launch applications faster and easier. The company created a platform called AppOpps that automates low-code development. As a result, non-developers get the opportunity of configuring the app and removing choke points. This way, applications are getting more agile and cost-effective.&lt;/p&gt;

&lt;p&gt;Prodly is considered one of the outstanding SaaS startups in 2021. It has already got &lt;strong&gt;$17 million&lt;/strong&gt; through seed investment.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bottom line&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;These are the most promising startups we suggest you should follow in 2021-2022. As you can see, SaaS products can be used for totally different purposes: from helping remote workers keep fit to offering users a marketplace for buying and selling crypto goods.&lt;/p&gt;

&lt;p&gt;We hope that examples from this article will inspire you to create a unique and valuable software-as-a-service solution.&lt;/p&gt;

&lt;p&gt;For more details about successful SaaS businesses, check our full article &lt;a href="https://www.codica.com/blog/best-saas-startups/"&gt;10 Best SaaS Startups in 2022 for Your Inspiration&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>saas</category>
      <category>guide</category>
      <category>2022</category>
    </item>
    <item>
      <title>UIHUT 2.0 is live on the product hunt community 🥳🥳🥳
</title>
      <author>Mansurul Haque</author>
      <pubDate>Wed, 17 Nov 2021 14:34:33 +0000</pubDate>
      <link>https://dev.to/mdmh_sami/uihut-20-is-live-on-the-product-hunt-community-1llh</link>
      <guid>https://dev.to/mdmh_sami/uihut-20-is-live-on-the-product-hunt-community-1llh</guid>
      <description>&lt;p&gt;Hello UIHUT Lovers 🥰🥰🥰&lt;br&gt;
We are announcing that UIHUT 2.0 is live on the product hunt community 🥳🥳🥳&lt;br&gt;
It's will be more than appreciated if you join and show us some love for the awesome PH community.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.producthunt.com/posts/uihut-2-0"&gt;https://www.producthunt.com/posts/uihut-2-0&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>AWS Gotchas</title>
      <author>Jon Ashdown</author>
      <pubDate>Wed, 17 Nov 2021 14:32:35 +0000</pubDate>
      <link>https://dev.to/jonashdown/aws-gotchas-1im3</link>
      <guid>https://dev.to/jonashdown/aws-gotchas-1im3</guid>
      <description>&lt;h2&gt;
  &lt;a href="#aws-gotchas"&gt;
  &lt;/a&gt;
  AWS Gotchas
&lt;/h2&gt;

&lt;p&gt;I will highlight AWS gotchas as I find them&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dynamodb"&gt;
  &lt;/a&gt;
  Dynamodb
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#ttl-fields-are-in-seconds"&gt;
  &lt;/a&gt;
  TTL Fields are in Seconds
&lt;/h4&gt;

&lt;p&gt;TTL Fields on dynamodb are great, as they allow a grace period between marking a record for deletion and the actual deletion. Meaning that when you have finished with a record, you can set a TTL field to a time in the future and AWS internal mechanisms will remove the record at some point soon after the that time has passed.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#gotcha"&gt;
  &lt;/a&gt;
  Gotcha:
&lt;/h5&gt;

&lt;p&gt;The TTL field is an integer in &lt;strong&gt;seconds&lt;/strong&gt; from the Unix epoch, all other dates, including explicit date fields in dynamodb are stored as ISO dates, which are stored under the hood as &lt;strong&gt;microseconds&lt;/strong&gt; from the Unix epoch. This is documented at &lt;a href="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/time-to-live-ttl-before-you-start.html#time-to-live-ttl-before-you-start-formatting"&gt;Using DynamoDB Time to Live (TTL)&lt;/a&gt;. However, it is easy to forget hence the reason for this gotcha.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#workaround"&gt;
  &lt;/a&gt;
  Workaround:
&lt;/h5&gt;

&lt;p&gt;Calculate the TTL using your standard date library, convert to integer and divide by 1000 to convert milliseconds to seconds.&lt;br&gt;
e.g&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;DocumentClient&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;aws-sdk/clients/dynamodb&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;dynamoDb&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;DocumentClient&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;hoursInTheFuture&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;timeInSeconds&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;hours&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getHours&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;hoursInTheFuture&lt;/span&gt;

  &lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setHours&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;hours&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getTime&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;deleteInTheFuture&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;dynamoDb&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;update&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;TableName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;myDynamoDbTable&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;Key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;id&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;UpdateExpression&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;SET ttl = :t&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;ExpressionAttributeValues&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;:t&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;timeInSeconds&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;//record will be deleted momentarily from now&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="nx"&gt;promise&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>aws</category>
      <category>gotchas</category>
      <category>timestanps</category>
    </item>
    <item>
      <title>Essential Guide to Linux Servers: Introduction</title>
      <author>DS: Simple, Not Easy</author>
      <pubDate>Wed, 17 Nov 2021 14:29:56 +0000</pubDate>
      <link>https://dev.to/devsimplicity/essential-guide-to-linux-servers-introduction-1f3f</link>
      <guid>https://dev.to/devsimplicity/essential-guide-to-linux-servers-introduction-1f3f</guid>
      <description>&lt;h2 id="introduction"&gt;Introduction&lt;/h2&gt;

&lt;p&gt;A bit of background: I've been using Linux both on my desktops and servers since the early 2000s. I'll try to distill what I learned over those years into a simple and easy-to-follow guide, in a way that I would approach things if I had to start from scratch.&lt;/p&gt;

&lt;p&gt;I'll try to make things friendly towards new users - you should be able to follow the guide even if you have very little (or even no) experience with Linux. &lt;/p&gt;

&lt;p&gt;We're going to start by going through the process of setting up a Linux VPS and then build upon that.&lt;/p&gt;




&lt;p&gt;So, why even bother instead of going "serverless"?&lt;/p&gt;

&lt;p&gt;Well, first, there's no such thing as serverless, there are only servers controlled by you and servers controlled by someone else. In the long term, trading-off that control tends to come at a huge price.&lt;/p&gt;

&lt;p&gt;By learning to run things yourself, even if you do end up going "serverless" on some projects, you'll have a much better and deeper understanding of those trade-offs, limitations, pitfalls, and lock-ins.&lt;/p&gt;

&lt;p&gt;Easy scaling promises, for the most part, are just that - promises. Even if they weren't, it's extremely unlikely that you'll really need them. A lot of people would be very surprised how much you can get from a single Linux box.&lt;/p&gt;

&lt;p&gt;Considering what you get in return, running your own VPS is really cheap (you can get a nice KVM-based VPS for a few bucks a month). &lt;/p&gt;

&lt;p&gt;But having full freedom and control over your server is priceless. With serverless options, you'll always be severely limited in what you can do and what you can depend upon (and even that limited set of dependencies is subject to change at any time).&lt;/p&gt;




&lt;p&gt;In the next post, we're going to make a few important decisions about our new server.&lt;/p&gt;

&lt;p&gt;&lt;small&gt;Note: This is part #1 of the Essential Guide to Linux Servers in-progress series. You can follow me here or on &lt;a href="https://twitter.com/devsimplicity"&gt;Twitter&lt;/a&gt; for updates.&lt;/small&gt;&lt;/p&gt;

</description>
      <category>tutorial</category>
      <category>linux</category>
      <category>devops</category>
      <category>productivity</category>
    </item>
  </channel>
</rss>
