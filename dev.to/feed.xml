<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>AWS open source news and updates 84</title>
      <author>Ricardo Sueiras</author>
      <pubDate>Mon, 04 Oct 2021 06:45:46 +0000</pubDate>
      <link>https://dev.to/aws/aws-open-source-news-and-updates-84-4c4e</link>
      <guid>https://dev.to/aws/aws-open-source-news-and-updates-84-4c4e</guid>
      <description>&lt;h2&gt;
  &lt;a href="#october-4th-2021-instalment-84"&gt;
  &lt;/a&gt;
  October 4th, 2021 - Instalment #84
&lt;/h2&gt;

&lt;p&gt;Newsletter #84.&lt;/p&gt;

&lt;p&gt;Welcome to issue #84 of this newsletter, and we have more great new open source projects for you this week. We have a couple of great security/compliance/governance tools that will help you with security in &lt;strong&gt;cloudgraphdev&lt;/strong&gt; and (the amazingly named) &lt;strong&gt;wonk&lt;/strong&gt;, &lt;strong&gt;placebo&lt;/strong&gt;, a tool to help you mock tests, a new cli from AWS to help you simplify those of you working with genomics workloads, and more. &lt;/p&gt;

&lt;p&gt;With the GA last week of OpenTelemetry and Prometheus managed services on AWS, we have a plethora of posts covering a number of different topics as well as Apache Tinkerpop, Bottlerocket, Apache Kafka, OpenSearch and Terraform. make sure you check out the events section too, and as always, if you use, or are creating/ working on an open source project you would like me to include in this newsletter, then please get in touch.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#celebrating-open-source-contributors"&gt;
  &lt;/a&gt;
  Celebrating open source contributors
&lt;/h3&gt;

&lt;p&gt;The articles posted in this series are only possible thanks to contributors and project maintainers and so I would like to shout out and thank those folks who really do power open source and enable us all to build on top of what they have created. &lt;/p&gt;

&lt;p&gt;So thank you to the following open source heroes: Danilo Poccia, Mitch Garnaat, jaitl, AutoCloud, Amino Inc, Kyle Davis, Jegan Sundarapandian, Chloe Goldstein, Imaya Kumar Jagannathan, Marc Chene, Vikram Venkataraman, Arun Chandapillai, Abhi Khanna, Mike George, Abhi Khanna, Channy Yun, Jeremy Cowan, Sai Charan Teja Gopaluni, and Vijay K Sikha, Alolita Sharma, Nizar Tyrewalla, Brad Bebee, Kelvin Lawrence, Stephen Mallette, Huy Vo, Iris Song, Michael Hausenblas and Garry Stafford.&lt;/p&gt;

&lt;p&gt;Make sure you find and follow these builders and keep up to date with their open source projects and contributions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#latest-open-source-projects"&gt;
  &lt;/a&gt;
  Latest open source projects
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;amazon-genomics-cli&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/yk"&gt;amazon-genomics-cli&lt;/a&gt; this open source project is a tool to simplify the processes of deploying the AWS infrastructure required to run genomics workflows in the cloud, to submit those workflows to run, and to monitor the logs and outputs of those workflows. You can find out more and get hands on by reading and working through Danilo Poccia's blog post, &lt;a href="https://aws-oss.beachgeek.co.uk/yq"&gt;New – Amazon Genomics CLI Is Now Open Source and Generally Available&lt;/a&gt;. You can also check out &lt;a href="https://www.youtube.com/watch?v=mMeBeFbFzq0"&gt;this YT session&lt;/a&gt; that provides some additional background before showing you this in action.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;cloudgraphdev&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/yp"&gt;cloudgraphdev&lt;/a&gt; another interesting tool to help you manage security on AWS, CloudGraph is an open-source search engine for your public cloud infrastructure, powered by DGraph and GraphQL. You can quickly query assets, configurations, and more across accounts and providers. CloudGraph also enables you to solve a host of security, compliance, governance, and FinOps challenges in the time it takes to write a single GraphQL query. Very nice project from the folks at AutoCloud&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hsc04t2u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/cloudgraphdev/cli/master/docs/images/init.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hsc04t2u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/cloudgraphdev/cli/master/docs/images/init.png" alt="demo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;wonk&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/yl"&gt;wonk&lt;/a&gt; this project from Amino Inc is a tool for combining a set of AWS policy files into smaller compiled policy sets. Good documentation covering the typical use cases and why you might find this useful. Definitely a tool for your armoury as you look to put security first.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;placebo&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/yn"&gt;placebo&lt;/a&gt; Mitch Garnaat has put together this open source tool Placebo, that allows you to mock boto3 calls that look just like normal calls but actually have no effect at all. It does this by allowing you to record a set of calls and save them to a data file and then replay those calls later (e.g. in a unit test) without ever hitting the AWS endpoints. Provide examples on how to get up and running&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;kDynamoMapper&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/yo"&gt;kDynamoMapper&lt;/a&gt; if you are a Kotlin developer, this project from jaitl will be of interest. It provides a lightweight AWS DynamoDB mapper for Kotlin written in pure Kotlin. Check out the full README.md for more details.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#aws-and-community-blog-posts"&gt;
  &lt;/a&gt;
  AWS and Community blog posts
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Apache Kafka&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When it comes to the topic of Data Analytics, you can always count on Gary Stafford to come up with the goods, and last week he published another great post, &lt;a href="https://aws-oss.beachgeek.co.uk/z1"&gt;Stream Processing with Apache Spark, Kafka, Avro, and Apicurio Registry on Amazon EMR and Amazon MSK&lt;/a&gt;. This is the second part of previous post I shared a few weeks ago, and in this post he shows you how you can read and write messages to and from Amazon MSK in Apache Avro format. The post also shows how you can store the Avro-format Kafka message’s key and value schemas in Apicurio Registry and retrieve the schemas instead of hard-coding the schemas in the PySpark scripts. [hands on]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RS0m3T12--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/4800/1%2AXGnUIP5Xj3w1ODheHBEl-A.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RS0m3T12--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/4800/1%2AXGnUIP5Xj3w1ODheHBEl-A.png" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bottlerocket&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Bottlerocket is an open source Linux-based operating system from Amazon that was purpose built for running containers with a strong emphasis on security. The result is an operating system that comes with a variety of built-in controls for creating a secure environment for running containerised workloads. If you want to dive deep and find out more, then Jeremy Cowan, Sai Charan Teja Gopaluni, and Vijay K Sikha have collaborated together on this post, &lt;a href="https://aws-oss.beachgeek.co.uk/yx"&gt;Security features of Bottlerocket, an open source Linux-based operating system&lt;/a&gt; where they explore several of the security features available in Bottlerocket and how they protect your environment. [deep dive]&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Apache TinkerPop&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Apache TinkerPop is an open source computing framework for graph databases and graph analytic systems. Designed to appeal to software developers, TinkerPop lets developers add graph computing capabilities to their applications without worrying about developing APIs, graph processing engines, or graph algorithms. In this post, &lt;a href="https://aws-oss.beachgeek.co.uk/z0"&gt;Why developers like Apache TinkerPop, an open source framework for graph computing&lt;/a&gt; Brad Bebee, Kelvin Lawrence, and Stephen Mallette provide an introduction to the Apache TinkerPop open source project and explain how it helps developers create and explore directed property graphs.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--clsnl97u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/09/21/lakelvin_tinkerpop_f3_sm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--clsnl97u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/09/21/lakelvin_tinkerpop_f3_sm.png" alt="graph"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Prometheus&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Last week AWS announced the general availability (GA) of Amazon Managed Service for Prometheus, a fully managed Prometheus-compatible service. To celebreate, we saw a number of posts covering this open source project.&lt;/p&gt;

&lt;p&gt;First up we had &lt;a href="https://aws-oss.beachgeek.co.uk/ys"&gt;Amazon Managed Service for Prometheus is now Generally Available&lt;/a&gt; Imaya Kumar Jagannathan, Marc Chene, and Vikram Venkataraman walk you through everything new since the announcement at re:Invent and walk you through how to get started. [hands on] My colleague Channy Yun also wrote about this launch in &lt;a href="https://aws-oss.beachgeek.co.uk/yv"&gt;Amazon Managed Service for Prometheus Is Now Generally Available with Alert Manager and Ruler&lt;/a&gt; and covers how we contributed the high-availability alert manager to the open source Cortex project, a project providing horizontally scalable, highly available, multi-tenant, long-term store for Prometheus.&lt;/p&gt;

&lt;p&gt;If you like to receive alerts in Slack, then the next post, &lt;a href="https://aws-oss.beachgeek.co.uk/yt"&gt;How to integrate Amazon Managed Service for Prometheus with Slack&lt;/a&gt; is perfect for you. Arun Chandapillai and Abhi Khanna walk you through a solution on how to set up the Alert manager in Amazon Managed Service for Prometheus to publish alerts to a Slack channel via Amazon Simple Notification Service (SNS) and AWS Lambda. [hands on]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UDWAkk3J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/972a67c48192728a34979d9a35164c1295401b71/2021/09/30/11-2.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UDWAkk3J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/972a67c48192728a34979d9a35164c1295401b71/2021/09/30/11-2.jpg" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you prefer to receive your alerts in PagerDuty, that is cool too and Mike George and Abhi Khanna have you covered in the post, &lt;a href="https://aws-oss.beachgeek.co.uk/yu"&gt;Using Amazon Managed Service for Prometheus Alert Manager to receive alerts with PagerDuty&lt;/a&gt; [hands on]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tQJ_Ykte--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/972a67c48192728a34979d9a35164c1295401b71/2021/09/27/Figure1-1-1024x520.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tQJ_Ykte--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/972a67c48192728a34979d9a35164c1295401b71/2021/09/27/Figure1-1-1024x520.png" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The last post is &lt;a href="https://aws-oss.beachgeek.co.uk/yw"&gt;Using Prometheus Adapter to autoscale applications running on Amazon EKS&lt;/a&gt; from Vikram Venkataraman and it is a good one. He walks you through how to utilise Prometheus Adapter to autoscale Amazon EKS Pods running an Amazon App Mesh workload. AWS App Mesh is a service mesh that makes it easy to monitor and control services. [hands on]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GAjpP9oN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/972a67c48192728a34979d9a35164c1295401b71/2021/09/28/custom-metric-blog.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GAjpP9oN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/972a67c48192728a34979d9a35164c1295401b71/2021/09/28/custom-metric-blog.png" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Open Telemetry&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Last week saw the announcement from Alolita Sharma and Nizar Tyrewalla thatAWS Distro for OpenTelemetry (ADOT) is now generally available with production-ready tracing support, in the post &lt;a href="https://aws-oss.beachgeek.co.uk/yy"&gt;AWS Distro for OpenTelemetry is now GA for tracing&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Following that we had AWS interns, software engineers Huy Vo and Iris Song, share their experience with adding StatefulSet support in the OpenTelemetry Operator in the post &lt;a href="https://aws-oss.beachgeek.co.uk/yz"&gt;Adding StatefulSet support in the OpenTelemetry Operator&lt;/a&gt;. They talk about how they added StatefulSet support to the OpenTelemetry Operator, and describe our design choices and lessons learned.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XEakkBWo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/09/02/vo-song_stateful-support-opentelemetry-operator_f3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XEakkBWo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/09/02/vo-song_stateful-support-opentelemetry-operator_f3.png" alt="design"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;One final thing to share, is the always excellent, weekly roundup of Observability news from Michael Hausenblas. &lt;a href="https://aws-oss.beachgeek.co.uk/yi"&gt;This was last weeks newsletter&lt;/a&gt;, and I urge you to sign up as they always contain excellent material. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;OpenSearch&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A few weeks back I shared news about new clients for OpenSearch. Kyle Davis has now put together a nice blog post, &lt;a href="https://aws-oss.beachgeek.co.uk/ym"&gt;OpenSearch clients in Python, Go, and Node.js&lt;/a&gt; which shows you how to get up and running with these. [hands on]&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Terraform&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you use Terraform as your preferred infrastructure as code (IaC) tool, then check out this post, &lt;a href="https://aws-oss.beachgeek.co.uk/yr"&gt;How to Deploy AWS Config Conformance Packs Using Terraform&lt;/a&gt; from Jegan Sundarapandian and Chloe Goldstein. They walk you through creating a Terraform template file that you can use to deploy and configure an AWS service (AWS Config) to help you with checking for conformance/compliance against Amazon S3 bucket best practices. [hands on]&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#quick-updates"&gt;
  &lt;/a&gt;
  Quick updates
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Apache Kafka&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Amazon Managed Streaming for Apache Kafka (Amazon MSK) now supports Apache Kafka version 2.8.1 for new and existing clusters. &lt;a href="https://aws-oss.beachgeek.co.uk/yj"&gt;Apache Kafka 2.8.1 includes several bug fixes&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#events-for-your-diary"&gt;
  &lt;/a&gt;
  Events for your diary
&lt;/h3&gt;

&lt;p&gt;Coming up later this week we have...&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;GraphQL API security best practices with AWS AppSync and AWS Amplify&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;14th October, 11am AEST&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As a developer, the most important parts of managing your applications should always include enhancing performance while strengthening security. In this webinar, we take you through security best practices for your GraphQL API’s with AWS AppSync and AWS Amplify, providing you with an understanding of how these can be applied to your applications. In this session, you will learn about:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;GraphQL Protocol and how to configure a schema&lt;/li&gt;
&lt;li&gt;Possible ways to authenticate and authorise access to GraphQL APIs&lt;/li&gt;
&lt;li&gt;How to configure network security for your API&lt;/li&gt;
&lt;li&gt;How to enable observability for your API with logging, tracing or auditing&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To &lt;a href="https://aws-oss.beachgeek.co.uk/ue"&gt;register for this event, use this link&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Amazon SageMaker and Open-Source Tools for ML: Better Together&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;October 7 | 11 AM PT | 2 PM ET&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Many organisations rely on open-source tools to support the Machine Learning lifecycle. Amazon SageMaker has been rapidly evolving by introducing support and compatibility for various open-source frameworks. In this session, you will learn how to build a customisable ML Infrastructure based on Amazon SageMaker and open-source components. We will discuss pros and cons, the limitations of different tools that support specific stages of the ML workflow, and best practices for MLOps, to automate these stages into repeatable pipelines.&lt;/p&gt;

&lt;p&gt;To read more and &lt;a href="https://aws-oss.beachgeek.co.uk/wz"&gt;register for this event, click here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Flink Forwards Global 2021&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;October 26th/27th&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Flink Forward Global 2021 is a 2-day virtual conference for the Apache Flink and stream processing communities. Apache Flink is an open-source distributed engine for processing data streams that can support both streaming and batch workloads. Flink Forward has keynote presentations and talks on production Flink use cases, technical deep dive sessions, and the growth of the Flink ecosystem. You can meet core Flink committers, new and experienced users, and thought leaders who share experiences and best practices in stream processing, real-time analytics, and the management of mission-critical Flink deployments in production.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/wh"&gt;Read more and sign up here.&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#stay-in-touch-with-open-source-at-aws"&gt;
  &lt;/a&gt;
  Stay in touch with open source at AWS
&lt;/h3&gt;

&lt;p&gt;I hope this summary has been useful. Remember to check out the &lt;a href="https://aws.amazon.com/opensource/?opensource-all.sort-by=item.additionalFields.startDate&amp;amp;opensource-all.sort-order=asc"&gt;Open Source homepage&lt;/a&gt; to keep up to date with all our activity in open source by following us on &lt;a href="https://twitter.com/AWSOpen"&gt;@AWSOpen&lt;/a&gt;&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>aws</category>
    </item>
    <item>
      <title>RxJS - Custom Operators</title>
      <author>Luca Del Puppo</author>
      <pubDate>Mon, 04 Oct 2021 06:14:29 +0000</pubDate>
      <link>https://dev.to/this-is-learning/rxjs-custom-operators-5gah</link>
      <guid>https://dev.to/this-is-learning/rxjs-custom-operators-5gah</guid>
      <description>&lt;p&gt;Hi Folks 👋&lt;br&gt;
after many articles in which I have illustrated the different types of operators already included in the RxJS library, today I show you how to create your own operators.&lt;br&gt;
You can create a new operator in two ways: mixing the different operators illustrated in the previous articles or from scratch.&lt;br&gt;
In common cases, when we need to create a new operator, all the behaviours that we need already exist in the operators exposed by the RxJS library. In these cases, we can use the "pipe" function to combine together the operators. With the "pipe" function you can create a new function that will be the new operator, and inside this function you can create the logic of your operator.&lt;br&gt;
Here's an example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;interval&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Observable&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;pipe&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;take&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;tap&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;UnaryFunction&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;rxjs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;takeLogAndDelay&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;takeNumber&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nx"&gt;UnaryFunction&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Observable&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Observable&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;pipe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nx"&gt;tap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;
    &lt;span class="nx"&gt;take&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;takeNumber&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="nx"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;interval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;pipe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nx"&gt;takeLogAndDelay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Source&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;subscribe&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="go"&gt;Source 0
Source 1
Source 2
Source 3
Source 4
Source 5
Source 6
Source 7
Source 8
Source 9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see, in the last example I created a new operator called "takeLogAndDelay". This operator combines together three operators: tap, take and delay.&lt;br&gt;
As you can see, it's easy to create a new operator of this type and you just need to flow these rules:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;create a new function with the name of the new operator&lt;/li&gt;
&lt;li&gt;return the pipe function&lt;/li&gt;
&lt;li&gt;combine the operators in the pipe function&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In 95% of your cases, you can resolve your problem and create a new operator using this method, while in the 5% of the cases not managed by this method you can create a new operator from scratch.&lt;br&gt;
Below an example of the delay operator created from scratch.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Observable&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;rxjs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;tap&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;rxjs/operators&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;delay&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;delayInMs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;observable&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Observable&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Observable&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;subscriber&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;allTimerIDs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Set&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;NodeJS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Timeout&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;hasCompleted&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;subscription&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;observable&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;subscribe&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;timerID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;subscriber&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nx"&gt;allTimerIDs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;timerID&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;hasCompleted&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;allTimerIDs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;size&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="nx"&gt;subscriber&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;complete&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="nx"&gt;delayInMs&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

          &lt;span class="nx"&gt;allTimerIDs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;timerID&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="na"&gt;error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;subscriber&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;complete&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;hasCompleted&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
          &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;allTimerIDs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;size&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;subscriber&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;complete&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;

      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;subscription&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;unsubscribe&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="nx"&gt;allTimerIDs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;timerID&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;clearTimeout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;timerID&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
      &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;of&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;pipe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nx"&gt;tap&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;toLocaleTimeString&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;before&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;
    &lt;span class="nx"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;subscribe&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;next&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;toLocaleTimeString&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;after&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="go"&gt;22:11:01 before 1
22:11:01 before 2
22:11:01 before 3
22:11:04 after 1
22:11:04 after 2
22:11:04 after 3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see, we can create a new operator and manage all the behaviours needed for our logic using the Observable constructor. It's rare to use this approach but if you find yourself in front of a case not yet solved by the existing operators, you can rely on it.&lt;/p&gt;

&lt;p&gt;Ok guys, that's all for today.&lt;/p&gt;

&lt;p&gt;See you soon&lt;br&gt;
Bye bye 👋 &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>typescript</category>
      <category>rxjs</category>
    </item>
    <item>
      <title>API Testing - Database State Validation in vREST NG</title>
      <author>Dheeraj Aggarwal</author>
      <pubDate>Mon, 04 Oct 2021 05:50:27 +0000</pubDate>
      <link>https://dev.to/dheerajaggarwal/api-testing-database-state-validation-in-vrest-ng-gj5</link>
      <guid>https://dev.to/dheerajaggarwal/api-testing-database-state-validation-in-vrest-ng-gj5</guid>
      <description>&lt;p&gt;Watch our video #tutorial on how you may validate the database state during the execution of API Test cases in the #vREST NG Application.&lt;/p&gt;

&lt;p&gt;Video Link: &lt;a href="https://youtu.be/dVdc8e0keiE"&gt;https://youtu.be/dVdc8e0keiE&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Playlist: &lt;a href="https://youtube.com/playlist?list=PLmua155_WrDzt1AbB6iV5Lsw_Z7QrzZZ0"&gt;https://youtube.com/playlist?list=PLmua155_WrDzt1AbB6iV5Lsw_Z7QrzZZ0&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;vREST NG is an enterprise-ready application for Automated API Testing. You can download and install the vREST NG application directly on Windows, OSX, and Linux via our website.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Important Links:&lt;/em&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://vrest.io/?utm_source=devto&amp;amp;utm_medium=devto-desc&amp;amp;utm_campaign=video"&gt;vREST NG Website&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="//support@vrest.io"&gt;Contact Email&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://discord.gg/NtRa7kw"&gt;Community Chat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://meetings.hubspot.com/dheeraj-aggarwal"&gt;Book a Live Demo&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Please do like and share if you found this video helpful and let the voice heard by the testing community. Also, let us know your feedback by commenting on this post.&lt;/p&gt;

</description>
      <category>testing</category>
      <category>vrestng</category>
      <category>apitesting</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Web 3.0: Fusion of semantic web and Web 2.0</title>
      <author>pramit_marattha</author>
      <pubDate>Mon, 04 Oct 2021 05:48:44 +0000</pubDate>
      <link>https://dev.to/aviyel/web-3-0-fusion-of-semantic-web-and-web-2-0-26ai</link>
      <guid>https://dev.to/aviyel/web-3-0-fusion-of-semantic-web-and-web-2-0-26ai</guid>
      <description>&lt;p&gt;World Wide Web has greatly facilitated access to digitally stored data. Content on the World Wide Web, on the other hand, has only been machine-readable, not fully machine-understandable. Because most information on the World Wide Web is given in natural language, the available documents can only be comprehended entirely by humans. The Semantic Web is built on the content-oriented description of digital documents using defined vocabularies to give machine-readable semantics. As a result, the Web of Links is transformed into a Web of Semantic Web. The classic Web 1.0 experienced an angular shift into Web 2.0, concentrating on categorization, intellectual capacity, and collective wisdom. Only the combined strength of semantic web technologies and widespread user participation will be leading to Web 3.0.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h73NQlns--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oifyhemog4nsrxnkdkq2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h73NQlns--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oifyhemog4nsrxnkdkq2.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The evolving semantic web cannot be grown and broadened to the degree required for a complete transformation of the current web without Web 2.0 technologies. On the other hand, without the addition of machine-understandable content descriptions based on semantic web technologies, current Web 2.0 technologies cannot be leveraged for automatic service composition as well. The ultimate global knowledge infrastructure cannot be fully automated; instead, it requires collective and widespread human participation based on open semantic platforms as well as standards.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NRGkXyux--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lt3mccsmrfgn7f9aic2u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NRGkXyux--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lt3mccsmrfgn7f9aic2u.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#beginning-of-the-web-20-era"&gt;
  &lt;/a&gt;
  Beginning of the Web 2.0 era.
&lt;/h2&gt;

&lt;p&gt;Web 2.0 denotes a fundamental change in the advancement of the internet: Web 1.0, also known as the Web of business and Companies, has given way to Web 2.0, known as the Web of individuals and People. This shift has not resulted in the introduction of new technologies, but it has significantly altered the user's role and value. Tim O'Reilly and Dale Dougherty of O'Reilly Media coined the term Web 2.0 to describe new emerging web applications and trends. Web 2.0, according to O'Reilly, is comprised of the following concepts:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Web as a platform&lt;/em&gt;: The web and all of its connected devices are regarded as a single global platform of reusable services and data on which to build using open standards.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Nd2BRWPg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/na51r6sc7q5yfl80rzyo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Nd2BRWPg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/na51r6sc7q5yfl80rzyo.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Collective wisdom&lt;/em&gt;: A Tradition of Involvement emerges from the establishment of open systems that support and enable collaborative content production based on the notion of "having faith rather than having control". The observation is that a large number of users provides a great amount of knowledge, but that same large number of users also prevents misuse of services and removes incorrect content. Wikipedia is an excellent example of harnessing people's collective intelligence. It is a free Internet-based encyclopedia that was founded in 2001 and operates under an open-source management model. Wikipedia's open-source production model exemplifies Web 2.0, a socially progressive environment in which the web of social software entangles users in both their physical and virtual workplaces. The Wikipedia community is founded on a set of standard principles. Neutrality is an important principle. Another factor is the belief that contributors are acting in a sincere and deliberate manner. Readers can correct perceived errors, and disagreements over facts and possible bias are resolved through contributor discussions.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0VXJmdYl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t5knbiri2wihoncqpkmn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0VXJmdYl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t5knbiri2wihoncqpkmn.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Open source and service operations&lt;/em&gt;: In the Web 2.0 era, the software is delivered as a service rather than a product. The core competency of the companies involved in the daily operation of their services, not the algorithms used. The dynamic nature of the services necessitates continual, cost-effective transformation through the use of an open source development style. Many of the services have been in the “continual beta” phase for many years, with new features being introduced on a regular basis. Successful Web 2.0 businesses/companies are experts and experienced at tracking user activity in real-time to determine which new features are being currently used, how they are being used, and how they should be adjusted and adapted accordingly.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vQvTNfvR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aeqrwn7g1tc50l8z8lzj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vQvTNfvR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aeqrwn7g1tc50l8z8lzj.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fully data-driven: Databases are at the core of Web 2.0 processes, where the data itself is far more essential than the application or interface that utilizes it. The race to own certain classes of core data, such as location, identity, product identifying information, and namespaces, is on in the market. Moreover, a critical mass of data can be attained through user aggregation, and the gathered information is then turned into a system service.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8n_NrDfX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p0jqf5xmn8ghi0govh9m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8n_NrDfX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p0jqf5xmn8ghi0govh9m.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Beyond Personal Computers: Web 2.0 systems are distinguished by the fact that they are no longer restricted to the Desktop / PC platform. This is not new in terms of web applications, but Web 2.0 apps provide a more complete achievement of the web's full potential as a platform, embracing not only the world of interconnected PCs but also mobile phones and various portable / wearables gadgets as well as devices.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--K0buXvQ_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3rl5ewcvgzxsrt5dmrer.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K0buXvQ_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3rl5ewcvgzxsrt5dmrer.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aviyel.com/post/1018/web-3-0-fusion-of-semantic-web-and-web-2-0"&gt;Click Here for full article&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Follow &lt;a href="https://twitter.com/AviyelHq"&gt;@aviyelHQ&lt;/a&gt; or &lt;a href="https://aviyel.com/discussions"&gt;sign-up&lt;/a&gt; on Aviyel for early access if you are a project maintainer, contributor, or just an Open Source enthusiast.&lt;/p&gt;

&lt;p&gt;Twitter =&amp;gt;&lt;a href="https://twitter.com/AviyelHq"&gt;https://twitter.com/AviyelHq&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Official Site =&amp;gt; &lt;a href="https://aviyel.com/discussions"&gt;https://aviyel.com&lt;/a&gt;&lt;/p&gt;

</description>
      <category>web3</category>
      <category>semanticweb</category>
      <category>security</category>
      <category>opensource</category>
    </item>
    <item>
      <title>The Swallow programming language - A Python-like language that's as fast as C.</title>
      <author>Ethan Olchik</author>
      <pubDate>Mon, 04 Oct 2021 05:45:39 +0000</pubDate>
      <link>https://dev.to/ethanolchik/the-swallow-programming-language-a-python-like-language-that-s-as-fast-as-c-43j7</link>
      <guid>https://dev.to/ethanolchik/the-swallow-programming-language-a-python-like-language-that-s-as-fast-as-c-43j7</guid>
      <description>&lt;p&gt;Hey guys!&lt;/p&gt;

&lt;p&gt;I'm Ethan, I'm one of 8 swallow developers. This post is gonna be about some updates we've added into swallow lately.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#about"&gt;
  &lt;/a&gt;
  About
&lt;/h2&gt;

&lt;p&gt;If you know Python, you know how easy it is. However, it also comes with a big downgrade. Python is slow, and I'm pretty sure every python developer knows this by now. This is kind of annoying. That's where Swallow comes in. Me and 8 other friends have been working on Swallow for the past few months. Swallows syntax is very similar to Python's, and it gets trans-compiled to C, thus making it as fast as C. Below I've written 2 programs, one in Swallow and one in Python.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#swallow"&gt;
  &lt;/a&gt;
  Swallow
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;fib&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;fib&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;fib&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="c1"&gt;# Swallow has type inference!
&lt;/span&gt;    &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;

    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fib&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;function return types can be omitted.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#python"&gt;
  &lt;/a&gt;
  Python
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;fib&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;fib&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;fib&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fib&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;These two programs are almost the same, which makes it so easy for Python users to switch to. Now, you might be asking: "How much faster is Swallow?" Well, to answer your question, here are the results:&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#swallow"&gt;
  &lt;/a&gt;
  Swallow:
&lt;/h4&gt;

&lt;p&gt;Executed in: 1.06 secs&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#python"&gt;
  &lt;/a&gt;
  Python:
&lt;/h4&gt;

&lt;p&gt;Executed in: 32.30 secs&lt;/p&gt;

&lt;p&gt;As you can see, Swallow is significantly faster than Python. It is around 30x faster than python when running this program.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-new"&gt;
  &lt;/a&gt;
  What's new?
&lt;/h2&gt;

&lt;p&gt;Here are some of Swallow's newest features:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#type-inference"&gt;
  &lt;/a&gt;
  Type Inference
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Type_inference"&gt;Type Inference&lt;/a&gt; is one of Swallow's newest features. This allows Swallow code to be written with simplicity.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ifelsematch"&gt;
  &lt;/a&gt;
  if/else/match
&lt;/h3&gt;

&lt;p&gt;Although this may seem like a standard feature in any programming language, it does take time to add these features which is why I'm acknowledging it. Not much to say about it since it's in every programming language.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#newish-features"&gt;
  &lt;/a&gt;
  New-ish Features
&lt;/h2&gt;

&lt;p&gt;Let's talk more about the features that are currently available in Swallow.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ccode"&gt;
  &lt;/a&gt;
  Ccode
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;Ccode&lt;/code&gt; allows C code to be ran in Swallow. Here is an example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="n"&gt;Ccode&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;Ccode&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"{x}&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# prints 2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see, any variables declared outside the &lt;code&gt;Ccode&lt;/code&gt; block can be used within &lt;code&gt;Ccode&lt;/code&gt; and vice versa. This also means you can import any C library through &lt;code&gt;Ccode&lt;/code&gt; and use it in Swallow.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#inline-assembly"&gt;
  &lt;/a&gt;
  Inline Assembly
&lt;/h3&gt;

&lt;p&gt;You can also have inline assembly in Swallow. Here is an example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;arg1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;45&lt;/span&gt;
    &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;arg2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;
    &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;add&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"It should add 45 and 50 using asm and print it&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;asm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"addl %%ebx, %%eax;"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"=a"&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"a"&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arg1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"b"&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arg2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%lld"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This prints &lt;code&gt;90&lt;/code&gt;, as expected.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#more"&gt;
  &lt;/a&gt;
  More
&lt;/h3&gt;

&lt;p&gt;You can find some more examples in the &lt;a href="https://github.com/Swallow-lang/swallow/tree/main/swallow/tests"&gt;Swallow test folder&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#planned-features"&gt;
  &lt;/a&gt;
  Planned Features
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Structs&lt;/li&gt;
&lt;li&gt;More decorators for different purposes&lt;/li&gt;
&lt;li&gt;Python ecosystem in Swallow

&lt;ul&gt;
&lt;li&gt;You will be able to use any python module in Swallow&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Swallow is planned to release version 0.0.1 sometime in March, so make so to show some support by starring the &lt;a href="https://github.com/swallow-lang/swallow"&gt;repo&lt;/a&gt; and make sure to press on the "Watch" button so you don't miss any updates.&lt;/p&gt;

&lt;p&gt;We would greatly appreciate any contributions, so if you find something that you can improve, open a pull-request! You can also check out our &lt;a href="https://github.com/swallow-lang/swallow/issues"&gt;open issues&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks so much for reading!&lt;/p&gt;

</description>
      <category>showdev</category>
      <category>python</category>
      <category>programming</category>
      <category>c</category>
    </item>
    <item>
      <title>Best practices for AWS Athena</title>
      <author>Christopher Thompson H.</author>
      <pubDate>Mon, 04 Oct 2021 05:44:01 +0000</pubDate>
      <link>https://dev.to/aws-builders/best-practices-for-aws-athena-12gb</link>
      <guid>https://dev.to/aws-builders/best-practices-for-aws-athena-12gb</guid>
      <description>&lt;p&gt;In this blog I will mention some of the best practices recommended by AWS for building queries in Athena based on my experience and the following resources:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; &lt;a href="https://aws.amazon.com/blogs/big-data/top-10-performance-tuning-tips-for-amazon-athena/"&gt;https://aws.amazon.com/blogs/big-data/top-10-performance-tuning-tips-for-amazon-athena/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cwiki.apache.org/confluence/display/Hive/LanguageManual+Joins"&gt;https://cwiki.apache.org/confluence/display/Hive/LanguageManual+Joins&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#general-recommendations"&gt;
  &lt;/a&gt;
  General Recommendations
&lt;/h1&gt;




&lt;h2&gt;
  &lt;a href="#always-use-where-on-partition-field"&gt;
  &lt;/a&gt;
  Always use WHERE on partition field
&lt;/h2&gt;

&lt;p&gt;This mainly in order to speed up time and cost.&lt;br&gt;
For example:&lt;br&gt;
Avoid:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;select&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;table1&lt;/span&gt; &lt;span class="k"&gt;where&lt;/span&gt; &lt;span class="k"&gt;cast&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;col_1&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nb"&gt;integer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;cast&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'201912'&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nb"&gt;integer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and prefer:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;select&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;table1&lt;/span&gt; &lt;span class="k"&gt;where&lt;/span&gt; &lt;span class="n"&gt;col_particion&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'201911'&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;speedup&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="mi"&gt;85&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;savings&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="mi"&gt;95&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#avoid-using-order-by-without-limit"&gt;
  &lt;/a&gt;
  Avoid using ORDER BY without LIMIT
&lt;/h2&gt;

&lt;p&gt;It is extremely important to understand that the ORDER BY function must be done in a single node, since it is a slow and time-consuming function. Ideally it should be avoided, however, if within the use case you are implementing you must use it, I always recommend placing a LIMIT.&lt;br&gt;
For example:&lt;br&gt;
Avoid:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;select&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;table1&lt;/span&gt; &lt;span class="k"&gt;order&lt;/span&gt; &lt;span class="k"&gt;by&lt;/span&gt; &lt;span class="nb"&gt;date&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and prefer:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;select&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;table1&lt;/span&gt; &lt;span class="k"&gt;order&lt;/span&gt; &lt;span class="k"&gt;by&lt;/span&gt; &lt;span class="nb"&gt;date&lt;/span&gt; &lt;span class="k"&gt;limit&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;speedup&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="mi"&gt;98&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;avoid&lt;/span&gt; &lt;span class="s1"&gt;'Query exhausted resources at this scale factor'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#select-only-the-columns-to-retrieve-the-final-result"&gt;
  &lt;/a&gt;
  Select only the columns to retrieve the final result
&lt;/h2&gt;

&lt;p&gt;This recommendation is very simple. In practical effect it is to avoid the SELECT * FROM.&lt;br&gt;
For example:&lt;br&gt;
Avoid:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;create&lt;/span&gt; &lt;span class="k"&gt;table&lt;/span&gt; &lt;span class="n"&gt;tmp_table&lt;/span&gt;
&lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="k"&gt;select&lt;/span&gt;
&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;col_1&lt;/span&gt;
&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;col_2&lt;/span&gt;
&lt;span class="n"&gt;B&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;col_3&lt;/span&gt;
&lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="k"&gt;select&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;table_1&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;
&lt;span class="k"&gt;left&lt;/span&gt; &lt;span class="k"&gt;join&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;select&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;table_2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;B&lt;/span&gt; &lt;span class="k"&gt;on&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;col_1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;B&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;col_1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Instead use:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;create&lt;/span&gt; &lt;span class="k"&gt;table&lt;/span&gt; &lt;span class="n"&gt;tmp_table&lt;/span&gt;
&lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="k"&gt;select&lt;/span&gt;
&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;col_1&lt;/span&gt;
&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;col_2&lt;/span&gt;
&lt;span class="n"&gt;B&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;col_3&lt;/span&gt;
&lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="k"&gt;select&lt;/span&gt; &lt;span class="n"&gt;col_1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;col_2&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;table_1&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;
&lt;span class="k"&gt;left&lt;/span&gt; &lt;span class="k"&gt;join&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;select&lt;/span&gt; &lt;span class="n"&gt;col_1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;col_3&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;table_2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;B&lt;/span&gt; &lt;span class="k"&gt;on&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;col_1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;B&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;col_1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#schedule-data-aggregation-for-small-files"&gt;
  &lt;/a&gt;
  Schedule data aggregation for small files
&lt;/h2&gt;

&lt;p&gt;The numbers speak for themselves:&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Query&lt;/th&gt;
&lt;th&gt;Number of files&lt;/th&gt;
&lt;th&gt;Run time&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;SELECT COUNT(*) FROM lineitem&lt;/td&gt;
&lt;td&gt;5000&lt;/td&gt;
&lt;td&gt;8.4 seg&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SELECT COUNT(*) FROM lineitem&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;2.31 seg&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Speedup&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;72% faster&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;




&lt;h2&gt;
  &lt;a href="#prefer-the-use-of-regular-expressions-over-like"&gt;
  &lt;/a&gt;
  Prefer the use of regular expressions over 'LIKE'
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Query&lt;/th&gt;
&lt;th&gt;Run time&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;SELECT COUNT(*) FROM lineitem WHERE text_column LIKE '%wake%' OR text_column LIKE '%some%' OR text_column LIKE '%express%' OR text_column LIKE '%hello%'&lt;/td&gt;
&lt;td&gt;20.56 seg&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SELECT COUNT(*) FROM lineitem WHERE regexp_like(text_column,'...')&lt;/td&gt;
&lt;td&gt;15.87 seg&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Speedup&lt;/td&gt;
&lt;td&gt;17% faster&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Note: The expression would be&lt;br&gt;
&lt;br&gt;
 &lt;code&gt;regexp_like(text_column, 'wake|some|express|hello')&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#when-using-group-by-for-multiple-fields-order-them-from-highest-to-lowest-cardinality"&gt;
  &lt;/a&gt;
  When using group by for multiple fields. order them from highest to lowest cardinality
&lt;/h2&gt;

&lt;p&gt;This will avoid memory errors and reduce the time to deliver results.&lt;br&gt;
For instance:&lt;br&gt;
Avoid:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;select&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;people&lt;/span&gt; &lt;span class="k"&gt;group&lt;/span&gt; &lt;span class="k"&gt;by&lt;/span&gt; &lt;span class="n"&gt;column_genre&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;department&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Instead use:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;select&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;people&lt;/span&gt; &lt;span class="k"&gt;group&lt;/span&gt; &lt;span class="k"&gt;by&lt;/span&gt; &lt;span class="n"&gt;department&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;column_genre&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;In case of using Crawlers to automatically obtain the structure of the data stored in S3, respect the data types supported for the source engine. Likewise, do not forget to run the crawler after a data update that may generate changes in the structure, this in order to update the structure in the glue catalog.&lt;/p&gt;

&lt;p&gt;Use &lt;em&gt;MSCK REPAIR&lt;/em&gt; TABLE only if the folders are created with the structure 'field1 =  / field2 =  /.../ fieldN = ' and only after creating the table, since it is' msck repair table 'is expensive operation and it is preferable to use' alter table add partition 'or glue api to add partitions.&lt;/p&gt;

&lt;p&gt;and do you have any good practice that you recommend? Comment it in the comment box.&lt;/p&gt;

&lt;p&gt;I hope this blog is useful for you. Greetings!&lt;/p&gt;

</description>
    </item>
    <item>
      <title>3 JS code snippets sites to use daily!</title>
      <author>Rupak Dey</author>
      <pubDate>Mon, 04 Oct 2021 05:25:50 +0000</pubDate>
      <link>https://dev.to/deyrupak/3-js-code-snippets-sites-to-use-daily-5642</link>
      <guid>https://dev.to/deyrupak/3-js-code-snippets-sites-to-use-daily-5642</guid>
      <description>&lt;p&gt;&lt;em&gt;Save for later.&lt;/em&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1locdev"&gt;
  &lt;/a&gt;
  &lt;a href="https://1loc.dev/"&gt;1loc.dev&lt;/a&gt;
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;JS utilities in single line of code.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gdzikopj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/95r8jrbfr6h056eu5cwg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gdzikopj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/95r8jrbfr6h056eu5cwg.png" alt="1loc"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#htmldomdev"&gt;
  &lt;/a&gt;
  &lt;br&gt;&lt;a href="https://htmldom.dev/"&gt;htmldom.dev&lt;/a&gt;
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Managing DOM with JS.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GV1hWRll--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g93ggu74vuftvavxnus9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GV1hWRll--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g93ggu74vuftvavxnus9.png" alt="htmlDOM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#30secondsofcodeorg"&gt;
  &lt;/a&gt;
  &lt;br&gt;&lt;a href="https://www.30secondsofcode.org/"&gt;30secondsofcode.org&lt;/a&gt;
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Snippets for all development needs.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--B_XAdFpj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ult6v1sod6666hxuap2l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B_XAdFpj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ult6v1sod6666hxuap2l.png" alt="30secCode"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;P.S. Want the next post to be something specific? Do let me know in the comments.&lt;/p&gt;

&lt;p&gt;🤘🏻&lt;br&gt;
&lt;br&gt;&lt;br&gt;
Connect with me : &lt;a href="https://github.com/deyRupak"&gt;Github&lt;/a&gt;&lt;br&gt;
Support me : &lt;a href="https://paypal.me/deyrdx?locale.x=en_GB"&gt;Buy me a coffee!&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>productivity</category>
      <category>programming</category>
    </item>
    <item>
      <title>Rock, Paper, Scissors game in Python</title>
      <author>JRRyan606</author>
      <pubDate>Mon, 04 Oct 2021 05:18:21 +0000</pubDate>
      <link>https://dev.to/ryan_jr/rock-paper-scissors-game-in-python-3n2</link>
      <guid>https://dev.to/ryan_jr/rock-paper-scissors-game-in-python-3n2</guid>
      <description>&lt;p&gt;Hey there,  this is a simple GUI-Based Rock Paper Scissors game in python.&lt;/p&gt;

&lt;p&gt;Link to the github repo: &lt;a href="https://github.com/JRRyan606/Rock-Paper-Scissors-Tk-Gui"&gt;https://github.com/JRRyan606/Rock-Paper-Scissors-Tk-Gui&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;IMPORTANT, PLEASE READ THIS:&lt;/p&gt;

&lt;p&gt;The credit for this project MUST go to Bro code, He made a video in his Youtube channel called Python rock, paper, scissors game where he created a CLI-Based rock, paper, scissors game in python. I have created the GUI version of it. There are some features that Bro code created in his rock, paper, scissors game that is NOT YET coded in my gui version of the game. I will be coding it soon...&lt;/p&gt;

&lt;p&gt;Link to Bro code's Youtube channel: &lt;a href="https://www.youtube.com/channel/UC4SVo0Ue36XCfOyb5Lh1viQ"&gt;https://www.youtube.com/channel/UC4SVo0Ue36XCfOyb5Lh1viQ&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Link to the Python rock, paper, scissors game Youtube video: &lt;a href="https://youtu.be/GhPZHvhvlsk"&gt;https://youtu.be/GhPZHvhvlsk&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you want to address any bugs on this project or some improvements that can be made on this project, feel free to email me about it at: &lt;a href="mailto:ryanjustin25706@gmail.com"&gt;ryanjustin25706@gmail.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is my first Tkinter project using Python, any improvements or suggestions is highly appreciated!!. Thanks.&lt;/p&gt;

&lt;p&gt;For those of you who have some problems seeing the code from the above github link, here's is the code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from tkinter import *
import random

win = Tk()
win.title("Rock, Paper, Scissors")
win.geometry("801x300")


options = ["rock", "paper", "scissors"]
computer = random.choice(options)




def show():
    info = "Computer choose: " + computer
    info2 = "You choose: " + str(e.get()).lower()
    if str(e.get()).lower() == computer:
        text3 = Label(win, text="ITS A TIE!!", font=('Arial', 18))
        text3.pack()

    elif str(e.get()).lower() == "rock":
        if computer == "paper":
            text4 = Label(win, text="The computer wins!, you lose", font=('Arial', 18))
            text4.pack()

        if computer == "scissors":
            text5 = Label(win, text="You win!, the computer lose", font=('Arial', 18))
            text5.pack()

    elif str(e.get()).lower() == "scissors":
        if computer == "rock":
            text6 = Label(win, text="The computer wins!, you lose", font=('Arial', 18))
            text6.pack()

        if computer == "paper":
            text7 = Label(win, text="You win!, the computer lose", font=('Arial', 18))
            text7.pack()

    elif str(e.get()).lower() == "paper":
        if computer == "scissors":
            text8 = Label(win, text="The computer wins!, you lose", font=('Arial', 18))
            text8.pack()

        if computer == "rock":
            text9 = Label(win, text="You win!, the computer lose", font=('Arial', 18))
            text9.pack()

    elif str(e.get()).lower() is not options:
        text10 = Label(win, text="There is no such thing as " + str(e.get()).lower() + " in this game. " + "Please enter the correct word", fg="red", font=('Arial', 18))
        text10.pack()

    text1 = Label(win, text=info, font=('Arial', 18))
    text1.pack()
    text2 = Label(win, text=info2, font=('Arial', 18))
    text2.pack()





lab = Label(win, text="Rock, Paper or Scissors?", font=('Arial', 18))
lab.pack()


e = Entry(win, borderwidth=10, bg="powderblue")
e.pack()


b = Button(win, text="Submit", font=('Arial', 18), bg="lightgreen", command=show)
b.pack()
win.mainloop()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>python</category>
      <category>github</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Uniswap Clone Script- Fastest Solution to Start Your Own DeFi Exchange</title>
      <author>stanislas</author>
      <pubDate>Mon, 04 Oct 2021 05:01:10 +0000</pubDate>
      <link>https://dev.to/stanislasblo/uniswap-clone-script-fastest-solution-to-start-your-own-defi-exchange-51f3</link>
      <guid>https://dev.to/stanislasblo/uniswap-clone-script-fastest-solution-to-start-your-own-defi-exchange-51f3</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-uniswap"&gt;
  &lt;/a&gt;
  What is Uniswap?
&lt;/h2&gt;

&lt;p&gt;Uniswap is a decentralized business protocol that’s used to exchange cryptocurrencies. It is also the name of the company based on the Uniswap protocol.&lt;br&gt;
Uniswap was created by Hayden Adams. Its initial version was published to the Ethereum main net on November 2, 2018. Uniswap makes multiple crypto assets, including its native UNI cryptocurrency, to afford a service similar to an old-style exchange. The difference is, Uniswap has no one central operator or manager, making it fully decentralized.&lt;br&gt;
Uniswap unlike most exchanges, which are designed to take fees, is planned to function as a public good — a tool for the community to trade tokens without middlemen. Also, different most exchanges, which match buyers and sellers to determine prices and execute trades, Uniswap uses a simple math equation, pools of tokens and Ethereum to do the same job. That’s why the companies are interested to get &lt;strong&gt;&lt;a href="https://radindev.com/uniswap-clone-script/"&gt;Uniswap clone script&lt;/a&gt;&lt;/strong&gt;.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yuO_j9Xo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7x6x99muqtdx8zeqetpd.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yuO_j9Xo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7x6x99muqtdx8zeqetpd.jpeg" alt="uniswap statistics"&gt;&lt;/a&gt;&lt;br&gt;
Since Uniswap is built on Ethereum, it cannot list tokens built on other blockchains, and so users can only swap ERC-20 tokens.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZtX0hQX9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n4u4pvyrrxz98zxnolk5.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZtX0hQX9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n4u4pvyrrxz98zxnolk5.jpeg" alt="uniswap statistics"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-does-it-work"&gt;
  &lt;/a&gt;
  How does it work?
&lt;/h2&gt;

&lt;p&gt;Uniswap’s network is designed to facilitate the buying and selling of crypto assets in a way that mirrors a traditional exchange. &lt;br&gt;
It does this by using smart contracts, which allow users (called liquidity providers) to deposit crypto assets into pools. These smart contracts then allow other users (called traders) to buy and sell these assets. Users who trade these pool assets pay a fee that is then distributed to all the liquidity providers proportionally (based on their contribution to the pool).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#uniswap-clone-script"&gt;
  &lt;/a&gt;
  Uniswap Clone Script
&lt;/h2&gt;

&lt;p&gt;Uniswap clone script is a decentralized exchange (DEX) script that performs two smart contracts presented on the topmost of Ethereum (ETH) blockchain.&lt;br&gt;
Uniswap exchange clone script is developed in a way that resolves common liquidity problems faced by every exchange. It permits automatic token swapping for performing decentralized exchanges (DEX) in DeFi platforms. Uniswap Clone Script is a multi-tested, readymade decentralized finance (DeFi) protocol script built on Ethereum Blockchain used to start a decentralized platform for automated liquidity providing on Ethereum (ETH) that operates 100% similar to Uniswap. The Uniswap Clone Script supports both swapping &amp;amp; liquidity provisions of Ethereum and its tokens.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#features-of-uniswap-exchange-clone-script"&gt;
  &lt;/a&gt;
  Features of Uniswap Exchange Clone Script
&lt;/h3&gt;

&lt;p&gt;Some of the exclusive features of Uniswap clone script are as follows:&lt;br&gt;
• Two-factor authentication&lt;br&gt;
• Unauthorized users are extremely prevented by offering a safe trade.&lt;br&gt;
• Quick buying &amp;amp; selling options&lt;br&gt;
• Rapidly enabling the buying &amp;amp; selling of the assets without a delay.&lt;br&gt;
• White label solutions&lt;br&gt;
• Enabling a customization feature for satisfying the customer's needs &amp;amp; deploying it.&lt;br&gt;
• Multilingual support&lt;br&gt;
• Multi-language supporting DeFi platforms attract the global audience by offering their native language support facility for people across our world.&lt;br&gt;
• Ease to Use&lt;br&gt;
• Eco-friendly options make the software easy to use even for beginners.&lt;br&gt;
• Uniswap at High level&lt;br&gt;
• Absolutely offered as an open-source, this non-profit protocol is absolutely simple &amp;amp; easy to use.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--n3tgtcD6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kd7uwrh08oqhuajaa2aj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n3tgtcD6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kd7uwrh08oqhuajaa2aj.png" alt="uniswap decentralized exchange"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-create-own-defi-based-protocol-like-uniswap"&gt;
  &lt;/a&gt;
  How to create own defi based protocol like uniswap?
&lt;/h3&gt;

&lt;p&gt;Go to our Uniswap clone interface.&lt;br&gt;
Connect your wallet. ...&lt;br&gt;
Select the token you'd like to exchange from.&lt;br&gt;
Select the token you'd like to exchange to.&lt;br&gt;
Click on Swap.&lt;br&gt;
Preview the transaction in the pop-up window.&lt;br&gt;
Confirm the transaction request in your wallet.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#benefits-of-uniswap-clone-script"&gt;
  &lt;/a&gt;
  Benefits of Uniswap Clone Script
&lt;/h3&gt;

&lt;p&gt;Many remarkable benefits of uniswap clone script are there, here is a list of some of popular benefits of uniswap clone script&lt;br&gt;
• Easy options are provided for exchanging ERC20 tokens&lt;br&gt;
• New tokens provide direct access to the liquidity pools.&lt;br&gt;
• Start a Liquidity based exchange that is totally affordable by anyone.&lt;br&gt;
• Ability to gain profit by offering funds into the liquidity pools.&lt;br&gt;
• 100% Decentralized network &amp;amp; no involment of the third parties&lt;/p&gt;

&lt;p&gt;Top DeFi Development Company offers world-class special decentralized finance (Defi) development services and solutions for you to start an independent financial business across global countries. As traditional finance is being replaced with the DeFi, business can be high started in it so offers Permission less, interoperable, immutable defi solutions for managing tremendous growth and efficiency in your business.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-make-your-first-trade-on-uniswap"&gt;
  &lt;/a&gt;
  How to make your first trade on Uniswap
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt; Step 1: First head over to the Uniswap exchange platform. ...&lt;/li&gt;
&lt;li&gt; Step 2: Once logged in, the trading interface will appear. ...&lt;/li&gt;
&lt;li&gt; Step 3: Now you're ready to set up your order. ...&lt;/li&gt;
&lt;li&gt; Step 4: At the bottom of the order menu, you'll then see how much you can expect to receive.
The process of creating decentralized protocols like Uniswap can take time to complete. From finding qualified DeFi developers and explaining your focus to having the DeFi developed and making revisions—the whole process can be confusing and very time-consuming. That being said, many businesses are learning how to create a decentralized protocol like Uniswap with the help of online (but that’s not easy). And many are choosing the best Decentralized finance development service provider on the world.
## White label uniswap clone script
Uniswap Clone Script supports anyone to launch their own DeFi Exchange Protocol similar to Uniswap instantly. And develops and deploys the Whitelabel uniswap clone script with features as like in the Uniswap and the script is completely customizable that you can add any functionalities or APIs anytime. Whitelabel Uniswap Clone comes with fully tested and customizable source code, advanced admin tools, free installation, and more. The finest decentralized protocol whitelabel clone on the market for a fair price is Uniswap Clone, which is new, dynamic, technologically sophisticated, and the best decentralized protocol whitelabel clone on the marketplace. White label cryptocurrency exchange software technology permits you to start your own decentralized crypto exchange. Uniswap Clone platform, the most efficient decentralized exchange solution, has become available for purchase.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--diUV60XR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6ceaw3uawvtn2p24vwzk.png" alt="uniswap clone script"&gt;
## How to get a DeFi exchange similar to Uniswap? 
The replacement and useful method to make a DeFi exchange platform like Uniswap is to make a copy of it. The market has started getting decentralized exchanges like Uniswap in a cloned format. However, the trouble is that many companies are offering Uniswap clone Script, and it’s frustrating to find the best company in this field. So, how can you decide the best DeFi development company which provides robust &amp;amp; ready-made Uniswap Clone Script?
If you have decided to go for Uniswap clone Scripts, try to get it from the creators of Decentralized Finance exchange script development. It’s because whoever developed the Uniswap Clone Script for the first time, actually knows its realistic usage. It is also a smart idea to try the demo of Uniswap Clone Script before spending your bucks on it. How can I buy DeFi?&lt;/li&gt;
&lt;li&gt; Step 1: Create a Wallet. Download Trust Wallet and create a wallet. ...&lt;/li&gt;
&lt;li&gt; Step 2: Add DeFi Coin to the Wallet. Tap the icon in the top-right and search for “DeFi Coin”. ...&lt;/li&gt;
&lt;li&gt; Step 3: Buy “Uniswap Smart Chain” (USC) ...&lt;/li&gt;
&lt;li&gt; Step 4: Swap USC for DeFi Coin!&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#things-to-know-before-buying-a-uniswap-clone-software"&gt;
  &lt;/a&gt;
  Things to know before buying a Uniswap clone software
&lt;/h3&gt;

&lt;p&gt;First of all, you need talk to experts and also, you must have a checklist before buying the Uniswap clone script. Here are the 5 important items to be considered before buying a Uniswap clone script. &lt;br&gt;
Ask for Free Demo: A great demo lets prospects understand how solution truly solves their pain points and enables them to become more successful in their job. so try the free demo of the website or app provided by the companies and check the serviceability and functionality of the website. &lt;br&gt;
Analyze DeFi Market: Take a deep dive into unique protocol-level and market-wide DeFi indicators. Explore Now. Detailed analysis of individual DeFi projects. try to select Uniswap DEX clone scripts from companies other than freelancers. Because Decentralized Finance development companies provide more support. Try to get a free quote from companies and choose one from them.&lt;br&gt;
Customization: Need to Know what will be the cost range for customization and read their terms and conditions about the company you buy. &lt;br&gt;
Packages: The price range of the Uniswap clone script varies according to the business needs. Think carefully and choose the package and try premium packages it will provide more outstanding features. &lt;br&gt;
Technical Person: If you are not technical person, then hire a technical person who can support you with the whole process. It is welfare to have a team to test the Uniswap clone script. You can optimize the Uniswap clone script by adding additional features and bug fixes with the help of your technical team.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vFwXAiQz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/58842kjtywhfr4256kjn.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vFwXAiQz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/58842kjtywhfr4256kjn.jpg" alt="uniswap exchange"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-use-uniswap-clone-script"&gt;
  &lt;/a&gt;
  Why Use Uniswap Clone Script?
&lt;/h2&gt;

&lt;p&gt;• Complete decentralized liquidity solution&lt;br&gt;
• Support for Multi-crypto token trading pairs&lt;br&gt;
• Fast &amp;amp; Instant Swapping &lt;br&gt;
• 100% Customizable&lt;br&gt;
• Prebuilt Scripts&lt;br&gt;
• Scalable &amp;amp; Clean Design&lt;br&gt;
• Multi-Language &amp;amp; Multi-Crypto Token Support&lt;br&gt;
• Referral &amp;amp; Promotions&lt;br&gt;
• User-friendly UI/UX&lt;br&gt;
• Liquidity Pools&lt;br&gt;
• Integrated Crypto Wallets&lt;br&gt;
• Top-performing pools&lt;br&gt;
• Flash Swapping&lt;br&gt;
• Perfectly Integrated &amp;amp; Audited Immutable Smart Contract&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ch15DloK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jf0mzher3rwrhm60naii.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ch15DloK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jf0mzher3rwrhm60naii.png" alt="Uniswap Clone App"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#uniswap-clone-app"&gt;
  &lt;/a&gt;
  Uniswap Clone App
&lt;/h2&gt;

&lt;p&gt;However, Uniswap does not have dedicated application but companies’ technologies not only offer exclusive Uniswap clone script-based software solutions but also provides an updated Uniswap clone app development for your business. DEX clone app development is packed with all the features and benefits that Uniswap has. You can also add some additional features based on your business requirements. Contact to companies to get Uniswap clone script app for your crypto business. &lt;br&gt;
How to Build a Decentralized Protocol similar to Uniswap?&lt;br&gt;
A Decentralized finance trading is becoming more popular through the world; many companies and startups are starting to recognize the importance of Decentralized finance development for their business. But they have no idea about the DeFi, cost of DeFi development and the technical skills needed to develop these decentralized protocols similar to Uniswap, so many organizations face a lot of challenges in this competitive world.&lt;br&gt;
But as many DeFi development companies are realizing the request for Decentralized Finance and comprehend that specified requirements, these DeFi development companies are developing DeFi meant at providing a solution for how to make decentralized protocols like Uniswap. The trending solution involves companies launching DeFi based business with complete solutions.&lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>webdev</category>
      <category>cryptocurrency</category>
      <category>exchange</category>
    </item>
    <item>
      <title>The Only stock resources library you will ever need.</title>
      <author>Abhiraj Bhowmick</author>
      <pubDate>Mon, 04 Oct 2021 04:37:18 +0000</pubDate>
      <link>https://dev.to/abhirajb/the-only-stock-resources-library-you-will-ever-need-48jf</link>
      <guid>https://dev.to/abhirajb/the-only-stock-resources-library-you-will-ever-need-48jf</guid>
      <description>&lt;p&gt;If you have ever searched the mystic lands of the internet for quality stock photos, videos or music, you have come to the right place. This excerpt from &lt;a href="https://devresources.gitbook.io"&gt;Dev Resources&lt;/a&gt; lists the quality websites for stock resources. If I have missed out on any websites, comment down below and they will be added.&lt;/p&gt;

&lt;p&gt;If you like this post and need more resources as such, head on to &lt;a href="https://devresources.gitbook.io"&gt;Dev Resources&lt;/a&gt; for more.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#stock-photos"&gt;
  &lt;/a&gt;
  Stock Photos
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Websites that offer free stock photos of all kinds for your websites and apps&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Website                           &lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.pexels.com/"&gt;Pexels&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Free stock photos shared by talented creators&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://unsplash.com/"&gt;Unsplash&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;The internet’s source of freely usable images&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://pixabay.com/"&gt;Pixabay&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Over 1.7 million+ high-quality stock images and videos&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://magdeleine.co/"&gt;Magdeleine&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Gallery &amp;amp; free high-resolution photo everyday&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://picspree.com"&gt;Picspree&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Royalty free images, stock photos, illustrations, and vectors&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://burst.shopify.com/"&gt;Burst&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Free stock photos collections&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://gratisography.com/"&gt;Gratisography&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Free collection of free high-resolution pictures&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.lifeofpix.com/"&gt;Life of Pix&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Free high-resolution photography&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://stocksnap.io/"&gt;Stock Snap&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Hundreds of high quality photos added weekly&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://morguefile.com/"&gt;Morguefile&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Over 350,000 free stock photos for commercial use&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://kaboompics.com/"&gt;Kaboom Pics&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Stock photography and color palettes. Good for product images&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://nos.twnsnd.co/"&gt;New Old Stock&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Stock vintage photos&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://picjumbo.com/"&gt;Pic Jumbo&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Good collections of different types of photos&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.publicdomainpictures.net/en/"&gt;Public Domain Pictures&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Public domain images of all types&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.chamberofcommerce.org/findaphoto/"&gt;Find A Photo&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Searches multiple stock photo websites&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="http://www.stockvault.net/"&gt;Stockvault&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Categorized stock photos&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://placeholder.com/"&gt;Placeholder&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;A free image placeholder service for the web. You can specify image size and format&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://realisticshots.com/"&gt;Realistic Shots&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Free high-resolution stock photos&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://negativespace.co/"&gt;Negative Space&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;High-Resolution Free Stock Photos&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://skitterphoto.com/"&gt;SkitterPhoto&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Free high-resolution photography&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://picography.co/"&gt;PicoGraphy&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Gorgeous, High-Resolution, Free Photos&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://wunderstock.com/"&gt;Wunder Stock&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Stunningly amazing free photos&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://pxhere.com/"&gt;PxHere&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Free Images &amp;amp; Free stock photos - PxHere&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://piqsels.com/"&gt;Piqsels&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Royalty Free Stock Photos&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.foodiesfeed.com/"&gt;FoodiesFeed&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Food photo stock&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.nappy.co/"&gt;Nappy&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;A website offering Beautiful, high-res photos of black and brown people.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://generated.photos/"&gt;Generated Photos&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Unique AI Generated model photos&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.reshot.com/"&gt;Reshot&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Uniquely free photos. Handpicked, non-stocky images.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.freeimages.com/"&gt;Free Images&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Find and download free stock photos - all free for personal and commercial use&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://picsum.photos/"&gt;Lorem Picsum&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;An easy to use API to get beautiful placeholder images. Size and other parameters can be specified.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.scienceimage.csiro.au"&gt;scienceimage&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;An image library specializing in science and nature images&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://ian.umces.edu/imagelibrary"&gt;Integration &amp;amp; Application Network Image Library&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Free images to provide scientists, resource managers, government agencies, community groups and graphics professionals with a resource for enhancing science communication.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="http://www.freenatureimages.eu"&gt;Saxifraga&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Free nature images&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://search.creativecommons.org"&gt;Creative Commons&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Search for free images to reuse.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://allthefreestock.com/"&gt;AllTheFreeStock&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;a curated list of free stock images, audio and videos.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#stock-videos"&gt;
  &lt;/a&gt;
  Stock Videos
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Websites that offer free stock videos of all kinds for your websites and apps&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Website                           &lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.pexels.com/videos"&gt;Pexels&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Largest library of free to use videos, donated by the community&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.pixabay.com/videos"&gt;Pixabay&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Large library of free to use videos, donated by the community similar to Pexels&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://coverr.co/"&gt;Coverr.co&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Beautiful free stock video footage&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.videezy.com/"&gt;Videezy&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Free HD stock footage &amp;amp; 4K videos&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://mixkit.co/"&gt;Mix Kit&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Stock video clips &amp;amp; music&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.lifeofvids.com/"&gt;Life Of Vids&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Free video clips and loops&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.videvo.net/stock-video-footage/"&gt;Videvo&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Free and premium stock videos&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="http://stock.loopvidz.com/"&gt;Loopvidz&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Free To Use Cinema graphs Created With VIMAGE App&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.splitshire.com/"&gt;SplitShire&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Beautiful &amp;amp; exclusive free stock videos &amp;amp; photos&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#stock-music-amp-sound-effects"&gt;
  &lt;/a&gt;
  Stock Music &amp;amp; Sound Effects
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Websites that offer free stock music and/or sound effects&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Website                           &lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.free-stock-music.com/"&gt;Free Stock Music&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Royalty free stock music for YouTube videos, podcasts, etc&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.bensound.com/"&gt;Bensound&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Download Royalty Free Music for free and use it in your project&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://mixkit.co/free-stock-music/"&gt;Mixkit&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Free music for your projects&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://freesound.org/"&gt;Freesound&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Free stock music and sounds&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://freemusicarchive.org/"&gt;Free Music Archive&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Collaborative database of creative-commons licensed sound for musicians and sound lovers&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://musopen.org/music/"&gt;Musopen&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;An online copyright free classical music library&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.unminus.com/"&gt;Unminus&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Free Premium Music for Your Projects 🎁 Royalty Free. Cleared for YouTube.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#lets-connect"&gt;
  &lt;/a&gt;
  Let's Connect
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://twitter.com/rainboestrykr"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can support me by buying me a coffee maybe&lt;br&gt;
&lt;a href="https://www.buymeacoffee.com/rainboestrykr"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rb9xKs4G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png" alt="Buy Me A Coffee"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>webdev</category>
      <category>showdev</category>
    </item>
    <item>
      <title>Divtober Day 3: Quick</title>
      <author>Alvaro Montoro</author>
      <pubDate>Mon, 04 Oct 2021 04:09:45 +0000</pubDate>
      <link>https://dev.to/alvaromontoro/divtober-day-3-quick-45pf</link>
      <guid>https://dev.to/alvaromontoro/divtober-day-3-quick-45pf</guid>
      <description>&lt;p&gt;An animated version of Aesop's The Hare and the Tortoise drawn using CSS and a single HTML element for &lt;a href=""&gt;Divtober&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/alvaromontoro/embed/LYLozab?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;If it goes too quick (or is it fast?), here is a screenshot of the animation:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CM_OHPdp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4rbj287liszmcl7it07w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CM_OHPdp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4rbj287liszmcl7it07w.png" alt="A tortoise on a skateboard with a rocket attached to its shell reaches the finish line (with the word Meta in Spanish) ahead of a sad/surprised hare"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Something I learned from coding this one: Safari has some type of problem with the radial gradients when they have a value of 100%. It shows them squared. An easy hacky solution: use 99.9% instead of 100%.&lt;/p&gt;

</description>
      <category>codepen</category>
      <category>divtober</category>
      <category>css</category>
      <category>art</category>
    </item>
    <item>
      <title>Async + Await</title>
      <author>Dubymar Tollinchi</author>
      <pubDate>Mon, 04 Oct 2021 03:48:59 +0000</pubDate>
      <link>https://dev.to/dubymarjtr/async-await-2l10</link>
      <guid>https://dev.to/dubymarjtr/async-await-2l10</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-control-flow"&gt;
  &lt;/a&gt;
  What is control flow?
&lt;/h2&gt;

&lt;p&gt;It is the &lt;strong&gt;order&lt;/strong&gt; in which statements, instructions, or functions &lt;strong&gt;are executed in our code&lt;/strong&gt;. JavaScript is an &lt;em&gt;asynchronous&lt;/em&gt; language, meaning that it reads code line by line, from top to bottom.&lt;/p&gt;

&lt;p&gt;If there is a line that needs to &lt;em&gt;fetch&lt;/em&gt; any information from a database, for example, it will kick off that data fetching and &lt;br&gt;
continue reading the next lines immediately, instead of waiting for the fetching to be done. &lt;/p&gt;

&lt;p&gt;JavaScript being &lt;em&gt;asynchronous&lt;/em&gt; makes it difficult to write any code that will suddenly stop or block any application process. In the past some of the solutions for this issue were implementing callbacks, which is &lt;em&gt;a function that gets passed as the last argument of another function&lt;/em&gt;. &lt;/p&gt;

&lt;p&gt;This was fine until you encounter what developers call &lt;strong&gt;Callback Hell&lt;/strong&gt;, which is a callback within a callback, within a callback, and so on, which makes it very difficult to read and maintain the code. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-a-promise"&gt;
  &lt;/a&gt;
  What is a promise?
&lt;/h2&gt;

&lt;p&gt;A &lt;strong&gt;promise&lt;/strong&gt; is the &lt;em&gt;state of the result that gets return&lt;/em&gt;, so instead of having 10 lines of code indented with all those callbacks you can do it step by step. If something bad happens to the data, then you have an error handling, such as try catch. If you get the data successfully, then you execute a code, and like this, you write &lt;code&gt;.then&lt;/code&gt; for each action that you want. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Async + Await&lt;/strong&gt; is the same as promises but with a better syntax. Rather than having &lt;code&gt;.then&lt;/code&gt;, we can put &lt;code&gt;await&lt;/code&gt; in front of the promise and it will temporarily freeze that line of code until the promise is &lt;em&gt;resolved&lt;/em&gt; or &lt;em&gt;rejected&lt;/em&gt;, and then continues reading the following lines.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;promises.all()&lt;/code&gt; are &lt;strong&gt;Mega promises&lt;/strong&gt;, which are no other thing than a promise made of many promises, and it will return a promise where it will only resolve itself when all pieces of data are resolved. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#browser-apis"&gt;
  &lt;/a&gt;
  Browser API's
&lt;/h2&gt;

&lt;p&gt;Most new browser API's are build on native promises. &lt;strong&gt;Fetch&lt;/strong&gt; is the way to get data from an API, so we can use await fetching data. &lt;/p&gt;

&lt;p&gt;The fetch API is like a &lt;em&gt;double promise&lt;/em&gt;, because you fetch some data from your API and then you need to &lt;em&gt;convert that data&lt;/em&gt; (most of the time we want to convert it into JSON). &lt;strong&gt;Axios&lt;/strong&gt; is also based on promises and they have some JSON defaults, so we don't need to convert the data.&lt;/p&gt;

&lt;p&gt;JS's &lt;code&gt;util&lt;/code&gt; package has a &lt;strong&gt;promisify&lt;/strong&gt; function that &lt;em&gt;converts callback-based functions to promise-based functions&lt;/em&gt;, so we can use our code on callback-based API's.&lt;/p&gt;

&lt;p&gt;Since &lt;strong&gt;Async + Await&lt;/strong&gt; is not built in every browser, something that we can do in order to make our code compatible with everything, is to go to Babel.com and &lt;em&gt;convert the code&lt;/em&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#error-handling"&gt;
  &lt;/a&gt;
  Error handling
&lt;/h2&gt;

&lt;p&gt;Error handling methods, such as &lt;code&gt;try-catch&lt;/code&gt;, let you place the code that you want to execute in your program in the &lt;code&gt;try&lt;/code&gt; part, and if anything happens, any errors can be handle in the &lt;code&gt;catch&lt;/code&gt; part.&lt;/p&gt;

&lt;p&gt;There is no way to &lt;strong&gt;abort or cancel a promise&lt;/strong&gt;, when, for example, you have two fetch requests going at the same time. One thing that you can do is &lt;code&gt;abortController()&lt;/code&gt;, which will &lt;em&gt;cancel one or more web requests&lt;/em&gt;.&lt;/p&gt;

</description>
      <category>node</category>
      <category>javascript</category>
      <category>npm</category>
    </item>
  </channel>
</rss>
