<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>React Router  - Route ( WTF Moment )</title>
      <author>Santiago Correa</author>
      <pubDate>Fri, 16 Apr 2021 21:02:54 +0000</pubDate>
      <link>https://dev.to/scorreaui/react-router-route-wtf-moment-3102</link>
      <guid>https://dev.to/scorreaui/react-router-route-wtf-moment-3102</guid>
      <description>&lt;p&gt;Recently I was working on a project which consisted of books, and I realized that my whole web app was mounting and unmounting instead of the components re-rendering. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;More details:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The project consisted of 2 pages.&lt;/p&gt;

&lt;p&gt;Here's a quick wireframe I whipped up:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IQLGMPcX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fxgbeeegbjcqi0gwe0l4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IQLGMPcX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fxgbeeegbjcqi0gwe0l4.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Home&lt;/li&gt;
&lt;li&gt;Search&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I used react-router to create the navigation between pages.&lt;/p&gt;

&lt;p&gt;What I didn't know, until I further read their documentation, is that if you use the prop component in &lt;code&gt;&amp;lt;Route&amp;gt;&lt;/code&gt; it uses React.createElement to create a new React element from the given component.&lt;/p&gt;

&lt;p&gt;That means if you provide an inline function to the component prop, you would create a new component every render. This results in the existing component unmounting and the new component mounting instead of just updating the existing component. &lt;/p&gt;

&lt;p&gt;This caused undesired behavior which was when I was on the search page and updated the App state it would refresh everything and I would lose the state I had in the Search page. &lt;/p&gt;

&lt;p&gt;Instead, to just make sure the component updates and doesn't mount and unmount when there is an update, &lt;strong&gt;use render&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;Route
  path='/'
  exact
  render={() =&amp;gt; ( 
   &amp;lt;Home 
    currentlyReading={this.state.currentlyReading} 
    read={this.state.read}
    wantToRead={this.state.wantToRead}
    updateBookShelf={(book, shelf) =&amp;gt; 
    this.updateBookShelf(book, shelf)} /&amp;gt;
  )}
&amp;gt;&amp;lt;/Route&amp;gt;               
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;Route
  path='/'
  exact
  render={() =&amp;gt; ( 
   &amp;lt;Search 
    allBooks={this.state.books}
    updateBookShelf={(book, shelf) =&amp;gt; 
    this.updateBookShelf(book, shelf)} /&amp;gt;
  )}
&amp;gt;&amp;lt;/Route&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Summary&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Component unmounts and mounts a new component.&lt;/li&gt;
&lt;li&gt;Render updates components, instead of unmounting and mounting.&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>lesson</category>
      <category>devjournal</category>
    </item>
    <item>
      <title>New friend</title>
      <author> üê§ü•á Jasper de Jager</author>
      <pubDate>Fri, 16 Apr 2021 21:00:38 +0000</pubDate>
      <link>https://dev.to/jmdejager/random-act-of-kindness-2mi4</link>
      <guid>https://dev.to/jmdejager/random-act-of-kindness-2mi4</guid>
      <description>&lt;p&gt;I came across this post whilst scrolling through my new followers (very rewarding thing to do btw)&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/raeclaude" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xo1CNB26--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--hKtGmwk1--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/615576/ff77bc5b-0e19-449f-987c-951ff9724bb4.png" alt="raeclaude image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/raeclaude/new-friend-1mei" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;new friend&lt;/h2&gt;
      &lt;h3&gt;lawson peter „Éª Apr 16 „Éª 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;It triggered meüòä Let's help a comedian out and give this post some love, and perhaps some funny comments üòÖ I'm sure a comedian can appreciate something like that. &lt;/p&gt;

</description>
      <category>webdev</category>
      <category>watercooler</category>
      <category>discuss</category>
    </item>
    <item>
      <title>Create a Glowing Loader in CSS and HTML</title>
      <author>Hieu Nguyen</author>
      <pubDate>Fri, 16 Apr 2021 20:52:57 +0000</pubDate>
      <link>https://dev.to/hieussr/create-a-glowing-loader-in-css-and-html-3omd</link>
      <guid>https://dev.to/hieussr/create-a-glowing-loader-in-css-and-html-3omd</guid>
      <description>&lt;p&gt;We want our products to leave a good impression on first-time users. So whenever we build something, we make it possible first, then ask if it can be a little unique. And the glowing loader is one of those attempts.&lt;/p&gt;

&lt;p&gt;Here is Hieu's original version on &lt;a href="https://jsfiddle.net/hieunc229/wyk0qg9L/33/"&gt;jsfiddle (33 changes)&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-your-own-loader-in-html-and-css"&gt;
  &lt;/a&gt;
  Create your own loader in HTML and CSS
&lt;/h2&gt;

&lt;p&gt;The loader design has a container and 3 elements: the background button, glowing spinner, and the logo. While the button and the spinner are all overlay layers (use absolute positioning). &lt;/p&gt;

&lt;p&gt;Let's start with a straigt forward HTML markup as following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"logo-container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"spinner"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"background"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"logo"&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"yourlogo.svg"&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;"28"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#1-the-container"&gt;
  &lt;/a&gt;
  1. The container
&lt;/h3&gt;

&lt;p&gt;The main point of the container is to groups the elements together, and positioning its children &lt;code&gt;logo&lt;/code&gt; in the center. Let's use &lt;code&gt;flex&lt;/code&gt; in this example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.logo-container&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c"&gt;/* align children in the center */&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c"&gt;/* a circle with 60x60 pixels */&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;60px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;60px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we have a plain logo.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XKG1IYls--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wilson.inverr.com/media/glowing-spinner-1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XKG1IYls--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wilson.inverr.com/media/glowing-spinner-1.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Before going into the button background and the spinner. We need to make sure they are overlay layers, by applying absolute positioning as following.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.background&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="nc"&gt;.spinner&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;inline-block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#2-the-button-background"&gt;
  &lt;/a&gt;
  2. The button background
&lt;/h3&gt;

&lt;p&gt;The button background is a circle, with a matte-ish gradient and shadows. Here's one way to do it&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="c"&gt;/* The button background layer */&lt;/span&gt;
&lt;span class="nc"&gt;.background&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;linear-gradient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0deg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;#0f1013&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;#252730&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;4px&lt;/span&gt; &lt;span class="m"&gt;4px&lt;/span&gt; &lt;span class="m"&gt;-1px&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.6&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;4px&lt;/span&gt; &lt;span class="m"&gt;6px&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.3&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nb"&gt;inset&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;18px&lt;/span&gt; &lt;span class="m"&gt;32px&lt;/span&gt; &lt;span class="m"&gt;-2px&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nb"&gt;inset&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It'll look like this now:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EbmgmiUP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wilson.inverr.com/media/glowing-spinner-2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EbmgmiUP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wilson.inverr.com/media/glowing-spinner-2.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#3-bring-logo-to-front"&gt;
  &lt;/a&gt;
  3. Bring logo to front
&lt;/h3&gt;

&lt;p&gt;In case you can't see your logo, you will need to use &lt;code&gt;z-index&lt;/code&gt; to bring the &lt;code&gt;logo&lt;/code&gt; on top. Simple as the following CSS:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.logo&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;z-index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#4-glowing-spinner"&gt;
  &lt;/a&gt;
  4. Glowing spinner
&lt;/h3&gt;

&lt;p&gt;Glowing spinner layer use a &lt;code&gt;top-border&lt;/code&gt; attribute, with shadow to add the glowing effect. It can be done as following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.spinner&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#ae34db&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c"&gt;/* glowing with shadow (30% of #ae34db) */&lt;/span&gt;
  &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;-5px&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt; &lt;span class="m"&gt;#ae34db4&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c"&gt;/* add spin animation */&lt;/span&gt;
  &lt;span class="nl"&gt;animation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;spin&lt;/span&gt; &lt;span class="m"&gt;1s&lt;/span&gt; &lt;span class="n"&gt;linear&lt;/span&gt; &lt;span class="n"&gt;infinite&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then add the animation keyframes. It's basically a keyframe that rotate the light spinner in a 360 degree circle&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@keyframes&lt;/span&gt; &lt;span class="n"&gt;spin&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="err"&gt;0&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0deg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="err"&gt;100&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;360deg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You should see a glowing spinner with your logo inside. Here is our final result.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yzr9qd1c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://wilson.inverr.com/media/glowing-spinner-3.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yzr9qd1c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://wilson.inverr.com/media/glowing-spinner-3.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can play with the &lt;code&gt;spin&lt;/code&gt; keyframe to change the glowing colors, or spread the shadow more to make it like a siren light.&lt;/p&gt;




&lt;p&gt;Now you know how to create a glowing loader. It contains a matte-ish gradient background, with a glowing spinner. You can check out the final result &lt;a href="https://jsfiddle.net/m52jdu3e/"&gt;on jsfiddle&lt;/a&gt;;&lt;/p&gt;

&lt;p&gt;Let us know &lt;a href="https://inverr.com/contact"&gt;what you think&lt;/a&gt; and thanks for the support.&lt;/p&gt;

</description>
      <category>css</category>
      <category>html</category>
      <category>animate</category>
      <category>loader</category>
    </item>
    <item>
      <title>Top 5 DEV Comments of the Past Week</title>
      <author>Gracie Gregory (she/her)</author>
      <pubDate>Fri, 16 Apr 2021 20:07:18 +0000</pubDate>
      <link>https://dev.to/devteam/top-5-dev-comments-of-the-past-week-4jpb</link>
      <guid>https://dev.to/devteam/top-5-dev-comments-of-the-past-week-4jpb</guid>
      <description>&lt;p&gt;This is a weekly roundup of awesome DEV comments that you may have missed.  You are welcome and encouraged to boost posts and comments yourself using the &lt;strong&gt;&lt;a href="https://dev.to/t/bestofdev"&gt;#bestofdev&lt;/a&gt;&lt;/strong&gt; tag.&lt;/p&gt;

&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/technoglot"&gt;@technoglot&lt;/a&gt;
 had some &lt;a href="https://dev.to/devteam/what-was-your-win-this-week-1jd5"&gt;amazing wins&lt;/a&gt; this week! Keep the good work coming!&lt;/p&gt;


&lt;div class="liquid-comment"&gt;
    &lt;div class="details"&gt;
      &lt;a href="/technoglot"&gt;
        &lt;img class="profile-pic" src="https://res.cloudinary.com/practicaldev/image/fetch/s--t1s7673F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--dh0H24sF--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_50%2Cq_auto%2Cw_50/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/430182/bd897f8a-247e-44b6-bac8-db79fbe1a55b.jpeg" alt="technoglot profile image"&gt;
      &lt;/a&gt;
      &lt;a href="/technoglot"&gt;
        &lt;span class="comment-username"&gt;Amelia Vieira Rosado&lt;/span&gt;
      &lt;/a&gt;
      &lt;span class="color-base-30 px-2"&gt;‚Ä¢&lt;/span&gt;

&lt;a href="https://dev.to/technoglot/comment/1d9ce" class="comment-date crayons-link crayons-link--secondary fs-s"&gt;
  &lt;time&gt;
    Apr  9
  &lt;/time&gt;

&lt;/a&gt;

    &lt;/div&gt;
    &lt;div class="body"&gt;
      &lt;p&gt;Let's see...This week was great for me! &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I made progress on a small game I'm working on (college stuffs) üïπ&lt;/li&gt;
&lt;li&gt;I got my 4 week streak shiny badge. Consistency for the win! üòÅ&lt;/li&gt;
&lt;li&gt;My posts on productivity did really well too üòä (Feel free to check them out, no pressure)&lt;/li&gt;
&lt;/ul&gt;


    &lt;/div&gt;
&lt;/div&gt;
 

&lt;p&gt;Take a look at this &lt;a href="https://dev.to/alvaromontoro/bezos-calculator-4b7h"&gt;brilliant yet sobering calculator&lt;/a&gt; and you'll see what &lt;a class="mentioned-user" href="https://dev.to/crfries"&gt;@crfries&lt;/a&gt;
 means. &lt;/p&gt;


&lt;div class="liquid-comment"&gt;
    &lt;div class="details"&gt;
      &lt;a href="/crfries"&gt;
        &lt;img class="profile-pic" src="https://res.cloudinary.com/practicaldev/image/fetch/s--lmiwuuwb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--o_7lsoTK--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_50%2Cq_auto%2Cw_50/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/519865/10f72ebb-4176-45be-82ad-8d2cf7b92b50.png" alt="crfries profile image"&gt;
      &lt;/a&gt;
      &lt;a href="/crfries"&gt;
        &lt;span class="comment-username"&gt;crfries&lt;/span&gt;
      &lt;/a&gt;
      &lt;span class="color-base-30 px-2"&gt;‚Ä¢&lt;/span&gt;

&lt;a href="https://dev.to/crfries/comment/1dcbk" class="comment-date crayons-link crayons-link--secondary fs-s"&gt;
  &lt;time&gt;
    Apr 13
  &lt;/time&gt;

&lt;/a&gt;

    &lt;/div&gt;
    &lt;div class="body"&gt;
      &lt;p&gt;This is amazing and depressing at the same time. &lt;/p&gt;


    &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Sometimes, all we need is a little advice from others to get our &lt;a href="https://dev.to/crfries/portfolio-advice-4m1o"&gt;portfolios in shape&lt;/a&gt;. This is a helpful adjustment, &lt;a class="mentioned-user" href="https://dev.to/peterlunch"&gt;@peterlunch&lt;/a&gt;
.&lt;/p&gt;


&lt;div class="liquid-comment"&gt;
    &lt;div class="details"&gt;
      &lt;a href="/peterlunch"&gt;
        &lt;img class="profile-pic" src="https://res.cloudinary.com/practicaldev/image/fetch/s--GPZ-yvdb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--thyPdIOK--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_50%2Cq_auto%2Cw_50/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/358832/da87fb8f-ff37-491a-b1a6-54bef42f0eb7.jpeg" alt="peterlunch profile image"&gt;
      &lt;/a&gt;
      &lt;a href="/peterlunch"&gt;
        &lt;span class="comment-username"&gt;Peter&lt;/span&gt;
      &lt;/a&gt;
      &lt;span class="color-base-30 px-2"&gt;‚Ä¢&lt;/span&gt;

&lt;a href="https://dev.to/peterlunch/comment/1dblb" class="comment-date crayons-link crayons-link--secondary fs-s"&gt;
  &lt;time&gt;
    Apr 12
  &lt;/time&gt;

&lt;/a&gt;

    &lt;/div&gt;
    &lt;div class="body"&gt;
      &lt;p&gt;On your intro you say - "I am currently seeking a position at a company to grow and expand my abilities."&lt;/p&gt;

&lt;p&gt;I'd personally adjust to "I am currently seeking a position at a company where I can contribute with my x, y, z skills while I learn and grow from other developers."&lt;/p&gt;

&lt;p&gt;It's always good to say explicitly what you are offering the organization.  &lt;/p&gt;


    &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Choosing your &lt;a href="https://dev.to/bobbyiliev/what-is-your-linux-distribution-of-choice-and-why-2ijf"&gt;Linux distribution&lt;/a&gt; can be a tricky decision to make. Thanks for stating your case and making that choice easier, &lt;a class="mentioned-user" href="https://dev.to/cmuralisree"&gt;@cmuralisree&lt;/a&gt;
.&lt;/p&gt;


&lt;div class="liquid-comment"&gt;
    &lt;div class="details"&gt;
      &lt;a href="/cmuralisree"&gt;
        &lt;img class="profile-pic" src="https://res.cloudinary.com/practicaldev/image/fetch/s--V6ek2QQR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--jyGkl1dJ--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_50%2Cq_auto%2Cw_50/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/554716/b30ee849-0d7c-4245-9b00-1c585cb101db.jpg" alt="cmuralisree profile image"&gt;
      &lt;/a&gt;
      &lt;a href="/cmuralisree"&gt;
        &lt;span class="comment-username"&gt;Chittoji Murali Sree Krishna&lt;/span&gt;
      &lt;/a&gt;
      &lt;span class="color-base-30 px-2"&gt;‚Ä¢&lt;/span&gt;

&lt;a href="https://dev.to/cmuralisree/comment/1d88k" class="comment-date crayons-link crayons-link--secondary fs-s"&gt;
  &lt;time&gt;
    Apr  8
  &lt;/time&gt;

&lt;/a&gt;

    &lt;/div&gt;
    &lt;div class="body"&gt;
      &lt;h1&gt;
  &lt;a href="#i-use-vanilla-arch"&gt;
  &lt;/a&gt;
  I use Vanilla arch
&lt;/h1&gt;

&lt;p&gt;I love it, bcz&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;It's extremely lightweight,&lt;/li&gt;
&lt;li&gt;You are building your own system, so it will be solid stable&lt;/li&gt;
&lt;li&gt;Pacman and AUR,&lt;/li&gt;
&lt;li&gt;Availability of software&lt;/li&gt;
&lt;li&gt;Infamous archwiki,&lt;/li&gt;
&lt;/ol&gt;


    &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;In so many ways, &lt;a href="https://dev.to/jordienr/4-books-that-are-not-about-computers-that-made-me-a-good-software-developer-2hac"&gt;reading can make you a better Software Developer&lt;/a&gt;, and these suggestions are heading to the top of the list, for sure. Thanks for choosing our next reads, &lt;a class="mentioned-user" href="https://dev.to/eljayadobe"&gt;@eljayadobe&lt;/a&gt;
!&lt;/p&gt;


&lt;div class="liquid-comment"&gt;
    &lt;div class="details"&gt;
      &lt;a href="/eljayadobe"&gt;
        &lt;img class="profile-pic" src="https://res.cloudinary.com/practicaldev/image/fetch/s--Dyh0m08q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--J6Pjmr4x--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_50%2Cq_auto%2Cw_50/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/16481/7c9b8fa1-9004-4b63-94e9-c282f821bf24.png" alt="eljayadobe profile image"&gt;
      &lt;/a&gt;
      &lt;a href="/eljayadobe"&gt;
        &lt;span class="comment-username"&gt;Eljay-Adobe&lt;/span&gt;
      &lt;/a&gt;
      &lt;span class="color-base-30 px-2"&gt;‚Ä¢&lt;/span&gt;

&lt;a href="https://dev.to/eljayadobe/comment/1db4l" class="comment-date crayons-link crayons-link--secondary fs-s"&gt;
  &lt;time&gt;
    Apr 11
  &lt;/time&gt;

    ‚Ä¢ Edited
    &lt;span class="hidden m:inline-block"&gt;
      on &lt;time&gt;
      Apr 11&lt;/time&gt;
    &lt;/span&gt;
&lt;/a&gt;

    &lt;/div&gt;
    &lt;div class="body"&gt;
      &lt;p&gt;I wasn't even aware of any of those books.  They're on my book queue now!&lt;/p&gt;

&lt;p&gt;Here's my four non-computer books that I have helped my programming:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;The Goal&lt;/strong&gt; by Eliyahu M. Goldratt&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;The Design of Everyday Things&lt;/strong&gt; by Don Norman&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Advanced Dungeons &amp;amp; Dragons&lt;/strong&gt; (1st edition) by Gary Gygax, et al&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;To Do Doing Done&lt;/strong&gt; by Snead &amp;amp; Wycoff&lt;/li&gt;
&lt;/ul&gt;


    &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;See you next week for more great comments ‚úå&lt;/p&gt;

</description>
      <category>bestofdev</category>
    </item>
    <item>
      <title>When to use Svelte vs SvelteKit vs Sapper?</title>
      <author>Dana Woodman</author>
      <pubDate>Fri, 16 Apr 2021 19:38:40 +0000</pubDate>
      <link>https://dev.to/danawoodman/when-to-use-svelte-vs-sveltetkit-vs-sapper-4o6a</link>
      <guid>https://dev.to/danawoodman/when-to-use-svelte-vs-sveltetkit-vs-sapper-4o6a</guid>
      <description>&lt;p&gt;Confused as to when you should use Svelte vs SvelteKit vs Sapper? Hopefully I can help you get a little more clarity with this short guide. Let's go! üëá&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#use-svelte-if"&gt;
  &lt;/a&gt;
  Use Svelte if...
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;You don't need/want SSR (Server Side Rendering)&lt;/li&gt;
&lt;li&gt;You want to render a component into an existing page&lt;/li&gt;
&lt;li&gt;You want to output things like a vanilla component, a WebComponent or a React component adapter&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#use-sveltekit-if"&gt;
  &lt;/a&gt;
  Use SvelteKit if...
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;You're ok with Beta software and living on the bleeding edge&lt;/li&gt;
&lt;li&gt;You want SSR like Next.js/Nuxt.js&lt;/li&gt;
&lt;li&gt;You want to have a backend API as part of your project&lt;/li&gt;
&lt;li&gt;You want your app to work in a Serverless environment (e.g. Vercel/Netlify)&lt;/li&gt;
&lt;li&gt;You want super fast hot reloading in development (via Vite) &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Note that SvelteKit supports static rendering with &lt;a href="https://www.npmjs.com/package/@sveltejs/adapter-static"&gt;adapter-static&lt;/a&gt; which you can use to render a static site with built in routing in case you don't want/need any API/SSR.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#use-sapper-if"&gt;
  &lt;/a&gt;
  Use Sapper if...
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;You don't want to use Beta software and don't want to deal with the potential roadblocks of Beta software&lt;/li&gt;
&lt;li&gt;You want/need access directly to Express/Polka&lt;/li&gt;
&lt;li&gt;You're ok using a product that will no longer be maintained (SvelteKit will replace Sapper)&lt;/li&gt;
&lt;/ul&gt;




&lt;h1&gt;
  &lt;a href="#scenarios"&gt;
  &lt;/a&gt;
  Scenarios
&lt;/h1&gt;

&lt;p&gt;Still not sure what to use? Maybe these scenarios will help you decide:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;"I'm building a brand new web app (with backend/API)"&lt;/em&gt;: &lt;strong&gt;Use SvelteKit&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;"I want to build an SPA (Single Page App) and I have a pre-existing backend and don't need SSR"&lt;/em&gt;: &lt;strong&gt;Use Svelte&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;"I want to use Svelte in an existing web app"&lt;/em&gt;: &lt;strong&gt;Use Svelte&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;"I'm cautious of new things but want SSR/routing"&lt;/em&gt;: &lt;strong&gt;Use Sapper&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;"I'm building a rocket ship üöÄ"&lt;/em&gt;: &lt;strong&gt;Use something else&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Note that if you end up using Sapper, you can always &lt;a href="https://kit.svelte.dev/migrating"&gt;migrate to SvelteKit later&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;See any reasons missing from the above list? Drop them in the comments below üí¨&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Follow me on &lt;a href="https://dev.to/danawoodman"&gt;Dev.to&lt;/a&gt;, &lt;a href="https://twitter.com/DanaWoodman"&gt;Twitter&lt;/a&gt; and &lt;a href="https://github.com/danawoodman"&gt;Github&lt;/a&gt; for more web dev and startup related content&lt;/em&gt; ü§ì&lt;/p&gt;

</description>
      <category>svelte</category>
      <category>sveltekit</category>
      <category>sapper</category>
      <category>webdev</category>
    </item>
    <item>
      <title>The JavaScript console cheat sheet</title>
      <author>mrwolferinc</author>
      <pubDate>Fri, 16 Apr 2021 19:32:40 +0000</pubDate>
      <link>https://dev.to/mrwolferinc/the-javascript-console-cheat-sheet-4o76</link>
      <guid>https://dev.to/mrwolferinc/the-javascript-console-cheat-sheet-4o76</guid>
      <description>&lt;p&gt;This cheat sheet provides a quick overview of all the methods of the JavaScript &lt;code&gt;console&lt;/code&gt; object. Please note that non-standard methods are not documented.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#basic-methods"&gt;
  &lt;/a&gt;
  Basic methods
&lt;/h1&gt;

&lt;p&gt;This section provides information on the basic methods.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#-raw-consoleclear-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;console.clear&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;Clears the console.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#syntax"&gt;
  &lt;/a&gt;
  Syntax
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clear&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#parameters"&gt;
  &lt;/a&gt;
  Parameters
&lt;/h3&gt;

&lt;p&gt;None&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#-raw-consoledebug-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;console.debug&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;Outputs a message to the web console at the "debug" log level.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#syntax"&gt;
  &lt;/a&gt;
  Syntax
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj1&lt;/span&gt; &lt;span class="p"&gt;[,&lt;/span&gt;  &lt;span class="nx"&gt;obj2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="p"&gt;...,&lt;/span&gt;  &lt;span class="nx"&gt;objN&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt; &lt;span class="p"&gt;[,&lt;/span&gt; &lt;span class="nx"&gt;subst1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="p"&gt;...,&lt;/span&gt;  &lt;span class="nx"&gt;substN&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#parameters"&gt;
  &lt;/a&gt;
  Parameters
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#-raw-obj1-endraw-raw-objn-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;obj1&lt;/code&gt; ... &lt;code&gt;objN&lt;/code&gt;
&lt;/h4&gt;

&lt;p&gt;A list of JavaScript objects to output. The string representations of each of these objects are appended together in the order listed and output.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#-raw-msg-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;msg&lt;/code&gt;
&lt;/h4&gt;

&lt;p&gt;A JavaScript string containing zero or more substitution strings.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#-raw-subst1-endraw-raw-substn-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;subst1&lt;/code&gt; ... &lt;code&gt;substN&lt;/code&gt;
&lt;/h4&gt;

&lt;p&gt;JavaScript objects with which to replace substitution strings within msg. This gives you additional control over the format of the output.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#example"&gt;
  &lt;/a&gt;
  Example
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Debug&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#-raw-consoleerror-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;console.error&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;Outputs an error message to the web console.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#syntax"&gt;
  &lt;/a&gt;
  Syntax
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj1&lt;/span&gt; &lt;span class="p"&gt;[,&lt;/span&gt;  &lt;span class="nx"&gt;obj2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="p"&gt;...,&lt;/span&gt;  &lt;span class="nx"&gt;objN&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt; &lt;span class="p"&gt;[,&lt;/span&gt; &lt;span class="nx"&gt;subst1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="p"&gt;...,&lt;/span&gt;  &lt;span class="nx"&gt;substN&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#parameters"&gt;
  &lt;/a&gt;
  Parameters
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#-raw-obj1-endraw-raw-objn-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;obj1&lt;/code&gt; ... &lt;code&gt;objN&lt;/code&gt;
&lt;/h4&gt;

&lt;p&gt;A list of JavaScript objects to output. The string representations of each of these objects are appended together in the order listed and output.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#-raw-msg-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;msg&lt;/code&gt;
&lt;/h4&gt;

&lt;p&gt;A JavaScript string containing zero or more substitution strings.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#-raw-subst1-endraw-raw-substn-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;subst1&lt;/code&gt; ... &lt;code&gt;substN&lt;/code&gt;
&lt;/h4&gt;

&lt;p&gt;JavaScript objects with which to replace substitution strings within msg. This gives you additional control over the format of the output.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#example"&gt;
  &lt;/a&gt;
  Example
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Error&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#-raw-consoleinfo-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;console.info&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;Outputs an informational message to the web console.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#syntax"&gt;
  &lt;/a&gt;
  Syntax
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj1&lt;/span&gt; &lt;span class="p"&gt;[,&lt;/span&gt;  &lt;span class="nx"&gt;obj2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="p"&gt;...,&lt;/span&gt;  &lt;span class="nx"&gt;objN&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt; &lt;span class="p"&gt;[,&lt;/span&gt; &lt;span class="nx"&gt;subst1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="p"&gt;...,&lt;/span&gt;  &lt;span class="nx"&gt;substN&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#parameters"&gt;
  &lt;/a&gt;
  Parameters
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#-raw-obj1-endraw-raw-objn-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;obj1&lt;/code&gt; ... &lt;code&gt;objN&lt;/code&gt;
&lt;/h4&gt;

&lt;p&gt;A list of JavaScript objects to output. The string representations of each of these objects are appended together in the order listed and output.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#-raw-msg-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;msg&lt;/code&gt;
&lt;/h4&gt;

&lt;p&gt;A JavaScript string containing zero or more substitution strings.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#-raw-subst1-endraw-raw-substn-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;subst1&lt;/code&gt; ... &lt;code&gt;substN&lt;/code&gt;
&lt;/h4&gt;

&lt;p&gt;JavaScript objects with which to replace substitution strings within msg. This gives you additional control over the format of the output.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#example"&gt;
  &lt;/a&gt;
  Example
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Information&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#-raw-consolelog-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;console.log&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;Outputs a message to the web console.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#syntax"&gt;
  &lt;/a&gt;
  Syntax
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj1&lt;/span&gt; &lt;span class="p"&gt;[,&lt;/span&gt;  &lt;span class="nx"&gt;obj2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="p"&gt;...,&lt;/span&gt;  &lt;span class="nx"&gt;objN&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt; &lt;span class="p"&gt;[,&lt;/span&gt; &lt;span class="nx"&gt;subst1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="p"&gt;...,&lt;/span&gt;  &lt;span class="nx"&gt;substN&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#parameters"&gt;
  &lt;/a&gt;
  Parameters
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#-raw-obj1-endraw-raw-objn-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;obj1&lt;/code&gt; ... &lt;code&gt;objN&lt;/code&gt;
&lt;/h4&gt;

&lt;p&gt;A list of JavaScript objects to output. The string representations of each of these objects are appended together in the order listed and output.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#-raw-msg-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;msg&lt;/code&gt;
&lt;/h4&gt;

&lt;p&gt;A JavaScript string containing zero or more substitution strings.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#-raw-subst1-endraw-raw-substn-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;subst1&lt;/code&gt; ... &lt;code&gt;substN&lt;/code&gt;
&lt;/h4&gt;

&lt;p&gt;JavaScript objects with which to replace substitution strings within msg. This gives you additional control over the format of the output.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#example"&gt;
  &lt;/a&gt;
  Example
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Message&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#-raw-consolewarn-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;console.warn&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;Outputs a warning message to the web console.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#syntax"&gt;
  &lt;/a&gt;
  Syntax
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;warn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj1&lt;/span&gt; &lt;span class="p"&gt;[,&lt;/span&gt;  &lt;span class="nx"&gt;obj2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="p"&gt;...,&lt;/span&gt;  &lt;span class="nx"&gt;objN&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;warn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt; &lt;span class="p"&gt;[,&lt;/span&gt; &lt;span class="nx"&gt;subst1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="p"&gt;...,&lt;/span&gt;  &lt;span class="nx"&gt;substN&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#parameters"&gt;
  &lt;/a&gt;
  Parameters
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#-raw-obj1-endraw-raw-objn-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;obj1&lt;/code&gt; ... &lt;code&gt;objN&lt;/code&gt;
&lt;/h4&gt;

&lt;p&gt;A list of JavaScript objects to output. The string representations of each of these objects are appended together in the order listed and output.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#-raw-msg-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;msg&lt;/code&gt;
&lt;/h4&gt;

&lt;p&gt;A JavaScript string containing zero or more substitution strings.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#-raw-subst1-endraw-raw-substn-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;subst1&lt;/code&gt; ... &lt;code&gt;substN&lt;/code&gt;
&lt;/h4&gt;

&lt;p&gt;JavaScript objects with which to replace substitution strings within msg. This gives you additional control over the format of the output.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#example"&gt;
  &lt;/a&gt;
  Example
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;warn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Warning&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h1&gt;
  &lt;a href="#advanced-methods"&gt;
  &lt;/a&gt;
  Advanced methods
&lt;/h1&gt;

&lt;p&gt;This section provides information on the advanced methods.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#-raw-consoleassert-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;console.assert&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;Writes an error message to the web console if the assertion is false.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#syntax"&gt;
  &lt;/a&gt;
  Syntax
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;assert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;assertion&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;obj1&lt;/span&gt; &lt;span class="p"&gt;[,&lt;/span&gt;  &lt;span class="nx"&gt;obj2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="p"&gt;...,&lt;/span&gt;  &lt;span class="nx"&gt;objN&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;assert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;assertion&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;msg&lt;/span&gt; &lt;span class="p"&gt;[,&lt;/span&gt; &lt;span class="nx"&gt;subst1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="p"&gt;...,&lt;/span&gt;  &lt;span class="nx"&gt;substN&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#parameters"&gt;
  &lt;/a&gt;
  Parameters
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#-raw-assertion-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;assertion&lt;/code&gt;
&lt;/h4&gt;

&lt;p&gt;Any boolean expression. If the assertion is false, the message is written to the console.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#-raw-obj1-endraw-raw-objn-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;obj1&lt;/code&gt; ... &lt;code&gt;objN&lt;/code&gt;
&lt;/h4&gt;

&lt;p&gt;A list of JavaScript objects to output. The string representations of each of these objects are appended together in the order listed and output.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#-raw-msg-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;msg&lt;/code&gt;
&lt;/h4&gt;

&lt;p&gt;A JavaScript string containing zero or more substitution strings.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#-raw-subst1-endraw-raw-substn-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;subst1&lt;/code&gt; ... &lt;code&gt;substN&lt;/code&gt;
&lt;/h4&gt;

&lt;p&gt;JavaScript objects with which to replace substitution strings within msg. This gives you additional control over the format of the output.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#example"&gt;
  &lt;/a&gt;
  Example
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;The number &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt; is even&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;assert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;number&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;errorMessage&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;The number &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt; is not even&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#-raw-consolecount-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;console.count&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;Logs the number of times that this particular call to &lt;code&gt;count()&lt;/code&gt; was called.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#syntax"&gt;
  &lt;/a&gt;
  Syntax
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="nx"&gt;label&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#parameters"&gt;
  &lt;/a&gt;
  Parameters
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#-raw-label-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;label&lt;/code&gt;
&lt;/h4&gt;

&lt;p&gt;A JavaScript string. If supplied, this method outputs the number of times it has been called with that label. If omitted, &lt;code&gt;count()&lt;/code&gt; behaves as though it was called with the "default" label.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#example"&gt;
  &lt;/a&gt;
  Example
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;greet&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;hi &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;bob&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;greet&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;alice&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;greet&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;greet&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;alice&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#-raw-consolecountreset-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;console.countReset&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;Resets the counter used with &lt;code&gt;console.count()&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#syntax"&gt;
  &lt;/a&gt;
  Syntax
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;countReset&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="nx"&gt;label&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#parameters"&gt;
  &lt;/a&gt;
  Parameters
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#-raw-label-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;label&lt;/code&gt;
&lt;/h4&gt;

&lt;p&gt;A JavaScript string. If supplied, this method resets the count for that label to 0. If omitted, &lt;code&gt;countReset()&lt;/code&gt; resets the default counter to 0.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#example"&gt;
  &lt;/a&gt;
  Example
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;greet&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;hi &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;bob&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;greet&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;alice&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;greet&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;greet&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;countReset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;bob&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;alice&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#-raw-consoledir-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;console.dir&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;Displays an interactive list of the properties of a specific JavaScript object.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#syntax"&gt;
  &lt;/a&gt;
  Syntax
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;object&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#parameters"&gt;
  &lt;/a&gt;
  Parameters
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#-raw-object-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;object&lt;/code&gt;
&lt;/h4&gt;

&lt;p&gt;A JavaScript object whose properties should be output.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#example"&gt;
  &lt;/a&gt;
  Example
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#-raw-consoledirxml-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;console.dirxml&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;Displays an interactive tree of the descendant elements of the specified XML/HTML element. If it is not possible to display as an element the JavaScript Object view is shown instead.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#syntax"&gt;
  &lt;/a&gt;
  Syntax
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dirxml&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;object&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#parameters"&gt;
  &lt;/a&gt;
  Parameters
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#-raw-object-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;object&lt;/code&gt;
&lt;/h4&gt;

&lt;p&gt;A JavaScript object whose properties should be output.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#-raw-consolegroup-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;console.group&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;Creates a new inline group in the web console log. This indents following console messages by an additional level until &lt;code&gt;console.groupEnd()&lt;/code&gt; is called.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#syntax"&gt;
  &lt;/a&gt;
  Syntax
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;group&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="nx"&gt;label&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#parameters"&gt;
  &lt;/a&gt;
  Parameters
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#-raw-label-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;label&lt;/code&gt;
&lt;/h4&gt;

&lt;p&gt;Label for the group. This does not work with &lt;code&gt;console.groupEnd&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#example"&gt;
  &lt;/a&gt;
  Example
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;This is the outer level&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;group&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Level 2&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;group&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Level 3&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;More of level 3&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;groupEnd&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Back to level 2&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;groupEnd&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Back to the outer level&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#-raw-consolegroupcollapsed-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;console.groupCollapsed&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;Creates a new inline group in the web console. Unlike &lt;code&gt;console.group()&lt;/code&gt;, the new group is created collapsed.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#syntax"&gt;
  &lt;/a&gt;
  Syntax
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;groupCollapsed&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="nx"&gt;label&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#parameters"&gt;
  &lt;/a&gt;
  Parameters
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#-raw-label-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;label&lt;/code&gt;
&lt;/h4&gt;

&lt;p&gt;Label for the group.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#-raw-consolegroupend-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;console.groupEnd&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;Exits the current inline group in the web console.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#syntax"&gt;
  &lt;/a&gt;
  Syntax
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;groupEnd&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#parameters"&gt;
  &lt;/a&gt;
  Parameters
&lt;/h3&gt;

&lt;p&gt;None&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#-raw-consoletable-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;console.table&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;Displays tabular data as a table.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#syntax"&gt;
  &lt;/a&gt;
  Syntax
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;columns&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#parameters"&gt;
  &lt;/a&gt;
  Parameters
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#-raw-data-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;data&lt;/code&gt;
&lt;/h4&gt;

&lt;p&gt;The data to display. This must be either an array or an object.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#-raw-columns-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;columns&lt;/code&gt;
&lt;/h4&gt;

&lt;p&gt;An array containing the names of columns to include in the output.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#example"&gt;
  &lt;/a&gt;
  Example
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// An object&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;table&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;John&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Doe&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="c1"&gt;// An array&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;table&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Apples&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Oranges&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Bananas&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

&lt;span class="c1"&gt;// An array of objects&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;city1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;New York&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;state&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;New York&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;city2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Chicago&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;state&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Illinois&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;city3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Los Angeles&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;state&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;California&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;table&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="nx"&gt;city1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;city2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;city3&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#-raw-consoletime-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;console.time&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;Starts a timer that you can use to track how long an operation takes.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#syntax"&gt;
  &lt;/a&gt;
  Syntax
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;label&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#parameters"&gt;
  &lt;/a&gt;
  Parameters
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#-raw-label-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;label&lt;/code&gt;
&lt;/h4&gt;

&lt;p&gt;The name to give the new timer. This will identify the timer; use the same name when calling &lt;code&gt;console.timeEnd()&lt;/code&gt; to stop the timer and get the time output to the console.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#example"&gt;
  &lt;/a&gt;
  Example
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;answer time&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Click to continue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;timeLog&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;answer time&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Do a bunch of other stuff...&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;timeEnd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;answer time&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#-raw-consoletimeend-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;console.timeEnd&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;Stops a timer that was previously started by calling &lt;code&gt;console.time()&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#syntax"&gt;
  &lt;/a&gt;
  Syntax
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;timeEnd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;label&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#parameters"&gt;
  &lt;/a&gt;
  Parameters
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#-raw-label-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;label&lt;/code&gt;
&lt;/h4&gt;

&lt;p&gt;The name of the timer to stop. Once stopped, the elapsed time is automatically outputted to the web console.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#-raw-consoletimelog-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;console.timeLog&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;Logs the current value of a timer that was previously started by calling &lt;code&gt;console.time()&lt;/code&gt; to the console.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#syntax"&gt;
  &lt;/a&gt;
  Syntax
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;timeLog&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;label&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#parameters"&gt;
  &lt;/a&gt;
  Parameters
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#-raw-label-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;label&lt;/code&gt;
&lt;/h4&gt;

&lt;p&gt;The name of the timer to log to the console.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#-raw-consoletrace-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;console.trace&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;Outputs a stack trace to the web console.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#syntax"&gt;
  &lt;/a&gt;
  Syntax
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;trace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;[...&lt;/span&gt;&lt;span class="nx"&gt;any&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#parameters"&gt;
  &lt;/a&gt;
  Parameters
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#-raw-any-data-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;...any, ...data&lt;/code&gt;
&lt;/h4&gt;

&lt;p&gt;Zero or more objects to be output to console along with the trace. These are assembled and formatted the same way they would be if passed to the &lt;code&gt;console.log()&lt;/code&gt; method.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#example"&gt;
  &lt;/a&gt;
  Example
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;trace&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>javascript</category>
      <category>console</category>
      <category>cheatsheet</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Self-care strategies for (slightly!) less social media scrolling during covid</title>
      <author>Noƒçnica Fee</author>
      <pubDate>Fri, 16 Apr 2021 19:19:04 +0000</pubDate>
      <link>https://dev.to/rudderstack/self-care-strategies-for-slightly-less-social-media-scrolling-during-covid-4o8b</link>
      <guid>https://dev.to/rudderstack/self-care-strategies-for-slightly-less-social-media-scrolling-during-covid-4o8b</guid>
      <description>&lt;p&gt;&lt;em&gt;cover by &lt;a href="https://commons.wikimedia.org/w/index.php?curid=83165549"&gt;Michal Klajban - Own work, CC BY-SA 4.0&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;You can work out more, read more, cook more, and do any other 'self-care' to not be on screens, yet it's still surprisingly hard to not constantly log into social media like checking a baby breathing. At least, this is extremely the case for myself. It's easy for me to notice in others addictive social media posting patterns, but it's much harder to notice my own kinds of madness! But since shaming doesn't particularly work (and honestly, we deserve to be kinder to ourselves about our social media screentime given that we're all surviving an uprecedented pandemic in isolation), what's a better way to positively reframe this as to figure out the root of the problem and then care for our true needs?&lt;/p&gt;

&lt;p&gt;Anyone who is 'too online' is really just craving connection to something rewarding. And this isn't at all an unreasonable or bad thing in the first place, particularly in a time where social distancing saves lives! Our whole lives have been upended and we still no longer have access to the offline activities and social life we once had before. Therefore, it's imperative to incorporate small, gentle ways to spend less time staring at screens, and more time doing activities that retain a similar 'validation loop' and social availability that social media offers. Here's a few ways that help mitigate the chronic disconnect that leads to endless scrolling:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Changing your twitter account to private, or having locked/private social media, is especially helpful as to finally retrain your mind to use social media not as a tool for branding or virality but just to keep up with your favorite people who are just sharing parts of their everyday lives. It's a wonderful change to finally get to know people on more intimate and human level instead of just follow and keep up with those who write content for clicks!&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Similarly to the first tip, hanging out on instagram live streams or twitch channels is a great way to still be on social media but not have to feel the compulsion to 'perform' yet you get to watch the stream hosts and chat with their community in real time. It's a much different social media energy than twitter or facebook and is much more similar in experience as listening to podcasts, except with the added fun of live interaction and getting to comment on the stream.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Hobbies that require using both hands, especially involving crafts, such as cooking, doing a puzzle, or woodworking, are game-changingly helpful soothers. Drawing especially has been a rewarding hobby for me to personally get back into; the joy of seeing my own artistic improvement on an immediate basis, via practicing in a sketchbook and filling up more and more pages every day, allows for a sense of ensuring a 'validation loop' reward for putting in the work, which has significantly helped me not feel a need to scroll endlessly on social media. As humans, we all love to see something we create or build grow a little bit every day with our own efforts - through daily creative rituals that relax or excite us, that ideally involves both hands to do, we can manage our chronic disconnect in an emotionally soothing and rewarding manner.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Remember, you don't need to do a hardcore 'digital detox' and refrain cold turkey from all social media! It's unrealistic to uninstall all your apps, stop checking your email, and refrain from socializing and keeping up with others entirely. Being online is a much more normal part of daily life now - with a set of planned strategies to make the best use of your energy, you will find yourself able to recuperate during social isolation better and better.&lt;/p&gt;

</description>
      <category>selfcare</category>
      <category>discuss</category>
      <category>worklife</category>
    </item>
    <item>
      <title>My first git alias</title>
      <author>Jamund Ferguson</author>
      <pubDate>Fri, 16 Apr 2021 19:04:50 +0000</pubDate>
      <link>https://dev.to/xjamundx/my-first-git-alias-4ldh</link>
      <guid>https://dev.to/xjamundx/my-first-git-alias-4ldh</guid>
      <description>&lt;p&gt;At work I'm often jumping back and forth between various branches and pull requests and I sometimes find myself struggling to remember the name of a recent branch I need to use.&lt;/p&gt;

&lt;p&gt;For years I've used &lt;code&gt;git reflog&lt;/code&gt; as a short-cut to look at my git history and identify my recent work. It works okay, but it's very hard to make sense of:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bj3aQpSF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/by2umf5k9jqztnpil2ym.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bj3aQpSF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/by2umf5k9jqztnpil2ym.png" alt="git reflog output"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Other times I try to use &lt;code&gt;git branch&lt;/code&gt;, but that doesn't give you much context about anything and of course it can be easy to drown in the large number of branches:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;~/d/n/webapp (typescript ‚úî) git branch
  add-cognito-auth
  doritos
  eslint-prettier
  main
* typescript
  updated-husky
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Recently I got frustrated by this and decided to find a solution and stumbled on this stackoverflow question, &lt;a href="https://stackoverflow.com/questions/5188320/how-can-i-get-a-list-of-git-branches-ordered-by-most-recent-commit"&gt;How can I get a list of git branches ordered by most recent commit?&lt;/a&gt;, which taught me two really useful techniques.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;You can sort branches by commit date&lt;/strong&gt; using &lt;code&gt;git branch --sort=-committerdate&lt;/code&gt; which is great in an of itself (watch out for the &lt;code&gt;-&lt;/code&gt; after &lt;code&gt;sort=&lt;/code&gt; which puts the most recent branches first)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;You can enhance this output a bit&lt;/strong&gt; using this wild syntax &lt;code&gt;git branch --sort=-committerdate --format='%(HEAD)%(color:yellow)%(refname:short) | %(color:bold green)%(committerdate:relative) | %(color:blue)%(subject)%(color:reset)' --color=always&lt;/code&gt; which I'm never going to remember.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Which led me to create my first git alias after over 12 years of using it. Here's how I did it and here's what it looks like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git config --global alias.branches "branch --sort=-committerdate --format='%(HEAD)%(color:yellow)%(refname:short) | %(color:bold green)%(committerdate:relative) | %(color:blue)%(subject)%(color:reset)' --color=always"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That command added this to the boottom of my &lt;code&gt;~/.gitconfig&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[alias]
        branches = branch --sort=-committerdate --format='%(HEAD)%(color:yellow)
%(refname:short) | %(color:bold green)%(committerdate:relative) | %(color:blue)%(subject)%(color:reset)' --color=always
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now when I type &lt;code&gt;git branches&lt;/code&gt; I see this lovely output:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IF8hRmrY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ua9191j2s8wlcq8rc61k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IF8hRmrY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ua9191j2s8wlcq8rc61k.png" alt="nicely formatted git branch list"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Git isn't always the easiest to use, but this alias has made it just a little bit better, for me anyway. What kind of aliases do you use?&lt;/p&gt;

</description>
      <category>github</category>
      <category>linux</category>
    </item>
    <item>
      <title>Do you really know JavaScript ? Part 1: Undefined</title>
      <author>Kiran Raj R</author>
      <pubDate>Fri, 16 Apr 2021 18:42:57 +0000</pubDate>
      <link>https://dev.to/kiranrajvjd/do-you-really-know-javascript-part-1-undefined-1pda</link>
      <guid>https://dev.to/kiranrajvjd/do-you-really-know-javascript-part-1-undefined-1pda</guid>
      <description>&lt;p&gt;JavaScript is a very complex programming language, fully master the subject is near to impossible, my view. My knowledge about various JavaScript concept is very limited, so I decided to check my knowledge in various topics in JavaScript and explore more deeply. Today I am looking at a simple topic, "undefined". For the next 30 days I will be exploring my knowledge about various topic, so as to improve my understating about the language. So let's start the exploration.&lt;/p&gt;

&lt;p&gt;The "undefined" type has exactly one value, called undefined. Any variable that has not been assigned a value has the value undefined.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;z&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;z&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;                 &lt;span class="c1"&gt;// undefined &lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="c1"&gt;// undefined&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;z&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;undefined&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="c1"&gt;//true&lt;/span&gt;
&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;undefined&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;       &lt;span class="c1"&gt;// true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can explicitly assign a variable &lt;code&gt;undefined&lt;/code&gt;. Undefined is not a reserved keyword you can use to  name a variable but &lt;strong&gt;never use&lt;/strong&gt;, its a really bad practice.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;     &lt;span class="c1"&gt;// undefined&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's look at some examples where "undefined" value is generated&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#1-a-variable-declared-but-it-is-not-assigned-a-value"&gt;
  &lt;/a&gt;
  1. A variable declared but it is not assigned a value.
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Variable that is not initialized&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;          &lt;span class="c1"&gt;// undefined&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;                 &lt;span class="c1"&gt;// undefined&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above code the variable &lt;code&gt;x&lt;/code&gt; is declared but it is never assigned any value so if we try to get the value of variable &lt;code&gt;x&lt;/code&gt;, we get &lt;code&gt;undefined&lt;/code&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#2-when-we-try-to-access-an-out-of-bound-array-element"&gt;
  &lt;/a&gt;
  2. When we try to access an out of bound array element.
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Accessing out of bound index of an array&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;33&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;          &lt;span class="c1"&gt;//undefined&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above code we declared a array variable with values &lt;code&gt;[1,2,33]&lt;/code&gt;, array &lt;code&gt;arr&lt;/code&gt; contain 3 elements. If we try to access 100th element of array, JavaScript engine will not throw any error it just return the value of the 100th element as &lt;code&gt;undefined&lt;/code&gt;.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#3-accessing-a-non-existing-object-property"&gt;
  &lt;/a&gt;
  3. Accessing a non existing object property
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Accessing a non existing object property&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;kiran&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;             &lt;span class="c1"&gt;// undefined &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above code we declare a object with property name, if we try to access any non existing property, here for example &lt;code&gt;age&lt;/code&gt;, JavaScript engine will not throw any error, it simply return a value &lt;code&gt;undefined&lt;/code&gt;.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#4-a-function-that-does-not-have-a-return-statement"&gt;
  &lt;/a&gt;
  4. A function that does not have a return statement.
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Function that does not return&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;ret&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;            &lt;span class="c1"&gt;// 30&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ret&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;       &lt;span class="c1"&gt;// undefined&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above code the function perform an addition operation and prints the output to console, the function is not returning any value, so if we try to print the function call we get &lt;code&gt;undefined&lt;/code&gt;. i.e. the function invocation result is undefined.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#5-a-function-parameter-implicitly-default-to-undefined"&gt;
  &lt;/a&gt;
  5. A function parameter implicitly default to undefined.
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// function paramaeters are undefined by default&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;checkUndefined&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
   &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
       &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`undefined`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;checkUndefined&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;               &lt;span class="c1"&gt;// undefined&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above code you can see that the function &lt;code&gt;checkUndefined&lt;/code&gt; take one argument, inside the function it checks whether the argument is equal to &lt;code&gt;undefined&lt;/code&gt; if true &lt;code&gt;undefined&lt;/code&gt; is print to the console. When we call the function without a parameter the function print &lt;code&gt;undefined&lt;/code&gt; on the console, that means the parameter was equal to &lt;code&gt;undefined&lt;/code&gt;. Since we did not pass any value to parameter, JavaScript engine assign the parameter a default value of &lt;code&gt;undefined&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;When I was reading about the undefined I stubbled upon a operator called 'Nullish coalescing'( ?? ). &lt;code&gt;Nullish coalescing&lt;/code&gt; is a logical operator that returns its right-hand side operand when its left-hand side operand is null or undefined, if not, returns its left-hand side operand.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;fname&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;kiran&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;lname&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lname&lt;/span&gt; &lt;span class="p"&gt;??&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;raj&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;fname&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fname&lt;/span&gt; &lt;span class="p"&gt;??&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;manu&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;lname&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;                &lt;span class="c1"&gt;// raj&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fname&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;                &lt;span class="c1"&gt;// kiran&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;One more thing, &lt;code&gt;void&lt;/code&gt; operator, it evaluates a given expression and return undefined no matter what the result of evaluation of the expression is&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;a1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;                &lt;span class="c1"&gt;//undefined&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;a2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;                &lt;span class="c1"&gt;//undefined&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;a3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;kiran&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;                &lt;span class="c1"&gt;//undefined&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;a4&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a4&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;                &lt;span class="c1"&gt;//undefined&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>CodeFactory for Visual Studio (free license)</title>
      <author>Bill Fencken</author>
      <pubDate>Fri, 16 Apr 2021 18:39:42 +0000</pubDate>
      <link>https://dev.to/bfencken/codefactory-for-visual-studio-free-license-50l5</link>
      <guid>https://dev.to/bfencken/codefactory-for-visual-studio-free-license-50l5</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MflrjYrA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/idcqn904eowcsxp2q0z1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MflrjYrA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/idcqn904eowcsxp2q0z1.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Learn more about the power of auto-transformation and legacy app modernization using CodeFactory &lt;a href="http://www.linktr.ee/codefactory"&gt;www.linktr.ee/codefactory&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;CodeFactory for VisualStudio enables architects &amp;amp; dev leads to auto-generate &amp;amp; implement consistent design pattern adherence across the entire dev team.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lots-of-community-projects-available-and-looking-for-contributors-httpsgithubcomcodefactoryllcpublicprojects"&gt;
  &lt;/a&gt;
  Lots of community projects available and looking for contributors - &lt;a href="https://github.com/CodeFactoryLLC/Public-Projects"&gt;https://github.com/CodeFactoryLLC/Public-Projects&lt;/a&gt;
&lt;/h3&gt;

</description>
      <category>dotnet</category>
      <category>csharp</category>
      <category>opensource</category>
      <category>tooling</category>
    </item>
    <item>
      <title>Top 14 Python Projects to learn GitHub Actions üöÄ</title>
      <author>Aahnik Daw</author>
      <pubDate>Fri, 16 Apr 2021 18:31:37 +0000</pubDate>
      <link>https://dev.to/aahnik/top-14-python-projects-to-learn-github-actions-ge5</link>
      <guid>https://dev.to/aahnik/top-14-python-projects-to-learn-github-actions-ge5</guid>
      <description>&lt;p&gt;GitHub actions help developers to automate workflows. You can run tests, build and publish packages, check coverage, lint the codebase, and do tons of other cool stuff, using GitHub actions.&lt;/p&gt;

&lt;p&gt;Some of the best and most popular python projects are using GitHub actions to automate their workflow.&lt;/p&gt;

&lt;p&gt;GitHub actions are defined using a yaml file under the &lt;code&gt;.github/workflows&lt;/code&gt; folder.&lt;/p&gt;

&lt;p&gt;If you are completely new to GitHub actions, the official documentation can help: &lt;a href="https://docs.github.com/en/actions"&gt;https://docs.github.com/en/actions&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The best way to learn is by seeing examples. Below is the compilation of links to great GitHub action workflows.&lt;/p&gt;

&lt;p&gt;(the order of listing is completely random)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;poetry&lt;/strong&gt;  &lt;a href="https://github.com/python-poetry/poetry/tree/master/.github/workflows"&gt;https://github.com/python-poetry/poetry/tree/master/.github/workflows&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;fastapi&lt;/strong&gt; &lt;a href="https://github.com/tiangolo/fastapi/tree/master/.github/workflows"&gt;https://github.com/tiangolo/fastapi/tree/master/.github/workflows&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;mkdocs&lt;/strong&gt; &lt;a href="https://github.com/mkdocs/mkdocs/tree/master/.github/workflows"&gt;https://github.com/mkdocs/mkdocs/tree/master/.github/workflows&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;material mkdocs&lt;/strong&gt; &lt;a href="https://github.com/squidfunk/mkdocs-material/tree/master/.github/workflows"&gt;https://github.com/squidfunk/mkdocs-material/tree/master/.github/workflows&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;typer&lt;/strong&gt; &lt;a href="https://github.com/tiangolo/typer/tree/master/.github/workflows"&gt;https://github.com/tiangolo/typer/tree/master/.github/workflows&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;pytest&lt;/strong&gt; &lt;a href="https://github.com/pytest-dev/pytest/tree/main/.github/workflows"&gt;https://github.com/pytest-dev/pytest/tree/main/.github/workflows&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;pylint&lt;/strong&gt; &lt;a href="https://github.com/PyCQA/pylint/tree/master/.github/workflows"&gt;https://github.com/PyCQA/pylint/tree/master/.github/workflows&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;mypy&lt;/strong&gt; &lt;a href="https://github.com/python/mypy/tree/master/.github/workflows"&gt;https://github.com/python/mypy/tree/master/.github/workflows&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;requests&lt;/strong&gt; &lt;a href="https://github.com/psf/requests/tree/master/.github/workflows"&gt;https://github.com/psf/requests/tree/master/.github/workflows&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;aiohttp&lt;/strong&gt; &lt;a href="https://github.com/aio-libs/aiohttp/tree/master/.github/workflows"&gt;https://github.com/aio-libs/aiohttp/tree/master/.github/workflows&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;black&lt;/strong&gt; &lt;a href="https://github.com/psf/black/tree/master/.github/workflows"&gt;https://github.com/psf/black/tree/master/.github/workflows&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;python-youtube&lt;/strong&gt; &lt;a href="https://github.com/sns-sdks/python-youtube/tree/master/.github/workflows"&gt;https://github.com/sns-sdks/python-youtube/tree/master/.github/workflows&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;pygithub&lt;/strong&gt; &lt;a href="https://github.com/PyGithub/PyGithub/tree/master/.github/workflows"&gt;https://github.com/PyGithub/PyGithub/tree/master/.github/workflows&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;coverage&lt;/strong&gt; &lt;a href="https://github.com/nedbat/coveragepy/tree/master/.github/workflows"&gt;https://github.com/nedbat/coveragepy/tree/master/.github/workflows&lt;/a&gt;&lt;/p&gt;

</description>
      <category>github</category>
      <category>python</category>
      <category>discuss</category>
      <category>testing</category>
    </item>
    <item>
      <title>Free Appointment Scheduling Tool for Remote Teams</title>
      <author>Spurwing</author>
      <pubDate>Fri, 16 Apr 2021 18:26:16 +0000</pubDate>
      <link>https://dev.to/spurwing/free-appointment-scheduling-tool-for-remote-teams-19g1</link>
      <guid>https://dev.to/spurwing/free-appointment-scheduling-tool-for-remote-teams-19g1</guid>
      <description>&lt;p&gt;Remote Work and Work From Home is here to stay. Even post-pandemic the majority of office workers are in favor of a hybrid of fully remote setting. This also means we need to use better &amp;amp; smarter tools to be more productive and efficient.&lt;/p&gt;

&lt;p&gt;Today we release our Free and Improved &lt;strong&gt;Appointment Scheduling Tool&lt;/strong&gt; for international and &lt;strong&gt;remote teams&lt;/strong&gt;. This software is inspired by online tools like Doodle, which allow team members to indicate their availability. The results can be monitored in real-time and show all overlapping dates and times where all users can attend.&lt;/p&gt;

&lt;p&gt;Live demo: &lt;a href="https://cloud.spurwing.io/Availability/S01/"&gt;https://cloud.spurwing.io/Availability/S01/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=VehzYEmXvlc"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iPeJ3W4b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q099a57m27c82f2axyfd.png" alt="free appointment scheduling tool"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Full YouTube Demo: &lt;a href="https://www.youtube.com/watch?v=VehzYEmXvlc"&gt;https://www.youtube.com/watch?v=VehzYEmXvlc&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#overview"&gt;
  &lt;/a&gt;
  Overview
&lt;/h2&gt;

&lt;p&gt;The homepage calendar remains untouched for most of it. The major improvement is that we now get a shareable single link.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f09NCN4H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b39qy97xjmh9374190cy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f09NCN4H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b39qy97xjmh9374190cy.png" alt="scheduling tool for remote teams"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On the new link each user can select the cells to indicate their availability for a given date and time. A name and email address must be provided in order to submit the answer. Updating an already submitted answer is possible by re-submitting using the same email.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uG2-b768--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gw6u61d9otwgnp74cant.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uG2-b768--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gw6u61d9otwgnp74cant.png" alt="appointment scheduler for remote teams"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The results sections shows the strict overlap of all the answers, of each submitted user. But also allows you to toggle individual members to see the overlap or intersection.&lt;/p&gt;

&lt;p&gt;As in the initial version, all submissions and dates/times are displayed with respect to the attendee's and viewer's time zones.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#implementation"&gt;
  &lt;/a&gt;
  Implementation
&lt;/h2&gt;

&lt;p&gt;The full implementation of this team scheduling solution is available on &lt;a href="https://github.com/Spurwing/Availability-Solutions/tree/main/solution_01"&gt;GitHub&lt;/a&gt;. We use JavaScript/jQuery for the front-end client with the help of a few libraries, and NodeJS + Express for the back-end server.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;No matter your front-end or back-end stack, you can easily integrate this solution into your existing system. For inquiries, problems or other issues please reach to us.&lt;/p&gt;

&lt;p&gt;Support email: &lt;a href="mailto:ilya@spurwing.io"&gt;ilya@spurwing.io&lt;/a&gt;&lt;br&gt;
Discord community: &lt;a href="https://discord.gg/j3gd5Qk5uW"&gt;https://discord.gg/j3gd5Qk5uW&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Make sure to follow our blog for all new releases. For more tools and resources check out our github: &lt;a href="https://github.com/Spurwing/"&gt;https://github.com/Spurwing/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Have a great day!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>productivity</category>
      <category>programming</category>
    </item>
  </channel>
</rss>
