<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>CSS ::placeholder and :placeholder-shown</title>
      <author>Suprabha</author>
      <pubDate>Tue, 25 May 2021 07:16:30 +0000</pubDate>
      <link>https://dev.to/suprabhasupi/css-placeholder-and-placeholder-shown-2cpk</link>
      <guid>https://dev.to/suprabhasupi/css-placeholder-and-placeholder-shown-2cpk</guid>
      <description>&lt;p&gt;&lt;span&gt;T&lt;/span&gt;he `:placeholder-shown` CSS pseudo-class represents any `` or `` element that is currently displaying placeholder text.&lt;/p&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"some text"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="nd"&gt;:placeholder-shown&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;"Baloo 2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;cursive&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;pink&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output:
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yaWxGFIi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/EHH1pYC.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yaWxGFIi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/EHH1pYC.gif" alt="placeholder shown"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In above snippet, &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;If user has not typed anything then placeholder shown background color will be pink&lt;/li&gt;
&lt;li&gt;When user has typed something then there will be no placeholder shown and the background color will be transparent&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;üìù NOTE: &lt;code&gt;:placeholder-shown&lt;/code&gt; won't work if there will be no placeholder text&lt;/p&gt;

&lt;p&gt;üóì &lt;b&gt;Example:&lt;/b&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="nd"&gt;:placeholder-shown&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;pink&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;‚ùå The above snippet doesn't work&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#placeholdershown-vs-placeholder"&gt;
  &lt;/a&gt;
  :placeholder-shown vs ::placeholder üî•
&lt;/h3&gt;

&lt;p&gt;We can use &lt;code&gt;:placeholder-shown&lt;/code&gt; to style the input element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="nd"&gt;:placeholder-shown&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="no"&gt;pink&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;yellow&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, we set &lt;code&gt;color: blue&lt;/code&gt;, but it didn't work. That's because &lt;code&gt;:placeholder-shown&lt;/code&gt; will only target the input itself. But for the actual placeholder text, you have to use the pseudo-element &lt;code&gt;::placeholder&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;::placeholder&lt;/code&gt; pseudo-element can be used to style the placeholder text in &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="nd"&gt;::placeholder&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output:
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f-ClNjBN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/lga0bsF.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f-ClNjBN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/lga0bsF.png" alt="placeholder"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you wanted to add styles for empty placeholder, we can pass empty string &lt;code&gt;" "&lt;/code&gt; as placeholder.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;" "&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output:
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vdNhg4WW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/BE4piBr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vdNhg4WW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/BE4piBr.png" alt="placeholder shown"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, why don't we combine two selector &lt;code&gt;:not&lt;/code&gt; and &lt;code&gt;:placeholder-shown&lt;/code&gt;.&lt;br&gt;
So we can target if the input is not empty then we can apply css.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"some text"&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"Check with empty!"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="nd"&gt;:not&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nd"&gt;:placeholder-shown&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;pink&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output:
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4AB_VoiZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/ybliArD.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4AB_VoiZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/ybliArD.gif" alt="placeholder not shown"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In above snippet, &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;If the input has value then the &lt;code&gt;background-color&lt;/code&gt; will get applied&lt;/li&gt;
&lt;li&gt;If the input is empty then &lt;code&gt;background-color&lt;/code&gt; not applies&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;üìù NOTE: &lt;code&gt;::placeholder&lt;/code&gt; does not work with &lt;code&gt;:not&lt;/code&gt; selector.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reference"&gt;
  &lt;/a&gt;
  Reference üßê
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/::placeholder"&gt;MDN Doc Placeholder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/:placeholder-shown"&gt;MDN Doc placeholder-shown&lt;/a&gt;&lt;a&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://caniuse.com/css-placeholder-shown"&gt;caniuse - placeholder-shown&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;
        üåü &lt;a href="https://twitter.com/suprabhasupi"&gt; Twitter&lt;/a&gt;
      &lt;/td&gt;
      &lt;td&gt;
        üë©üèª‚Äçüíª &lt;a href="https://www.suprabha.me/"&gt; suprabha.me&lt;/a&gt;
      &lt;/td&gt;
&lt;td&gt;
        üåü &lt;a href="https://www.instagram.com/suprabhasupi/"&gt; Instagram&lt;/a&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

</description>
      <category>css</category>
      <category>codenewbie</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Blog Project with Go, Gin, MySQL and Docker - Part 1</title>
      <author>Umesh Chaudhary</author>
      <pubDate>Tue, 25 May 2021 07:13:22 +0000</pubDate>
      <link>https://dev.to/umschaudhary/blog-project-with-go-gin-mysql-and-docker-part-1-3cg1</link>
      <guid>https://dev.to/umschaudhary/blog-project-with-go-gin-mysql-and-docker-part-1-3cg1</guid>
      <description>&lt;h2&gt;
  &lt;a href="#contents"&gt;
  &lt;/a&gt;
  Contents
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#target-audience"&gt;Target Audience&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#learning-objectives"&gt;Learning Objectives&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#requirements"&gt;Requirements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#getting-started"&gt;Getting Started&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#getting-up-hello-world-server"&gt;Getting Up Hello World Server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#setting-up-docker"&gt;Setting up Docker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#setting-up-the-database"&gt;Setting up the database&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#environment-variables"&gt;Environment Variables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#docker-compose-file"&gt;Docker Compose file&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="#wrap-up"&gt;Wrap Up&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#target-audience"&gt;
  &lt;/a&gt;
  Target Audience
&lt;/h2&gt;

&lt;p&gt;This Series doesn't focuses on fundamentals of Go. It focuses on how to build backend services. Indiviuals interested in learning web development with Gin Framework are ideal candidates.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#learning-objectives"&gt;
  &lt;/a&gt;
  Learning Objectives
&lt;/h2&gt;

&lt;p&gt;This Series teaches you the fundamental of building Rest APIs with Go. After completing this series you will know how to do the following : &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Setup Golang with MySQL and Docker for Local Development&lt;/li&gt;
&lt;li&gt;Gin Framework for CRUD APIs.&lt;/li&gt;
&lt;li&gt;Domain Driven Development&lt;/li&gt;
&lt;li&gt;Dependency Injection with Go&lt;/li&gt;
&lt;li&gt;Authentication with Firebase and so. on&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#requirements"&gt;
  &lt;/a&gt;
  Requirements
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Go Installed ( version : go1.16.3 linux/amd64 )&lt;/li&gt;
&lt;li&gt;Docker ( version 20.10.6 ) &amp;amp; Docker-compose ( version 1.29.1). &lt;/li&gt;
&lt;li&gt;Prefarrably Linux Machine ( As i will be using linux but any would be fine )&lt;/li&gt;
&lt;li&gt;General Understanding of Restful Services/APIs.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The above mentioned versions are installed on my machine.&lt;br&gt;
You can find the full source of the series in this &lt;a href="https://github.com/umschaudhary/hashnode-series"&gt;repository&lt;/a&gt;, feel free to fork it:&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting Started
&lt;/h2&gt;

&lt;p&gt;Let's start by creating a &lt;code&gt;blog&lt;/code&gt; folder in your preferred location. Then initialize a new &lt;a href="https://blog.golang.org/using-go-modules"&gt;Go module&lt;/a&gt; inside &lt;code&gt;blog&lt;/code&gt; folder with following command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;go mod init blog
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above command creates a &lt;code&gt;go.mod&lt;/code&gt; file. It will allow you to manage project dependencies. Let's add some dependencies.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="go"&gt;go get github.com/gin-gonic/gin
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above command will install &lt;a href="https://github.com/gin-gonic/gin"&gt;Gin Framework&lt;/a&gt; and &lt;a href="https://gorm.io/"&gt;Gorm&lt;/a&gt; and create &lt;code&gt;go.sum&lt;/code&gt; file. This file stores info about the dependencies and their versions. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Gin&lt;/strong&gt;  is lightweight, well-documented and fast HTTP web framework. The creators claims that Gin is 40 times faster than other similar framework to Gin&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#getting-up-hello-world-server"&gt;
  &lt;/a&gt;
  Getting Up Hello world Server
&lt;/h3&gt;

&lt;p&gt;Create a &lt;code&gt;main.go&lt;/code&gt; file in the root level; open up your favorite editor  and write up the following code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;package&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="s"&gt;"net/http"&lt;/span&gt;
  &lt;span class="s"&gt;"github.com/gin-gonic/gin"&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;router&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;gin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Default&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c"&gt;//new gin router initialization&lt;/span&gt;
  &lt;span class="n"&gt;router&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GET&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;gin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StatusOK&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;gin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;H&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"data"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"Hello World !"&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;    
  &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="c"&gt;// first endpoint returns Hello World&lt;/span&gt;
  &lt;span class="n"&gt;router&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;":8000"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c"&gt;//running application, Default port is 8080&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's go through the code in &lt;code&gt;main.go&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;package main&lt;/strong&gt; : Each go file is a package. The main package is always an entry point for gin project.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;** import ** : Imports project dependenices.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;** func main ** : Main function is triggered whenever you run the application. Inside the function, a new &lt;code&gt;Gin router&lt;/code&gt; is initialized  to the &lt;code&gt;router&lt;/code&gt; variable. A new endpoint &lt;code&gt;/&lt;/code&gt; is set on the router.&lt;br&gt;
*&lt;em&gt;Setting up a route/endpoint requires two things : *&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Endpoint&lt;/strong&gt; : It is the path from where data is fetched. For instance, if the visitor wants to get all posts, they‚Äôd fetch the &lt;code&gt;/posts&lt;/code&gt; endpoint.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Handler&lt;/strong&gt; : It determines how you provide the data to endpoint. Business logic, like getting/saving data from/to the database, validating the user input, and so on. JSON method of context object is used to send data in JSON format. This method takes an HTTP &lt;a href="https://en.wikipedia.org/wiki/List_of_HTTP_status_codes"&gt;status code&lt;/a&gt; and a JSON response as the parameters.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Use the following command to start the server.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;go run main.go
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you see output similar to the following that means you are good to go.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="gp"&gt;[GIN-debug] GET    /                         --&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;main.main.func1 &lt;span class="o"&gt;(&lt;/span&gt;3 handlers&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="go"&gt;[GIN-debug] Environment variable PORT is undefined. Using port :8080 by default
[GIN-debug] Listening and serving HTTP on :8000
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;visit &lt;a href="http://localhost:8000/"&gt;http://localhost:8000/&lt;/a&gt; on your browser. You should see &lt;code&gt;{"data":"Hello World !"}&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#setting-up-docker"&gt;
  &lt;/a&gt;
  Setting Up Docker
&lt;/h3&gt;

&lt;p&gt;The above method of running the server is the Go way of running applications. Let's setup it via the Docker way.&lt;br&gt;
Create a file &lt;code&gt;Dockerfile&lt;/code&gt; at the project root with the following code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; golang:alpine&lt;/span&gt;

&lt;span class="k"&gt;RUN &lt;/span&gt;&lt;span class="nb"&gt;mkdir&lt;/span&gt; /app

&lt;span class="k"&gt;WORKDIR&lt;/span&gt;&lt;span class="s"&gt; /app&lt;/span&gt;

&lt;span class="k"&gt;ADD&lt;/span&gt;&lt;span class="s"&gt; go.mod .&lt;/span&gt;
&lt;span class="k"&gt;ADD&lt;/span&gt;&lt;span class="s"&gt; go.sum .&lt;/span&gt;

&lt;span class="k"&gt;RUN &lt;/span&gt;go mod download
&lt;span class="k"&gt;ADD&lt;/span&gt;&lt;span class="s"&gt; . .&lt;/span&gt;

&lt;span class="k"&gt;RUN &lt;/span&gt;go get github.com/githubnemo/CompileDaemon

&lt;span class="k"&gt;EXPOSE&lt;/span&gt;&lt;span class="s"&gt; 8000&lt;/span&gt;

&lt;span class="k"&gt;ENTRYPOINT&lt;/span&gt;&lt;span class="s"&gt; CompileDaemon --build="go build main.go" --command=./main&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To build the docker container from above &lt;code&gt;Dockerfile&lt;/code&gt; use the below command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="go"&gt;docker build -t hello_world :1.0 .
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;containers can be listed out with &lt;code&gt;docker ps -a&lt;/code&gt; on your terminal. You should see containers with other infomation.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;CONTAINER ID   IMAGE                    COMMAND                  CREATED          STATUS                      PORTS     NAMES
62cddf7c2659   hello_world:1.0      &lt;span class="s2"&gt;"/bin/sh -c 'Compile‚Ä¶"&lt;/span&gt;   23 minutes ago   Exited &lt;span class="o"&gt;(&lt;/span&gt;0&lt;span class="o"&gt;)&lt;/span&gt; 23 minutes ago             gifted_kilby
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To spin up the container use the below command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="go"&gt;docker run -p 8000:8000 hello_world:1.0
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;visit &lt;a href="http://localhost:8000/"&gt;http://localhost:8000/&lt;/a&gt; on your browser. You should see &lt;code&gt;{"data":"Hello World !"}&lt;/code&gt;.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#lets-review-docker-commands-mentioned-above-in-dockerfile-"&gt;
  &lt;/a&gt;
  Let‚Äôs Review Docker Commands mentioned above in Dockerfile :
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;FROM&lt;/strong&gt;  :  FROM refers which base image to use for the container. The golang:1.16  image is a Linux-based image which has golang installed and no other additional programs or software.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;WORKDIR&lt;/strong&gt; :  WORKDIR Changes the working directory. In our case to /app. It sets a working directory for subsequent  commands. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;ADD&lt;/strong&gt; :  ADD instruction literally copies the file from one location to another. &lt;code&gt;ADD [SOURCE] [DESTINATION]&lt;/code&gt; is the syntax of the command. Similary, there is also a COPY command for similar purpose. Here, we are copying the go.sum and go.mod file first so that we will have all the libraries installed before copying all the files.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;RUN&lt;/strong&gt; :  RUN instruction will execute any commands in a new layer on top of the current image and commit the results. The resulting committed image will be used for the next step in the Dockerfile.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;EXPOSE&lt;/strong&gt; : EXPOSE instructs that services running on Docker container is available in port 8000.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;ENTRYPOINT&lt;/strong&gt; :  Entrypoint runs the command inside the container once a container is  created from an image. You can only have one Entrypoint instruction in a &lt;code&gt;Dockerfile&lt;/code&gt;. If multiple Entrypoint instructions are used, the last one will be executed. Here, once the container is created, the Entrypoint command will run our golang project.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#setting-up-the-database"&gt;
  &lt;/a&gt;
  Setting Up The Database
&lt;/h3&gt;

&lt;p&gt;MySQL package is needed to connect the database with the application. Install it with following command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="go"&gt;go get gorm.io/driver/mysql gorm.io/gorm
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Gorm&lt;/strong&gt;  is fantastic ORM library for Golang.&lt;br&gt;
As connecting database is essential/building part of application. Let's create a folder &lt;code&gt;infrastructure&lt;/code&gt; and &lt;code&gt;db.go&lt;/code&gt; file inside &lt;code&gt;infrastructure&lt;/code&gt;. Let's write some come inside &lt;code&gt;db.go&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;package&lt;/span&gt; &lt;span class="n"&gt;infrastructure&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;"fmt"&lt;/span&gt;
    &lt;span class="s"&gt;"os"&lt;/span&gt;
    &lt;span class="s"&gt;"time"&lt;/span&gt;
    &lt;span class="s"&gt;"gorm.io/driver/mysql"&lt;/span&gt;
    &lt;span class="s"&gt;"gorm.io/gorm"&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;//Database struct&lt;/span&gt;
&lt;span class="k"&gt;type&lt;/span&gt; &lt;span class="n"&gt;Database&lt;/span&gt; &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;DB&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;gorm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DB&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;//NewDatabase : intializes and returns mysql db&lt;/span&gt;
&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;NewDatabase&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="n"&gt;Database&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;USER&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Getenv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"DB_USER"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;PASS&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Getenv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"DB_PASSWORD"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;HOST&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Getenv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"DB_HOST"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;DBNAME&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Getenv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"DB_NAME"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;URL&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Sprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%s:%s@tcp(%s)/%s?charset=utf8&amp;amp;parseTime=True&amp;amp;loc=Local"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;USER&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;PASS&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="n"&gt;HOST&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;DBNAME&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;URL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;gorm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;URL&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nb"&gt;panic&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Failed to connect to database!"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Database connection established"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Database&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;DB&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Inside &lt;code&gt;NewDatabase&lt;/code&gt; function the following work is being done : &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;database credentials USER, PASS, HOST and DBNAME is fetched from &lt;a href="#environment-variables"&gt;environment variables&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Database url is constructed utilizing environment variables and saving it to &lt;code&gt;URL&lt;/code&gt; variable&lt;/li&gt;
&lt;li&gt;A new &lt;code&gt;mysql&lt;/code&gt; connection is opened with the &lt;code&gt;gorm.Open&lt;/code&gt; method from &lt;code&gt;URL&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Lastly, Database struct is returned with gorm database instance as parameter, which is used later on the application to access the database.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#environment-variables"&gt;
  &lt;/a&gt;
  Environment Variables
&lt;/h3&gt;

&lt;p&gt;There are two type of variables in the project &lt;code&gt;program variables&lt;/code&gt; and &lt;code&gt;environment variables&lt;/code&gt;. Program variables are normal variables that stores values withing the code block or module, where as environment variables is available globally through the project. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#setting-up-environment-variables"&gt;
  &lt;/a&gt;
  Setting Up Environment Variables
&lt;/h4&gt;

&lt;p&gt;Environment variables can be set up using various ways. Here, we will be using &lt;code&gt;.env&lt;/code&gt; file to set them. Create &lt;code&gt;.env&lt;/code&gt; file on the project root and add below variables.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;MYSQL_ROOT_PASSWORD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;root
&lt;span class="nv"&gt;DB_USER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;user
&lt;span class="nv"&gt;DB_PASSWORD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;Password@123
&lt;span class="nv"&gt;DB_HOST&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;db
&lt;span class="nv"&gt;DB_PORT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;3306
&lt;span class="nv"&gt;DB_NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;golang
&lt;span class="nv"&gt;SERVER_PORT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;8000
&lt;span class="nv"&gt;ENVIRONMENT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;local&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#reading-environment-variables"&gt;
  &lt;/a&gt;
  Reading Environment Variables
&lt;/h4&gt;

&lt;p&gt;Now, let's write code to read &lt;code&gt;.env&lt;/code&gt; file. Create a file &lt;code&gt;env.go&lt;/code&gt; in &lt;code&gt;infrastructure&lt;/code&gt; folder and fill up with following code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;package&lt;/span&gt; &lt;span class="n"&gt;infrastructure&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;"log"&lt;/span&gt;
    &lt;span class="s"&gt;"github.com/joho/godotenv"&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;//LoadEnv loads environment variables from .env file&lt;/span&gt;
&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;LoadEnv&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;godotenv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;".env"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Fatalf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"unable to load .env file"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Install godotenv package by following command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="go"&gt;go get github.com/joho/godotenv
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;*&lt;em&gt;In order to load &lt;code&gt;.env&lt;/code&gt; file and database we need to edit &lt;code&gt;main.go&lt;/code&gt; as below *&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="n"&gt;router&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;gin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Default&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="n"&gt;router&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GET&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;gin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;infrastructure&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LoadEnv&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;  &lt;span class="c"&gt;//loading env&lt;/span&gt;
        &lt;span class="n"&gt;infrastructure&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NewDatabase&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c"&gt;//new database connection&lt;/span&gt;
        &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StatusOK&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;gin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;H&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"data"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"Hello World !"&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="n"&gt;router&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;":8000"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#docker-compose-file"&gt;
  &lt;/a&gt;
  Docker Compose file
&lt;/h3&gt;

&lt;p&gt;We need docker compose for defining and running multi-container Docker applications. In our case Database and our Gin application. Create a file &lt;code&gt;docker-compose.yml&lt;/code&gt; at project level and fill up with following code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;3'&lt;/span&gt;
&lt;span class="na"&gt;services&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;db&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;mysql/mysql-server:5.7&lt;/span&gt;
    &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;3305:3306"&lt;/span&gt;
    &lt;span class="na"&gt;environment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}"&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;MYSQL_USER=${DB_USER}"&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;MYSQL_PASSWORD=${DB_PASSWORD}"&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;MYSQL_DATABASE=${DB_NAME}"&lt;/span&gt;   
  &lt;span class="na"&gt;web&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;build&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;.&lt;/span&gt;
    &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;8000:8000"&lt;/span&gt;
    &lt;span class="na"&gt;volumes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;.:/app"&lt;/span&gt;
    &lt;span class="na"&gt;depends_on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;db&lt;/span&gt;
    &lt;span class="na"&gt;links&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;db:database"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let‚Äôs review terms mentioned inside compose file.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;version ‚Äò3‚Äô&lt;/strong&gt;: Docker compose version, Latest is 3.7&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;services&lt;/strong&gt;: The services section defines all the different containers that are to be created. We have two services namely, &lt;code&gt;web&lt;/code&gt; and &lt;code&gt;db&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;web&lt;/strong&gt;: This is the name of our Gin app service. It can be anything. Docker Compose will create containers with this name.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;build&lt;/strong&gt;: This clause specifies the Dockerfile location. &lt;code&gt;.&lt;/code&gt; represents the current directory where the docker-compose.yml file is located and Dockerfile is used to build an image and run the container from it. We can also enter a path to Dockerfile there.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;ports&lt;/strong&gt;: The ports clause is used to map or expose the container ports to the host machine. Here mapping port &lt;code&gt;"8000:8000"&lt;/code&gt; , so that we can access our services on &lt;code&gt;8000&lt;/code&gt; port of host machine.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;volumes&lt;/strong&gt;: Here, we are attaching our code files directory to the containers, ./app directory so that we don‚Äôt have to rebuild the images for every change in the files. This will also help in auto-reloading the server when running in debug mode.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;links&lt;/strong&gt;: Links literally links one service to another. Here, we are linking the database container to the web container, so that our web container can reach the database in the bridge network. (Networking alert !!). Please if you want to learn about network in docker in detail do refer to : Network containers  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;image&lt;/strong&gt;: If we don‚Äôt have a Dockerfile and want to run a service directly using an already built image, we can specify the image location using the ‚Äòimage‚Äô clause. Compose will pull the image and fork a container from it. In our case We mentioned mysql/mysql-server:5.7 to our database service&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;environment&lt;/strong&gt;: Any environment variable that needs to be set up in the container can be created using the ‚Äòenvironment‚Äô clause.&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;   environment:
      - "MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The value &lt;code&gt;${MYSQL_ROOT_PASSWORD}&lt;/code&gt; and other variables are read from &lt;code&gt;.env&lt;/code&gt;.&lt;br&gt;
You are now all set to spin up the containers. Start build and run with the following command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; docker-compose up --build
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you see something like below on your terminal that means, you have server running up:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="go"&gt;db_1   | 2021-05-24T09:18:02.841094Z 0 [Note] Event Scheduler: Loaded 0 events
db_1   | 2021-05-24T09:18:02.841370Z 0 [Note] mysqld: ready for connections.
db_1   | Version: '5.7.34'  socket: '/var/lib/mysql/mysql.sock'  port: 3306  MySQL Community Server (GPL)
web_1  | 2021/05/24 09:18:06 Running build command!
web_1  | 2021/05/24 09:18:17 Build ok.
web_1  | 2021/05/24 09:18:17 Restarting the given command.
web_1  | 2021/05/24 09:18:17 stdout: [GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.
web_1  | 2021/05/24 09:18:17 stdout:
web_1  | 2021/05/24 09:18:17 stdout: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
web_1  | 2021/05/24 09:18:17 stdout:  - using env:      export GIN_MODE=release
web_1  | 2021/05/24 09:18:17 stdout:  - using code:     gin.SetMode(gin.ReleaseMode)
web_1  | 2021/05/24 09:18:17 stdout:
&lt;/span&gt;&lt;span class="gp"&gt;web_1  | 2021/05/24 09:18:17 stdout: [GIN-debug] GET    /                         --&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;main.main.func1 &lt;span class="o"&gt;(&lt;/span&gt;3 handlers&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="go"&gt;web_1  | 2021/05/24 09:18:17 stdout: [GIN-debug] Listening and serving HTTP on :8000
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Navigate to &lt;a href="http://localhost:8000/"&gt;http://localhost:8000/&lt;/a&gt; and check on terminal,  &lt;code&gt;Database connection established&lt;/code&gt; should be printed on standard output.&lt;/p&gt;

&lt;p&gt;The repository of this series can be found &lt;a href="https://github.com/umschaudhary/hashnode-series"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrap-up"&gt;
  &lt;/a&gt;
  Wrap Up
&lt;/h2&gt;

&lt;p&gt;That's it for part 1 of the series.&lt;br&gt;
In the next part we will be working on : &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Adding models (structs) to the application&lt;/li&gt;
&lt;li&gt;Adopting Domain Driven Development pattern&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Make sure to follow me to get the update for the next part or subscribe so that you never miss my upcoming articles. &lt;/p&gt;

&lt;p&gt;Thank you !!&lt;/p&gt;

</description>
      <category>showdev</category>
      <category>docker</category>
      <category>go</category>
      <category>mysql</category>
    </item>
    <item>
      <title>Build a COVID-19 Tracker Application using HTML,CSS and JavaScript [interesting features included]</title>
      <author>The Nerdy Dev</author>
      <pubDate>Tue, 25 May 2021 07:07:43 +0000</pubDate>
      <link>https://dev.to/thenerdydev/build-a-covid-19-tracker-application-using-html-css-and-javascript-interesting-features-included-23ld</link>
      <guid>https://dev.to/thenerdydev/build-a-covid-19-tracker-application-using-html-css-and-javascript-interesting-features-included-23ld</guid>
      <description>&lt;p&gt;Hey everyone üëãüèª,&lt;/p&gt;

&lt;p&gt;In this article, I will show you how you can make a &lt;strong&gt;COVID-19&lt;/strong&gt; Tracker Application with interesting features. To learn how you can create one, check the video provided down below. You can also have a look at the live link of the project that we make in this video.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#images"&gt;
  &lt;/a&gt;
  Images
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D3amNX_U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/dk34v9h3zudzo554vv11.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D3amNX_U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/dk34v9h3zudzo554vv11.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ezipn3kX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/lxp4ldumdhnc8qpmn1dq.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ezipn3kX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/lxp4ldumdhnc8qpmn1dq.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features
&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Clustering of points based on the countries and each cluster will represent a set of locations within it that are prone to COVID19. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Reverse Geocoding using Latitude and Longitude to get the place name and getting the number of deaths and number of confirmed cases for each location that is present within the country. &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Live Link&lt;/strong&gt;: &lt;a href="https://covid2019-tracker.netlify.com/"&gt;https://covid2019-tracker.netlify.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Learn how to make one with same features in this video: &lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/lX0vHaqtk6M"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;üëâüèª &lt;strong&gt;PS&lt;/strong&gt; : I am working on a &lt;strong&gt;BRAND&lt;/strong&gt; new &lt;strong&gt;FREE&lt;/strong&gt;- &lt;strong&gt;Web Developer Full Course&lt;/strong&gt; on YouTube , check the below article to know more about the topics that we cover in this course:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/thenerdydev" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dvgjnxQX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j2i8W0Wf--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/297820/e861379b-e75a-48e5-bc39-44b3e940c086.png" alt="thenerdydev image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/thenerdydev/2021-web-developer-full-course-html-css-javascript-node-js-and-mongodb-27pb" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;(2021) - Web Developer Full Course : HTML, CSS, JavaScript, Node.js and MongoDB&lt;/h2&gt;
      &lt;h3&gt;The Nerdy Dev „Éª Apr 28 „Éª 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#node&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;üëâüèª Follow me on Twitter : &lt;a href="https://twitter.com/The_Nerdy_Dev"&gt;https://twitter.com/The_Nerdy_Dev&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Follow me on:&lt;br&gt;
üëâ Twitter: &lt;a href="https://twitter.com/thenerdydev"&gt;https://twitter.com/thenerdydev&lt;/a&gt;&lt;br&gt;
üëâ YouTube: &lt;a href="https://youtube.com/thenerdydev"&gt;https://youtube.com/thenerdydev&lt;/a&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Understanding Promise.all, Promise.race and Promise.allSettled </title>
      <author>The Nerdy Dev</author>
      <pubDate>Tue, 25 May 2021 07:01:41 +0000</pubDate>
      <link>https://dev.to/thenerdydev/understanding-promise-all-promise-race-and-promise-allsettled-2g1g</link>
      <guid>https://dev.to/thenerdydev/understanding-promise-all-promise-race-and-promise-allsettled-2g1g</guid>
      <description>&lt;p&gt;Hey everyone üëãüèª,&lt;/p&gt;

&lt;p&gt;In this article, let us discuss some very important methods that we have in the Promise API - &lt;strong&gt;Promise.all&lt;/strong&gt;,&lt;strong&gt;Promise.allSettled&lt;/strong&gt;, &lt;strong&gt;Promise.race&lt;/strong&gt;. &lt;br&gt;
So let's start with &lt;strong&gt;Promise.all&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#promiseall"&gt;
  &lt;/a&gt;
  Promise.all
&lt;/h2&gt;

&lt;p&gt;The &lt;strong&gt;Promise.all()&lt;/strong&gt; method takes an &lt;em&gt;iterable of promises&lt;/em&gt; as an input, and returns a single Promise that resolves to an array of the results of the input promises. This returned promise will resolve when all of the input's promises have resolved, or if the input iterable contains no promises. It rejects immediately upon any of the input promises rejecting or non-promises throwing an error, and will reject with this first rejection message / error.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZKxWhrzi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s0iwykriw2238hzwsoqp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZKxWhrzi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s0iwykriw2238hzwsoqp.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://codesandbox.io/embed/8urrd"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#promiseallsettled"&gt;
  &lt;/a&gt;
  Promise.allSettled
&lt;/h2&gt;

&lt;p&gt;The &lt;strong&gt;Promise.allSettled()&lt;/strong&gt; method returns a promise that resolves after all of the given promises have either fulfilled or rejected, with an array of objects that each describes the outcome of each promise.&lt;/p&gt;

&lt;p&gt;It is typically used when you have multiple asynchronous tasks that are not dependent on one another to complete successfully, or you'd always like to know the result of each promise.&lt;/p&gt;

&lt;p&gt;In comparison, the Promise returned by Promise.all() may be more appropriate if the tasks are dependent on each other / if you'd like to immediately reject upon any of them rejecting.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uqx6jyo_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jqszxmvdljcz817uhorj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uqx6jyo_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jqszxmvdljcz817uhorj.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://codesandbox.io/embed/6svwn"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#promiserace"&gt;
  &lt;/a&gt;
  Promise.race
&lt;/h2&gt;

&lt;p&gt;The &lt;strong&gt;Promise.race()&lt;/strong&gt; method returns a promise that fulfills or rejects as soon as one of the promises in an iterable fulfills or rejects, with the value or reason from that promise.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s30sCUZS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/abqfz4jai1fiqqobk206.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s30sCUZS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/abqfz4jai1fiqqobk206.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://codesandbox.io/embed/zol1c"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;So this is it for this article, I do have a video that covers the same with a lot of interesting examples, so feel free to check that : &lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/yVwukhqoThg"&gt;
&lt;/iframe&gt;
 &lt;/p&gt;

&lt;p&gt;If you are looking to learn Web Development, I have curated a &lt;strong&gt;FREE&lt;/strong&gt; course for you on my YouTube Channel, check the below article :&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/thenerdydev" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dvgjnxQX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j2i8W0Wf--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/297820/e861379b-e75a-48e5-bc39-44b3e940c086.png" alt="thenerdydev image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/thenerdydev/2021-web-developer-full-course-html-css-javascript-node-js-and-mongodb-27pb" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;(2021) - Web Developer Full Course : HTML, CSS, JavaScript, Node.js and MongoDB&lt;/h2&gt;
      &lt;h3&gt;The Nerdy Dev „Éª Apr 28 „Éª 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#node&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;If you have spare 2 hours, then utilize them by creating these &lt;strong&gt;10 JavaScript Projects in under 2 Hours&lt;/strong&gt; &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/thenerdydev" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dvgjnxQX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j2i8W0Wf--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/297820/e861379b-e75a-48e5-bc39-44b3e940c086.png" alt="thenerdydev image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/thenerdydev/10-javascript-projects-in-2-hours-3p1c" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;10 JavaScript Projects in 2 Hours&lt;/h2&gt;
      &lt;h3&gt;The Nerdy Dev „Éª Oct 26 '20 „Éª 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;üëâüèª Follow me on Twitter : &lt;a href="https://twitter.com/The_Nerdy_Dev"&gt;https://twitter.com/The_Nerdy_Dev&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;üëâüèª Check out my YouTube Channel : &lt;a href="https://youtube.com/thenerdydev"&gt;https://youtube.com/thenerdydev&lt;/a&gt; &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>100daysofcode</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Generating barcodes in Google Sheets</title>
      <author>Chris Bongers</author>
      <pubDate>Tue, 25 May 2021 06:51:47 +0000</pubDate>
      <link>https://dev.to/dailydevtips1/generating-barcodes-in-google-sheets-5f9o</link>
      <guid>https://dev.to/dailydevtips1/generating-barcodes-in-google-sheets-5f9o</guid>
      <description>&lt;p&gt;We learned &lt;a href="https://daily-dev-tips.com/posts/generating-qr-codes-in-google-sheets/"&gt;how to create QR codes in Google Sheets&lt;/a&gt;, and with that, I thought let me try and see if Barcodes are also possible.&lt;/p&gt;

&lt;p&gt;It turns out it is!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Aiid-WhJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621695874758/yh25BZYHW.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Aiid-WhJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621695874758/yh25BZYHW.gif" alt="Generating barcodes in Google Sheets"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-barcodes-in-google-sheets"&gt;
  &lt;/a&gt;
  Creating barcodes in Google Sheets
&lt;/h2&gt;

&lt;p&gt;To start, let's write the product IDs in column A. This will be our reference point.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HbFVav8V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621695380333/VY0QFIfTR.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HbFVav8V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621695380333/VY0QFIfTR.png" alt="Google Sheets product IDs"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To make a valid barcode, we need to get that value and append two stars (*).&lt;/p&gt;

&lt;p&gt;Let's fix that with a formula in row B.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;="*"&amp;amp;A1&amp;amp;"*"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will take the value from row A and wrap it in the two stars.&lt;br&gt;
Pull down the cells to have it working for all items.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mA9DWmhF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621695505210/A3QrgFxMw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mA9DWmhF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621695505210/A3QrgFxMw.png" alt="Barcode raw"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You might be thinking, ok, but how is this now a barcode?&lt;br&gt;
And the magic is actually in the font we will be using!&lt;/p&gt;

&lt;p&gt;Select row B and click "More fonts" change the font to be "Libre Barcode" there are two options, but we'll use Code 39 for this article.&lt;/p&gt;

&lt;p&gt;You now have barcodes in your Google Sheet.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fNUqBrOJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621695660549/wnc2ZR6EK.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fNUqBrOJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621695660549/wnc2ZR6EK.png" alt="Barcodes in Google Sheet"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Check out my &lt;a href="https://docs.google.com/spreadsheets/d/1TVP2I4RALyl2QxrTlmnvH-yNhUcijJrjZ0gt1DMFbBo/edit?usp=sharing"&gt;Barcode Google Sheet here&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-reading-and-lets-connect"&gt;
  &lt;/a&gt;
  Thank you for reading, and let's connect!
&lt;/h3&gt;

&lt;p&gt;Thank you for reading my blog. Feel free to subscribe to my email newsletter and connect on &lt;a href="https://www.facebook.com/DailyDevTipsBlog"&gt;Facebook&lt;/a&gt; or &lt;a href="https://twitter.com/DailyDevTips1"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>googlecloud</category>
    </item>
    <item>
      <title>5 ways to get 'developer experience'‚Äã when you have none</title>
      <author>Dragos Nedelcu</author>
      <pubDate>Tue, 25 May 2021 06:44:04 +0000</pubDate>
      <link>https://dev.to/dragosgn/5-ways-to-get-developer-experience-when-you-have-none-3m5e</link>
      <guid>https://dev.to/dragosgn/5-ways-to-get-developer-experience-when-you-have-none-3m5e</guid>
      <description>&lt;p&gt;Did it happen again?&lt;/p&gt;

&lt;p&gt;You've already applied to a few jobs. You re-wrote your cv, told all your friends you are looking for a developer job. You even got far with a few companies and passed the technical challenge.&lt;/p&gt;

&lt;p&gt;But, you did not get the job.&lt;/p&gt;

&lt;p&gt;They were looking for someone with a bit more ‚Äúindustry experience. They loved your passion for coding, your determination, and your story. Yet, they decided for a more experienced candidate.&lt;/p&gt;

&lt;p&gt;Here you are again.&lt;/p&gt;

&lt;p&gt;Frustrated and afraid. Afraid you've put hours into hooping your coding skills for nothing. Countless tutorials, Bootcamp assignments, and mini-projects.&lt;/p&gt;

&lt;p&gt;And the worst of it?&lt;/p&gt;

&lt;p&gt;You want to quit.&lt;/p&gt;

&lt;p&gt;Maybe it is the pandemic. Maybe you should wait a bit. Maybe you want to sign up for yet another Bootcamp. Maybe you want to do something more in the "middle" because web-services and databases look way too complicated. Maybe.&lt;/p&gt;

&lt;p&gt;The bad news?&lt;/p&gt;

&lt;p&gt;You can‚Äôt really quit. You‚Äôve come too far. You made new friends, you learned new skills and you bought a new laptop. You are hanging around at meetups and checking the latest JavaScript library every morning at coffee time.&lt;/p&gt;

&lt;p&gt;The good news?&lt;/p&gt;

&lt;p&gt;It is easier than you think.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#to-impress-a-hiring-manager-you-need-to-get-out-of-tutorial-land"&gt;
  &lt;/a&gt;
  To impress a hiring manager, you need to get out of "tutorial land".
&lt;/h3&gt;

&lt;p&gt;You need to show that you've already worked in a developer team and shipped a piece of software. So pull yourself together for now and follow the tips below to get the developer experience that will land you a first job.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-build-things-to-fix-your-world"&gt;
  &lt;/a&gt;
  &lt;strong&gt;1. Build things to fix your world&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Look around, do you like what you see?&lt;/p&gt;

&lt;p&gt;Probably not.&lt;/p&gt;

&lt;p&gt;It is 2020 and the word status is: f**ed up. From Environment to Equality, to Education to Human Rights, there are countless challenges where a developer can help. Pick one you care about and try to solve it with a piece of code.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#you-are-the-cto-now"&gt;
  &lt;/a&gt;
  You are the CTO now.
&lt;/h3&gt;

&lt;p&gt;Put together a few requirements. Build it. Ship it. Deploy it somewhere where others can see it. Ask your friends and family for feedback, iterate, and improve. Add a beautiful README and put it on your Github.&lt;/p&gt;

&lt;p&gt;That‚Äôs what software is all about.&lt;/p&gt;

&lt;p&gt;It is not about web pages. It is not compilers, components, and containers. It is not about platforms and services.&lt;/p&gt;

&lt;p&gt;It is solving real-world problems with pieces of code. Boiling knowledge into executable instructions that a machine can follow and execute upon.&lt;/p&gt;

&lt;p&gt;Pro tip: think big start small. Focus on one feature. You are a beginner and doing this solo. Whatever you do, the wider the scope, the higher the possibility of not shipping. Focus on the most important feature, nothing else.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-the-hackathon-way"&gt;
  &lt;/a&gt;
  &lt;strong&gt;2. The Hackathon way&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Hackathons are more than ‚Äòlittle challenges‚Äô.&lt;/p&gt;

&lt;p&gt;More than a developer‚Äôs wet dream, more than free food and prize money. They are your gateway to new connections, new industries, and a simulation of how developing software really feels like.&lt;/p&gt;

&lt;p&gt;Afraid of deadlines?&lt;/p&gt;

&lt;p&gt;Well, you got 48 hours my coding friend and hanging around the coffee machine or getting that routing in place doesn't really count. Socializing and fixing boilerplate code doesn't win competitions.&lt;/p&gt;

&lt;p&gt;Are you afraid?&lt;/p&gt;

&lt;p&gt;You should be. Will you even find teammates? Will your MVP break on the stage? Will you be able to finish the core features you agreed on? Is the ‚Äúhack‚Äù sexy enough to get the attention of the jury? Will potential investors care?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#a-hackathon-is-like-pressing-the-pedal-on-a-developer-job"&gt;
  &lt;/a&gt;
  A hackathon is like pressing the pedal on a developer job.
&lt;/h3&gt;

&lt;p&gt;Everything you would do in months you have now to do in days. I still join hackathons from time to time. Final pitches still tick my nerves.&lt;/p&gt;

&lt;p&gt;Pro tip: always work on a team. If you are doing the Hackathon in solo mode, or if you only team up with developers having a similar level of experience you miss a huge learning opportunity.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-work-for-free"&gt;
  &lt;/a&gt;
  &lt;strong&gt;3. Work for free&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Dragos, are you freaking kidding me?&lt;/p&gt;

&lt;p&gt;Yes, you read it well. I don‚Äôt want you to starve. I do want you to stretch. Make sure you have enough money for ramen and the leetcode subscription. All extra time should be dedicated to one thing and one thing only: coding. And I said coding, reading about it doesn't count.&lt;/p&gt;

&lt;p&gt;Do you know a friend that needs help with their website?&lt;/p&gt;

&lt;p&gt;Help her out. In the beginning, don't charge anything. You will solve real problems, gain web development experience, and get recommended. Ask them for a referral, ask them if they know someone that could benefit from your skills.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#a-nonpaying-customer-is-still-a-customer"&gt;
  &lt;/a&gt;
  A non-paying customer is still a customer.
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Pro-tip&lt;/strong&gt;: *pro bono means experience, visibility, and recommendations. Make a habit of asking everyone you work with for a short recommendation and a referral. Do it proactively and in a matter of months, you will already have a considerable network that trusts you and your development skills.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-earlystage-startups-looking-for-an-earlystage-developer"&gt;
  &lt;/a&gt;
  &lt;strong&gt;4. Early-stage startups looking for an early-stage developer&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Risky as ****k?&lt;/p&gt;

&lt;p&gt;Yes, but so it is hiring you.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#earlystage-startups-are-your-best-friend-they-hire-anyone-that-will-be-able-to-help-them"&gt;
  &lt;/a&gt;
  Early-stage startups are your best friend. They hire anyone that will be able to help them.
&lt;/h3&gt;

&lt;p&gt;In many cases, they have grant money or seed investors. They might even pay you a modest salary. You will find them usually around universities or at pitching competitions.&lt;/p&gt;

&lt;p&gt;They are always looking for techies.&lt;/p&gt;

&lt;p&gt;If they already have a CTO, that person probably needs some help. If the project goes well, you will get hired. If not, startup co-founders usually have tons of connections. They will help you find the next opportunity.&lt;/p&gt;

&lt;p&gt;Pro-tip: try to stick around more than a couple of months but time box your dedication. If the project do-sent take off within your timeline, explore options, and be honest with your co-founders. They will appreciate it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-open-source-without-coding"&gt;
  &lt;/a&gt;
  &lt;strong&gt;5. Open source without coding&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Wait, what?&lt;/p&gt;

&lt;p&gt;Terrifying I know. By now you probably have inspected the source code of your most beloved libraries. And it probably took you a few seconds to close the browser tab because it felt like JavaScript but more like Mandarin. I mean you barely get your own app to compile.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#you-are-no-linus-torvalds-yet-you-dont-need-to-be-one"&gt;
  &lt;/a&gt;
  You are no Linus Torvalds, yet you don‚Äôt need to be one.
&lt;/h3&gt;

&lt;p&gt;What does ‚Äúcontributing‚Äù mean to you?&lt;/p&gt;

&lt;p&gt;To me is about making thighs happen. Is a lot about developing, yes, but also about documenting, reporting, managing issues, and being available. And that my aspiring developer friend, that I bet you can do.&lt;/p&gt;

&lt;p&gt;The catch here is you can get involved by doing parallel tasks. With time you might even get the chance to pair program with some of those ‚Äòsenior‚Äô contributors. And why not, you might also get the attention of companies building on top of that open source project.&lt;/p&gt;

&lt;p&gt;Pro-tip: search companies that rely heavily on open source code in their products. They are usually small SAAS companies that were founded basically on top of that specific technology. They want to scale it, get it too big markets, and hire some great engineers on the way. Make sure you chat them up after stalking their GitHub account.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#are-you-still-with-me"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Are you still with me?&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;To be honest, this is no guarantee of success.&lt;/p&gt;

&lt;p&gt;You will still get rejected.&lt;/p&gt;

&lt;p&gt;You will still procrastinate and get distracted sometimes.&lt;/p&gt;

&lt;p&gt;You will still want to quit at some point.&lt;/p&gt;

&lt;p&gt;And you will go back to coding.&lt;/p&gt;

&lt;p&gt;So, don't just read another article and go about your day.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#i-challenge-you-to-take-action"&gt;
  &lt;/a&gt;
  &lt;strong&gt;I challenge you to take action.&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;I challenge you to pick one tip and implement it. And I challenge you to do it now.&lt;/p&gt;

&lt;p&gt;The good news is getting ‚Äúdeveloper experience‚Äù is totally doable. Use this to guide your efforts.&lt;/p&gt;

&lt;p&gt;You will pass that interview.&lt;/p&gt;

&lt;p&gt;And you will get that job.&lt;/p&gt;

&lt;p&gt;But, for now, go back to your code editor.&lt;/p&gt;

&lt;p&gt;You have work to do.&lt;/p&gt;

&lt;p&gt;If you want results immediately, then I have a suggestion for you: get in touch with my team. You can apply for a &lt;strong&gt;FREE initial consultation&lt;/strong&gt; where we will go over the details of each step via Zoom.&lt;/p&gt;

&lt;p&gt;In this call, me or one of my colleagues will give you every single step that we go through with our clients once they book our program to fast track their growth as a developer.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#click-here-now-if-you-want-to-reach-technical-excellence"&gt;
  &lt;/a&gt;
  &lt;a href="//codewithdragos.com"&gt;&lt;strong&gt;Click here now if you want to reach technical excellence!&lt;/strong&gt;&lt;/a&gt;
&lt;/h3&gt;

</description>
      <category>beginners</category>
      <category>webdev</category>
      <category>programming</category>
      <category>productivity</category>
    </item>
    <item>
      <title>How to compare the values of two JavaScript objects?</title>
      <author>Dylan Britz</author>
      <pubDate>Tue, 25 May 2021 06:38:20 +0000</pubDate>
      <link>https://dev.to/britzdylan/how-to-compare-the-values-of-two-javascript-objects-ikf</link>
      <guid>https://dev.to/britzdylan/how-to-compare-the-values-of-two-javascript-objects-ikf</guid>
      <description>&lt;p&gt;When it comes to comparing Javascript variables it is very easy, a simple statement like this will do the job:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;doSomething&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What if you want to compare to objects? Why not just do this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;myObject&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;yourObject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;doSomething&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Well, that will not work because the if statement will always return false even if the objects are exactly the same! Why is this?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#here-is-why-primitive-types-vs-reference-types"&gt;
  &lt;/a&gt;
  Here is why: Primitive Types vs Reference Types.
&lt;/h2&gt;

&lt;p&gt;In Javascript, we have two types of memory allocation. I won't go into details you can read more about it &lt;a href="https://www.javascripttutorial.net/javascript-primitive-vs-reference-values/"&gt;here&lt;/a&gt;. I will stick to the simple answer:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The primitive types&lt;/strong&gt;, keeping it simple, are number, string, boolean, undefined and null. A full list can be found &lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/Primitive"&gt;here&lt;/a&gt;. When you create a primitive type, the value and the reference is stored in the memory. So whenever you compare two primitive types the actual value gets compared.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reference types&lt;/strong&gt;, to keep it simple, are Objects, Functions and Arrays. Collectively known as objects. More information can be found &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures"&gt;here&lt;/a&gt;.  When you create a reference type, the value and the reference is stored in the memory. However, when you compare two reference types the actual value &lt;strong&gt;does not&lt;/strong&gt; get compared, only the reference to the memory location.&lt;/p&gt;

&lt;p&gt;So back to our question: how do you compare the values of two JavaScript objects?&lt;/p&gt;

&lt;p&gt;So now if you do the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;myObject&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Dylan&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;yourObject&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Dylan&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;myObject&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;yourObject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;doSomethig&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;//always returns false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This happens because the variables are only pointing to the memory location, and they are stored in two different locations. &lt;strong&gt;Meaning they are not the same!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;How do we work around this?&lt;/p&gt;

&lt;p&gt;The answer might surprise you!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;myObject&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Dylan&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;yourObject&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Dylan&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;myObject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;yourObject&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;doSomethig&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;//always returns true&lt;/span&gt;

&lt;span class="c1"&gt;//OR&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;myObject&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Dylan&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;yourObject&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Mike&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;myObject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;yourObject&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;doSomethig&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;//always returns false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;See what we did there? We simply turned both objects into strings, meaning primitive types, so now the equality operator will work as intended.&lt;/p&gt;

&lt;p&gt;Viola!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#side-note"&gt;
  &lt;/a&gt;
  Side Note:
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;myObject&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Dylan&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;yourObject&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;myObject&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;yourobject&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Mike&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;myObject&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;yourObject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;doSomethig&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;//always returns true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above piece of code will always return true when comparing the two objects, because directly assigning two object to one another will point both of them to the same memory location! Thus myObject name value will also change.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>tutorial</category>
      <category>oop</category>
    </item>
    <item>
      <title>6 Dark Mode color palettes with examples , CSS and the Figma file. </title>
      <author>michael-andreuzza</author>
      <pubDate>Tue, 25 May 2021 06:38:10 +0000</pubDate>
      <link>https://dev.to/michaelandreuzza/6-dark-mode-color-palettes-with-examples-css-and-the-figma-file-27he</link>
      <guid>https://dev.to/michaelandreuzza/6-dark-mode-color-palettes-with-examples-css-and-the-figma-file-27he</guid>
      <description>&lt;h3&gt;
  &lt;a href="#hello-everyone"&gt;
  &lt;/a&gt;
  Hello everyone
&lt;/h3&gt;

&lt;p&gt;Well, I am a huge fan of Darkmode and I build &lt;a href="https://michaelandreuzza.com/"&gt;my sites&lt;/a&gt; as much as it goes using a dark color scheme.&lt;/p&gt;

&lt;p&gt;Taking this into acccount, I also enjoy a nice bright color palette, in fact some of pthe rojects I made I just redesigned them with a bright color palette.&lt;/p&gt;

&lt;p&gt;It's important to know &lt;strong&gt;when&lt;/strong&gt;, &lt;strong&gt;where&lt;/strong&gt; and &lt;strong&gt;how&lt;/strong&gt; to use a dark color scheme, is not just because you want to use it, but &lt;strong&gt;who&lt;/strong&gt; and &lt;strong&gt;how&lt;/strong&gt; is going to use it. Also, is it even neeeded? Maybe not...&lt;/p&gt;

&lt;p&gt;Well let's have a look to some color palettes and how they have been used.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#this-is-the-figma-file"&gt;
  &lt;/a&gt;
  This is the &lt;a href="https://www.figma.com/community/file/978907813966987941"&gt;Figma file&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;BTW, if you want some color inspiration, I am still working on &lt;a href="https://www.colorsandfonts.com/"&gt;colorsandfonts&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If there is anything you wonder, please let me know here or on &lt;a href="https://twitter.com/Mike_Andreuzza"&gt;Twitter&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#big-mail"&gt;
  &lt;/a&gt;
  &lt;a href="https://getbigmail.com/"&gt;Big Mail&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XgeGJpsS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5bpp2uu980ve5z41oiim.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XgeGJpsS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5bpp2uu980ve5z41oiim.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;/* CSS HEX */&lt;br&gt;
--eerie-black: #141414ff;&lt;br&gt;
--jet: #373737ff;&lt;br&gt;
--white: #ffffffff;&lt;br&gt;
--rajah: #faa549ff;&lt;br&gt;
--tart-orange: #f2564fff;&lt;br&gt;
--light-steel-blue: #b7d0f1ff;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#hourly-app"&gt;
  &lt;/a&gt;
  &lt;a href="http://hourly-app.com/"&gt;Hourly App&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---K0NBi-y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s9jdleoii7pia53opdap.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---K0NBi-y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s9jdleoii7pia53opdap.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;/* CSS HEX */&lt;br&gt;
--rich-black-fogra-39: #0a0a0aff;&lt;br&gt;
--eerie-black: #1a181aff;&lt;br&gt;
--davys-grey: #505050ff;&lt;br&gt;
--persian-red: #d1342fff;&lt;br&gt;
--black-olive: #434038ff;&lt;br&gt;
--dutch-white: #eee3c1ff;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#vercel"&gt;
  &lt;/a&gt;
  &lt;a href="https://vercel.com/"&gt;Vercel&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0fHGM1pT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u8xv4d5y4t7pxz8i6t0z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0fHGM1pT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u8xv4d5y4t7pxz8i6t0z.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;/* CSS HEX */&lt;br&gt;
--black: #000000ff;&lt;br&gt;
--rich-black-fogra-39: #111111ff;&lt;br&gt;
--jet: #333333ff;&lt;br&gt;
--white: #ffffffff;&lt;br&gt;
--flickr-blue: #0761d1ff;&lt;br&gt;
--french-rose: #ea558dff;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#wickedtemplates"&gt;
  &lt;/a&gt;
  &lt;a href="https://wickedtemplates.com/"&gt;wickedtemplates&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zpzyycjv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hz49oog6y67r6gr0km0k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zpzyycjv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hz49oog6y67r6gr0km0k.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;/* CSS HEX */&lt;br&gt;
--rich-black-fogra-39: #111213ff;&lt;br&gt;
--eerie-black: #212224ff;&lt;br&gt;
--quick-silver: #a1a1a1ff;&lt;br&gt;
--white: #ffffffff;&lt;br&gt;
--blue-crayola: #2f71e8ff;&lt;br&gt;
--cyan-process: #29b9f0ff;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#laws-of-ux"&gt;
  &lt;/a&gt;
  &lt;a href="https://lawsofux.com/"&gt;Laws Of UX&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e1pGAoHE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/89xf8czzhofnve73tgg9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e1pGAoHE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/89xf8czzhofnve73tgg9.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;/* CSS HEX */&lt;br&gt;
--rich-black-fogra-39: #0c0c0fff;&lt;br&gt;
--rich-black-fogra-39-2: #101014ff;&lt;br&gt;
--white: #ffffffff;&lt;br&gt;
--independence: #475977ff;&lt;br&gt;
--magenta-haze: #963d72ff;&lt;br&gt;
--sap-green: #537a34ff;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#remotecamp"&gt;
  &lt;/a&gt;
  &lt;a href="https://remotecamp.io/"&gt;RemoteCamp&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2eO6Vi9S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2hbu6iewval47kl236c4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2eO6Vi9S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2hbu6iewval47kl236c4.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;/* CSS HEX */&lt;br&gt;
--oxford-blue: #080c24ff;&lt;br&gt;
--oxford-blue-2: #151e34ff;&lt;br&gt;
--blue-crayola: #3071e8ff;&lt;br&gt;
--white: #ffffffff;&lt;br&gt;
--maximum-blue-purple: #a6b2ebff;&lt;br&gt;
--celadon-blue: #1f7ea7ff;&lt;/p&gt;

&lt;p&gt;Well, this is the end...&lt;/p&gt;

&lt;p&gt;Hope you guys like it.&lt;/p&gt;

</description>
      <category>uiweekly</category>
      <category>ux</category>
      <category>css</category>
      <category>productivity</category>
    </item>
    <item>
      <title>UI Dev Newsletter #58</title>
      <author>Silvestar Bistroviƒá</author>
      <pubDate>Tue, 25 May 2021 06:33:35 +0000</pubDate>
      <link>https://dev.to/starbist/ui-dev-newsletter-58-2lo0</link>
      <guid>https://dev.to/starbist/ui-dev-newsletter-58-2lo0</guid>
      <description>&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://bit.ly/3yzSrp6"&gt;Learn CSS&lt;/a&gt;&lt;br&gt;
Google's evergreen CSS course and reference to level up your web styling expertise.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://bit.ly/3fDdG0D"&gt;Microsoft is finally retiring Internet Explorer in 2022&lt;/a&gt;&lt;br&gt;
Internet Explorer will no longer be supported in June 2022.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://bit.ly/2SkhbkA"&gt;Fun Animated Button Hover Effect In CSS&lt;/a&gt;&lt;br&gt;
Aphinya Dechalert explains how to create --fun-- hover effect using transitions and pseudo elements.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://bit.ly/2QNM94s"&gt;Add scroll margin to all elements which can be targeted&lt;/a&gt;&lt;br&gt;
Andy Bell shows how to add an extra bit of space to targeted elements using 'scroll-margin-top' property.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://bit.ly/3c5G6Qf"&gt;136 facts every web dev should know before they burn out and turn to landscape painting or nude modelling&lt;/a&gt;&lt;br&gt;
Baldur Bjarnason shares a list of everything he learned about web development in the almost twenty-five years of practise.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://bit.ly/3yvriUv"&gt;Advanced CSS Animation Using cubic-bezier()&lt;/a&gt;&lt;br&gt;
Temani Afif explains how to use custom timing functions and a bit of math to do fancy animations without the complex keyframes we generally reach for.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://bit.ly/3yvTw1i"&gt;A Love Letter to HTML &amp;amp; CSS&lt;/a&gt;&lt;br&gt;
Ashley Kolodziej writes a letter of appreciation for HTML and CSS, the two most neglected, yet integral heros of modern web technology.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://bit.ly/2RHvMqv"&gt;To those who struggle to get perfect score in Page Speed Insights. YNWA.&lt;/a&gt;&lt;br&gt;
Google homepage score is far from perfect.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Happy coding!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/34155z3"&gt;Subscribe to the newsletter here!&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
    </item>
    <item>
      <title>One of my JavaScript videos crossed 40k views on YouTube...</title>
      <author>The Nerdy Dev</author>
      <pubDate>Tue, 25 May 2021 06:33:17 +0000</pubDate>
      <link>https://dev.to/thenerdydev/one-of-my-javascript-videos-crossed-40k-views-on-youtube-373</link>
      <guid>https://dev.to/thenerdydev/one-of-my-javascript-videos-crossed-40k-views-on-youtube-373</guid>
      <description>&lt;p&gt;Hey guys, &lt;/p&gt;

&lt;p&gt;As the title of this article says, I felt so good to see that one of my videos was able to cross &lt;strong&gt;40k&lt;/strong&gt; views on YouTube and of course it is a video on Web Development. &lt;/p&gt;

&lt;p&gt;As you all know by now, I create content on programming and web technologies like JavaScript, Vue, React, Python, Machine Learning and more...&lt;/p&gt;

&lt;p&gt;So, let me reveal the video that got me these many views &lt;br&gt;
.&lt;br&gt;
.&lt;br&gt;
.&lt;br&gt;
.&lt;br&gt;
.&lt;br&gt;
.&lt;br&gt;
.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#10-javascript-projects-in-2-hours"&gt;
  &lt;/a&gt;
  10 JavaScript Projects in 2 Hours
&lt;/h2&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/KTGfHmyje5A"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;üëâüèª &lt;strong&gt;PS&lt;/strong&gt; : I am working on a &lt;strong&gt;BRAND&lt;/strong&gt; new &lt;strong&gt;FREE&lt;/strong&gt;- &lt;strong&gt;Web Developer Full Course&lt;/strong&gt; on YouTube , check the below article to know more about the topics that we cover in this course:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/thenerdydev" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dvgjnxQX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j2i8W0Wf--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/297820/e861379b-e75a-48e5-bc39-44b3e940c086.png" alt="thenerdydev image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/thenerdydev/2021-web-developer-full-course-html-css-javascript-node-js-and-mongodb-27pb" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;(2021) - Web Developer Full Course : HTML, CSS, JavaScript, Node.js and MongoDB&lt;/h2&gt;
      &lt;h3&gt;The Nerdy Dev „Éª Apr 28 „Éª 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#node&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;üëâüèª Follow me on Twitter : &lt;a href="https://twitter.com/The_Nerdy_Dev"&gt;https://twitter.com/The_Nerdy_Dev&lt;/a&gt; &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>100daysofcode</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>How To Make Your First Contribution As a Beginner In Open Source</title>
      <author>Shatakshi Gupta</author>
      <pubDate>Tue, 25 May 2021 06:09:00 +0000</pubDate>
      <link>https://dev.to/shatakshiigupta/how-to-make-your-first-contribution-as-a-beginner-in-open-source-5hkf</link>
      <guid>https://dev.to/shatakshiigupta/how-to-make-your-first-contribution-as-a-beginner-in-open-source-5hkf</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PWLIdPxt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b6qu52mg7gteock8at73.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PWLIdPxt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b6qu52mg7gteock8at73.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Open Source is very powerful that is encouraging and empowering, but students today are not really aware of what power the Open Source world really holds, how motivating the community is, and what opportunities it brings as most of the students do not know much about Open Source and how engaging the community is.&lt;br&gt;
If you are here then Kudos to you for making your first step into the amazing Open Source world.üëè&lt;/p&gt;

&lt;p&gt;Now with no more delays let's get right into what Open Source really is, how inspiring the community is, what all opportunities it brings to students and how you also can make a little change to the community and empower others too.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-open-source"&gt;
  &lt;/a&gt;
  What is Open Source?
&lt;/h2&gt;

&lt;p&gt;Open Source, when you think of this term what might come to your mind is anything that is freely available, well that's what it exactly is. &lt;br&gt;
Open Source can be explained as source code of any software that you might be currently using or will be using in the near future as the Open Source thing is only going to grow more and more and which is made available to everyone so that every single one of us can have a look, help making it better if we think that particular software is missing this feature and if we add that feature to it then the software would become much more better than before.&lt;br&gt;
So, I hope you got a little idea of how things work in Open Source world.&lt;br&gt;
Some of the most commonly used open source softwares are Mozilla Firefox, VLC Media player, Image editing tool Gimp and the list is simply endless. &lt;br&gt;
As now we have known so much about open source let's get right into how you can help make a change and make your first contribution.&lt;/p&gt;

&lt;p&gt;If you know about Open Source I believe that you might be aware of GitHub to, but if do not let's know a bit about Git and GitHub to.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#what-is-git"&gt;
  &lt;/a&gt;
  What is Git?
&lt;/h3&gt;

&lt;p&gt;Git is a version control system that lets you manage and keep track of your source code history.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-github"&gt;
  &lt;/a&gt;
  What is GitHub?
&lt;/h3&gt;

&lt;p&gt;GitHub is a web-based Git version control &lt;a href="https://www.javatpoint.com/git-repository"&gt;repository&lt;/a&gt; hosting service. GitHub provides all the functionalities of Git along with some of its own features as well.&lt;/p&gt;

&lt;p&gt;Now we will be covering some steps so that you can download Git on your system and get started to contributing to your first repository.&lt;/p&gt;

&lt;p&gt;We will be downloading Git bash, through Git bash you will be able to type Git commands that make source code management easier through versioning and commit history.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-1"&gt;
  &lt;/a&gt;
  Step 1
&lt;/h3&gt;

&lt;p&gt;Download Git on your system from &lt;a href="https://git-scm.com/downloads"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-2"&gt;
  &lt;/a&gt;
  Step 2
&lt;/h3&gt;

&lt;p&gt;After downloading, you need install it on your system. So for installation click on run then click on next, after that do not change the Destination location and simply click on next, after that while selecting components check the boxes with 'In the Quick Launch' and 'On the desktop'. After that keep on clicking next.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-3"&gt;
  &lt;/a&gt;
  Step 3
&lt;/h3&gt;

&lt;p&gt;After installation, uncheck the box with 'View release notes' and check the one with 'Launch Git bash'&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting started
&lt;/h3&gt;

&lt;p&gt;To get involved with Open source projects you need to have a basic understanding of how git commands work and how one has to use those commands to make a valuable contribution.&lt;/p&gt;

&lt;p&gt;Reference for git commands:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.hostinger.in/tutorials/basic-git-commands"&gt;git commands for beginners&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.simplilearn.com/tutorials/git-tutorial/git-commands"&gt;Quick reference for git command lines by Simplilearn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://confluence.atlassian.com/bitbucketserver/basic-git-commands-776639767.html"&gt;Basic git commands&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#contributing"&gt;
  &lt;/a&gt;
  Contributing
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#1-choose-a-project-that-interests-you"&gt;
  &lt;/a&gt;
  1. Choose a project that interests you
&lt;/h4&gt;

&lt;p&gt;This is the most crucial and salient part of your contribution. You need to find a project that interests you and that matches your skillset. And this need not to be a very large contribution. For someone who is just starting with open source it is highly recommended to start with Fixing typos, modifying documentation files in large and even small projects. Well as of now if you are reading this you might be looking to contribute as a beginner. &lt;a href="https://github.com/firstcontributions/first-contributions"&gt;first-contributions&lt;/a&gt; can prove to be a really good start for you. &lt;a href="https://github.com/EddieHubCommunity/hacktoberfest-practice"&gt;Hacktoberfest-practice&lt;/a&gt; and &lt;a href="https://github.com/MunGell/awesome-for-beginners"&gt;awesome-for-beginners&lt;/a&gt; can really help you as well.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#finding-a-project"&gt;
  &lt;/a&gt;
  Finding a project
&lt;/h4&gt;

&lt;p&gt;You can filter the issues tab according to your skillset let's suppose you have basic knowledge of Java and you want to contribute to projects written in Java language then you can search good first issues by going to the issues tab and searching the issues with labels like 'label:"good first issue" ' and 'language:Java'&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9cztD_bY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g4bvr6rrvi2emymm3e7r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9cztD_bY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g4bvr6rrvi2emymm3e7r.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In a similar manner you can filter issues by replacing 'good first issues' with 'first-timers-only', 'beginner', 'good-first-bug' and 'easy'.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#2-forking-the-project"&gt;
  &lt;/a&gt;
  2. Forking the project
&lt;/h4&gt;

&lt;p&gt;Fork will create a copy of the repository in your GitHub account so that you can make changes to the project.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AGj4drYO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/34gyvlrsneal8hk0xehh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AGj4drYO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/34gyvlrsneal8hk0xehh.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#3-cloning-the-project"&gt;
  &lt;/a&gt;
  3. Cloning the project
&lt;/h4&gt;

&lt;p&gt;Go to your own GitHub account and there you will see a forked version of that project under your account. Now click into this repository that is forked and and we will make a copy of it on your machine by hitting the code button.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HY8U5U0L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nm534wc53idklbpu0yo0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HY8U5U0L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nm534wc53idklbpu0yo0.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Copy the &lt;strong&gt;HTTPS URL&lt;/strong&gt;.&lt;br&gt;
Open your terminal or git bash window.&lt;/p&gt;

&lt;p&gt;Move to the location on your computer where you want to create a copy of this project.&lt;/p&gt;

&lt;p&gt;Run the following command:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git clone https://github.com/userid/first-contributions.git&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Substitute your GitHub username for userid.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You now have a local copy on your computer.&lt;/p&gt;

&lt;p&gt;The folder on your computer will have the same name as the remote repository on Github.&lt;/p&gt;

&lt;p&gt;Create a new branch named by running the following command:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git checkout -b add-your-name&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;cd into &lt;strong&gt;first-contributions&lt;/strong&gt;.&lt;br&gt;
Then cd into &lt;strong&gt;Contributors&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Now open the Contributors file in your Text editor. &lt;/p&gt;

&lt;p&gt;Add your name alphabetically into the file along with your GitHub profile URL.&lt;/p&gt;

&lt;p&gt;Now run &lt;code&gt;git status&lt;/code&gt; in the terminal&lt;/p&gt;

&lt;p&gt;You should see this: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3w8JvLcv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ngiw6l8din8nvc9jafp2.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3w8JvLcv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ngiw6l8din8nvc9jafp2.JPG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Changes that you made need to be staged and committed. &lt;br&gt;
So to add your changes run the following:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git add .&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now your changes have been added and you are needed to commit your changes and push it to your remote repository that is on your GitHub account. &lt;/p&gt;

&lt;p&gt;To commit your changes run the following:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git commit -m "add-your-name-to-contributors-list&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;It is always important to write a good commit message while working in large codebase projects. So there you have to take care of writing an explainable and not too long message that describes what your contribution fixes and which can be easily understood by the maintainers of the project.&lt;/p&gt;

&lt;p&gt;Now you have to push your changes to your remote repository so run the following command:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git push origin branch-name&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;When you will head over to your GitHub account you will be able to see a message with &lt;strong&gt;compare and pull request&lt;/strong&gt; button. &lt;br&gt;
Click on the button and now you will be creating a pull request that will be visible to maintainers of the project. &lt;/p&gt;

&lt;p&gt;After that click on &lt;code&gt;create pull request&lt;/code&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aU8f3Wsc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4qi0796np3vla1adypk5.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aU8f3Wsc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4qi0796np3vla1adypk5.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Yay!!!üéâ You just created your first pull request.&lt;br&gt;
Thanks for following along. You are awesome and I am so proud of you!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; While contributing to any large codebase project or even smaller you can always ask your doubts in Slack channels, mailing lists that are there to help you.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---PxxlRxb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ct12v1zdski2apxad8o8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---PxxlRxb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ct12v1zdski2apxad8o8.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Open Source community is really encouraging and inspiring and inclusive so if you ever feel overwhelmed about such large projects that you want to contribute to you can always ask your doubts and queries in mailing lists and slack channels. &lt;br&gt;
Remember do not give up ever, people in different groups are more than happy to help solve your queries and all you got to  do is  reach out to them and explain your query.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you have followed along then Congratulations üéâ on starting your Open Source journey because that is really awesome and I really appreciate your efforts.&lt;/p&gt;

&lt;p&gt;Also mentioning some other resources that will help you in your Open Source, programming journey and the amazing Computer Science Field :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/channel/UCfv8cds8AfIM3UZtAWOz6Gg"&gt;Code for Cause&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/user/mycodeschool"&gt;My Code School&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/channel/UCJskGeByzRRSvmOyZOz61ig"&gt;take U forward&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/channel/UCQHLxxBFrbfdrk1jF0moTpw"&gt;Love Babbar&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Hope you found this helpful. If you did then do share this with people who are beginners like you and want to make their first contribution in Open source.&lt;/p&gt;

&lt;p&gt;Thanks for reading and hope you have a great day!!üòÉ&lt;/p&gt;

&lt;p&gt;Say Hello! &lt;a href="https://twitter.com/shatakshiigupta"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>beginners</category>
      <category>community</category>
    </item>
    <item>
      <title>Why is a Financial Plan Template Important?</title>
      <author>Lellith Garcia</author>
      <pubDate>Tue, 25 May 2021 05:15:54 +0000</pubDate>
      <link>https://dev.to/lellithg/why-is-a-financial-plan-template-important-132b</link>
      <guid>https://dev.to/lellithg/why-is-a-financial-plan-template-important-132b</guid>
      <description>&lt;p&gt;&lt;a href="https://www.efinancialmodels.com/downloads/tag/financial-planning/"&gt;A financial plan is a financial tool&lt;/a&gt; you can utilize both for business and personal use. It helps set priorities towards financial freedom and growing a business. Companies which want to achieve specific financial goals utilize financial plan before making business decisions. &lt;br&gt;
Preparing a financial plan serves as a guide for the company‚Äôs management and employees. It makes the company‚Äôs financial objective more tangible and encourages employees to achieve those goals. &lt;/p&gt;

&lt;p&gt;5 Major Aspects of a Financial Plan Template&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Sales Forecast&lt;br&gt;
Forecasting sales targets company earnings and work hard to achieve those targets. It helps align the company‚Äôs action toward achieving the set goals. To project sales, you need to identify your market demand, capacity to produce and sell prices. Setting short-term and long-term sales forecasts will help you reach the target faster. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Estimating Expenses&lt;br&gt;
Preparing proper estimates of your expenses to help measure your capacity to finance the business. It can also aid you in finding backup funding sources in times of significant cash outflows. Projecting expenses can get you out of trouble when unusual expenses happen.  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Personnel Plan&lt;br&gt;
When you are starting, there might not be a need to hire workers. However, as the company grows, you need more people to attend to your business and additional customers or clients. To ensure that you can hire the best-fitting personnel, you need to provide competitive salaries and benefits to your employees. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Financial Statements&lt;br&gt;
Financial statements are composed of the income statement, balance sheet, and cash statement. The income statement projects revenues and expenses and shows accounting profitability. The balance sheet constitutes assets, liabilities, and owner‚Äôs equity. The cash flow statement presents all the cash transactions and assesses the company‚Äôs capacity to meet day-to-day financial transactions.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Financial Analysis&lt;br&gt;
Financial analysis is a helpful tool to understand better the figure in the financial statements. Financial ratios such as profitability ratios, liquidity ratios, growth ratios, and leverage ratios utilize different aspects of the income statement, cash flow, and balance sheet to make an in-depth analysis of financial transactions and projections.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://www.efinancialmodels.com/downloads/tag/financial-planning/"&gt;Preparing a financial plan&lt;/a&gt; provides a significant impact on your company‚Äôs goal setting and achieving those goals. It makes your plans more concrete and achievable. There are available financial plan templates online fitted to your business that you can utilize. These financial plan templates help you save time and resources compared to preparing from scratch.&lt;/p&gt;

</description>
      <category>financialmodeltemplatesexcel</category>
      <category>financialplantemplates</category>
      <category>financialmodeltemplates</category>
      <category>financialmodelexceltemplates</category>
    </item>
  </channel>
</rss>
