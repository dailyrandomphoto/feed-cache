<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>The Richest Man in Babylon by George S Clason</title>
      <author>Sandor Dargo</author>
      <pubDate>Sat, 03 Jul 2021 20:10:02 +0000</pubDate>
      <link>https://dev.to/sandordargo/the-richest-man-in-babylon-by-george-s-clason-292a</link>
      <guid>https://dev.to/sandordargo/the-richest-man-in-babylon-by-george-s-clason-292a</guid>
      <description>&lt;p&gt;&lt;a href="https://www.amazon.com/gp/product/1939438632/ref=as_li_qf_asin_il_tl?ie=UTF8&amp;amp;tag=sandordargo-20&amp;amp;creative=9325&amp;amp;linkCode=as2&amp;amp;creativeASIN=1939438632&amp;amp;linkId=f075962475cbe35d1a89d6e11310dd09"&gt;The Richest Man in Babylon&lt;/a&gt; was first published in 1926, almost one hundred years ago. We might think about it as the father of all modern personal finance advice books.&lt;/p&gt;

&lt;p&gt;Especially if we consider that it's based on a collection of parables that were written 4,000 years ago in the ancient city of Babylon, the richest city in that world.&lt;/p&gt;

&lt;p&gt;They understood some basic correlations that many still get wrong. Now, let's see some of the main ideas.&lt;/p&gt;

&lt;p&gt;IMG BABYLON&lt;/p&gt;

&lt;p&gt;If you are dedicated you can read the book in one afternoon, it's only about 120 pages. Due to obvious reasons, I'm only going to highlight 2 sets of rules and a story.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#seven-cures-for-a-lean-purse"&gt;
  &lt;/a&gt;
  Seven cures for a lean purse
&lt;/h2&gt;

&lt;p&gt;When Sargon, the King of Babylon returned from war, he saw that his people couldn't support themselves.&lt;/p&gt;

&lt;p&gt;As a cure, he ordered the richest man in Babylon, Arkad, to teach people how to acquire money.&lt;/p&gt;

&lt;p&gt;Arkad gladly accepted the order - I guess it was better than losing his head - and he shared the 7 following rules:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#start-thy-purse-fattening"&gt;
  &lt;/a&gt;
  Start thy purse fattening
&lt;/h3&gt;

&lt;p&gt;No matter how small money you earn, always pay yourself first in the sense that you save 10%.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#control-thy-expenditures"&gt;
  &lt;/a&gt;
  Control thy expenditures
&lt;/h3&gt;

&lt;p&gt;It really comes from the previous point that you should not spend more than what you have. In fact, you should not spend more than 90% of your income. This is so easy, but if you just think about all the consumer credits, so many people don't get it right.&lt;/p&gt;

&lt;p&gt;And there is another thought that is worth pondering:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;"Confuse not the necessary expenses with thy desires."&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Yes, we want many things, but that's not our necessity. It's not necessary to have the latest smartphone, to have takeaway lunches or even to live in a relatively spacious apartment. It's good if you can afford that, but don't spend more than you have...&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#make-thy-gold-multiply"&gt;
  &lt;/a&gt;
  Make thy gold multiply
&lt;/h3&gt;

&lt;p&gt;Saving 10% of what you earn is great, but it will only take you so far. You also have to invest the money, so that it will also earn and start to grow your savings with the help of compound interest.&lt;/p&gt;

&lt;p&gt;Let's say that for 10 years you save $10 a month. By the end of the 120 months, you will have $1,200.&lt;/p&gt;

&lt;p&gt;With a 3% interest that money would become $1,400, but with a 6% almost $1,650.&lt;/p&gt;

&lt;p&gt;Maybe that's not very impressive. The power of compound interests manifests more with a longer timescale; after 20 years, the above numbers would be: $2,400 (2%), $3,200 (3%) and $4,640 (6%).&lt;/p&gt;

&lt;p&gt;Start saving money as early as possible to benefit more from compound interests.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#guard-thy-treasures-against-loss"&gt;
  &lt;/a&gt;
  Guard thy treasures against loss
&lt;/h3&gt;

&lt;p&gt;Look for safe investments where you will not lose your principal. Also, you should not invest all your eggs, in the same basket, diversify your portfolio.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#make-of-thy-dwelling-a-profitable-investment"&gt;
  &lt;/a&gt;
  Make of thy dwelling a profitable investment
&lt;/h3&gt;

&lt;p&gt;Professionals still debate on this point 4,000 years later. It's about owning your own home. This book suggest to own your home, to decrease your expenditures, so that you can save, you can invest more.&lt;/p&gt;

&lt;p&gt;I think it depends on how good investments you can find and what's the price of a good rental, how frequently do you want to change neighbourhood, city, country, etc.&lt;/p&gt;

&lt;p&gt;Nevertheless, owning your own home is the fifth cure of a lean purse.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#insure-a-future-income"&gt;
  &lt;/a&gt;
  Insure a future income
&lt;/h3&gt;

&lt;p&gt;Make some investments that will ensure that you and/or your family will not lack resources once you'll not be able to earn money or when you're gone.&lt;/p&gt;

&lt;p&gt;Nowadays this would either mean that you set up a retirement portfolio or a set of passive income flows.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#increase-thy-ability-to-earn"&gt;
  &lt;/a&gt;
  Increase thy ability to earn
&lt;/h3&gt;

&lt;p&gt;If you feel that you cannot earn enough money, go on and invest first in yourself. Learn some skills, increase your value so that you can earn more money, enough money that can support your desired lifestyle.&lt;/p&gt;

&lt;p&gt;We, developers, are in a quite good position both in terms of knowledge and resources to improve us. Yet, we should not forget that learning is a lifelong activity, especially in our field. &lt;/p&gt;

&lt;p&gt;Let's go and learn something that will increase our value and we can earn more.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-five-laws-of-gold"&gt;
  &lt;/a&gt;
  The five laws of gold
&lt;/h2&gt;

&lt;p&gt;The five laws of gold are mostly about general rules of building wealth. I don't quote them, because of the old language used in the book.&lt;/p&gt;

&lt;p&gt;First, make sure that you save at least 10% of what you make. The more you can save, the faster your wealth builds up. Less than 10% will unlikely be enough.&lt;/p&gt;

&lt;p&gt;Second, you have to look for a profitable investment, so that you can benefit from compounding.&lt;/p&gt;

&lt;p&gt;Third, don't be careless with your money, seek out for advice of wise, experienced people.&lt;/p&gt;

&lt;p&gt;Fourth, don't invest in businesses that you don't understand that you're unfamiliar with. You'll lose money. Invest in something you understand and with the help, with the guidance of other experienced people.&lt;/p&gt;

&lt;p&gt;Fifth, don't chase butterflies, don't get into tricksters, schemes, just with the hope of a romantic return of investment. Be realistic. The slow and steady wins the race.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#having-strong-work-ethic-is-the-most-important"&gt;
  &lt;/a&gt;
  Having strong work ethic is the most important
&lt;/h2&gt;

&lt;p&gt;What had the biggest impression on me, was the last story &lt;em&gt;The Luckiest Man In Babylon&lt;/em&gt;. The merchant prince, Sharru Nada was riding at the head of his caravan. On his side, there was Hadan Gula riding, the grandson of his ancient partner Arad Gula.&lt;/p&gt;

&lt;p&gt;Sharra Nada always felt he owed a debt of gratitude to Arad Gula, such gratitude that he would never be able to repay.&lt;/p&gt;

&lt;p&gt;His grandson was not the type he liked. He wore expensive jewels, fancy clothes and he didn't like to work. He thought that work was for slaves and he was not a slave.&lt;/p&gt;

&lt;p&gt;In fact, he didn't even get the point, why this guy at the head of the caravan was working so hard. Why did his grandfather work so hard?&lt;/p&gt;

&lt;p&gt;I will not share the whole story here, you can check out the book. The point is that both Sharru Nada and Arad Gula used to be slaves at a certain point in their lives. With the right attitude, diligence and perseverance they became free. They became free because they had the right mindset and busted their asses off.&lt;/p&gt;

&lt;p&gt;By the end of the story, by the end of their ride, Hadan Gula understood the point of work and it doesn't belittle anyone, on the contrary working hard towards a goal is a noble act.&lt;/p&gt;

&lt;p&gt;This is why I keep saying that the most important thing that you can get from your parents is not wealth, but the right attitude. It's possible to change attitude, but much more difficult than amassing enough money that is enough for you. (And I clearly don't speak about billions of dollars here.)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.amazon.com/gp/product/1939438632/ref=as_li_qf_asin_il_tl?ie=UTF8&amp;amp;tag=sandordargo-20&amp;amp;creative=9325&amp;amp;linkCode=as2&amp;amp;creativeASIN=1939438632&amp;amp;linkId=f075962475cbe35d1a89d6e11310dd09"&gt;The Richest Man in Babylon&lt;/a&gt; is clearly a book that I recommend reading. Maybe the money advice will bring you only so far, maybe you already know all that and you put aside at least 10% of your money and invest it wisely. I'm more than happy for you.&lt;/p&gt;

&lt;p&gt;Maybe you already have sources of passive income, maybe you don't even need to work (full-time) anymore.&lt;/p&gt;

&lt;p&gt;But with all the parables, with all the stories, this book is a nice reminder of important concepts of wealth-building and values that will bring you forward in your life.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.amazon.com/gp/product/1939438632/ref=as_li_qf_asin_il_tl?ie=UTF8&amp;amp;tag=sandordargo-20&amp;amp;creative=9325&amp;amp;linkCode=as2&amp;amp;creativeASIN=1939438632&amp;amp;linkId=f075962475cbe35d1a89d6e11310dd09"&gt;Read it&lt;/a&gt; if you haven't!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#connect-deeper"&gt;
  &lt;/a&gt;
  Connect deeper
&lt;/h2&gt;

&lt;p&gt;If you liked this article, please &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;hit on the like button,
&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://eepurl.com/gvcv1j"&gt;subscribe to my newsletter&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;and let's connect on &lt;a href="https://twitter.com/SandorDargo"&gt;Twitter&lt;/a&gt;!&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>books</category>
      <category>watercooler</category>
      <category>history</category>
      <category>finance</category>
    </item>
    <item>
      <title>Javascript Hacks</title>
      <author>SIDDHANT JOHARI</author>
      <pubDate>Sat, 03 Jul 2021 20:08:16 +0000</pubDate>
      <link>https://dev.to/siddhant_johari_8fdecc7b7/javascript-hacks-3j48</link>
      <guid>https://dev.to/siddhant_johari_8fdecc7b7/javascript-hacks-3j48</guid>
      <description>&lt;p&gt;There are many amazing features in javascript that can make your life much simpler, In this blog, I have added 20 features that every javascript developer should know.&lt;/p&gt;

&lt;p&gt;1.Resize the Array using an array. length.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;2.Swapping of two Numbers.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;3 Concatenating two or more arrays without causing server overload.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;4.Use Filter in a different way.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;5.Iterate on the map from 0 to n.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;6.Replace all occurrences of a word in a string&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;7.Shortcut for conditions.&lt;br&gt;
Here, I am explaining basic two examples we can implement in multiple ways.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;8.String to number / Number to string.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;9.Use the console in different ways.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;10.Use console.table&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;11.Get the items near to last index of an array.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;12.Get n power of any number.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;13.Check the falsy or truly value.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;14.Call a function by its name stored in a string using eval function.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;15.typeof Operator.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;16.yeild keyword&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;17.function* in javascript.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;18.new.target in javascript&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;19.label statement.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;20.Rest parameters Syntax.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Conclusion:&lt;br&gt;
Thanks for reading it, In this blog I have explained some of the most used features of javascript, I will explain more features in next blog,&lt;br&gt;
Please give feedback in responses.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>reactnative</category>
    </item>
    <item>
      <title>Agora vamos falar de ARIA</title>
      <author>Luiza Gatti</author>
      <pubDate>Sat, 03 Jul 2021 20:02:19 +0000</pubDate>
      <link>https://dev.to/luizagatti/agora-vamos-falar-de-aria-2i0l</link>
      <guid>https://dev.to/luizagatti/agora-vamos-falar-de-aria-2i0l</guid>
      <description>&lt;p&gt;Antes de mais nada, se você não leu &lt;a href="https://dev.to/luizagatti/como-aumentar-o-alcance-do-seu-site-um-guia-de-acessibilidade-811"&gt;minha história anterior&lt;/a&gt;, volta lá e dá uma lida porque ela serve de introdução para essa aqui.&lt;/p&gt;

&lt;p&gt;A sigla ARIA (Accessible Rich Internet Applications) significa Aplicações para a Internet Ricas em Acessibilidade, que definem as formas de tornar o conteúdo e as aplicações da internet mais acessíveis.&lt;/p&gt;

&lt;p&gt;A ARIA permite a marcação de algumas regiões importantes na página que servirão para auxiliar na navegação (para ajudar quem usa um leitor de tela, por exemplo). É um conjunto de atributos especiais para acessibilidade que pode ser adicionado a qualquer linguagem de marcação, mas é especialmente adequado para o HTML, e todos os exemplos que trarei serão nessa linguagem.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BU73Rz3p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fq7rhmf6493bktnaitr0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BU73Rz3p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fq7rhmf6493bktnaitr0.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#primeira-regra-de-uso-de-aria"&gt;
  &lt;/a&gt;
  Primeira regra de uso de ARIA
&lt;/h1&gt;

&lt;p&gt;Sempre que você puder usar um elemento nativo HTML5 ou atributo com semântica e comportamento que você precisa já incorporados, em vez de redefinir um elemento e adicionar o ARIA para torná-lo acessível, opte pelo HTML5.&lt;/p&gt;

&lt;p&gt;Em quais casos isso pode não ser possível?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Quando o recurso está disponível em HTML5, mas não está implementado; ou está implementado, mas não dá suporte a acessibilidade;&lt;/li&gt;
&lt;li&gt;Se as restrições de design visual excluem o uso de um elemento nativo específico, porque o elemento não pode ser estilizado conforme necessário;&lt;/li&gt;
&lt;li&gt;Se o recurso não estiver disponível em HTML.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#segunda-regra-de-uso-de-aria"&gt;
  &lt;/a&gt;
  Segunda regra de uso de ARIA
&lt;/h1&gt;

&lt;p&gt;Não altere a semântica nativa, a menos que seja realmente necessário.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Não faça:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;h2 role="tab"&amp;gt;tab de cabeçalho&amp;lt;/h2&amp;gt;&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Faça:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;div role="tab"&amp;gt;&lt;br&gt;
   &amp;lt;h2&amp;gt;tab de cabeçalho&amp;lt;/h2&amp;gt;&lt;br&gt;
&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;Nota: Se um elemento não interativo for usado como base para um elemento interativo, pessoas desenvolvedoras terão que adicionar a semântica usando ARIA e o comportamento apropriado usando scripts. No caso de um botão, por exemplo, é muito melhor e mais fácil usar apenas um botão.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#terceira-regra-de-uso-de-aria"&gt;
  &lt;/a&gt;
  Terceira regra de uso de ARIA
&lt;/h1&gt;

&lt;p&gt;Todos os controles interativos de ARIA devem ser utilizáveis via teclado.&lt;/p&gt;

&lt;p&gt;Se você cria uma ferramenta onde a pessoa pode clicar, tocar, arrastar, soltar, deslizar ou rolar, a pessoa também deve ser capaz de navegar até a ferramenta e executar uma ação equivalente usando o teclado.&lt;/p&gt;

&lt;p&gt;Todas as ferramentas interativas devem ser programadas para responder aos pressionamentos de tecla padrão ou combinações de pressionamento de tecla quando aplicável.&lt;/p&gt;

&lt;p&gt;Por exemplo, se estiver usando &lt;code&gt;role="button"&lt;/code&gt;, o elemento deve ser capaz de receber o foco e a pessoa usuária deve conseguir ativar a ação associada ao elemento usando Enter (WIN OS) ou Return (MAC OS) e a tecla de espaço.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#quarta-regra-de-uso-de-aria"&gt;
  &lt;/a&gt;
  Quarta regra de uso de ARIA
&lt;/h1&gt;

&lt;p&gt;Não use &lt;code&gt;role="presentation"&lt;/code&gt; ou &lt;code&gt;aria-hidden="true"&lt;/code&gt; em um elemento visível e focalizável. Usar qualquer uma dessas propriedades em um elemento que pode ser visível e focalizável irá resultar em pessoas usuárias clicando em ‘nada’.&lt;br&gt;
Um elemento que for oculto usando &lt;code&gt;display: none&lt;/code&gt; também será removido da árvore de acessibilidade, o que torna desnecessária a adição de &lt;code&gt;aria-hidden="true"&lt;/code&gt;.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#quinta-regra-de-uso-de-aria"&gt;
  &lt;/a&gt;
  Quinta regra de uso de ARIA
&lt;/h1&gt;

&lt;p&gt;Todos os elementos interativos devem ter um nome acessível.&lt;/p&gt;

&lt;p&gt;Um elemento interativo só tem um nome acessível quando sua propriedade de nome (name ou equivalente) está preenchida.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Não faça:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;label&amp;gt;Insira seu nome&amp;lt;/label&amp;gt; &amp;lt;input type="text"/&amp;gt;&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Faça:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;label for="user-name"&amp;gt;Insira seu nome&amp;lt;/label&amp;gt;&lt;br&gt;
&amp;lt;input type="text" id="user-name"/&amp;gt;&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;O correto acima tem um nome acessível porque o elemento de entrada é um elemento rotulável e o elemento de rótulo é usando corretamente para associar o texto à entrada.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#o-que-adicionar-role-faz-com-a-sem%C3%A2ntica-nativa"&gt;
  &lt;/a&gt;
  O que adicionar "role" faz com a semântica nativa?
&lt;/h1&gt;

&lt;p&gt;Ao adicionar a função ARIA, estamos substituindo a semântica da função nativa na árvore de acessibilidade e, portanto, ARIA afeta diretamente o que é relatado a uma tecnologia assistiva.&lt;br&gt;
Por exemplo, esse código:&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;h1 role=button&amp;gt;text&amp;lt;/h1&amp;gt;&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;Fica assim na árvore de acessibilidade:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ba_YBTad--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a9708hvsg9ylzhu0wq5m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ba_YBTad--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a9708hvsg9ylzhu0wq5m.png" alt="Heading text - push button"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Adicionar a ARIA &lt;strong&gt;não&lt;/strong&gt; fará com que o elemento pareça ou se comporte de maneira diferente para as pessoas que não estão usando tecnologia assistiva. A função &lt;strong&gt;não altera&lt;/strong&gt; os comportamentos, estados e propriedades do elemento host, apenas a semântica da função nativa. Por exemplo, esse código:&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;button role="heading" aria-level=1&amp;gt; Texto &amp;lt;/button&amp;gt;&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;Fica assim na árvore de acessibilidade:&lt;br&gt;
 &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JG0B6Dka--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5qykj1543amelouxkk73.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JG0B6Dka--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5qykj1543amelouxkk73.png" alt="Na primeira linha temos: (none) - heading. Na segunda linha temos: text - editable text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Mas ele ainda pode ser pressionado, ainda está na ordem padrão do tab, ainda se parece com um botão e ainda dispara as ações associadas a ele quando pressionado. É por isso que é um erro de conformidade com o HTML5 transformar um botão em um heading.&lt;/p&gt;

&lt;p&gt;Nota: alterar a role de um elemento não adiciona comportamentos, propriedades ou estados àquela função. O ARIA não muda a aparência ou a ação no browser. Por exemplo, quando os links são estilizados para se comportarem como botões, adicionar &lt;code&gt;role="button"&lt;/code&gt; não é suficiente. Também é necessário fazer funcionar como um botão, incluindo um manipulador de eventos de chave que escuta a tecla de espaço como os botões nativos fazem.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#uso-de-rolepresentation-ou-rolenone"&gt;
  &lt;/a&gt;
  Uso de "role=presentation" ou "role=none"
&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;role="presentation"&lt;/code&gt; ou seu sinônimo &lt;code&gt;role="none"&lt;/code&gt; remove a semântica do elemento onde ele está. Por exemplo, esse código:&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;h1 role="presentation"&amp;gt; Texto &amp;lt;/h1&amp;gt;&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;Fica assim na árvore de acessibilidade:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_zKOpGxn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ylq9jxook2472peznv3n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_zKOpGxn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ylq9jxook2472peznv3n.png" alt="text - editable text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Em outras palavras, é apenas relatado na árvore como uma string de texto, sem qualquer significado semântico.&lt;/p&gt;

&lt;p&gt;Para elementos sem &lt;em&gt;children&lt;/em&gt; obrigatórios, quaisquer outros elementos aninhados dentro de um com &lt;code&gt;role="presentation/none"&lt;/code&gt; preservam sua semântica. Por exemplo, esse código:&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;h1 role="presentation"&amp;gt;&amp;lt;abbr&amp;gt; API &amp;lt;/abbr&amp;gt;&amp;lt;/h1&amp;gt;&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;Fica assim na árvore de acessibilidade:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WzJwVXV8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0bf3uslad2vnr77qs13g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WzJwVXV8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0bf3uslad2vnr77qs13g.png" alt="Na primeira linha: (none) - abbr. Na segunda linha: API - editable text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Para elementos com children obrigatórios (como &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; ou &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt;) quaisquer filhos obrigatórios aninhados dentro do primeiro elemento com a &lt;code&gt;role="presentation/none"&lt;/code&gt; também tem a sua semântica removida. Por exemplo, esse código:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;table role="presentation"&amp;gt;
   &amp;lt;tr&amp;gt;
      &amp;lt;td&amp;gt;
         &amp;lt;abbr&amp;gt; API &amp;lt;/abbr&amp;gt;
      &amp;lt;/td&amp;gt;
   &amp;lt;/tr&amp;gt;
&amp;lt;/table&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Fica assim na árvore de acessibilidade:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h25Ohj3l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tr7hlfiek4aeytqq47lc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h25Ohj3l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tr7hlfiek4aeytqq47lc.png" alt="Na primeira linha: (none) - abbr. Na segunda linha: API - editable text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Nota: quaisquer elementos que não sejam filhos obrigatórios do elemento com uma &lt;code&gt;role="presentation/none"&lt;/code&gt; mantém sua semântica. Isso inclui outros como lista ou tabelas aninhadas. Por exemplo, esse código que consiste em uma tabela com outra tabela aninhada:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;table&amp;gt;
   &amp;lt;tr&amp;gt;
      &amp;lt;td&amp;gt;
         &amp;lt;table&amp;gt;
            &amp;lt;tr&amp;gt;
               &amp;lt;td&amp;gt;
                  &amp;lt;abbr&amp;gt; API &amp;lt;/abbr&amp;gt;
               &amp;lt;/td&amp;gt;
            &amp;lt;/tr&amp;gt;
         &amp;lt;/table&amp;gt;
      &amp;lt;/td&amp;gt;
   &amp;lt;/tr&amp;gt;
&amp;lt;/table&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Fica assim na árvore de acessibilidade:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--056AG_gD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cvg95kfegshf6vdrp8cc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--056AG_gD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cvg95kfegshf6vdrp8cc.png" alt="(none) - table | (none) - row | (none) - cell | (none) - table | API - row | (none) - cell | (none) abbr | API - editable"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ao adicionar role="presentation/none" na tabela mais externa, é assim que fica a árvore:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hzeGC7Ct--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lxu0zej60wmbmm06xaxa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hzeGC7Ct--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lxu0zej60wmbmm06xaxa.png" alt="(none) - table | API - row | (none) - cell | (none) - abbr | API - editable"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#uso-de-arialabel-arialabelledby-e-ariadescribedby"&gt;
  &lt;/a&gt;
  Uso de aria-label, aria-labelledby e aria-describedby
&lt;/h1&gt;

&lt;p&gt;Atualmente &lt;code&gt;aria-label&lt;/code&gt;, &lt;code&gt;aria-labelledby&lt;/code&gt; e &lt;code&gt;aria-describedby&lt;/code&gt; tem um suporte melhor em associar conteúdo de texto a um subconjunto interativo de elementos (por exemplo &lt;code&gt;&amp;lt;div role="main"&amp;gt;&lt;/code&gt; ou &lt;code&gt;&amp;lt;main&amp;gt;&lt;/code&gt;). Essas três opções não funcionam de forma consistente em links, o suporte a conteúdo embedado e conteúdo agrupado é inconsistente em navegadores, tecnologia assistiva e sistemas operacionais, mas podem ser usados com segurança em controles de formulário HTML5, incluindo vários tipos de &lt;code&gt;input&lt;/code&gt; e os elementos &lt;code&gt;&amp;lt;aside&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;footer&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;article&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;header&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;nav&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;section&amp;gt;&lt;/code&gt; e &lt;code&gt;&amp;lt;main&amp;gt;&lt;/code&gt;.&lt;br&gt;
O exemplo a seguir de aria-labelledby com várias referências usa um intervalo com um &lt;code&gt;tabindex=-1&lt;/code&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#uso-de-roleapplication"&gt;
  &lt;/a&gt;
  Uso de role=application
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#como-raw-roleapplication-endraw-afeta-um-leitor-de%C2%A0tela"&gt;
  &lt;/a&gt;
  Como &lt;code&gt;role=application&lt;/code&gt; afeta um leitor de tela?
&lt;/h2&gt;

&lt;p&gt;Em muitos leitores de tela populares, a maioria dos pressionamentos de tecla são capturados pelo leitor e não pela página da web quando a pessoa usuária está no modo de navegação. Isso é necessário para a navegação eficiente de uma página. Quando o modo de aplicativo está definido, muitos leitores de tela param de interceptar os pressionamentos de tecla e passam todos os pressionamentos de tecla diretamente para o navegador. Assim, a pessoa usuária não conseguirá navegar na página tão facilmente. Por exemplo, não serão capazes de pular a página por títulos ou ler um parágrafo de texto estático linha por linha. No entanto, vários leitores de tela não se comportam de maneira diferente quando há um conjunto de &lt;code&gt;role=application&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ent%C3%A3o-quando-devemos-usar"&gt;
  &lt;/a&gt;
  Então quando devemos usar?
&lt;/h2&gt;

&lt;p&gt;Ao determinar quando devemos usar essa propriedade precisamos levar em consideração também as vantagens dos atalhos de teclado do leitor de tela em relação à perda desses recursos. Geralmente não deve ser usado e, se for, devem ser realizados testes de usabilidade com pessoas usuárias de leitores de tela.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Não usamos&lt;/strong&gt; &lt;code&gt;role=application&lt;/code&gt; se um conjunto de controles tiver apenas esses widgets que fazem parte do HTML padrão. Isso também se aplica se você marcá-los e criar um modelo de interação usando funções WAI-ARIA em vez de widgets HTML padrão:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;text box&lt;/code&gt; (também se aplica a telefone, pesquisa e senha)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;textarea&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;checkbox&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;button&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;radio button&lt;/code&gt; (normalmente dentro de um fieldset/legend)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;select + option&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;link&lt;/code&gt;, &lt;code&gt;paragraphs&lt;/code&gt;, &lt;code&gt;headings&lt;/code&gt; e outros elementos que são clássicos/nativos de documentos web&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Nota: não é recomendado que sejam desenvolvidos widgets de entrada de texto personalizados. Quase sempre é melhor usar os inputs nativos.&lt;/p&gt;

&lt;p&gt;Também &lt;strong&gt;não usamos&lt;/strong&gt; &lt;code&gt;role=application&lt;/code&gt; se seu widget for de algum dos seguintes tipos mais dinâmicos e não nativos:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;tree view&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;slider&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;table&lt;/code&gt; que tenha elementos focalizáveis e que esteja sendo navegado pelas teclas de seta, por exemplo uma lista de mensagens de e-mail. Outros exemplos interativos são grids, tree grids, etc&lt;/li&gt;
&lt;li&gt;Uma lista de guias (&lt;code&gt;tab&lt;/code&gt;, &lt;code&gt;tablist&lt;/code&gt;) onde a pessoa usuária seleciona guias pelas teclas de seta para a direita e para a esquerda. Lembre-se que você tem que implementar o modelo de navegação para esse caso&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;dialog&lt;/code&gt; e &lt;code&gt;alertdialog&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;toolbar&lt;/code&gt; e &lt;code&gt;toolbar buttons&lt;/code&gt;, &lt;code&gt;menus&lt;/code&gt; e &lt;code&gt;menu items&lt;/code&gt; e similares&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Você &lt;strong&gt;deve usar&lt;/strong&gt; &lt;code&gt;role=application&lt;/code&gt; se o conteúdo que está fornecendo consistir apenas em controles interativos focalizáveis e, principalmente, widgets avançados que emulam um aplicativo desktop real. Observe que, apesar de muitas coisas agora serem chamadas de aplicativo web, a maior parte do conteúdo com que esses aplicativos trabalham ainda são informações baseadas em documentos, sejam postagens e comentários de blogs, feeds e até mesmo acordeões que mostram e ocultam certos tipos de informação. Ainda lidamos principalmente com documentos na web, embora eles possam ter uma aparência semelhante a um desktop na superfície.&lt;/p&gt;

&lt;p&gt;Em resumo: as vezes que você realmente irá usar o &lt;code&gt;role=application&lt;/code&gt; serão &lt;strong&gt;muito raras&lt;/strong&gt;!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#onde-usar-o-raw-roleapplication-endraw-quando-ele-for-relevante"&gt;
  &lt;/a&gt;
  Onde usar o &lt;code&gt;role=application&lt;/code&gt; quando ele for relevante?
&lt;/h2&gt;

&lt;p&gt;Coloque-o no elemento contido mais próximo de seu widget, por exemplo, a &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; superior a seu elemento.&lt;br&gt;
Como regra geral, se sua página consiste em mais de 90 ou 95% de widgets, &lt;code&gt;role=application&lt;/code&gt; &lt;em&gt;pode ser&lt;/em&gt; apropriado. Mesmo assim, verifique se realmente é o caso. &lt;strong&gt;Jamais&lt;/strong&gt; use &lt;code&gt;role=application&lt;/code&gt; em um elemento amplamente contido, como o &lt;code&gt;body&lt;/code&gt;, se sua página consistir principalmente em widgets tradicionais ou elementos de página, como links com os quais a pessoa usuária não precisa interagir no modo de foco. Isso causará enormes dores de cabeça para qualquer pessoa usuária de tecnologia assistiva.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#fun%C3%A7%C3%B5es-e-propriedades-de-aria-n%C3%A3o-dispon%C3%ADveis-como-recursos-em-html"&gt;
  &lt;/a&gt;
  Funções e propriedades de ARIA não disponíveis como recursos em HTML
&lt;/h3&gt;

&lt;p&gt;Abaixo estão listadas as funções e propriedades ARIA não consideradas disponíveis nativamente em HTML. Claro que muitas funções e propriedades fornecidas pelo ARIA, que podem ser usadas para transmitir informações à pessoas usuárias, não estão disponíveis em HTML.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#aria-roles"&gt;
  &lt;/a&gt;
  ARIA Roles
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#alert"&gt;&lt;code&gt;alert&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#alertdialog"&gt;&lt;code&gt;alertdialog&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#application"&gt;&lt;code&gt;application&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#directory"&gt;&lt;code&gt;directory&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#document"&gt;&lt;code&gt;document&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#feed"&gt;&lt;code&gt;feed&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#grid"&gt;&lt;code&gt;grid&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#gridcell"&gt;&lt;code&gt;gridcell&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#group"&gt;&lt;code&gt;group&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#log"&gt;&lt;code&gt;log&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#marquee"&gt;&lt;code&gt;marquee&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#menu"&gt;&lt;code&gt;menu&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#menubar"&gt;&lt;code&gt;menubar&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#menuitemcheckbox"&gt;&lt;code&gt;menuitemcheckbox&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#menuitemradio"&gt;&lt;code&gt;menuitemradio&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#none"&gt;&lt;code&gt;none&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#note"&gt;&lt;code&gt;note&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#presentation"&gt;&lt;code&gt;presentation&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#scrollbar"&gt;&lt;code&gt;scrollbar&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#search"&gt;&lt;code&gt;search&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#status"&gt;&lt;code&gt;status&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#switch"&gt;&lt;code&gt;switch&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#tab"&gt;&lt;code&gt;tab&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#tablist"&gt;&lt;code&gt;tablist&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#tabpanel"&gt;&lt;code&gt;tabpanel&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#timer"&gt;&lt;code&gt;timer&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#toolbar"&gt;&lt;code&gt;toolbar&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#tooltip"&gt;&lt;code&gt;tooltip&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#tree"&gt;&lt;code&gt;tree&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#treegrid"&gt;&lt;code&gt;treegrid&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#treeitem"&gt;&lt;code&gt;treeitem&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#estados-e-propriedades-aria-atributos-aria"&gt;
  &lt;/a&gt;
  Estados e propriedades ARIA (atributos aria-*)
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#aria-activedescendant"&gt;&lt;code&gt;aria-activedescendant&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#aria-atomic"&gt;&lt;code&gt;aria-atomic&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#aria-busy"&gt;&lt;code&gt;aria-busy&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#aria-controls"&gt;&lt;code&gt;aria-controls&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#aria-describedby"&gt;&lt;code&gt;aria-describedby&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#aria-dropeffect"&gt;&lt;code&gt;aria-dropeffect&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#aria-expanded"&gt;&lt;code&gt;aria-expanded&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#aria-flowto"&gt;&lt;code&gt;aria-flowto&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#aria-grabbed"&gt;&lt;code&gt;aria-grabbed&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#aria-haspopup"&gt;&lt;code&gt;aria-haspopup&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#aria-hidden"&gt;&lt;code&gt;aria-hidden&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#aria-label"&gt;&lt;code&gt;aria-label&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#aria-labelledby"&gt;&lt;code&gt;aria-labelledby&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#aria-level"&gt;&lt;code&gt;aria-level&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#aria-live"&gt;&lt;code&gt;aria-live&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#aria-orientation"&gt;&lt;code&gt;aria-orientation&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#aria-owns"&gt;&lt;code&gt;aria-owns&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#aria-posinset"&gt;&lt;code&gt;aria-posinset&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#aria-pressed"&gt;&lt;code&gt;aria-pressed&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#aria-relevant"&gt;&lt;code&gt;aria-relevant&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#aria-setsize"&gt;&lt;code&gt;aria-setsize&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#aria-sort"&gt;&lt;code&gt;aria-sort&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#refer%C3%AAncias"&gt;
  &lt;/a&gt;
  Referências
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.w3.org/WAI/"&gt;Iniciativa de Acessibilidade Web (WAI) do W3C&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/"&gt;Accessible Rich Internet Applications (WAI-ARIA) 1.1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.w3.org/TR/wai-aria-practices/"&gt;WAI-ARIA Authoring Practices 1.1&lt;/a&gt;&lt;/p&gt;

</description>
      <category>a11y</category>
    </item>
    <item>
      <title>Vue Academy #1: Scoped style</title>
      <author>CodeOzz</author>
      <pubDate>Sat, 03 Jul 2021 18:35:09 +0000</pubDate>
      <link>https://dev.to/codeozz/vue-academy-1-scoped-style-5g0e</link>
      <guid>https://dev.to/codeozz/vue-academy-1-scoped-style-5g0e</guid>
      <description>&lt;p&gt;Welcome to the first vue academy ! It will be a list of lot of article on vue! I have 2.5 years of experience in this and I can teach a few thing about this ! &lt;/p&gt;

&lt;p&gt;For this course we will focus on &lt;code&gt;scoped&lt;/code&gt; attribute in CSS.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#a-quick-example-"&gt;
  &lt;/a&gt;
  A quick example :
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight vue"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;style&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nc"&gt;.toto&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;style&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;'toto'&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; Hi &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#why-its-bad"&gt;
  &lt;/a&gt;
  Why it's bad
&lt;/h3&gt;

&lt;p&gt;It will work but your class can be used in any other component. So if you change &lt;code&gt;toto&lt;/code&gt; class, it can impact other component style (&lt;code&gt;side effect&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;If you want to declare general class, you should create a properly file for this.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#solution"&gt;
  &lt;/a&gt;
  Solution
&lt;/h3&gt;

&lt;p&gt;The solution to create a class that can be used by only one component is the attribute &lt;code&gt;scoped&lt;/code&gt; in &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight vue"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;style&lt;/span&gt; &lt;span class="na"&gt;scoped&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nc"&gt;.toto&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;style&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;CSS will be applied to the elements of the current component &lt;code&gt;only&lt;/code&gt;. This is similar to the style encapsulation found in &lt;code&gt;Shadow DOM&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#how-its-work-in-deep"&gt;
  &lt;/a&gt;
  How it's work in deep
&lt;/h3&gt;

&lt;p&gt;When you will compile your code, the code above will be equal to&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight vue"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;style&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nc"&gt;.toto&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;data-v-f3f3eg9&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;style&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;'toto'&lt;/span&gt; &lt;span class="na"&gt;data-v-f3f3eg9&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; Hi &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;As you can see it's very simple &amp;amp; basic but very strong. Vue will &lt;strong&gt;inject&lt;/strong&gt; an attribute on the &lt;code&gt;scoped class&lt;/code&gt; and apply this attribute on each element that include the &lt;code&gt;scoped class&lt;/code&gt; !.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



</description>
      <category>vue</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>css</category>
    </item>
    <item>
      <title>Why I switched from VsCode to WebStorm</title>
      <author>Daniel Castro</author>
      <pubDate>Sat, 03 Jul 2021 18:12:39 +0000</pubDate>
      <link>https://dev.to/dcastro/why-i-switched-from-vscode-to-webstorm-36dh</link>
      <guid>https://dev.to/dcastro/why-i-switched-from-vscode-to-webstorm-36dh</guid>
      <description>&lt;p&gt;I want to start saying that I'm not trying to claim that WebStorm is better than VsCode and it is because I think that someone can feel more comfortable in VsCode rather than WebStorm or even in another tool, like Vim, Sublime Text, whatever. I just want to share with you why I decided to move to WebStorm and why I'm still using it and maybe you could consider using it too!.&lt;/p&gt;

&lt;p&gt;The first reason why I decided to start using WebStorm is because I changed my computer, and as a developer with a lot of work I needed to start coding as fast as I could, so I downloaded VsCode because that was the editor which I used to use, then I realised that I did not have all my plugins that I had in my previous computer (obviously) and I did not even remember their names, it was very frustrating. After 1 hour trying to set up my VsCode environment I remembered that I wanted to test WebStorm so I thought this was the perfect moment.&lt;/p&gt;

&lt;p&gt;I downloaded it and I launched it. The first thing that I saw was that beautiful Darcula theme that I love so much, I actually had tried to find something similar for VsCode but I had not found anything so beautiful. Well, I know, if you are reading this you are looking for some reasons more interesting than a theme, I just wanted to say that I love this theme for coding &amp;lt;3.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#todo-comments"&gt;
  &lt;/a&gt;
  TODO comments
&lt;/h3&gt;

&lt;p&gt;When I opened my codebase in WebStorm is I was able to see my TODO comments highlighted, I remember that in VsCode I had to install a plugin in order to get this.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---ERES3Yq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kd1fgd8elz0xcbqe4mrc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---ERES3Yq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kd1fgd8elz0xcbqe4mrc.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#auto-import"&gt;
  &lt;/a&gt;
  Auto Import
&lt;/h3&gt;

&lt;p&gt;This is really amazing and I know VsCode has something similar but I'm 100% sure that it is not as accurate as this. I usually copy/paste code between files and it is very common that in my copied code I have some dependencies, it was truly good when I pasted my code and WebStorm automatically found all dependencies and included them at the top of my file. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#git-integration"&gt;
  &lt;/a&gt;
  Git Integration
&lt;/h3&gt;

&lt;p&gt;After coding some hours I got my first conflict in some of my files and it was really surprising when I came across a friendly interface where I was able to resolve conflicts easily. I can leave you some screenshots here but you will have to test it by yourself to notice that it is very good.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#debugger"&gt;
  &lt;/a&gt;
  Debugger
&lt;/h3&gt;

&lt;p&gt;This is my WebStorm favorite thing. As a Full Stack Developer I have to code in both React and NodeJS. I think the best friend that a programmer can have is a great debugger, whether you are working in frontend or backend you will need a way to find errors easily. The WebStorm debugger is really useful. You can set it up fast and start using it. You can set breakpoints on your code and see all your variable values in a good interface. This is useful for both Frontend and Backend but if you are a Backend developer you will love this at the very beginning. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#refactor"&gt;
  &lt;/a&gt;
  Refactor
&lt;/h3&gt;

&lt;p&gt;Doing refactor is not a headache anymore if you have WebStorm. If you have been coding for a while I'm sure you have found yourself renaming a variable in your code, this can be really annoying but in WebStorm it is really easy, you just have to go to Refactor -&amp;gt; Rename and it will rename your variable in all the places you're using it and the most important thing is that it won't open all the files where you're using it like VsCode does. It is just an example of the Refactor feature.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  Final Thoughts
&lt;/h2&gt;

&lt;p&gt;These are just some of the things that I like about WebStorm. I wanted to keep this article short and just share with you my experience of using WebStorm. I almost forgot to say that WebStorm is not a Text Editor, it is a JavaScript IDE and if you decide to use it you will probably notice an increment in your RAM memory use.&lt;/p&gt;

&lt;p&gt;Let me know in the comments section if you have already used WebStorm and what your experience has been. I will be waiting for your opinion.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>typescript</category>
      <category>performance</category>
      <category>programming</category>
    </item>
    <item>
      <title>Containment, Specialization and Inheritance in React-Native/React</title>
      <author>Shivam Gupta</author>
      <pubDate>Sat, 03 Jul 2021 17:37:00 +0000</pubDate>
      <link>https://dev.to/shivambmgupta/containment-specialization-and-inheritance-in-react-native-react-dlo</link>
      <guid>https://dev.to/shivambmgupta/containment-specialization-and-inheritance-in-react-native-react-dlo</guid>
      <description>&lt;p&gt;In this blog, I’m going to talk about Containment, Specialization and Inheritance in React-Native/React, the difference between them and how you can use them to reuse your code.&lt;/p&gt;

&lt;p&gt;First, while the examples shown below are related to react-native, the theory is also applicable to react. The concepts might help you to go DRY. Let’s discuss these points one by one.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#containment"&gt;
  &lt;/a&gt;
  Containment
&lt;/h2&gt;

&lt;p&gt;When you wrap your component(s) within a higher-order component, it’s a containment. Some components don’t know their children ahead of time. Some common cases are Sidebar, Dialog. And for the sake of reusability, some components better be generic.&lt;/p&gt;

&lt;p&gt;The following problem can make this clear:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#problem-statement"&gt;
  &lt;/a&gt;
  Problem Statement:
&lt;/h3&gt;

&lt;p&gt;We have a table of n rows and two columns. The columns can hold not just the text but any other JSX component (Button, Image, Icon) too. &lt;strong&gt;However, it’s is known that it’s going to be a text for 80% of the time&lt;/strong&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#solution"&gt;
  &lt;/a&gt;
  Solution:
&lt;/h3&gt;

&lt;p&gt;React containment model can be useful in these cases.&lt;br&gt;
The idea is to create a wrapper — GenericRow that can hold any JSX component. Furthermore, we can create a CustomRow for Text component only. This is also called Specialization. Yes, I know that I’ve been talking a lot, so let me write the code for you:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="cm"&gt;/* Generic Row that doesn’t know about its children */&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;GenericRow&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
 &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;View&lt;/span&gt; &lt;span class="p"&gt;{...&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="cm"&gt;/* Left column or Left child */&lt;/span&gt;
   &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;View&lt;/span&gt; &lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;styles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;column&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;left&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/View&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
   &lt;span class="cm"&gt;/* Right column or Right child */&lt;/span&gt;    
   &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;View&lt;/span&gt; &lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;styles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;column&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;right&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/View&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/View&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="cm"&gt;/**
 * Specialization of our Generic Row
 * This component is going to be used when it’s known that left and right are texts
 **/&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;CustomRow&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;left&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;right&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
 &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Generic&lt;/span&gt;
   &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="cm"&gt;/* Left child */&lt;/span&gt;
   &lt;span class="nx"&gt;left&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;left&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;()}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Text&amp;gt; &lt;/span&gt;&lt;span class="err"&gt;}
&lt;/span&gt;   &lt;span class="cm"&gt;/* Right Child */&lt;/span&gt;
   &lt;span class="nx"&gt;right&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;right&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;()}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Text&amp;gt; &lt;/span&gt;&lt;span class="err"&gt;}
&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="cm"&gt;/* Child of CustomRow | First Row */&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;NameRow&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
 &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;CustomRow&lt;/span&gt; &lt;span class="nx"&gt;left&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Developer’s Name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;right&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Shivam Gupta&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="cm"&gt;/* Second Row for the age */&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;AgeRow&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;CustomRow&lt;/span&gt; &lt;span class="nx"&gt;left&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Age&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;right&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;22&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="cm"&gt;/* Action: Connect | Third row */&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ConnectActionRow&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="cm"&gt;/* Notice Generic Row not a CustomRow! */&lt;/span&gt;
 &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;GenericRow&lt;/span&gt; &lt;span class="nx"&gt;left&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Connect&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Text&amp;gt; } right = {&amp;lt;Button title="Hit me!" /&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, CustomRow is a specialization of the GenericRow which is going to be used frequently as per the problem statement. Notice that the ConnectActionRow component is contained by the GenericRow and not by the CustomRow, unlike the NameRow and AgeRow.&lt;/p&gt;

&lt;p&gt;Just using concepts of containment, we have the code which is easier to read, debug and maintain.&lt;/p&gt;

&lt;p&gt;Now let’s talk about specialization.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#specialization"&gt;
  &lt;/a&gt;
  Specialization:
&lt;/h2&gt;

&lt;p&gt;Sometimes a component is a special case of the other component. For example, Error Text (traditionally, bold and red) is a special case of Text.&lt;/p&gt;

&lt;p&gt;The following problem will help you understand this better.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#problem-statement"&gt;
  &lt;/a&gt;
  Problem Statement:
&lt;/h3&gt;

&lt;p&gt;You’re creating a medium-sized non-trivial react-native application that is going to have 20 screens. You require to prompt the danger text (for validation error) on at least 7 to 8 screens.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#solution"&gt;
  &lt;/a&gt;
  Solution:
&lt;/h3&gt;

&lt;p&gt;You’ll create a separate component for it. Of course! Any sane developer would do that. If that’s the case you already know about Specialization. For beginners, let me just write a code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nb"&gt;Error&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;fontFamily&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;style&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
 &lt;span class="cm"&gt;/* User may overwrite the color, or fontWeight using his own style. */&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Text&lt;/span&gt; 
      &lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{[&lt;/span&gt;
         &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="nx"&gt;red&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;fontWeight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;bold&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; 
         &lt;span class="cm"&gt;/* Notice this written after the our style, letting user to overwrite color and fontWeight. */&lt;/span&gt;
         &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;]}&lt;/span&gt;
    &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Text&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Again, the idea for this implementation is to use the DRY principle and at the same time allow the user of this component to overwrite our default stying whenever the developer wants.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#inheritance"&gt;
  &lt;/a&gt;
  Inheritance
&lt;/h2&gt;

&lt;p&gt;React neither prefers nor does provide anything much for inheritance. Most of the time, you’re not going to need it. Whatever you could do using inheritance, you can achieve the same using Containment or Specialization. The following is the statement from the react’s official documentation:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;“At Facebook, we use React in thousands of components, and we haven’t found any use cases where we would recommend creating component inheritance hierarchies.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#difference-between-containment-specialization-and-inheritance"&gt;
  &lt;/a&gt;
  Difference between Containment, Specialization and Inheritance
&lt;/h2&gt;

&lt;p&gt;While Containment, Speicializtion and Inheritance may sound similar but they are very different. The following may help you understand it.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The table CONTAINS/HAS rows.
   &lt;em&gt;Neither table is a specialization of rows, nor it’s an inheritance.&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;Pulsar IS a Bike.
   &lt;em&gt;Neither this is an example of containment nor specialization.&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;Welcome Dialog is a special case of Dialog.
   &lt;em&gt;Neither this is an example of containment nor inheritance.&lt;/em&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The difference between containment and inheritance is of IS/HAS relationship.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;The main objective of the containment and specialization concept is to follow the DRY (Don’t Repeat Yourself) principle. Because redundant code is hard to maintain, harder to debug and using these concepts will make your code maintainable and less error-prone.&lt;/p&gt;

</description>
      <category>reactnative</category>
      <category>react</category>
      <category>programming</category>
      <category>webdev</category>
    </item>
    <item>
      <title>How to install popular Linux distros</title>
      <author>Florencia Gonzalez</author>
      <pubDate>Sat, 03 Jul 2021 17:27:06 +0000</pubDate>
      <link>https://dev.to/rightonhana/how-to-install-popular-linux-distros-c05</link>
      <guid>https://dev.to/rightonhana/how-to-install-popular-linux-distros-c05</guid>
      <description>&lt;p&gt;Probably there are hundred or thousands of articles on how to install Linux but I made this mainly for myself, but maybe you find it useful too.&lt;/p&gt;

&lt;p&gt;I will show you how to do it in 5 simple steps. The steps are almost the same for every popular distro.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-1-download-a-program-to-create-a-bootable-usb-drive"&gt;
  &lt;/a&gt;
  Step 1 : Download a program to create a bootable USB drive
&lt;/h2&gt;

&lt;p&gt;First of all you will need a pendrive. Without one we can't do so much... &lt;/p&gt;

&lt;p&gt;Download a program to create bootable USB drive. There are many programs for that, here are some of them: &lt;a href="https://unetbootin.github.io/"&gt;UNetbootin&lt;/a&gt;, &lt;a href="https://rufus.ie/en_US/"&gt;Rufus&lt;/a&gt;, &lt;a href="https://www.etcher.net/"&gt;Etcher&lt;/a&gt;, &lt;a href="https://www.linuxliveusb.com/"&gt;Linux Live USB Creator&lt;/a&gt; and there are many more.&lt;/p&gt;

&lt;p&gt;Not all of them are for all Operating Systems so you will need to check if they are available for your OS. For example, UNetbootin if for Windows, Linux or Mac OS but Rufus is only for Windows.&lt;/p&gt;

&lt;p&gt;Once you picked the program you like, download it and install it in your Operating System.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-2-download-the-linux-iso"&gt;
  &lt;/a&gt;
  Step 2 : Download the Linux .iso
&lt;/h2&gt;

&lt;p&gt;There are several Linux distros you can install. The most popular is &lt;a href="https://ubuntu.com/"&gt;Ubuntu&lt;/a&gt; and is the one I recommend to install if it is your first time. You can check all the Linux distros &lt;a href="https://upload.wikimedia.org/wikipedia/commons/8/8c/Linux_Distribution_Timeline_Dec._2020.svg"&gt;here&lt;/a&gt; (there are a lot of them as you can see 😂).&lt;/p&gt;

&lt;p&gt;Once you picked the distro you want, go to their website and download the .iso file. Here is the Ubuntu download &lt;a href="https://ubuntu.com/download/desktop"&gt;website&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In the case of Ubuntu, you can choose between the LTS (long-term support) version or the latest one. I personally always choose the latest one but you can install the version you want.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-3-create-the-bootable-usb-drive"&gt;
  &lt;/a&gt;
  Step 3 : Create the bootable USB drive
&lt;/h2&gt;

&lt;p&gt;Plug in the pendrive and open the program you installed in Step 1.&lt;/p&gt;

&lt;p&gt;Load the .iso file to the program, select the pendrive to install the Linux image and click in the confirm button.&lt;/p&gt;

&lt;p&gt;Now you just need to wait until the program finished doing its magic.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-4-configurate-the-boot-order"&gt;
  &lt;/a&gt;
  Step 4 : Configurate the Boot order
&lt;/h2&gt;

&lt;p&gt;Without removing your pendrive, reboot your PC and go to the BIOS/UEFI.&lt;/p&gt;

&lt;p&gt;Depending on the PC you can access the BIOS by clicking F2, fn + F2, or delete just before it starting booting/loading your Operating System. If you are not sure which key you need to press to access the BIOS on your computer, you can google it (for example, "how to get into MSI BIOS").&lt;/p&gt;

&lt;p&gt;Once you are on the BIOS you will need to fix the boot order priorities. The "USB" option should be the first one.&lt;br&gt;
The BIOS are different so if you have some issues changing the configuration of the boot order, you always can google how to do it with your specific computer ("How I change the boot order priority in MSI").&lt;/p&gt;

&lt;p&gt;Normally on the BIOS you will have a "cheatsheet" on how to move in there and how change settings, for example:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HXuvPn3H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/3MiqAIQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HXuvPn3H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/3MiqAIQ.png" alt="BIOS cheatsheet"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After that, save and exit from the BIOS and do not remove the pendrive for the next step.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-5-install-linux"&gt;
  &lt;/a&gt;
  Step 5 : Install Linux
&lt;/h2&gt;

&lt;p&gt;This step will vary depending on the Linux distro you choose on Step 2.&lt;/p&gt;

&lt;p&gt;When you exit the BIOS, the PC will restart and you will see a simple Command interface who will guide you on the installation.&lt;/p&gt;

&lt;p&gt;And done!! You now have Linux installed on your PC! 🎉&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bonus"&gt;
  &lt;/a&gt;
  Bonus!
&lt;/h2&gt;

&lt;p&gt;I normally install Linux in a partition on my PC and I always have the problem that Windows boots before Linux. &lt;/p&gt;

&lt;p&gt;To change the booting order, you should reboot your PC and go to the BIOS. Once you are in the BIOS, Change the booting priority so that Linux is the first one.&lt;/p&gt;

&lt;p&gt;Again, if you have any problem changing the boot priority I recommend how to do it with your specific computer.&lt;/p&gt;

&lt;p&gt;Now your PC will boot with Linux as default 🎉&lt;/p&gt;

&lt;p&gt;Thanks for checking out this article! Hope you find it useful!&lt;/p&gt;

</description>
      <category>linux</category>
      <category>ubuntu</category>
      <category>opensource</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Building Microservices in Go: REST APIs: Putting it all together</title>
      <author>Mario Carrion</author>
      <pubDate>Sat, 03 Jul 2021 17:00:48 +0000</pubDate>
      <link>https://dev.to/mariocarrion/building-microservices-in-go-rest-apis-putting-it-all-together-17a0</link>
      <guid>https://dev.to/mariocarrion/building-microservices-in-go-rest-apis-putting-it-all-together-17a0</guid>
      <description>&lt;h2&gt;
  &lt;a href="#putting-it-all-together"&gt;
  &lt;/a&gt;
  Putting it All Together
&lt;/h2&gt;

&lt;p&gt;The last five posts covered all steps I consider necessary for building the barebones of a REST API, it's not a complete list for sure, it's missing things like deployment, infrastructure and other important details we must consider before making the API live, like scalability, reliability, instrumentation, monitoring and logging, but I will cover those in detail in future posts.&lt;/p&gt;

&lt;p&gt;The following are the concrete decisions I like to follow when building brand new API from scratch:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#types-to-match-http-resources"&gt;
  &lt;/a&gt;
  Types to match HTTP resources
&lt;/h2&gt;

&lt;p&gt;This was covered when I talked about &lt;a href="https://mariocarrion.com/2021/04/18/golang-microservices-rest-api-http-handlers.html"&gt;HTTP Handlers&lt;/a&gt; where I mentioned implementing a type to take care of everything related to &lt;em&gt;Tasks&lt;/em&gt;. I like following this guideline because the Go types can easily be categorized and organized accordingly to the HTTP resources they represent.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#custom-go-types-to-describe-json-payloads"&gt;
  &lt;/a&gt;
  Custom Go Types to describe JSON payloads
&lt;/h2&gt;

&lt;p&gt;Implementing &lt;a href="https://mariocarrion.com/2021/04/28/golang-microservices-rest-api-custom-json-type.html"&gt;Custom JSON Types&lt;/a&gt; is extra work for sure, but I believe making the user experience better for our costumers always matter, sure it's more work for the team in charge of building the APIs but defining more humanized types allows defining much more clearer values for the fields used in the payloads.&lt;/p&gt;

&lt;p&gt;Considering JSON is the &lt;em&gt;de facto&lt;/em&gt; format used for HTTP-based APIs it's important we take advantage of the verbosity we have and be as explicit as we can. The common use case would be to define custom Go types representing enum values in JSON.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#document-your-apis"&gt;
  &lt;/a&gt;
  Document your APIs
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://mariocarrion.com/2021/05/02/golang-microservices-rest-api-openapi3-swagger-ui.html"&gt;OpenAPI&lt;/a&gt; is a great way to create a standardized documentation, we can share it with our costumers as well as with the team in charge of implementing the actual APIs in code.&lt;/p&gt;

&lt;p&gt;The process I described in the post works but I like following a different approach to make sure the different services depending on that documentation don't have circular relationships.&lt;/p&gt;

&lt;p&gt;To do that the actual document is generated &lt;em&gt;outside&lt;/em&gt; of the project implementing it, and the project meant to implement the code can enforce the rules defined by the document as well as reusing the code that was could be generated from it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Finally, regarding the most difficult topic IMO: &lt;em&gt;versioning&lt;/em&gt;, I like keeping it simple and use path-based APIs; technically in the end using any of the possible options is easy to do thanks to existing gateways that could route requests to different implementations as needed.&lt;/p&gt;

&lt;p&gt;In future posts I will cover more things to consider when &lt;em&gt;Building Microservices in Go&lt;/em&gt;, until then I will talk to you later.&lt;/p&gt;

</description>
      <category>go</category>
      <category>rest</category>
      <category>microservices</category>
    </item>
    <item>
      <title>Connect to APIs with NoCode</title>
      <author>Mohd Danish</author>
      <pubDate>Sat, 03 Jul 2021 16:28:48 +0000</pubDate>
      <link>https://dev.to/mddanishyusuf/connect-to-apis-with-nocode-40da</link>
      <guid>https://dev.to/mddanishyusuf/connect-to-apis-with-nocode-40da</guid>
      <description>&lt;p&gt;We all know that public APIs documentation is messy and don't know how to get started with any API. So, now you don't have to worry about complex documentations.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://nocodeapi.com"&gt;NoCodeAPI&lt;/a&gt;  makes it easy for you to connect with public APIs and give you a secure, simple, unique API endpoint with in-built features.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#benefits-of-using-nocodeapi"&gt;
  &lt;/a&gt;
  Benefits of using NoCodeAPI
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;⏲️ Bypass Limits&lt;/li&gt;
&lt;li&gt;👊 Hassle-Free&lt;/li&gt;
&lt;li&gt;🤯 No Server Headache&lt;/li&gt;
&lt;li&gt;⚡ Fast&lt;/li&gt;
&lt;li&gt;🔑 Secure&lt;/li&gt;
&lt;li&gt;✳️ Logs&lt;/li&gt;
&lt;li&gt;📜 Mini Documentation&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This website has a huge list of applications like Google Sheet, Instagram, Youtube, Airtable, Zoho Mail, AWS S3, Vimeo, WordPress, Mailgun, Webflow, Spotify, Calendly, Twitter,  Telegram, Github, and more than 50 applications in its &lt;a href="https://nocodeapi.com/marketplace"&gt;marketplace&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this article, I'll show you how to connect with  &lt;a href="https://nocodeapi.com/google-sheets-api"&gt;Google sheet API&lt;/a&gt;,  &lt;a href="https://nocodeapi.com/airtable-api"&gt;Airtable API&lt;/a&gt;, &amp;amp;  &lt;a href="https://nocodeapi.com/webflow-cms-api"&gt;Webflow CMS API&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Before getting started first, create an account at  &lt;a href="https://app.nocodeapi.com/signup"&gt;NoCodeAPI&lt;/a&gt; and it just took 1-minute to start.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#connect-with-google-sheet"&gt;
  &lt;/a&gt;
  Connect with Google Sheet
&lt;/h2&gt;

&lt;p&gt;Login to NoCodeAPI, Go to the marketplace, find Google sheet API, &amp;amp; activate this.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--K4mUQ2Pd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625201843708/McZihXcH7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K4mUQ2Pd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625201843708/McZihXcH7.png" alt="Google Sheet Setup page"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To make Google Sheet API you have to &lt;strong&gt;Authenticate with your Google Account&lt;/strong&gt;. After this, get your spreadsheet id to make Sheet API.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sheet ID&lt;/strong&gt; - Your google spreadsheet ID of which you want API.&lt;/p&gt;

&lt;p&gt;Example URL &lt;strong&gt;&lt;a href="https://docs.google.com/spreadsheets/d/1i27K4e5m1H2-TTdXgVNmfzn_V2LolgjVtpGYjZ50NX4/edit"&gt;https://docs.google.com/spreadsheets/d/1i27K4e5m1H2-TTdXgVNmfzn_V2LolgjVtpGYjZ50NX4/edit&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;Sheet ID&lt;/strong&gt; is the part after &lt;strong&gt;d/&lt;/strong&gt;, in the above link, it's &lt;strong&gt;1i27K4e5m1H2-TTdXgVNmfzn_V2LolgjVtpGYjZ50NX4&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Click on the &lt;strong&gt;Create Google Sheet API&lt;/strong&gt; button then &lt;strong&gt;authenticate with your Google Account&lt;/strong&gt;. After authenticating you will be redirected back to the NoCodeAPI with a Modal, just follow the form and click on Create button.  🎉 Done!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5qKzKVST--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625202543387/JfInDaWgO.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5qKzKVST--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625202543387/JfInDaWgO.png" alt="Google Sheet API endpoint"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now you can get your sheet tabs data as JSON with the endpoint showing in above picture. You can use an in-built playground to test the endpoint. Just click on &lt;strong&gt;Use this API&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1qNZLfzu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625202789243/YBudK3wrg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1qNZLfzu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625202789243/YBudK3wrg.png" alt="Google Sheet Playground"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can test this endpoint in your browser tab. &lt;a href="https://v1.nocodeapi.com/coder/google_sheets/moIDovKbPEuOexXh?tabId=data"&gt;https://v1.nocodeapi.com/coder/google_sheets/moIDovKbPEuOexXh?tabId=data&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are the following endpoints for Google Sheet API:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Get All Records - Get all sheet data by tabId.&lt;/li&gt;
&lt;li&gt;Get single row - Pass row id to get single row object from sheet.&lt;/li&gt;
&lt;li&gt;Append new row - Push new row into your google sheet.&lt;/li&gt;
&lt;li&gt;Update row - Pass an object with new values with row_id.&lt;/li&gt;
&lt;li&gt;Delete one row - You can also delete one row or multiple rows at a time.&lt;/li&gt;
&lt;li&gt;Create a new Spreadsheet - You can also make a fresh new spreadsheet with POST call.&lt;/li&gt;
&lt;li&gt;Add Sheet Tab - You can add a new tab into your spreadsheet with this endpoint.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;↳ &lt;a href="https://nocodeapi.com/docs/google-sheets-api"&gt;View google sheet API docs&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#connect-with-airtable"&gt;
  &lt;/a&gt;
  Connect with Airtable
&lt;/h2&gt;

&lt;p&gt;Go to the marketplace, find Airtable API, &amp;amp; activate this.&lt;/p&gt;

&lt;p&gt;To make Airtable you need 2 values:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;API key&lt;/strong&gt; - You can get your Airtable API key from here ** &lt;a href="https://airtable.com/account"&gt;https://airtable.com/account&lt;/a&gt; **&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Base ID&lt;/strong&gt; - Go here **  &lt;a href="https://airtable.com/api"&gt;https://airtable.com/api&lt;/a&gt;  **  and select your form base then you can find the &lt;strong&gt;base ID&lt;/strong&gt; in URL &amp;amp; It begins with the &lt;strong&gt;app&lt;/strong&gt;. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Example: &lt;strong&gt;&lt;a href="https://airtable.com/appofMoPxdu7iQ7hf/api/docs"&gt;https://airtable.com/appofMoPxdu7iQ7hf/api/docs&lt;/a&gt;&lt;/strong&gt; -&amp;gt; &lt;strong&gt;appofMoPxdu7iQ7hf&lt;/strong&gt; is the &lt;strong&gt;Base ID&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Click on the &lt;strong&gt;Create Airtable API&lt;/strong&gt; button then put the required values into the form and click on the &lt;strong&gt;Create&lt;/strong&gt; button.  🎉 Done!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4N7-eoVQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625203669690/CxXvfQOdq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4N7-eoVQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625203669690/CxXvfQOdq.png" alt="Airtable API endpoint"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are the following endpoints for Airtable API:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Get All Records&lt;/strong&gt; - List all records from the table of your Airtable Base.&lt;/li&gt;
&lt;li&gt;*&lt;em&gt;Get Single Record *&lt;/em&gt;- Get a single record&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Create Records&lt;/strong&gt; - Create multiple new records into the table.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Update Records&lt;/strong&gt; - You can update multiple records in one API call.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Delete Records&lt;/strong&gt; - You can delete multiple records in one API call.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://nocodeapi.com/docs/airtable-api"&gt;View Airtable API docs&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#connect-with-webflow-cms"&gt;
  &lt;/a&gt;
  Connect with Webflow CMS
&lt;/h2&gt;

&lt;p&gt;Webflow is the most powerful modern NoCode web builder on the internet. Webflow has its in-build database that is Webflow CMS. &lt;/p&gt;

&lt;p&gt;You can get your Webflow CMS data as JSON without any backend coding and server logic.&lt;/p&gt;

&lt;p&gt;Go to the marketplace, find Webflow API, &amp;amp; activate this.&lt;/p&gt;

&lt;p&gt;To make Webflow you need only one value:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;API Access key&lt;/strong&gt; - Go to &lt;strong&gt;dashboard&lt;/strong&gt; -&amp;gt; Click on &lt;strong&gt;three dots icon&lt;/strong&gt; -&amp;gt; &lt;strong&gt;Settings&lt;/strong&gt; -&amp;gt; &lt;strong&gt;Integrations&lt;/strong&gt; -&amp;gt; Generate &lt;strong&gt;API Access&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Click on the &lt;strong&gt;Create Webflow API&lt;/strong&gt; button then put required values into the form and click on the &lt;strong&gt;Create&lt;/strong&gt; button.  🎉 Done!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iu7DYxA3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625204427513/oUuiwxDj2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iu7DYxA3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625204427513/oUuiwxDj2.png" alt="Webflow CMS API endpoint"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are the following endpoints for Webflow API:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Get All Collection Items&lt;/strong&gt; - Get your all items from the Webflow CMS collections.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Get Single Item&lt;/strong&gt; - Get a single Item of the CMS collection&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Add Item&lt;/strong&gt; - Add new item into the collection&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Update Records&lt;/strong&gt; - You can update item values into the collection.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Delete Item&lt;/strong&gt; - You can also delete an item from the collection.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://nocodeapi.com/docs/webflow-cms-api"&gt;View Webflow CMS API docs&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;This is all. I hope find this article useful and make your API development easy. Let me know your thought on the NoCodeAPI.&lt;/p&gt;

&lt;p&gt;↳ Website: &lt;a href="https://nocodeapi.com"&gt;https://nocodeapi.com&lt;/a&gt;&lt;br&gt;
↳ Follow me  &lt;a href="https://twitter.com/mddanishyusuf"&gt;@mddanishyusuf&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;The last favor is from you that share this blog post on Facebook, Twitter, LinkedIn, or with your friends. 🙏&lt;/p&gt;

</description>
      <category>api</category>
      <category>nocode</category>
    </item>
    <item>
      <title>Book Club: Eloquent Javascript - Chapter One</title>
      <author>Alex Kharouk</author>
      <pubDate>Sat, 03 Jul 2021 16:19:27 +0000</pubDate>
      <link>https://dev.to/kharouk/book-club-eloquent-javascript-chapter-one-5c0d</link>
      <guid>https://dev.to/kharouk/book-club-eloquent-javascript-chapter-one-5c0d</guid>
      <description>&lt;p&gt;I recently did a technical job interview that was for a frontend position. It was for a company that specialised in cybersecurity technologies, but they were looking for React developers to create better UI dashboards for clients.&lt;/p&gt;

&lt;p&gt;I expected the interview to ask some algorithm questions, maybe talk about some JavaScript data structures or optimisation. Instead, I was taken aback by the questions I got. &lt;em&gt;What is prototypal inheritance?&lt;/em&gt; &lt;em&gt;Can you explain, fundamentally, what are promises?&lt;/em&gt; &lt;em&gt;What are some differences between a function declaration and a function expression&lt;/em&gt;?&lt;/p&gt;

&lt;p&gt;My first thought right away was, how &lt;em&gt;simple&lt;/em&gt; must their codebase be?! I thought the company was looking for React devs! I now see that they were looking for competent Frontend Engineers, not people who can quickly spin up a Next app and boast about how they understand static generation. They wanted engineers who have mastered the fundamentals. These fundamentals can help solve any complex bug in the JS ecosystem. That's the beauty of being a master of the language.&lt;/p&gt;

&lt;p&gt;Every error message in any framework is just because something was grinding against the way JavaScript works. However, JavaScript is complex. So how does JavaScript work?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-interview-didnt-go-so-well"&gt;
  &lt;/a&gt;
  The Interview didn't go so well.
&lt;/h2&gt;

&lt;p&gt;I realised I have a good gist of what's going on with JavaScript, but I struggled to explain the basics simply because I never looked inside the JavaScript &lt;em&gt;engine&lt;/em&gt;. It was a &lt;strong&gt;fantastic&lt;/strong&gt; lesson; I didn't want to feel resentful or upset with how little I know. Instead, I am using the experience as a way to learn. I want to be able to answer these questions. I always enjoyed looking underneath the hood; now it's time to &lt;strong&gt;seriously&lt;/strong&gt; focus my direction towards the language that kick-started my career.&lt;/p&gt;

&lt;p&gt;I want to start a book club. For myself. Potentially for you, too, the reader. I searched online (and my dusty bookcase) for an up-to-date, renowned textbook around JavaScript. I decided to start with &lt;a href="https://eloquentjavascript.net/"&gt;Eloquent JavaScript&lt;/a&gt;, highly regarded as an excellent JavaScript text. Also, I have skimmed through it before, and the author, Marijn Haverbeke, has a great voice.&lt;/p&gt;

&lt;p&gt;I was a bit nervous to begin because it might be too basic at this point in my career. Starting with sections that explain what a &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String"&gt;string&lt;/a&gt; is will quickly lose my interest. At this time of writing, however, I am pleasantly surprised with what I read so far.&lt;/p&gt;

&lt;p&gt;This post will focus on chapter one. The series will focus on my notes and observations. It will be around the content I didn't know about JavaScript. I strongly recommend you read the book yourself. It's free, available for most devices, and possibly covers everything you need to know to get started with the language and programming in general.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#chapter-one"&gt;
  &lt;/a&gt;
  Chapter One
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Below the surface of the machine, the program moves. Without effort, it expands and contracts. In great harmony, electrons scatter and regroup. The forms on the monitor are but ripples on the water. The essence stays invisibly below.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Master Yuan-Ma, The Book of Programming&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#numbers-and-memory"&gt;
  &lt;/a&gt;
  Numbers and Memory
&lt;/h3&gt;

&lt;p&gt;Dealing with types in JavaScript costs memory. If you need to store values in a variable (or &lt;em&gt;bindings&lt;/em&gt; as the author calls them), the variables need to occupy space on your computer. In typical modern computers, we have more than 30 billion bits in volatile working memory (think RAM). Nonvolatile storage, like SSDs or hard disks, have much, much more.&lt;/p&gt;

&lt;p&gt;JavaScript's number type has a fixed number for bits. 64 bits to store a single number value. That's fascinating because, at first glance, it doesn't sound like a lot. When you begin understanding bits, you realise that what that means is that we have around &lt;code&gt;2^64&lt;/code&gt; (2 to the power of 64) potential numbers. That equates to approximately 18 quintillion options.&lt;/p&gt;

&lt;p&gt;That is a lot. Issues usually arise when dealing with massive numbers. Let's talk about all the grains of sand on our Earth. If we stored that value in a variable, we would still have around ten quintillion bits left to do whatever we want.&lt;/p&gt;

&lt;p&gt;Some caveats include negative numbers that use an extra bit to signify the &lt;code&gt;-&lt;/code&gt; sign and non-whole numbers like floats. If we consider all of that, we would still have 9 trillion combinations for whole numbers. Unfortunately, not enough to store all the grains of sand...&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#operators-and-types"&gt;
  &lt;/a&gt;
  Operators and Types
&lt;/h3&gt;

&lt;p&gt;We have unary operators, rather than just binary operators. A binary operator would be something like &lt;code&gt;5 + 3&lt;/code&gt;, where the plus symbol takes two values. A unary operator takes one value; hence the name. &lt;code&gt;typeof&lt;/code&gt; is a unary operator that returns the value type.&lt;/p&gt;

&lt;p&gt;There's only one ternary operator called the conditional operator. You might have seen it before: &lt;code&gt;true ? 1 : 2&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;null&lt;/code&gt; and &lt;code&gt;undefined&lt;/code&gt; are peculiar types. The author says they are used interchangeably and are more or less the same thing. I can't entirely agree, as I see &lt;code&gt;undefined&lt;/code&gt; as values that could exist later, whilst null symbolises the value's absence. I'd instead stick to just using undefined if I can, but it's always best to secure your types wherever possible. The author also mentioned that:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The difference in meaning between undefined and null is an accident of JavaScript's design, and it doesn't matter most of the time.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Exploring that a little bit, I found this quote on a Stack Overflow &lt;a href="https://stackoverflow.com/questions/5076944/what-is-the-difference-between-null-and-undefined-in-javascript"&gt;post&lt;/a&gt; explaining a bit more about the accident.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Quote from the book Professional JS For Web Developers (Wrox): "You may wonder why the typeof operator returns 'object' for a value that is null. This was actually an error in the original JavaScript implementation that was then copied in ECMAScript. Today, it is rationalised that null is considered a placeholder for an object, even though, technically, it is a primitive value."&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Captain Sensible (great name)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In JavaScript, we also have automatic type conversion:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// → 0 (null is converted to 0)&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;5&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// → 4 ('5' becomes 5)&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;5&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// → 51 (1 becomes '1')&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;five&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// → NaN (can't use *, /, or - on strings)&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// → true (false becomes 0)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A neat tip is if you ever find yourself with &lt;code&gt;NaN&lt;/code&gt; errors, keep in mind that further arithmetic operations on &lt;code&gt;NaN&lt;/code&gt; keep producing &lt;code&gt;NaN&lt;/code&gt;, so look where you might be doing any accidental type conversions.&lt;/p&gt;

&lt;p&gt;It's also best to use the strict equal operator &lt;code&gt;===&lt;/code&gt; as that allows you to &lt;em&gt;precisely&lt;/em&gt; test for equal values and avoids automatic type conversion.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#end-of-chapter-1"&gt;
  &lt;/a&gt;
  End of Chapter 1
&lt;/h2&gt;

&lt;p&gt;That's it! As I get into the groove of writing these chapter recaps, I'll hopefully also learn to connect my notes. Currently, it's a little bit all over the place. I do hope you might've learned at least one thing. If anything was confusing here, please let me know, and I can try to explain further. Otherwise, you can check out chapter one on the author's website &lt;a href="https://eloquentjavascript.net/01_values.html"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Have you read the chapter? The book? let me know your thoughts in the comments, and if you think it's a great book to really master the fundamentals in JavaScript.&lt;/p&gt;

&lt;p&gt;The next chapter focuses on &lt;strong&gt;Program Structure&lt;/strong&gt;. We just learned about the nails; let's master swinging the hammer.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Originally posted on my personal website, which can be found at &lt;a href="https://alex.kharo.uk"&gt;alex.kharo.uk&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>bookclub</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>What is an API? API for beginners</title>
      <author>Ayushi Rawat </author>
      <pubDate>Sat, 03 Jul 2021 16:14:20 +0000</pubDate>
      <link>https://dev.to/ayushi7rawat/what-is-an-api-api-for-beginners-4mfh</link>
      <guid>https://dev.to/ayushi7rawat/what-is-an-api-api-for-beginners-4mfh</guid>
      <description>&lt;p&gt;Hello reader! In this blog post, we will learn about API in plain English.&lt;/p&gt;

&lt;p&gt;You can refer to my &lt;strong&gt;YouTube video Tutorial&lt;/strong&gt; to see a working tutorial for better understanding and a step-by-step guide of the same. &lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/NHVQiDDZ5TA"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-will-be-covered-in-this-blog"&gt;
  &lt;/a&gt;
  What will be covered in this Blog
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="mf"&gt;1.&lt;/span&gt;  &lt;span class="n"&gt;What&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;API&lt;/span&gt;&lt;span class="err"&gt;?&lt;/span&gt;
&lt;span class="mf"&gt;2.&lt;/span&gt;  &lt;span class="n"&gt;What&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="n"&gt;API&lt;/span&gt; &lt;span class="n"&gt;endpoint&lt;/span&gt;&lt;span class="err"&gt;?&lt;/span&gt;
&lt;span class="mf"&gt;3.&lt;/span&gt;  &lt;span class="n"&gt;What&lt;/span&gt; &lt;span class="n"&gt;are&lt;/span&gt; &lt;span class="n"&gt;API&lt;/span&gt; &lt;span class="n"&gt;functionalities&lt;/span&gt;&lt;span class="err"&gt;?&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;Let's get started!&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-an-api"&gt;
  &lt;/a&gt;
  What is an API?
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;API&lt;/strong&gt; stands for &lt;em&gt;Application Programming Interface&lt;/em&gt;. The Wikipedia definition reads:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;An &lt;strong&gt;API&lt;/strong&gt; is a connection between &lt;a href="https://en.wikipedia.org/wiki/Computer"&gt;computers&lt;/a&gt; or between &lt;a href="https://en.wikipedia.org/wiki/Computer_program"&gt;computer programs&lt;/a&gt;. It is a type of software &lt;a href="https://en.wikipedia.org/wiki/Interface_(computing)"&gt;interface&lt;/a&gt;, offering a service to other pieces of &lt;a href="https://en.wikipedia.org/wiki/Software"&gt;software&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In layman's terms, API is a messenger. Let's understand this with a very famous non-programming example. &lt;/p&gt;

&lt;p&gt;Say, you visit a restaurant, the waiter presents you with the menu card. You decide what you want to eat. It could be pizza, pasta or fries. The waiter takes down your order and then shares it with the chef. Once your food is ready, he delivers the meal right to you.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3r1JPUvm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625320465148/U62U7ZQdf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3r1JPUvm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625320465148/U62U7ZQdf.png" alt="1.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is a very simple process. You do not have to worry about how the food will be prepared or any other thing that takes place inside the kitchen for that matter. Here, the waiter acts as an API. He is the link that establishes connectivity between you and the kitchen. &lt;/p&gt;

&lt;p&gt;There are different types of APIs, which we will see in the next blog.&lt;/p&gt;

&lt;p&gt;Now. let's look at a real-world example. Whenever you create a new account on an application, you get an option to signup with Facebook or Google. Ever wondered how that works?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cQsLHsam--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625320615665/e2n8vhuPy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cQsLHsam--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625320615665/e2n8vhuPy.png" alt="Screenshot_1.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Well, Facebook and Google already have your inputs, so instead of performing the tedious task of capturing every user's information and verifying the credentials, the app accesses their database through the API to verify your credentials. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6kaHfy9g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625320635703/YLyOw-qDg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6kaHfy9g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625320635703/YLyOw-qDg.png" alt="Screenshot_3.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Another very famous example is a weather app. If you want to build one, you cannot physically go and capture the readings from all over the world. Instead, you can use a third-party API to fetch the weather details. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YCA2BiNl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625320628707/jRmCsG5Q4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YCA2BiNl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625320628707/jRmCsG5Q4.png" alt="Screenshot_2.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-api-endpoint"&gt;
  &lt;/a&gt;
  What is API endpoint?:
&lt;/h2&gt;

&lt;p&gt;API sets the rules for communication. You do not know what happens at the backend or how it happens, you just interact with the API interface and get the job done.&lt;/p&gt;

&lt;p&gt;In the case of the restaurant example, you do not know the food recipe or anything that goes inside the kitchen, you interact with the waiter and he establishes the connection between you and the kitchen so, in this scenario, the waiter is your API endpoint.&lt;/p&gt;

&lt;p&gt;Well, this also opens doors to security theft. So for this very reason API uses API keys to add a protection layer. An API key is used for identification and authorization which is nothing but a security code, used to keep a track of the users. Being said that, not every API has a key. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NmMt9sAX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625320652141/S6huz5zuO.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NmMt9sAX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625320652141/S6huz5zuO.png" alt="Screenshot_4.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In order to communicate with systems, there are certain protocols to be followed when using an API endpoint. APIs also have documentation for the same. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#api-functionalities"&gt;
  &lt;/a&gt;
  API functionalities:
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Establishes a connection between computer systems and enables data accessibility.&lt;/li&gt;
&lt;li&gt;Allows monitoring users and their activity.&lt;/li&gt;
&lt;li&gt;Increased security.&lt;/li&gt;
&lt;li&gt;Hide complexity by eliminating the 'How' factor. &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;That's it. And with that, it's a wrap! I hope you found the article useful and now you can start building some projects with API!&lt;/p&gt;

&lt;p&gt;I create content about &lt;strong&gt;Career, Blogging, Programming, and Productivity&lt;/strong&gt;, If this is something that interests you, please share the article with your friends and connections. You can also subscribe to my newsletter to get updates every time I write something!&lt;/p&gt;

&lt;p&gt;Thank you for reading, If you have reached so far, please like the article, It will encourage me to write more such articles. Do share your valuable suggestions, I appreciate your honest feedback!&lt;/p&gt;

&lt;p&gt;I would strongly recommend you to Check out the &lt;a href="https://www.youtube.com/watch?v=jAOkWehMF6E"&gt;YouTube video&lt;/a&gt; of the same and &lt;strong&gt;don't forget to subscribe to my Channel&lt;/strong&gt;. I would love to connect with you at &lt;a href="https://twitter.com/ayushi7rawat"&gt;Twitter&lt;/a&gt; | &lt;a href="https://www.linkedin.com/in/ayushi7rawat/"&gt;LinkedIn&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You should definitely check out my other Blogs:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ayushirawat.com/python-39-all-you-need-to-know"&gt;Python 3.9: All You need to know&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ayushirawat.com/github-cli-10-all-you-need-to-know"&gt;GitHub CLI 1.0: All you need to know&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ayushirawat.com/how-to-make-your-own-google-chrome-extension-1"&gt;How to make your own Google Chrome Extension&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ayushirawat.com/run-javascript-from-python"&gt;Run Javascript from Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ayushirawat.com/automate-whatsapp-using-python"&gt;Automate WhatsApp using Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ayushirawat.com/automate-cowin-vaccine-slots-availablity-using-python"&gt;Automate Cowin Vaccine slots Availability using Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ayushirawat.com/what-is-competitive-programming-or-beginners-guide"&gt;What is Competitive Programming&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;See you in my next Blog article, Take care!!&lt;/p&gt;

</description>
      <category>programming</category>
      <category>webdev</category>
    </item>
    <item>
      <title>✅ Do You Have Any Questions For Me? | Facebook Behavioral (Jedi) Interview Series 🔥</title>
      <author>The Interview Sage</author>
      <pubDate>Sat, 03 Jul 2021 16:04:33 +0000</pubDate>
      <link>https://dev.to/theinterviewsage/do-you-have-any-questions-for-me-facebook-behavioral-jedi-interview-series-1dpa</link>
      <guid>https://dev.to/theinterviewsage/do-you-have-any-questions-for-me-facebook-behavioral-jedi-interview-series-1dpa</guid>
      <description>&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/QNBBpRGw-U4"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Before we discuss this question, let us recap what the Behavioral Interview Round at Facebook is.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Behavioral Interview Round is also known as the Jedi Interview round at Facebook.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It is about you and your history, your résumé, and your motivation.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The purpose of this interview is to assess whether the candidate will thrive in Facebook's peer-to-peer, minimal process, and unstructured engineering organization.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For Software Engineers, the behavioral interview is actually part behavioral and part coding. The coding part is a shorter version of the usual coding interviews and is included to supplement the other two coding interviews to get an additional coding signal.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#tips-amp-tricks-to-effectively-prepare-for-behavioral-interviews"&gt;
  &lt;/a&gt;
  Tips &amp;amp; Tricks to effectively prepare for Behavioral Interviews
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_kgnGQmN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4y9t832s7yc0j58aycqb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_kgnGQmN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4y9t832s7yc0j58aycqb.png" alt="Tips &amp;amp; Tricks to effectively prepare for Behavioral Interviews" title="Behavioral Interview Tips &amp;amp; Tricks"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Know yourself! Take the time to review your résumé, as the interviewer will almost certainly ask about key events in your work history.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Have concrete examples or anecdotes to support each of the questions.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Familiarize yourself with Facebook's mission statement and its five core values:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Be Bold&lt;/li&gt;
&lt;li&gt;Focus on Impact&lt;/li&gt;
&lt;li&gt;Move Fast&lt;/li&gt;
&lt;li&gt;Be Open&lt;/li&gt;
&lt;li&gt;Build Social Value&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Be yourself! Be open and honest about your successes and failures.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Be humble and focus on teamwork, leadership, and mentorship qualities.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now, let us review how to effectively answer this question.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#question-do-you-have-any-questions-for-me"&gt;
  &lt;/a&gt;
  Question: Do you have any questions for me?
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LRm4c4D9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x6a5u4a4t9gyz20kif70.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LRm4c4D9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x6a5u4a4t9gyz20kif70.png" alt="Do you have any questions for me?" title="Do you have any questions for me?"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&lt;a href="https://www.youtube.com/watch?v=ObFGBUF-TuQ&amp;amp;t=1632s"&gt;Video Explanation&lt;/a&gt; with Evaluation Criteria, Questions that you can ask, and Tips &amp;amp; Tricks.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The interviewers often asked a critical question towards the end of the behavioral interviews: "Do you have any questions for me?"&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#evaluation-criteria"&gt;
  &lt;/a&gt;
  Evaluation Criteria
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TP-1CeZ8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bv726aw34n6136lbwbib.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TP-1CeZ8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bv726aw34n6136lbwbib.png" alt="Evaluation Criteria for Do you have any questions for me?" title="Evaluation Criteria for 'Do you have any questions for me?'"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This question helps the interviewer to gauge your passion and interest in the current role you are applying for.&lt;/p&gt;

&lt;p&gt;It would be best to frame your questions specific to the role and the company you are interviewing for. This will help demonstrate to the interviewer that you have done your homework about their company and culture.&lt;/p&gt;

&lt;p&gt;It also gives you an opportunity to end the interview on a strong note.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#questions-that-you-can-ask"&gt;
  &lt;/a&gt;
  Questions That You Can Ask
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PbV1-hKX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rlpqf24brdv6oiaz7k0m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PbV1-hKX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rlpqf24brdv6oiaz7k0m.png" alt="Questions That You Can Ask" title="Questions That You Can Ask"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here are a few sample questions that you can ask the interviewer at the end of the interview.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;What is the New Hire onboarding process?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;How and when are the performance reviews conducted? How are the performance bonuses and RSU refreshers decided?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;How long have you been with the company?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What is your favorite part about working here?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What are the current projects that you are working on?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What are the biggest challenges that you have solved recently?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What gets you most excited about the company's future?&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#tips-amp-tricks"&gt;
  &lt;/a&gt;
  Tips &amp;amp; Tricks
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rgImFwGr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c58nemm4bnbmu1t5hbpx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rgImFwGr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c58nemm4bnbmu1t5hbpx.png" alt="Tips and Tricks for Do you have any questions for me?" title="Tips &amp;amp; Tricks for 'Do you have any questions for me?'"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here are some tips and tricks to effectively prepare for this question.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Do not respond with a "No" to this question. It is essential that you respond with a "Yes" and be ready to ask the interviewer a few questions.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Prepare a list of three to five engaging questions before the interview happens.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Ask questions that show you are engaged and excited about the role you are applying for.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Do not ask questions related to salary negotiations. However, you can ask questions related to the performance review process.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Ask questions that get the interviewer to talk about their careers. People appreciate it when you notice the interesting things they are doing.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Frame your questions specific to the company you are interviewing with. This will demonstrate that you have done your homework about them and their culture.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;




&lt;h1&gt;
  &lt;a href="#preparation-material"&gt;
  &lt;/a&gt;
  Preparation Material
&lt;/h1&gt;

&lt;p&gt;Learn more about the Evaluation Criteria, Response Framework, and Tips &amp;amp; Tricks to effectively prepare and answer the top questions asked in the Behavioral Interviews at Facebook. Certain special cases are also discussed which are usually faced by the candidates during these interviews.&lt;/p&gt;

&lt;p&gt;⬇️ &lt;a href="https://www.buymeacoffee.com/interviewsage/e/30176"&gt;Detailed Written Notes on Top Facebook Behavioral Interview Questions&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#cracking-the-facebook-behavioral-interview"&gt;
  &lt;/a&gt;
  Cracking the Facebook Behavioral Interview
&lt;/h1&gt;

&lt;p&gt;If you have not read our first article on Top Facebook Behavioral Interview Questions, we recommend reading it by clicking the below link:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/theinterviewsage" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xMM4L2Ac--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--B2cc8AK0--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/553012/244b250a-5230-4388-84d4-0c1d1ff70fb9.png" alt="theinterviewsage"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/theinterviewsage/top-facebook-behavioral-interview-questions-part-1-2a0o" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;✅ Top Facebook Behavioral Interview Questions (Part 1) | Facebook Jedi Interview Round 🔥&lt;/h2&gt;
      &lt;h3&gt;The Interview Sage ・ May 15 ・ 9 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#career&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;





&lt;h1&gt;
  &lt;a href="#cracking-the-facebook-system-design-interview"&gt;
  &lt;/a&gt;
  Cracking the Facebook System Design Interview
&lt;/h1&gt;

&lt;p&gt;In case if you have not read our series on Cracking the Facebook System Design Interview, we recommend reading it by clicking the below link:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/theinterviewsage" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xMM4L2Ac--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--B2cc8AK0--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/553012/244b250a-5230-4388-84d4-0c1d1ff70fb9.png" alt="theinterviewsage"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/theinterviewsage/top-facebook-system-design-interview-questions-31np" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Top Facebook System Design Interview Questions (Part 1) | Facebook Pirate Interview Round&lt;/h2&gt;
      &lt;h3&gt;The Interview Sage ・ Jan 4 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#career&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;





&lt;h1&gt;
  &lt;a href="#useful-links"&gt;
  &lt;/a&gt;
  Useful Links
&lt;/h1&gt;

&lt;p&gt;✅ &lt;a href="https://bit.ly/Educative-Unlimited"&gt;Educative.io Unlimited Plan [💰 10% off for first 100 users]&lt;/a&gt;&lt;br&gt;
✅ &lt;a href="https://bit.ly/Try-Exponent"&gt;TryExponent.com Membership [💰 Limited Time 10% offer]&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;👩‍💻 &lt;a href="https://www.educative.io/courses/grokking-the-system-design-interview?aff=KQZl"&gt;Best System Design Interview Course&lt;/a&gt;&lt;br&gt;
🚀 &lt;a href="https://bit.ly/SWE-Interview-Course"&gt;Complete SWE Interview Course [💰 Limited Time 10% offer]&lt;/a&gt;&lt;br&gt;
🙋‍♀️ &lt;a href="https://www.buymeacoffee.com/interviewsage/e/30176"&gt;Behavioral Interview Guide [💰 Special Discount]&lt;/a&gt;&lt;br&gt;
📚 &lt;a href="https://smarturl.it/InterviewPrepBook"&gt;Recommended Interview Preparation Book (on Amazon)&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/InterviewSage"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--121vjxPu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/o2l00b1bt3nl8fdfb0nn.png" alt="Buy Me a Coffee"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;center&gt;☕️ Buy us a Coffee at &lt;a href="https://www.buymeacoffee.com/InterviewSage"&gt;BuyMeACoffee.com/InterviewSage&lt;/a&gt;
&lt;/center&gt;



&lt;blockquote&gt;
&lt;p&gt;This article is part of the series on Behavioral Interviews at Facebook. So, follow us to get notified when our next article in this series is published. Thanks for reading! &lt;/p&gt;
&lt;div class="ltag__user ltag__user__id__553012"&gt;
  
    .ltag__user__id__553012 .follow-action-button {
      background-color: #3b49df !important;
      color: #f9fafa !important;
      border-color: #3b49df !important;
    }
  
    &lt;a href="/theinterviewsage" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xMM4L2Ac--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--B2cc8AK0--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/553012/244b250a-5230-4388-84d4-0c1d1ff70fb9.png" alt="theinterviewsage image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/theinterviewsage"&gt;The Interview Sage&lt;/a&gt;
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/theinterviewsage"&gt;Our goal is to create Software Eng Interview tutorials to help you get a job at companies like Facebook, Google, Apple, &amp;amp; Amazon. We will deep-dive into System Design, Coding, &amp;amp; Behavioral interviews.&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;



&lt;/blockquote&gt;

&lt;p&gt;📸 Some images used are from free&lt;span&gt;pik&lt;/span&gt;.com: Freepik, pch.vector, vectorjuice, pikisuperstar, raw&lt;span&gt;pixel&lt;/span&gt;.com, slidesgo, stories, Upklyak, jcomp&lt;/p&gt;

&lt;p&gt;&lt;a href="https://disclosureanddisclaimer.theinterviewsage.com/"&gt;Full Disclosure &amp;amp; Disclaimer&lt;/a&gt;&lt;/p&gt;

</description>
      <category>career</category>
      <category>tutorial</category>
      <category>beginners</category>
      <category>codenewbie</category>
    </item>
  </channel>
</rss>
