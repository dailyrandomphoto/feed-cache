<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Web Development or App Development? Where to start?</title>
      <author>dee-ksha</author>
      <pubDate>Fri, 05 Nov 2021 03:09:19 +0000</pubDate>
      <link>https://dev.to/deeksha_51/web-development-or-app-development-where-to-start-59gl</link>
      <guid>https://dev.to/deeksha_51/web-development-or-app-development-where-to-start-59gl</guid>
      <description>&lt;p&gt;One common question that I have seen my peers ask is whether to start their development journey with Web development or App Development. Beginners in tech are often confused about the right choice to make because there is a wide variety of options and areas to explore.&lt;/p&gt;

&lt;p&gt;Web Development and App Development are emerging sectors for developers. Both the fields have their own benefits and complexities and require different skills, different markets and diversified usage. Therefore, there is no model answer to what you should be starting first.&lt;/p&gt;

&lt;p&gt;But according to my own experience I would suggest to go for web development first due to the following reasons:&lt;/p&gt;

&lt;p&gt;‚Ä¢ App development is the fastest leading trend but web development is something that will never disappear. The web is the best platform for acquiring new users and building a brand. Nearly all brands that opt for an app-based approach build a website too in order to market and promote their app. &lt;/p&gt;

&lt;p&gt;‚Ä¢ Web development is slightly easier to understand and apply than app development and it also lays down a framework which helps in many areas of app development as well like making an API, using different database technologies, working with server and backend etc.&lt;/p&gt;

&lt;p&gt;Whichever route you choose, you'll learn something great and there's no better time to kickstart your development journey than now. So, get yourself started now. Good luck!&lt;/p&gt;

&lt;p&gt;Be curious, Be Innovative and Keep Learning!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>appdev</category>
      <category>beginners</category>
      <category>developers</category>
    </item>
    <item>
      <title>Get Unlimitedüòç BTC With This Line Of Code üî•</title>
      <author>JavaScript</author>
      <pubDate>Fri, 05 Nov 2021 02:46:42 +0000</pubDate>
      <link>https://dev.to/reactjss/get-unlimited-btc-with-this-line-of-code-4lp6</link>
      <guid>https://dev.to/reactjss/get-unlimited-btc-with-this-line-of-code-4lp6</guid>
      <description>&lt;p&gt;Bitcoin inventor Satoshi Nakamoto capped the number of bitcoin at 21 million, meaning there will only ever be 21 million bitcoins in existence. On average, these bitcoins are introduced to the Bitcoin supply at a fixed rate of one block every 10 minutes. In addition, the number of bitcoins released in each of these aforementioned blocks is reduced by 50% every four years. By August 2021, 18.7 million bitcoins were available, leaving roughly 2.3 million to be mined.1 The supply limitation makes Bitcoin scarce and controls inflation that might arise from an unlimited supply of the cryptocurrency. &lt;/p&gt;
&lt;br&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/the-best-beginner-javascript-projects-for-2021/&amp;amp;ved=2ahUKEwj-uLOnmoD0AhVHEncKHeIWDXwQFnoECBoQAQ&amp;amp;sqi=2&amp;amp;usg=AOvVaw16eIeKYPB8xzH6B1hMi2E6"&gt;Get Unlimited BTC With This Line Of Code&lt;/a&gt;&lt;/b&gt;

</description>
    </item>
    <item>
      <title>Best programming languages to start your coding journey with</title>
      <author>dee-ksha</author>
      <pubDate>Fri, 05 Nov 2021 02:31:55 +0000</pubDate>
      <link>https://dev.to/deeksha_51/best-programming-languages-to-start-your-coding-journey-with-1lg5</link>
      <guid>https://dev.to/deeksha_51/best-programming-languages-to-start-your-coding-journey-with-1lg5</guid>
      <description>&lt;p&gt;Whether you are looking to start coding as a hobby or to pursue a career, the very first step is to decide which programming language to begin with.&lt;/p&gt;

&lt;p&gt;There are hundreds of programming languages in widespread use, each with it's own complexities, pros and cons. If you are a beginner then it might be confusing to choose where to start from, after all you will be putting time and efforts into learning so you would want to steer in the right direction.&lt;/p&gt;

&lt;p&gt;There are several things to consider while making your decision like: &lt;/p&gt;

&lt;p&gt;‚Ä¢ The fields which are accompanied by the language&lt;br&gt;
‚Ä¢ Speed and Efficiency&lt;br&gt;
‚Ä¢ Portability&lt;br&gt;
‚Ä¢ Degree of use&lt;br&gt;
‚Ä¢ Level of the language&lt;br&gt;
‚Ä¢ Developer Experience&lt;br&gt;
‚Ä¢ Level of difficulty&lt;br&gt;
‚Ä¢ Job opportunities&lt;br&gt;
‚Ä¢ Support and Resources&lt;/p&gt;

&lt;p&gt;You should do a thorough research about the benefits and drawbacks of the language you want to choose, consider the above mentioned conditions along with your requirements and kickstart your coding journey. &lt;/p&gt;

&lt;p&gt;Be Curious and Keep Learning!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>python</category>
      <category>cpp</category>
      <category>java</category>
    </item>
    <item>
      <title>40+ ReactJS Projects for Beginners ‚Äì Easy Ideas to Get Started Coding [Beginners - Advance]</title>
      <author>JavaScript</author>
      <pubDate>Fri, 05 Nov 2021 02:19:01 +0000</pubDate>
      <link>https://dev.to/reactjss/40-reactjs-projects-for-beginners-easy-ideas-to-get-started-coding-beginners-advance-22i2</link>
      <guid>https://dev.to/reactjss/40-reactjs-projects-for-beginners-easy-ideas-to-get-started-coding-beginners-advance-22i2</guid>
      <description>&lt;p&gt;If you have decided to build your career in¬†&lt;span&gt;NodeJS¬†&lt;/span&gt;development, we have gathered a list of¬†&lt;span&gt;nodeJS projects for beginners&lt;/span&gt;¬†for all node enthusiasts to build highly scalable¬†&lt;a href="https://codersera.com/blog/native-apps-vs-web-apps-which-is-best-for-your-business/" rel="noreferrer noopener"&gt;web applications&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;These best¬†&lt;span&gt;nodeJS projects for beginners&lt;/span&gt;¬†will help you gain knowledge about core node concepts, train your skill level, build a superb work portfolio, and get hired for your dream job.&lt;/p&gt;
&lt;p&gt;When you start building your first projects, it‚Äôs highly recommended for beginners in coding to create a repository for each of your projects so you will be able to learn¬†&lt;em&gt;git&lt;/em&gt;¬†and show your coding expertise to future employers.¬†&lt;/p&gt;
&lt;p&gt;Read More : &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/tag/reactjs-projects-for-beginners/&amp;amp;ved=2ahUKEwjAyN6D__7zAhWDf30KHcKYCAUQFnoECDIQAQ&amp;amp;usg=AOvVaw3aSVrBBd-RROVGkfKEip0e"&gt;40+ ReactJS Projects for Beginners ‚Äì Easy Ideas to Get Started Coding&lt;/a&gt;&lt;/b&gt;¬†¬†&lt;/p&gt;

</description>
    </item>
    <item>
      <title>5 reasons why you should use PropelAuth</title>
      <author>propelauthblog</author>
      <pubDate>Fri, 05 Nov 2021 01:45:35 +0000</pubDate>
      <link>https://dev.to/propelauth/5-reasons-why-you-should-use-propelauth-56b9</link>
      <guid>https://dev.to/propelauth/5-reasons-why-you-should-use-propelauth-56b9</guid>
      <description>&lt;p&gt;PropelAuth is a hosted, configurable authentication service. Below are five reasons why you should consider it for your product.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-full-auth-ux-before-you-write-any-code"&gt;
  &lt;/a&gt;
  1. Full Auth UX before you write any code
&lt;/h2&gt;

&lt;p&gt;Once you sign up for PropelAuth, you immediately have your own authentication service. This includes a lot behind the scenes, but to your end-users, the first thing they will see is this&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IqmU0mlw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vmcgk9u65rl28tdvpfkq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IqmU0mlw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vmcgk9u65rl28tdvpfkq.png" alt="Initial screen" width="300" height="349"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can brand your site easily by supplying your product's colors and a logo. This branding applies not only to all your auth pages, but also to any emails that we send (forgotten passwords, email confirmations, user invites, etc.).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ur8nqE8H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tcje2rhiabxyht7dla0z.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ur8nqE8H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tcje2rhiabxyht7dla0z.gif" alt="A user configuring hosted pages" width="800" height="478"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Also, this branding includes the URL your customers are on. We support custom domains so your users see your auth pages on &lt;code&gt;https://auth.yourdomain.com&lt;/code&gt;, not &lt;code&gt;https://yourname.propelauth.com&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-easily-extensible"&gt;
  &lt;/a&gt;
  2. Easily extensible
&lt;/h2&gt;

&lt;p&gt;Since PropelAuth hosts your auth pages, we simplify auth integrations. Below you can see a user adding a "Sign in with Google" button (commonly called social login). &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m6v7ZewK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6gspivfdul24qd4z89cr.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m6v7ZewK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6gspivfdul24qd4z89cr.gif" alt="A user configuring hosted pages" width="600" height="359"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You don't need to worry about managing an OAuth flow or setting up redirect pages. Add your configuration, click save, and your users can sign in with Google.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-out-of-the-box-b2b-support"&gt;
  &lt;/a&gt;
  3. Out of the box B2B support
&lt;/h2&gt;

&lt;p&gt;For B2B auth, each user can belong to one or more "organizations". Most auth tools leave adding this as an exercise for you or there are a lot of missing features.&lt;/p&gt;

&lt;p&gt;With PropelAuth, B2B auth is a first-class feature. If enabled, your hosted pages includes customer portals so your end-users can create and manage their organizations. We provide hierarchical roles that are both easy to understand and supports most B2B auth use cases.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--deAZOJjN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zcjzxap2rt9zm2ndkg0y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--deAZOJjN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zcjzxap2rt9zm2ndkg0y.png" alt="A customer portal for managing FakeCorps org" width="700" height="704"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Our libraries hide a lot of the complexities of B2B auth. For Flask (python), for example we have the &lt;code&gt;@auth.require_org_member&lt;/code&gt; decorator&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/api/org/&amp;lt;org_id&amp;gt;/admin"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;require_org_member&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;minimum_required_role&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;UserRole&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Admin&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;admin_only&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;org_id&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"You are at least an admin in &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;current_org&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;org_name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;which makes sure the request is from a valid user, that is a member of a specified organization, and is at least an &lt;code&gt;Admin&lt;/code&gt; within that organization.&lt;/p&gt;

&lt;p&gt;Since we are talking about libraries...&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-easy-to-use-libraries"&gt;
  &lt;/a&gt;
  4. Easy to use libraries
&lt;/h2&gt;

&lt;p&gt;Once you've set up your auth pages, you need to integrate your product. It is our job to understand auth, not yours. Our libraries are easily used by anyone - security background or not.&lt;/p&gt;

&lt;p&gt;Our &lt;a href="https://docs.propelauth.com/getting-started/frontend-integration/"&gt;frontend libraries&lt;/a&gt; integrate with your PropelAuth auth instance, allowing you to easily do things like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Determine if the current user is logged in or not&lt;/li&gt;
&lt;li&gt;Get metadata for the current user&lt;/li&gt;
&lt;li&gt;Make authenticated requests to your backend&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Additionally, our &lt;a href="https://docs.propelauth.com/getting-started/backend-integration/"&gt;backend libraries&lt;/a&gt; allow your backend to easily:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Reject unauthenticated requests&lt;/li&gt;
&lt;li&gt;Understand which user made a request&lt;/li&gt;
&lt;li&gt;Get user metadata for any user&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There's more to discover, but with these building blocks you can quickly and easily build a secure product.&lt;/p&gt;

&lt;p&gt;We currently support React + vanilla Javascript on the frontend and Node/Express + Flask on the backend. If you want to use a language or framework that you use that we don't yet support, please reach out at &lt;a href="//mailto:support@propelauth.com"&gt;support@propelauth.com&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-clear-documentation"&gt;
  &lt;/a&gt;
  5. Clear documentation
&lt;/h2&gt;

&lt;p&gt;We consider documentation to be one of the most important parts of our product. &lt;/p&gt;

&lt;p&gt;Our &lt;a href="https://docs.propelauth.com"&gt;documentation&lt;/a&gt; includes &lt;a href="https://docs.propelauth.com/getting-started/"&gt;a step-by-step getting started guide&lt;/a&gt;, &lt;a href="https://docs.propelauth.com/example-apps/"&gt;example apps built from scratch&lt;/a&gt;, &lt;a href="https://blog.propelauth.com/adding-auth-to-b2c-comments/"&gt;guide where we added auth to an existing app&lt;/a&gt;, and &lt;a href="https://docs.propelauth.com/reference/"&gt;full references for our libraries&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bonus-its-free-to-try"&gt;
  &lt;/a&gt;
  Bonus: It's free to try
&lt;/h2&gt;

&lt;p&gt;Lastly, it's free to try out locally. You only pay when you want to go live. Check us out at &lt;a href="https://www.propelauth.com"&gt;https://www.propelauth.com&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you have any questions/thoughts for us, please reach out at &lt;a href="//mailto:support@propelauth.com"&gt;support@propelauth.com&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>startup</category>
      <category>auth</category>
      <category>tooling</category>
      <category>security</category>
    </item>
    <item>
      <title>Windows Custom Terminal</title>
      <author>Ushieru Kokoran</author>
      <pubDate>Fri, 05 Nov 2021 01:35:20 +0000</pubDate>
      <link>https://dev.to/ushieru/windows-custom-terminal-2b1g</link>
      <guid>https://dev.to/ushieru/windows-custom-terminal-2b1g</guid>
      <description>&lt;p&gt;Hace poco que volv√≠ a usar windows por el anuncio de W11.&lt;br&gt;
Mientras buscaba terminales que funcionaran bien; me decid√≠ por &lt;strong&gt;Windows Terminal&lt;/strong&gt;, si bien esta ya cuenta con personalizaci√≥n de colores, no era exactamente lo que estaba buscando. As√≠ que hoy te mostrarte como pasar de esto -&amp;gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sqQM8TgF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/20440dhtdn9f42lortxw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sqQM8TgF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/20440dhtdn9f42lortxw.png" alt="Terminal" width="880" height="469"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;a esto -&amp;gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Wja-a124--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/67soo4npzu3htb88sq6f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wja-a124--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/67soo4npzu3htb88sq6f.png" alt="Custom Terminal" width="880" height="468"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#paso-1"&gt;
  &lt;/a&gt;
  Paso 1
&lt;/h3&gt;

&lt;p&gt;Asegur√©monos de tener &lt;strong&gt;winget&lt;/strong&gt; disponible en nuestra terminal, sino quiz√° deber√≠as actualizar tu &lt;a href="https://www.microsoft.com/store/productId/9NBLGGH4NNS1"&gt;App Installer&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#paso-2"&gt;
  &lt;/a&gt;
  Paso 2
&lt;/h2&gt;

&lt;p&gt;Instalar &lt;a href="https://ohmyposh.dev/"&gt;Oh My Posh&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;winget &lt;span class="nb"&gt;install &lt;/span&gt;JanDeDobbeleer.OhMyPosh
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#paso-3"&gt;
  &lt;/a&gt;
  Paso 3
&lt;/h2&gt;

&lt;p&gt;Crear un perfil de powershell, para esto el mismo Microsoft nos da unos pasos muy sencillos a seguir.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Para crear el perfil
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(!(&lt;/span&gt;Test-Path &lt;span class="nt"&gt;-Path&lt;/span&gt; &lt;span class="nv"&gt;$PROFILE&lt;/span&gt;&lt;span class="o"&gt;))&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  New-Item &lt;span class="nt"&gt;-ItemType&lt;/span&gt; File &lt;span class="nt"&gt;-Path&lt;/span&gt; &lt;span class="nv"&gt;$PROFILE&lt;/span&gt; &lt;span class="nt"&gt;-Force&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Para editar el perfil
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;notepad &lt;span class="nv"&gt;$PROFILE&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#paso-3"&gt;
  &lt;/a&gt;
  Paso 3
&lt;/h2&gt;

&lt;p&gt;Agregar la configuraci√≥n a $PROFILE para iniciar la terminal con oh-my-posh.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;oh-my-posh &lt;span class="nt"&gt;--init&lt;/span&gt; &lt;span class="nt"&gt;--shell&lt;/span&gt; pwsh &lt;span class="nt"&gt;--config&lt;/span&gt; ~&lt;span class="se"&gt;\A&lt;/span&gt;ppData&lt;span class="se"&gt;\L&lt;/span&gt;ocal&lt;span class="se"&gt;\P&lt;/span&gt;rograms&lt;span class="se"&gt;\o&lt;/span&gt;h-my-posh&lt;span class="se"&gt;\t&lt;/span&gt;hemes&lt;span class="se"&gt;\j&lt;/span&gt;andedobbeleer.omp.json | Invoke-Expression
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Quiz√° para este punto te gastar√≠a reiniciar el perfil para ver el resultado.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$PROFILE&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;NOTE:&lt;br&gt;
Si no utilizas alguna &lt;a href="https://www.nerdfonts.com/"&gt;NERD FONT&lt;/a&gt; es probable que no veas los iconos y solo veas unos cuadros feos por ah√≠.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#paso-4"&gt;
  &lt;/a&gt;
  Paso 4
&lt;/h2&gt;

&lt;p&gt;Instala la nerd font de tu preferencia para este ejemplo usare la de Hack Nerd Font, por que se parece un poco a la Jetbrains Mono que es la que utilizo para mi editor. Si eres bastante nuevo en esto te recomiendo solo instalar la &lt;strong&gt;regular complete&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;para abrir las configuraciones de la terminal usa &lt;code&gt;ctrl + ,&lt;/code&gt; y busca &lt;strong&gt;Abrir archivo json&lt;/strong&gt; y lo modificamos.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="nl"&gt;"profiles"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"defaults"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"fontFace"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Hack Nerd Font"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;AQUI&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;VA&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;TU&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;FUENTE&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#paso-5"&gt;
  &lt;/a&gt;
  Paso 5
&lt;/h2&gt;

&lt;p&gt;Busca el tema que mas te agrade y c√°mbialo a tu gusto.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;Get-ChildItem &lt;span class="nt"&gt;-Path&lt;/span&gt; &lt;span class="s2"&gt;"~&lt;/span&gt;&lt;span class="se"&gt;\A&lt;/span&gt;&lt;span class="s2"&gt;ppData&lt;/span&gt;&lt;span class="se"&gt;\L&lt;/span&gt;&lt;span class="s2"&gt;ocal&lt;/span&gt;&lt;span class="se"&gt;\P&lt;/span&gt;&lt;span class="s2"&gt;rograms&lt;/span&gt;&lt;span class="se"&gt;\o&lt;/span&gt;&lt;span class="s2"&gt;h-my-posh&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s2"&gt;hemes&lt;/span&gt;&lt;span class="se"&gt;\*&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="nt"&gt;-Include&lt;/span&gt; &lt;span class="s1"&gt;'*.omp.json'&lt;/span&gt; | Sort-Object Name | ForEach-Object &lt;span class="nt"&gt;-Process&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$esc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;char]27
    Write-Host &lt;span class="s2"&gt;""&lt;/span&gt;
    Write-Host &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$esc&lt;/span&gt;&lt;span class="s2"&gt;[1m&lt;/span&gt;&lt;span class="si"&gt;$(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;.BaseName&lt;span class="si"&gt;)&lt;/span&gt;&lt;span class="nv"&gt;$esc&lt;/span&gt;&lt;span class="s2"&gt;[0m"&lt;/span&gt;
    Write-Host &lt;span class="s2"&gt;""&lt;/span&gt;
    oh-my-posh &lt;span class="nt"&gt;--config&lt;/span&gt; &lt;span class="si"&gt;$(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;.FullName&lt;span class="si"&gt;)&lt;/span&gt; &lt;span class="nt"&gt;--pwd&lt;/span&gt; &lt;span class="nv"&gt;$PWD&lt;/span&gt;
    Write-Host &lt;span class="s2"&gt;""&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Una vez que te decidas que tema utilizar solo cambialo en tu $PROFILE.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;notepad &lt;span class="nv"&gt;$PROFILE&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;oh-my-posh &lt;span class="nt"&gt;--init&lt;/span&gt; &lt;span class="nt"&gt;--shell&lt;/span&gt; pwsh &lt;span class="nt"&gt;--config&lt;/span&gt; ~&lt;span class="se"&gt;\A&lt;/span&gt;ppData&lt;span class="se"&gt;\L&lt;/span&gt;ocal&lt;span class="se"&gt;\P&lt;/span&gt;rograms&lt;span class="se"&gt;\o&lt;/span&gt;h-my-posh&lt;span class="se"&gt;\t&lt;/span&gt;hemes&lt;span class="se"&gt;\A&lt;/span&gt;QUI_VA_EL_NOMBRE_DEL_TEMA_QUE_TE_HAYA_GUSTADO.omp.json | Invoke-Expression
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;reinicia el perfil&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$PROFILE&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#paso-6"&gt;
  &lt;/a&gt;
  Paso 6
&lt;/h2&gt;

&lt;p&gt;Quieres ir un poco mas all√°? modifica el tema predeterminado a tu gusto. Exporta una copia del tema, haz todas las modificaciones que quieras y cambia la direcci√≥n del archivo a cargar en tu $PROFILE, mucha suerte.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;Export-PoshTheme &lt;span class="nt"&gt;-FilePath&lt;/span&gt; &lt;span class="s2"&gt;"~/.AQUI_VA_EL_NOMBRE_DEL_TEMA_QUE_QUIERAS_MODIFICAR.omp.json"&lt;/span&gt; &lt;span class="nt"&gt;-Format&lt;/span&gt; json
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Tienes alguna duda? D√©jala en los comentarios üëÄüëÄ&lt;br&gt;
Happy hacking üßë‚Äçüíª&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>windows</category>
      <category>spanish</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>November 4th, 2021: What did you learn this week?</title>
      <author>Nick Taylor (he/him)</author>
      <pubDate>Fri, 05 Nov 2021 00:21:09 +0000</pubDate>
      <link>https://dev.to/nickytonline/november-4th-2021-what-did-you-learn-this-week-54fm</link>
      <guid>https://dev.to/nickytonline/november-4th-2021-what-did-you-learn-this-week-54fm</guid>
      <description>&lt;p&gt;It's that time of the week again. So wonderful devs, what did you learn this week? It could be programming tips, career advice etc.&lt;/p&gt;


&lt;center&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/qKltgF7Aw515K/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/qKltgF7Aw515K/giphy.gif" alt="Information flowing through your brain" width="496" height="419"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;/center&gt;

&lt;p&gt;Feel free to comment with what you learnt and/or reference your TIL post to give it some more exposure.&lt;/p&gt;


&lt;div class="ltag__tag ltag__tag__id__5305"&gt;
  
    .ltag__tag__id__5305 .follow-action-button{
      background-color: #ffedc9 !important;
      color: #820000 !important;
      border-color: #ffedc9 !important;
    }
  
    &lt;div class="ltag__tag__content"&gt;
      &lt;h2&gt;#&lt;a href="https://dev.to/t/todayilearned" class="ltag__tag__link"&gt;todayilearned&lt;/a&gt; Follow
&lt;/h2&gt;
      &lt;div class="ltag__tag__summary"&gt;
        Summarize a concept that is new to you.
      &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;


</description>
      <category>weeklyretro</category>
      <category>weeklylearn</category>
      <category>discuss</category>
    </item>
    <item>
      <title>First PR for Release 0.3</title>
      <author>Ahmad</author>
      <pubDate>Thu, 04 Nov 2021 23:55:01 +0000</pubDate>
      <link>https://dev.to/ar/first-pr-for-release-03-ii9</link>
      <guid>https://dev.to/ar/first-pr-for-release-03-ii9</guid>
      <description>&lt;p&gt;For release 0.3, I knew right away that I'd continue working on &lt;a href="https://github.com/takelley1/OCVBot"&gt;OCVBot&lt;/a&gt;, the project I last worked on for 0.2. OCVBot is a very interesting project that uses CV (computer vision) to automate tasks in the game &lt;a href="https://oldschool.runescape.com/"&gt;Old School RuneScape&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#issue"&gt;
  &lt;/a&gt;
  Issue
&lt;/h1&gt;

&lt;p&gt;For 0.3, I wanted to work on an issue that was essential to the project. I looked around the project for TODOs that looked important and found one. &lt;code&gt;switch_worlds_logged_out()&lt;/code&gt;, a function that should click the world switcher button at the bottom of the client and select a new world. A "world" is a server for the game.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#world-switcher-button"&gt;
  &lt;/a&gt;
  World switcher button
&lt;/h5&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4NP6jsbQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vz1h4oy7me7ohruogjb8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4NP6jsbQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vz1h4oy7me7ohruogjb8.png" alt="Image description" width="115" height="62"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#world-selection-page"&gt;
  &lt;/a&gt;
  World selection page
&lt;/h5&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KmqymRjf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tdde5irx1s90cpwoaqvs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KmqymRjf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tdde5irx1s90cpwoaqvs.png" alt="Image description" width="708" height="458"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;One solution to this would be to take screenshots of every world and use them as needles, but this would be a mess and take a ton of time. &lt;/p&gt;

&lt;p&gt;Because the world selection page is a grid, I had the idea to use each world as a cell. We could do some math on the cell's &lt;code&gt;row&lt;/code&gt; and &lt;code&gt;column&lt;/code&gt; to figure out the pixel coordinates for it.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;row&lt;/code&gt; and &lt;code&gt;column&lt;/code&gt; values would have to be stored somewhere, as there's no other way to read this without using a bunch of needles as stated earlier. So I had to make a "world scraping" script that scrapes the world list on the &lt;a href="https://oldschool.runescape.com/a=13/slu?order=WMLPA"&gt;website&lt;/a&gt; of the game and sets &lt;code&gt;column&lt;/code&gt; and &lt;code&gt;row&lt;/code&gt; values as they appear.&lt;/p&gt;

&lt;p&gt;With a good idea on how to continue, I created an &lt;a href="https://github.com/takelley1/OCVBot/issues/7"&gt;issue&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#world-scraper"&gt;
  &lt;/a&gt;
  World Scraper
&lt;/h3&gt;

&lt;p&gt;I first got to work on the world scraper. I used the python library &lt;code&gt;urllib&lt;/code&gt; to get the html of the page and &lt;code&gt;BeautifulSoup&lt;/code&gt; to parse it. The main table could easily be found using it's class:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Find the table rows
&lt;/span&gt;&lt;span class="n"&gt;tbody&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;soup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"tbody"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;class_&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"server-list__body"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;trs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tbody&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"tr"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With a list of rows, we can iterate and pull the &lt;code&gt;&amp;lt;td&amp;gt;&lt;/code&gt; tags:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Iterate each &amp;lt;tr&amp;gt; element
&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;tr&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;trs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;# Get all &amp;lt;td&amp;gt; elements in the row
&lt;/span&gt;    &lt;span class="n"&gt;tds&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"td"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# Parse out relevant data
&lt;/span&gt;    &lt;span class="n"&gt;world&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tds&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"a"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"slu-world-"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;world_members_only&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s"&gt;"Members"&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;tds&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;get_text&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
    &lt;span class="n"&gt;world_description&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tds&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;get_text&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The data can then be passed into a dict and stored:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# False and "None" by default
&lt;/span&gt;&lt;span class="n"&gt;world_pvp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
&lt;span class="n"&gt;world_skill_requirement&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"None"&lt;/span&gt;

&lt;span class="c1"&gt;# Check world description
&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s"&gt;"PvP"&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;world_description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;world_pvp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="s"&gt;"skill total"&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;world_description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;world_skill_requirement&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tds&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;get_text&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;" skill total"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;worlds_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;world&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s"&gt;"members_only"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;world_members_only&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;"pvp"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;world_pvp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;"total_level_requirement"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;world_skill_requirement&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;"row"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;"column"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;col&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;MAX_ROWS&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="n"&gt;col&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;column&lt;/code&gt; variable is incremented whenever &lt;code&gt;row&lt;/code&gt; is incremented past the maximum number of rows per column, 24.&lt;/p&gt;

&lt;p&gt;I added some extra attributes such as &lt;code&gt;members_only&lt;/code&gt; because they'd surely be useful in the future.&lt;/p&gt;

&lt;p&gt;Once the &lt;code&gt;&amp;lt;tr&amp;gt;&lt;/code&gt; list is done iterating, the &lt;code&gt;worlds_data&lt;/code&gt; dict is dumped to &lt;code&gt;worlds.json&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Write to json file
&lt;/span&gt;&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"worlds.json"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"w"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dump&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;worlds_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;indent&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#worldsjson"&gt;
  &lt;/a&gt;
  worlds.json
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="nl"&gt;"301"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"members_only"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"pvp"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"total_level_requirement"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"None"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"row"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"column"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nl"&gt;"302"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"members_only"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"pvp"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"total_level_requirement"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"None"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"row"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"column"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I submitted a &lt;a href="https://github.com/takelley1/OCVBot/pull/8"&gt;pull request&lt;/a&gt; for this which was merged after some quick review fixes.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#back-to-the-main-issue"&gt;
  &lt;/a&gt;
  Back to the main issue
&lt;/h3&gt;

&lt;p&gt;With our &lt;code&gt;worlds.json&lt;/code&gt; in place, I continued on the main issue, &lt;code&gt;switch_worlds_logged_out()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;I started by adding basic needles that I knew I'd need:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3tL0nT4y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y8f32ybti7zpw85yw3xs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3tL0nT4y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y8f32ybti7zpw85yw3xs.png" alt="Image description" width="98" height="18"&gt;&lt;/a&gt;&lt;br&gt;
 &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ncZnm-y1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0atdrhekizt32aa2qrp5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ncZnm-y1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0atdrhekizt32aa2qrp5.png" alt="Image description" width="35" height="22"&gt;&lt;/a&gt;&lt;br&gt;
 &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sio9Er7m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/239zkh09ms9a8y44e0nq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sio9Er7m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/239zkh09ms9a8y44e0nq.png" alt="Image description" width="53" height="13"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The last needle ensures the world selector is filtered in the correct way. &lt;/p&gt;

&lt;p&gt;I then had to figure out the offsets from the top of the client and the left side of the client to the middle of the first world in the selector, 301.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H4ojYx0j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7u3qaqb0sjnkz6vzynn9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H4ojYx0j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7u3qaqb0sjnkz6vzynn9.png" alt="Image description" width="190" height="112"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Using an AutoHotKey script,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;CoordMode, Mouse, Screen
SetTimer, Check, 20
return

Check:
MouseGetPos, xx, yy
Tooltip %xx%`, %yy%
return

Esc::ExitApp
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I figured out the offsets to be 110 from the left and 43 from the top.&lt;/p&gt;

&lt;p&gt;Now I had to find the offsets from the middle of the first world, to the middle of the world below it and to the side of it, worlds 302 and 325. Using the same method, I found the offsets to be +19 on the &lt;code&gt;y&lt;/code&gt; coordinate to get the world below and +93 on the &lt;code&gt;x&lt;/code&gt; coordinate to get the world to the right.&lt;/p&gt;

&lt;p&gt;Using some math, we can now figure out the coordinates of any world using this formula:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Coordinates for the first world
&lt;/span&gt;&lt;span class="n"&gt;first_world_x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;vis&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;client_left&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;110&lt;/span&gt;
&lt;span class="n"&gt;first_world_y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;vis&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;client_top&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;43&lt;/span&gt;

&lt;span class="c1"&gt;# Apply offsets using the first world as a base
&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;first_world_x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;col&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;X_OFFSET&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;first_world_y&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;Y_OFFSET&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;inputs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Mouse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;region&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;move_duration_range&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="n"&gt;click_coord&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the last line, &lt;code&gt;32&lt;/code&gt; and &lt;code&gt;6&lt;/code&gt; are the width and height originating from the &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; values. &lt;code&gt;click_coord()&lt;/code&gt; clicks on a random pixel in that region.&lt;/p&gt;

&lt;p&gt;This worked beautifully, but I had a problem. If the world we want to select is off the screen (on another page), we can't select it. So I added a simple if statement that checks if the column of the target world is greater than the maximum number of columns per page (7). If it is, find the &lt;code&gt;next page&lt;/code&gt; needle and click it the exact number of times needed for the world to be visible.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# If the world is off screen
&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;col&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;max_cols&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;next_page_btn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;vis&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Vision&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;region&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;vis&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;needle&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"needles/login-menu/next-page.png"&lt;/span&gt;
    &lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;wait_for_needle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;get_tuple&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;next_page_btn&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Unable to find next page button!"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;

    &lt;span class="c1"&gt;# Click next page until the world is on screen
&lt;/span&gt;    &lt;span class="n"&gt;times_to_click&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;col&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;max_cols&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;times_to_click&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;inputs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Mouse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;region&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;next_page_btn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;move_duration_range&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="n"&gt;click_coord&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="c1"&gt;# Set the world's col to max, it'll always be in the last col
&lt;/span&gt;    &lt;span class="c1"&gt;# after it's visible
&lt;/span&gt;    &lt;span class="n"&gt;col&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;max_cols&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#pull-request"&gt;
  &lt;/a&gt;
  Pull Request
&lt;/h1&gt;

&lt;p&gt;With everything working, I submitted a &lt;a href="https://github.com/takelley1/OCVBot/pull/9"&gt;PR&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#review"&gt;
  &lt;/a&gt;
  Review
&lt;/h3&gt;

&lt;p&gt;The project owner requested some changes.&lt;/p&gt;

&lt;p&gt;Notably, he wanted the script to automatically filter the world selector properly, if it hasn't been, and to use &lt;code&gt;click_needle()&lt;/code&gt; for clicking the next page button.&lt;/p&gt;

&lt;p&gt;I let him know that &lt;code&gt;click_needle()&lt;/code&gt; was giving me issues. Once the mouse was over the needle, it couldn't be found anymore because the image is altered. He expanded the function by adding a &lt;code&gt;number_of_clicks&lt;/code&gt; parameter to it, which solved the problem. &lt;/p&gt;

&lt;p&gt;He also provided a function for the world filtering, which I initially used, until he wanted it changed again to a more abstract function called &lt;code&gt;enable_button()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;I made these changes and the PR was merged!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Wait for green world filter button, fails if filter is not set correctly
&lt;/span&gt;&lt;span class="n"&gt;world_filter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;vis&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Vision&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;region&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;vis&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;needle&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"needles/login-menu/world-filter-enabled.png"&lt;/span&gt;
&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;wait_for_needle&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;world_filter&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;enabled_filter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;interface&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;enable_button&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"needles/login-menu/world-filter-disabled.png"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="n"&gt;vis&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="s"&gt;"needles/login-menu/world-filter-enabled.png"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="n"&gt;vis&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;enabled_filter&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;

&lt;span class="c1"&gt;# If the world is off screen
&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;column&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;MAX_COLUMNS&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;# Click next page until the world is on screen
&lt;/span&gt;    &lt;span class="n"&gt;times_to_click&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;column&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;MAX_COLUMNS&lt;/span&gt;
    &lt;span class="n"&gt;next_page_button&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;vis&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Vision&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;region&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;vis&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;needle&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"needles/login-menu/next-page.png"&lt;/span&gt;
    &lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;click_needle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;number_of_clicks&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;times_to_click&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;next_page_button&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Unable to find next page button!"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;

    &lt;span class="c1"&gt;# Set the world's col to max, it'll always be in the last col
&lt;/span&gt;    &lt;span class="c1"&gt;# after it's visible
&lt;/span&gt;    &lt;span class="n"&gt;col&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;MAX_COLUMNS&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#example"&gt;
  &lt;/a&gt;
  Example
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h_pmRaLE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6caivjozv5tufsy7692r.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h_pmRaLE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6caivjozv5tufsy7692r.gif" alt="Image description" width="600" height="396"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#outcomes"&gt;
  &lt;/a&gt;
  Outcomes
&lt;/h1&gt;

&lt;p&gt;This issue was a noticeable step up from any of my 0.2 PRs. I had no idea I'd be web scraping! I really enjoy working with this project owner because of his very insightful code reviews. I'm really learning a lot about good practices and Python in general from them.&lt;/p&gt;

</description>
      <category>opensource</category>
    </item>
    <item>
      <title>Memory Management in V8, garbage collection and improvements</title>
      <author>Jennie</author>
      <pubDate>Thu, 04 Nov 2021 23:34:27 +0000</pubDate>
      <link>https://dev.to/jennieji/memory-management-in-v8-garbage-collection-and-improvements-18e6</link>
      <guid>https://dev.to/jennieji/memory-management-in-v8-garbage-collection-and-improvements-18e6</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QxCHjAn3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--tFMayEZj--/c_limit%252Cf_auto%252Cfl_progressive%252Cq_auto%252Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/eixp1flyvwotr4mr08no.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QxCHjAn3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--tFMayEZj--/c_limit%252Cf_auto%252Cfl_progressive%252Cq_auto%252Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/eixp1flyvwotr4mr08no.png" alt="Out of memory" width="715" height="379"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I believe most of us have seen "Javascript heap out of memory" exception somewhere. What does it really mean?&lt;/p&gt;

&lt;p&gt;Well, to answer this question we need to talk a bit about the engine that powers both the Chromium browsers and Node.js - V8, and how it manages its memory consumption.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-memory-model"&gt;
  &lt;/a&gt;
  The memory model
&lt;/h2&gt;

&lt;p&gt;The memory space of V8 is categorised into 2 - Stack  memory and Heap memory, and the Heap memeory is further divided into multiple spaces to serve different purposes.&lt;/p&gt;

&lt;p&gt;Here is an comprehensive and complicated graph I found in a blog -&lt;a href="https://deepu.tech/memory-management-in-v8/"&gt;Visualizing memory management in V8 Engine&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--J4DjsB_m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/kSgatSL.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J4DjsB_m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/kSgatSL.png" alt="The memory model" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Put aside of the complication first and let's look at how is the memory allocated when running a simple piece of code like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;newVar&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;myNumber&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;newVar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;myNumber&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;myString&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;abcd&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;myArray&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The final memory allocation will look like this (from blog &lt;a href="https://medium.com/@ethannam/javascripts-memory-model-7c972cd2c239"&gt;JavaScript‚Äôs Memory Model&lt;/a&gt;):&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fx5aXpcy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/SerbzvVKzhGd4x-yREx3PN4fXBcLW0BivGQ-tbcWAQ4d9SwKOz6iISRMCu6SXAEmkh9ZAmeTtx3G_ac6MkhHdRlhqGxIDXSS15PBoCzFaZEjg4yVylHvSoFahylVKc_kVaNK3FtkODY" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fx5aXpcy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/SerbzvVKzhGd4x-yREx3PN4fXBcLW0BivGQ-tbcWAQ4d9SwKOz6iISRMCu6SXAEmkh9ZAmeTtx3G_ac6MkhHdRlhqGxIDXSS15PBoCzFaZEjg4yVylHvSoFahylVKc_kVaNK3FtkODY" alt="img" width="880" height="302"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The static values like number and string are pushed directly into the &lt;strong&gt;Stack&lt;/strong&gt; memory space in order, while the object value is stored into &lt;strong&gt;Heap&lt;/strong&gt; memory, and its Heap memory address is pushed into the Stack. This is generally how Stack and Heap divide the work. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-stack-memory"&gt;
  &lt;/a&gt;
  The stack memory
&lt;/h3&gt;

&lt;p&gt;The stack memory (or we often call it call stack) is pretty straight forward. The engine pushes static value in when it runs a line of code declaring new stuffs. If it enters a code block (basically those code wrapped by &lt;code&gt;{}&lt;/code&gt;), it may form a stack frame for the declarations inside.&lt;/p&gt;

&lt;p&gt;Once the engine finishes running a code block, it pops out the value or the frame to free up the memory space. &lt;/p&gt;

&lt;p&gt;(GIF from blog &lt;a href="https://deepu.tech/memory-management-in-programming/"&gt;Demystifying memory management in modern programming languages&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lInxMFo1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/7KpvEn1.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lInxMFo1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/7KpvEn1.gif" alt="The call stack" width="880" height="517"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Since the nature of the call stack will clear itself, &lt;strong&gt;the memory consumption of the call stack is usually not a concern&lt;/strong&gt; though its space is limited. Unless you've written some function iterating code like I did in my blog &lt;a href="https://dev.to/jennieji/divide-and-conquer-could-be-tricky-in-js-27l2"&gt;Divide and conquer could be tricky in JS - tricks of avoiding maximum call stacks&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To understand further about how Stack and Heap work together, I found this deck is really helpful: &lt;a href="https://speakerdeck.com/deepu105/v8-memory-usage-stack-and-heap"&gt;https://speakerdeck.com/deepu105/v8-memory-usage-stack-and-heap&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-heap-memory"&gt;
  &lt;/a&gt;
  The heap memory
&lt;/h3&gt;

&lt;p&gt;The heap memory stores dynamic data that may change anytime while code is running, and the data may refer to each other. It could be a chaos graph. As a result, in order to know whether a part of memory is still under usage, the engine have to traverse from a set of roots to figure out the the relationship.&lt;/p&gt;

&lt;p&gt;Traversing a graph and a potentially giant graph is much much slower than simply push/pop a stack. Therefore, the garbage collection methodologies kick in and play the critical roles in the engine. &lt;/p&gt;

&lt;p&gt;I found these methodologies are incredibly interesting.&lt;/p&gt;

&lt;p&gt;In V8, the garbage collector is named &lt;strong&gt;Orinoco&lt;/strong&gt;. It divides the heap memory space into 2 regions: young generation and old generation.&lt;/p&gt;

&lt;p&gt;This design is based on a generational hypothesis:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;In most cases, young objects are much more likely to die than old objects&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And the young/old generation take different strategies.&lt;/p&gt;

&lt;p&gt;The minor GC for the young generation applies a much faster but space consuming algorithm called &lt;strong&gt;Scavenge&lt;/strong&gt;. V8 allocates much smaller space for the young generation and hence the algorithm runs much more frequently.&lt;/p&gt;

&lt;p&gt;The major GC for the old generation applies a slower &lt;strong&gt;Mark-Sweep-Compact&lt;/strong&gt;, and introduced various other methods to compensate for the issues caused by its slowness.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#scavenge-of-the-minor-gc-young-generation"&gt;
  &lt;/a&gt;
  Scavenge of the minor GC (young generation)
&lt;/h2&gt;

&lt;p&gt;The minor GC for the young generation applies a much faster but space consuming algorithm called &lt;strong&gt;Scavenge&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;It's space consuming as it makes the young generation space split evenly into a &lt;strong&gt;from-space&lt;/strong&gt; and &lt;strong&gt;to-space&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;(Graph from &lt;a href="https://v8.dev/blog/trash-talk"&gt;Trash Talk&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WRyRG1mx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://v8.dev/_img/trash-talk/03.svg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WRyRG1mx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://v8.dev/_img/trash-talk/03.svg" alt="" width="880" height="305"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And the process of Scavenge looks like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oLEd3ttN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ja4auf40hor2yo1msnox.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oLEd3ttN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ja4auf40hor2yo1msnox.png" alt="Process of Scavenge" width="880" height="502"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The garbage collection process only starts when a new object comes in and find no more place for it in the from-space. Then it traverses a &lt;strong&gt;old-to new root set&lt;/strong&gt; to figure out whether the object is still alive and whether it has been survived from the last round.&lt;/p&gt;

&lt;p&gt;If the object is no longer used, leave it there. If it is still alive and has been survived from the garbage collecting twice, then it will be copied into the old generation. Otherwise, it will be copied into to-space.&lt;/p&gt;

&lt;p&gt;Once traversing finished, simply swap the to-space and from-space and update the wrting pointer of the "new" to-space to the start to drop everything left behind.&lt;/p&gt;

&lt;p&gt;For this old-to-new root set, I haven't yet dig further to understand completely.  According to &lt;a href="https://v8.dev/blog/trash-talk"&gt;Trash Talk&lt;/a&gt;, it is a small subset maintained by V8's &lt;strong&gt;write barriers&lt;/strong&gt; - the piece of code triggers when Javascript tries to update any object value, which is another long story... V8 has done a lot of other things in the write barriers to assist with the performance improvements according to &lt;a href="https://v8.dev/blog/concurrent-marking#write-barrier"&gt;Concurrent marking in V8&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#marksweepcompact-of-the-major-gc-old-generation"&gt;
  &lt;/a&gt;
  Mark-Sweep-Compact of the major GC (old generation)
&lt;/h2&gt;

&lt;p&gt;The major GC for the old generation applies &lt;strong&gt;Mark-Sweep-Compact&lt;/strong&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#marksweep"&gt;
  &lt;/a&gt;
  Mark-Sweep
&lt;/h3&gt;

&lt;p&gt;The original and naive &lt;strong&gt;Mark-Sweep&lt;/strong&gt; simply traverses the the whole heap graph to mark the objects still alive and then another walk through of the memory space to remove those not alive any more.&lt;/p&gt;

&lt;p&gt;(GIF from Wiki &lt;a href="https://en.wikipedia.org/wiki/Tracing_garbage_collection"&gt;Tracing garbage collection&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0l2I7kbO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://upload.wikimedia.org/wikipedia/commons/4/4a/Animation_of_the_Naive_Mark_and_Sweep_Garbage_Collector_Algorithm.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0l2I7kbO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://upload.wikimedia.org/wikipedia/commons/4/4a/Animation_of_the_Naive_Mark_and_Sweep_Garbage_Collector_Algorithm.gif" alt="Naive Mark-Sweep" width="420" height="321"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This naive approach will stop the world before it finishes its business, and the twice memory reading is not friendly for the memory unit itself.&lt;/p&gt;

&lt;p&gt;To improve this, a &lt;strong&gt;Tri-color Mark-Sweep&lt;/strong&gt; was born, and V8 uses this approach. It marks the objects with 3 status instead of simply alive/non-alive:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;White - the initial state of an object.&lt;/li&gt;
&lt;li&gt;Grey - the object is reachable from the root set, and going to be examined or is examining.&lt;/li&gt;
&lt;li&gt;Black - the object has been examined.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Write barriers will mark the new objects as white first. Then when a GC cycle starts, major GC traverses the heap graph from the root set and updates the reachable objects to grey. If all the subsequent paths of the object have been examined, major GC will update the object mark to black.&lt;/p&gt;

&lt;p&gt;(GIF from Wiki &lt;a href="https://en.wikipedia.org/wiki/Tracing_garbage_collection"&gt;Tracing garbage collection&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QbvKaAoY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://upload.wikimedia.org/wikipedia/commons/1/1d/Animation_of_tri-color_garbage_collection.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QbvKaAoY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://upload.wikimedia.org/wikipedia/commons/1/1d/Animation_of_tri-color_garbage_collection.gif" alt="Tri-color Mark-Sweep" width="430" height="360"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this process, the grey color serves as an intermediate state, and white, black are the final states. Once a GC cycle finished, the objects left in the white set are not alive and could be recycled.&lt;/p&gt;

&lt;p&gt;Comparing to the naive approach, the tri-color approach could avoid the second time traversal in a GC cycle. In the meantime, it could wisely use the intermediate state to allow scripts keep running while marking at the same time.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#compact"&gt;
  &lt;/a&gt;
  Compact
&lt;/h3&gt;

&lt;p&gt;After a GC cycle, it could leave various small empty spaces in the memory, and V8 may not able to find a proper space to store a big object as it expects to find a continuous space instead of multiple small spaces. Therefore,  it is necessary to compact the memory fragments together and free up some large continuous space in the memory after GC.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u50Nsy-O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d3i71xaburhd42.cloudfront.net/579ddc1c3fb50a554ac93a9d6d7095aa1f506a66/1-Figure1-1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u50Nsy-O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d3i71xaburhd42.cloudfront.net/579ddc1c3fb50a554ac93a9d6d7095aa1f506a66/1-Figure1-1.png" alt="Compact" width="656" height="196"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#performance-improvements-for-the-major-gc"&gt;
  &lt;/a&gt;
  Performance improvements for the major GC
&lt;/h2&gt;

&lt;p&gt;The performance improvement battle never ends. And V8 applies several interesting approaches to improve the performance of the major GC, including intremental, concurrent, lazy sweeping and lazy compacting.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#incremental"&gt;
  &lt;/a&gt;
  Incremental
&lt;/h3&gt;

&lt;p&gt;As Javascript runs in single thread, any extra processes may interrup the script and affect the user experiences. &lt;/p&gt;

&lt;p&gt;To minimize the impact, the first thing we can think of is to split the works into smaller sub tasks and runs in between of the script process. So the pauses will be small enough to not be noticed:&lt;/p&gt;

&lt;p&gt;(Image from &lt;a href="https://v8.dev/blog/concurrent-marking"&gt;Concurrent Marking&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DZs7ghY3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://v8.dev/_img/concurrent-marking/05.svg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DZs7ghY3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://v8.dev/_img/concurrent-marking/05.svg" alt="Incremental" width="595" height="50"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This approach is called incremental. Sounds familiar? Yes! React Fibre is doing this as well.&lt;/p&gt;

&lt;p&gt;However, it has side-effects according to &lt;a href="https://v8.dev/blog/concurrent-marking"&gt;Concurrent Marking&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The application has to notify the garbage collector about all operations that change the object graph. V8 implements the notification using a Dijkstra-style write-barrier.&lt;/p&gt;

&lt;p&gt;Because of the write-barrier cost, incremental marking may reduce throughput of the application. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#parrarel-concurrent"&gt;
  &lt;/a&gt;
  Parrarel / Concurrent
&lt;/h3&gt;

&lt;p&gt;To reduce the side-effects caused by incremental, V8 team introduces multiple threads to help.&lt;/p&gt;

&lt;p&gt;This includes parallel:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Parallel&lt;/strong&gt; marking happens on the main thread and the worker threads. The application is paused throughout the parallel marking phase. It is the multi-threaded version of the stop-the-world marking.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--la_fLUQD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://v8.dev/_img/concurrent-marking/06.svg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--la_fLUQD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://v8.dev/_img/concurrent-marking/06.svg" alt="Parallel" width="595" height="120"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And concurrent:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Concurrent&lt;/strong&gt; marking happens mostly on the worker threads. The application can continue running while concurrent marking is in progress.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zGrqlY2d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://v8.dev/_img/concurrent-marking/07.svg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zGrqlY2d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://v8.dev/_img/concurrent-marking/07.svg" alt="Concurrent" width="595" height="120"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And it's another long long story of how these approaches are implemented. If you are interested in more details, you may read the blog &lt;a href="https://v8.dev/blog/concurrent-marking#parallel-marking"&gt;Concurrent Marking&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lazy-sweeping"&gt;
  &lt;/a&gt;
  Lazy sweeping
&lt;/h3&gt;

&lt;p&gt;When we talk about sweeping and freeing up the memory, we usually mean overwrite the memory chunk to "empty", which involves writing and writing consumes resources.&lt;/p&gt;

&lt;p&gt;In V8, instead of clearing the space, GC records these "free" memory chunks down into a list, and organize them by the chunk sizes. When a new object comes in, it looks up in this list for an appropriate place to allocate.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lazy-compacting"&gt;
  &lt;/a&gt;
  Lazy compacting
&lt;/h3&gt;

&lt;p&gt;If you have ever played with the Windows memory compaction program, you will know how slow that compaction could be.&lt;/p&gt;

&lt;p&gt;To reduce the impact on performance, GC will only compact some of the highly fragmented pages. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion-amp-references"&gt;
  &lt;/a&gt;
  Conclusion &amp;amp; References
&lt;/h2&gt;

&lt;p&gt;This learning opened my eyes of how much complicated things are going on behind our scripts. And I am also wondering whether the complication could be simplified as more mechanisms introduced, may also introduce more consumption of resources. How could we define the balance point?&lt;/p&gt;

&lt;p&gt;References:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@ethannam/javascripts-memory-model-7c972cd2c239"&gt;Javascript‚Äôs Memory Model&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://v8.dev/blog/trash-talk"&gt;Trash talk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://deepu.tech/memory-management-in-v8/"&gt;Visualizing memory management in V8 Engine (JavaScript, NodeJS, Deno, WebAssembly)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Tracing_garbage_collection"&gt;Tracing garbage collection - Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://v8.dev/blog/concurrent-marking"&gt;Concurrent marking&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>v8</category>
      <category>memory</category>
      <category>gc</category>
    </item>
    <item>
      <title>My First JavaScript REST API: Dog Facts Deployed To Heroku</title>
      <author>mrsharm</author>
      <pubDate>Thu, 04 Nov 2021 23:20:47 +0000</pubDate>
      <link>https://dev.to/mrsharm/my-first-javascript-rest-api-dog-facts-deployed-to-heroku-522p</link>
      <guid>https://dev.to/mrsharm/my-first-javascript-rest-api-dog-facts-deployed-to-heroku-522p</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8uXRDkLt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7efdyzuarzo4x9fxlrcw.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8uXRDkLt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7efdyzuarzo4x9fxlrcw.jpg" alt="Dogs" width="880" height="664"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;I recently deployed my first Javascript REST API that returns facts about dogs. The impetus behind creating this project was to get a working front end solution with the API providing the data. While working on the front end, I started making use of the python API by DukeNgn that can be found &lt;a href="https://github.com/DukeNgn/Dog-facts-API"&gt;here&lt;/a&gt; and ran into &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS"&gt;CORs&lt;/a&gt; issues that prevented me from getting the data. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#development"&gt;
  &lt;/a&gt;
  Development
&lt;/h2&gt;

&lt;p&gt;My main goal was to get the API deployed as quickly as possible and therefore, relied on the simplest solution making use of &lt;code&gt;Express&lt;/code&gt; and the Javascript &lt;code&gt;fs&lt;/code&gt; library to read a JSON file with all the facts. I also used the &lt;code&gt;cors&lt;/code&gt; javascript library to make sure I wouldn't run into the same issue as the python library:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// App config.
const app = express();
app.use(express.json());
app.use(Cors());
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;All the code is available &lt;a href="https://github.com/MokoSan/DogFacts-API"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#deployment-with-heroku"&gt;
  &lt;/a&gt;
  Deployment with Heroku
&lt;/h2&gt;

&lt;p&gt;The deployment to Heroku was smooth following &lt;a href="https://devcenter.heroku.com/articles/git"&gt;this&lt;/a&gt; tutorial. The only issue I got into was hardcoding a port that wasn't agreeable with Heroku for which configuring the listening port accordingly did the trick:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const port = process.env.PORT || 5000;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;One of the coolest Heroku features was to hook up my GitHub repository to Heroku resulting in an automatic deployment whenever I pushed changes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hpEzyBZ9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cd56u85y7574nejuw10n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hpEzyBZ9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cd56u85y7574nejuw10n.png" alt="Image description" width="880" height="221"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#usage"&gt;
  &lt;/a&gt;
  Usage
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://dogfacts-api.herokuapp.com/api/v1/resources/dogs"&gt;https://dogfacts-api.herokuapp.com/api/v1/resources/dogs&lt;/a&gt; for all the dog facts.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://dogfacts-api.herokuapp.com/api/v1/resources/dogs?number=%7Bnumber%7D"&gt;https://dogfacts-api.herokuapp.com/api/v1/resources/dogs?number={number}&lt;/a&gt; for a particular number of random dog facts.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://dogfacts-api.herokuapp.com/api/v1/resources/dogs?index=%7Bindex%7D"&gt;https://dogfacts-api.herokuapp.com/api/v1/resources/dogs?index={index}&lt;/a&gt; for a dog fact associated with the index - there are 435 total facts.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#example"&gt;
  &lt;/a&gt;
  Example
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://dogfacts-api.herokuapp.com/api/v1/resources/dogs?number=2"&gt;https://dogfacts-api.herokuapp.com/api/v1/resources/dogs?number=2&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[
    {"fact":"Dogs are direct descendants of wolves."},
    {"fact":"Small quantities of grapes and raisins can cause renal failure in dogs. Chocolate, macadamia nuts, cooked onions, or anything with caffeine can also be harmful."}
]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Building the API was an awesome learning experience! Any feedback about the code or this blogpost would be greatly appreciated.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>programming</category>
      <category>opensource</category>
      <category>heroku</category>
    </item>
    <item>
      <title>Express√£o Lambda - Parte II (Quando e como usar)</title>
      <author>Carolina Dias Fonseca</author>
      <pubDate>Thu, 04 Nov 2021 23:16:29 +0000</pubDate>
      <link>https://dev.to/diariodeumacdf/expressao-lambda-parte-ii-quando-e-como-usar-efm</link>
      <guid>https://dev.to/diariodeumacdf/expressao-lambda-parte-ii-quando-e-como-usar-efm</guid>
      <description>&lt;p&gt;Parte 02 de 03 da documenta√ß√£o Oracle sobre Express√£o Lambda :)&lt;/p&gt;

&lt;p&gt;Um problema com classes an√¥nimas √© que se a implementa√ß√£o da sua classe an√¥nima √© muito simples sendo uma interface que cont√©m um √∫nico m√©todo.&lt;/p&gt;

&lt;p&gt;A partir disso, a sintaxe da classe an√¥nima pode parecer incerta e n√£o muito clara. Nesses casos, normalmente voc√™ est√° tentando passar funcionalidade como argumento para outro m√©todo, semelhante a iniciar uma a√ß√£o quando algu√©m clica num bot√£o.&lt;/p&gt;

&lt;p&gt;As express√µes lambdas te permitem fazer isso, trabalhar uma funcionalidade como argumento ou c√≥digo como dado de informa√ß√£o.&lt;/p&gt;

&lt;p&gt;No &lt;a href="https://dev.to/diariodeumacdf/expressao-lambda-parte-i-classes-anonimas-1adc"&gt;artigo anterior sobre Classe An√¥nima&lt;/a&gt;, mostramos como implementar uma classe sem a necessidade de se criar uma classe com um √∫nico m√©todo e implementar/extender outra classe para seguir com a constru√ß√£o da sua aplica√ß√£o.&lt;/p&gt;

&lt;p&gt;A &lt;strong&gt;express√£o Lambda&lt;/strong&gt; te permite fazer a mesma coisa, por√©m de uma forma mais conscisa ainda.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#caso-de-uso-ideal-para-express%C3%A3o-lambda"&gt;
  &lt;/a&gt;
  Caso de Uso Ideal para Express√£o Lambda
&lt;/h2&gt;

&lt;p&gt;Vamos supor que voc√™ est√° criando uma aplica√ß√£o de rede social. Voc√™ quer criar uma feature que permite o administrador a realizar determinada a√ß√£o, como, por exemplo, enviar uma mensagem para membros que satisfa√ßam determinada condi√ß√£o.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---dulPa42--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m9yj42zkryicyc8ylus1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---dulPa42--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m9yj42zkryicyc8ylus1.png" alt="UML" width="880" height="327"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cada pessoa nessa rede social √© representada pela classe Pessoa:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Pessoa&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;enum&lt;/span&gt; &lt;span class="no"&gt;GENERO&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="no"&gt;MASCULINO&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="no"&gt;FEMININO&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;nome&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="nc"&gt;LocalDate&lt;/span&gt; &lt;span class="n"&gt;nascimento&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="no"&gt;GENERO&lt;/span&gt; &lt;span class="n"&gt;genero&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;getIdade&lt;/span&gt;&lt;span class="o"&gt;(){&lt;/span&gt;&lt;span class="c1"&gt;//...}    &lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;printPessoa&lt;/span&gt;&lt;span class="o"&gt;(){&lt;/span&gt;&lt;span class="c1"&gt;//...}&lt;/span&gt;

&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Suponha que os membros dessa rede social est√£o armazenado numa &lt;code&gt;List&amp;lt;Pessoa&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#passo-01-criar-m%C3%A9todos-que-encontrem-membros-que-atendem-a-uma-certa-caracter%C3%ADstica"&gt;
  &lt;/a&gt;
  Passo 01: Criar m√©todos que encontrem membros que atendem a uma certa caracter√≠stica
&lt;/h2&gt;

&lt;p&gt;Uma forma muito simples de fazer essa filtragem √© criar um m√©todo para cada tipo de filtro que se precisa fazer, como para g√™nero ou idade.&lt;/p&gt;

&lt;p&gt;Exemplo:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;printPessoasMaioresQue&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Pessoa&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;relacao&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;idade&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Pessoa&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;relacao&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getIdade&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
            &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;printPessoa&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Esse m√©todo √© muito fr√°gil por conta da quantidade de atualiza√ß√µes que a aplica√ß√£o ainda passar√° por conta de inclus√£o de novos membros.&lt;/p&gt;

&lt;p&gt;Outro ponto, suponha que voc√™ atualizou a sua aplica√ß√£o e alterou a estrutura da classe Pessoa que passa a conter mais vari√°veis, talvez isso impacte em todos os lugares em que voc√™ instanciou a classe de forma que o algoritmo que usa essa informa√ß√£o agora haja de forma diferente.&lt;/p&gt;

&lt;p&gt;E, por fim, √© um m√©todo restritivo, e se voc√™ precisar mostrar em tela usu√°rios mais novo?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#passo-02-criar-m%C3%A9todos-de-busca-mais-generalizados"&gt;
  &lt;/a&gt;
  Passo 02: Criar m√©todos de busca mais generalizados
&lt;/h2&gt;

&lt;p&gt;O m√©todo abaixo √© mais generalizado do que o anterior:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;printPessoasComIdadeEntre&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Pessoa&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;relacao&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;menor&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;maior&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Pessoa&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;relacao&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;menor&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getIdade&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getIdade&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="n"&gt;maior&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
            &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;printPessoa&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Mas e se voc√™ quiser mostrar em tela membros de determinado g√™nero ou a combina√ß√£o de idade e g√™nero?&lt;/p&gt;

&lt;p&gt;Ou se voc√™ quiser incluir atributos como status de relacionamento ou localiza√ß√£o?&lt;/p&gt;

&lt;p&gt;Apesar do m√©todo acima ser mais gen√©rico do que o anterior, ter que criar um m√©todo para cada possibilidade de busca ainda deixa o c√≥digo fr√°gil.&lt;/p&gt;

&lt;p&gt;Ao inv√©s disso voc√™ pode separar as especifica√ß√µes de crit√©rio de busca do que voc√™ quer busca em classes separadas.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#passo-03-especificar-o-c%C3%B3digo-de-crit%C3%A9rio-de-busca-em-uma-classe-local"&gt;
  &lt;/a&gt;
  Passo 03: Especificar o c√≥digo de crit√©rio de busca em uma classe local
&lt;/h2&gt;

&lt;p&gt;O m√©todo abaixo mostra em tela membros que atendem determinado crit√©rio de busca que voc√™ especificar:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;printPessoas&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Perssoa&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;relacao&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;VerificaPessoa&lt;/span&gt; &lt;span class="n"&gt;criterio&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Pessoa&lt;/span&gt; &lt;span class="nl"&gt;p:&lt;/span&gt; &lt;span class="n"&gt;relacao&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;criterio&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;buscaPessoa&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;)){&lt;/span&gt;
            &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;printPessoa&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Esse m√©todo verifica cada Pessoa que consta na List relacao, se a pessoa atender o crit√©rio passado em &lt;code&gt;criterio.buscaPessoa(p)&lt;/code&gt; ent√£o o m√©todo mostra em tela a pessoa.&lt;/p&gt;

&lt;p&gt;Para especificar o crit√©rio de busca, voc√™ implementa uma interface chamada &lt;code&gt;VerificaPessoa&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;interface&lt;/span&gt; &lt;span class="nc"&gt;VerificaPessoa&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="nf"&gt;buscaPessoa&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Pessoa&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A classe que far√° uso desse m√©todo, faz a implementa√ß√£o da interface, exemplo:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;VerificaPessoaElegivelParaExercito&lt;/span&gt; &lt;span class="kd"&gt;implements&lt;/span&gt; &lt;span class="nc"&gt;VerificaPessoa&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="nf"&gt;buscaPessoa&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Pessoa&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;genero&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nc"&gt;Pessoa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;Genero&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;MASCULINO&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getIdade&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Para usar esse classe, voc√™ criar uma inst√¢ncia e invoca o printPessoa:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="n"&gt;printPessoa&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;relacao&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;VerificaPessoaElegivelParaExercito&lt;/span&gt;&lt;span class="o"&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Apesar dessa estrutura ser menos fr√°gil, voc√™ n√£o precisa reescrever m√©todos se voc√™ alterar a classe Pessoa, voc√™ ainda tem c√≥digo adicional: uma interface nova e uma classe local para cada busca que voc√™ pretende fazer na sua aplica√ß√£o.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#passo-04-especificar-o-crit%C3%A9rio-de-busca-numa-classe-an%C3%B4nima"&gt;
  &lt;/a&gt;
  Passo 04: Especificar o crit√©rio de busca numa classe an√¥nima
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="n"&gt;printPessoa&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;relacao&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;VerificaPessoa&lt;/span&gt;&lt;span class="o"&gt;(){&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="nf"&gt;buscaPessoa&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Pessoa&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;genero&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nc"&gt;Pessoa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;Genero&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;MASCULINO&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getIdade&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Essa forma reduz a quantidade de linhas de c√≥digo proque voc√™ n√£o precisa criar uma nova classe cada busca que voc√™ precisa realizar.&lt;/p&gt;

&lt;p&gt;Entretanto, a sintaxe de uma classe an√¥nima √© volumoso considerando que a interface VerificaPessoa s√≥ cont√©m um m√©todo. Nesse caso, voc√™ pode usar uma express√£o lambda ao inv√©s da classe an√¥nima.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#passo-05-especificar-o-crit%C3%A9rio-de-busca-numa-express%C3%A3o-lambda"&gt;
  &lt;/a&gt;
  Passo 05: Especificar o crit√©rio de busca numa express√£o lambda
&lt;/h2&gt;

&lt;p&gt;A interface VerificaPessoa √© uma interface funcional. Uma classe funcional √© aquela que cont√©m apenas um m√©todo abstrato.&lt;/p&gt;

&lt;p&gt;Exatamente por ela ser uma classe funcional que cont√©m um √∫nico m√©todo abstrato, voc√™ pode omitir o nome do m√©todo quando voc√™ a implementa. Ao fazer isso, voc√™ estar√° implementando uma express√£o lambda ao inve≈õ de uma classe an√¥nima.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="n"&gt;printPessoa&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;relacao&lt;/span&gt;&lt;span class="o"&gt;,(&lt;/span&gt;&lt;span class="nc"&gt;Pessoa&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;)-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;genero&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nc"&gt;Pessoa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;Genero&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;MASCULINO&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getIdade&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Voc√™ ainda pode usar uma interface funcional padr√£o no lugar de criar uma interface, o que ajuda a reduzir a cria√ß√£o de c√≥digo.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;
&lt;span class="kd"&gt;interface&lt;/span&gt; &lt;span class="nc"&gt;Predicate&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Pessoa&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="nf"&gt;buscaPessoa&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Pessoa&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;  
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;printPessoaComPredicate&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Pessoa&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;relacao&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;Predicate&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Pessoa&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;criterio&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Pessoa&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;relacao&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;criterio&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;buscaPessoa&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
            &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;printPessoa&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;printPessoaComPredicate&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;relacao&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getGenero&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nc"&gt;Pessoa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;Genero&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;MASCULINO&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getIdade&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getIdade&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Fonte: &lt;a href="https://docs.oracle.com/javase/tutorial/java/javaOO/lambdaexpressions.html"&gt;Documenta√ß√£o Oracle&lt;/a&gt;&lt;/p&gt;

</description>
      <category>todayilearned</category>
      <category>java</category>
      <category>braziliandevs</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>I spent 3 years writing an Android Contacts API in Kotlin with Java interop. What I‚Äôve learned‚Ä¶</title>
      <author>Vandolf Estrellado</author>
      <pubDate>Thu, 04 Nov 2021 23:13:30 +0000</pubDate>
      <link>https://dev.to/vestrel00/i-spent-3-years-writing-an-android-contacts-api-in-kotlin-with-java-interop-what-ive-learned-54hp</link>
      <guid>https://dev.to/vestrel00/i-spent-3-years-writing-an-android-contacts-api-in-kotlin-with-java-interop-what-ive-learned-54hp</guid>
      <description>&lt;p&gt;Hi, my name is Vandolf and I have a problem. I get addicted and obsessed about certain things. It spirals out of control, very quickly. Once I set my sights on something, I don‚Äôt stop until I finish it, even if it takes years. Sounds like addiction‚Ä¶ It is. &lt;/p&gt;

&lt;p&gt;Before I know it, I've spent three years working on private repositories building something no one knows about. Then, I make it public and write &lt;a href="https://proandroiddev.com/android-contacts-reborn-19985c73ad43"&gt;an article&lt;/a&gt; about it thinking that it will blow people's minds. Then get shocked that the repo has less than 100 unique visitors in the first month because I think that it will just magically get discovered by everyone...&lt;/p&gt;

&lt;p&gt;Does this sound relatable to you? Probably not, right? I think I'm insane in some levels. If you are interested in the Contacts API I've built or the insanity I'm going through, keep reading!&lt;/p&gt;

&lt;p&gt;I'll split this article in two sections.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The Contacts API that I've built. üî•&lt;/li&gt;
&lt;li&gt;The mistakes I made and lessons I learned from writing "open source" code, privately, for three years. ü§¶‚Äç‚ôÇÔ∏è&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you are not interested in the first section, I recommend at least reading the second. You might learn something from the mistakes I've made, and hopefully avoid making them yourself!&lt;/p&gt;

&lt;p&gt;I'm actually a bit hesitant and nervous about posting this as my first article here. I have no reputation here. No one knows me. I'm just a random stranger. However, I know that doing things that are only within my comfort zone will not get me anywhere. So, I'm pushing myself to publish this article üò∞&lt;/p&gt;

&lt;p&gt;I hope to make connections, and maybe even friends, in this community ‚ù§Ô∏è&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-contacts-api-that-ive-built"&gt;
  &lt;/a&gt;
  The Contacts API that I've built.
&lt;/h2&gt;

&lt;p&gt;First, here is the GitHub repo; &lt;a href="https://github.com/vestrel00/contacts-android"&gt;https://github.com/vestrel00/contacts-android&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Please take a look at it and let me know what you think?&lt;/p&gt;

&lt;p&gt;The oldest commit in the repo is 2 years old. However, I have another private repo that has the 3 year old commits. I'm not lying! üòÅ&lt;/p&gt;

&lt;p&gt;Exactly a month ago from today, I have made public the previously private repo and published &lt;a href="https://proandroiddev.com/android-contacts-reborn-19985c73ad43"&gt;an article in Medium&lt;/a&gt; introducing my Contacts API to the ether. The article covers the history of Contacts in Android since Android API 1 to API 5 (Eclair) all the way to API 31. It talks about how, for over a decade, there has not been a single open source library that abstracts away all of the complexities of Android's Contacts Provider and &lt;code&gt;ContactsContract&lt;/code&gt;. The community has been forced to deal with ContentProviders and cursors, spending a plethora of hours of trying to figure out how to do even the simplest things. Then it goes through an overview of the Contacts API that I've built and how you can use it to &lt;strong&gt;create your own full-fledged Contacts app&lt;/strong&gt; in Kotlin and/or Java.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#a-hypothetical-but-probable-story"&gt;
  &lt;/a&gt;
  A hypothetical, but probable, story.
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9rvOw7vH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hax8z8ybto2wbmbc5s6x.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9rvOw7vH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hax8z8ybto2wbmbc5s6x.jpg" alt="Image description" width="880" height="593"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I won't repeat myself or copy-paste things so I'll take a different approach in this article. I'll go through how a normal person might use the native Contacts application and show code snippets on how you can implement those use cases using &lt;code&gt;Contacts&lt;/code&gt; API, Reborn. To make things easier to follow, let's go through a hypothetical day of someone named Vandolf.&lt;/p&gt;

&lt;p&gt;One day, Vandolf takes his phone and opens up the Contacts app. He's bored so he decides to look through the contacts he has saved over the years.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;contacts&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Contacts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;broadQuery&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;include&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Fields&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Contact&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;DisplayNamePrimary&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;orderBy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="nc"&gt;ContactsFields&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Starred&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;desc&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
        &lt;span class="nc"&gt;ContactsFields&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;DisplayNamePrimary&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;asc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ignoreCase&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;limit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;offset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;find&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;He sees favorites at the top of the list (which includes his wife, son, dogs, and cat) followed by non-favorites, ordered by the contact display name. Vandolf scrolls down to see more.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;contacts&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Contacts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;broadQuery&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;limit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;offset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;find&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;One of his high school friends popped up. Curious about his ancient friends, he types a name in the search field.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;friends&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Contacts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;broadQuery&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;whereAnyContactDataPartiallyMatches&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"henry"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;find&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;He sees a bunch of contacts with the name "Henry". Determining that it is in fact the same Henry, he decides to link them all together into a single contact.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="n"&gt;listOfHenries&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;link&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Contacts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;He then searches for Victor and finds that he only has one contact with that name. He knows that he has 3 friends named Victor so he opens up that contact and discovers that the Contacts Provider mistakenly combined 3 different Victors into a single contact. Facepalming, he decides to unlink the Victors into 3 separate contacts.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="n"&gt;victor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;unlink&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Contacts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Continuing his mindless quest of browsing his contacts, he looks through his contacts one account at a time.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="n"&gt;contactsApi&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;accounts&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;query&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;allAccounts&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;forEach&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;account&lt;/span&gt; &lt;span class="p"&gt;-&amp;gt;&lt;/span&gt;
        &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;contactsFromAccount&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;contactsApi&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;broadQuery&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;accounts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;account&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;find&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then he realized that he only wants to see contacts from all of his Google accounts.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;contactsFromGoogleAccounts&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;contactsApi&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;broadQuery&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;accounts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;contactsApi&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;accounts&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;query&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;accountsWithType&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"com.google"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;find&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Not finding what he is looking for, he decides to browse contacts by label (group membership).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="n"&gt;contactsApi&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;groups&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;query&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;find&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;forEach&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;group&lt;/span&gt; &lt;span class="p"&gt;-&amp;gt;&lt;/span&gt;
        &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;contactsInGroup&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;contactsApi&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;broadQuery&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;groups&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;group&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;find&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Unable to find "that person", he decides to do an advanced search.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;thatPerson&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Contacts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;query&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;where&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Fields&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;GivenName&lt;/span&gt; &lt;span class="n"&gt;startsWith&lt;/span&gt; &lt;span class="s"&gt;"Jose"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nf"&gt;and&lt;/span&gt;
        &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nc"&gt;Fields&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Email&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Address&lt;/span&gt; &lt;span class="n"&gt;endsWith&lt;/span&gt; &lt;span class="s"&gt;"gmail.com"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nf"&gt;or&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Fields&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Email&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Address&lt;/span&gt; &lt;span class="n"&gt;endsWith&lt;/span&gt; &lt;span class="s"&gt;"hotmail.com"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="nf"&gt;and&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Fields&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Address&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Country&lt;/span&gt; &lt;span class="n"&gt;equalToIgnoreCase&lt;/span&gt; &lt;span class="s"&gt;"US"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nf"&gt;and&lt;/span&gt;
        &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nc"&gt;Fields&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Date&lt;/span&gt; &lt;span class="n"&gt;lessThan&lt;/span&gt; &lt;span class="nc"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nf"&gt;toWhereString&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="nf"&gt;and&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Fields&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Type&lt;/span&gt; &lt;span class="n"&gt;equalTo&lt;/span&gt; &lt;span class="nc"&gt;Event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Type&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;BIRTHDAY&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="nf"&gt;and&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Fields&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Contact&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Starred&lt;/span&gt; &lt;span class="n"&gt;equalTo&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nf"&gt;and&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Fields&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Nickname&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Name&lt;/span&gt; &lt;span class="n"&gt;equalToIgnoreCase&lt;/span&gt; &lt;span class="s"&gt;"Dota 2 Pro"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nf"&gt;and&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Fields&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Organization&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Company&lt;/span&gt; &lt;span class="n"&gt;`in`&lt;/span&gt; &lt;span class="nf"&gt;listOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"uber"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"eats"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"door"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"dash"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="nf"&gt;and&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Fields&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Note&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Note&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;isNotNullOrEmpty&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;find&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;firstOrNull&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Vandolf got tired of browsing. He decides to make a new contact for his ol' imaginary friend.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;contactsApi&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Contacts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;accountToAddContactTo&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Account&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"vestrel00@pixar.com"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"com.pixar"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;insertResult&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;contactsApi&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;forAccount&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;accountToAddContactTo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;rawContact&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nf"&gt;setName&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;givenName&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Buzz"&lt;/span&gt;
            &lt;span class="n"&gt;familyName&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Lightyear"&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nf"&gt;setNickname&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Buzz"&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nf"&gt;setOrganization&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Space Toy"&lt;/span&gt;
            &lt;span class="n"&gt;company&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Pixar"&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nf"&gt;addPhone&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;number&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"(555) 555-5555"&lt;/span&gt;
            &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Phone&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Type&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;CUSTOM&lt;/span&gt;
            &lt;span class="n"&gt;label&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Fake Number"&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nf"&gt;setSipAddress&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;sipAddress&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"sip:buzz.lightyear@pixar.com"&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nf"&gt;addEmail&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;address&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"buzz.lightyear@pixar.com"&lt;/span&gt;
            &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Email&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Type&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;WORK&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nf"&gt;addEmail&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;address&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"buzz@lightyear.net"&lt;/span&gt;
            &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Email&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Type&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;HOME&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nf"&gt;addAddress&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;formattedAddress&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"1200 Park Ave"&lt;/span&gt;
            &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Address&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Type&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;WORK&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nf"&gt;addIm&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"buzzlightyear@skype.com"&lt;/span&gt;
            &lt;span class="n"&gt;protocol&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Im&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Protocol&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;SKYPE&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nf"&gt;addWebsite&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"https://www.pixar.com"&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nf"&gt;addWebsite&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"https://www.disney.com"&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nf"&gt;addEvent&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;date&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;EventDate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;from&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;year&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1995&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;month&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dayOfMonth&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Type&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;BIRTHDAY&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nf"&gt;addRelation&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Childhood friend"&lt;/span&gt;
            &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Relation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Type&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;CUSTOM&lt;/span&gt;
            &lt;span class="n"&gt;label&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Imaginary Friend"&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;groupMemberships&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;addAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;contactsApi&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;groups&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;query&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;accounts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;accountToAddContactTo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;where&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;GroupsFields&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Favorites&lt;/span&gt; &lt;span class="n"&gt;equalTo&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nf"&gt;or&lt;/span&gt;
                            &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;GroupsFields&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Title&lt;/span&gt; &lt;span class="n"&gt;contains&lt;/span&gt; &lt;span class="s"&gt;"friend"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;find&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;toGroupMemberships&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nf"&gt;setNote&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;note&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"The best toy in the world!"&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;commit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;olImaginaryFriend&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;insertResult&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;contacts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;contactsApi&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;first&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Of course, Vandolf adds a photo of good ol'Buzz.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;onClickPhoto&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;activity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Activity&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;activity&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;selectPhoto&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;override&lt;/span&gt; &lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;onActivityResult&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;requestCode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;resultCode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Intent&lt;/span&gt;&lt;span class="p"&gt;?)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nf"&gt;onPhotoPicked&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;requestCode&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;resultCode&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;photoBitmapPicked&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;bitmap&lt;/span&gt; &lt;span class="p"&gt;-&amp;gt;&lt;/span&gt;
            &lt;span class="n"&gt;olImaginaryFriend&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;setPhoto&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;contactsApi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bitmap&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="n"&gt;photoUriPicked&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;uri&lt;/span&gt; &lt;span class="p"&gt;-&amp;gt;&lt;/span&gt;
            &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;bitmap&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;MediaStore&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Images&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Media&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;getBitmap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;contentResolver&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;uri&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;olImaginaryFriend&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;setPhoto&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;contactsApi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bitmap&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Vandolf then decides to make some changes to his new contact.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;updateResult&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;contactsApi&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;update&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;contacts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;olImaginaryFriend&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;toMutableContact&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nf"&gt;apply&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nf"&gt;setNickname&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"The Buzz"&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nf"&gt;removeAllPhones&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="nf"&gt;removeWebsite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;websites&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nf"&gt;first&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;?.&lt;/span&gt;&lt;span class="nf"&gt;contains&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"disney"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;==&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="nf"&gt;events&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nf"&gt;first&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nf"&gt;apply&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Type&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;ANNIVERSARY&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nf"&gt;setNote&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;note&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"The best toy in the world - EVER."&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;commit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;He also sets the first email to be the default/primary email.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="n"&gt;olImaginaryFriend&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;emails&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nf"&gt;first&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nf"&gt;setAsDefault&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once Vandolf has finished his business in the toilet, where this entire story has been taking place üòÆ, he decides that the whole exercise was stupid and deletes his olImaginaryFriend.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;deleteResult&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;contactsApi&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;contacts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;olImaginaryFriend&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;commit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I'll stop the story here. This article is getting too long and I've probably lost 95% of the readers at this point.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#that-story-barely-scratched-the-surface-of-the-library"&gt;
  &lt;/a&gt;
  That story barely scratched the surface of the library.
&lt;/h3&gt;

&lt;p&gt;There are a lot more APIs in the library that remains untold. The story would be too long if I wanted to showcase everything that the library can do. I‚Äôd have to write a novel!&lt;/p&gt;

&lt;p&gt;One thing I will mention here as an extra is that all of the functions I‚Äôve shown in the story do not handle permissions and also does the work on the call-site thread. I left those out for brevity and to show that the APIs are framework-agnostic.  Anyways, the library provides Kotlin coroutine extensions for all core functions to handle permissions and execute work outside of the UI thread.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Use the *WithPermission extensions to ensure permissions are granted prior to querying.&lt;/span&gt;
&lt;span class="c1"&gt;// Use the *WithContext or *Async extensions to execute the operation outside the UI thread.&lt;/span&gt;

&lt;span class="nf"&gt;launch&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;contacts&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Contacts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;queryWithPermission&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;findWithContext&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;deferredResult&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Contacts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;commitAsync&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nf"&gt;launch&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;result&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;deferredResult&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;await&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Extensions for Kotlin Flow and RxJava are also in the v1 roadmap, which includes APIs for listening to Contacts database changes.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#all-apis-in-the-library-are-optimized"&gt;
  &lt;/a&gt;
  All APIs in the library are optimized.
&lt;/h3&gt;

&lt;p&gt;For example, to cancel a query amid execution,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;find&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nf"&gt;returnTrueIfQueryShouldBeCancelled&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;find&lt;/code&gt; function optionally takes in a function that, if it returns true, will cancel query processing as soon as possible. The function is called numerous times during query processing to check if processing should stop or continue. This gives you the option to cancel the query.&lt;/p&gt;

&lt;p&gt;This is useful when used in multi-threaded environments. One scenario where this would be commonly used is when performing queries as the user types a search text. You are able to cancel the current query when the user enters new text.&lt;/p&gt;

&lt;p&gt;For example, to automatically cancel the query inside a Kotlin coroutine when the coroutine is cancelled,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="nf"&gt;launch&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nf"&gt;withContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;coroutineContext&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;contacts&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;find&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="n"&gt;isActive&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="c1"&gt;// Or, using the coroutine extensions in the async module...&lt;/span&gt;
    &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;contacts&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;findWithContext&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#all-core-apis-are-frameworkagnostic-and-works-well-with-java-and-kotlin"&gt;
  &lt;/a&gt;
  All core APIs are framework-agnostic and works well with Java and Kotlin
&lt;/h3&gt;

&lt;p&gt;The core APIs in the &lt;code&gt;core&lt;/code&gt; module does not and will not force you to use things you don‚Äôt want. As a matter of fact, the only dependency the core module has is the standard Kotlin lib! Use whatever Java or Kotlin permissions or threading library you want. The extensions are optional and are there for convenience.&lt;/p&gt;

&lt;p&gt;I also made sure that &lt;strong&gt;all core functions and entities are interoperable with Java 7+.&lt;/strong&gt; So, if you were wondering why I‚Äôm using a semi-builder pattern instead of using named arguments with default values, that is why. I‚Äôve also made some other intentional decisions about API design to ensure the best possible experience for both Kotlin and Java consumers without sacrificing Kotlin language standards. It is Kotlin-first, Java-second (with love and care).&lt;/p&gt;

&lt;p&gt;Modules other than the core module are not guaranteed to be compatible with Java.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-library-provides-full-documentation-in-code-and-with-howto-pages-the-project-also-has-a-vision-and-a-roadmap"&gt;
  &lt;/a&gt;
  The library provides full documentation in code and with how-to pages. The project also has a vision and a roadmap.
&lt;/h3&gt;

&lt;p&gt;Documentation and how-to guides are all available and linked in the repository. You can browse the &lt;a href="https://github.com/vestrel00/contacts-android/tree/master/howto"&gt;Howto pages&lt;/a&gt; or visit the &lt;a href="https://vestrel00.github.io/contacts-android/"&gt;GitHub Pages&lt;/a&gt;. Both contain the same info but the GitHub pages are not guaranteed to be up-to-date. The GitHub wiki hosts the &lt;a href="https://github.com/vestrel00/contacts-android/wiki/Project-Roadmap"&gt;project roadmap&lt;/a&gt;. It contains all planned work and release schedules, which are organized using issues, milestones, and projects.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-mistakes-i-made-and-lessons-i-learned-from-writing-open-source-code-privately-for-three-years"&gt;
  &lt;/a&gt;
  The mistakes I made and lessons I learned from writing "open source" code, privately, for three years.
&lt;/h2&gt;

&lt;p&gt;For the past three years, I've had my head buried in the sand. I kept myself out of all social media. No Facebook. No Twitter. No Instagram. No Reddit. No Medium. No Dev.to. I got my world news from several news outlets. I'm subscribed to AndroidWeekly and KotlinWeekly to keep myself up-to-date in the world of Android, given that my entire career hinges on it.&lt;/p&gt;

&lt;p&gt;For the most part, it was a great experience. By "it" I mean real life. We all know social media can be a detriment to one's health. I don't regret it at all. I can say with 100% confidence that I am healthier now because of it.&lt;/p&gt;

&lt;p&gt;I have been working at a great company and spending time with my family. When I find free time, I work on this project. &lt;/p&gt;

&lt;p&gt;However, now that I have made this passion project public, I'm coming to a stark realization that I should not have completely disconnected myself from everyone. At the very least, I should have kept myself active in the open source community that I'm &lt;strong&gt;attempting&lt;/strong&gt; to be a part of.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mistake-1-writing-open-source-code-privately"&gt;
  &lt;/a&gt;
  Mistake #1 - Writing "open source" code, privately.
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NBUVFvl3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c4y92oobd7oz3k9rfi6j.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NBUVFvl3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c4y92oobd7oz3k9rfi6j.jpg" alt="Image description" width="880" height="587"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Do you see the paradox in that statement? Really, what was I thinking ü§¶‚Äç‚ôÇÔ∏è. I know it's a classic mistake and I'm not the only one that has made this mistake. Some of you reading this may have also or is in the process of making this mistake.&lt;/p&gt;

&lt;p&gt;First, it is useful to understand why people do this. Why I did this. For most, it's something along the lines of "I don't want to show it to others until it is done". While I can relate to that, for me, it was really about not having the time to participate in open source and collaborate.&lt;/p&gt;

&lt;p&gt;In my mind, and I could be 100% wrong here given that this is the first library project that I encourage others to use, had I made it public from the beginning and successfully pulled in others to contribute, I would not have had the same flexibility and agility to build the API the way I wanted to. I would have had to convince other contributors that this is the way to go and spend time collaborating to come to the best possible solution. Collaboration takes time. To some, especially folks like me, it is a commitment. At the time, my son was just born and ever since then, finding time to do anything for myself has been very difficult.&lt;/p&gt;

&lt;p&gt;The mistake that I made here is that I missed the whole point of &lt;strong&gt;&lt;a href="https://www.redhat.com/en/topics/open-source/what-is-open-source"&gt;open source&lt;/a&gt;&lt;/strong&gt;. The very thing that I was trying to avoid because I had no time is the thing that makes something open source. It is as much about the collaboration than it is about the output. Me building something privately, then making it public does not suddenly make it open source. It just means that I built something and other people can see and use it now. My code, even though it is public now, cannot be considered open source (even though the source is open). &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mistake-2-thinking-that-no-one-else-in-the-world-is-building-what-im-building"&gt;
  &lt;/a&gt;
  Mistake #2 - Thinking that no one else in the world is building what I'm building.
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VYZWEgAM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/80g5i5wjc6fg0ke0w3n5.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VYZWEgAM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/80g5i5wjc6fg0ke0w3n5.jpg" alt="Image description" width="880" height="376"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Another classic mistake. My thought process here was that since no one has attempted to wrap the entirety of the &lt;code&gt;ContactsContract&lt;/code&gt; for the last decade, why would anyone do it now? There are so many contacts management apps out there already. Surely, a simplified Contacts API is not in demand. No one needs it. No one is working on something like this except me üí•&lt;/p&gt;

&lt;p&gt;While I knew deep down that this mindset was completely wrong, I lied to myself thinking that I must be the only one to discover this missing basic-but-critical component in mobile development. There are &lt;a href="https://ostoday.org/android/how-many-android-developers-are-there.html"&gt;6+ million Android devs in the world&lt;/a&gt; but I must be the only one that have scoured the internet searching for a simplified Contacts API so that I can use it for work...&lt;/p&gt;

&lt;p&gt;Because of this mistake, I now wonder how many opportunities to collaborate with like-minded individuals have I missed?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mistake-3-not-participating-in-the-open-source-community"&gt;
  &lt;/a&gt;
  Mistake #3 - Not participating in the open source community.
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vLXLjWQX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9c59700n4gn0wa7m6x4c.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vLXLjWQX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9c59700n4gn0wa7m6x4c.jpg" alt="Image description" width="880" height="417"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I claim that I want to contribute and be a part of the open source community. However, I don't even make the effort to contribute to the open source libraries I use on a daily basis for work (e.g. RxJava, Glide, etc) because I don't think I'm smart enough. So, I figured that one way I can participate in open source was to work in secret by myself for years and then promote my secret-made-public code as "open source". What a joke! It is a farce. üí© üí© üí©&lt;/p&gt;

&lt;p&gt;I clearly misunderstood what &lt;strong&gt;&lt;a href="https://www.redhat.com/en/topics/open-source/what-is-open-source"&gt;open source&lt;/a&gt;&lt;/strong&gt; is.&lt;/p&gt;

&lt;p&gt;What I have now is a not-open-source-but-public repo. üòÜ&lt;/p&gt;

&lt;p&gt;Anyways, because of my isolationism, I have no reputation in any developer communities even though I‚Äôve been working for almost a decade now. This lack of reputation makes it extremely difficult to spread the word about stuff I want to share. For example, like most communities, the subreddit r/androiddev has a self-promotion rule that states that the maximum amount of posts you can do to promote your own creation is 50%. This is a big problem for me because up until less than a month ago, I didn‚Äôt even have a Reddit account!&lt;/p&gt;

&lt;p&gt;I will not post things that I‚Äôm genuinely not interested in just so that I can game the system. I have really just been interested in this project for the past three years. &lt;/p&gt;

&lt;p&gt;‚ùì Is that wrong? &lt;br&gt;
‚ùì Is there room for people like me who zoom in on one thing, spend years on it, and share once they deem it presentable? &lt;br&gt;
‚ùì Or are we living in a world of instant gratification where all you have to do is spend a few hours, days, or weeks on something and then proceed to market it?&lt;/p&gt;

&lt;p&gt;One stroke of good luck I had was when my manager at the job I had four years ago encouraged (or maybe even forced?) the entire team to write dev articles, even while at work. I wrote &lt;a href="https://proandroiddev.com/how-to-android-dagger-2-10-2-11-butterknife-mvp-part-1-eb0f6b970fd"&gt;Howto articles about dagger-android in Medium under the ProAndroidDev publication&lt;/a&gt;. The first ever article I wrote made it to &lt;a href="https://androidweekly.net/issues/issue-268"&gt;issue #268 of AndroidWeekly&lt;/a&gt;! I did spend months on the &lt;a href="https://github.com/vestrel00/android-dagger-butterknife-mvp"&gt;accompanying GitHub project&lt;/a&gt; so it was nice to see my hard work get recognition. At the time, I didn‚Äôt really think much of it. The editors of ProAndroidDev did all the marketing for me. I told them that I had no Twitter account. No Reddit account. I didn‚Äôt even know what AndroidWeekly was. From this, I managed to gain some followers and enough of a rapport with the ProAndroidDev editors, albeit four years ago, to allow me to get my newest article published under their publication.&lt;/p&gt;

&lt;p&gt;I have to keep in mind that having connections give you an incredible advantage that you can use as a platform to boost yourself up initially. It applies to everything. Landing your dream job. Meeting like-minded people. Getting a reservation at a restaurant (pre-COVID) that is always booked, let's say Dorsia? Most relevant to this article, having a reputation (or enough posts/karma) in forums such as r/androiddev allows you to self-promote when the time comes. A luxury that I currently do not have.&lt;/p&gt;

&lt;p&gt;This leads me to the next mistake...&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mistake-4-hoping-that-people-will-magically-discover-what-ive-built-without-promoting-it"&gt;
  &lt;/a&gt;
  Mistake #4 - Hoping that people will magically discover what I've built without promoting it.
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--twfsqzZ6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/acy7glrh81vn2fgrryte.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--twfsqzZ6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/acy7glrh81vn2fgrryte.jpg" alt="Image description" width="880" height="307"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I truly believe that a "good software or product will sell itself". It is a common expression for a reason right?&lt;/p&gt;

&lt;p&gt;‚ùì So, if my repo is not getting any traffic, then it must be because what I built sucks, right?&lt;/p&gt;

&lt;p&gt;As I mentioned earlier in this article, I already published an article in Medium a month ago. That was it for my promotion. I submitted a link to the medium article and my repo once to AndroidWeekly and KotlinWeekly but to no avail. I even emailed the curators of those legendary mailing lists explaining the amount of work and love I put into this project and how I think others should know about it. They are not responding. I don't blame them. Why should they look at or respond to some random person with no reputation when they probably have to sift through hundreds, if not thousands, of submissions?&lt;/p&gt;

&lt;p&gt;A month later, my repo has had less than 100 unique visitors (some of which are probably not even human). I'm not hunting for stars! I‚Äôm hunting for traffic. I sounded like an advertiser there... I don't know how else to say it. We all have to "advertise", at least a little bit in the beginning to kick things off. I feel that I owe it to myself and my family, for putting up with me sometimes spending a lot of time on this instead of with them, to get the repo looked at by enough human eyes to justify the amount of time that I've spent on it. &lt;/p&gt;

&lt;p&gt;It just happens to be that the easiest way to know if the community thinks a project is good is based on the amount of stars divided by the amount of views. The star/view ratio provides repo owners a heuristic calculation of how many people find the repo useful versus those that see it and just click it away. I could be completely wrong here, in which case please leave a comment and let me know your thoughts about it? &lt;/p&gt;

&lt;p&gt;I'm not trying to sell anything. I'm trying to help people solve their problems with anything related to Android Contacts management. I'm not going to get money from this. Will I get attention and fame? Maybe? I really don't want that, honestly. If that‚Äôs what I wanted, I would be doing things involving hot new stuff like Jetpack Compose instead of something that‚Äôs been around for over a decade.&lt;/p&gt;

&lt;p&gt;I might be contradicting myself here but I really just want to make sure that other Android devs out there are aware that they no longer have to fear Contacts like I did. There is now a Jetpack-like component that is fully documented with Howto guides on everything they can think of. They no longer have to scour the internet to find something that does not exist.&lt;/p&gt;

&lt;p&gt;At the end of it all, as long as I have &lt;strong&gt;truly&lt;/strong&gt; helped a handful (and I mean less than five) of other devs out in the world, then I have no regrets. Maybe I'll get sincere emails from three people letting me know how much my work helped them? Regardless, I will continue working on the project until I deem it complete and all issues have been closed.&lt;/p&gt;

&lt;p&gt;‚ùì BUT, how can others know the existence of the API I created if it does not appear on any search results in any search engines? &lt;/p&gt;

&lt;p&gt;Luckily, this is a mistake that I can still fix, hopefully... And no, I will not fix it with money. I will not pay to be featured in any mailing lists or to appear at the top of search results. I want the community to decide if what I had built should be used by others or not.&lt;/p&gt;

&lt;p&gt;So, I still think that "a good software or product will sell itself". However, I'll make a minor modification to that. &lt;/p&gt;

&lt;p&gt;"A good software or product will sell itself, once enough people have seen it."&lt;/p&gt;

&lt;p&gt;I will not spam the community. However, I will write genuine articles like this from time to time with new content I have not yet shared. By the way, this article took me around 10 hours to write, proof-read, rewrite, and repeat. I hope that the Dev.to community can consider that enough of a justification for this not to count as spam.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mistake-5-answering-ancient-questions-in-stackoverflow-using-the-apis-that-ive-built"&gt;
  &lt;/a&gt;
  Mistake #5 - Answering ancient questions in StackOverflow using the APIs that I've built.
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jcEyq-xC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gumib3gt8lbk590vydv1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jcEyq-xC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gumib3gt8lbk590vydv1.jpg" alt="Image description" width="880" height="587"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This one is tragic comedy. I was not aware about self-promotion rules in StackOverflow or dev forums in general. After all, I have just started participating in developer forums. But bliss cannot be used as an excuse!&lt;/p&gt;

&lt;p&gt;Anyways, I always thought that I could answer all contacts-related questions in StackOverflow after making my library public. After all, most of us find questions and answers in StackOverflow. So what better way to make sure people know about my API than answering questions in the stack?&lt;/p&gt;

&lt;p&gt;Excited and full of energy and determination, I began answering decade-old questions in the stack. I used a template for all the questions I answered. I did not save it, nor do I have access to them now, but I remember it being something like...&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Android Contacts has just been &lt;a href="https://proandroiddev.com/android-contacts-reborn-19985c73ad43"&gt;Reborn&lt;/a&gt;! Using the &lt;a href="https://github.com/vestrel00/contacts-android"&gt;Contacts, Reborn library&lt;/a&gt;, you no longer have to deal with the complexities of &lt;code&gt;ContactsContract&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To answer your original question...&lt;/p&gt;

&lt;p&gt;"(quote original question here)"&lt;/p&gt;

&lt;p&gt;Using the Contacts, Reborn library...&lt;/p&gt;

&lt;p&gt;In Java,&lt;br&gt;
(insert code snippet of how to solve the problem in Java using my library)&lt;/p&gt;

&lt;p&gt;In Kotlin,&lt;br&gt;
(insert code snippet of how to solve the problem in Kotlin using my library)&lt;/p&gt;

&lt;p&gt;There is a lot more that the &lt;a href="https://github.com/vestrel00/contacts-android"&gt;Contacts, Reborn library&lt;/a&gt; can do. You can even build your own full-fledged contacts app with it!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It's probably not exactly that but it's the best that I can recall. &lt;/p&gt;

&lt;p&gt;Anyways, after around ten hours of answering around 20-30 questions, I continued to answer more questions. However, when I tried to post an answer on October 8, I got the message saying something like "this account can no longer post answers". Then, I noticed that I had a message from the mods. It said that I violated self-promotion rules. So, they removed all of the answers I posted. All of that hard work, excitement, and determination, vanished into thin air. Gone. Just like that. It hurt. It really did. I was sad, furious, emotional. However, I understood that rules have to be followed even if I did not know them. Bliss is no excuse! &lt;/p&gt;

&lt;p&gt;I took a screen recording of the message thread in my phone. Here is a screenshot of the message I got from the stack mods. I was too emotional at the time when I was reading it. &lt;strong&gt;In retrospect&lt;/strong&gt;, I could have taken a different approach to handling the situation üòÖ&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jsKG6wtD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wjxbiztvo7jjl78982le.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jsKG6wtD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wjxbiztvo7jjl78982le.png" alt="Image description" width="880" height="749"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Again, &lt;strong&gt;in retrospect&lt;/strong&gt; (reading it again now), I could have handled the situation differently. I could have still said what I had to say (that I'm hurt) but just try again and only answer a few questions instead of trying to answer &lt;strong&gt;all&lt;/strong&gt; of them. I had over a hundred questions bookmarked and I was ready to spend tens of hours to answer them all!&lt;/p&gt;

&lt;p&gt;So, I sent them a heartfelt reply and then deleted my account. On a side note, it takes 24 hours for an account to get deleted in the stack. It's probably there to give emotional folks like me some time to calm down after getting the well-deserved hammer. There is even a message, and I paraphrase, "we noticed you just received the ban hammer, calm down and reconsider deleting your account?" &lt;/p&gt;

&lt;p&gt;I know you are curious to see the message I sent. Everyone loves a bit of drama, even if it isn't your favorite genre üòÜ. I consider this tragic comedy! I'll share it with you all. Only here in DEV.TO! Don't worry, it does not contain profanity or anything of the sort. It is &lt;strong&gt;not&lt;/strong&gt; not-safe-for-work (double negative). Even though I was emotional, my head was leveled enough to avoid sending a self-career-ending reply üòå. I knew who I was talking to. I was talking to hard-working mods that have to sift through hundreds and thousands of posts and make hard decisions like this knowing that they will get backlash from individuals. I was talking to people that keep the stack community alive and well for everyone (including you and me) to find answers. I was taking to people that have helped me get to where I am now in life. Who am I to disrespect them? I can't. I won't. &lt;/p&gt;

&lt;p&gt;Before I share a screenshot of my reply, please know the following.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;I'm sharing this with you because I want to share my mistakes so you can avoid doing it yourself.&lt;/li&gt;
&lt;li&gt;I am not trying to hurt the StackOverflow community. If anything, I‚Äôm trying to help the moderators by having folks read my story as a cautionary tale!&lt;/li&gt;
&lt;li&gt;I respect, love, and admire, folks that are active in the StackOverflow community. I was just trying to be like them... but I failed.&lt;/li&gt;
&lt;li&gt;I still use StackOverflow to get answers, anonymously for now. I hope to create an account once again, when I feel like I deserve it.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Without further ado, here is my reply...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AXmKjPxd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/al0juctlly0c1x8b43ck.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AXmKjPxd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/al0juctlly0c1x8b43ck.png" alt="Image description" width="880" height="553"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Reading it now after almost a month, I can see my heightened emotions. I made several grammatical errors as I only proofread it once. I was well aware that I was emotional when writing that at the time. I am typically patient and I wait to do things until I'm level-headed. However, I intentionally decided to write that reply immediately because I wanted my emotions to come through. I wanted to show them how it affected me and probably folks that have and who will experience the same thing that I did. I knew that if I had waited even just an hour, I would not be able to write a reply that conveyed what I truly felt. I don't regret writing that reply the way it is written. I felt like it had to be written that way. Otherwise, I would be doing myself (and others like me) injustice. &lt;/p&gt;

&lt;p&gt;I know for sure that I'm not the only one that went through this experience. Have you gone through this? How did you handle the situation? I'd love to know!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#thank-you-for-reading"&gt;
  &lt;/a&gt;
  Thank you for reading!
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--g2FLmMyg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uqqp3lvimni58n33phn0.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g2FLmMyg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uqqp3lvimni58n33phn0.jpg" alt="Image description" width="880" height="270"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Whether you read all of this article or just some parts of it, thank you ‚ù§Ô∏è üíó üíï üíû üíò üíñ&lt;/p&gt;

&lt;p&gt;I give every bit of love and care to this project, including the articles I write about it. I would appreciate any feedback. What do you think about the library? Did you make the same mistakes I made? Do you agree with the lessons I've learned? Any other thoughts? I sprinkled in some questions throughout the article, care to share your thoughts on any of them?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;P.S.&lt;/strong&gt; I am working on a fun app that uses the library that I've built. It is already in a public repo. I still need to work on it a bit before I start ranting about it and getting others to contribute. I am excited about it though! This time, it will truly be "open source" ‚ù§Ô∏è&lt;/p&gt;

</description>
      <category>android</category>
      <category>kotlin</category>
      <category>java</category>
      <category>showdev</category>
    </item>
  </channel>
</rss>
