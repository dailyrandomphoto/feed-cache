<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>What's the Deal with Activation Functions in Neural Networks?</title>
      <author>images.cv</author>
      <pubDate>Sun, 12 Dec 2021 15:36:47 +0000</pubDate>
      <link>https://dev.to/imagescv/whats-the-deal-with-activation-functions-in-neural-networks-16i8</link>
      <guid>https://dev.to/imagescv/whats-the-deal-with-activation-functions-in-neural-networks-16i8</guid>
      <description>&lt;p&gt;&lt;strong&gt;Even though activation functions are not the most exciting topic in machine learning, they are an important component of neural networks. This blog post will cover what activation functions are and how to choose one. There is also a bonus section on common mistakes with activation functions!&lt;br&gt;
Activation Functions: A Neural Network's "On" Switch  When you build a neural network, each neuron has two inputs - its own weight multiplied by its corresponding input value from another neuron - and then it sums those values up with an activation function that turns the sum into either 0 or 1. The out&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-does-the-activation-function-work-in-a-neural-network"&gt;
  &lt;/a&gt;
  How does the activation function work in a neural network?
&lt;/h2&gt;

&lt;p&gt;The activation function is responsible for turning the sum of the weighted input values into either 0 or a positive number. If the summed value is greater than 0, then the output of the neuron will be set to a positive number. If the summed value is equal to or less than 0, then the neuron's output will be set to 0.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-the-purpose-of-an-activation-function"&gt;
  &lt;/a&gt;
  What is the purpose of an activation function?
&lt;/h2&gt;

&lt;p&gt;The basic reason for having an activation function in a neural network is that it makes sure that you don't accidentally activate every neuron, which would result in overfitting. This means training your model as many times as possible on as much data as possible and making sure its prediction error+the difference between the prediction it makes and the real value is as low as possible.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-common-activation-functions"&gt;
  &lt;/a&gt;
  What are common activation functions?
&lt;/h2&gt;

&lt;p&gt;There are many commonly used activation functions in neural networks: sigmoid, hyperbolic tangent (tanh), ReLU, leaky ReLu, softmax and others.&lt;/p&gt;

&lt;p&gt;There's even a library for recurrent neural networks, called PyBrain which implements a variety of different activation functions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sigmoid activation function&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Sigmoid is the simplest - it's just a step function with an offset: &lt;/p&gt;

&lt;p&gt;f(x)=max(-0.01, 0.01+exp(-abs(x))).&lt;/p&gt;

&lt;p&gt;Yes, you read that right! &lt;/p&gt;

&lt;p&gt;It takes your input value and transforms it into a number between -0.01 and 0.01, which is then used to decide whether or not the neuron should be activated.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Hyperbolic tangent (tanh) activation function&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Tanh is a little more complicated than the sigmoid function, but not by much. &lt;/p&gt;

&lt;p&gt;It's what you get when you apply two hyperbolic tangents to your input: &lt;/p&gt;

&lt;p&gt;f(x)=max(-0.01, 0.99+exp(-abs(x))- exp(-abs(x)).&lt;/p&gt;

&lt;p&gt;It has been proven to work better when training neural networks than sigmoid or ReLU (see here for more information).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ReLU (rectified linear unit) activation function&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The ReLU activation function is one of the most popular functions in use today: &lt;/p&gt;

&lt;p&gt;f(x)=max(0, x), for all x.&lt;/p&gt;

&lt;p&gt;It's a very simple function - all it does is set any negative number to 0 and then return them input values that are always positive, like in images or text data.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Leaky ReLU activation function&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Leaky ReLU is similar to the regular ReLU activation function, but with a small "leakiness" factor:&lt;/p&gt;

&lt;p&gt;f(x)=max(0, x)+alpha*(x-min(0, x)).&lt;/p&gt;

&lt;p&gt;This allows for some values to be negative and activates the neuron if the input value is above 0. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Softmax activation function&lt;/strong&gt;&lt;br&gt;
The softmax activation function is used for multi-class classification problems: &lt;/p&gt;

&lt;p&gt;f(x)=exp(x)/sum_i exp(xi), for all x.&lt;/p&gt;

&lt;p&gt;This ensures that the sum of all outputs from the neuron is always equal to one and that the probability of each class is represented in proportion.&lt;/p&gt;




&lt;p&gt;There are many different activation functions in use today, but the most popular ones are sigmoid, ReLU and Tanh. It's important to choose an activation function that will work best for your specific problem. For more information on how to choose the right one, check out this article.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#common-mistakes-with-activation-functions"&gt;
  &lt;/a&gt;
  Common mistakes with activation functions:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Forgetting to add an activation function&lt;/li&gt;
&lt;li&gt;Using the wrong activation functions for your problem (sigmoid is not a good choice if you're working with images, and ReLU isn't great when training recurrent neural networks)&lt;/li&gt;
&lt;li&gt;Not understanding how the activation function works and what it does to your data.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Be sure to do your research before choosing an activation function, so you can be sure you're using the right one for your problem!&lt;/p&gt;




&lt;p&gt;I hope you found this blog post interesting and informative. If you did, please share it with your friends so more people can learn about neural networks! Thanks for reading.&lt;/p&gt;




&lt;p&gt;images.cv provide you with an easy way to build image datasets.&lt;br&gt;
15K+ categories to choose from&lt;br&gt;
Consistent folders structure for easy parsing&lt;br&gt;
Advanced tools for dataset pre-processing: image format, data split, image size, and data augmentation.&lt;br&gt;
👉Visit images.cv to learn more&lt;/p&gt;

</description>
      <category>deeplearning</category>
      <category>machinelearning</category>
      <category>datascience</category>
      <category>python</category>
    </item>
    <item>
      <title>Operator overloading in python</title>
      <author>SaptakBhoumik</author>
      <pubDate>Sun, 12 Dec 2021 15:33:35 +0000</pubDate>
      <link>https://dev.to/saptakbhoumik/operator-overloading-in-python-4k09</link>
      <guid>https://dev.to/saptakbhoumik/operator-overloading-in-python-4k09</guid>
      <description>&lt;p&gt;Hi everyone, &lt;br&gt;
In this post I want to explain the concept of operator overloading in python. &lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#what-is-operator-overloading"&gt;
  &lt;/a&gt;
  What is operator overloading?
&lt;/h1&gt;

&lt;p&gt;In simple terms, it allows you to define what an operator does depending on it's argument. &lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#implementing-it-in-python"&gt;
  &lt;/a&gt;
  Implementing it in python
&lt;/h1&gt;

&lt;p&gt;Let's say that you are implementing a library to perform matrix operation. Instead of implementing a function to add 2 matrix you can overload a &lt;code&gt;+&lt;/code&gt; operator instead. This will make your library much easier to use. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The code&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__add__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]))]&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;))]&lt;/span&gt;
        &lt;span class="c1"&gt;# iterate through rows
&lt;/span&gt;        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;   
            &lt;span class="c1"&gt;# iterate through columns
&lt;/span&gt;            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])):&lt;/span&gt;
                &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;

&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;

    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;

    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;

&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;

    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;

    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;        
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Breaking it down&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;__init__&lt;/code&gt;- It initializes the object. Nothing special&lt;br&gt;
&lt;code&gt;__add__&lt;/code&gt;-This is where the overloading of the &lt;code&gt;+&lt;/code&gt; operator occurs. Within this function you have to implement how to add those numbers and that's it. It is how you overload operator in python.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Operator that can be overloaded&lt;/strong&gt;&lt;br&gt;
Binary Operators:&lt;br&gt;
&lt;code&gt;+&lt;/code&gt; = &lt;code&gt;__add__(self, other)&lt;/code&gt;&lt;br&gt;
&lt;code&gt;–&lt;/code&gt; = &lt;code&gt;__sub__(self, other)&lt;/code&gt;&lt;br&gt;
&lt;code&gt;*&lt;/code&gt; = &lt;code&gt;__mul__(self, other)&lt;/code&gt;&lt;br&gt;
&lt;code&gt;/&lt;/code&gt; = &lt;code&gt;__truediv__(self, other)&lt;/code&gt;&lt;br&gt;
&lt;code&gt;//&lt;/code&gt; = &lt;code&gt;__floordiv__(self, other)&lt;/code&gt;&lt;br&gt;
&lt;code&gt;%&lt;/code&gt; = &lt;code&gt;__mod__(self, other)&lt;/code&gt;&lt;br&gt;
&lt;code&gt;**&lt;/code&gt; = &lt;code&gt;__pow__(self, other)&lt;/code&gt;&lt;br&gt;
&lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; = &lt;code&gt;__rshift__(self, other)&lt;/code&gt;&lt;br&gt;
&lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt; = &lt;code&gt;__lshift__(self, other)&lt;/code&gt;&lt;br&gt;
&lt;code&gt;&amp;amp;&lt;/code&gt; = &lt;code&gt;__and__(self, other)&lt;/code&gt;&lt;br&gt;
&lt;code&gt;|&lt;/code&gt; = &lt;code&gt;__or__(self, other)&lt;/code&gt;&lt;br&gt;
&lt;code&gt;^&lt;/code&gt; = &lt;code&gt;__xor__(self, other)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Comparison Operators :&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;&lt;/code&gt; = &lt;code&gt;__lt__(self, other)&lt;/code&gt;&lt;br&gt;
&lt;code&gt;&amp;gt;&lt;/code&gt; = &lt;code&gt;__gt__(self, other)&lt;/code&gt;&lt;br&gt;
&lt;code&gt;&amp;lt;=&lt;/code&gt; = &lt;code&gt;__le__(self, other)&lt;/code&gt;&lt;br&gt;
&lt;code&gt;&amp;gt;=&lt;/code&gt; = &lt;code&gt;__ge__(self, other)&lt;/code&gt;&lt;br&gt;
&lt;code&gt;==&lt;/code&gt; = &lt;code&gt;__eq__(self, other)&lt;/code&gt;&lt;br&gt;
&lt;code&gt;!=&lt;/code&gt; = &lt;code&gt;__ne__(self, other)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Assignment Operators :&lt;/p&gt;

&lt;p&gt;&lt;code&gt;-=&lt;/code&gt; = &lt;code&gt;__isub__(self, other)&lt;/code&gt;&lt;br&gt;
&lt;code&gt;+=&lt;/code&gt; = &lt;code&gt;__iadd__(self, other)&lt;/code&gt;&lt;br&gt;
&lt;code&gt;*=&lt;/code&gt; = &lt;code&gt;__imul__(self, other)&lt;/code&gt;&lt;br&gt;
&lt;code&gt;/=&lt;/code&gt; = &lt;code&gt;__idiv__(self, other)&lt;/code&gt;&lt;br&gt;
&lt;code&gt;//=&lt;/code&gt; = &lt;code&gt;__ifloordev__(self, other)&lt;/code&gt;&lt;br&gt;
&lt;code&gt;%=&lt;/code&gt; = &lt;code&gt;__imod__(self, other)&lt;/code&gt;&lt;br&gt;
&lt;code&gt;**=&lt;/code&gt; = &lt;code&gt;__ipow__(self, other)&lt;/code&gt;&lt;br&gt;
&lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt; = &lt;code&gt;__irshift__(self, other)&lt;/code&gt;&lt;br&gt;
&lt;code&gt;&amp;lt;&amp;lt;=&lt;/code&gt; = &lt;code&gt;__ilshift__(self, other)&lt;/code&gt;&lt;br&gt;
&lt;code&gt;&amp;amp;=&lt;/code&gt; = &lt;code&gt;__iand__(self, other)&lt;/code&gt;&lt;br&gt;
&lt;code&gt;|=&lt;/code&gt; = &lt;code&gt;__ior__(self, other)&lt;/code&gt;&lt;br&gt;
&lt;code&gt;^=&lt;/code&gt; = &lt;code&gt;__ixor__(self, other)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Unary Operators:&lt;br&gt;
&lt;code&gt;–&lt;/code&gt; = &lt;code&gt;__neg__(self, other)&lt;/code&gt;&lt;br&gt;
&lt;code&gt;+&lt;/code&gt; = &lt;code&gt;__pos__(self, other)&lt;/code&gt;&lt;br&gt;
&lt;code&gt;~&lt;/code&gt; = &lt;code&gt;__invert__(self, other)&lt;/code&gt; &lt;br&gt;
This is the list of operators you can overload in python along with the name of the method you have to use&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Operator overloading is a powerful feature of python and can be very useful however you should not misuse it because it can create confusing code that is hard to read. I hope you learned something new. If you have enjoyed this one, make sure to read my &lt;a href="https://dev.to/saptakbhoumik/peregrine-update-the-python-like-language-thats-as-fast-as-c-43pb"&gt;previous post&lt;/a&gt;&lt;br&gt;
Thanks for reading &amp;lt;3&lt;/p&gt;

</description>
      <category>python</category>
    </item>
    <item>
      <title>GitHub Repositories Developers should know</title>
      <author>CHP</author>
      <pubDate>Sun, 12 Dec 2021 15:08:00 +0000</pubDate>
      <link>https://dev.to/chp/github-repositories-developers-should-know-lci</link>
      <guid>https://dev.to/chp/github-repositories-developers-should-know-lci</guid>
      <description>&lt;p&gt;GitHub repos are an amazing way to learn programming and leadership skills. In a long run, It’s a worthy skill to get started.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1free-programming-books"&gt;
  &lt;/a&gt;
  1.Free Programming Books
&lt;/h2&gt;

&lt;p&gt;Free online classes, interactive programming materials, problem sets and competitive programming, programming playgrounds and podcasts, and cheat sheets for practically every programming language are all included in &lt;a href="https://github.com/EbookFoundation/free-programming-books"&gt;Free Programming Books&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;GitHub&lt;/strong&gt;🌟: 215K+&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2developer-roadmap"&gt;
  &lt;/a&gt;
  2.Developer Roadmap
&lt;/h2&gt;

&lt;p&gt;If you want to work as a Frontend, Backend, or DevOps Engineer, this &lt;a href="https://github.com/kamranahmedse/developer-roadmap"&gt;repository&lt;/a&gt; offers all you need to know. It features a variety of different technologies from which you may select the one that best meets your needs or provides the most comfort.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;GitHub&lt;/strong&gt;🌟: 180K+&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3awesome"&gt;
  &lt;/a&gt;
  3.Awesome
&lt;/h2&gt;

&lt;p&gt;This &lt;a href="https://github.com/sindresorhus/awesome"&gt;repository&lt;/a&gt; contains information on a wide range of topics, including computer science, media, gaming, business, and so on.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;GitHub&lt;/strong&gt;🌟: 179K+&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4coding-interview-university"&gt;
  &lt;/a&gt;
  4.Coding Interview University
&lt;/h2&gt;

&lt;p&gt;This &lt;a href="https://github.com/jwasham/coding-interview-university"&gt;repository&lt;/a&gt; provides guidance on how to prepare for a career as a reliability engineer or an operations engineer. It also includes links to flashcards made by the repository's creator, who earned a position at Amazon, for fast brushing up on your expertise and staying current.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;GitHub&lt;/strong&gt;🌟: 210K+&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5public-apis"&gt;
  &lt;/a&gt;
  5.Public APIs
&lt;/h2&gt;

&lt;p&gt;This &lt;a href="https://github.com/public-apis/public-apis"&gt;repository&lt;/a&gt; includes a variety of Application Programming Interfaces (APIs) for business, anime, animals, news, finance, gaming, and other topics.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;GitHub&lt;/strong&gt;🌟: 171K+&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;That's a wrap!&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Thanks for reading this article. I also write regularly on my newsletter '&lt;a href="https://thelearners.substack.com/"&gt;The Learners&lt;/a&gt;', you can signup directly from &lt;a href="https://thelearners.substack.com/"&gt;this link&lt;/a&gt;. 💡💡&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#quote-of-the-day"&gt;
  &lt;/a&gt;
  Quote of the day:
&lt;/h3&gt;

&lt;p&gt;"We cannot solve our problems with the same thinking we used when we created them." - Albert Einstein&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>Advent of Code 2021 - Day 12</title>
      <author>Daniel Persson</author>
      <pubDate>Sun, 12 Dec 2021 15:03:00 +0000</pubDate>
      <link>https://dev.to/kalaspuffar/advent-of-code-2021-day-12-4ln2</link>
      <guid>https://dev.to/kalaspuffar/advent-of-code-2021-day-12-4ln2</guid>
      <description>&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/w0d8Wvagzmo"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;In this video series, I try to challenge myself with the Advent of Code trials. Each solution will be published to Github, and I hope you will learn something from my coding mistakes and perhaps send some code my way on how you have done these challenges. I know by reading code, so this is such an exciting thing for me.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Free resource from Harvard Stanford and Yale to target your resume for American companies</title>
      <author>Dina Kazakevich</author>
      <pubDate>Sun, 12 Dec 2021 15:02:27 +0000</pubDate>
      <link>https://dev.to/dinakazakevich/free-resource-from-harvard-stanford-and-yale-to-target-your-resume-for-american-companies-3bhf</link>
      <guid>https://dev.to/dinakazakevich/free-resource-from-harvard-stanford-and-yale-to-target-your-resume-for-american-companies-3bhf</guid>
      <description>&lt;p&gt;I'd spent over two year sending out applications and not getting any response from American remote-first companies before I had landed my first remote job back in 2016. I figured out a working version of my resume intuitively. &lt;/p&gt;

&lt;p&gt;I wanna help you reduce the time you spend on tailoring your resume by sharing these free resources from Harvard, Yale and Stanford that have some meaningful advice that helped me cut down the jobs search time to two months. &lt;/p&gt;

&lt;p&gt;In these guides you will find general guidance, formatting, and common mistakes. There are also sample resume templates that you can use and some action verbs to help you improve the wording. This is my curated list tha I use for myself and I'm gonna update it as I come across more resources. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#resume-and-cover-letter-examples-and-tips-by-top-american-universities"&gt;
  &lt;/a&gt;
  Resume and cover letter examples and tips by top American universities:
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://ocs.yale.edu/channels/resumes/"&gt;Resumes by Yale&lt;/a&gt;&lt;br&gt;
&lt;a href="https://beam.stanford.edu/sites/g/files/sbiybj10676/f/resume_and_cover_letter_examples.pdf"&gt;Resume and Cover Letter Examples by Stanford&lt;/a&gt;&lt;br&gt;
&lt;a href="https://ocs.fas.harvard.edu/files/ocs/files/undergrad_resumes_and_cover_letters.pdf"&gt;Resume and Cover Letter Guide by Harvard&lt;/a&gt;&lt;br&gt;
&lt;a href="https://students.wustl.edu/wp-content/uploads/2018/12/Transitional-Resumes-17-Accessible-PDF.pdf"&gt;Transitional Resume by Washington University&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#action-verbs-to-help-you-reword-and-unpack-your-experience"&gt;
  &lt;/a&gt;
  Action Verbs to help you reword and unpack your experience
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.gsb.stanford.edu/sites/gsb/files/action-verbs.pdf"&gt;Action Verbs by Stanford&lt;/a&gt;&lt;br&gt;
&lt;a href="https://cdn.uconnectlabs.com/wp-content/uploads/sites/77/2020/05/2016_Resume_Action_Verbs-1.pdf"&gt;Action Verbs by Yale&lt;/a&gt;&lt;br&gt;
&lt;a href="https://students.wustl.edu/wp-content/uploads/2018/12/Resume-Words-17-Accessible.pdf"&gt;Action Verbs by Washington University&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Resume tells your story and these guides can be used to tailor your story to any kind of position or company be it technical or non-technical one, one at startup or a large corporation. The format is universally accepted including positions at remote-first companies. &lt;/p&gt;

&lt;p&gt;Let me know if this is helpful and if you know any other resources I should include in the list! Good luck! &lt;/p&gt;

</description>
      <category>resume</category>
      <category>cv</category>
      <category>javascript</category>
      <category>engineer</category>
    </item>
    <item>
      <title>Getting Started with Amazon SageMaker Studio Lab</title>
      <author>Jia Wei Teh</author>
      <pubDate>Sun, 12 Dec 2021 14:55:43 +0000</pubDate>
      <link>https://dev.to/aws-builders/getting-started-with-amazon-sagemaker-studio-lab-ok</link>
      <guid>https://dev.to/aws-builders/getting-started-with-amazon-sagemaker-studio-lab-ok</guid>
      <description>&lt;p&gt;The best way to learn data science and machine learning is with hands-on labs, tutorials and experimentations. Unfortunately, there are common pain points that add a layer of friction to get aspiring data scientists started.&lt;/p&gt;

&lt;p&gt;These struggles include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;setting up hardware like GPU or frameworks installation on personal laptops&lt;/li&gt;
&lt;li&gt;cloud-hosted ML environments are easy to set up but expensive&lt;/li&gt;
&lt;li&gt;lack persistent storage on free options (i.e. your data and environment will reset after the session expires)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;In the latest AWS &lt;a href="https://reinvent.awsevents.com"&gt;re:Invent 2021&lt;/a&gt;, the AWS team announced the launch of SageMaker Studio Lab (currently in preview) to address these challenges and eliminate the setup hassle.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Amazon Sagemaker Studio is a free, no-configuration service that allows developers, academics and data scientist to learn and experiment with machine learning.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Unlike SageMaker Notebook Instances or SageMaker Studio, where you need to set up an AWS account (and the need for a credit card), you now &lt;strong&gt;only need&lt;/strong&gt; a valid &lt;strong&gt;email address&lt;/strong&gt; to register for an account and start experimenting.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#overview"&gt;
  &lt;/a&gt;
  Overview
&lt;/h3&gt;

&lt;p&gt;AWS SageMaker Studio Lab is free (yes, FREE!). You can even choose between CPU or GPU, depending on your project needs.&lt;br&gt;
Your account is allocated &lt;strong&gt;15 GB&lt;/strong&gt; of persistent storage, and 16GB of RAM. What this means is you can save your project and dataset in the cloud (no need to start from scratch every time)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;For those who are familiar with AWS, the underlying resources are as follow — &lt;code&gt;G4dn.xlarge&lt;/code&gt; for GPU and &lt;code&gt;T3.xlarge&lt;/code&gt; for CPU instances (subject to change)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;
  &lt;a href="#account-registration-and-creation"&gt;
  &lt;/a&gt;
  Account Registration and Creation
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Visit &lt;a href="https://studiolab.sagemaker.aws/"&gt;https://studiolab.sagemaker.aws/&lt;/a&gt; and request an account. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Fill up the form with your details&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BZSi7tOq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aano9abth0npn69xxpeo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BZSi7tOq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aano9abth0npn69xxpeo.png" alt="Request Form (screenshot from author)" width="623" height="923"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Wait for request approval (AWS claimed the process is &lt;em&gt;within 1 to 5 business days&lt;/em&gt;. I have gotten my account approved the next day after my request)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Upon receiving your approval email, you can follow the account creation instruction, proceed with the sign-up link from the email.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cuGbOivX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xzen1944a62mmij6mvd6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cuGbOivX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xzen1944a62mmij6mvd6.png" alt="Account Creation (screenshot from author)" width="678" height="612"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#exploring-the-interface"&gt;
  &lt;/a&gt;
  Exploring the Interface
&lt;/h2&gt;

&lt;p&gt;Upon reaching the landing page, you will need to start your project runtime. You’ll need to select between CPU and GPU runtime, and the sessions last from 12 (CPU) and 4 (GPU) respectively.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TSMKYC1s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cql1mahupp0w9jafof17.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TSMKYC1s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cql1mahupp0w9jafof17.png" alt="Home/Welcome page of SageMaker Studio Lab (screenshot from author)" width="678" height="528"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once the session is timed out, you will have to restart the project runtime again. Don’t worry, all your files will be saved on the persistent project storage.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--at_hQylM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sl7yv7opwul8ccwyxnlr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--at_hQylM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sl7yv7opwul8ccwyxnlr.png" alt="Check your remaining time for your session" width="686" height="188"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#learn-and-experiment"&gt;
  &lt;/a&gt;
  Learn and Experiment
&lt;/h2&gt;
&lt;h4&gt;
  &lt;a href="#aws-machine-learning-university-mlu"&gt;
  &lt;/a&gt;
  AWS Machine Learning University (MLU)
&lt;/h4&gt;

&lt;p&gt;MLU notebooks contain materials used to train Amazon’s own developers on machine learning. Courses include&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Natural Language Processing&lt;/li&gt;
&lt;li&gt;Tabular Data&lt;/li&gt;
&lt;li&gt;Computer Vision&lt;/li&gt;
&lt;li&gt;Decision Trees and Ensemble Methods&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;
  &lt;a href="#dive-into-deeplearning-d2l"&gt;
  &lt;/a&gt;
  Dive Into DeepLearning (D2L)
&lt;/h4&gt;

&lt;p&gt;Interactive notebooks (over 150 Jupyter Notebooks) that teach the fundamentals of machine learning, adopted from 300 universities, including Stanford, MIT, Harvard and Cambridge.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#hugging-face"&gt;
  &lt;/a&gt;
  Hugging Face
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://huggingface.co"&gt;Hugging Face&lt;/a&gt; is the home of the Transformers library and the latest NLP, speech and computer vision models. Here, you can explore and learn from the notebooks in this &lt;a href="https://github.com/huggingface/notebooks"&gt;repository&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#jupyter-lab-interface"&gt;
  &lt;/a&gt;
  Jupyter Lab Interface
&lt;/h2&gt;

&lt;p&gt;Since it is based on the open-source JupyterLab, you can take advantage of open-source Jupyter extensions to run your Jupyter notebooks.&lt;/p&gt;

&lt;p&gt;You can also have full control with your (virtual) environment to leverage frameworks such as PyTorch, TensorFlow, MxNet, Hugging Face and libraries such as Scikit Learn, Pandas and NumPy.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P3h_dnvF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u63mn37csihreeej7s74.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P3h_dnvF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u63mn37csihreeej7s74.png" alt="A typical Jupyter Lab interface on SageMaker Studio Lab (screenshot from author)" width="686" height="358"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can clone your own Github repository and work on SageMaker Studio Lab as it has integration to Github and to Git for version control.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QreIeI4s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dolf0eil9anop0anui8m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QreIeI4s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dolf0eil9anop0anui8m.png" alt="Cloning your own repo to work on SageMaker Studio Lab (screenshot from author)" width="682" height="283"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Furthermore, if you have a public Github repo with Jupyter Notebook, you can make it easy for others to open your notebooks in SageMaker Studio Lab.&lt;/p&gt;

&lt;p&gt;All you need to do is to add the &lt;code&gt;Open in Studio Lab&lt;/code&gt; link (badge) to your &lt;code&gt;README.md&lt;/code&gt; file or notebook. The markdown to be included is as follow:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[![Open In Studio Lab]
(https://studiolab.sagemaker.aws/studiolab.svg)]
(https://studiolab.sagemaker.aws/import/github/org/repo/blob/master/path/to/notebook.ipynb)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The created badge will look like this.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YXrcA5XF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5zrabcn4z56pw5l374h7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YXrcA5XF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5zrabcn4z56pw5l374h7.png" alt="“Open in Studio Lab” badge" width="671" height="137"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bonus-hackathon"&gt;
  &lt;/a&gt;
  Bonus: Hackathon
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aE42rvYU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s0865upbqzyoocpye2yt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aE42rvYU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s0865upbqzyoocpye2yt.png" alt="AWS Disaster Response Hackathon" width="691" height="137"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;At the time of writing (December 2021), there’s an ongoing hackathon (AWS Disaster Response Hackathon) where you can explore and train your models in SageMaker Studio Lab. The deadline is 7 Feb 2022, 5:00 pm EST.&lt;/p&gt;

&lt;p&gt;Read more:&lt;br&gt;
&lt;a href="https://awsdisasterresponse.devpost.com"&gt;https://awsdisasterresponse.devpost.com&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Thank you for reading this article and I hope you will find it insightful. Get your SageMaker Studio Lab before the waitlist is getting longer.&lt;/p&gt;

&lt;p&gt;Happy learning everyone.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>python</category>
      <category>machinelearning</category>
      <category>deeplearning</category>
    </item>
    <item>
      <title>Capybara For Web Testing.</title>
      <author>Hala Samir</author>
      <pubDate>Sun, 12 Dec 2021 14:38:37 +0000</pubDate>
      <link>https://dev.to/hala_samir/capybara-for-web-testing-3lg2</link>
      <guid>https://dev.to/hala_samir/capybara-for-web-testing-3lg2</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-capybara"&gt;
  &lt;/a&gt;
  What is Capybara?
&lt;/h2&gt;

&lt;p&gt;Capybara is a Ruby library (also referred to as a gem) helps you test web applications by simulating how a real user would interact with your app.It has an intuitive API which mimics the language an actual user would use.&lt;br&gt;
It switches the back-end your tests run against from fast headless mode to an actual browser with no changes to your tests.It has Powerful synchronization features mean you never have to manually wait for asynchronous processes to complete.&lt;/p&gt;

&lt;p&gt;Capybara doesn't interact directly with the web application, it is just a layer between you and the web driver. So, you can use any of the other drivers that Capybara supports.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#capybaras-drivers"&gt;
  &lt;/a&gt;
  Capybara's drivers:
&lt;/h2&gt;

&lt;p&gt;Capybara supports Selenium 3.5+ (Webdriver). In order to use Selenium, you'll need to install the selenium-webdriver gem, and add it to your Gemfile if you're using bundler.&lt;/p&gt;

&lt;p&gt;Capybara Webkit is built around a cool library called QtWebkit, which is a headless browser acting as a server that listens for commands using a lightweight socket layer. So when you boot up your test suite, that server also starts in a background process. Our Ruby driver implements the Capybara API and communicates with that server.&lt;/p&gt;

&lt;p&gt;Webkit is open source, powers Safari, Chrome, and other browsers. It’s fast and standards-compliant.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#how-to-install-capybara"&gt;
  &lt;/a&gt;
  How to install Capybara?
&lt;/h2&gt;

&lt;p&gt;Capybara requires Ruby 2.6.0 or later. To install, add this line to your Gemfile and run bundle install:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;gem 'capybara'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If the application that you are testing is a Rails app, add this line to your test helper file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;require 'capybara/rails'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If the application that you are testing is a Rack app, but not Rails, set Capybara.app to your Rack app:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Capybara.app = MyRackApp
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you need to test JavaScript, or if your app interacts with (or is located at) a remote URL, you will need to use a different driver. If using Rails 5.0+, but not using the Rails system tests from 5.1, you'll probably also want to swap the "server" used to launch your app to Puma in order to match Rails defaults.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Capybara.server = :puma # Until your setup is working
Capybara.server = :puma, { Silent: true } # To clean up your test output
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Using Capybara with RSpec:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Load RSpec 3.5+ support by adding the following line (typically to your spec_helper.rb file):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;require 'capybara/rspec'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;The spec_helper file:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The spec_helper file contains the  require block pulls the ruby gems from the Bundler application.&lt;br&gt;
It also includes the Capybara DSL library we'll use to have Capybara interact with our test site, and Capybara RSpec, which sets up our test framework like drivers, max wait time or the base app URL.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The run command for a single file is:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;bundle exec rspec spec/features/test_file_name_spec.rb
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#write-a-first-test-case-by-capybara"&gt;
  &lt;/a&gt;
  Write a first test case by Capybara:
&lt;/h2&gt;

&lt;p&gt;Enter the scenario name and the add the steps between do and end.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;scenario 'the scenario name' do
  #---add the test steps here.
end
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Visit a new page:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To navigate to a special URL:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;visit intended_page_path
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Perform on a page elements:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To select any element you can any selector like id, name, or element label&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;To click button use:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;   click_link('link_id')
   click_link('link_text')
   click_button('Save')
   click_on('link_text') # clicks on either links or buttons
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;To fill text field:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;fill_in('First Name', with: 'name_value')
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;To select from a drop down list use:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;select('Option', from: 'Select_box')
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;To check/uncheck a checkbox use:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;check('checkbox')
uncheck('checkbox')
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;To select a radio button use:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;choose('radio_button')
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;To attach a file it is preferred to add a file in the project path in a separate folder(module/package), attach_file can only accept id and name.:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;attach_file('Image', '/path/to/image.jpg')
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Scoping&lt;/strong&gt;&lt;br&gt;
Capybara facilitates interacting with forms or clicking links and buttons, within a specific area of the page:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;within(:xpath, ".//li[@id='employee']") do
  fill_in 'Name', with: 'Jimmy'
end
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Scripting&lt;/strong&gt;&lt;br&gt;
Capybara enables executing JavaScript:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;page.execute_script("$('body').empty()")
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Querying&lt;/strong&gt;&lt;br&gt;
Capybara has a rich set of options for querying the page for the existence of certain elements like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;page.has_selector?(:xpath, './/xpath_of_element')
page.has_xpath?('.//xpath_of_element')
page.has_css?('css_selector')
page.has_content?('text')
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;Also RSpec's matchers can be used:&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;expect(page).to have_selector(:xpath, './/table/tr')
expect(page).to have_xpath('.//table/tr')
expect(page).to have_css('table tr.foo')
expect(page).to have_content('foo')
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion:
&lt;/h2&gt;

&lt;p&gt;Capybara is a common choice for end-to-end, acceptance, or integration testing in Rails applications.&lt;/p&gt;

&lt;p&gt;It enables simulating  a user actions on a web page and make assertions based on the content and environment of the page.&lt;/p&gt;

</description>
      <category>capybara</category>
      <category>rails</category>
      <category>webdev</category>
      <category>testdev</category>
    </item>
    <item>
      <title>Deep dive into Lambda event-filters for DyanmoDB</title>
      <author>Jones Zachariah Noel</author>
      <pubDate>Sun, 12 Dec 2021 14:30:00 +0000</pubDate>
      <link>https://dev.to/aws-builders/deep-dive-into-lambda-event-filters-for-dyanmodb-320</link>
      <guid>https://dev.to/aws-builders/deep-dive-into-lambda-event-filters-for-dyanmodb-320</guid>
      <description>&lt;p&gt;&lt;a href="https://aws.amazon.com/lambda/"&gt;Amazon Lambda Functions&lt;/a&gt; with the event-filtering for &lt;a href="https://aws.amazon.com/dynamodb/"&gt;DynamoDB&lt;/a&gt; Streams enables ease of integration and application development. &lt;/p&gt;

&lt;p&gt;There are a couple of good blog posts with talks about how to setup triggers with filter patterns to your Lambda fns.&lt;/p&gt;

&lt;p&gt;To know about what is DynamoDB Streams and it's use-cases - &lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/aws-builders" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__org__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5zuWf912--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--Z-NQNKRG--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/organization/profile_image/2794/88da75b6-aadd-4ea1-8083-ae2dfca8be94.png" alt="AWS Community Builders " width="150" height="150"&gt;
      &lt;div class="ltag__link__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kkHH3V11--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--3Fp0x08L--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/95513/70f9e8d9-74f8-4089-b443-d8a4140dad1d.jpg" alt="" width="150" height="150"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/aws-builders/using-dynamodb-streams-and-lambda-in-your-serverless-applications-3epl" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Using DynamoDB Streams and Lambda in your Serverless Applications&lt;/h2&gt;
      &lt;h3&gt;AJ Stuyvenberg for AWS Community Builders  ・ Nov 29 ・ 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#dynamodb&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#serverless&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#lambda&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
To know about what is the announcement of Lambda functions Event-filtering -&lt;br&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/aws-builders" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__org__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5zuWf912--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--Z-NQNKRG--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/organization/profile_image/2794/88da75b6-aadd-4ea1-8083-ae2dfca8be94.png" alt="AWS Community Builders " width="150" height="150"&gt;
      &lt;div class="ltag__link__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rTCEL73H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--2MTjnerN--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/615180/12ee3aca-f67e-4f08-986f-1bdfd7ca384b.jpg" alt="" width="150" height="150"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/aws-builders/trigger-lambda-functions-with-event-filtering-2pnb" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Trigger Lambda Functions with event filtering&lt;/h2&gt;
      &lt;h3&gt;Jones Zachariah Noel for AWS Community Builders  ・ Nov 28 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#aws&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#serverless&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#eventdriven&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#lambdafunctions&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
To know about DynamoDB Streams which are helpful with event-filtering - &lt;br&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/aws-builders" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__org__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5zuWf912--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--Z-NQNKRG--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/organization/profile_image/2794/88da75b6-aadd-4ea1-8083-ae2dfca8be94.png" alt="AWS Community Builders " width="150" height="150"&gt;
      &lt;div class="ltag__link__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QRPbzEEq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--y3d2drVh--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/600469/c7d2a122-5eab-4e5b-8a44-1780a45da910.jpg" alt="" width="150" height="150"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/aws-builders/new-dynamodb-streams-filtering-in-serverless-framework-3lc5" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;NEW: DynamoDB Streams Filtering in Serverless Framework&lt;/h2&gt;
      &lt;h3&gt;Pawel Zubkiewicz for AWS Community Builders  ・ Dec 6 ・ 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#aws&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#cloudnative&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#dynamodb&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#serverless&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/nosqlknowhow" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--en3esMca--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--48JTSrrr--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/237920/2644d873-fc0f-4258-88d6-86a32119db99.jpeg" alt="nosqlknowhow"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/nosqlknowhow/aws-lambda-event-filter-of-amazon-dynamodb-streams-16pc" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;AWS Lambda event filtering for Amazon DynamoDB Streams&lt;/h2&gt;
      &lt;h3&gt;Kirk Kirkconnell ・ Dec 1 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#lambda&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#serverless&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#dynamodb&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#aws&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/aws-builders" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__org__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5zuWf912--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--Z-NQNKRG--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/organization/profile_image/2794/88da75b6-aadd-4ea1-8083-ae2dfca8be94.png" alt="AWS Community Builders " width="150" height="150"&gt;
      &lt;div class="ltag__link__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ddYhnz3u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--Slpaljim--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/311858/74d52a71-2385-4409-84c5-9becea50a557.jpg" alt="" width="150" height="150"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/aws-builders/filtering-dynamodb-streams-before-lambda-p5p" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Filtering DynamoDB Streams before Lambda&lt;/h2&gt;
      &lt;h3&gt;Tom Milner for AWS Community Builders  ・ Nov 29 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#aws&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#serverless&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#dynamodb&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#lambda&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h4&gt;
  &lt;a href="#key-takeaways"&gt;
  &lt;/a&gt;
  Key takeaways
&lt;/h4&gt;

&lt;p&gt;In this blog post, we will deep dive into the feature itself and we will learn about - &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#working"&gt;How the filtering works&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#supported-filters"&gt;Filter patterns supported&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#limiations"&gt;Limitations with event-filtering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#usecase"&gt;Use-cases and it's associated filter-patterns&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#how-the-filtering-works"&gt;
  &lt;/a&gt;
  How the filtering works &lt;a&gt;&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;The filter expression or the filter pattern JSON uses a strict JSON format which is used to match the filtering criteria. For a DynamoDB Stream based event, the JSON is validated against the key &lt;code&gt;dynamodb&lt;/code&gt; which is part of the event JSON.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"Records"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"dynamodb"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PjxJ2S56--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gqfvyl08iy8jrfc0u4zc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PjxJ2S56--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gqfvyl08iy8jrfc0u4zc.png" alt="Flow diagram" width="798" height="1051"&gt;&lt;/a&gt; &lt;br&gt;
Whenever an action on DynamoDB &lt;code&gt;putItem&lt;/code&gt; or &lt;code&gt;updateItem&lt;/code&gt; or &lt;code&gt;deleteItem&lt;/code&gt; occurs, the &lt;code&gt;INSERT&lt;/code&gt; or &lt;code&gt;MODIFY&lt;/code&gt; or &lt;code&gt;REMOVE&lt;/code&gt; events are triggered respectively if DynamoDB Streams are enabled. This helps handling the needed business logic for specific actions. Now with &lt;em&gt;event filtering with patterns&lt;/em&gt; are available, this performs additional validation before the Lambda function is invoked. &lt;br&gt;
The flow diagram explains, whenever there is a DynamoDB Stream invoked, it checks if the target Lambda fn has any event filtering pattern defined or not. If the pattern is available, event JSON is validated against it and if the event JSON matches the criteria then the Lambda fn gets invoked.&lt;br&gt;
If nothing is matched, the event is discarded. If the pattern itself is not defined, the Lambda function gets invoked as &lt;em&gt;event-filter patterns&lt;/em&gt; are optional.&lt;/p&gt;

&lt;p&gt;Event which is triggered whenever a DynamoDB &lt;code&gt;INSERT&lt;/code&gt; operation happens is -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"Records"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"eventID"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"42a3c355ea58b7c68a96368be0f8fa68"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"eventName"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"INSERT"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"eventVersion"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"1.1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"eventSource"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"aws:dynamodb"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"awsRegion"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"us-east-1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"dynamodb"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nl"&gt;"ApproximateCreationDateTime"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1638968744&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nl"&gt;"Keys"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
                    &lt;/span&gt;&lt;span class="nl"&gt;"sk"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
                        &lt;/span&gt;&lt;span class="nl"&gt;"S"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"CAR"&lt;/span&gt;&lt;span class="w"&gt;
                    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
                    &lt;/span&gt;&lt;span class="nl"&gt;"pk"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
                        &lt;/span&gt;&lt;span class="nl"&gt;"S"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"USA3271395584644fordgalaxie5001972-01-01"&lt;/span&gt;&lt;span class="w"&gt;
                    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nl"&gt;"NewImage"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
                    &lt;/span&gt;&lt;span class="nl"&gt;"miles_per_gallon"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
                        &lt;/span&gt;&lt;span class="nl"&gt;"N"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"14"&lt;/span&gt;&lt;span class="w"&gt;
                    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
                    &lt;/span&gt;&lt;span class="nl"&gt;"acceleration"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
                        &lt;/span&gt;&lt;span class="nl"&gt;"N"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"13"&lt;/span&gt;&lt;span class="w"&gt;
                    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
                    &lt;/span&gt;&lt;span class="nl"&gt;"car_name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
                        &lt;/span&gt;&lt;span class="nl"&gt;"S"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Ford Galaxie 500"&lt;/span&gt;&lt;span class="w"&gt;
                    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
                    &lt;/span&gt;&lt;span class="nl"&gt;"horsepower"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
                        &lt;/span&gt;&lt;span class="nl"&gt;"N"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"153"&lt;/span&gt;&lt;span class="w"&gt;
                    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
                    &lt;/span&gt;&lt;span class="nl"&gt;"year"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
                        &lt;/span&gt;&lt;span class="nl"&gt;"S"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"1972-02-01"&lt;/span&gt;&lt;span class="w"&gt;
                    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
                    &lt;/span&gt;&lt;span class="nl"&gt;"origin"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
                        &lt;/span&gt;&lt;span class="nl"&gt;"S"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"USA"&lt;/span&gt;&lt;span class="w"&gt;
                    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
                    &lt;/span&gt;&lt;span class="nl"&gt;"sk"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
                        &lt;/span&gt;&lt;span class="nl"&gt;"S"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"CAR"&lt;/span&gt;&lt;span class="w"&gt;
                    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
                    &lt;/span&gt;&lt;span class="nl"&gt;"displacement"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
                        &lt;/span&gt;&lt;span class="nl"&gt;"N"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"351"&lt;/span&gt;&lt;span class="w"&gt;
                    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
                    &lt;/span&gt;&lt;span class="nl"&gt;"pk"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
                        &lt;/span&gt;&lt;span class="nl"&gt;"S"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"USA3271395584644fordgalaxie5001972-01-01"&lt;/span&gt;&lt;span class="w"&gt;
                    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
                    &lt;/span&gt;&lt;span class="nl"&gt;"cylinders"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
                        &lt;/span&gt;&lt;span class="nl"&gt;"N"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"8"&lt;/span&gt;&lt;span class="w"&gt;
                    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
                    &lt;/span&gt;&lt;span class="nl"&gt;"weight_in_lbs"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
                        &lt;/span&gt;&lt;span class="nl"&gt;"N"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"4129"&lt;/span&gt;&lt;span class="w"&gt;
                    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nl"&gt;"SequenceNumber"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"530563900000000048422878623"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nl"&gt;"SizeBytes"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;228&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nl"&gt;"StreamViewType"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"NEW_AND_OLD_IMAGES"&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"eventSourceARN"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"arn:aws:dynamodb:us-east-1:xxxxxxx:table/cars-demo/stream/2021-11-28T18:05:10.127"&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#filter-patterns-supported"&gt;
  &lt;/a&gt;
  Filter patterns supported &lt;a&gt;&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;The event filtering uses JSON based patterns which are capable with the following criteria checks -&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Criteria&lt;/th&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;th&gt;Syntax&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Null&lt;/td&gt;
&lt;td&gt;origin is null&lt;/td&gt;
&lt;td&gt;&lt;code&gt;"origin": [ null ]&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Empty&lt;/td&gt;
&lt;td&gt;origin is empty&lt;/td&gt;
&lt;td&gt;&lt;code&gt;"origin": [""]&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Equals&lt;/td&gt;
&lt;td&gt;origin is "USA"&lt;/td&gt;
&lt;td&gt;&lt;code&gt;"origin": ["USA"]&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;And&lt;/td&gt;
&lt;td&gt;origin is "USA" and cylinders is 8&lt;/td&gt;
&lt;td&gt;&lt;code&gt;"origin": ["USA"], "cylinders": ["8"]&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Or&lt;/td&gt;
&lt;td&gt;origin is "USA" or "Germany"&lt;/td&gt;
&lt;td&gt;&lt;code&gt;"origin": ["USA","Germany"]&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Not&lt;/td&gt;
&lt;td&gt;origin is not Japan&lt;/td&gt;
&lt;td&gt;&lt;code&gt;"origin": { "anything-but": [ "Japan" ] }&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Exists&lt;/td&gt;
&lt;td&gt;displacement exists&lt;/td&gt;
&lt;td&gt;&lt;code&gt;"displacement ": [ { "exists": true } ]&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Does not exists&lt;/td&gt;
&lt;td&gt;displacement does not exists&lt;/td&gt;
&lt;td&gt;&lt;code&gt;"displacement ": [ { "exists": false} ]&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Begins with&lt;/td&gt;
&lt;td&gt;pk begins with "USA"&lt;/td&gt;
&lt;td&gt;&lt;code&gt;"pk": [ {"prefix": "USA" } ]&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h4&gt;
  &lt;a href="#limitations-with-eventfiltering"&gt;
  &lt;/a&gt;
  Limitations with event-filtering &lt;a&gt;&lt;/a&gt;
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;The max number of &lt;em&gt;event-filtering patterns&lt;/em&gt; that can be defined for a Lambda fn is 5. Additionally, you cannot have multiple event sources from the same DynamoDB table.&lt;/li&gt;
&lt;li&gt;Each of the 5 patterns is validated against an &lt;em&gt;OR&lt;/em&gt; condition i.e. pattern1 OR pattern2 OR pattern3 OR pattern4 OR pattern5&lt;/li&gt;
&lt;li&gt;Numeric comparisons such as numeric equals or number in range cannot be performed as the DynamoDB Streams uses the marshalled JSON structure which has numbers also as strings.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"horsepower": {
     "N": "153"
},
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;A individual pattern criteria can validate with an &lt;em&gt;AND&lt;/em&gt; condition only. Eg. &lt;code&gt;"origin": ["USA","Germany"], "cylinders": ["8"], "pk": [ {"prefix": "USA" } ]&lt;/code&gt; would validate when "origin" is either "USA" or "Germany" and "cylinders" is 8 and "year" begins with "1972".&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#usecases-and-its-associated-filterpatterns"&gt;
  &lt;/a&gt;
  Use-cases and it's associated filter-patterns &lt;a&gt;&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;Whenever you would want the Lambda function to be invoked only if -&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Have atleast one cylinder.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"filters"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"pattern"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"{&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;dynamodb&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; : &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;{ &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;NewImage&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; : &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;cylinder&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; : &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;N&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; :  { &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;anything-but&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;: [ &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;0&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; ] } }&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; }"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;A new car is added to the DynamoDB table.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"filters"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"pattern"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"{&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;eventName&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; : [&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;INSERT&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;], &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;dynamodb&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; : &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;{ &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;Key&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; : &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;sk&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; : &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;S&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; :  [&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;CAR&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;] }&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;  }"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;A car from USA origin is modified.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"filters"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"pattern"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"{&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;eventName&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; : [&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;MODIFY&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;], &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;dynamodb&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; : &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;{ &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;NewImage&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; : &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;origin&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; : &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;S&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; :  [&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;USA&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;] }&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;  }"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;A car name beginning with "Ford" is deleted.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"filters"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"pattern"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"{&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;eventName&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; : [&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;REMOVE&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;], &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;dynamodb&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; : &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;{ &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;OldImage&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; : &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;car_name&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; : &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;S&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; :  [{&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;prefix&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;: &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;Ford&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; }] }&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;  }"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Either if a new car is added or removed.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"filters"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"pattern"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"{&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;eventName&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; : [&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;INSERT&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;,&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;REMOVE&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;], &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;dynamodb&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; : &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;{ &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;Key&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; : &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;sk&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; : &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;S&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; :  [&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;CAR&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;] }&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;  }"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Either if a new car is added or if the any car with year 1971 is added / deleted / updated.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"filters"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"pattern"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"{&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;eventName&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; : [&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;INSERT&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;]}"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"pattern"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"{&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;dynamodb&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; : &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;{ &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;OldImage&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; : &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;year&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; : &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;S&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; :  [{&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;prefix&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;: &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;1971&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; }] }&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;  }"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h4&gt;

&lt;p&gt;The &lt;em&gt;event-filtering with DynamoDB Streams&lt;/em&gt; helps in filtering out and focusing only on the pattern of data which needs the Lambda function to be invoked. This helps in efficient and optimized Lambda function code as the additional code to validate various conditions. This also adheres to the new &lt;em&gt;Well Architected Model&lt;/em&gt;'s new pillar &lt;em&gt;Sustainability pillar&lt;/em&gt; which ensures there is less carbon foot-print because of limited Lambda function executions.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>dynamodb</category>
      <category>serverless</category>
      <category>eventdriven</category>
    </item>
    <item>
      <title>Android Biometric API primer</title>
      <author>RockAndNull</author>
      <pubDate>Sun, 12 Dec 2021 14:17:03 +0000</pubDate>
      <link>https://dev.to/rockandnull/android-biometric-api-primer-1inc</link>
      <guid>https://dev.to/rockandnull/android-biometric-api-primer-1inc</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ITMVqLpV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.unsplash.com/photo-1485230405346-71acb9518d9c%3Fcrop%3Dentropy%26cs%3Dtinysrgb%26fit%3Dmax%26fm%3Djpg%26ixid%3DMnwxMTc3M3wwfDF8c2VhcmNofDR8fHNlY3VyaXR5fGVufDB8fHx8MTYzOTMxODU0NA%26ixlib%3Drb-1.2.1%26q%3D80%26w%3D2000" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ITMVqLpV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.unsplash.com/photo-1485230405346-71acb9518d9c%3Fcrop%3Dentropy%26cs%3Dtinysrgb%26fit%3Dmax%26fm%3Djpg%26ixid%3DMnwxMTc3M3wwfDF8c2VhcmNofDR8fHNlY3VyaXR5fGVufDB8fHx8MTYzOTMxODU0NA%26ixlib%3Drb-1.2.1%26q%3D80%26w%3D2000" alt="Android Biometric API primer" width="880" height="571"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It's quite probable that your app handles at least some "sensitive" data. It might be the case that the only sensitive data are just the app settings, or it might be the case that the entire app is sensitive (e.g. banking apps). Either way, it's quite common that you might need to secure the app (or just a screen within the app) with some kind of authentication.&lt;/p&gt;

&lt;p&gt;No need to implement your own logic and hassle with storing and verifying credentials though. Android provides an easy mechanism to authenticate the user using the existing device methods (e.g. fingerprint, device password, etc). The user won't have to create yet another user/pass combination and a familiar trusted system UI will be used for the authentication.&lt;/p&gt;

&lt;p&gt;Without further ado, let's get a taste of how we can authenticate the user using the &lt;a href="https://developer.android.com/jetpack/androidx/releases/biometric"&gt;AndroidX Biometric Library&lt;/a&gt;. This is a library that allows uniform access to the biometric hardware to all the devices running Android 6.0 (API level 23) and above.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#install-the-library"&gt;
  &lt;/a&gt;
  Install the library
&lt;/h2&gt;

&lt;p&gt;Add the dependency to your &lt;code&gt;build.gradle&lt;/code&gt;. As always, check for the &lt;a href="https://developer.android.com/jetpack/androidx/releases/biometric"&gt;latest version.&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;implementation "androidx.biometric:biometric:1.1.0"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#show-the-authentication"&gt;
  &lt;/a&gt;
  Show the authentication
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    override fun onCreate(savedInstanceState: Bundle?) {
        [...]
        val biometricManager = BiometricManager.from(this)
        if (biometricManager.canAuthenticate( // 1.
           BIOMETRIC_WEAK or DEVICE_CREDENTIAL) == BIOMETRIC_SUCCESS) {
            instanceOfBiometricPrompt().authenticate(getPromptInfo())
        }
    }

    private fun instanceOfBiometricPrompt(): BiometricPrompt {
        val executor = ContextCompat.getMainExecutor(this) // 2.
        val callback = object : BiometricPrompt.AuthenticationCallback() {

            override fun onAuthenticationSucceeded(
               result: BiometricPrompt.AuthenticationResult) {
                // 3.
            }

            override fun onAuthenticationFailed() {
                // 4.
            }

            override fun onAuthenticationError(errorCode: Int,
               errString: CharSequence) {
                // 5.
            }
        }
        return BiometricPrompt(this, executor, callback)
    }

    private fun getPromptInfo(): BiometricPrompt.PromptInfo = // 6.
        BiometricPrompt.PromptInfo.Builder()
            .setTitle("Prompt title")
            .setSubtitle("Prompt subtitle")
            .setDescription("Prompt description")
            .setAllowedAuthenticators(
               BIOMETRIC_WEAK or DEVICE_CREDENTIAL) // 7.
            .build()

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Firstly, check that the device can authenticate using the desired methods. &lt;code&gt;BIOMETRIC_WEAK&lt;/code&gt; means that you want authentication just for accessing a part of the app (without doing anything &lt;a href="https://developer.android.com/training/sign-in/biometric-auth#crypto"&gt;cryptographically&lt;/a&gt;). &lt;code&gt;DEVICE_CREDENTIAL&lt;/code&gt; means you allow the user to authenticate using the device password/passcode.
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The resulting &lt;code&gt;BIOMETRIC_SUCCESS&lt;/code&gt; is the "happy path". Check the rest of the &lt;a href="https://developer.android.com/reference/android/hardware/biometrics/BiometricManager#constants"&gt;enum values&lt;/a&gt; to handle the cases where the requested authentication methods are not available or not set. For instance, if the user has fingerprint hardware, but didn't set it up, there's a way to &lt;a href="https://developer.android.com/training/sign-in/biometric-auth#available"&gt;prompt that user to set it up&lt;/a&gt; if you want.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The prompt needs to run in the main UI thread. This is an easy way to get that thread across every Android version. &lt;/li&gt;
&lt;li&gt;Handle here what happens when the user successfully authenticates (e.g. proceed with accessing the app / restricted screen). Check the &lt;code&gt;result&lt;/code&gt; object to check which of the allowed authentication methods was used, if needed.&lt;/li&gt;
&lt;li&gt;Called when the user failed to authenticate, but can still try again (e.g. placed an unrecognized finger on the sensor).&lt;/li&gt;
&lt;li&gt;Called when an unrecoverable error has occurred.&lt;/li&gt;
&lt;li&gt;All the metadata that will be shown in the prompt. The system prompt will look like the one below.&lt;/li&gt;
&lt;li&gt;The allowed authentication methods should be the same as in step 1 ideally. Note here that if the authentication methods are invalid or unsupported on the current device a runtime error will be thrown on &lt;code&gt;build()&lt;/code&gt;. So always use step 1 to check that the combination is valid and supported.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JIHXFN-b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.rockandnull.com/content/images/2021/12/image.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JIHXFN-b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.rockandnull.com/content/images/2021/12/image.png" alt="Android Biometric API primer" width="880" height="772"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Sample authentication prompt&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Hopefully, you got a taste of how to authenticate and protect sensitive parts of your app using Android's Biometric API.&lt;/p&gt;

&lt;p&gt;Happy coding!&lt;/p&gt;

</description>
      <category>android</category>
    </item>
    <item>
      <title>HTML-CSS Projects With Source Code</title>
      <author>Enes Kılıç</author>
      <pubDate>Sun, 12 Dec 2021 14:16:30 +0000</pubDate>
      <link>https://dev.to/enesskilic/html-css-projects-with-source-code-5f5l</link>
      <guid>https://dev.to/enesskilic/html-css-projects-with-source-code-5f5l</guid>
      <description>&lt;p&gt;Sample HTML and CSS projects with source code.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#github-repository"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/enesskilic/html-css-projects"&gt;Github Repository&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#content"&gt;
  &lt;/a&gt;
  Content
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#portfolio"&gt;Responsive Personal Portfolio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#dashboard"&gt;Responsive Dashboard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#netflix"&gt;Responsive Netflix Landing Page&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#video-background"&gt;Video Background&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#login-page"&gt;Login Page&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#responsive-personal-portfolio-back-to-top"&gt;
  &lt;/a&gt;
  Responsive Personal Portfolio - &lt;a href="#portfolio"&gt;Back to top&lt;/a&gt;
&lt;/h3&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_iadO1FE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/enesskilic/html-css-projects/main/screenshots/portfolio.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_iadO1FE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/enesskilic/html-css-projects/main/screenshots/portfolio.png" alt="Screenshot" width="880" height="503"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#responsive-dashboard-back-to-top"&gt;
  &lt;/a&gt;
  Responsive Dashboard - &lt;a href="#content"&gt;Back to top&lt;/a&gt;
&lt;/h3&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4Hq7ChIY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/enesskilic/html-css-projects/blob/main/screenshots/dashboard.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4Hq7ChIY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/enesskilic/html-css-projects/blob/main/screenshots/dashboard.png%3Fraw%3Dtrue" alt="Screenshot" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#responsive-netflix-landing-page-back-to-top"&gt;
  &lt;/a&gt;
  Responsive Netflix Landing Page - &lt;a href="#content"&gt;Back to top&lt;/a&gt;
&lt;/h3&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cBDCrcsb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/enesskilic/html-css-projects/blob/main/screenshots/netflix.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cBDCrcsb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/enesskilic/html-css-projects/blob/main/screenshots/netflix.png%3Fraw%3Dtrue" alt="Screenshot" width="880" height="420"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#video-background-back-to-top"&gt;
  &lt;/a&gt;
  Video Background - &lt;a href="#content"&gt;Back to top&lt;/a&gt;
&lt;/h3&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jTBgZTsu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/enesskilic/html-css-projects/raw/main/screenshots/video-background.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jTBgZTsu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/enesskilic/html-css-projects/raw/main/screenshots/video-background.png" alt="Screenshot" width="880" height="400"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#login-page-back-to-top"&gt;
  &lt;/a&gt;
  Login Page - &lt;a href="#content"&gt;Back to top&lt;/a&gt;
&lt;/h3&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ti109yrB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/enesskilic/html-css-projects/raw/main/screenshots/login-page.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ti109yrB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/enesskilic/html-css-projects/raw/main/screenshots/login-page.png" alt="Screenshot" width="880" height="398"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>html</category>
      <category>css</category>
    </item>
    <item>
      <title>9 Facts about Convolutional Neural Network (CNN)</title>
      <author>images.cv</author>
      <pubDate>Sun, 12 Dec 2021 14:12:38 +0000</pubDate>
      <link>https://dev.to/imagescv/some-facts-about-convolutional-neural-network-cnn-2e14</link>
      <guid>https://dev.to/imagescv/some-facts-about-convolutional-neural-network-cnn-2e14</guid>
      <description>&lt;ol&gt;
&lt;li&gt;A convolutional neural network is a type of deep learning architecture that has been trained to recognize patterns in images&lt;/li&gt;
&lt;li&gt;Convolutional neural networks are commonly used for image recognition tasks, such as recognizing faces or objects in photographs&lt;/li&gt;
&lt;li&gt;The term "convolution" refers to the mathematical operation where one function is applied to another with some overlap; it's also known as an integral sign ∫&lt;/li&gt;
&lt;li&gt;Convolutional layers use filters that slide over the input volume and produce a result which can be thought of like taking samples from a continuous signal (e.g., sliding your finger across sandpaper)&lt;/li&gt;
&lt;li&gt;Filters at different positions will produce different results because they are sensitive to slight variations in texture - this way, details about shape and size can be captured by analysis of the responses within these small areas &lt;/li&gt;
&lt;li&gt;The output layer produces classifications based on what it sees in the input volume (the convolved filter), similar to traditional machine learning methods&lt;/li&gt;
&lt;li&gt;A drawback of convolutional neural networks is that they can be sensitive to scaling and translation in the input image, which means it's difficult for them to handle an arbitrary orientation or size&lt;/li&gt;
&lt;li&gt;Another downside is that they require a large number of labeled training data sets in order to work effectively&lt;/li&gt;
&lt;li&gt;Convolutional neural networks can also suffer from overfitting if not enough regularization techniques are used during training &lt;/li&gt;
&lt;/ol&gt;




&lt;p&gt;images.cv provide you with an easy way to build image datasets.&lt;br&gt;
15K+ categories to choose from&lt;br&gt;
Consistent folders structure for easy parsing&lt;br&gt;
Advanced tools for dataset pre-processing: image format, data split, image size, and data augmentation.&lt;br&gt;
👉Visit images.cv to learn more&lt;/p&gt;

</description>
      <category>machinelearning</category>
      <category>datascience</category>
      <category>deeplearning</category>
      <category>python</category>
    </item>
    <item>
      <title>How to Deal with the Developer DAO Discord?</title>
      <author>K (he/him)</author>
      <pubDate>Sun, 12 Dec 2021 14:05:51 +0000</pubDate>
      <link>https://dev.to/kayis/how-to-deal-with-the-developer-dao-discord-57m6</link>
      <guid>https://dev.to/kayis/how-to-deal-with-the-developer-dao-discord-57m6</guid>
      <description>&lt;p&gt;&lt;strong&gt;Note: If you want to stay up-to-date without the Discord chat, you can jump to &lt;a href="#async-alternatives"&gt;Async Alternatives&lt;/a&gt; right way!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Discord has become the bane of DAOs. Especially when a DAO is still in the early stages, Discord is used to coordinate and communicate. A few bots with crypto features, and you are good to go!&lt;/p&gt;

&lt;p&gt;But new members often struggle with these Discord servers, especially when they got many channels. And the Developer DAO has over a hundred of them, and it's not easy to stay on top of things when you don't really know where to look.&lt;/p&gt;

&lt;p&gt;In this article, I will try to make some sense of it all and give some advice on dealing with the server in a sane way.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#muting-channels"&gt;
  &lt;/a&gt;
  Muting Channels
&lt;/h2&gt;

&lt;p&gt;My primary way to deal with Discord is to mute everything, and in the first months on the Developer DAO Discord server, I even hid all muted channels. &lt;/p&gt;

&lt;p&gt;Seeing fewer channels calmed me, so I recommend the muting feature as the leading way to deal with the channels.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dealing-with-fomo"&gt;
  &lt;/a&gt;
  Dealing with FOMO
&lt;/h2&gt;

&lt;p&gt;Fear of missing out, or FOMO, is a massive problem in the crypto space right now. People are making big money by the day, and things move SO fast; you get the feeling that you have to stay on top, or you will miss your lucky break.&lt;/p&gt;

&lt;p&gt;When you join a DAO, things become a little clearer because now you have boiled down the vast ecosystem crypto is to a small topic you are interested in. There are art DAOs, investment DAOs, protocol DAOs, and, like the Developer DAO, there are educational DAOs.&lt;/p&gt;

&lt;p&gt;You can't look out for all things happening, so focusing on something that really interests you helps to stay current with the news in that space. And nobody knows if "your lucky break" might be here or there. So why not wait for it at a place that is easy for you to understand or at least interests you more than the rest of that ecosystem?&lt;/p&gt;

&lt;p&gt;The same goes for the Developer DAO Discord server. Try to focus, don't go through every channel and make sense of it. &lt;/p&gt;

&lt;p&gt;So, let's be a little more concrete and check the actual channels!&lt;/p&gt;

&lt;p&gt;Mute everything besides &lt;code&gt;#💬-general&lt;/code&gt; and then un-mute what could be of your interest.&lt;/p&gt;

&lt;p&gt;Let's go from the bottom to the top in the list because many of the far-down channels can stay on mute for various reasons.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#irl"&gt;
  &lt;/a&gt;
  IRL
&lt;/h2&gt;

&lt;p&gt;The IRL category is for small/non-official events in a specific location. &lt;/p&gt;

&lt;p&gt;If you don't care about meeting people In Real Life, you can skip all of them, lol.&lt;/p&gt;

&lt;p&gt;Scroll through it and check if a location near you is available and unmute it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-guilds"&gt;
  &lt;/a&gt;
  The Guilds
&lt;/h2&gt;

&lt;p&gt;A guild in a DAO is like a department in a company. Each Developer DAO guild got a Discord category with many private and public channels. &lt;/p&gt;

&lt;p&gt;If any guild sparks your interest, you can un-mute their channels. Each guild has a starting channel for new members that should clear things up.&lt;/p&gt;

&lt;p&gt;If you're really new to the whole DAO thing and just wanna "look," I'd recommend skipping all the guild channels and moving on to the next category.&lt;/p&gt;

&lt;p&gt;But suppose you like to do something practical right away and are interested in moderating, writing, or developing. In that case, I'd recommend the exact opposite: Join a guild and focus on a project and then learn about the rest of the DAO as you go.&lt;/p&gt;

&lt;p&gt;To join a guild, go to the &lt;code&gt;#🤝-guild-select&lt;/code&gt; in the Developers category at the top of the channel list and use one of the emoji reactions.&lt;/p&gt;

&lt;p&gt;You're welcome in every guild, even if you don't do anything. The guild internal channels are hidden because we already have so many channels on Discord. &lt;/p&gt;

&lt;p&gt;Just join whatever guild you want, look if it's interesting, stay there, leave, no hard feelings if you just "lurk" everywhere.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#languages-category"&gt;
  &lt;/a&gt;
  Languages Category
&lt;/h2&gt;

&lt;p&gt;You might be lucky, and a channel in your native language is available. Un-mute it, and you might find some people that explain a bit to you in your own tongue, that might clear things up.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#live-events"&gt;
  &lt;/a&gt;
  Live Events
&lt;/h2&gt;

&lt;p&gt;Here are many channels related to web3 events that (will) happen all over the world. Conferences, hackathons, you name it.&lt;/p&gt;

&lt;p&gt;You can ignore them if you aren't interested in such events right now.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#other"&gt;
  &lt;/a&gt;
  Other
&lt;/h2&gt;

&lt;p&gt;Everything that isn't adequately categorized, haha.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;#📚-books&lt;/code&gt; is for recommendations on books, mostly non-fiction if you can call anything crypto-related that.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;#👯-collaborations&lt;/code&gt; is for finding people to work on a project that isn't related to the Developer DAO&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;#🕹-gaming&lt;/code&gt; for crypto games, play-to-earn, etc.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;#🌞-gm&lt;/code&gt; for spamming gm, which is short for good morning btw.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;💻-jobs-and-gigs&lt;/code&gt; if you need money &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;#🧠-mental-health&lt;/code&gt; to keep you sane in the face of all the FOMO&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;#🐋-trading&lt;/code&gt; to whine about the last dip&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;#🎨-nfts&lt;/code&gt; for ... well, anything NFT related really&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;#🔥-shill-your-project&lt;/code&gt; to promote your latest pyramid scheme&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;#🤖-bot-command-channel&lt;/code&gt; to use a bot command, so it doesn't show up in another channel&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I muted everything but trading and mental-health and only occasionally looked in the other channels.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#technical-discussion"&gt;
  &lt;/a&gt;
  Technical Discussion
&lt;/h2&gt;

&lt;p&gt;This might be the most exciting category for new developers. &lt;/p&gt;

&lt;p&gt;Here you can choose channels related to the crypto tech you're using and ask technical questions about it. You might find some good souls that help you with your issues or point you to some resources to get started.&lt;/p&gt;

&lt;p&gt;Sometimes it's simply lovely to discuss tech choices.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dao-projects"&gt;
  &lt;/a&gt;
  DAO Projects
&lt;/h2&gt;

&lt;p&gt;Here, projects directly related to the DAO have their own channels for daily discussions. &lt;/p&gt;

&lt;p&gt;If you want to do something and a channel name somehow sparks your interest, un-mute it and talk to the people there if something you can do needs to be done.&lt;/p&gt;

&lt;p&gt;Like with the guilds, working on one of these projects and learning the rest of the DAO working along the way might be a good idea.&lt;/p&gt;

&lt;p&gt;Discussing or programming something concrete can also help get rid of the FOMO.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#developers"&gt;
  &lt;/a&gt;
  Developers
&lt;/h2&gt;

&lt;p&gt;The main category, it's a bit of a mixed bag like the "other" category. So, let's check what they're about.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;#📣-announcements&lt;/code&gt; is for everything necessary that every DAO member should know. You get them even if you're muted, so don't bother to un-mute.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;#🛬-onboarding&lt;/code&gt; helps you to get up-to-speed in the DAO&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;#🤝-guild-select&lt;/code&gt; is used to join a guild. You can enter every guild, no gatekeeping here. &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;#👋-introductions&lt;/code&gt; for telling people who you are&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;#🙋-ask-anything—in-a-thread&lt;/code&gt; for all your questions, none of them will be considered dumb, and usually, members from the community guild will monitor it.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;#💬-general&lt;/code&gt; everything really, if you only un-mute one channel it might as well be this one.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;#🖼-show-your-dev&lt;/code&gt; to show your Developer DAO NFT image&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;#📅-d_d-events&lt;/code&gt; for all Developer DAO events. A bot will post event dates, and you can say you will attend and add them to your calendar, etc. The bi-weekly town-hall event might be interesting for newcomers.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;#😂-memes&lt;/code&gt; is for spamming your crypto/web3 memes&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;#📝-learning-resources&lt;/code&gt; is for web3/crypto-related learning material; people post what they find on the internet.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;#🚀-boost-your-content&lt;/code&gt; is for your own creations, the Developer DAO people who maintain the Twitter account might tweet about things you post here.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;#⚡-creator-spotlight&lt;/code&gt; is like boost-your-content, but more for people than single pieces of content. Write who you are and what you do, and you might get tweeted.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;#🔮-probably-nothing&lt;/code&gt; is notable news about crypto/web3, like burger chains using NFTs or El Salvadore using Bitcoin.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;#💡-community-improvement&lt;/code&gt; is your go-to place if you have some excellent ideas on how to make the DAO better, especially for newcomers!&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;#🦄-buildspace&lt;/code&gt; is &lt;a href="https://buildspace.so/"&gt;a start-up&lt;/a&gt; that focuses on teaching web3 related skills; you can join their Discord too if you want to learn something.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;#🎥-tech-events&lt;/code&gt; is for events that aren't related to the Developer DAO. Some get their own channels when they're interesting enough for all DAO members.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;#🚨-report-scams&lt;/code&gt; to stay up to date on the grifters in the crypto space. This includes scammers on the Developer DAO Discord and general scammers around the internet.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;#📊-dao-polls&lt;/code&gt; is for small polls about Developer DAO-related questions that aren't that important, like what to call the Developer DAO conference, etc.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;#developers-voice-text&lt;/code&gt; is used to talk when an event (planned in &lt;code&gt;#📅-d_d-events&lt;/code&gt;) is happening. Some people will use voice chat to speak, but most will write on this channel.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I only un-muted general and probably-nothing. Some channels are simply spammed; others are only used once after you joined, so nothing special happens.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#rules"&gt;
  &lt;/a&gt;
  Rules
&lt;/h2&gt;

&lt;p&gt;It can stay muted, but I'd really advise you to read the rules and adhere to them. The moderators will enforce them to keep the community safe and inclusive.&lt;/p&gt;

&lt;p&gt;This channel also includes anonymous reporting if you want to report harassment.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;I only un-muted 20 channels, and I'm like 3 months in. When I started to mute channels, I think I ended up with less than 10 and later added them as I got bored or wanted to dive deeper.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#async-alternatives"&gt;
  &lt;/a&gt;
  Async Alternatives
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://developerdao.notion.site/developerdao/Developer-DAO-Wiki-eff4dcb00bef46fbaa93e9e4cf940e2e"&gt;There is a wiki&lt;/a&gt; with any information about the DAO, its guilds, and their projects. You can read it at your own pace.&lt;/p&gt;

&lt;p&gt;You don't need to follow every conversation all the time. The community will vote the most important things and &lt;a href="https://forum.developerdao.com/"&gt;talked about on the forum&lt;/a&gt; in an asynchronous matter. &lt;/p&gt;

&lt;p&gt;Also, &lt;a href="https://developerdao.substack.com/s/probably-nothing"&gt;we have a newsletter&lt;/a&gt; that is released every week to tell you what's up in the guilds in the DAO in general. So you don't even have to attend the bi-weekly town hall meetings if you don't have the time.&lt;/p&gt;

</description>
      <category>community</category>
      <category>chat</category>
      <category>crypto</category>
    </item>
  </channel>
</rss>
