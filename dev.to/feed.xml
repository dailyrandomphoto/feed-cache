<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network. Open source and radically transparent.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>What was your win this week?</title>
      <author>Gracie Gregory (she/her)</author>
      <pubDate>Fri, 04 Dec 2020 16:58:58 +0000</pubDate>
      <link>https://dev.to/devteam/what-was-your-win-this-week-2e3d</link>
      <guid>https://dev.to/devteam/what-was-your-win-this-week-2e3d</guid>
      <description>&lt;p&gt;Another week is coming to a close!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Looking back on your week ‚Äî what was something you're proud of?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;All wins count ‚Äî big or small üéâ&lt;/p&gt;

&lt;p&gt;Examples of 'wins' include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Starting a new project&lt;/li&gt;
&lt;li&gt;Landing a new job&lt;/li&gt;
&lt;li&gt;Getting some exercise... or whatever else might spark joy ‚ù§Ô∏è&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;I hope you all have a great weekend!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/TfizjuBxsXFuPNb4Ch/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/TfizjuBxsXFuPNb4Ch/giphy.gif" alt="Hip Hop Friday"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>weeklyretro</category>
    </item>
    <item>
      <title>What is API....</title>
      <author>AnkitaBagale</author>
      <pubDate>Fri, 04 Dec 2020 16:43:49 +0000</pubDate>
      <link>https://dev.to/ankitabagale/what-is-api-1m99</link>
      <guid>https://dev.to/ankitabagale/what-is-api-1m99</guid>
      <description>&lt;p&gt;Ever wondered how travel booking sites are able to list thousands of flights and hotels for a destination and showcase the cheapest option...&lt;br&gt;
The answer is &lt;strong&gt;API&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;In technical terms, &lt;strong&gt;API&lt;/strong&gt; is &lt;strong&gt;Application Programming Interface.&lt;/strong&gt; The name itself says it's an interface between two programs.&lt;br&gt;
APIs let your application communicate with other applications without having to know how they‚Äôre implemented.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-api" class="anchor"&gt;
  &lt;/a&gt;
  Why API?
&lt;/h3&gt;

&lt;p&gt;Consider you are developing translation app which takes user input in English and shows translated text in Korean language. Now to implement this if you go on developing the whole program which will translate user words in Korean, you will end up making your code more complex and will spend a lot of time.&lt;br&gt;
Instead, if you use API for translation, you just need to program to take user input and display translated output. You don't need to know how the translation is taking place. Another application will have program to translate it and API will get that translated text for you. &lt;br&gt;
This can simplify app development, saving time and money. Let's see how API works.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-does-api-work" class="anchor"&gt;
  &lt;/a&gt;
  How does API work?
&lt;/h3&gt;

&lt;p&gt;Consider you are at a restaurant and you requested Noodles to waiter. Waiter will go to the kitchen(where your Noodles are being prepared) and get your order from kitchen back to you. You may not even know how to prepare the noodles.&lt;/p&gt;

&lt;p&gt;In this above example, &lt;strong&gt;waiter&lt;/strong&gt; is &lt;strong&gt;API&lt;/strong&gt;. &lt;strong&gt;You&lt;/strong&gt; are your &lt;strong&gt;translation app&lt;/strong&gt;. &lt;strong&gt;Noodles&lt;/strong&gt; are &lt;strong&gt;translated text&lt;/strong&gt; for user's English input. &lt;strong&gt;Kitchen&lt;/strong&gt; is &lt;strong&gt;another application&lt;/strong&gt;(which have program to translate to Korean language).&lt;/p&gt;

&lt;p&gt;API allows software applications to talk to each other. but how do API transfer information then?&lt;br&gt;
There are four types of actions an API can take:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. GET: Requests data from server&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;GET&lt;/code&gt; requests are the most common and widely used methods in APIs and websites. The &lt;code&gt;GET&lt;/code&gt; method is used to retrieve data from a resource. Like in translation app, translation app requests for translated text for user input text. &lt;code&gt;GET&lt;/code&gt; method of API brings response from server of that actual translating app. This response content is transmitted in the XML/JSON files. &lt;br&gt;
See below screenshot, if &lt;code&gt;GET&lt;/code&gt; method successfully brings response(translated text), it gives success code 200. If server is down or server is not found, it gives error code 400 in response. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0ypeV-RC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/qocqjgg8w6grf31sqr4i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0ypeV-RC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/qocqjgg8w6grf31sqr4i.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Since a &lt;code&gt;GET&lt;/code&gt; request is only requesting data and not modifying any resource, it's considered a safe and idempotent method.&lt;br&gt;
Idempotent means making multiple identical requests must produce the same result every time until server content is not changed.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. POST: Sends new information to a server&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In web services, &lt;code&gt;POST&lt;/code&gt; requests are used to send data to the API server to create new data in resource. &lt;br&gt;
Consider you are filling a sign up form, when you enter your personal information and click on sign up, it takes entered data in format of XML/JSON/query parameters as &lt;code&gt;POST&lt;/code&gt; request to the server where all the signed up users data gets stored.&lt;br&gt;
If personal information is successfully stored in server, then we get 200 status code for &lt;code&gt;POST&lt;/code&gt; request in response.&lt;br&gt;
&lt;code&gt;POST&lt;/code&gt; request is not idempotent. Every time we send data to store using &lt;code&gt;POST&lt;/code&gt; request, it creates new data in resource.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. PUT: Makes changes to existing data on server&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;PUT&lt;/code&gt; request is same as &lt;code&gt;POST&lt;/code&gt; request. Difference is &lt;code&gt;PUT&lt;/code&gt; request is idempotent. Every time we send data using &lt;code&gt;PUT&lt;/code&gt; request to the API server to create data in resource, it checks if the data in resource is already present, if present then it updates the existing data in resource. If not present, it creates data in resource.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. DELETE: Removes existing info from server&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;DELETE&lt;/code&gt; operations are idempotent. If you &lt;code&gt;DELETE&lt;/code&gt; data, it‚Äôs removed from the resource. Requesting &lt;code&gt;DELETE&lt;/code&gt; data second time will return a 404 error code in response.&lt;/p&gt;




&lt;p&gt;It is important that we know what basically happens when we include anything new in our programs. I hope beginners will find this article helpful when working with APIs.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>javascript</category>
      <category>codenewbie</category>
      <category>webdev</category>
    </item>
    <item>
      <title>A Practical Guide to SVG for Web to Print [+ 4 Free Tools]</title>
      <author>Tanya</author>
      <pubDate>Fri, 04 Dec 2020 16:03:25 +0000</pubDate>
      <link>https://dev.to/tetyanailchenko/a-practical-guide-to-svg-for-web-to-print-4-free-tools-158l</link>
      <guid>https://dev.to/tetyanailchenko/a-practical-guide-to-svg-for-web-to-print-4-free-tools-158l</guid>
      <description>&lt;p&gt;When it comes to creating or just adding graphical assets to the website, you can choose raster formats like popular PNG, JPG, GIF, or vector, like SVG, AI, or EPS. Nevertheless, using SVG format on the web is gaining popularity and becomes a powerful tool in the hands of designers, developers, and even printers. If you want to create logos, icons, animation, or use the image for print, SVG format is as applicable as ever. Let‚Äôs get deep into this, and we will explain what SVG is, how to use this, and why this is in demand.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-svg" class="anchor"&gt;
  &lt;/a&gt;
  What is SVG?
&lt;/h2&gt;

&lt;p&gt;SVG, or Scalable Vector Graphic, is a vector-based graphics in &lt;a href="https://www.w3schools.com/xml/default.asp"&gt;XML format&lt;/a&gt; which is used for the web and works with JavaScript, CSS, DOM, and other standards. Basically, an SVG image contains lines and curves, which can have any color value. However, some complicated SVG files can have embedded PNG, JPG images, or SVG image itself.&lt;/p&gt;

&lt;p&gt;Created with XML, vector images can be scaled to any size without losing resolution and still can look like high-quality images, even in huge sizes. Unlike PNG, the larger the image, the less the quality. Let‚Äôs take a look at the example of zoomed SVG and PNG images.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m4NxAgmU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.newtonideas.com/Xq1TSLfDbRMM0bgsqkcS.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m4NxAgmU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.newtonideas.com/Xq1TSLfDbRMM0bgsqkcS.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-benefits-of-using-svg" class="anchor"&gt;
  &lt;/a&gt;
  What benefits of using SVG?
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Scalable and adaptive to all screens&lt;/strong&gt;. All SVG assets are displayed in good quality on different screens like desktop, mobile, tablets, etc. Providing users high-grade images regardless of their devices is one of the main parts of an excellent user experience. &lt;/li&gt;
&lt;li&gt;You can use a &lt;strong&gt;text editor&lt;/strong&gt; to work with simple SVG graphics, for example, Notepad. This can significantly save your time on installing additional software and figuring out how to work with this. However, for the more complex graphic configuration, you may need to use some tools. I will provide a list of them at the end of the article.&lt;/li&gt;
&lt;li&gt;SVG is &lt;strong&gt;supported by all modern browsers&lt;/strong&gt; like Safari, Chrome, Firefox, etc.&lt;/li&gt;
&lt;li&gt;Compared to raster images, SVG has a &lt;strong&gt;smaller file size&lt;/strong&gt;. It is known that site speed plays a crucial role. Typically, the user leaves the page if it takes longer than 3 seconds to load. Therefore, having SVG assets instead of PNG can improve this indicator.&lt;/li&gt;
&lt;li&gt;SVG can be not only static. Because SVG format works with JavaScript, you can &lt;strong&gt;create animation&lt;/strong&gt;, which can significantly improve your website performance. &lt;/li&gt;
&lt;li&gt;Regardless of size, SVG images are &lt;strong&gt;high-quality&lt;/strong&gt;, which is well suited for printing.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#what-does-the-svg-file-consist-of" class="anchor"&gt;
  &lt;/a&gt;
  What does the SVG file consist of?
&lt;/h2&gt;

&lt;p&gt;SVG file consists of text - SVG markup. Every SVG file starts with a &lt;em&gt;&lt;/em&gt; tag, which contains the image‚Äôs width and height attributes. After this tag, you can add any shapes you need to create the desired graphic. For example, let‚Äôs start with a basic SVG image that contains only one line.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;body&amp;gt;

&amp;lt;svg height="210" width="500"&amp;gt;
  &amp;lt;line x1="30" y1="100" x2="400" y2="20" 
   style="stroke:rgb(115, 3, 252);stroke-width:4" /&amp;gt;
&amp;lt;/svg&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Result:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yK7tpRwB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.newtonideas.com/K6jxJZ0ZPgQbVrSktNmh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yK7tpRwB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.newtonideas.com/K6jxJZ0ZPgQbVrSktNmh.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;SVG uses a two-dimensional system of coordinates. This system starts from the top left corner (0,0). As you can see, the  contains the start point - &lt;em&gt;x1,y1&lt;/em&gt;, the endpoint - &lt;em&gt;x2,y2&lt;/em&gt;, style attribute defining color in RGB, and the line width. You may have already noticed that this code contains some HTML code. This means that every SVG graphics can be embedded into an HTML page directly.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#shapes" class="anchor"&gt;
  &lt;/a&gt;
  Shapes
&lt;/h2&gt;

&lt;p&gt;The line is just one of the basic predefined shapes which you can use for graphic creation. &lt;br&gt;
You can also draw other shapes like &lt;em&gt;circle, rectangle, ellipse, polyline, and polygon&lt;/em&gt; using respective XML tags.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  &amp;lt;circle cx="190" cy="120" r="100" 
          stroke="black" stroke-width="1" 
          fill="white" /&amp;gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Result:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XV3Fzz9E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.newtonideas.com/nAyXxHHotRCAtetMGh27.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XV3Fzz9E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.newtonideas.com/nAyXxHHotRCAtetMGh27.png" alt=""&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  &amp;lt;polygon points="230,20 270,200 130,240" 
           style="fill:white;stroke:black; 
           stroke-width:1" /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Result:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_ZXWY38h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.newtonideas.com/7gcDpQadQh9H6RHh0oxF.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_ZXWY38h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.newtonideas.com/7gcDpQadQh9H6RHh0oxF.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#more-complex-shapes" class="anchor"&gt;
  &lt;/a&gt;
  More complex shapes
&lt;/h2&gt;

&lt;p&gt;Having basic shapes allows you to create plain assets. However, what if you want to create a more complicated design with unusual shapes? Here is why the &lt;em&gt;&lt;/em&gt; was created for. This attribute allows you to create curves, open and clothed paths and is one of the most adaptable SVG elements. If you want to use &lt;em&gt;&lt;/em&gt;, we recommend using professional tools for SVG creation instead of plain text editors. &lt;/p&gt;

&lt;p&gt;The idea of &lt;em&gt;&lt;/em&gt; is that all lines or shapes are built sequentially, from one point to another point. The tag &lt;em&gt;&lt;/em&gt; has a main &lt;em&gt;attribute d&lt;/em&gt;, which consists of commands that can create graphics.&lt;/p&gt;

&lt;p&gt;Let‚Äôs take a look at the rectangle created using a path.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;svg&amp;gt;
    &amp;lt;path d="M0,0 L300,0 L300,100 L0,100 Z" 
    style="fill:rgb(200,50,170)"/&amp;gt;
&amp;lt;/svg&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;em&gt;M&lt;/em&gt; set coordinates of the first point. In our case, this point starts from the top left corner. &lt;em&gt;L&lt;/em&gt; means draw the line from the current point to the specified one. &lt;em&gt;Z&lt;/em&gt; is used to complete the path and closes it. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Result:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YESkhZuW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.newtonideas.com/nJf1r0wPlPDMIwOJ3dRe.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YESkhZuW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.newtonideas.com/nJf1r0wPlPDMIwOJ3dRe.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The same result you will get if you use the basic shape.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;svg&amp;gt;
  &amp;lt;rect width="300" height="100" 
  style="fill:rgb(200,50,170)" /&amp;gt;
&amp;lt;/svg&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;The &lt;em&gt;&lt;/em&gt; has many other commands that allow you to draw arcs, curves, horizontal or vertical connections with two points. You can read more about all path commands &lt;a href="https://www.w3schools.com/graphics/svg_path.asp"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#can-i-add-text-to-svg" class="anchor"&gt;
  &lt;/a&gt;
  Can I add text to SVG?
&lt;/h2&gt;

&lt;p&gt;Yes, text can be added to SVG using the &lt;em&gt;&lt;/em&gt; tag. As for other elements, you should define coordinates for your text. Text color, size, and font values are also feasible. Please consider that font size should not be bigger than y coordinates because your text will look not entirely. You can also apply a style to your text using CSS properties. For example, &lt;em&gt;font-style, font-weight, text-transform&lt;/em&gt;. &lt;/p&gt;

&lt;p&gt;Text in SVG is indexed flawlessly, so it is an excellent opportunity to keep improving your SEO. Regardless this is a standalone file or file embedded in HTML, search engines can recognize the text.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;svg &amp;gt;
  &amp;lt;text x="80" y="60" font-size="40" 
   font-weight="bold" fill="green"&amp;gt; 
   Text here!
  &amp;lt;/text&amp;gt;
&amp;lt;/svg&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Result:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OGUYI7oh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.newtonideas.com/gC8c0R3LqtZJt8ysNEDY.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OGUYI7oh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.newtonideas.com/gC8c0R3LqtZJt8ysNEDY.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;However, adding text through &lt;em&gt;&lt;/em&gt; tag can cause some problems with the font-family attribute. For example, when you specify a &lt;em&gt;font-family&lt;/em&gt; that is not available on the user‚Äôs web browser or is not installed on the desktop, tablet, etc., then this font will not be displayed correctly, or a font similar to it will be used instead. This may be risky, especially for those who sell personalized products for their decoration industries struggling to satisfy customers‚Äô needs. In Liveart, we handle this by using vectorized text. We convert TTF, WOFF, OTF, or PFB files to JS file, where every symbol has its own &lt;em&gt;&lt;/em&gt;. This approach allows displaying text correctly without the additional need to install the font. &lt;/p&gt;

&lt;p&gt;Using vectorized text is also a good approach when you need to convert your SVG file to PNG, JPG, or PDF and use it for printing, as text elements will be displayed precisely with the font preserving. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#strokes-filters-effect-and-shadows" class="anchor"&gt;
  &lt;/a&gt;
  Strokes, filters, effect, and shadows
&lt;/h2&gt;

&lt;p&gt;To have your design more sophisticated, you can apply some filters, effects, and strokes. Strokes are used to define the color of a line or text. Besides color, you can set line thickness using the &lt;em&gt;stroke-width&lt;/em&gt; property or even create dashed lines with the &lt;em&gt;stroke-dasharray&lt;/em&gt; property*.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;svg&amp;gt;
    &amp;lt;path stroke="black" stroke-width="6" 
     stroke-dasharray="10,10" 
     d="M10 20 L230 20" /&amp;gt;
&amp;lt;/svg&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Result:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1fxkf35x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.newtonideas.com/stroke_svg.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1fxkf35x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.newtonideas.com/stroke_svg.jpg" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When working with strokes outline, you may face some issues with the stroke-width attribute. By default, width changes are applied to the outside and inside and cause changes in text thickness itself. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Old version of LiveArt HTML5 Designer (v0.10).&lt;/em&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h4L7VEIp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://img.newtonideas.com/LiveArt%2520HTML5%2520%281%29.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h4L7VEIp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://img.newtonideas.com/LiveArt%2520HTML5%2520%281%29.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Strokes in web to print requires preserving the initial appearance of the text - size, thickness, etc. In the last version of LiveArt Designer, this issue was solved by changing only the outside part of the stroke while saving the original text size. Having a properly configured stroke is an essential part of output generation and its further usage. Here you can check how strokes should work:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Actual version of LiveArt HTML5 Designer (v1.0).&lt;/em&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2VOadYY0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://img.newtonideas.com/Custom%2520Web2Print%2520Editor%2520Live%2520Demo%2520%282%29.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2VOadYY0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://img.newtonideas.com/Custom%2520Web2Print%2520Editor%2520Live%2520Demo%2520%282%29.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are also a lot of filter elements that you can apply to your graphics. For example, &lt;em&gt;&lt;/em&gt; for blur effect, &lt;em&gt;&lt;/em&gt; for shadow effect, or &lt;em&gt;&lt;/em&gt; for blending two images, and many others.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;svg&amp;gt;
 &amp;lt;defs&amp;gt;
  &amp;lt;filter id="f0" x="0" y="0"&amp;gt;
    &amp;lt;feGaussianBlur in="SourceGraphic" stdDeviation="15" /&amp;gt;
  &amp;lt;/filter&amp;gt;
 &amp;lt;/defs&amp;gt;
 &amp;lt;rect width="200" height="200" stroke="black" stroke-width="5" 
  fill="red" filter="url(#f0)" /&amp;gt;
&amp;lt;/svg&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Result:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---SRfhPYm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.newtonideas.com/filter_svg.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---SRfhPYm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.newtonideas.com/filter_svg.jpg" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To identify the unique filter name, we should use the &lt;em&gt;id&lt;/em&gt; attribute. You can also control the blur size with the &lt;em&gt;stdDeviation&lt;/em&gt; attribute.&lt;/p&gt;

&lt;p&gt;Unfortunately, filters are not supported by all browsers. Google Chrome supports filters only from version 8.0, Safari - from version 6.0, Opera - from version 9.6, Internet Explorer from version 10.0, and Firefox from version 3.0. To provide your users with a good experience, make sure that a default element (without filters) looks good.&lt;/p&gt;

&lt;p&gt;When talking about the web to print, it is quite risky to use filters for production output as we are not entirely sure that the customer‚Äôs browser will support this. However, LiveArt uses filters to visualize products and create a good impression during customization. We show some parts with thread effect for products like socks to get the product preview as real as possible. One more case where effects can be applied is custom jewelry products or custom tags. For such products, we suggest applying an effect to the text to make it more visible on the reference that will be used for the stamping.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z8BE5IUL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.newtonideas.com/tag.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z8BE5IUL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.newtonideas.com/tag.jpg" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can achieve a stamped effect not only with SVG filters but also using &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/box-shadow"&gt;CSS based on text-shadow property&lt;/a&gt;, yet the last one has no SVG filter flexibility and features.&lt;/p&gt;

&lt;p&gt;More about SVG in LiveArt&lt;/p&gt;

&lt;p&gt;LiveArt relies on the SVG format and considers it as one of the most convenient and flexible in usage. Developing robust solutions for more than ten years, we understood that vector format is useful for our customers. Therefore, we have implemented the support of multicolored SVG graphics in our &lt;a href="https://www.liveartdesigner.com/live-demo/html5-product-designer"&gt;online design software&lt;/a&gt;, which you can use from our free artwork gallery or upload your own. SVG format allows you to resize the image to any size without getting a ‚ÄúLow-resolution warning.‚Äù Moreover, SVG is easy to output and ready to use without any extra conversions.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S-Xl3Clo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.newtonideas.com/artwork_svg.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S-Xl3Clo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.newtonideas.com/artwork_svg.jpg" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As well as graphics preparation, LiveArt also uses SVG format for product preparations, especially for multicolored uniforms. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jvEqTvK_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.newtonideas.com/product_svg.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jvEqTvK_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.newtonideas.com/product_svg.jpg" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;These graphics need preliminary preparation. If you are interested in preparing vector graphics, you can check our &lt;a href="https://docs.liveartdesigner.com/graphics-preparation.html"&gt;documentation&lt;/a&gt; or see our &lt;a href="https://www.youtube.com/watch?v=jnIY3N5_-yg&amp;amp;ab_channel=LiveArtDesigner"&gt;YouTube video&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#free-tools" class="anchor"&gt;
  &lt;/a&gt;
  Free tools
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#inkscape" class="anchor"&gt;
  &lt;/a&gt;
  Inkscape
&lt;/h3&gt;

&lt;p&gt;Inkscape is an open-source tool for creating vector-based graphics. This tool allows rendering primitive shapes, changing colors, applying filters, adding text, working with paths, and object transformation. Developed for working with SVG files, this tool became one of the most popular free tools among designers and developers. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#snapsvg" class="anchor"&gt;
  &lt;/a&gt;
  Snap.svg
&lt;/h3&gt;

&lt;p&gt;Snap.svg is one of the most popular JavaScript libraries that was developed for working with SVG. It is entirely open-source, free, and not inferior in functionality to such libraries as SVG.js, Two.js, and D3.js. This library can work with existing SVG files and as well as with Snap generated. This library has a powerful API that can be useful for developers. Besides static SVG files, you can create animation and provide more engagement to your website.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#method-draw" class="anchor"&gt;
  &lt;/a&gt;
  Method Draw
&lt;/h3&gt;

&lt;p&gt;Method Draw is a straightforward online SVG editor. You do not need to install it on your desktop because this tool is available online, and you even do not need to sign up. The interface is straightforward and easy to use but provides a robust set of tools for graphic creation. You can export graphics as SVG and PNG. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#svgomg" class="anchor"&gt;
  &lt;/a&gt;
  SVGOMG
&lt;/h3&gt;

&lt;p&gt;SVGOMG is a free UI wrapper over SVGO that was created by Jake Archibald for optimizing and simplifying SVG images. This tool has a lot of features like removing metadata, raster images, viewbox, hidden element, empty text, and even prettify your markup. You can preview all changes by simply clicking on the respective buttons. This software is useful for developers and can help with SVG preparation for further work.&lt;/p&gt;

&lt;p&gt;Thanks for reading! Welcome to share your experience working with SVG format. Any ideas where you could use it as a developer?&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>html</category>
      <category>css</category>
      <category>design</category>
    </item>
    <item>
      <title>Follow #adventofcode if you're into that kind of thing</title>
      <author>Ben Halpern</author>
      <pubDate>Fri, 04 Dec 2020 15:50:10 +0000</pubDate>
      <link>https://dev.to/ben/follow-adventofcode-if-you-re-into-that-kind-of-thing-19nf</link>
      <guid>https://dev.to/ben/follow-adventofcode-if-you-re-into-that-kind-of-thing-19nf</guid>
      <description>&lt;p&gt;Advent of code is going on, and I just felt like nudging folks towards that DEV tag if you're interested in following along.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/mileswatson" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iIENA1-n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--iquHW-9U--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/513901/79e991df-e4a8-4466-9482-ca710de87f85.jpeg" alt="mileswatson image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/mileswatson/why-you-should-be-doing-advent-of-code-it-s-not-too-late-to-start-3n83" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Why You Should Be Doing Advent of Code (it's not too late to start)&lt;/h2&gt;
      &lt;h3&gt;Miles Watson „Éª Dec  2 „Éª 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#adventofcode&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#algorithms&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__tag ltag__tag__id__16515"&gt;
  
    .ltag__tag__id__16515 .follow-action-button{
      background-color: #22500A !important;
      color: #FF8B8B !important;
      border-color: #22500A !important;
    }
  
    &lt;div class="ltag__tag__content"&gt;
      &lt;h2&gt;#&lt;a href="/t/adventofcode" class="ltag__tag__link"&gt;adventofcode&lt;/a&gt; 
&lt;/h2&gt;
      &lt;div class="ltag__tag__summary"&gt;
        Posts about the Advent of Code challenges üéÑüéÖüèª
      &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Happy coding ‚ù§Ô∏è&lt;/p&gt;

</description>
      <category>adventofcode</category>
      <category>meta</category>
    </item>
    <item>
      <title>WTF really is full-stack? Breaking down confusion on software roles and job descriptions</title>
      <author>Barry</author>
      <pubDate>Fri, 04 Dec 2020 15:18:31 +0000</pubDate>
      <link>https://dev.to/_bkern/wtf-really-is-full-stack-breaking-down-confusion-on-software-roles-and-job-descriptions-21fa</link>
      <guid>https://dev.to/_bkern/wtf-really-is-full-stack-breaking-down-confusion-on-software-roles-and-job-descriptions-21fa</guid>
      <description>&lt;p&gt;Software job descriptions and roles are filled with a bunch of noise. They span front-end technologies and frameworks, back-end technologies and frameworks, sometimes they mention types or styles of programming, sometimes they mention certain tooling related to something specific,  and they sprinkle in some cloud terminology for fun. Am I qualified? Do I need to know web development to get a job? What is full-stack? It is very confusing. &lt;/p&gt;

&lt;p&gt;While I don't think we will see all this confusion go away, I want to provide you with my view of the world based on my experiences. I think seeing through my perspective can help you better categorize potential roles and what they might be about. Additionally, for those that really do not know what is out there, I hope this helps you choose where you may want to start. &lt;/p&gt;

&lt;p&gt;What makes this complex is these things change based on industry, level, company size, amongst other things. The smaller a company you join the more responsibilities and roles you might have. If you join a very large corporation you might be more focused on a smaller set of responsibilities. Every piece of software is unique but I think that a lot of them share common characteristics and roles you might find. &lt;/p&gt;

&lt;p&gt;At the highest level I break down software development into three buckets:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZnhiEzjI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://bkern.dev/static/1072340d3df3a6c45a5de3bff1e7e53c/8ce52/bucketsprogramming.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZnhiEzjI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://bkern.dev/static/1072340d3df3a6c45a5de3bff1e7e53c/8ce52/bucketsprogramming.png" alt="buckets of programming"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#related-to-development" class="anchor"&gt;
  &lt;/a&gt;
  Related to development
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;Roles that you interact with as an engineer, may not start out as (but could), and you could always transition to&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;project management and BA's&lt;/li&gt;
&lt;li&gt;QA/QE/SDET&lt;/li&gt;
&lt;li&gt;UX/XD&lt;/li&gt;
&lt;li&gt;Designer&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#specializations" class="anchor"&gt;
  &lt;/a&gt;
  Specializations
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;Mostly programming but involves other things depending on specialization. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Security&lt;/li&gt;
&lt;li&gt;Devops&lt;/li&gt;
&lt;li&gt;Mobile&lt;/li&gt;
&lt;li&gt;Systems Programming&lt;/li&gt;
&lt;li&gt;Data Engineering&lt;/li&gt;
&lt;li&gt;Data Science&lt;/li&gt;
&lt;li&gt;Proprietary Software&lt;/li&gt;
&lt;li&gt;Games&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#the-rest-of-the-programming-that-is-not-100-the-other-two" class="anchor"&gt;
  &lt;/a&gt;
  The rest of the programming that is not 100% the other two
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;Full-time programming that doesn't fit any of the specializations. Still tons of fun and awesome&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Front-End&lt;/li&gt;
&lt;li&gt;Back-End&lt;/li&gt;
&lt;li&gt;Full-Stack&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Does this cover everything? No, for sure I missed things. The strangest part is honestly it's hard to box in anyone one person/role. Most likely, you could find yourself doing a little of many of these while focusing primarily on one area. That is totally normal for me. Check out this abstract piece of art:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--45nFJtNy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://bkern.dev/static/082b1a9294d14f1f84b33a534ff1689e/c08c5/jene-stephaniuk--MCrF6hnojU-unsplash.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--45nFJtNy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://bkern.dev/static/082b1a9294d14f1f84b33a534ff1689e/c08c5/jene-stephaniuk--MCrF6hnojU-unsplash.jpg" alt="abstract art"&gt;&lt;/a&gt;&lt;br&gt;
Similar to this but thinking of your role or career as a blank canvas - I doubt your canvas will be solidly one color. Could it? yea. But my opinion is most people do a mix of a lot of things or move around during their career. Your canvas might end up more like this piece of art? There are a million variations and they are all great. No one way is better for your career.   &lt;/p&gt;

&lt;p&gt;I break all these down below to help inform you. The point isn't to divide us or say X is greater than Y. I am creating this so you can better understand what's out there. Selfishly, I wish I had this when I started. I had no idea about the programming world and no one to explain it to me.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#roles-on-a-team-that-are-not-what-i-think-of-as-juniorstarting-engineering-but-you-could-transition-to-if-they-interest-you" class="anchor"&gt;
  &lt;/a&gt;
  Roles on a team that are not what I think of as junior/starting engineering &lt;em&gt;but&lt;/em&gt; you could transition to if they interest you:
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#some-form-of-project-managementbusiness-analysts" class="anchor"&gt;
  &lt;/a&gt;
  Some form of project management/business analysts:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;You will not program here &lt;/li&gt;
&lt;li&gt;You often encounter lots of mention of Agile, Scrum, PMP, etc. All software management related.&lt;/li&gt;
&lt;li&gt;I highlight this because the best people in this role &lt;em&gt;understand&lt;/em&gt; software and I have seen people successfully transition to these roles if they decide that is their passion. &lt;/li&gt;
&lt;li&gt;If you can straddle the technical/business gap you provide a lot of value. You can explain technical concepts and ideas and sell them to the business. You can also take what the business wants and communicate effectively with the engineering team to get these changes planned and implemented.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#quality-assurance-quality-engineering-software-developer-in-test" class="anchor"&gt;
  &lt;/a&gt;
  Quality Assurance / Quality Engineering / Software Developer in Test
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;You definitely will program here however not &lt;em&gt;all&lt;/em&gt; the time&lt;/li&gt;
&lt;li&gt;You will be focused on testing&lt;/li&gt;
&lt;li&gt;This may sound boring but there are a lot of engineering problems in this layer and interesting things to work on&lt;/li&gt;
&lt;li&gt;You must love quality and details etc. &lt;/li&gt;
&lt;li&gt;Communication and attention to detail are very important in this role. &lt;/li&gt;
&lt;li&gt;You must understand software and its components well. &lt;/li&gt;
&lt;li&gt;I have seen some people recommend this as a way to get in the door and transition to full-time software engineering (My thought here is I don't know and wherever you think you are going to start be direct and ask about a move like this)&lt;/li&gt;
&lt;li&gt;I have seen entry-level/junior jobs as a developer in test so I misspoke&lt;/li&gt;
&lt;li&gt;I have also seen software engineers transition to this and be very successful&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#user-experience-interaction-design" class="anchor"&gt;
  &lt;/a&gt;
  User Experience / interaction design
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Not much if any programming here&lt;/li&gt;
&lt;li&gt;Most of what they produce is wireframes or mock-ups that demonstrate flows/interactions&lt;/li&gt;
&lt;li&gt;A lot of focus on the user and how they interact with the software. &lt;/li&gt;
&lt;li&gt;There is specific training for these types of individuals and if you only know engineering it might take some work to retrain for this area.&lt;/li&gt;
&lt;li&gt;These roles are vital to ensure what your building is going to work for the clients/consumers.&lt;/li&gt;
&lt;li&gt;As an engineer /power user of most tooling you forget how people interact with your site and what might be confusing&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#designer" class="anchor"&gt;
  &lt;/a&gt;
  Designer
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Sometimes gets grouped with UX &lt;/li&gt;
&lt;li&gt;Similar? skillset but focused more on the look and feel of the site&lt;/li&gt;
&lt;li&gt;Produces static assets for sites/software in the proper format&lt;/li&gt;
&lt;li&gt;Strong background in graphic design&lt;/li&gt;
&lt;li&gt;Strong CSS skills and can publish style guides or work on styling for the site&lt;/li&gt;
&lt;li&gt;Sometimes programming in front-end technologies but usually programming is not their main task.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#specializations" class="anchor"&gt;
  &lt;/a&gt;
  Specializations
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#security" class="anchor"&gt;
  &lt;/a&gt;
  Security
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Strong programming skills&lt;/li&gt;
&lt;li&gt;Strong computer/software security skills&lt;/li&gt;
&lt;li&gt;Strong knowledge of Linux / DevOps &lt;/li&gt;
&lt;li&gt;This role varies wildly because there are so many things it could mean&lt;/li&gt;
&lt;li&gt;Some roles only do audits, some work specifically administering certain tools, some do penetration testing, others focus solely on say identity and access management. &lt;/li&gt;
&lt;li&gt;this area is extremely large and hard to summarize&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#devops" class="anchor"&gt;
  &lt;/a&gt;
  DevOps
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;This is another umbrella term that can mean a million things&lt;/li&gt;
&lt;li&gt;Some programming is typically involved in the glue code that customizes existing products &lt;/li&gt;
&lt;li&gt;Strong knowledge of Linux helps&lt;/li&gt;
&lt;li&gt;Containers/ VMs/ and friends&lt;/li&gt;
&lt;li&gt;Kubernetes might pop up&lt;/li&gt;
&lt;li&gt;Knowledge of one or more cloud providers (Azure/Aws/GCP top 3)&lt;/li&gt;
&lt;li&gt;You might work more in system programming rather than web programming &lt;/li&gt;
&lt;li&gt;Ultimately idea is using code/templates to automate infrastructure &lt;/li&gt;
&lt;li&gt;Strong troubleshooting skills needed&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#mobile" class="anchor"&gt;
  &lt;/a&gt;
  Mobile
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;I separated this because I see it as a specialty. You can obviously 'share' code in certain frameworks and perhaps write everything in javascript (flutter or react-native or who knows) &lt;/li&gt;
&lt;li&gt;However I always see a need an area for native mobile development&lt;/li&gt;
&lt;li&gt;This is all external  observation but I see some people who only do ios/swift and some who only do android however I also see a lot of people that love mobile and go between the two&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#systems-programming" class="anchor"&gt;
  &lt;/a&gt;
  Systems Programming
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Entire focus on programming related to systems  ugh my definition sucks here is Wikipedia&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;System programming (or systems programming) is the activity of programming system software. The primary distinguishing characteristic of systems programming when compared to application programming is that application programming aims to produce software which provides services to the user (e.g. word processor), whereas systems programming aims to produce software which provides services to the computer hardware (e.g. disk defragmenter). It requires a greater degree of hardware awareness.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;languages (c and its variants, go, rust, I'm sure others)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#data-engineering" class="anchor"&gt;
  &lt;/a&gt;
  Data Engineering
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;This is an umbrella term as well but I see a whole group of programmers that are focused on moving data/ consuming data/ analyzing data that is separate from everything else. &lt;/li&gt;
&lt;li&gt;General DB knowledge is good but typically a lot of different frameworks and tools used based on needs&lt;/li&gt;
&lt;li&gt;Some of this is done  and could be in proprietary software like data visualization software (this is an entire career field)&lt;/li&gt;
&lt;li&gt;Some of this could be all in Hadoop / Spark looking to move data around &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#data-science" class="anchor"&gt;
  &lt;/a&gt;
  Data Science
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Another umbrella term. Tons of hype and buzz wordiness so be careful but there is a lot of opportunities here&lt;/li&gt;
&lt;li&gt;AI/ML  live here &lt;/li&gt;
&lt;li&gt;specialized knowledge necessary &lt;/li&gt;
&lt;li&gt;a lot of training options and from what I see even degree programs&lt;/li&gt;
&lt;li&gt;Definitely programming but focused on this world &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#proprietary-software" class="anchor"&gt;
  &lt;/a&gt;
  Proprietary Software
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;This is an umbrella term to represent tooling and software that one could spend a lifetime administering and doing some type of programming&lt;/li&gt;
&lt;li&gt;Mainly Salesforce comes to mind but I know others exist&lt;/li&gt;
&lt;li&gt;Very specialized in that you need inherent knowledge about the software and how it works to use it/customize it/ extend it&lt;/li&gt;
&lt;li&gt;Lots of certifications available here to help you learn&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#games" class="anchor"&gt;
  &lt;/a&gt;
  Games
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Lots of math&lt;/li&gt;
&lt;li&gt;very specialized&lt;/li&gt;
&lt;li&gt;some roles overlap in this world like UX/designers/project managers/QA &lt;/li&gt;
&lt;li&gt;Unity, Unreal fit in here.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#the-rest-of-the-programming-that-is-not-100-the-other-two" class="anchor"&gt;
  &lt;/a&gt;
  The rest of the programming that is not 100% the other two
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#frontend" class="anchor"&gt;
  &lt;/a&gt;
  Front-End
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;I like to define the Front-End as everything from the API layer upwards&lt;/li&gt;
&lt;li&gt;Most likely Javascript or some flavor of language that ultimately produces JS&lt;/li&gt;
&lt;li&gt;Other technologies exist thought for what it is worth&lt;/li&gt;
&lt;li&gt;The front end technologies and frameworks seem to evolve at a faster pace than the back-end so a lot of constant learning&lt;/li&gt;
&lt;li&gt;Usually I see this role share responsibilities from other areas (design/UX/QA) and it just depends on the role&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#backend" class="anchor"&gt;
  &lt;/a&gt;
  Back-End
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;I like to define this as everything from the API on down&lt;/li&gt;
&lt;li&gt;Tons of language options, frameworks, it really depends on the place you end up and what their 'stack' is&lt;/li&gt;
&lt;li&gt;Usually I see this role share responsibilities from other areas (DevOps/QA/Front-End) again it all &lt;em&gt;depends&lt;/em&gt; &lt;/li&gt;
&lt;li&gt;Produce services / APIs/contracts for consumers &lt;/li&gt;
&lt;li&gt;There is a lot of interesting software that lurks in this area that doesn't provide services to the web but perhaps deals with moving data around or keeping things in synch. &lt;/li&gt;
&lt;li&gt;Interacts with data layers / involved with potentially many persistence/caching technologies&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#fullstack" class="anchor"&gt;
  &lt;/a&gt;
  Full-Stack
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;This term is ambiguous and everyone defines it differently. Its not my favorite term because of this and if you see a use that confuses or if someone asks you if you are full-stack or you see it used in a description my best advice is to ask for clarity. &lt;/li&gt;
&lt;li&gt;I think of it as someone that does work in both the back end and front end&lt;/li&gt;
&lt;li&gt;These could be separate languages/ the same languages/ etc &lt;/li&gt;
&lt;li&gt;You could use a framework that assists in doing it all in one and maybe that to whoever is full-stack &lt;/li&gt;
&lt;li&gt;It's quite hard these days to know everything well - I have no doubts you could for your particular solution but I think that's why there are specializations these days. &lt;/li&gt;
&lt;li&gt;Ultimately, find what you like - if you like doing front end and back end work that's awesome and find roles that let you do both&lt;/li&gt;
&lt;li&gt;Some places will have separate teams for these two and you won't be able to concurrently do both. Some places will let you. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;One last thing. You don't need to pick exactly one &lt;em&gt;'thing'&lt;/em&gt;. In fact, I think saying you will only do &lt;em&gt;'x'&lt;/em&gt; without trying at least some other stuff is hazardous very early in your career. Even if you do pick an 'x' remember you learned 'x' and you can learn z,y,q, etc. You are never stuck and can always work on moving around. It might take some work and you might have to ramp up on other things or change employers to find something different but that is ok! All of these areas are fun, 'good', and could be a career. It's most important you are happy with your work.&lt;/p&gt;

&lt;p&gt;If you liked this article, check out: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/_bkern/my-1-tip-for-developers-starting-out-4381"&gt;My #1 tip for new developers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/_bkern/how-to-be-one-of-the-best-junior-developers-76f"&gt;How to be one of the best junior developers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What do you think? Do you still have any confusion? Let me know on Twitter and &lt;a href="https://twitter.com/_bkern"&gt;follow me there&lt;/a&gt; for more development, programming, and general software engineering content. &lt;/p&gt;

</description>
      <category>beginners</category>
      <category>codenewbie</category>
      <category>webdev</category>
      <category>career</category>
    </item>
    <item>
      <title>Using Docker Containers In Jobs - GitHub Actions</title>
      <author>Mihindu Ranasinghe</author>
      <pubDate>Fri, 04 Dec 2020 15:13:35 +0000</pubDate>
      <link>https://dev.to/mihinduranasinghe/using-docker-containers-in-jobs-github-actions-3eof</link>
      <guid>https://dev.to/mihinduranasinghe/using-docker-containers-in-jobs-github-actions-3eof</guid>
      <description>&lt;p&gt;üëâ Prerequisites &lt;/p&gt;

&lt;p&gt;If you are new to GitHub Actions, I suggest you to read these articles&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/mihinduranasinghe/introduction-to-github-actions-part-1-1d6p"&gt;Introduction to Github Actions - GitHub Actions (Part 1)&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/mihinduranasinghe/working-with-environment-variables-github-actions-part-2-46po"&gt;Working with environment variables - GitHub Actions(Part 2)&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/mihinduranasinghe/working-with-external-actions-github-actions-part-3-3895"&gt;Working with external actions - GitHub Actions (Part 3)&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;As we discussed in previous articles, we can run our workflows in virtual machines by using operating systems that GitHub Actions provides as GitHub Hosted Runners.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-docker-container" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Using Docker Container&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;We can use a docker container which will be installed on the the  virtual machine &amp;amp; then instead of running directly on virtual machine, our workflow will runs on a particular container.&lt;/p&gt;

&lt;p&gt;&lt;i&gt; &lt;strong&gt;This can be an image from Docker Hub.&lt;/strong&gt; &lt;/i&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#docker-hub" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Docker Hub&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Docker Hub is the platform which allows users to create, manage, and deliver their container applications. Docker Hub is the largest library of container images.&lt;/p&gt;

&lt;p&gt;Link: &lt;a href="https://hub.docker.com/"&gt;Docker Hub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--44VZ_TKx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/hnsyfj4zh1y5cg4phukr.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--44VZ_TKx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/hnsyfj4zh1y5cg4phukr.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once you click on an image (For example Node), you can see all the dockerfile links with the respective tags.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kyEkqQ1u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/wiior329v7okszi25woe.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kyEkqQ1u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/wiior329v7okszi25woe.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#how-to-use-" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;How to use ?&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;You have to provide the, &lt;br&gt;
&lt;strong&gt;publisher-dockerhub-username : docker-image-tag&lt;/strong&gt; with the image tag under the "container:" &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We can not use containers on windows and mac-os virtual machines.&lt;/li&gt;
&lt;li&gt;We can use containers only on ubuntu machines.
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
name: workflow-name
on: push

jobs:
  job-name:
    runs-on: ubuntu-latest
    container:
      image: dockerhub-username:docker-image-tag

&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;
&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;container&lt;/span&gt;
&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;push&lt;/span&gt;

&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;node-docker&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class="na"&gt;container&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;node:14.15.0-alpine3.12&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Also you can provide some other parameters like environment variables, ports &amp;amp; options...etc&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;
&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;container&lt;/span&gt;
&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;push&lt;/span&gt;

&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;node-docker&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class="na"&gt;container&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;node:14.15.0-alpine3.12&lt;/span&gt;

     &lt;span class="c1"&gt;#env:&lt;/span&gt;
     &lt;span class="c1"&gt;#  ENV1: Available to this container only&lt;/span&gt;

     &lt;span class="c1"&gt;#ports: To expose our container&lt;/span&gt;

     &lt;span class="c1"&gt;#options: --cpus 1 --host&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;So in next figure you can confirm that steps are running inside the container we initialized with dockerhub image, instead of running directly on the virtual machine.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;
&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;container&lt;/span&gt;
&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;push&lt;/span&gt;

&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;node-docker&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class="na"&gt;container&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;node:14.15.0-alpine3.12&lt;/span&gt;
    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
         &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Log the node version&lt;/span&gt;
           &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;|&lt;/span&gt;
             &lt;span class="s"&gt;node -v&lt;/span&gt;
             &lt;span class="s"&gt;cat /etc/os-release  &lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Here we echo the node version of the image and some operating system information of the docker container.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WSsNQGDG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/tnwy3fccih0i9gwtgeds.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WSsNQGDG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/tnwy3fccih0i9gwtgeds.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#we-can-also-specify-multiple-containers-to-run-as-services" class="anchor"&gt;
  &lt;/a&gt;
  We can also specify multiple containers to run as services.
&lt;/h2&gt;

&lt;p&gt;If you have an application to run multiple services, you might need multiple images to run in our virtual machine. Normally we use &lt;strong&gt;Docker-Compose&lt;/strong&gt; to do something like that, **but in GitHub Actions we have a similar way to run this type of applications.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#running-multiple-docker-containers-in-a-job" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Running multiple docker containers in a job.&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Instead of having container here, we can provide "services: "&lt;br&gt;
We can give the services as docker-images under the "services:" and they run as separate containers in our virtual machine.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;
&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;workflow-name&lt;/span&gt;
&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;push&lt;/span&gt;

&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;job-name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class="na"&gt;services&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;service-name-1&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;dockerhub-username:docker-image-1&lt;/span&gt;
        &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
           &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;3001:3000&lt;/span&gt;

      &lt;span class="na"&gt;service-name-2&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;dockerhub-username:docker-image-2&lt;/span&gt;
        &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
           &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;4001:4000&lt;/span&gt;

    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Get from service-1&lt;/span&gt;
        &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;http://localhost:3001/api/users&lt;/span&gt;

      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Get from service-2&lt;/span&gt;
        &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;http://localhost:4001/api/items&lt;/span&gt;


      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;post a user example&lt;/span&gt;
        &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;curl&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;-x&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;POST&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;http://localhost:3001/api/user&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;-H&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;'Content-Type:&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;application/json'&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;-d&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;'{&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s"&gt;username"\&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;\"hello"\, \"address"\&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;sampleaddress"&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Here it creates two containers for service-1 &amp;amp; service-2 inside our virtual machine&lt;/p&gt;

&lt;p&gt;In order to communicate between those two containers, we can use the service-name as the host name in the app.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#running-docker-containers-in-individual-steps" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Running docker containers in individual steps.&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;In GitHub Actions, we can use different containers in different steps as well. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;We can use "with:" key to provide inputs to this container in the particular step&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We can give an &lt;strong&gt;entrypoint&lt;/strong&gt; in &lt;strong&gt;with:&lt;/strong&gt; key and override the entrypoint of the dockerfile&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;To find some entrypoints of the echo, node ...etc use this commands&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ex 1:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;type -a  echo
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Output - Entrypoint of echo in ubuntu:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;echo is  /bin/echo
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Ex 2 :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;type -a  node
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Output - Entrypoint of node in ubuntu:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;node is  usr/local/bin/echo
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Use this "type -a " command in ubuntu to find some Entrypoints of the installed tools &amp;amp; softwares.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;
&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;container&lt;/span&gt;
&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;push&lt;/span&gt;

&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;node-docker&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class="na"&gt;container&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;node:14.15.0-alpine3.12&lt;/span&gt;
      &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
         &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Log the parent container node version&lt;/span&gt;
           &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;|&lt;/span&gt;
             &lt;span class="s"&gt;node -v &lt;/span&gt;
           &lt;span class="c1"&gt;# Echo the node version of the parent container&lt;/span&gt;


         &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Log the step container node version&lt;/span&gt;
           &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;docker://node:12.14.1-alpine3.10&lt;/span&gt;
           &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
             &lt;span class="na"&gt;entrypoint&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;usr/local/bin/echo&lt;/span&gt;
             &lt;span class="na"&gt;args&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;-v&lt;/span&gt;
            &lt;span class="c1"&gt;# Echo the node version of this step container based on this 12.14.1-alpine3.10 image&lt;/span&gt;


         &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Step with docker to echo a string&lt;/span&gt;
           &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;docker://node:12.14.1-alpine3.10&lt;/span&gt;
           &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
             &lt;span class="na"&gt;entrypoint&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/bin/echo&lt;/span&gt;
             &lt;span class="na"&gt;args&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Hello Docker !&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Push the workflow file into the repository &amp;amp; check the &lt;strong&gt;Actions&lt;/strong&gt; window of the repository&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Outputs:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;v14.15.0
v12.14.1
Hello Docker !

&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;üëâ What's Next?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=""&gt;Trigger workflows manually using the repository dispatch event&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#thank-you" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Thank You&lt;/strong&gt;
&lt;/h2&gt;

&lt;h5&gt;
  &lt;a href="#hope-you-all-enjoyed-and-learned-something-from-this-let-me-know-your-comments-and-suggestions-in-the-discussion-section" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Hope you all enjoyed and learned something from this. Let me know your comments and suggestions in the discussion section.&lt;/em&gt;&lt;/strong&gt;
&lt;/h5&gt;

</description>
      <category>github</category>
      <category>docker</category>
      <category>devops</category>
      <category>beginners</category>
    </item>
    <item>
      <title>How to access your AWS account</title>
      <author>Nicol√≤ Marchesi</author>
      <pubDate>Fri, 04 Dec 2020 14:16:03 +0000</pubDate>
      <link>https://dev.to/pethron/how-to-access-your-aws-account-4ng3</link>
      <guid>https://dev.to/pethron/how-to-access-your-aws-account-4ng3</guid>
      <description>&lt;p&gt;Hey there. You just created your first AWS account, and you can't wait to dive into all the exciting services and technologies that AWS has to offer you to start to build the next big thing. But, wait for a second... are you going to log-in with your root account credentials? Or it's better to generate a new user? Or maybe use a role?&lt;/p&gt;

&lt;p&gt;Slow down a minute, and by the end of the blog post, I promise you will be able to choose the &lt;strong&gt;best way to access your AWS account securely&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Beware, though, we will consider access to a single aws account as we will cover multi-account strategies the next time. We need to walk before we can run, right?&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#accounts-and-resources" class="anchor"&gt;
  &lt;/a&gt;
  Accounts and Resources
&lt;/h1&gt;

&lt;p&gt;Each incredible journey with AWS starts with accounts and resources, and an account is just like an empty box.&lt;/p&gt;

&lt;p&gt;The things you can put inside your account can be anything related to AWS's services, for example, networks, virtual machines, containers, and so on.&lt;/p&gt;

&lt;p&gt;But the most crucial part is that by default, no account shares any resource so that nothing can go in or out between two different AWS account. And this is great to divide your workloads and be sure that only the right people access everything.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#iam-identity-amp-access-management" class="anchor"&gt;
  &lt;/a&gt;
  IAM ‚Äî Identity &amp;amp; Access Management
&lt;/h1&gt;

&lt;p&gt;Within each account, IAM is there to protect the resources inside your account by managing which entities can perform some actions on those resources:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;WHO ‚Äî which identities&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;WHAT ‚Äî can do some actions&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;WHERE ‚Äî on some resources&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HOW ‚Äî and met some conditions&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I define these as the &lt;strong&gt;4W&lt;/strong&gt;, and for now, we will need to focus only on the first 3.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#in-the-beginning-the-root-user" class="anchor"&gt;
  &lt;/a&gt;
  In the beginning ‚Äî the root user
&lt;/h2&gt;

&lt;p&gt;When you logged-in after you created the AWS account, you used that account &lt;strong&gt;root user&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;That is different from the other ones you can create because:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Created on the account registration&lt;/li&gt;
&lt;li&gt;You can sign in using the email address and password that you used to create the account&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;You can access the billing information&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;It has unrestricted access to all resources in your account&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This user is super important, and you should protect it in the best way you can. It's a super-administrator on steroids since it's able to view the billing information along with being able to do everything with all your resources.&lt;/p&gt;

&lt;p&gt;So, the first thing to do should be:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Enable multi-factor authentication (MFA) and save the QR code in a secure place&lt;/li&gt;
&lt;li&gt;Delete all access keys related to this user to disable programmatic access (you wouldn't need this anyway!)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;And the very next thing should be to decide how you will access this account from now on.&lt;/strong&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#from-inside-aws" class="anchor"&gt;
  &lt;/a&gt;
  From inside AWS
&lt;/h1&gt;

&lt;p&gt;Let's focus for now on what AWS gives us without relying on 3rd parties. This is especially useful if we focus on this single account because we need to master the three IAM building blocks: user, groups, and roles.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LNbadMkE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1606989583888/S9TFFdWeS.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LNbadMkE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1606989583888/S9TFFdWeS.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#users" class="anchor"&gt;
  &lt;/a&gt;
  Users
&lt;/h2&gt;

&lt;p&gt;Remember the root user? IAM users are the same type of entity but differently from the root user. They don't have default billing permissions and administrator access (unless you give them... which you shouldn't).&lt;/p&gt;

&lt;p&gt;With a user, we can create an entity that can log-in to the AWS web console or with programmatic access through a set of credentials (an access key and a secret access key) that are fixed and will not change over time. Along with SSH/HTTPS keys for AWS CodeCommit, or Credentials for Amazon Keyspaces (for Apache Cassandra)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Sign-in credentials for the web console&lt;/li&gt;
&lt;li&gt;Access and secret key credentials for programmatic access for APIs, CLI, and SDK&lt;/li&gt;
&lt;li&gt;SSH/HTTPS keys for AWS CodeCommit&lt;/li&gt;
&lt;li&gt;Credentials for Amazon Keyspaces (for Apache Cassandra)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#granular-access" class="anchor"&gt;
  &lt;/a&gt;
  Granular access
&lt;/h3&gt;

&lt;p&gt;It's entirely possible with an IAM user to enable one or more access keys depending on how you want that user to behave. For example:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A data-analyst that needs to check only the analytics on the web console but without needing programmatic access&lt;/li&gt;
&lt;li&gt;A serverless DevOps which need to perform actions on the console and use the CLI to provide some resources will need both of these access&lt;/li&gt;
&lt;li&gt;A developer working on a single repository and doesn't need to interact with AWS resources will have SSH/HTTPS keys for AWS CodeCommit.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Be aware that &lt;strong&gt;sharing&lt;/strong&gt; IAM user credentials &lt;strong&gt;is a big no-no,&lt;/strong&gt; as it's the first step to lose credentials and governance and lay yourself open to security threats.&lt;/p&gt;

&lt;p&gt;You don't want your production account completely erased in favor of a full set of bitcoin miners, do you?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#enforce-security" class="anchor"&gt;
  &lt;/a&gt;
  Enforce security
&lt;/h3&gt;

&lt;p&gt;Another cool feature of AWS IAM users is to be able to enforce password complexity (which is by default pretty high with a length between 8-128 characters, a minimum of 3 special characters, and to not be identical to your AWS account name or email address) and password expiration time to ensure that after a certain time your users will change the password.&lt;/p&gt;

&lt;p&gt;On top of that, you can enable MFA with various devices:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A virtual MFA device with an authenticator app installed on your mobile device or computer&lt;/li&gt;
&lt;li&gt;A U2F security key like a YubiKey or any other compliant U2F device&lt;/li&gt;
&lt;li&gt;Another hardware MFA device like the Gemalto token&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In general, there is a granular approach as you can have specific means for each IAM user.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#when-to-use" class="anchor"&gt;
  &lt;/a&gt;
  When to use
&lt;/h3&gt;

&lt;p&gt;If you have &lt;strong&gt;very few users&lt;/strong&gt; (between 1-5) with precise permissions tied to each one, IAM users can save some time on the initial configuration and console access. &lt;strong&gt;Beware of static credentials&lt;/strong&gt; because they are substantial security issues, so handle with extreme care. Or use the AWS CLI get-session-token to generate temporary credentials out of static ones.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#groups" class="anchor"&gt;
  &lt;/a&gt;
  Groups
&lt;/h2&gt;

&lt;p&gt;Not an entity per se, but IAM Groups are there to bundle IAM users together and give the same set of permissions to a group of users. This smooth a little the rough edges of IAM users, but overall the same things we have seen for IAM users apply.&lt;/p&gt;

&lt;p&gt;A nice thing to keep in mind is that an IAM user can still have personal policies while associated with a group, with the resulting permission equals the merge of the group and personal ones.&lt;/p&gt;

&lt;p&gt;This should be more the exception than the typical workflow. With too many individual permissions, we create many unmaintainable policies and lose the overall overview of the permissions in the account.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#when-to-use" class="anchor"&gt;
  &lt;/a&gt;
  When to use
&lt;/h3&gt;

&lt;p&gt;If you have &lt;strong&gt;few users&lt;/strong&gt; (between 5-15), IAM Groups can save some of the hassles of managing and configuring each IAM user. But the same consideration as IAM users applies, so if possible, avoid them unless you are just working on a single account.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#roles" class="anchor"&gt;
  &lt;/a&gt;
  Roles
&lt;/h2&gt;

&lt;p&gt;And here we are to AWS roles. IAM roles can have permissions (just like users) and log to the console (again like users...). Instead of being uniquely associated with one person, anyone who needs it can &lt;strong&gt;assume&lt;/strong&gt; a role.&lt;/p&gt;

&lt;p&gt;So a person &lt;strong&gt;wears the cap&lt;/strong&gt; of the role which he wants to assume, and&lt;/p&gt;

&lt;p&gt;The IAM role logo just gained a lot more sense, right?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#temporary-credentials" class="anchor"&gt;
  &lt;/a&gt;
  Temporary Credentials
&lt;/h3&gt;

&lt;p&gt;Another key difference from IAM users is that IAM roles don't have static credentials. When someone assumes the roles, a set of &lt;strong&gt;temporary credentials&lt;/strong&gt; is generated and given. It's possible to customize how long those credentials will last and further restrict access if needed.&lt;/p&gt;

&lt;p&gt;Time can be set from 900 seconds (15 minutes) up to 12 hours, but in my opinion, setting one-hour-long expiration is the best tradeoff between security and performance.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cloudtrail-monitoring" class="anchor"&gt;
  &lt;/a&gt;
  CloudTrail monitoring
&lt;/h3&gt;

&lt;p&gt;I'll mention this because some people don't use roles because they think that they can't audit what roles can do. The truth is that you can, and you should. By enabling Cloudtrail monitoring, you can see all actions performed inside your account, so you can always know what's going on.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cross-account" class="anchor"&gt;
  &lt;/a&gt;
  Cross Account
&lt;/h3&gt;

&lt;p&gt;This will be discussed in more detail in another blog post, as we are focusing on single accounts, but for now, be aware that IAM roles can be used to give access to other IAM roles or IAM users.&lt;/p&gt;

&lt;p&gt;And that's incredibly useful.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#entrypoint-required" class="anchor"&gt;
  &lt;/a&gt;
  Entry-point required
&lt;/h3&gt;

&lt;p&gt;And now for the downsides. Unfortunately, you can't give direct access to the console and temporary credentials to an IAM role. First, you need to have set up a user or a federated role (more on this in a few paragraphs) to give access to an IAM role.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#when-to-use" class="anchor"&gt;
  &lt;/a&gt;
  When to use
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Always.&lt;/strong&gt; The sole fact that IAM roles are not tied with static credentials makes them the best way to access your cloud. Combine them with the ability to monitor IAM roles actions and enforce security even with MFA. The only downside is that it a little more configuration, but it's a low price to pay in my opinion.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#from-outside-aws" class="anchor"&gt;
  &lt;/a&gt;
  From outside AWS
&lt;/h1&gt;

&lt;p&gt;And now, let's see what we can do when we go into the field of corporate identities. I'm referring to use an Identity Provider as an Identities source and log-in in with our corporate email and password.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b-NwTrMq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1606989619547/GVvPK4WQe.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b-NwTrMq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1606989619547/GVvPK4WQe.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#federation" class="anchor"&gt;
  &lt;/a&gt;
  Federation
&lt;/h2&gt;

&lt;p&gt;But what do we mean by federation? On one side, we have the identity provider. These systems contain a directory of users and some software that can communicate through specific federation protocols. All the data of our users reside as &lt;strong&gt;Identities&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;On the other side, there is your AWS Account as an &lt;strong&gt;Identity Consumer&lt;/strong&gt;. It maintains a reference to the identities without saving them. On this side, we generally have much more granular authorization levels (thanks, IAM!).&lt;/p&gt;

&lt;p&gt;So the &lt;strong&gt;federation&lt;/strong&gt; is the relationship of trust that makes the Identity Consumer able to reference the Identities in the Identity Provider.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#saml-federation" class="anchor"&gt;
  &lt;/a&gt;
  SAML Federation
&lt;/h2&gt;

&lt;p&gt;The most common definition for Security Assertion Markup Language (SAML) is an open standard for exchanging authentication and authorization data between parties. This means that we can use our Identities to log in to AWS and even get temporary credentials by assuming roles. It's a generalistic approach you can apply to nearly all Identity Providers.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-trust-relationship" class="anchor"&gt;
  &lt;/a&gt;
  The trust relationship
&lt;/h3&gt;

&lt;p&gt;To set up the federation between the two parties, we need to create and manage an &lt;strong&gt;IAM Identity Provider&lt;/strong&gt;. This is necessary because it represents the real Identity Provider and holds the shared secret that lets the two parties communicate. Moreover, inside each role that we want our users to assume, we will define a &lt;strong&gt;trust policy&lt;/strong&gt; to allows entities related to the IAM Identity Provider to assume the role:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oexNMd9U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1606989662460/6A_UlKzRB.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oexNMd9U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1606989662460/6A_UlKzRB.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#custom-management" class="anchor"&gt;
  &lt;/a&gt;
  Custom management
&lt;/h3&gt;

&lt;p&gt;The thing is that managing the federation by yourself can be challenging and time-consuming at first. There are some concepts to understand well, and you need to create a bunch of entities, relations, and custom things to make this happen. To get an idea, you can find a complete tutorial example &lt;a href="https://blog.pethron.me/how-to-saml-federate-your-aws-account-with-g-suite"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#when-to-use" class="anchor"&gt;
  &lt;/a&gt;
  When to use
&lt;/h3&gt;

&lt;p&gt;In general, this is an excellent and battle-tested approach that will work in nearly all cases. Still, the custom management of identities can be difficult and time consuming for inexperienced people.&lt;/p&gt;

&lt;p&gt;Typical use-cases are if you want to manage this yourself for security or compliance purposes. You don't have access to your AWS Organization, or AWS SSO does not yet support your Identity Provider.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#aws-sso" class="anchor"&gt;
  &lt;/a&gt;
  AWS SSO
&lt;/h2&gt;

&lt;p&gt;This is the cloud-based and managed SSO service that lets you connect your Identity Provider with your AWS account.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#aws-organization" class="anchor"&gt;
  &lt;/a&gt;
  AWS Organization
&lt;/h3&gt;

&lt;p&gt;To set up AWS SSO, you will need to configure AWS Organizations, and for now, you can think of it to manage multiple AWS accounts. To keep things brief, you need to know that setting up an AWS Organization needs extensive permissions (namely the root user).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#internal-identity-storage" class="anchor"&gt;
  &lt;/a&gt;
  Internal Identity Storage
&lt;/h3&gt;

&lt;p&gt;By default, AWS SSO provides a directory to store your user information and credentials to serve as Identity Provider directly. It's great if you don't already have an Identity Provider or don't want to go to the trouble of setup one.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#external-identity-storage" class="anchor"&gt;
  &lt;/a&gt;
  External Identity Storage
&lt;/h3&gt;

&lt;p&gt;But suppose your organization already uses some User directory, like Microsoft Active Directory. In that case, you can connect it to AWS SSO, eliminating the need to maintain two distinct directories with &lt;strong&gt;automatic provisioning&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Beware, though, that this feature is supported only on a limited set of Identity Providers:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.aws.amazon.com/singlesignon/latest/userguide/azure-ad-idp.html"&gt;Azure AD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.aws.amazon.com/singlesignon/latest/userguide/okta-idp.html"&gt;Okta&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.aws.amazon.com/singlesignon/latest/userguide/onelogin-idp.html"&gt;OneLogin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.aws.amazon.com/singlesignon/latest/userguide/pingidentity.html"&gt;Ping Identity&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#multifactor-authentication" class="anchor"&gt;
  &lt;/a&gt;
  Multi-factor authentication
&lt;/h3&gt;

&lt;p&gt;With AWS SSO, you can configure an MFA device for your users inside the service. Right now, it supports Authenticator apps like Google Authenticator and security keys like the Yubikey. The internal solution is exciting, but it lacks MFA support if set up on an external Identity Provider side.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#when-to-use" class="anchor"&gt;
  &lt;/a&gt;
  When to use
&lt;/h3&gt;

&lt;p&gt;It's the standard suggested by AWS, and it can be the default way to go if unsure how to proceed. Still, there are at least a couple of requirements that you need to tick make the most out of this solution:&lt;/p&gt;

&lt;p&gt;you've already set up your AWS Organization, &lt;strong&gt;and&lt;/strong&gt; you have access to the root account. You want to keep your Identities within AWS SSO or use an identity provider supported by automatic provisioning.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#final-notes" class="anchor"&gt;
  &lt;/a&gt;
  Final Notes
&lt;/h1&gt;

&lt;p&gt;So, we have laid out the foundations to access a single AWS account, and now you should have the elements to choose the best method for your specific use-case. We will use this to cover the ground to multi-account management and AWS Organizations in the next blog post.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#leapp" class="anchor"&gt;
  &lt;/a&gt;
  Leapp
&lt;/h2&gt;

&lt;p&gt;I advise developers to use some tool that helps them store all the data needed to connect to their AWS account. My team and I are developing an open-source tool that supports all these use-cases, so feel free to check out:&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vJ70wriM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Noovolari"&gt;
        Noovolari
      &lt;/a&gt; / &lt;a href="https://github.com/Noovolari/leapp"&gt;
        leapp
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Leapp is the tool to access your cloud;  It securely stores your access information and generates temporary credential sets to access your cloud ecosystem from your local machine.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Leapp&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/Noovolari/leapp/releases/latest"&gt;&lt;img src="https://camo.githubusercontent.com/e762f8e1ffabfc84fb01c98ab628b76b84652f18316ad394bddbe945f5ed81cf/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f646f776e6c6f6164732f6e6f6f766f6c6172692f6c656170702f6c61746573742f746f74616c" alt="Github All Releases"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Website: &lt;a href="https://www.leapp.cloud/" rel="nofollow"&gt;https://www.leapp.cloud/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Roadmap: &lt;a href="https://github.com/Noovolari/leapp/projects/1"&gt;Roadmap&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Tutorials: &lt;a href="https://raw.githubusercontent.com/Noovolari/leapp/master/#tutorials"&gt;Tutorials&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Chat with us: &lt;a href="https://discord.gg/wHh2kyK" rel="nofollow"&gt;Discord&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/Noovolari/leapp/master/.github/images/README-1.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iv7fw7dU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Noovolari/leapp/master/.github/images/README-1.png" alt="logo"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Leapp is your everyday companion to access your cloud; designed to work with Cloud Providers APIs, CLIs, and SDKs
It's a software that securely stores your access information and generates temporary credential sets to access your cloud ecosystem from your local machine.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;For example, while using the AWS CLI it may become annoying to switch to a different profile or use the --profile argument before issuing every command.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Leapp lets you have a new set of credentials and give access to that account with a click.&lt;/p&gt;
&lt;p&gt;Leapp also will manage Federated access through Identity Provides.&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/Noovolari/leapp/master/.github/images/Leapp-Keynote-pitch.001.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ebB6sevg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Noovolari/leapp/master/.github/images/Leapp-Keynote-pitch.001.png" alt="Leapp App"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
Key features&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Switch account with a click&lt;/strong&gt;: collect all your cloud accounts access data in a single place and connect straight away. Leverage cloud RBAC to impersonate your roles in a click, and don‚Äôt waste time manually manage or edit your credentials file.&lt;/li&gt;
&lt;li&gt;‚Ä¶&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/Noovolari/leapp"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


</description>
      <category>aws</category>
      <category>security</category>
    </item>
    <item>
      <title>Docker Compose: The Perfect Development Environment</title>
      <author>Ido Shamun</author>
      <pubDate>Fri, 04 Dec 2020 13:55:48 +0000</pubDate>
      <link>https://dev.to/dailydotdev/docker-compose-the-perfect-development-environment-o55</link>
      <guid>https://dev.to/dailydotdev/docker-compose-the-perfect-development-environment-o55</guid>
      <description>&lt;h1&gt;
  &lt;a href="#local-environments-are-complex" class="anchor"&gt;
  &lt;/a&gt;
  Local environments are complex
&lt;/h1&gt;

&lt;p&gt;Working on a full-scale project and keeping our local development environment up-to-date is definitely not a simple task! Today, microservices are all around, we write less code, but the environment gets more complex. Every service needs to connect to at least one database (if not more). It might also need other services to work properly. One might say that the staging environment is the solution to all our problems, but I beg to differ. Because every developer might need a different version of a given service to complete their work, or need to populate different values in the database.&lt;/p&gt;

&lt;p&gt;How can we keep track of these dependencies? How can we collaborate with our teammates on the correct settings? or share our work to set up the environment so others won't have to?&lt;/p&gt;

&lt;p&gt;Docker Compose to the rescue! ü¶∏‚Äç‚ôÇÔ∏è&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#whats-docker-compose-anyway" class="anchor"&gt;
  &lt;/a&gt;
  What's Docker Compose anyway?
&lt;/h1&gt;

&lt;p&gt;Before jumping to Compose, we have to understand the containers revolution. Container is a standardized artifact for software packaging. The same container can be used for development, testing, and production. It doesn't matter what language or framework you use, containers can package everything. It's a technology that has been around for a long-time but Docker made it super easy for developers to build and use them.&lt;/p&gt;

&lt;p&gt;So Docker is a unified way to ship and run every service without having to install its runtime, OS dependencies, and libraries. And Compose is the glue that ties many containers together with a proper configuration, and infrastructure. It's a tool for defining and running multi-container Docker applications.&lt;/p&gt;

&lt;p&gt;Compose comes down to a single YAML file that we can add to our repository so others or even our future-self will easily get a local environment up and running as simple as running &lt;code&gt;docker-compose up -d&lt;/code&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#installing-docker-compose" class="anchor"&gt;
  &lt;/a&gt;
  Installing Docker Compose
&lt;/h1&gt;

&lt;p&gt;Mac users, if you have Docker Desktop For Mac installed, it comes bundled with Compose.&lt;br&gt;
Otherwise, install Docker Compose by following the &lt;a href="https://docs.docker.com/compose/install/"&gt;official guide&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#simple-usecase" class="anchor"&gt;
  &lt;/a&gt;
  Simple use-case
&lt;/h1&gt;

&lt;p&gt;Let's get down to the nitty-gritty! As an example, we have a NodeJS service that needs a PostgreSQL instance to store data. That's it, only one dependency.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;3.1"&lt;/span&gt;

&lt;span class="na"&gt;volumes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;db_vol&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;

&lt;span class="na"&gt;services&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;db&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;postgres:11.6-alpine&lt;/span&gt;
    &lt;span class="na"&gt;environment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;POSTGRES_DB=app&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;POSTGRES_PASSWORD=12345&lt;/span&gt;
    &lt;span class="na"&gt;volumes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;db_vol:/var/lib/postgresql/data&lt;/span&gt;
    &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;5432:5432"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;This is how our Compose YAML file should look like. The convention is to save it in the root folder of our project under the name &lt;code&gt;docker-compose.yml&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;We first start by defining the schema version of this Docker Compose YAML schema. This way, Compose can keep backward compatibility with legacy schemas.&lt;/p&gt;

&lt;p&gt;Going directly to the services node (we'll come back to volumes later), we first have to name our dependency. In our case, we'll name it &lt;code&gt;db&lt;/code&gt;. It doesn't have any major impact, mostly for logging, networking, and reference purposes.&lt;/p&gt;

&lt;p&gt;Now, we need to choose an image for our service. Luckily the Docker community is so awesome that you can find any image you need. We'll proceed with the &lt;a href="https://hub.docker.com/_/postgres"&gt;official Postgres image&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Followed by setting environment variables for configuring our database. For a full list of variables, see the link above. In the example, we set the database name and default user password. Feel free to change it to whatever you would like, maybe a more secured password.&lt;/p&gt;

&lt;p&gt;Next, we would like to store the data of our database permanently. If not defined explicitly, the data will be cleaned whenever we shut the container down. The PostgreSQL data is stored in &lt;code&gt;/var/lib/postgresql/data&lt;/code&gt; in the container file-system. Using the &lt;code&gt;volumes&lt;/code&gt; property, we can bind this directory to a persistent volume that we defined before, &lt;code&gt;db_vol&lt;/code&gt;. Going back to the volumes node that we skipped, we define an empty object &lt;code&gt;db_vol&lt;/code&gt;. This tells Docker Compose that whatever we bind to &lt;code&gt;db_vol&lt;/code&gt; should be persisted between runs. In our case, it's Postgres data folder.&lt;/p&gt;

&lt;p&gt;Lastly, we need to expose ports so our NodeJS application can connect to the database. By default, Docker Compose creates a dedicated network adapter for service communication. Only ports that we ask to expose will be available to other networks. Here, we request to bind port 5432 (Postgres default port) in the dedicated network to port 5432 in localhost.&lt;/p&gt;

&lt;p&gt;Once the file is ready and Docker Compose is installed, we can run &lt;code&gt;docker-compose up&lt;/code&gt; in the root folder of our project. This will provision a Docker container for every service listed in the YAML file and create a dedicated network. We can add an argument to run it in the background &lt;code&gt;docker-compose up -d&lt;/code&gt;. If we're done, simply running &lt;code&gt;docker-compose down&lt;/code&gt; will shut down all the services.&lt;/p&gt;

&lt;p&gt;Now we have a PostgreSQL instance available for our local development with all the relevant configurations inside.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#advanced-usecase" class="anchor"&gt;
  &lt;/a&gt;
  Advanced use-case
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;3.1"&lt;/span&gt;

&lt;span class="na"&gt;volumes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;db_vol&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;

&lt;span class="na"&gt;services&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;db&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;postgres:11.6-alpine&lt;/span&gt;
    &lt;span class="na"&gt;environment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;POSTGRES_DB=app&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;POSTGRES_PASSWORD=12345&lt;/span&gt;
    &lt;span class="na"&gt;volumes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;db_vol:/var/lib/postgresql/data&lt;/span&gt;
    &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;5432:5432"&lt;/span&gt;
  &lt;span class="na"&gt;api&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;gcr.io/daily-ops/daily-api&lt;/span&gt;
    &lt;span class="na"&gt;depends_on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;db&lt;/span&gt;
    &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;3000:3000"&lt;/span&gt;
    &lt;span class="na"&gt;environment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;DATABASE_HOST=db&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;PORT=3000&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;In real-life we might need more than just a database. For example, when building the front-end of our project, we need both a database and an API server. In this example, we instantiate two services. A database like before, and our API server that depends on the database. Like we did for the database, we name our service and define the image, ports, and environment variables. Not only that, but we want to let Compose know that our API depends on the db service. Compose can then prioritize the start-up order of every service. &lt;/p&gt;

&lt;p&gt;Remember the dedicated network that we talked about before? The cool thing is that every service can be referred with its name inside the network. See that we set the database host in the environment variables to be &lt;code&gt;db&lt;/code&gt;, which is the exact name of our database service. We don't need to mess with IP or a complex discovery system. It's as simple as the service name.&lt;/p&gt;

&lt;p&gt;That's it, now can run &lt;code&gt;docker-compose up&lt;/code&gt; to make sure we have all the services for our front-end development. We don't have to know anything about how to set-up exactly Postgres or the API server. This can be a very complex process, and it's all encapsulated by Docker Compose.&lt;/p&gt;

&lt;p&gt;And we're done! Now you can easily share your development environment with your teammates or open-source contributors with Docker Compose. ü§ò&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#useful-links" class="anchor"&gt;
  &lt;/a&gt;
  Useful links
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.docker.com/compose/install/"&gt;Installation guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.docker.com/compose/compose-file/"&gt;Compose file reference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hub.docker.com/"&gt;Docker Hub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;em&gt;&lt;a href="https://api.daily.dev/get?r=devto"&gt;daily.dev&lt;/a&gt; delivers the best programming news every new tab. We will rank hundreds of qualified sources for you so that you can hack the future.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://api.daily.dev/get?r=devto"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GnRWXIbg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/b996k4sm4efhietrzups.png" alt="Daily Poster"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>docker</category>
      <category>devops</category>
    </item>
    <item>
      <title>Puppeteer vs Selenium vs Playwright, a speed comparison</title>
      <author>Tim Nolet üë®üèª‚ÄçüöÄ</author>
      <pubDate>Fri, 04 Dec 2020 11:37:00 +0000</pubDate>
      <link>https://dev.to/checkly/puppeteer-vs-selenium-vs-playwright-a-speed-comparison-569p</link>
      <guid>https://dev.to/checkly/puppeteer-vs-selenium-vs-playwright-a-speed-comparison-569p</guid>
      <description>&lt;p&gt;When we decided to build Checkly's &lt;a href="https://www.checklyhq.com/product/synthetic-monitoring/"&gt;browser checks&lt;/a&gt;, we chose to do so with Puppeteer, an open-source headless browser automation tool, later adding Playwright, too. We wanted to support users with synthetic monitoring and testing to let them know whether their websites worked as expected at any given moment. Speed was a primary concern in our case.&lt;/p&gt;

&lt;p&gt;Yet, determining which automation tool is generally faster is far from simple. Therefore we decided to run our own benchmarks to see how newcomers &lt;a href="https://pptr.dev/"&gt;Puppeteer&lt;/a&gt; and &lt;a href="https://playwright.dev/"&gt;Playwright&lt;/a&gt; measured against the veteran &lt;a href="https://webdriver.io/"&gt;WebDriverIO&lt;/a&gt; (using Selenium and the DevTools &lt;a href="https://webdriver.io/docs/automationProtocols.html"&gt;automation protocols&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Among the results of our benchmark were also some &lt;strong&gt;unexpected findings&lt;/strong&gt;, like Puppeteer being significantly faster on shorter scripts and WebDriverIO showing larger than expected variability in the longer scenarios. Read below to know more about the results and how we obtained them.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Table of content&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="#why-compare-these-automation-tools"&gt;Why compare these automation tools?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#methodology-or-how-we-ran-the-benchmark"&gt;Methodology, or how we ran the benchmark&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;a. &lt;a href="#general-guidelines"&gt;General guidelines&lt;/a&gt;&lt;br&gt;
b. &lt;a href="#technical-setup"&gt;Technical setup&lt;/a&gt;&lt;br&gt;
c. &lt;a href="#measurements"&gt;Measurements&lt;/a&gt;&lt;br&gt;
d. &lt;a href="#what-we-did-not-measure-yet-"&gt;What we did not measure (yet)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#the-results"&gt;The results&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;a. &lt;a href="#running-against-a-demo-website"&gt;Running against a demo website&lt;/a&gt;&lt;br&gt;
b. &lt;a href="#running-against-a-real-world-web-application"&gt;Running against a real-world web application&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#conclusion"&gt;Conclusion&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;a. &lt;a href="#takeaways"&gt;Takeaways&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#why-compare-these-automation-tools" class="anchor"&gt;
  &lt;/a&gt;
  Why compare these automation tools?
&lt;/h2&gt;

&lt;p&gt;A benchmark including Puppeteer/Playwright and Selenium is pretty much an apples-and-oranges comparison: these tools have significantly different scopes, and anyone evaluating them should be aware of their differences before speed is considered.&lt;/p&gt;

&lt;p&gt;Still, most of us having worked with Selenium for many years, we were keen to understand if these newer tools were indeed any faster.&lt;/p&gt;

&lt;p&gt;It is also important to note that WebDriverIO is a higher-level framework with plenty of useful features, which can drive automation on multiple browsers using different tools under the hood.&lt;/p&gt;

&lt;p&gt;Still, our previous experience showed us that most Selenium users who chose JavaScript used WebDriverIO to drive their automated scripts, and therefore we chose it over other candidates. We were also quite interested in testing out the new &lt;a href="https://webdriver.io/blog/2019/09/16/devtools.html"&gt;DevTools mode&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Another important goal for us was to see how Playwright, for which we recently &lt;a href="https://blog.checklyhq.com/we-now-support-playwright/"&gt;added support&lt;/a&gt; on Checkly, compared to our beloved Puppeteer.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#methodology-or-how-we-ran-the-benchmark" class="anchor"&gt;
  &lt;/a&gt;
  Methodology, or how we ran the benchmark
&lt;/h2&gt;

&lt;p&gt;Feel free to skip this section in case you want to get straight to the results. We still recommend you take the time to go through it, so that you can better understand exactly what the results mean.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#general-guidelines" class="anchor"&gt;
  &lt;/a&gt;
  General guidelines
&lt;/h3&gt;

&lt;p&gt;A benchmark is useless if the tools being tested are tested under significantly different conditions. To avoid this, we put together and followed these guidelines:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Resource parity&lt;/strong&gt;: Every test was run sequentially on the same machine while it is "at rest", i.e. no heavy workloads were taking place in the background during the benchmark, potentially interfering with the measurements.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Simple execution&lt;/strong&gt;: Scripts were run as shown in the "Getting started" documentation of each tool, e.g. for Playwright: node script.js and with minimal added configuration.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Comparable scripts&lt;/strong&gt;: We strived to minimise differences in the scripts that were used for the benchmark. Still, some instructions had to be added/removed/tweaked to achieve stable execution.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Latest everything&lt;/strong&gt;: We tested all the tools in their latest available version at the time of the publishing of this article.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Same browser&lt;/strong&gt;: All the scripts ran against headless Chromium.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;See the below section for additional details on all points.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#technical-setup" class="anchor"&gt;
  &lt;/a&gt;
  Technical setup
&lt;/h3&gt;

&lt;p&gt;For each benchmark, we gathered data from &lt;strong&gt;1000 successful sequential executions&lt;/strong&gt; of the same script.&lt;/p&gt;

&lt;p&gt;In the case of Selenium benchmarks, our scripts ran against a standalone server, i.e. we did not start a new server from scratch for each run (even though we always used clean sessions), as some frameworks do. We made this choice to limit overhead on execution time.&lt;/p&gt;

&lt;p&gt;We ran all tests on the latest-generation MacBook Pro 16" running macOS Catalina 10.15.7 (19H2) with the following specs:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Model Identifier: MacBookPro16,1&lt;br&gt;
Processor Name: 6-Core Intel Core i7&lt;br&gt;
Processor Speed: 2,6 GHz&lt;br&gt;
Number of Processors: 1&lt;br&gt;
Total Number of Cores: 6&lt;br&gt;
L2 Cache (per Core): 256 KB&lt;br&gt;
L3 Cache: 12 MB&lt;br&gt;
Hyper-Threading Technology: Enabled&lt;br&gt;
Memory: 16 GB&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We used the following dependencies:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="mailto:bench-wdio@1.0.0"&gt;bench-wdio@1.0.0&lt;/a&gt; /Users/ragog/repositories/benchmarks/scripts/wdio-selenium&lt;br&gt;
‚îú‚îÄ‚îÄ @wdio/&lt;a href="mailto:cli@6.9.1"&gt;cli@6.9.1&lt;/a&gt;&lt;br&gt;
‚îú‚îÄ‚îÄ @wdio/&lt;a href="mailto:local-runner@6.9.1"&gt;local-runner@6.9.1&lt;/a&gt;&lt;br&gt;
‚îú‚îÄ‚îÄ @wdio/&lt;a href="mailto:mocha-framework@6.8.0"&gt;mocha-framework@6.8.0&lt;/a&gt;&lt;br&gt;
‚îú‚îÄ‚îÄ @wdio/&lt;a href="mailto:spec-reporter@6.8.1"&gt;spec-reporter@6.8.1&lt;/a&gt;&lt;br&gt;
‚îú‚îÄ‚îÄ @wdio/&lt;a href="mailto:sync@6.10.0"&gt;sync@6.10.0&lt;/a&gt;&lt;br&gt;
‚îú‚îÄ‚îÄ &lt;a href="mailto:chromedriver@87.0.0"&gt;chromedriver@87.0.0&lt;/a&gt;&lt;br&gt;
‚îî‚îÄ‚îÄ &lt;a href="mailto:selenium-standalone@6.22.1"&gt;selenium-standalone@6.22.1&lt;/a&gt;&lt;br&gt;
&lt;a href="mailto:scripts@1.0.0"&gt;scripts@1.0.0&lt;/a&gt; /Users/ragog/repositories/benchmarks/scripts&lt;br&gt;
‚îú‚îÄ‚îÄ &lt;a href="mailto:playwright@1.6.2"&gt;playwright@1.6.2&lt;/a&gt;&lt;br&gt;
‚îî‚îÄ‚îÄ &lt;a href="mailto:puppeteer@5.5.0"&gt;puppeteer@5.5.0&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You can find the scripts we used, together with the individual results they produced, in the dedicated &lt;a href="https://github.com/checkly/headless-benchmarks"&gt;GitHub repository&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#measurements" class="anchor"&gt;
  &lt;/a&gt;
  Measurements
&lt;/h3&gt;

&lt;p&gt;Our results will show the following values, all calculated across 1000 runs:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Mean execution time (in seconds)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Standard deviation (in seconds)&lt;/strong&gt;: A measure of the variability in execution time.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Coefficient of variation (CV)&lt;/strong&gt;: A unitless coefficient showing the variability of results in relation to the mean.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;P95 (95th-percentile measurement)&lt;/strong&gt;: The highest value left when the top 5% of a numerically sorted set of collected data is discarded. Interesting to understand what a non-extreme but still high data point could look like.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#what-we-did-not-measure-yet" class="anchor"&gt;
  &lt;/a&gt;
  What we did not measure (yet):
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Reliability&lt;/strong&gt;: Unreliable scripts quickly get useless, no matter how fast they execute.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Parallelisation efficiency&lt;/strong&gt;: Parallel execution is very important in the context of automation tools. In this case, though, we first wanted to understand the speed at which a single script could be executed.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Speed in non-local environments&lt;/strong&gt;: Like parallelisation, cloud execution is also an important topic which remains outside of the scope of this first article.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Resource usage&lt;/strong&gt;: The amount of memory and computing power needed can determine where and how you are able to run your scripts.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Stay tuned, as we might explore these topics in upcoming benchmarks.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-results" class="anchor"&gt;
  &lt;/a&gt;
  The results
&lt;/h2&gt;

&lt;p&gt;Below you can see the aggregate results for our benchmark. You can find the full data sets in our &lt;a href="https://github.com/checkly/headless-benchmarks"&gt;GitHub repository&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#running-against-a-demo-website" class="anchor"&gt;
  &lt;/a&gt;
  Running against a demo website
&lt;/h3&gt;

&lt;p&gt;Our first benchmark ran against our &lt;a href="https://danube-webshop.herokuapp.com/"&gt;demo website&lt;/a&gt;. Hosted on Heroku, this web page is built using Vue.js and has a tiny Express backend. In most cases, no data is actually fetched from the backend, and the frontend is instead leveraging &lt;a href="https://javascript.info/localstorage"&gt;client-side data storage&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In this first scenario, performing a &lt;a href="https://theheadless.dev/posts/e2e-login"&gt;quick login procedure&lt;/a&gt;, we expected an execution time of just a few seconds, great for highlighting potential differences in startup speed between the actual tools.&lt;/p&gt;

&lt;p&gt;The aggregate results are as follows:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jy-1MVp8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/8eys6pz3dv6zy9szeep1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jy-1MVp8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/8eys6pz3dv6zy9szeep1.png" alt="chart results aggregate for demo website"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The first thing that catches one's attention is the large difference between the average execution time for Playwright and Puppeteer, with the latter being almost 30% faster and showing less variation in its performance. This left us wondering whether this was due to a higher startup time on Playwright's side. We parked this and similar question to avoid scope creep for this first benchmark.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1BYmng_g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/g0jfpu1e144ftffyr828.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1BYmng_g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/g0jfpu1e144ftffyr828.png" alt="playwright vs puppeteer execution time comparison&amp;lt;br&amp;gt;
"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The second surprise was the lower overall variability shown in the WebDriverIO runs. Also interesting is just how close the results are: the chart shows the lines crossing each other continuously, as the automation protocol does not seem to make a sizeable difference in execution time in this scenario.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Uf_5dEQ8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/eulyv4vlshyacjrk4p3k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Uf_5dEQ8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/eulyv4vlshyacjrk4p3k.png" alt="WebDriverIO with WebDriver vs WebDriverIO with DevTools execution time comparison"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Less surprising is perhaps that running Puppeteer without any added higher-level framework helps us shave off a significant amount of execution time on this very short script.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s6kC-L1Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/jou7erhrdsmztdocw8n7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s6kC-L1Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/jou7erhrdsmztdocw8n7.png" alt="Puppeteer vs WebDriverIO with DevTools execution time comparison"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#running-against-a-realworld-web-application" class="anchor"&gt;
  &lt;/a&gt;
  Running against a real-world web application
&lt;/h3&gt;

&lt;p&gt;Previous experience has taught us that the difference between a demo environment and the real world gets almost always underestimated. We were therefore very keen to have the benchmarks run against a production application. In this case we chose our own, which runs a Vue.js frontend and a backend which heavily leverages AWS.&lt;/p&gt;

&lt;p&gt;The script we ran looks a lot like a classic E2E test: it logged into Checkly, configured an API check, saved it and deleted it immediately. We were looking forward to this scenario, but each of us had different expectations on what the numbers would look like.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fIlS-1e3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/swo9qchasg5ijjk5z7yr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fIlS-1e3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/swo9qchasg5ijjk5z7yr.png" alt="aggregate benchmark results for our Checkly check creation scenario"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this case the difference in execution time between Playwright and Puppeteer has all but vanished, with the former now coming up on top and displaying a slightly lower variability.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a3YEU70g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/fdvo21vby9gd9sxf1v91.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a3YEU70g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/fdvo21vby9gd9sxf1v91.png" alt="Playwright vs Puppeteer execution timing"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Proportionally, the difference between the newer tools and both flavours of WebDriverIO is also lower. It is worth noting that the latter two are now producing more variable results compared to the previous scenario, while Puppeteer and Playwright are now displaying smaller variations.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h3hTKjgs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/vc4kmevwib9n5jzxvhv5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h3hTKjgs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/vc4kmevwib9n5jzxvhv5.png" alt="Playwright vs WebDriverIO with Selenium execution timing"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Interestingly enough, our original test for this scenario included injecting cookies into a brand new session to be able to skip the login procedure entirely. This approach was later abandoned as we encountered issues on the Selenium side, with the session becoming unresponsive after a certain number of cookies had been loaded. WebDriverIO handled this reliably, but the cookie injection step exploded the variability in execution time, sometimes seemingly hanging for longer than five seconds.&lt;/p&gt;

&lt;p&gt;We can now step back and compare the execution times across scenarios:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oKf0fD7g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/z9trlgiyds7tr5fa7pwc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oKf0fD7g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/z9trlgiyds7tr5fa7pwc.png" alt="Mean execution timings across benchmark scenarios comparison"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Have doubts about the results? Run your own benchmark! You can use our benchmarking scripts shared above. Unconvinced about the setup? Feel free to submit a PR to help make this a better comparison.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion" class="anchor"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;First off, let us rank the tools from fastest to slowest for both testing scenarios:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eWkRR_qu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/3pkkeyv8czalr0ppqq3k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eWkRR_qu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/3pkkeyv8czalr0ppqq3k.png" alt="Tool performance ranking"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This first benchmark brought up some interesting findings:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Even though Puppeteer and Playwright sport similar APIs, &lt;strong&gt;Puppeteer seems to have a sizeable speed advantage on shorter scripts&lt;/strong&gt; (close to 30% in our observations).&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Puppeteer and Playwright&lt;/strong&gt; scripts show &lt;strong&gt;faster execution time&lt;/strong&gt; (close to 20% in E2E scenarios) ** compared to the Selenium and DevTools WebDriverIO flavours**.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;With WebDriverIO, WebDriver and DevTools&lt;/strong&gt; automation protocols &lt;strong&gt;showed comparable execution times&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#takeaways" class="anchor"&gt;
  &lt;/a&gt;
  Takeaways
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;When running lots of quicker scripts, if there is no need to run cross-browser, it might be worth to run Puppeteer to save time. On longer E2E scenarios, the difference seems to vanish.&lt;/li&gt;
&lt;li&gt;It pays off to consider whether one can run a more barebones setup, or if the convenience of WebDriverIO's added tooling is worth waiting longer to see your results.&lt;/li&gt;
&lt;li&gt;Fluctuations in execution time might not be a big deal in a benchmark, but in the real world they could pile up and slow down a build. Keep this in mind when choosing an automation tool.&lt;/li&gt;
&lt;li&gt;Looking at the progress on both sides, we wonder if the future will bring DevTools to the forefront, or if WebDriver will keep enjoying its central role in browser automation. We suggest keeping an eye on both technologies.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Speed is important, but it can't tell the whole story. Stay tuned, as we surface new and practical comparisons that tell us more about the tools we love using.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;banner image:&lt;/em&gt; "Evening View of Takanawa". Utagawa Hiroshige, &lt;em&gt;1835, Japan&lt;/em&gt;. &lt;a href="https://data.ukiyo-e.org/chazen/images/2297b17df8f8fe22e3a1919362b18865.jpg"&gt;Source&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>testing</category>
      <category>testautomation</category>
    </item>
    <item>
      <title>How to make a CLI Quiz App using Javascript for Beginners</title>
      <author>Prerana Nawar</author>
      <pubDate>Fri, 04 Dec 2020 10:44:52 +0000</pubDate>
      <link>https://dev.to/prerana1821/how-to-make-a-cli-quiz-app-using-javascript-for-beginners-cij</link>
      <guid>https://dev.to/prerana1821/how-to-make-a-cli-quiz-app-using-javascript-for-beginners-cij</guid>
      <description>&lt;p&gt;In this Blog, we will understand how to make a CLI Quiz App using Javascript. &lt;/p&gt;

&lt;p&gt;I‚Äôm using JavaScript because is one of the most used programming language today‚Ä¶ that‚Äôs the 1st reason. The 2nd reason is that I find it really fun to work. But don‚Äôt worry if you haven‚Äôt used it as I‚Äôm going to explain step by step the entire process&lt;/p&gt;

&lt;p&gt;For those who don't know what is a &lt;strong&gt;CLI App&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Command Line Interface (CLI)&lt;/strong&gt;, is a &lt;strong&gt;text-based interface&lt;/strong&gt; used to interact with the operating system or the software by typing commands into the interface and receiving a response in the same way that is entirely through your terminal and shell. CLI Applications or (CLIs) they have no graphics or visual interface like GUI Applications.&lt;/p&gt;

&lt;p&gt;Also, kindly note that I don‚Äôt claim to have the best possible solution. I‚Äôm more than happy to see other solutions as well. &lt;/p&gt;

&lt;p&gt;Ok, enough with the chit-chat ‚Ä¶ let‚Äôs get our hands dirty.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cli-quiz-app" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;CLI Quiz App&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Things we will do in this App: &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Ask User to Enter their name.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Tell them the rules and instruction of you Quiz&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ask them Questions Serialvise&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;If the User's answer is Right Increase theri score, and display the score&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;If the User's answer is wrong Show them the Right Answer, and decrease the score also don't decrement till negative number (after Zero)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;After all Question are Completed Show them the final Score&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Great‚Ä¶ sounds fun! Let‚Äôs get into it.&lt;/p&gt;

&lt;p&gt;There are different ways to take user input in Javascript but to take the User input through console ( command line ) we will require one npm package: &lt;a href="https://www.npmjs.com/package/readline-sync"&gt;&lt;strong&gt;readline-sync&lt;/strong&gt;&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Firstly, We will import the readline-sync package in our program. To include it,  we use the &lt;code&gt;require()&lt;/code&gt; function with the name of the module and will store it in a constant variable because it won't change throughout our program:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;readlineSync&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;readline-sync&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;After that, we will greet the user and will ask their name by using &lt;code&gt;readlineSync.question()&lt;/code&gt; function from our imported pakage and then store the username in a variable for further use :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Welcome to the Quiz&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;readlineSync&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;question&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;What's your Name: &lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Here, we are concatenation three String. There are different ways to concatenate string in JS , we will use a plus operator to do so!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;username&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;, Let's Play the Quiz!!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;If you want to have a look at different ways of concatenating string in Javascript &lt;a href="https://masteringjs.io/tutorials/fundamentals/string-concat"&gt;here's it&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Now, we will simply display our rules and instructions for our program. Choose any topic you want for your Quiz. Also, note that we are going to ask user both one-word as well as Multiple Choice (MCQ's) questions.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Rules &amp;amp; Instructions: &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;1.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;, There are 10 Questions on India and all are Compulsory.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;2. You will get 2 points on each Right Answer.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;3. One Point will be deducted if the Answer is Wrong.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;4. In MCQ based questions you have to type the Serial Number / Index Value.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#now-the-main-logic-begins" class="anchor"&gt;
  &lt;/a&gt;
  Now, The Main Logic Begins:
&lt;/h3&gt;

&lt;p&gt;First, we‚Äôll need a variable to store the score of user. We‚Äôll initialize it with 0.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;score&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;We will ask user 5 answer in one word questions and 5 MCQ based questions. For that we will require &lt;strong&gt;2 for loops&lt;/strong&gt;, &lt;strong&gt;2 functions&lt;/strong&gt; one for MCQ based another for one for one-word answer and &lt;strong&gt;2 array of objects&lt;/strong&gt; to store questions and answers.&lt;/p&gt;

&lt;p&gt;It you don't know what all these keywords are &lt;a href="https://dev.to/prerana1821/core-concepts-of-programming-through-javascript-3dmi"&gt;here's an article&lt;/a&gt; for you.&lt;/p&gt;

&lt;p&gt;Let's start with storing an array of object for questions and answers. &lt;/p&gt;

&lt;p&gt;For One-word Questions:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;questionsList&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; 
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;question&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;India&lt;/span&gt;&lt;span class="se"&gt;\'&lt;/span&gt;&lt;span class="s1"&gt;s Largest City by Population: &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;answer&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Mumbai&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;question&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;National Song of India: &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;answer&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Vande Mataram&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; 
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;question&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;National Motto of India: &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;answer&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Satyameva Jayate&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; 
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;question&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Golden Temple is situated in: &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;answer&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Amritsar&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;For MCQ Questions array we will also store array of Options in it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;mcqList&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;array&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Mumbai&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hyderabad&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Guragon&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Bangalore&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;question&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Which City is known as "Electronic City of India"? &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;answer&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Bangalore&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;array&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Kerala&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Madras&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Bangalore&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;New Delhi&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;question&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;The Indian Institute of Science is located at &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;answer&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Bangalore&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;array&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Dugong&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Blue whale&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;River Dolphin&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Pygmy Killer Whale&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;question&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;What is the name of India&lt;/span&gt;&lt;span class="se"&gt;\'&lt;/span&gt;&lt;span class="s1"&gt;s National Aquactic Animal: &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;answer&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;River Dolphin&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;array&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;New Delhi&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hyderabad&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Amritsar&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Mumbai&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;question&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;The Centre for Cellular and Molecular Biology in India is situated at: &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;answer&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hyderabad&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;array&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Delhi&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Dehradun&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Lucknow&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Gandhinagar&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;question&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;National Institute of Aeronautical Engineering is located at &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;answer&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Delhi&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;array&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;T.N.Kaul&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;J.R.D. Tata&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Nani Palkhivala&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Khushwant Singh&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;question&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Who wrote the famous book - "We the people"? &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;answer&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Nani Palkhivala&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Now, we require function to display question, take user input, check whether the input the correct and on based on that we will increment and decrement the score of the user.&lt;/p&gt;

&lt;p&gt;So, Let's start by declaring a function for one-word answers. Also,this function will take 2 inputs question and answer from our array &lt;code&gt;questionsList&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;quiz&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;question&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;){}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Now, we need a way to display the question to the user as well as take the user given answer for the question displayed. So, again for that we will use &lt;code&gt;readlineSync.question()&lt;/code&gt; function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;quiz&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;question&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;userAnswer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;readlineSync&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;question&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;question&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Here, we are displaying the question to the user and then storing the user input in a variable &lt;code&gt;userAnswer&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Now we will check whether the user entered answer and our answer is correct or not and depending on that we will increment the score by 2 or decrement the score by 1. Also, remember if the user enters wrong answer we have to display them the correct answer.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;quiz&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;question&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;userAnswer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;readlineSync&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;question&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;question&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;userAnswer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toLowerCase&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nx"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toLowerCase&lt;/span&gt;&lt;span class="p"&gt;()){&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;You are Right.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;score&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;score&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;You are Wrong.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;The Correct Answer is:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;score&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;score&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Here, we are converting both answers to lowercase because JavaScript is a &lt;strong&gt;case sensitive&lt;/strong&gt; language. It means that "Mumbai" and "mumbai" are two different words. &lt;/p&gt;

&lt;p&gt;If you want to read more about &lt;code&gt;toLowerCase()&lt;/code&gt; function here are the &lt;a href="https://www.w3schools.com/jsref/jsref_tolowercase.asp"&gt;docs&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To display the score after every question we will use &lt;code&gt;console.log()&lt;/code&gt; after if else condition so that even if either of the conditions run our score will be displayed.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;quiz&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;question&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;userAnswer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;readlineSync&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;question&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;question&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;userAnswer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toLowerCase&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nx"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toLowerCase&lt;/span&gt;&lt;span class="p"&gt;()){&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;You are Right.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;score&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;score&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;You are Wrong.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;The Correct Answer is:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;score&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;score&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;score&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="nx"&gt;score&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
     &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Score is: &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;score&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;We don't know what are scope to decrement below zero (negative number) that's why we are checking wheather &lt;code&gt;score &amp;lt; 0&lt;/code&gt; .&lt;/p&gt;

&lt;p&gt;Function for MCQ questions.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;quizMcq&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;listOfAnswers&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;question&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;){}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;You are we will take three inputs for the function. An array of list of option for displaying the options to the user, question and the correct answer to check whether the user entered answer and our answer is correct or not.&lt;/p&gt;

&lt;p&gt;Now, We will use one another function from our readline-sync package that is &lt;code&gt;readlineSync.keyInSelect()&lt;/code&gt; .This function will take two parameters, the list of options to display it to the user and the question. If you want to read more about this function in the docs.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;quizMcq&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;listOfAnswers&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;question&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;userAnswer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;readlineSync&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keyInSelect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;listOfAnswers&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;question&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Now we will put &lt;code&gt;userAnswer&lt;/code&gt; in a array of options to check whether entered answer is correct. Rest of all is same.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;quizMcq&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;listOfAnswers&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;question&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;userAnswer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;readlineSync&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keyInSelect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;listOfAnswers&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;question&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;listOfAnswers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;userAnswer&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;You are Right.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;score&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;score&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;You are Wrong.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;The Correct Answer is: &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;score&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;score&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;score&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="nx"&gt;score&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;chalk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cyan&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Score is: &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;score&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Now, we require a for loop to look through our &lt;code&gt;questionsList&lt;/code&gt; for one-word questions.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;questionsList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;){}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Now we will call our &lt;code&gt;quiz&lt;/code&gt; function in the for loop so that we can repeatedly loop through our questions till the end.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;questionsList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="nx"&gt;quiz&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;questionsList&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;question&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;questionsList&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Understand that, our list of question is an array of &lt;strong&gt;object&lt;/strong&gt; that's why we are accessing our object property i.e. question and answer with the dot operator.&lt;/p&gt;

&lt;p&gt;for loop to look through our &lt;code&gt;questionsList&lt;/code&gt; for MCQ questions.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;mcqList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;quizMcq&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;mcqList&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;mcqList&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;question&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;mcqList&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Now finally at the end we will display the total score to the user.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Congratulations,&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;your Total Score is: &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;score&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Hurray! We did it!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#complete-program" class="anchor"&gt;
  &lt;/a&gt;
  Complete Program:
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;readlineSync&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;readline-sync&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Welcome to the Quiz&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;readlineSync&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;question&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;What's your Name: &lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;, Let's Play the Quiz!!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Rules &amp;amp; Instructions: &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;1.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;, There are 10 Questions on India and all are Compulsory.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;2. You will get 2 points on each Right Answer.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;3. One Point will be deducted if the Answer is Wrong.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;4. In MCQ based questions you have to type the Serial Number / Index Value.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;questionsList&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;question&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;India&lt;/span&gt;&lt;span class="se"&gt;\'&lt;/span&gt;&lt;span class="s1"&gt;s Largest City by Population: &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;answer&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Mumbai&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;question&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;National Song of India: &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;answer&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Vande Mataram&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; 
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;question&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;National Motto of India: &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;answer&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Satyameva Jayate&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; 
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;question&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Golden Temple is situated in: &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;answer&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Amritsar&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;mcqList&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;

  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;array&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Mumbai&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hyderabad&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Guragon&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Bangalore&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;question&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Which City is known as "Electronic City of India"? &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;answer&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Bangalore&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;array&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Kerala&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Madras&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Bangalore&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;New Delhi&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;question&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;The Indian Institute of Science is located at &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;answer&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Bangalore&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;array&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Dugong&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Blue whale&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;River Dolphin&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Pygmy Killer Whale&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;question&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;What is the name of India&lt;/span&gt;&lt;span class="se"&gt;\'&lt;/span&gt;&lt;span class="s1"&gt;s National Aquactic Animal: &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;answer&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;River Dolphin&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;array&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;New Delhi&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hyderabad&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Amritsar&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Mumbai&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;question&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;The Centre for Cellular and Molecular Biology in India is situated at: &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;answer&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hyderabad&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;array&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Delhi&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Dehradun&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Lucknow&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Gandhinagar&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;question&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;National Institute of Aeronautical Engineering is located at &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;answer&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Delhi&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;array&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;T.N.Kaul&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;J.R.D. Tata&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Nani Palkhivala&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Khushwant Singh&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;question&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Who wrote the famous book - "We the people"? &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;answer&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Nani Palkhivala&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;score&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;quiz&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;question&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;userAnswer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;readlineSync&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;question&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;question&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;userAnswer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toLowerCase&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nx"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toLowerCase&lt;/span&gt;&lt;span class="p"&gt;()){&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;You are Right.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;score&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;score&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;You are Wrong.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;The Correct Answer is:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;score&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;score&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;score&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="nx"&gt;score&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;chalk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cyan&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Score is: &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;score&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;quizMcq&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;listOfAnswers&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;question&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;userAnswer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;readlineSync&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keyInSelect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;listOfAnswers&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;question&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;listOfAnswers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;userAnswer&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;You are Right.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;score&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;score&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;You are Wrong.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;The Correct Answer is: &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;score&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;score&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;score&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="nx"&gt;score&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Score is: &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;score&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;questionsList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;quiz&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;questionsList&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;question&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;questionsList&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;*******************************&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;mcqList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;quizMcq&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;mcqList&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;mcqList&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;question&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;mcqList&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;*******************************&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Congratulations,&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;your Total Score is: &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;score&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#things-you-will-learned-while-building-this-app" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Things you will learned while building this app:&lt;/strong&gt;
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;How to take user inputs through an npm module.&lt;/strong&gt; &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;How to concatenate strings.&lt;/strong&gt; &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;What are of array of objects and how to loop through them.&lt;/strong&gt; &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;How to use functions and branching conditions.&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#conclusion" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Conclusion&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;I know that the problem might seem trivial for some of you, but if it helped you in any way, I‚Äôm very happy about it!&lt;/p&gt;

&lt;p&gt;Thank you very much for the patience. I‚Äôd love to hear your feedback about the post. Let me know what you think about this article, and javascript in general, through my &lt;a href="https://twitter.com/NawarPrerana"&gt;Twitter&lt;/a&gt; and &lt;a href="https://www.linkedin.com/in/prerana-nawar-4890b41ab/"&gt;LinkedIn&lt;/a&gt; handles. I would love to connect with you out there!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Peace!&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>cli</category>
      <category>quizapp</category>
      <category>beginners</category>
    </item>
    <item>
      <title>JWT Authentication Best Practices</title>
      <author>Fernando Doglio</author>
      <pubDate>Fri, 04 Dec 2020 10:12:47 +0000</pubDate>
      <link>https://dev.to/deleteman123/jwt-authentication-best-practices-3lf9</link>
      <guid>https://dev.to/deleteman123/jwt-authentication-best-practices-3lf9</guid>
      <description>&lt;p&gt;Microservices are a great tool when it comes to designing scalable and extensible architectures. They can be used to encapsulate different behaviors or responsibilities in a way that not a lot of other architecture paradigms can represent. &lt;br&gt;
And if you pair them with a REST-based interface, then you‚Äôre not only writing and creating a platform that can grow and scale automatically (given the right infrastructure of course), but you‚Äôre also creating a standard and easy-to-use product. &lt;/p&gt;

&lt;p&gt;If you haven‚Äôt noticed, I‚Äôm a fan of microservices and they‚Äôre usually the pattern I go with when designing new architectures, working with Big Data on a day-to-day basis, I tend to require flexibility and scalability out of the box, and they provide that to me.&lt;/p&gt;

&lt;p&gt;The thing not everyone considers when writing microservices though is that they require a way for you to authenticate against them. Both if you‚Äôre using a front-end client or just communicating with them through another microservice. And although there are several options out there to solve authentication, I want to cover one of the easiest, yet most powerful, alternative: JSON Web Tokens.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#jwtbased-authentication" class="anchor"&gt;
  &lt;/a&gt;
  JWT-based Authentication
&lt;/h1&gt;

&lt;p&gt;The basic thing you need to understand JWT-based authentication is that you‚Äôre dealing with an encrypted JSON which we‚Äôll call ‚Äútoken‚Äù. This token has all the information required for the back-end system to understand who you are and if, indeed, you are who you say you are.&lt;/p&gt;

&lt;p&gt;The following diagram shows the steps involved in this process:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Lmyom2tH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_1048F41B3AC814B927887FF3C86602B940107555916A37D85A0BACB9135A34EA_1606545347515_jwt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Lmyom2tH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_1048F41B3AC814B927887FF3C86602B940107555916A37D85A0BACB9135A34EA_1606545347515_jwt.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see, leaving out the user-based steps, you only need 4 steps:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;First, the client application (here I used a front-end app, but you can do the same with another service) will send a sign-in request. This means you‚Äôre sending the log-in credentials, just this once.&lt;/li&gt;
&lt;li&gt;Second, the API will validate these credentials and if they‚Äôre correct, it‚Äôll generate the token. This is the most important step because the generated token as I mentioned is nothing more than an encrypted JSON object. This allows you to add as much data into it as you want, and you will want to add data because JWT allows you to perform stateless authorization, which I‚Äôll cover in a second.&lt;/li&gt;
&lt;li&gt;Third, with the JWT generated, all you have to do is return it back to the client application. &lt;/li&gt;
&lt;li&gt;Finally, the client app will later send this token on every subsequent request. This token means you‚Äôve been authenticated and can access the secret section of the application.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That is it, the flow is very straightforward and you don‚Äôt need to redirect the user anywhere (I‚Äôm looking at you OAuth!). &lt;br&gt;
But let‚Äôs get into it with more details, let me break up each step for you to fully understand what is happening behind code.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-backend-side-of-things" class="anchor"&gt;
  &lt;/a&gt;
  The back-end side of things
&lt;/h2&gt;

&lt;p&gt;For the back-end, or the microservice if you will, there are two major steps that you need to understand: &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Generating the JSON Web Token. This is key, as I mentioned before because the information you add will be used later (kinda like saying ‚Äúeverything you say will be used against you in a court of law‚Äù).&lt;/li&gt;
&lt;li&gt;Validating the token for received requests. I left this part out of the authentication process because this is actually part of the authorization flow. Very similar, and easy to implement, but worth noting as well.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So, let‚Äôs get into it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Generating the JWT&lt;/strong&gt;&lt;br&gt;
To generate the token on your back-end microservice, you‚Äôll normally use an existing server-side library. There is no need for you to understand how the token is generated, you just need to understand what goes into it. &lt;/p&gt;

&lt;p&gt;So, what actually goes into the token? You can literally use a JSON object such as:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  "foo": "bar"
}
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;And that will be used and sent back to the front-end client, which may be for your business logic it makes sense, maybe your front-end client is waiting for the ‚Äúfoo‚Äù key. However, other than the custom attributes you can add, there are also pre-defined options that have a functional meaning for the specific algorithm that the library is using.&lt;/p&gt;

&lt;p&gt;Given I‚Äôll be using the &lt;a href="https://www.npmjs.com/package/jsonwebtoken"&gt;jsonwebtoken&lt;/a&gt; library for Node.js, the main option you want to take into account is  &lt;code&gt;expiresIn&lt;/code&gt;. This is critical to generating a proper JWT because you want the token to have an expiration date. Otherwise, it will last forever, potentially leaving an open vulnerability for someone who can capture it and later use it to impersonate your identity. &lt;br&gt;
For this particular library, this value is expressed in seconds if you provide a number (or you can provide a string using a time unit for something like &lt;code&gt;"&lt;/code&gt;&lt;code&gt;2 days&lt;/code&gt;&lt;code&gt;"&lt;/code&gt; to signify 2 days of validity). &lt;/p&gt;

&lt;p&gt;And in turn, the library will add another one called &lt;code&gt;iat&lt;/code&gt; which stands for &lt;strong&gt;Issued At&lt;/strong&gt; and is a date reference used for expiration checks (i.e that‚Äôs the date it‚Äôll take into account when checking if your token is still valid).&lt;/p&gt;

&lt;p&gt;And how do you add all this information into the token then? By signing it:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const jwt = require('jsonwebtoken');

const token = jwt.sign({
    data: 'foobar'
  }, 'your-secret-key-here', { expiresIn: 60 * 60 }); //1 hour

console.log(token)
//Outputs: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjoiZm9vYmFyIiwiaWF0IjoxNjA2NTUzNjc4LCJleHAiOjE2MDY1NTcyNzh9.3oV51hA7SKCqDhG7tbu2XQq7wW2LJE5XtK0HhVwEs0A
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Using the &lt;code&gt;sign&lt;/code&gt; method you can create the token, notice that your main object (the one containing the actual information you want to transfer to the front-end) is the first parameter, the second one is the secret key or phrase (you can either pass a secret phrase of your choosing, something that you‚Äôll have to share with your clients) or the content of a PEM key. Either way, the second parameter is used for the encryption algorithm to encode and create the token. Finally, the third attribute contains the configuration options (in our case only the expiration time).&lt;/p&gt;

&lt;p&gt;This token (notice the output on the code above) is then returned as part of the authentication response, for the client to use. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Storing the token&lt;/strong&gt;&lt;br&gt;
As an optional step, you can also store the token in your database  to associate it with your user. Normally, you wouldn‚Äôt need to do this if all the user information can be stored in your token. &lt;br&gt;
However, if there is more information to manage that you can comfortably store in your token, then keeping an association with your user‚Äôs profile inside the database might be a good idea.&lt;br&gt;
In fact, given that looking up this token would be something you‚Äôd do on every request, a good alternative is to keep both, the token and the relevant information about your user inside some in-memory storage,  such as &lt;a href="https://redis.io/"&gt;Redis&lt;/a&gt;. &lt;br&gt;
The new flow, with storage incorporated and verification support is the following one:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--v8web507--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_1048F41B3AC814B927887FF3C86602B940107555916A37D85A0BACB9135A34EA_1606580178077_jwt3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--v8web507--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_1048F41B3AC814B927887FF3C86602B940107555916A37D85A0BACB9135A34EA_1606580178077_jwt3.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The taxing interaction here is not the first one (#4) with Redis, but rather the second one (#9) because this one would happen on every request received. We‚Äôll see more about that in a second.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Checking the Token&lt;/strong&gt;&lt;br&gt;
Just because we‚Äôre getting a token as part of the request, it doesn‚Äôt mean such a request is safe, it could very well be a fake one or have an invalid or even expired token. This is why on every request of a secured resource (i.e an endpoint that requires an authenticated user to be accessed, or a section of your website that lives inside the member‚Äôs zone) you need to validate the token received.&lt;br&gt;
If you‚Äôve skipped the storage step, then this is a relatively cheap task. All you have to do is use the same server-side framework to validate it:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const decodedToken = jwt.verify(token, 'your-secret-key-here')
console.log(decodedToken)
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Notice how I‚Äôm using the same ‚Äúsecret phrase‚Äù, that‚Äôs definitely important because you need to keep using the same one throughout the same project otherwise validation will not work.&lt;br&gt;
An expired token would throw an exception such as:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gM7st74s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_1048F41B3AC814B927887FF3C86602B940107555916A37D85A0BACB9135A34EA_1606627819976_Captura%2Bde%2Bpantalla%2B2020-11-29%2Ba%2Blas%2B6.30.08.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gM7st74s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_1048F41B3AC814B927887FF3C86602B940107555916A37D85A0BACB9135A34EA_1606627819976_Captura%2Bde%2Bpantalla%2B2020-11-29%2Ba%2Blas%2B6.30.08.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And a valid one would just return a valid JSON that you can decode and use however you need.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{ data: 'foobar', iat: 1606581962, exp: 1606581963 }
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Notice the &lt;code&gt;iat&lt;/code&gt; and &lt;code&gt;exp&lt;/code&gt; parameters added by the library.&lt;br&gt;
An exception in this context would mean you need to invalidate the client‚Äôs request and send an invalid response. Normally you would send back a 403 error code since the request is (and the client) is no longer authenticated.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#spa-authentication" class="anchor"&gt;
  &lt;/a&gt;
  SPA authentication
&lt;/h2&gt;

&lt;p&gt;Now that we understand what it means for an API (or a microservice if you will) to be protected by a JWT authentication process, I wanted to cover the same process from the POV of a SPA application acting as the client app.&lt;br&gt;
In this case, as I mentioned, you‚Äôll be contacting a service initially by sending your credentials and receiving a token which you‚Äôll have to use on every following request.&lt;br&gt;
The first thing we need to understand though is that session-based authentication is not the same as token-based auth. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Session-based vs Token-based authentication&lt;/strong&gt;&lt;br&gt;
At a first glance, both of these strategies might seem similar, which is why I wanted to cover the difference. &lt;br&gt;
Essentially both methods work the same way:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;You authenticate against a service.&lt;/li&gt;
&lt;li&gt;That service validates your credentials and sends back a token&lt;/li&gt;
&lt;li&gt;On every following request, you send that token to authenticate yourself with the service.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So as you can see, the process and the flow of data seem to be the same, but there are some major differences hidden.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;For session-based tokens, the server returns a session key, which references the session data (all data relevant to you as a logged-in user). This data, however, is kept in the memory of the server. This essentially breaks one of the benefits of RESTful APIS: stateless services can scale effortlessly because there is no session information stored in memory. You see, the moment you log-in with a server that keeps session information in memory, every subsequent request sent by you needs to go to that server (because memory can‚Äôt be shared between different servers, or at least not easily). If you‚Äôre trying to scale up your architecture to handle more traffic, duplicating services to increase your capacity will not be as straightforward as it would be if you had stateless services.&lt;/li&gt;
&lt;li&gt;Session-based auth stores the session key in the browser‚Äôs cookies. They send the information as a cookie, and because of that, browsers have a problem when having microservices being served from different domains. This is not a problem for token-based auth, since the token is sent as a request header.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Essentially, these two big differences make token-based authentication more viable and my preferred method to implement whenever I have to do one.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dealing with XSS and CSRF with JWT&lt;/strong&gt;&lt;br&gt;
With that being said, there are other actual security threats that you need to take into consideration when implementing your authentication strategy.&lt;br&gt;
This is extremely relevant because you need to be careful about how you handle the JWT on your code. Both of these attacks can potentially take advantage of your vulnerabilities and use your token for malicious purposes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;XSS or Cross-Site Scripting&lt;/strong&gt; implies an attacker is somehow injecting malicious code into the front-end, affecting all users of the application. This can be achieved when the platform is using user input  without validating it or even encoding it. Imaging listing all logged user names on your homepage, if you‚Äôre not encoding and checking the input text for each username, an attacker could‚Äôve input a JavaScript script instead of an actual username, causing your homepage to execute the script on every user‚Äôs laptop. This is definitely a problematic attack vector if you‚Äôre manually handling the token with your JavaScript code. &lt;br&gt;
This is why you don‚Äôt use Local Storage to store the JWT on the front-end. LS is publicly accessible to any JS code stored in the same domain, so if an attacker is capable of injecting code as I mentioned, everyone‚Äôs tokens are accessible. &lt;strong&gt;You do not want to use Local Storage to keep the token&lt;/strong&gt;. Remember that.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;CSRF or Cross-Site Request Forgery&lt;/strong&gt; happens when an attacker takes advantage of the fact that cookies can be sent with every request (even on cross-domain requests). If somehow you as a user are tricked into clicking a malicious link, you can end up on a site sending a request to maybe change your password. Because in the past you‚Äôve logged in against your secure site before and your browser has the cookie in storage still, the request will succeed. &lt;strong&gt;So do not store the token on your cookies either!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Wait, so what‚Äôs left? No local storage, no cookie, maybe in-memory? That‚Äôs definitely an option unless of course, you‚Äôre not into your users losing their session the moment they refresh the browser.&lt;br&gt;
Instead of going crazy with the fact that we‚Äôre running out of secure options, let‚Äôs go back to cookies for a minute. &lt;br&gt;
If you properly create the cookies, they can be safe enough for you to trust, that and with a few extra checks, you can provide a relatively secure process, let me explain:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://owasp.org/www-community/HttpOnly"&gt;&lt;strong&gt;httpOnly&lt;/strong&gt;&lt;/a&gt;: This option makes sure the cookie is not accessible through JavaScript. This is definitely a must-do when creating your cookies, you don‚Äôt need (nor want) them to be accessed via user code. &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://owasp.org/www-community/SameSite"&gt;&lt;strong&gt;SameSite&lt;/strong&gt;&lt;/a&gt; policy: As I mentioned before, cookies are sent on every request, unless of course, the browser is new (i.e you‚Äôre not using Internet Explorer 8 or previous) and that the SameSite policy of your cookie is empty. If you need your tokens to be sent to different domains, then a &lt;em&gt;Lax&lt;/em&gt; value would do the trick because it would allow you to make GET requests to other domains, POST request would not be possible, however. This is great because you‚Äôd have the option to do redirections, but a malicious code would not be able to send a POST request behind your back. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Both these options are great, but they‚Äôre not perfect. If you¬¥re really looking to find a way to have your application be 100% secured, then you‚Äôll probably have to make some compromises, such as disabling cross-domain requests, this is all part of the security analysis you‚Äôll have to perform based on your actual security requirements.&lt;/p&gt;

&lt;p&gt;With that being said, and although all these security considerations are important, you‚Äôll normally be using a library that already takes care of all of them for you. For example, if you‚Äôre using axios for your HTTP requests in your Vue projects, you can simply set one line of configuration in your &lt;code&gt;main.js&lt;/code&gt; file:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;axios.defaults.withCredentials = true
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;With that line, you won‚Äôt have to worry about handling a token or even a cookie during the entire process. As long as the back-end API creates the cookie correctly, you‚Äôll be sending it on every subsequent request. You can access the full code of a sample project that interacts with a JWT-authenticated API &lt;a href="https://github.com/deleteman/sample-jwt-auth-vue"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Do you need HTTPS with JWT?&lt;/strong&gt;&lt;br&gt;
This is a very common question when it comes to client-server communication, and it‚Äôs especially common when setting up a JWT-based authentication because people tend to think that if you have your token, then you‚Äôd good to go.&lt;br&gt;
Truth is, that as I‚Äôve mentioned above, being 100% secured is not only hard but nearly impossible. If someone skilled enough wants to hack you, they‚Äôll find a way to do it. This is about discouraging 90% of potential attackers by taking care of the basic steps.&lt;br&gt;
So, is HTTPS required? Well, let‚Äôs consider what HTTPS actually means:&lt;/p&gt;

&lt;p&gt;An HTTPS connection between a client and a server-side service is an encrypted channel of communication between the two ends. There is no way (almost) for an attacker to read that stream from outside and figure out what‚Äôs being sent. So unlike normal HTTP which is not encrypted, HTTPS makes sure only a client that you correctly identified as valid is capable of talking to your services.&lt;/p&gt;

&lt;p&gt;What you‚Äôd normally want to do is have your public sections inside normal HTTP and anything that needs to be secured (i.e that needs you to be logged in to access it) will be behind HTTPS.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;When not to use JWT&lt;/strong&gt;&lt;br&gt;
I always like to say, that there is no silver bullet when it comes to technology, for every reason pushing you towards a particular choice, there are two more pushing you in the opposite direction. &lt;br&gt;
And the same stays true for JWT-based authentication, many developers claim there are better and more secure options out there. The key there is correctly defining what ‚Äúbetter‚Äù means to you and then going with that.&lt;br&gt;
After all, your context will be the deciding factor used to make all decisions. &lt;br&gt;
That being said, a very good reason why not to use JWT-based authentication would be when you‚Äôre developing a stateful back-end. After all, JWT shines when it is used to secure a stateless API, given the stateless nature of the data flow.&lt;br&gt;
Granted, it can be used when state is required as well, but then the line gets very blurry between JWT and session tokens. In these cases, it might be a better idea to go with other alternatives, such as server-side sessions, that were originally designed for it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Best JWT libraries&lt;/strong&gt;&lt;br&gt;
The last item I wanted to cover were libraries. If you‚Äôre working on the back-end side, you don‚Äôt need anything specific that‚Äôs compatible with Vue, but for the examples in this article, I used Node.js‚Äô &lt;a href="https://www.npmjs.com/package/jsonwebtoken"&gt;jsonwebtoken&lt;/a&gt; server-side library.&lt;/p&gt;

&lt;p&gt;As for the front-end, as I mentioned before, axios is perfectly capable of already providing all the user-level support required to interact with a JWT-authenticated API. However, if you‚Äôre actually looking to perform more advanced tasks, such as manually decoding the token to use its internal information, you have some options, depending on your front-end framework of choice:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;For VueJS users&lt;/strong&gt;: you can use something like &lt;a href="https://www.npmjs.com/package/vuejs-jwt"&gt;vuejs-jwt&lt;/a&gt; which is a lightweight library that provides you with methods such as &lt;code&gt;decode&lt;/code&gt; or &lt;code&gt;hasToken&lt;/code&gt; that help you deal with the token directly.  If on the other hand, you‚Äôre looking for a more robust solution, you can also take a look at &lt;a href="https://websanova.com/docs/vue-auth/home"&gt;vue-auth&lt;/a&gt;, which provides you with support for several authentication algorithms, including, of course, JWT.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;For Angular  users&lt;/strong&gt;: you have Auth0‚Äôs library: &lt;a href="https://www.npmjs.com/package/@auth0/angular-jwt"&gt;angular-jwt&lt;/a&gt;. It provides you a simple interface to interact withe the token &lt;a href="https://www.npmjs.com/package/@auth0/angular-jwt"&gt;&lt;/a&gt;(i.e get its data, check for expiration dates, and so on).&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;React users&lt;/strong&gt;: finally if you‚Äôre ‚Äúone of those‚Äù (actually, just kidding, I‚Äôm a big fan of React), you can use &lt;a href="https://www.npmjs.com/package/react-jwt"&gt;react-jwt&lt;/a&gt; which provides a &lt;code&gt;useJwt&lt;/code&gt; hook as well, which allows you to react to changes on the validity of a token (you can check this directly on the front-end and immediately react to the expiration event).&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#final-thoughts" class="anchor"&gt;
  &lt;/a&gt;
  Final thoughts
&lt;/h1&gt;

&lt;p&gt;When it comes to securing a RESTful API (or any stateless back-end service really), the JWT-based approach is definitely an interesting option. By default, it might not be the most secure one, but with a little bit of work and configuration, most of the common attack vectors can be tackled.&lt;br&gt;
It provides a great level of control over what you do with, and how you generate, your tokens and it makes scaling your back-end infrastructure trivially simple.&lt;/p&gt;

&lt;p&gt;In the end, it‚Äôs up to you to decide, based on your context and your background. To me, JWT authentication has always been a great option and I try to advocate for it as much as I can, given I‚Äôm also a big fan of RESTful microservices.&lt;/p&gt;

&lt;p&gt;How about you? Have you used JSON Web Tokens in the past? Or do you rather using a different approach? Leave a comment down below and share your experience.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>node</category>
      <category>jwt</category>
      <category>authentication</category>
    </item>
    <item>
      <title>Ways to Use Up Your Professional Development Budget</title>
      <author>Megan Sullivan</author>
      <pubDate>Fri, 04 Dec 2020 07:52:01 +0000</pubDate>
      <link>https://dev.to/meganesulli/ways-to-use-up-your-professional-development-budget-8no</link>
      <guid>https://dev.to/meganesulli/ways-to-use-up-your-professional-development-budget-8no</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction" class="anchor"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;It's almost the end of 2020 (yay!), which means it's time to make sure you've used up all of your professional development (PD) budget for the year!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Out of ideas?&lt;/strong&gt; Here's a list of some resources I've either used or added to my own wishlist. It's mostly geared toward my own interests: web development, accessibility, and education.&lt;/p&gt;

&lt;p&gt;Leave a comment with links to where you like to splurge on learning resources!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Full disclosure: I don't have partnerships with any of these products, I just genuinely think they're neat!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#workshops-and-courses" class="anchor"&gt;
  &lt;/a&gt;
  üë©‚Äçüè´ Workshops and Courses
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://smashingconf.com/online-workshops/"&gt;&lt;strong&gt;Smashing Magazine Online Workshops&lt;/strong&gt;&lt;/a&gt;: Live online workshops about frontend web development and UX.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://beinganantiracist.com/"&gt;&lt;strong&gt;Being Antiracist&lt;/strong&gt;&lt;/a&gt; by &lt;a href="https://twitter.com/KimCrayton1"&gt;Kim Crayton&lt;/a&gt;: A series of online workshops for white people who want to learn how to be antiracist and to minimize the harm they have on others. The series is broken into three parts: &lt;a href="https://vi.to/hubs/introduction-to-being-an-antiracist"&gt;Introduction to Being Antiracist&lt;/a&gt;, &lt;a href="https://vi.to/hubs/being-an-antiracist-at-home"&gt;Being Antiracist at Home&lt;/a&gt;, and &lt;a href="https://vi.to/hubs/being-antiracist-at-work"&gt;Being Antiracist at Work&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;University Extension courses.&lt;/strong&gt; Many universities will let you enroll in one-off courses without being a full-time student. For example, &lt;a href="https://extension.berkeley.edu/"&gt;UC Berkeley Extension&lt;/a&gt; offers courses in web development, technical communication, and data science (among other things).&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#books" class="anchor"&gt;
  &lt;/a&gt;
  üìö Books
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.smashingmagazine.com/printed-books/"&gt;&lt;strong&gt;Smashing Magazine Books&lt;/strong&gt;&lt;/a&gt;: Print or eBooks on a variety of frontend and UX topics. (I especially like &lt;a href="https://www.smashingmagazine.com/printed-books/inclusive-components/"&gt;Inclusive Components&lt;/a&gt; by &lt;a href="https://twitter.com/heydonworks"&gt;Heydon Pickering&lt;/a&gt;.)&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://a11y-with-lindsey.ck.page/products/pre-order-the-bootcampers-guide-to-web"&gt;&lt;strong&gt;The Bootcamper's Guide to Web Accessibility&lt;/strong&gt;&lt;/a&gt; by &lt;a href="https://twitter.com/LittleKope/"&gt;Lindsey Kopacz&lt;/a&gt;: A thorough introduction to accessibility, intended for self-guided learners and bootcamp graduates. (But essential knowledge for web developers of all backgrounds!)&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.stephaniemorillo.co/product-page/the-developer-s-guide-to-content-creation"&gt;&lt;strong&gt;The Developer's Guide to Content Creation&lt;/strong&gt;&lt;/a&gt; by &lt;a href="https://twitter.com/radiomorillo"&gt;Stephanie Morillo&lt;/a&gt;: This book guides you through the entire process of creating content, from coming up with ideas through writing and promoting your content. A must-read for anyone posting on this site!&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://mitpress.mit.edu/books/mismatch"&gt;&lt;strong&gt;Mismatch: How Inclusion Shapes Design&lt;/strong&gt;&lt;/a&gt; by &lt;a href="https://twitter.com/katholmes"&gt;Kat Holmes&lt;/a&gt;: This book explores a variety of case studies that showcase how design can lead to exclusion. It also proposes strategies for inclusive design.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://stackingthebricks.com/just-fucking-ship/"&gt;&lt;strong&gt;Just Fucking Ship&lt;/strong&gt;&lt;/a&gt; by &lt;a href="https://twitter.com/amyhoy"&gt;Amy Hoy&lt;/a&gt; with &lt;a href="https://twitter.com/alexhillman"&gt;Alex Hillman&lt;/a&gt;. A quick but game-changing read about how to actually finish your side projects.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.thecollectiveoakland.com/book/9780674729018"&gt;&lt;strong&gt;Make It Stick: The Science of Successful Learning&lt;/strong&gt;&lt;/a&gt; by Peter C. Brown, Henry L. Roediger III, and Mark A. McDaniel: This book explains how your brain works and what study habits will lead to successful knowledge retention.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://teachlikeachampion.com/books/practice-perfect/"&gt;&lt;strong&gt;Practice Perfect: 42 Rules for Getting Better at Getting Better&lt;/strong&gt;&lt;/a&gt; by Doug Lemov, Erica Woolway, and Katie Yezzi: A collection of tips for how to improve skills through intentional practice. A great read for educators and for folks who want to maximize their learning.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.hachettebookgroup.com/titles/ijeoma-oluo/so-you-want-to-talk-about-race/9781580056779/"&gt;&lt;strong&gt;So You Want to Talk About Race&lt;/strong&gt;&lt;/a&gt; by &lt;a href="https://twitter.com/IjeomaOluo"&gt;Ijeoma Oluo&lt;/a&gt;: This book helps readers navigate difficult conversations about race and racism.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.oreilly.com/library/view/learning-react-2nd/9781492051718/"&gt;&lt;strong&gt;Learning React, 2nd Edition&lt;/strong&gt;&lt;/a&gt; by &lt;a href="https://twitter.com/MoonTahoe"&gt;Alex Banks&lt;/a&gt; and &lt;a href="https://twitter.com/eveporcello"&gt;Eve Porcello&lt;/a&gt;: An introduction to functional JavaScript and React. The second edition has been updated to cover hooks!&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.oreilly.com/library/view/learning-graphql/9781492030706/"&gt;&lt;strong&gt;Learning GraphQL&lt;/strong&gt;&lt;/a&gt; by Eve Porcello and Alex Banks. An introduction to graph theory, GraphQL, and Apollo. Includes hands-on projects.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.thecollectiveoakland.com/book/9781484264171"&gt;&lt;strong&gt;Practical Machine Learning in JavaScript: Tensorflow.Js for Web Developers&lt;/strong&gt;&lt;/a&gt; by &lt;a href="https://twitter.com/devdevcharlie"&gt;Charlie Gerard&lt;/a&gt;: A hands-on introduction to machine learning for JavaScript developers.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#subscriptions" class="anchor"&gt;
  &lt;/a&gt;
  üîÅ Subscriptions
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://frontendmasters.com/"&gt;&lt;strong&gt;Frontend Masters&lt;/strong&gt;&lt;/a&gt;: Full-length video courses about a wide variety of web development topics. Good if you're looking for in-depth instruction.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://egghead.io/"&gt;&lt;strong&gt;egghead.io&lt;/strong&gt;&lt;/a&gt;: Bite-sized videos with very practical steps. Good if you're looking for quick, example-driven explanations.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://dequeuniversity.com/"&gt;&lt;strong&gt;Deque University&lt;/strong&gt;&lt;/a&gt;: A learning platform focused entirely on web accessibility and digital equality. They also have an entire course dedicated to preparing for the International Association of Accessibility Professionals (IAAP) certification.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://nesslabs.com/membership"&gt;&lt;strong&gt;Ness Labs&lt;/strong&gt;&lt;/a&gt;: Neuroscience-based content about how your brain works and ways to maximize learning. A yearly membership gives you access to workshops, virtual meetups, and an online community.&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>learning</category>
      <category>programming</category>
      <category>webdev</category>
      <category>career</category>
    </item>
  </channel>
</rss>
