<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>CSS Button With Hover Effect</title>
      <author>Coder</author>
      <pubDate>Mon, 11 Oct 2021 19:11:36 +0000</pubDate>
      <link>https://dev.to/codezhub/css-button-with-hover-effect-1ga4</link>
      <guid>https://dev.to/codezhub/css-button-with-hover-effect-1ga4</guid>
      <description>&lt;p&gt; You Can Check Here for More: &lt;b&gt;&lt;a href="https://Codelivly.com"&gt;Codelivly.com&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;If you enjoyed this article you can follow me  &lt;/span&gt;&lt;span&gt; on &lt;a href="https://dev.to/codezhub"&gt;https://dev.to/codezhub&lt;/a&gt; where I regularly post bite size tips relating to HTML, CSS and JavaScript.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Happy Coding..&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/avvign/embed/NVJzQW?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>codepen</category>
    </item>
    <item>
      <title>GraphQL &amp; REST with Typescript, Prisma and Azure SQL: love at first sight!</title>
      <author>Davide Mauri</author>
      <pubDate>Mon, 11 Oct 2021 19:07:35 +0000</pubDate>
      <link>https://dev.to/azure/graphql-rest-with-prisma-and-azure-sql-love-at-first-sight-12ni</link>
      <guid>https://dev.to/azure/graphql-rest-with-prisma-and-azure-sql-love-at-first-sight-12ni</guid>
      <description>&lt;p&gt;If you're into Typescript and prefer a code-first approach when working with databases, you'll be happy to learn about Prisma! &lt;a href="https://www.prisma.io/"&gt;Prisma&lt;/a&gt; is a next-generation Node.js and TypeScript ORM, that allows you to define a schema using a dedicated &lt;a href="https://en.wikipedia.org/wiki/Domain-specific_language"&gt;DSL&lt;/a&gt; so that you can then have all the comforts of modern development environments like intellisense, static type checking, automatic scaffolding and more.&lt;/p&gt;

&lt;p&gt;To help everyone, even those who just started working as coders - or those who want to start a career as software engineers - we have created a fully working end-to-end full-stack solution that has:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;a frontend written with &lt;strong&gt;Vue.Js&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;a backend, written in &lt;strong&gt;Typescript&lt;/strong&gt; and using &lt;strong&gt;Prisma&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;an &lt;strong&gt;Azure SQL&lt;/strong&gt; database (for the reasons explained &lt;a href="https://devblogs.microsoft.com/azure-sql/10-reasons-to-use-azure-sql-in-your-next-project/"&gt;here&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;to make it consumable be really everyone, we also decided to support both &lt;strong&gt;REST&lt;/strong&gt; and &lt;strong&gt;GraphQL&lt;/strong&gt; protocols&lt;/p&gt;

&lt;p&gt;and we also decided to make sure that everyone can take advantage of a streamlined CI/CD experience, so we used &lt;strong&gt;Azure Static Web Apps&lt;/strong&gt; and &lt;strong&gt;GitHub Actions&lt;/strong&gt; to glue everything together.&lt;/p&gt;

&lt;p&gt;Last, but not least, the sample also support &lt;strong&gt;Authentication and Authorization&lt;/strong&gt; (which is &lt;a href="https://docs.microsoft.com/en-us/azure/static-web-apps/authentication-authorization"&gt;super simple thanks to Azure Static Web Apps&lt;/a&gt;!)&lt;/p&gt;

&lt;p&gt;I must say I'm happy and proud of what has been done, as this example is a great learning experience and starting point for everyone interested in becoming a better developer.&lt;/p&gt;

&lt;p&gt;So, look at the article here to learn more about Prisma:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/azure-sql/modern-application-development-with-prisma-graphql-rest-and-azure-sql/"&gt;Modern application development with Prisma, GraphQL (or REST) and Azure SQL&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;and to the repository hear to deploy the code on your own:&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Azure-Samples"&gt;
        Azure-Samples
      &lt;/a&gt; / &lt;a href="https://github.com/Azure-Samples/azure-sql-db-prisma"&gt;
        azure-sql-db-prisma
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Full-Stack End-To-End implementation - both with REST and GraphQL support - with Azure SQL and Prisma.io of the well-known To-do list sample.
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;The repository is fully documented. You should be easily able to set up your working environment in no time. If you want to see it in action and learn about it before starting to use it, I did a session at the Prima Meetup that you can watch here:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/-u2CwW40X0k"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>typescript</category>
      <category>database</category>
    </item>
    <item>
      <title>CSS Position Complete Guide</title>
      <author>Aravind Sanjeev</author>
      <pubDate>Mon, 11 Oct 2021 18:51:16 +0000</pubDate>
      <link>https://dev.to/aravsanj/css-position-complete-guide-2ck2</link>
      <guid>https://dev.to/aravsanj/css-position-complete-guide-2ck2</guid>
      <description>&lt;p&gt;The position property is one of the harder to understand concepts in CSS. However, it is actually quite simple if you're in the right place. In this post, I will try to explain the CSS position property in an easy to understand manner. If you wish, you can code along.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/aravsanj/CSS-position-starter"&gt;starter files&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The starter contain 3 files - &lt;em&gt;index.html&lt;/em&gt;, &lt;em&gt;index.css&lt;/em&gt;, and &lt;em&gt;postion.css&lt;/em&gt;. The &lt;em&gt;position.css&lt;/em&gt; file is empty (other than the selectors) and is the only relevant file for this post.&lt;/p&gt;

&lt;p&gt;Currently our setup look like this,&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2kGxEalg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jz6zmidn9rf8md4e2ifp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2kGxEalg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jz6zmidn9rf8md4e2ifp.png" alt="CSS Position initial setup"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Taking a glance at our &lt;em&gt;index.html&lt;/em&gt; file, we can see it has 5 nested divs inside the body.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"static"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  static
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"relative"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    relative
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"absolute"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      absolute
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"fixed"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        fixed
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"sticky"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;sticky&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;These are actually the 5 values CSS position property can hold.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;static&lt;/li&gt;
&lt;li&gt;relative&lt;/li&gt;
&lt;li&gt;absolute&lt;/li&gt;
&lt;li&gt;fixed&lt;/li&gt;
&lt;li&gt;sticky&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The &lt;code&gt;static&lt;/code&gt; value is the default. When the position is static, the element is rendered in order as they appear in the document flow. We will use the &lt;code&gt;static&lt;/code&gt; div as the parent.&lt;/p&gt;

&lt;p&gt;Now let's open &lt;em&gt;position.css&lt;/em&gt; file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.static&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.relative&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.absolute&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.fixed&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.sticky&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Since &lt;code&gt;static&lt;/code&gt; is the default, no position property has to be necessarily applied.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;relative&lt;/code&gt; position is used to position something relative to itself. It is done using &lt;code&gt;top&lt;/code&gt;, &lt;code&gt;bottom&lt;/code&gt;, &lt;code&gt;left&lt;/code&gt;, and &lt;code&gt;right&lt;/code&gt; properties.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.relative&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;30px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;30px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With the above code you should expect two things to happen,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;30px will be added to the top and left of &lt;code&gt;relative&lt;/code&gt; div&lt;/li&gt;
&lt;li&gt;Children of &lt;code&gt;relative&lt;/code&gt; div to inherit the same position&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HyLpl8U1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4ozyma7fu8ub7r0d7gzq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HyLpl8U1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4ozyma7fu8ub7r0d7gzq.png" alt="relative positioning"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;absolute&lt;/code&gt; position is used to position an element absolutely. The &lt;code&gt;absolute&lt;/code&gt; position only works with respect to a non-static ancestor. In this example, it is the &lt;code&gt;relative&lt;/code&gt; div.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.relative&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;30px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;30px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.absolute&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With the above code you should expect,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The absolute div to be positioned 50px top and left of &lt;code&gt;relative&lt;/code&gt; div&lt;/li&gt;
&lt;li&gt;Children of &lt;code&gt;absolute&lt;/code&gt; div to inherit the same position&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dtUWYEam--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i79vl32nw8txs62ntt9r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dtUWYEam--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i79vl32nw8txs62ntt9r.png" alt="absolute position"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For &lt;code&gt;absolute&lt;/code&gt; positioning to work, the parent must be either &lt;code&gt;relative&lt;/code&gt;, &lt;code&gt;fixed&lt;/code&gt;, &lt;code&gt;sticky&lt;/code&gt;, or &lt;code&gt;absolute&lt;/code&gt; itself.&lt;/p&gt;

&lt;p&gt;However, generally &lt;code&gt;relative&lt;/code&gt; position is used as the parent container. Let's clear the &lt;code&gt;top&lt;/code&gt; and &lt;code&gt;left&lt;/code&gt; properties of &lt;code&gt;relative&lt;/code&gt; div.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.relative&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.absolute&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kh0Exguu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dhr3oh0zen824jx0ol4a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kh0Exguu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dhr3oh0zen824jx0ol4a.png" alt="absolute positioning"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What you see above is a fairly standard setup in the CSS world. We use a &lt;code&gt;relative&lt;/code&gt; element to act as a parent for our &lt;code&gt;absolute&lt;/code&gt; positioned element. The &lt;code&gt;relative&lt;/code&gt; position itself is not very useful on its own.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;fixed&lt;/code&gt; position is used to position an element with respect to the viewport.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.fixed&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;fixed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With the above code you should expect two things,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;fixed&lt;/code&gt; div container to be placed 100px bottom and left to viewport&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;children&lt;/code&gt; of fixed div to inherit the same position&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1c4Djk5f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qdigntdu91panaiejjkq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1c4Djk5f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qdigntdu91panaiejjkq.png" alt="fixed positioning"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Please note that 100px from the bottom is measured between the &lt;code&gt;sticky&lt;/code&gt; div and viewport. This is because the &lt;code&gt;fixed&lt;/code&gt; div is the parent.&lt;/p&gt;

&lt;p&gt;And finally, the &lt;code&gt;sticky&lt;/code&gt; position acts like a &lt;code&gt;relative&lt;/code&gt; element until the user scrolls past a given offset point where the element sticks (like &lt;code&gt;fixed&lt;/code&gt; elements).&lt;/p&gt;

&lt;p&gt;So &lt;code&gt;sticky&lt;/code&gt; position is actually a combination of &lt;code&gt;relative&lt;/code&gt; and &lt;code&gt;fixed&lt;/code&gt; position.&lt;/p&gt;

&lt;p&gt;To demonstrate &lt;code&gt;sticky&lt;/code&gt; position, we will clear all the CSS applied so far. Then add 300vh height to our &lt;code&gt;fixed&lt;/code&gt; div and set position &lt;code&gt;sticky&lt;/code&gt; to our sticky div with offset point being 0 pixels from top.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.fixed&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;300vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.sticky&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;sticky&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With the above code you should expect,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;To increase the height of the &lt;code&gt;fixed&lt;/code&gt; div to 3 times viewport height&lt;/li&gt;
&lt;li&gt;A sticky div relatively positioned initially&lt;/li&gt;
&lt;li&gt;A sticky div that becomes fixed positioned once it hits 0px from top&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Our document will initially look like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bXeDWD1Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/03htfbmhtdk6j5e8pb34.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bXeDWD1Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/03htfbmhtdk6j5e8pb34.png" alt="Sticky 1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Right now it is relatively positioned. When we scroll past our offset point (in this case, 0px from top), it will stick (become fixed position).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VOo_1Kzl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tq7rfvgv42sr6w229b17.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VOo_1Kzl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tq7rfvgv42sr6w229b17.png" alt="Sticky 2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That being said, the &lt;code&gt;position&lt;/code&gt; property accepts two more values,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;initial&lt;/li&gt;
&lt;li&gt;inherit&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;These are values accepted by all CSS properties. It may not find much use in the &lt;code&gt;position&lt;/code&gt; property.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;To summarize&lt;/strong&gt;,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;static&lt;/code&gt; position is by default and render elements in document flow&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;relative&lt;/code&gt; position is used to position element relatively to itself&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;absolute&lt;/code&gt; position is used to position element absolutely with respect to a non-static ancestor&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;fixed&lt;/code&gt; position is used to position element with respect to viewport&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;sticky&lt;/code&gt; position is a combination of &lt;code&gt;relative&lt;/code&gt; and &lt;code&gt;fixed&lt;/code&gt;. The position is &lt;code&gt;relative&lt;/code&gt; until a certain offset point is hit where the element becomes &lt;code&gt;fixed&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All CSS positions (other than static) is fundamentally destructive in nature. This is because it will affect the entire document's flow. Things can also get messy for responsive sites.&lt;/p&gt;

</description>
      <category>css</category>
      <category>beginners</category>
      <category>tutorial</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Let's Learn Kubernetes - Basics - 2</title>
      <author>Prashant Ghildiyal</author>
      <pubDate>Mon, 11 Oct 2021 18:43:26 +0000</pubDate>
      <link>https://dev.to/pghildiyal/let-s-learn-kubernetes-basics-2-2a9a</link>
      <guid>https://dev.to/pghildiyal/let-s-learn-kubernetes-basics-2-2a9a</guid>
      <description>&lt;p&gt;Kubernetes is a container management tool that automates the deployment, scaling, and operations of an application. It has become the de facto container orchestrator, with more than 80% of companies using it in some capacity. &lt;br&gt;
In the previous blog of &lt;a href="https://dev.to/pghildiyal/let-s-learn-kubernetes-basics-part-1-3of7"&gt;'Let's learn Kubernetes'&lt;/a&gt; Series, we have seen the basic definition of Kubernetes, pods, Nodes, controllers among others. &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/pghildiyal" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vjSmCgLb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--hvAQYJZQ--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/568793/d19992e0-9401-4bf5-bef7-4c368a6961ce.jpg" alt="pghildiyal"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/pghildiyal/let-s-learn-kubernetes-basics-part-1-3of7" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Let's Learn Kubernetes - Basics Part 1&lt;/h2&gt;
      &lt;h3&gt;Prashant Ghildiyal ・ Sep 29 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#kubernetes&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#devops&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#go&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;In this series we will go a little deeper to understand concepts like services, Load balancers and others. In this we'll give a short explanation of each concept and then post a link that explains the same in-depth. &lt;/p&gt;

&lt;p&gt;Before diving in, it would be great if you can check out our repo Devtron, End-to-End Kubernetes Software Delivery Workflow, which makes the DevOps workflow flawless for Developers, DevOps Engineers.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/devtron-labs"&gt;
        devtron-labs
      &lt;/a&gt; / &lt;a href="https://github.com/devtron-labs/devtron"&gt;
        devtron
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Software Delivery Workflow For Kubernetes
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#services"&gt;
  &lt;/a&gt;
  Services
&lt;/h2&gt;

&lt;p&gt;Kubernetes Services enables a group of pods that provide a specific function to have a unique IP Address and a name. A Kubernetes service can be used to easily expose an application deployed on a set of pods using a single endpoint. Service is both a REST object and an abstraction that defines:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A set of pods&lt;/li&gt;
&lt;li&gt;A policy to access them&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The article discusses what are Kubernetes services, Attributes of the K8s services, Defining them and creating new services.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#kubernetes-services"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.bmc.com/blogs/kubernetes-services/"&gt;Kubernetes Services&lt;/a&gt;
&lt;/h4&gt;

&lt;h2&gt;
  &lt;a href="#load-balancer-clusterip-nodeport"&gt;
  &lt;/a&gt;
  Load Balancer, ClusterIP, NodePort
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#load-balancer"&gt;
  &lt;/a&gt;
  Load Balancer
&lt;/h3&gt;

&lt;p&gt;Load balancing is a technique for distributing network traffic or client requests among many servers. The load balancer, when utilized correctly, may assist to optimise scalability and availability.  This is a crucial technique that should be correctly implemented in a solution; otherwise, clients will be unable to contact the servers.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#clusterip"&gt;
  &lt;/a&gt;
  ClusterIP
&lt;/h3&gt;

&lt;p&gt;Within your cluster, a ClusterIP offers network communication. It is generally inaccessible from the outside. You can utilise these services to connect your workloads inside.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#nodeport"&gt;
  &lt;/a&gt;
  NodePort
&lt;/h3&gt;

&lt;p&gt;Every node in your cluster has an open port called a NodePort. Even if your application is operating on a separate node, Kubernetes transparently redirects incoming traffic on the NodePort to your service.&lt;/p&gt;

&lt;p&gt;A Comprehensive video by Nana explaining what is Loadbalancer, ClusterIP &amp;amp; Nodeport and the difference between them.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/T4Z7visMM4E"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;You can also read a detailed article on ClusterIP here:&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#working-with-clusterip-service-type-in-kubernetes"&gt;
  &lt;/a&gt;
  &lt;a href="https://medium.com/the-programmer/working-with-clusterip-service-type-in-kubernetes-45f2c01a89c8"&gt;Working With ClusterIP Service Type In Kubernetes&lt;/a&gt;
&lt;/h4&gt;

&lt;h2&gt;
  &lt;a href="#ingress"&gt;
  &lt;/a&gt;
  Ingress
&lt;/h2&gt;

&lt;p&gt;Kubernetes Ingress is an API object that provides routing rules to manage external users' access to the services in a Kubernetes cluster, typically via HTTPS/HTTP.&lt;/p&gt;

&lt;p&gt;Below write-up gives a comprehensive look of what is Ingress and what is its uses.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#what-is-kubernetes-ingress"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.ibm.com/cloud/blog/kubernetes-ingress"&gt;What is Kubernetes Ingress?&lt;/a&gt;
&lt;/h4&gt;

&lt;h2&gt;
  &lt;a href="#ingress-controller"&gt;
  &lt;/a&gt;
  Ingress Controller
&lt;/h2&gt;

&lt;p&gt;An Ingress controller is a specialized load balancer for Kubernetes (and other containerized) environments. An Ingress controller abstracts away the complexity of Kubernetes application traffic routing and provides a bridge between Kubernetes services and external ones.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#ingress-controller"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.nginx.com/resources/glossary/kubernetes-ingress-controller/"&gt;Ingress controller&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;Below link defines Ingress controller and what it can do.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dns-for-k8s"&gt;
  &lt;/a&gt;
  DNS for K8s
&lt;/h2&gt;

&lt;p&gt;In the Article below, it is explained how DNS can help make it easier to access services.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#kubernetes-dns-for-services-and-pods"&gt;
  &lt;/a&gt;
  &lt;a href="https://medium.com/kubernetes-tutorials/kubernetes-dns-for-services-and-pods-664804211501"&gt;Kubernetes DNS for Services and Pods&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;I will be continuing this series to include more fundamental topics of Kubernetes under 'Let's learn Kubernetes' series title. &lt;/p&gt;

</description>
      <category>kubernetes</category>
      <category>devops</category>
      <category>beginners</category>
      <category>go</category>
    </item>
    <item>
      <title>#The Best way to Learn About The React are The Effective way. 🔆</title>
      <author>Deepak Gupta</author>
      <pubDate>Mon, 11 Oct 2021 18:07:57 +0000</pubDate>
      <link>https://dev.to/deepakguptacoder/the-best-way-to-learn-about-the-react-are-the-effective-way-33m</link>
      <guid>https://dev.to/deepakguptacoder/the-best-way-to-learn-about-the-react-are-the-effective-way-33m</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;First We should know about the react some are the basic steps are there,What is react ? How it's working ?What is the process ? &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-is-react"&gt;
  &lt;/a&gt;
  What is React?
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Dcw_D2rp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xp9e03cfqbqeagb6oozy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Dcw_D2rp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xp9e03cfqbqeagb6oozy.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
React is a free and Open Source Front End JavaScript Library for building complex User Interfaces by dividing your application into smaller components. It is maintained by Facebook and a community of Developers.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#prerequisites-for-learning"&gt;
  &lt;/a&gt;
  Pre-requisites for learning
&lt;/h1&gt;

&lt;h1&gt;
  &lt;a href="#react"&gt;
  &lt;/a&gt;
  React
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EQ7_TiJf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aqwrkmycjwyzs49a7er8.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EQ7_TiJf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aqwrkmycjwyzs49a7er8.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Before learning React or trying to learn React, I would say to familiarize yourself with HTML, CSS, &amp;amp; JavaScript.You can learn HTML and CSS within 2-3 weeks as they are used for creating layouts for your web application. JavaScript takes some time to lean as it is a programming language. Spend at least a month or two learning JavaScript. Don't just learn and learn, but also create small projects to implement the knowledge that you have gained. You can create some mini projects like To-Do Lists, Calculator, Random Jokes Generator etc.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#javascript"&gt;
  &lt;/a&gt;
  JavaScript
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wdI3a18p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x717iovsrtzaqcxyuwtn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wdI3a18p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x717iovsrtzaqcxyuwtn.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
When I was learning JavaScript, I thought that I have to become a absolute master of JavaScript to write React code (which is non-sense).learning JavaScript, you have to avoid some mistakes that I made.&lt;br&gt;
  I started learning advanced concepts (as a beginner), failing which, I thought I am not good enough. But, let me tell you, as a beginner you need to learn just enough ,so that you can create basic projects in vanilla JavaScript.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#variables"&gt;
  &lt;/a&gt;
  Variables
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--82PCmcGa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j88wwolg96cf8t1eibf3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--82PCmcGa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j88wwolg96cf8t1eibf3.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
It is easy but some time its tricky&lt;br&gt;
if/else conditions and switch statements&lt;br&gt;
Difference between var, let &amp;amp; const&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#%E2%97%8Ffunctions"&gt;
  &lt;/a&gt;
  ●Functions
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#%E2%97%8Farrays"&gt;
  &lt;/a&gt;
  ●Arrays
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#%E2%97%8Farray-methods-like-filtermap-reduce-etc"&gt;
  &lt;/a&gt;
  ●Array methods like filter,map, reduce etc.
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#%E2%97%8Fpromises"&gt;
  &lt;/a&gt;
  ●Promises
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#%E2%97%8Fcallbacks"&gt;
  &lt;/a&gt;
  ●Callbacks
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#%E2%97%8Fasyncawait"&gt;
  &lt;/a&gt;
  ●Async/await
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#%E2%97%8Fclasses-and-oops-concepts"&gt;
  &lt;/a&gt;
  ●Classes and OOPs Concepts
&lt;/h4&gt;

&lt;p&gt;Working with APIs Again, don't just learn, APPLY.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#react"&gt;
  &lt;/a&gt;
  React
&lt;/h1&gt;

&lt;p&gt;You can start learning React by taking a look at React Official Docs or by taking their React Official Tutorial to get some idea of how React works.when you have learned JavaScript essentials, it is time for you to dive into React.React Docs are very well written covering the fundamentals of React.learn this topics to learn the React.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#jsx"&gt;
  &lt;/a&gt;
  JSX
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RtOvuENH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l2c5v256bdaejeugsai8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RtOvuENH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l2c5v256bdaejeugsai8.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#components-functional-and-class-based"&gt;
  &lt;/a&gt;
  Components (Functional and Class based)
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#%E2%97%8Flifecycle-methods"&gt;
  &lt;/a&gt;
  ●Lifecycle Methods
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#%E2%97%8Fstate"&gt;
  &lt;/a&gt;
  ●State
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#%E2%97%8Fprops"&gt;
  &lt;/a&gt;
  ●Props
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#%E2%97%8Fhandling-events"&gt;
  &lt;/a&gt;
  ●Handling events
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#%E2%97%8Fforms"&gt;
  &lt;/a&gt;
  ●Forms
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#%E2%97%8Fconditional-rendering"&gt;
  &lt;/a&gt;
  ●Conditional Rendering
&lt;/h4&gt;

&lt;p&gt;This are the topic to learn the JSX It's will be help you &lt;br&gt;
Working with third-party APIs.&lt;br&gt;
You can create new projects or the remake the ones you made while learning vanilla JavaScript using React.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#react-router"&gt;
  &lt;/a&gt;
  React Router
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pQQhYQqB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gct7i8c6u4fyevjj543j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pQQhYQqB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gct7i8c6u4fyevjj543j.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
React router is a routing library for react which will help you to navigate through different pages in your React App.&lt;br&gt;
Learn about loading specific page's content, passing params in the URL, redirecting etc.also know the react router is not the part of the react,it's the react library.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#advanced-react"&gt;
  &lt;/a&gt;
  Advanced React
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uAGaxYHH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p7w70fc1gqtzyi5a4kmh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uAGaxYHH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p7w70fc1gqtzyi5a4kmh.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
First,you should learn React then you make some project.it is time to learn some advanced concepts like Hooks, Context etc. There are some topic the Advance React.&lt;br&gt;
Context&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#%E2%97%8Fhooks"&gt;
  &lt;/a&gt;
  ●Hooks
&lt;/h5&gt;

&lt;h5&gt;
  &lt;a href="#%E2%97%8Ferror-boundaries"&gt;
  &lt;/a&gt;
  ●Error Boundaries
&lt;/h5&gt;

&lt;h5&gt;
  &lt;a href="#%E2%97%8Fhigher-order-components"&gt;
  &lt;/a&gt;
  ●Higher Order Components
&lt;/h5&gt;

&lt;h5&gt;
  &lt;a href="#%E2%97%8Fcode-splitting"&gt;
  &lt;/a&gt;
  ●Code Splitting
&lt;/h5&gt;

&lt;h5&gt;
  &lt;a href="#%E2%97%8Frefs"&gt;
  &lt;/a&gt;
  ●Refs
&lt;/h5&gt;

&lt;h5&gt;
  &lt;a href="#%E2%97%8Fforwarding-refs"&gt;
  &lt;/a&gt;
  ●Forwarding Refs
&lt;/h5&gt;

&lt;h5&gt;
  &lt;a href="#%E2%97%8Frender-props"&gt;
  &lt;/a&gt;
  ●Render props
&lt;/h5&gt;

&lt;h5&gt;
  &lt;a href="#%E2%97%8Fsome-extra-stuff"&gt;
  &lt;/a&gt;
  ●Some extra stuff
&lt;/h5&gt;

&lt;p&gt;That's are the topic to learn and help you to learn the Advance React.You can also learn some extra libraries like Material UI, reactstrap, tailwindcss, Semantic UI etc, once you have learned the basics of React.also try to make project in you day to day life.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#i-hope-this-is-help-you-to-learn-the-react-concept"&gt;
  &lt;/a&gt;
  I Hope this is help you to learn the React concept.
&lt;/h5&gt;

</description>
      <category>react</category>
      <category>showdev</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Getting Started with AWS CLI v2 as a Docker Container</title>
      <author>Fon Nkwenti</author>
      <pubDate>Mon, 11 Oct 2021 17:53:58 +0000</pubDate>
      <link>https://dev.to/aws-builders/getting-started-with-aws-cli-v2-as-a-docker-container-j23</link>
      <guid>https://dev.to/aws-builders/getting-started-with-aws-cli-v2-as-a-docker-container-j23</guid>
      <description>&lt;p&gt;AWS CLI is a command-line tool used to interact with, and manage AWS resources. Any task that calls the AWS APIs from the AWS Management Console can also be done from your terminal using the AWS CLI.&lt;/p&gt;

&lt;p&gt;Using the CLI is powerful because repetitive tasks can be scripted and automated. For example, you can write a script to show you all the S3 buckets in your account instead of clicking multiple times in the console to get the same result each time.&lt;/p&gt;

&lt;p&gt;The AWS CLI version 2 was released on February 10, 2020. It introduced many new features, including the option to install the AWS CLI as a Docker container. Docker is an open-source containerization platform that allows developers to package applications into containers.&lt;/p&gt;

&lt;p&gt;Containers contain just the application and its dependencies, making them lightweight and portable across different operating systems.&lt;/p&gt;

&lt;p&gt;The advantage of using Docker images is that they are universal and can be easily shared via the DockerHub. Containerization enables you to use the AWS CLI version 2 in a container-based environment without having to manage the installation and dependencies yourself, as was the case with the Python PIP installer for the AWS CLI v1.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-you-will-learn"&gt;
  &lt;/a&gt;
  What you will learn
&lt;/h1&gt;

&lt;p&gt;In this blog post, we will look at the following;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;How to download and run the AWS CLI v2 docker image&lt;/li&gt;
&lt;li&gt;How to share host credentials for programmatic access to AWS&lt;/li&gt;
&lt;li&gt;How to shorten the Docker command&lt;/li&gt;
&lt;li&gt;How to update the AWS&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Pre-requisites
&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;An AWS account with an IAM user that has programmatic access. &lt;/li&gt;
&lt;li&gt;An access key ID and secret access key for the IAM user. See how to create an IAM user &lt;a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_users_create.html"&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;All commands are run on UNIX-based systems. If you are using windows, you can install the Windows system for Linux &lt;a href="https://www.omgubuntu.co.uk/how-to-install-wsl2-on-windows-10"&gt;here&lt;/a&gt; to follow up.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#installing-docker"&gt;
  &lt;/a&gt;
  Installing Docker
&lt;/h2&gt;

&lt;p&gt;You must have Docker installed on your computer to be able to use AWS CLI v2 docker image.  To install Docker, do the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If you are using macOS or Windows 10, go to &lt;a href="http://www.docker.com/products/docker-desktop"&gt;www.docker.com/products/docker-desktop&lt;/a&gt; to download Docker Desktop. Chose a stable version and click on download.&lt;/li&gt;
&lt;li&gt;Once the installer is downloaded, double-click on it to install Docker on your computer. The defaults are enough for this tutorial to succeed, so accept all of them.&lt;/li&gt;
&lt;li&gt;If you are using a Linux distro like Ubuntu, you can follow the official Docker documentation &lt;a href="https://docs.docker.com/engine/install/ubuntu/"&gt;here&lt;/a&gt; on how to install it on your computer.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When Docker has finished installing and is running, you should see the Docker's whale icon on your taskbar if you are using Windows. On macOS, the whale icon is on the menu bar near the clock.&lt;/p&gt;

&lt;p&gt;To confirm if the Docker installation was successful, type the following command on your terminal;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;➜  ~ docker version
Client: Docker Engine - Community
 Cloud integration: 1.0.9
 Version:           20.10.5
 API version:       1.41
 Go version:        go1.13.15
 Git commit:        55c4c88
 Built:             Tue Mar  2 20:13:00 2021
 OS/Arch:           darwin/amd64
 Context:           default
 Experimental:      true
---------
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Version: 20.10.5 is proof that you are ready to go to the next step.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#download-and-run-the-aws-cli-v2-container"&gt;
  &lt;/a&gt;
  Download and run the AWS CLI v2 container.
&lt;/h2&gt;

&lt;p&gt;The official AWS CLI version 2 Docker image is hosted on DockerHub in the amazon/aws-cli repository. Docker Hub is an online public repository for storing and sharing Docker images.&lt;/p&gt;

&lt;p&gt;In order to install the AWS CLI on your local computer, you will need to use the &lt;strong&gt;docker run&lt;/strong&gt; command.&lt;/p&gt;

&lt;p&gt;When the &lt;strong&gt;docker run&lt;/strong&gt; command is run for the first time, it will check the local cache on your computer for a copy of the AWS CLI, but it wouldn't find it there on the first run. By default, the next step will be to look for and download the image from Docker Hub online.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;docker run --rm -it amazon/aws-cli --version
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;—&lt;strong&gt;rm&lt;/strong&gt; flag is for clean up. Docker will automatically remove the file system when the container it exited. This&lt;/p&gt;

&lt;p&gt;— &lt;strong&gt;it&lt;/strong&gt; flag is for interactive. When the container is run with this flag, you get connected to the container's pseudo-TTY with stdin creating an interactive bash shell in the container. You can then input the commands to interact with your AWS environment.&lt;/p&gt;

&lt;p&gt;—&lt;strong&gt;version&lt;/strong&gt; flag executes a command to display the version of the AWS CLI.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--M70NsZYv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ua7qap53mbz8so9vmxuk.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--M70NsZYv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ua7qap53mbz8so9vmxuk.JPG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The download will happen only once from DockerHub. Future &lt;strong&gt;docker run&lt;/strong&gt; commands will run the container directly from a copy in the local docker image cache on your computer so you won't see any downloads. The capture below shows how the command gets executed directly.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nK6cKfyh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oj88w8jvlfpnk39iwsd1.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nK6cKfyh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oj88w8jvlfpnk39iwsd1.JPG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#sharing-host-credentials"&gt;
  &lt;/a&gt;
  Sharing host credentials.
&lt;/h3&gt;

&lt;p&gt;A docker container provides isolation so by default, the CLI will not be able to access the file system on your computer. This means no direct access to configuration scripts and credentials.&lt;/p&gt;

&lt;p&gt;In order to speed up your programmatic access via the AWS CLI Docker image, you will need to share your AWS credentials with the container. &lt;/p&gt;

&lt;p&gt;It is a common practice to save frequently used configuration settings and credentials in files so as to always avoid retyping them each time you need them. In the case of the AWS CLI, it uses the settings found in the profile named &lt;strong&gt;default&lt;/strong&gt;. You may still override this default behaviour and store your credentials and configurations elsewhere but for the purpose of this tutorial, we will use the default. &lt;/p&gt;

&lt;p&gt;If you already have your AWS credentials stored on your local computer, you may skip this step and move straight to mounting the host system's directory to the container. But if you don't, you can save your save your credentials by using the aws configure command and passing the parameters of your secret access key ID and secrete access key&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;aws configure
AWS Access Key ID [None]: AKIAIOSFODNN7EXAMPLE
AWS Secret Access Key [None]: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
Default region name [None]: us-west-2
Default output format [None]: json
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The AWS CLI stores sensitive credential information (that you specify with &lt;strong&gt;aws configure&lt;/strong&gt; command) **** in a local file named &lt;strong&gt;credentials&lt;/strong&gt;, in a folder named &lt;strong&gt;.aws&lt;/strong&gt; in your home directory.&lt;/p&gt;

&lt;p&gt;In order to share the credentials on your host computer with the AWS CLI v2 Docker container, you will need to mount the host system's &lt;strong&gt;~/.aws&lt;/strong&gt; directory to the container's &lt;strong&gt;/root/.aws&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;docker run --rm -it -v ~/.aws:/root/.aws amazon/aws-cli command
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After the command is run, the AWS CLI version 2 running in the container will be able to locate the host file information. &lt;/p&gt;

&lt;p&gt;Note that we added the &lt;strong&gt;-v&lt;/strong&gt; flag (same as &lt;strong&gt;—volume&lt;/strong&gt;) which is used to bind-mount the AWS credential file to the docker image.&lt;/p&gt;

&lt;p&gt;Each time you run the AWS CLI v2 Docker image and mount the AWS credentials, you will be able to execute CLI commands with the permissions allowed for the IAM user. &lt;/p&gt;

&lt;p&gt;There is no fun in having to type out such a long command. The good news is that you do not have to do so each time, which leads us to the next task in this tutorial, on how to shorten the Docker command. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#shortening-the-docker-command"&gt;
  &lt;/a&gt;
  Shortening the Docker command
&lt;/h2&gt;

&lt;p&gt;Each time you want to run the AWS CLI docker container, you will practically use the same set of commands to run the container, with docker run, pass the &lt;strong&gt;-rm&lt;/strong&gt; flag to remove the file system when the container is exited and &lt;strong&gt;-it&lt;/strong&gt; to connect to the pseudo-TTY to run bash commands. The good news is that you can use &lt;strong&gt;alias&lt;/strong&gt;' in Linux and macOS or &lt;strong&gt;doskey&lt;/strong&gt; in Windows to avoid typing the same lines each time.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;alias aws='docker run --rm -it amazon/aws-cli'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you always access the host file system to run the AWS CLI with your AWS credentials then it even becomes more important to shorten the repetitive part of the command. The code snippet below shortens it into an alias &lt;strong&gt;aws&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;alias aws='docker run --rm -it -v ~/.aws:/root/.aws -v $(pwd):/aws amazon/aws-cli'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To test the alias, we are going to simply check the version of the AWS CLI.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;aws --version
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can run other AWS commands and receive the same outputs just like you did with the AWS CLI v1.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;aws s3 ls
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#updating-the-aws-cliv2"&gt;
  &lt;/a&gt;
  Updating the AWS CLIv2
&lt;/h1&gt;

&lt;p&gt;By default, when we ran the aws cli docker image, it downloaded the latest image by default because we didn't specify tag a specific version. The latest image is always tagged &lt;strong&gt;latest&lt;/strong&gt;. So when next the docker run command is used, only the existing image tagged &lt;strong&gt;latest&lt;/strong&gt; in the cache will be used. Docker run looks first at the local cache for the image so because there is already an image tagged &lt;strong&gt;latest&lt;/strong&gt;, it will not seek to download the latest image from DockerHub until we explicitly tell it to do so. &lt;/p&gt;

&lt;p&gt;This is done by passing the &lt;strong&gt;latest&lt;/strong&gt; tag for the image.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;docker pull amazon/aws-cli:latest
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Many companies are already invested into container-based deployment tools and workflows like Docker. So being able to execute the AWS CLI from a container benefits from the advantages of containers such as portability, isolation and also security. Other tools such as the AWS Serverless Application Model (SAM) also make use of docker for testing applications locally. I personally do not use the AWS CLI v2 docker image in production but I am just experimenting with it. If you have experience with it, please let me know in the comment section.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#further-reading"&gt;
  &lt;/a&gt;
  Further Reading
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://docs.aws.amazon.com/cli/latest/userguide/install-cliv2-docker.html"&gt;https://docs.aws.amazon.com/cli/latest/userguide/install-cliv2-docker.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-files.html"&gt;https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-files.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://docs.docker.com/desktop/"&gt;https://docs.docker.com/desktop/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://ubuntu.com/blog/containers-enterprise-benefits"&gt;https://ubuntu.com/blog/containers-enterprise-benefits&lt;/a&gt;&lt;/p&gt;




</description>
      <category>beginners</category>
      <category>tutorial</category>
      <category>docker</category>
      <category>cloudskills</category>
    </item>
    <item>
      <title>VS Code - Quickly increment and decrement numeric values with keyboard shortcuts</title>
      <author>Rob OLeary</author>
      <pubDate>Mon, 11 Oct 2021 17:41:33 +0000</pubDate>
      <link>https://dev.to/robole/vs-code-quickly-increment-and-decrement-numeric-values-with-keyboard-shortcuts-2nl</link>
      <guid>https://dev.to/robole/vs-code-quickly-increment-and-decrement-numeric-values-with-keyboard-shortcuts-2nl</guid>
      <description>&lt;p&gt;When you are building websites, sometimes you need to experiment with different values to get things &lt;em&gt;just&lt;/em&gt; right. You are playing goldilocks, trying out bigger and smaller until you find that sweet spot!&lt;/p&gt;

&lt;p&gt;In the browser devtools, you can click on a property value, and you can increment and decrement numbers with keyboard shortcuts. For example, in Firefox devtools, you have the following keyboard shortcuts:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;pressing ↑, the up arrow key, will increase the selected value by 1&lt;/li&gt;
&lt;li&gt;pressing the ↓, the down arrow key, will decrease the selected value by 1&lt;/li&gt;
&lt;li&gt;pressing the Shift and ↑ (up arrow) keys together will increase the selected value by 10&lt;/li&gt;
&lt;li&gt;pressing the Shift and ↓  (down arrow) keys together will decrease the selected value by 10&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y95e1zM6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l4pkkjrxdxiqvexskqno.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y95e1zM6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l4pkkjrxdxiqvexskqno.gif" alt="firefox devetools chaning values demo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It would to be nice to have this in VS Code too!&lt;/p&gt;

&lt;p&gt;Well, the functionality is there waiting for you! You just need to add keyboard shortcuts to make the commands accessible by the keyboard. &lt;a href="https://code.visualstudio.com/docs/editor/emmet"&gt;Emmet&lt;/a&gt; provides the following commands:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;Emmet: Increment by 10&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Emmet: Increment by 1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Emmet: Increment by 0.1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Emmet: Decrement by 10&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Emmet: Decrement by 1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Emmet: Decrement by 0.1&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;To add a keyboard shortcut, open the Keyboard Shortcuts editor with the command &lt;code&gt;Preferences: Open Keyboard Shortcuts&lt;/code&gt;. This lists all available commands with and without keybindings. You can change, remove, and reset keybindings. It also has a search box on the top that helps you to finding commands or keybindings. Lets search for the "emmet increment" and set keybindings for the 3 increment commands.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BSRTy5kB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zl0i13z1r9drs3byfvjw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BSRTy5kB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zl0i13z1r9drs3byfvjw.png" alt="adding new shortcuts through keyboard settings ui"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Keep in mind that there may be existing keybindings for the key combination you want to use. VS Code will give you warning if there is existing keybindings.&lt;/p&gt;

&lt;p&gt;Usually, you can use the same key combination if you provide a specific &lt;code&gt;when&lt;/code&gt; clause to uniquely identify when your keybinding applies. Sometimes though, you may have to edit or remove an existing keybinding and take its place. You can see I use &lt;code&gt;editorTextFocus&lt;/code&gt; in the &lt;code&gt;when&lt;/code&gt; clause to ensure it only applies to open files that have focus, this was sufficient in my case.&lt;/p&gt;

&lt;p&gt;And here it is in action.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LOJR4L2x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fq0wxrymi0hzmmvex1is.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LOJR4L2x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fq0wxrymi0hzmmvex1is.gif" alt="adding new shortcuts through keyboard settings ui"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can use this in any file where &lt;a href="https://code.visualstudio.com/docs/editor/emmet"&gt;Emmet&lt;/a&gt; is available. By default, Emmet is available in: html, haml, pug, slim, jsx, xml, xsl, css, scss, sass, less, stylus, and php files. You can &lt;a href="https://code.visualstudio.com/docs/editor/emmet#_emmet-configuration"&gt;add Emmet to more files too if you wish&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you want to copy-and-paste the same settings that I have. You can open the config file for Keyboard Shortcuts with the command &lt;code&gt;Preferences: Open Keyboard Shortcuts (JSON)&lt;/code&gt; and paste this snippet at the bottom:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="nl"&gt;"key"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"ctrl+alt+up"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="nl"&gt;"command"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"editor.emmet.action.incrementNumberByOne"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="nl"&gt;"when"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"editorTextFocus"&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="nl"&gt;"key"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"ctrl+alt+down"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="nl"&gt;"command"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"editor.emmet.action.decrementNumberByOne"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="nl"&gt;"when"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"editorTextFocus"&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="nl"&gt;"key"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"ctrl+up"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="nl"&gt;"command"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"editor.emmet.action.incrementNumberByOneTenth"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="nl"&gt;"when"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"editorTextFocus"&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="nl"&gt;"key"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"ctrl+down"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="nl"&gt;"command"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"editor.emmet.action.decrementNumberByOneTenth"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="nl"&gt;"when"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"editorTextFocus"&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="nl"&gt;"key"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"shift+down"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="nl"&gt;"command"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"editor.emmet.action.decrementNumberByTen"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="nl"&gt;"when"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"editorTextFocus"&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="nl"&gt;"key"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"shift+up"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="nl"&gt;"command"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"editor.emmet.action.incrementNumberByTen"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="nl"&gt;"when"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"editorTextFocus"&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For more info on setting up keyboard shortcuts, you can read the &lt;a href="https://code.visualstudio.com/docs/getstarted/keybindings"&gt;Key Bindings for Visual Studio Code doc&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You will be a tweakmaster in no time. 🔼🔽🦸&lt;/p&gt;

</description>
      <category>vscode</category>
      <category>productivity</category>
      <category>webdev</category>
      <category>css</category>
    </item>
    <item>
      <title>12 Simple HTML Snippets To Avoid Complex Libraries ⚡✨</title>
      <author>Madza</author>
      <pubDate>Mon, 11 Oct 2021 17:38:17 +0000</pubDate>
      <link>https://dev.to/madza/12-simple-html-snippets-to-avoid-complex-libraries-3na8</link>
      <guid>https://dev.to/madza/12-simple-html-snippets-to-avoid-complex-libraries-3na8</guid>
      <description>&lt;p&gt;Not knowing the basic tech can sometimes increase the size, affect the performance and add an extra layer of complexity to the project.&lt;/p&gt;

&lt;p&gt;This article is a heads up that you can do a lot with just vanilla &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML"&gt;HTML&lt;/a&gt; and a bit of &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS"&gt;CSS&lt;/a&gt; if you want it to look pretty.&lt;/p&gt;

&lt;p&gt;I have collected some of the most useful HTML tags and attributes, so you can study them and use in your next project.&lt;/p&gt;

&lt;p&gt;I also created 12 separate &lt;a href="https://codepen.io/collection/mrbBrR?grid_type=grid"&gt;Codepens&lt;/a&gt;, so you can get a live taste and play around with the examples.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#color-picker"&gt;
  &lt;/a&gt;
  🎨 Color Picker
&lt;/h3&gt;

&lt;p&gt;Often in the developer workflow you might want to access the color spectrum and be able to pick up any shade from it.&lt;/p&gt;

&lt;p&gt;You can use &lt;code&gt;&amp;lt;input type="color"&amp;gt;&lt;/code&gt;, which would otherwise be a time-consuming task to write from scratch.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/madarsbiss/embed/vYJBqeX?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#blockquote"&gt;
  &lt;/a&gt;
  📚 Blockquote
&lt;/h3&gt;

&lt;p&gt;When writing articles you might want to highlight some of your favorites quotes. &lt;/p&gt;

&lt;p&gt;You can use a &lt;code&gt;&amp;lt;blockquote&amp;gt;&lt;/code&gt; tag for that. Add some custom styling and you have a nice element that will stand out from the rest of the text.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/madarsbiss/embed/JjyPQBd?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#audio-player"&gt;
  &lt;/a&gt;
  🎵 Audio Player
&lt;/h3&gt;

&lt;p&gt;Writing your own audio player from scratch can be a challenge. You can use the built-in &lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt; tag, that provides the basic functionality to play your audio files.&lt;/p&gt;

&lt;p&gt;Also, you can listen to more of my music &lt;a href="https://madza.dev/music"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/madarsbiss/embed/oNevrEb?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#video-player"&gt;
  &lt;/a&gt;
  📺 Video Player
&lt;/h3&gt;

&lt;p&gt;Another multimedia you could use in your projects is video. Again, you can not just include the video link in HTML and hope that it will play.&lt;/p&gt;

&lt;p&gt;To playback videos properly you can use built-in &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; tag.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/madarsbiss/embed/BadBgxJ?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#accordion"&gt;
  &lt;/a&gt;
  🔷 Accordion
&lt;/h3&gt;

&lt;p&gt;Sometimes you might want to hide some content and allow user to reveal it manually (to save the space of the viewport, for example).&lt;/p&gt;

&lt;p&gt;You can achieve the described functionality with pure HTML, thanks to &lt;code&gt;&amp;lt;details&amp;gt;&lt;/code&gt; tag.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/madarsbiss/embed/zYdOVPV?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#date-picker"&gt;
  &lt;/a&gt;
  📅 Date Picker
&lt;/h3&gt;

&lt;p&gt;Working with dates is among the most common reasons why devs search for external libraries.&lt;/p&gt;

&lt;p&gt;HTML provides a &lt;code&gt;&amp;lt;input type="date"&amp;gt;&lt;/code&gt; tag, that provides a nice UI with the option to select the dates by clicking on them.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/madarsbiss/embed/qBXWzXE?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#slider"&gt;
  &lt;/a&gt;
  ⚪ Slider
&lt;/h3&gt;

&lt;p&gt;Slider is a common component to collect the user input in the specific numeric range.&lt;/p&gt;

&lt;p&gt;You can use &lt;code&gt;&amp;lt;input type="range"&amp;gt;&lt;/code&gt; to get a fully functional slider, where you can set the min, max and current value.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/madarsbiss/embed/GRvKbXv?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#%E2%9C%8D-content-editor"&gt;
  &lt;/a&gt;
  ✍ Content Editor
&lt;/h3&gt;

&lt;p&gt;In order to edit content you don't have to use input or textarea fields and set the default values for them.&lt;/p&gt;

&lt;p&gt;Instead, you can use &lt;code&gt;contenteditable&lt;/code&gt; attribute, that allow to edit the content of the div, for example.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/madarsbiss/embed/ExvYBwB?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#picture-tag"&gt;
  &lt;/a&gt;
  📷 Picture Tag
&lt;/h3&gt;

&lt;p&gt;You might want to display different images on different screen sizes to improve the performance and UI/UX.&lt;/p&gt;

&lt;p&gt;Instead of using the default &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; tag, detect the viewport and creating a method to switch between the images, you can use built-in &lt;code&gt;&amp;lt;picture&amp;gt;&lt;/code&gt; tag. &lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/madarsbiss/embed/abybomY?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#progress-bar"&gt;
  &lt;/a&gt;
  ⌛ Progress Bar
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;&amp;lt;progress&amp;gt;&lt;/code&gt; tag represents the completion progress of a task.&lt;/p&gt;

&lt;p&gt;You can use it to display various actions, such as a download, file transfer, or installation.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/madarsbiss/embed/oNevKdp?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dropdown"&gt;
  &lt;/a&gt;
  🔻 Dropdown
&lt;/h3&gt;

&lt;p&gt;Often you might need to collect the user input with multiple possible choices. Instead of listing all the options on the screen, you might include them into dropdown.&lt;/p&gt;

&lt;p&gt;Using the &lt;code&gt;&amp;lt;datalist&amp;gt;&lt;/code&gt; tag will allow users to select options from dropdown, while also allowing to enter their own values.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/madarsbiss/embed/eYEOwdQ?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tooltip"&gt;
  &lt;/a&gt;
  💭 Tooltip
&lt;/h3&gt;

&lt;p&gt;If you need to give a detailed description of something, it is always nice to include a pop up.&lt;/p&gt;

&lt;p&gt;HTML built-in &lt;code&gt;title&lt;/code&gt; attribute provides that by default.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/madarsbiss/embed/VwzwZvE?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;In this article we reviewed functional HTML elements that you can use while working with text, audio, images, video, etc.&lt;/p&gt;

&lt;p&gt;Next time you need the some functionality, make sure to double check if it is not already provided by the HTML itself.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--nt_3UMtP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1287840925520101378/dE_wKnzZ_normal.jpg" alt="Madza profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Madza
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @madzadev
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      12 Simple HTML Snippets To Avoid Complex Libraries ⚡✨&lt;br&gt;&lt;br&gt;You don't always need a library! I made all these snippets with vanilla HTML and a bit of CSS! 💻🎨&lt;br&gt;&lt;br&gt;A thread🧵👇
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      18:02 PM - 11 Oct 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1447623708571541506" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1447623708571541506" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1447623708571541506" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;





&lt;p&gt;Writing has always been my passion and it gives me pleasure to help and inspire people. If you have any questions, feel free to reach out!&lt;/p&gt;

&lt;p&gt;Connect me on &lt;a href="https://twitter.com/madzadev"&gt;Twitter&lt;/a&gt;, &lt;a href="https://www.linkedin.com/in/madzadev/"&gt;LinkedIn&lt;/a&gt; and &lt;a href="https://github.com/madzadev"&gt;GitHub&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;Check out my &lt;a href="https://madza.dev/code"&gt;portfolio&lt;/a&gt; for all projects.&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>programming</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Best Practices Design Patterns: Optimizing Amazon S3 Performance</title>
      <author>fady soliman</author>
      <pubDate>Mon, 11 Oct 2021 17:34:14 +0000</pubDate>
      <link>https://dev.to/awsmenacommunity/best-practices-design-patterns-optimizing-amazon-s3-performance-186j</link>
      <guid>https://dev.to/awsmenacommunity/best-practices-design-patterns-optimizing-amazon-s3-performance-186j</guid>
      <description>&lt;h1&gt;
  &lt;a href="#performance-guidelines-for-amazon-s3"&gt;
  &lt;/a&gt;
  Performance Guidelines for Amazon S3:-
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#measure-performance"&gt;
  &lt;/a&gt;
  Measure Performance:
&lt;/h2&gt;

&lt;p&gt;• When optimizing performance, look at network throughput, CPU, and Dynamic Random Access Memory (DRAM) requirements. &lt;/p&gt;

&lt;p&gt;• Depending on the mix of demands for these different resources, it might be worth evaluating different Amazon EC2 instance types.&lt;/p&gt;

&lt;p&gt;• It’s also helpful to look at DNS lookup time, latency, and data transfer speed using HTTP analysis tools.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#scale-storage-connections-horizontally"&gt;
  &lt;/a&gt;
  Scale Storage Connections Horizontally:
&lt;/h2&gt;

&lt;p&gt;• Spreading requests across many connections is a common design pattern to horizontally scale performance.&lt;/p&gt;

&lt;p&gt;• Think of Amazon S3 as a very large distributed system, not as a single network endpoint.&lt;/p&gt;

&lt;p&gt;• You can achieve the best performance by issuing multiple concurrent requests to Amazon S3. Spread these requests over separate connections to maximize the accessible bandwidth from Amazon S3. &lt;/p&gt;

&lt;p&gt;• Amazon S3 doesn't have any limits for the number of connections made to your bucket.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#use-byterange-fetches-"&gt;
  &lt;/a&gt;
  Use Byte-Range Fetches :
&lt;/h2&gt;

&lt;p&gt;• Using the Range HTTP header in a GET Object request, you can fetch a byte-range from an object, transferring only the specified portion. &lt;/p&gt;

&lt;p&gt;• You can use concurrent connections to Amazon S3 to fetch different byte ranges from within the same object. &lt;/p&gt;

&lt;p&gt;• This helps you achieve higher aggregate throughput versus a single whole-object request.&lt;/p&gt;

&lt;p&gt;• Fetching smaller ranges of a large object also allows your application to improve retry times when requests are interrupted.&lt;/p&gt;

&lt;p&gt;• Typical sizes for byte-range requests are 8 MB or 16 MB. If objects are PUT using a multipart upload, it’s a good practice to GET them in the same part.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#retry-requests-for-latencysensitive-applications-"&gt;
  &lt;/a&gt;
  Retry Requests for Latency-Sensitive Applications :
&lt;/h2&gt;

&lt;p&gt;• Aggressive timeouts and retries help drive consistent latency. &lt;/p&gt;

&lt;p&gt;• Given the large scale of Amazon S3, if the first request is slow, a retired request is likely to take a different path and quickly succeed.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#combine-s3-storage-and-ec2-compute-in-the-same-aws-region-"&gt;
  &lt;/a&gt;
  Combine S3 (Storage) and   EC2 (Compute) in the Same AWS Region :
&lt;/h2&gt;

&lt;p&gt;• AWS recommend that you access the bucket from Amazon EC2 instances in the same AWS Region when possible, This helps reduce network latency and data transfer costs.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#use-amazon-s3-transfer-acceleration-to-minimize-latency-caused-by-distance-"&gt;
  &lt;/a&gt;
  Use Amazon S3 Transfer Acceleration to Minimize Latency Caused by Distance :
&lt;/h2&gt;

&lt;p&gt;• Amazon S3 Transfer Acceleration manages fast, easy, and secure transfers of files over long geographic distances between the client and an S3 bucket.&lt;/p&gt;

&lt;p&gt;• Transfer Acceleration takes advantage of the globally distributed edge locations in Amazon CloudFront.&lt;/p&gt;

&lt;p&gt;• Transfer Acceleration is ideal for transferring gigabytes to terabytes of data regularly across continents. &lt;/p&gt;

&lt;p&gt;• It's also useful for clients that upload to a centralized bucket from all over the world.&lt;/p&gt;

&lt;p&gt;• You can use the Amazon S3 Transfer Acceleration Speed Comparison tool to compare accelerated and non-accelerated upload speeds across Amazon S3 Regions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#use-the-latest-version-of-the-aws-sdks-"&gt;
  &lt;/a&gt;
  Use the Latest Version of the AWS SDKs :
&lt;/h2&gt;

&lt;p&gt;• The SDKs provide a simpler API for taking advantage of Amazon S3 from within an application and are regularly updated to follow the latest best practices.&lt;/p&gt;

&lt;p&gt;• The SDKs also provide the Transfer Manager, which automates horizontally scaling connections to achieve thousands of requests per second, using byte-range requests where appropriate.&lt;/p&gt;

&lt;p&gt;• You can also optimize performance when you are using HTTP REST API requests.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#performance-design-patterns-for-amazon-s3"&gt;
  &lt;/a&gt;
  Performance Design Patterns for Amazon S3:-
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#using-caching-for-frequently-accessed-content-"&gt;
  &lt;/a&gt;
  Using Caching for Frequently Accessed Content :
&lt;/h2&gt;

&lt;p&gt;• If a workload is sending repeated GET requests for a common set of objects, you can use a cache such as Amazon CloudFront, Amazon ElastiCache, or AWS Elemental MediaStore to optimize performance. &lt;/p&gt;

&lt;p&gt;• Successful cache adoption can result in low latency and high data transfer rates, Applications that use caching also send fewer direct requests to Amazon S3, which can help reduce request costs.&lt;/p&gt;

&lt;p&gt;• Amazon CloudFront is a fast content delivery network (CDN) that transparently caches data from Amazon S3 in a large set of geographically distributed points of presence (PoPs), when objects might be accessed from multiple Regions, or over the internet, CloudFront allows data to be cached close to the users that are accessing the objects.&lt;/p&gt;

&lt;p&gt;• Amazon ElastiCache is a managed, in-memory cache, With ElastiCache, you can provision Amazon EC2 instances that cache objects in memory, this caching results in orders of magnitude reduction in GET latency and substantial increases in download throughput. &lt;/p&gt;

&lt;p&gt;• AWS Elemental MediaStore is a caching and content distribution system specifically built for video workflows and media delivery from Amazon S3, MediaStore provides end-to-end storage APIs specifically for video, and is recommended for performance- sensitive video workloads.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#timeouts-and-retries-for-latencysensitive-applications-"&gt;
  &lt;/a&gt;
  Timeouts and Retries for Latency-Sensitive Applications :
&lt;/h2&gt;

&lt;p&gt;• There are certain situations where an application receives a response from Amazon S3 indicating that a retry is necessary.&lt;/p&gt;

&lt;p&gt;• If an application generates high request rates (typically sustained rates of over 5,000 requests per second to a small number of objects), it might receive HTTP 503 slowdown responses, If these errors occur, each AWS SDK implements automatic retry logic using exponential backoff, If you are not using an AWS SDK, you should implement retry logic when receiving the HTTP 503 error.&lt;/p&gt;

&lt;p&gt;• Amazon S3 automatically scales in response to sustained new request rates, dynamically optimizing performance, While Amazon S3 is internally optimizing for a new request rate, you will receive HTTP 503 request responses temporarily until the optimization completes, After Amazon S3 internally optimizes performance for the new request rate, all requests are generally served without retries.&lt;/p&gt;

&lt;p&gt;• For latency-sensitive applications, Amazon S3 advises tracking and aggressively retrying slower operations. When you retry a request, we recommend using a new connection to Amazon S3 and performing a fresh DNS lookup.&lt;/p&gt;

&lt;p&gt;• When you make large variably sized requests (more than 128 MB), we advise tracking the throughput being achieved and retrying the slowest 5 percent of the requests.&lt;/p&gt;

&lt;p&gt;• When you make smaller requests (less than 512 KB), where median latencies are often in the tens of milliseconds range, a good guideline is to retry a GET or PUT operation after 2 seconds.&lt;/p&gt;

&lt;p&gt;• If your application makes fixed-size requests to Amazon S3, you should expect more consistent response times for each of these requests, In this case, a simple strategy is to identify the slowest 1 percent of requests and to retry them, Even a single retry is frequently effective at reducing latency.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#horizontal-scaling-and-request-parallelization-for-high-throughput-"&gt;
  &lt;/a&gt;
  Horizontal Scaling and Request Parallelization for High Throughput :
&lt;/h2&gt;

&lt;p&gt;• AWS   encourage you to horizontally scale parallel requests to the Amazon S3 service endpoints, In addition to distributing the requests within Amazon S3, this type of scaling approach helps distribute the load over multiple paths through the network.&lt;/p&gt;

&lt;p&gt;• For high-throughput transfers, Amazon S3 advises using applications that use multiple connections to GET or PUT data in parallel.&lt;/p&gt;

&lt;p&gt;• You can use the AWS SDKs to issue GET and PUT requests directly rather than employing the management of transfers in the AWS SDK. This approach lets you tune your workload more directly, while still benefiting from the SDK’s support for retries and its handling of any HTTP 503 responses that might occur.&lt;/p&gt;

&lt;p&gt;• When you download large objects within a Region from Amazon S3 to Amazon EC2, AWS suggest making concurrent requests for byte ranges of an object at the granularity of 8–16 MB.&lt;/p&gt;

&lt;p&gt;• If your application issues requests directly to Amazon S3 using the REST API, we recommend using a pool of HTTP connections and re-using each connection for a series of requests. Avoiding per-request connection setup removes the need to perform TCP slow-start and Secure Sockets Layer (SSL) handshakes on each request.&lt;/p&gt;

&lt;p&gt;• It’s worth paying attention to DNS and double-checking that requests are being spread over a wide pool of Amazon S3 IP addresses.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-amazon-s3-transfer-acceleration-to-accelerate"&gt;
  &lt;/a&gt;
  Using Amazon S3 Transfer Acceleration to Accelerate
&lt;/h2&gt;

&lt;p&gt;Geographically Disparate Data Transfers :&lt;/p&gt;

&lt;p&gt;• Amazon S3 Transfer Acceleration is effective at minimizing or eliminating the latency caused by geographic distance between globally dispersed clients and a regional application using Amazon S3.&lt;/p&gt;

&lt;p&gt;• Transfer Acceleration uses the globally distributed edge locations in CloudFront for data transport.&lt;/p&gt;

&lt;p&gt;• The edge network also helps to accelerate data transfers into and out of Amazon S3, It is ideal for applications that transfer data across or between continents, have a fast internet connection, use large objects, or have a lot of content to upload.&lt;/p&gt;

&lt;p&gt;• In general, the farther away you are from an Amazon S3 Region, the higher the speed Improvement you can expect from using Transfer Acceleration.&lt;/p&gt;

&lt;p&gt;• You can set up Transfer Acceleration on new or existing buckets.&lt;/p&gt;

&lt;p&gt;• The best way to test whether Transfer&lt;/p&gt;

&lt;p&gt;• Acceleration helps client request performance is to use the Amazon S3 Transfer Acceleration Speed Comparison tool.&lt;/p&gt;

&lt;p&gt;• Network configurations and conditions vary from time to time and from location to location, so you are charged only for transfers where Amazon S3 Transfer Acceleration can potentially improve your upload performance.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>cloud</category>
      <category>s3</category>
    </item>
    <item>
      <title>How Partytown's Sync Communication Works</title>
      <author>Adam Bradley</author>
      <pubDate>Mon, 11 Oct 2021 17:26:35 +0000</pubDate>
      <link>https://dev.to/adamdbradley/how-partytown-s-sync-communication-works-4244</link>
      <guid>https://dev.to/adamdbradley/how-partytown-s-sync-communication-works-4244</guid>
      <description>&lt;p&gt;Recently we announced the alpha version of Partytown, which is a library that helps relocate third-party scripts into a web worker so that the main thread can be dedicated to just running &lt;em&gt;your&lt;/em&gt; code. For more information on why a website would benefit from this I’d encourage you to also read: &lt;a href="https://dev.to/adamdbradley/introducing-partytown-run-third-party-scripts-from-a-web-worker-2cnp"&gt;Introducing Partytown 🎉: Run Third-Party Scripts From a Web Worker&lt;/a&gt;. This post is more for the curious and talking through “how” Partytown works.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#asynchronous-postmessage"&gt;
  &lt;/a&gt;
  Asynchronous postMessage()
&lt;/h2&gt;

&lt;p&gt;Moving long-running and resource intensive tasks into a &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API"&gt;web worker&lt;/a&gt; has been encouraged for many years now. However, the significant constraint is that the communication between the &lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/Main_thread"&gt;main thread&lt;/a&gt;, and web worker, &lt;em&gt;must&lt;/em&gt; be asynchronous. Meaning a message sent by one thread does not wait on the other thread to receive it, nor wait on it to return a value. &lt;/p&gt;

&lt;p&gt;At the core, &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Worker/postMessage"&gt;postMessage()&lt;/a&gt; is basically a fire-and-forget method. This is perfectly fine, and a communication layer can be built around &lt;code&gt;postMessage()&lt;/code&gt; so your code can instead use promises, async/await or even callbacks (all of which are asynchronous). &lt;/p&gt;

&lt;p&gt;An awesome project that can help you easily use Web Workers is &lt;a href="https://github.com/GoogleChromeLabs/comlink"&gt;Comlink&lt;/a&gt;, which &lt;em&gt;“...removes the mental barrier of thinking about postMessage and hides the fact that you are working with workers.”&lt;/em&gt; Comlink is great, but at the time of writing this, you still hit the barrier that the calls between the main thread and web worker must be async.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-thirdparty-scripts-cant-use-postmessage"&gt;
  &lt;/a&gt;
  Why Third-Party Scripts Can’t Use postMessage()
&lt;/h2&gt;

&lt;p&gt;As I laid out in the &lt;a href="https://dev.to/adamdbradley/introducing-partytown-run-third-party-scripts-from-a-web-worker-2cnp#running-thirdparty-scripts-within-a-web-worker"&gt;first post&lt;/a&gt;, in reality you can’t just refactor third-party scripts. They’re hosted from another domain, controlled by another service, and built to handle countless scenarios so they can be executed by billions of different devices worldwide.&lt;/p&gt;

&lt;p&gt;However, many scripts like Google Analytics, are just collecting information and posting that data to their servers using  &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Navigator/sendBeacon"&gt;navigator.sendBeacon()&lt;/a&gt;. This is the best case scenario because Google Analytics is really just a background task. It can happily run on its own schedule and lazily collect and post data in another thread. &lt;/p&gt;

&lt;p&gt;The problem, however, is there are still calls to blocking APIs that are not available in the web worker. For example &lt;code&gt;document.title&lt;/code&gt; and &lt;code&gt;window.screen.width&lt;/code&gt; are commonly used in scripts, but reading that information is blocking. So while Google Analytics itself is a great candidate to run in the background on another thread, it still requires synchronous communication in order to read values from &lt;code&gt;document&lt;/code&gt; and &lt;code&gt;window&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Since the third-party scripts &lt;em&gt;must&lt;/em&gt; stay as-is, and because web workers &lt;em&gt;must&lt;/em&gt; have an asynchronous communication, we’ve been in this stand-still where the bulk of our performance issues cannot be offloaded into another thread.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#with-this-one-weird-synchronous-trick"&gt;
  &lt;/a&gt;
  With this One Weird Synchronous Trick
&lt;/h2&gt;

&lt;p&gt;This is the fun stuff! 🧑‍🔬 Enter the obscure API: &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Synchronous_and_Asynchronous_Requests#synchronous_request"&gt;Synchronous XMLHttpRequest&lt;/a&gt;. In today’s web development it’s a lesser known API for good reason. Basically in the olden days, when we were rocking Adobe Flash, Java applets, and Dreamweaver’ing DHTML, this was pretty common:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;XMLHttpRequest&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;GET&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/data.xml&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="c1"&gt;// `false` makes the request synchronous&lt;/span&gt;
&lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The problem was that in the main thread, this blocking call would lock up the webpage until the response came back. According to &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Synchronous_and_Asynchronous_Requests#synchronous_request"&gt;MDN&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Synchronous XHR is now in deprecation state. The recommendation is that developers move away from the synchronous API and instead use asynchronous requests.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And in today’s web dev landscape, it’s best to instead use the more modern &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API"&gt;fetch()&lt;/a&gt; API. &lt;/p&gt;

&lt;p&gt;However, the &lt;em&gt;web worker’s&lt;/em&gt; ability to execute synchronously is at the core of many tools. Mainly &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/WorkerGlobalScope/importScripts"&gt;importScripts()&lt;/a&gt;, but Synchronous XHR falls in this category too. These synchronous APIs have &lt;em&gt;not&lt;/em&gt; been marked as deprecated from within a &lt;em&gt;web worker&lt;/em&gt;. A quick &lt;a href="https://github.com/search?q=importscripts&amp;amp;type=code"&gt;Github search for importScripts()&lt;/a&gt; shows just how widely used they are. But again, it’s &lt;em&gt;only&lt;/em&gt; available in a web worker!&lt;/p&gt;

&lt;p&gt;So, as it turns out...I guess we &lt;em&gt;can&lt;/em&gt; make the web worker blocking...🧐&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#intercepting-synchronous-requests"&gt;
  &lt;/a&gt;
  Intercepting Synchronous Requests
&lt;/h2&gt;

&lt;p&gt;When code is executed from within a worker, and only a worker, we can make synchronous HTTP requests, which effectively block the web worker thread’s execution until the HTTP response comes back. With that power (and with our mad scientist wig on), we have the ability to execute the web worker code as blocking, and then use the HTTP request to asynchronously call &lt;code&gt;postMessage()&lt;/code&gt;. Remember, an HTTP request and response is asynchronous. So while the web worker thread may “think” it’s sync, we can intercept the actual HTTP request and have an asynchronous response.&lt;/p&gt;

&lt;p&gt;This is where the other weird trick comes in. &lt;em&gt;Doctors hate it!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Service workers are able to intercept requests with &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/onfetch"&gt;onfetch&lt;/a&gt;. This means that the request the web worker makes can also be intercepted and handled by our own code. The requests are not external and do not hit the actual network, but instead are handled locally within the service worker. From within &lt;code&gt;onfetch&lt;/code&gt;, we can then use &lt;code&gt;postMessage()&lt;/code&gt; to do the real async communication. &lt;/p&gt;

&lt;p&gt;A service worker still doesn’t have direct access to the main thread yet. But because we’re now communicating asynchronously, from within the service worker we can then use its &lt;code&gt;postMessage()&lt;/code&gt; to talk to the the main thread, and have the main thread send messages back to the service worker. Then the service worker completes the HTTP response which it already intercepted.&lt;/p&gt;

&lt;p&gt;So we still have the same asynchronous constraint, but with the combination of synchronous XHR, and intercepting requests, we can effectively convert an async call into a blocking one. Next, we make it a bit easier to use by wrapping up all the main thread’s access with &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy"&gt;Javascript Proxies&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Additionally, Partytown should still work for legacy browsers. Part of its initialization is that if the browser doesn’t support service workers, then it basically just runs the third-party scripts the traditional way (what we’re all doing today).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-about-atomics"&gt;
  &lt;/a&gt;
  What About Atomics?
&lt;/h2&gt;

&lt;p&gt;Awesome, glad you asked. Personally, I’m hopeful to see &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Atomics"&gt;Atomics&lt;/a&gt; as the solution in the long run. Since the &lt;a href="https://github.com/BuilderIO/partytown"&gt;awesome OSS community&lt;/a&gt; has stepped up with some great ideas, we’ve already broken ground on having two builds available: atomics and service workers. When the library runs, it’ll decide which to use depending on the browser’s support.&lt;/p&gt;

&lt;p&gt;Currently, the plan is that the service worker trick will ultimately become the fallback, but there’s much more Atomics research to do. Good news for the future of Atomics is that Safari Tech Preview just enabled SharedArrayBuffer!&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--55_tdoqA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1214648242404761600/OoYVL2Tp_normal.jpg" alt="James Long profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        James Long
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @jlongster
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Safari Tech Preview enables SharedArrayBuffer without any flags!!! 🎉😭🎉😍&lt;br&gt;&lt;br&gt;&lt;a href="https://t.co/vXrrJmxl9Z"&gt;webkit.org/blog/11975/rel…&lt;/a&gt;&lt;br&gt;&lt;br&gt;(cc &lt;a href="https://twitter.com/adamdbradley"&gt;@adamdbradley&lt;/a&gt;)
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      18:53 PM - 30 Sep 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1443650219770617857" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1443650219770617857" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1443650219770617857" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;
 

&lt;h2&gt;
  &lt;a href="#whats-next"&gt;
  &lt;/a&gt;
  What’s Next
&lt;/h2&gt;

&lt;p&gt;Partytown is still in alpha and undergoing many changes on each commit 😬. But we're already actively running it on a few pages within &lt;a href="https://www.builder.io/"&gt;Builder.io&lt;/a&gt; so we can collect more production data. &lt;/p&gt;

&lt;p&gt;Additionally, we’re working with a few ecommerce sites who have significant third-party script usage, and see if we can help improve their performance and usability. We’d love to have you hop in our &lt;a href="https://discord.gg/hbuEtxdEZ3"&gt;Discord channel&lt;/a&gt; and chat ideas, or even help test and file issues in our &lt;a href="https://github.com/Builderio/partytown"&gt;Github repo&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;So please stay tuned as we continue this experiment. In follow up posts we’ll continue to dig deeper into other parts of the library, and as we gather more data we’re hoping to present some good hard numbers showing Partytown’s benefits.&lt;/p&gt;

&lt;p&gt;Party on, Garth!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Builderio/partytown"&gt;Partytown Repo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://discord.gg/hbuEtxdEZ3"&gt;Discord channel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/adamdbradley/introducing-partytown-run-third-party-scripts-from-a-web-worker-2cnp"&gt;Introducing Partytown 🎉: Run Third-Party Scripts From a Web Worker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/mhevery/series/13467"&gt;Qwik&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.builder.io/"&gt;Builder.io&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
    </item>
    <item>
      <title>GitUI - v0.18 supports rebase</title>
      <author>Stephan Dilly</author>
      <pubDate>Mon, 11 Oct 2021 17:06:15 +0000</pubDate>
      <link>https://dev.to/extrawurst/gitui-v0-18-supports-rebase-3ged</link>
      <guid>https://dev.to/extrawurst/gitui-v0-18-supports-rebase-3ged</guid>
      <description>&lt;p&gt;&lt;a href="https://github.com/extrawurst/gitui"&gt;GitUI&lt;/a&gt; is a terminal UI for git written in Rust. We aim to simplify common git tasks in a fast, keyboard-only and cross platform way without leaving your beloved CLI.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#release-highlights"&gt;
  &lt;/a&gt;
  Release Highlights
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;rebase with conflicts&lt;/li&gt;
&lt;li&gt;better visuals when repo is in non-clean state&lt;/li&gt;
&lt;li&gt;supported checkout of hierarchical branchnames&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/extrawurst/gitui/releases/tag/v0.18.0"&gt;much more&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks for your interest and support!❤️&lt;/p&gt;

</description>
      <category>github</category>
      <category>terminal</category>
      <category>productivity</category>
      <category>rust</category>
    </item>
    <item>
      <title>This Free Tool Lets You Create World Class Documentation for React Components</title>
      <author>Mohmed Ishak</author>
      <pubDate>Mon, 11 Oct 2021 16:52:31 +0000</pubDate>
      <link>https://dev.to/ishakmohmed/this-free-tool-lets-you-create-world-class-documentation-for-react-components-2gdc</link>
      <guid>https://dev.to/ishakmohmed/this-free-tool-lets-you-create-world-class-documentation-for-react-components-2gdc</guid>
      <description>&lt;p&gt;&lt;a href="https://aviyel.com/post/1161/this-free-tool-lets-you-create-world-class-documentation-for-react-components"&gt;Full article available on Aviyel for free (leave a like here before you check it out on Aviyel)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hello, developers! I bet you know &lt;a href="https://aviyel.com/post/873/top-six-devtools-to-start-with-react"&gt;React&lt;/a&gt; and love it, but let’s time travel to the time when you didn’t know about it. You didn’t know where to start, so you probably watched a video of a guy telling you about React and found yourself stuck in tutorial hell. But look at you now. You are well versed with React and can easily create documentation for React components in one go.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-do-developers-require-documentation"&gt;
  &lt;/a&gt;
  Why Do Developers Require Documentation?
&lt;/h3&gt;

&lt;p&gt;When software solves a problem and makes the lives of others (including developers) easy, it’s good software. But what truly drives a large fanbase is the developers behind it. Imagine if React didn’t exist and you created it over a weekend or two. Not many people would try it out and your tech will be forgotten (the worst-case scenario), someone else would create similar tech better than yours unless you document your tech, driving more users and developers.&lt;/p&gt;

&lt;p&gt;Documentation is simply a report (without strict format) on how to use a tech usually created by its creators so others can get friendly with that tech and figure out its usages easily. Imagine if your beautiful documentation for a tech you created (the tech doesn’t necessarily need to be big like the entire React library or Angular framework) got noticed by popular software engineers like &lt;a href="https://www.youtube.com/channel/UCaO6VoaYJv4kS-TQO_M-N_g"&gt;Clément Mihailescu&lt;/a&gt;, or &lt;a href="https://www.youtube.com/c/akshaymarch7"&gt;Akshay Saini&lt;/a&gt; and they try your tech and love it. The next thing you know is that your code becomes popular and you either get employed at your favorite company or turn that tech into a startup and become successful and wealthy. Your documentation, if open sourced might widen new avenues of community growth, collaboration and might connect you with big shots of the industry as well.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#is-it-difficult-to-create-good-docs"&gt;
  &lt;/a&gt;
  Is It Difficult To Create Good Docs?
&lt;/h3&gt;

&lt;p&gt;Is it difficult to super cool and professional docs like the following ones? If you want to do it manually by implementing all the fancy UI components, yes, of course. Have you checked out &lt;a href="https://docs.expo.dev/"&gt;Expo&lt;/a&gt;’s (a toolchain built on top of React Native) documentation? They don’t just write a bunch of texts describing how to use their components, rather they’ve got editable codes for components, which means the users are able to edit the displayed code snippet (e.g. “color = black” to “color = yellow”) right on the site and the changes will be immediately visible on screen. With this, users are able to grasp the behavior of a component in an interactive way, which is the ideal way to learn for a developer. You can also check out &lt;a href="https://flutter.dev/docs"&gt;Flutter&lt;/a&gt; and &lt;a href="https://mui.com/getting-started/usage/"&gt;Material UI&lt;/a&gt; for inspiration on creating better documentation.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-the-best-way-to-document-your-react-components"&gt;
  &lt;/a&gt;
  What is the Best Way to Document Your React Components?
&lt;/h3&gt;

&lt;p&gt;You can have all the money in the world and hire the best web developers to manually create a beautiful site for your documentation but to be honest, that’s just so time-consuming and a burden to make all parts of docs consistent and by the time you try to make it consistent, the entire team is exhausted just to make a doc? Thankfully, the open source community has put in tons of work to create a tool that will help you to create high-quality, professional, powerful, and sleek software documentations. And, before you think that I’m about to make you pay to use that software, well no, the tool I’m about to share with you is absolutely free!&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lx8KPv93--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pxontwa04vz1tt39b5jm.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lx8KPv93--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pxontwa04vz1tt39b5jm.jpeg" alt="Mohmed Ishak"&gt;&lt;/a&gt; &lt;em&gt;Image source: Medium&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It’s Docz. Docz is a popular state-of-the-art open-source tool that allows anyone to create clean and highly customizable custom software documentation sites with fairly minimal effort. Think of it as using Canva to create cool posters. It has got 21.7k stars on &lt;a href="https://github.com/doczjs/docz"&gt;GitHub&lt;/a&gt; which is a huge thing in software development. Here are some of the features and cool things about Docz:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Built with Gatsby, a hot open-source framework that is used to create blazing fast static sites that are Progressive Web Apps. And no, you don’t need to know Gatsby to use this tool.&lt;/li&gt;
&lt;li&gt;Based on MDX. MDX is Markdown + JSX. Now you don’t need to understand confusing symbols to create markdowns, but just a bunch of easy-to-use JSX-like syntax.&lt;/li&gt;
&lt;li&gt;Supports TypeScript. It provides native TypeScript support. Everyone likes TypeScript. If you don’t, you probably haven’t spent enough time using it, or you haven’t looked at a large codebase because almost all large JavaScript projects are built using TypeScript.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#quick-start-guide"&gt;
  &lt;/a&gt;
  Quick Start Guide
&lt;/h3&gt;

&lt;p&gt;Before I show you how to use Docz, if you’ve plenty of time, do read the official docs to get a good overview of this &lt;a href="https://www.docz.site/docs/getting-started"&gt;tool&lt;/a&gt;. If not, keep reading.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Add Docz as a dependency in your project. Pick one of the commands below depending on your package manager (npm/yarn). Please take note that react and react-dom versions in your app must be greater than 16.8.0. Otherwise, this will not work so upgrade them. Make sure react and react-dom are installed to run the commands;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;yarn&lt;/span&gt; &lt;span class="nx"&gt;add&lt;/span&gt; &lt;span class="nx"&gt;docz&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;install&lt;/span&gt; &lt;span class="nx"&gt;docz&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Add a .mdx file anywhere in your project, you are not required to adhere to any file architecture or conventions. You can just copy and paste this code.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;---&lt;/span&gt;
&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Button&lt;/span&gt;
&lt;span class="nx"&gt;route&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;
&lt;span class="o"&gt;---&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Playground&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Props&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;docz&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Button&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./Button&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="nx"&gt;Button&lt;/span&gt;

&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Props&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;span class="err"&gt;##&lt;/span&gt; &lt;span class="nx"&gt;Basic&lt;/span&gt; &lt;span class="nx"&gt;usage&lt;/span&gt;

&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Playground&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="err"&gt;  &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Button&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;submit&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Click&lt;/span&gt; &lt;span class="nx"&gt;me&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;span class="err"&gt;  &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Button&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;No&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;click&lt;/span&gt; &lt;span class="nx"&gt;me&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Playground&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Only a few easy steps are left. Check out the complete &lt;a href="https://aviyel.com/post/1161/this-free-tool-lets-you-create-world-class-documentation-for-react-components"&gt;article&lt;/a&gt; for free on Aviyel. I assure you that this free tool will help you in ways you didn't expect in your software development journey. &lt;/p&gt;

</description>
      <category>react</category>
      <category>documentation</category>
      <category>docz</category>
      <category>software</category>
    </item>
  </channel>
</rss>
