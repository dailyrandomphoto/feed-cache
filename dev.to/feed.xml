<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>What made you smile this week? üòã„ÄΩÔ∏è‚≠ï‚≠ï</title>
      <author>Fortune the Dev üöÄ‚ù§Ô∏è</author>
      <pubDate>Sun, 29 Aug 2021 20:59:52 +0000</pubDate>
      <link>https://dev.to/codewithfortune/what-made-you-smile-this-week-42l5</link>
      <guid>https://dev.to/codewithfortune/what-made-you-smile-this-week-42l5</guid>
      <description>&lt;p&gt;This week my channel finally hit that 350 subs üòÇüòé.... It is baby steps but anyway still progress üëç... My focus will now shift to high quality content creation plus a dive into app development ‚ôå. For those who think I plan on quitting. Think againüòè.&lt;/p&gt;

&lt;p&gt;Here's the beloved channel link üëáüëá&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/lxypbHEqWK0"&gt;https://youtu.be/lxypbHEqWK0&lt;/a&gt;&lt;/p&gt;

</description>
      <category>css</category>
      <category>programming</category>
      <category>webdev</category>
      <category>php</category>
    </item>
    <item>
      <title>The CSS 'Scrabble' writer ‚Äî The next gen typewriter</title>
      <author>Temani Afif</author>
      <pubDate>Sun, 29 Aug 2021 20:42:29 +0000</pubDate>
      <link>https://dev.to/afif/the-css-scrabble-writer-the-next-gen-typewriter-fbi</link>
      <guid>https://dev.to/afif/the-css-scrabble-writer-the-next-gen-typewriter-fbi</guid>
      <description>&lt;p&gt;Get tired of the classic typewriter and its blinking caret? I am here to the rescue with my 'Scrabble' writer. A new and innovative way to type your text. &lt;/p&gt;

&lt;p&gt;Impress your visitor with such unexpected animation!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qKTl1hIY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c2uetxrjcw02jei2sdbv.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qKTl1hIY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c2uetxrjcw02jei2sdbv.gif" alt="CSS scrabble writer"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#see-the-demo"&gt;
  &lt;/a&gt;
  &lt;a href="https://codepen.io/t_afif/pen/vYZNVPX"&gt;See the Demo&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;The HTML code is pretty basic and all you have to do is to adjust a CSS variable (for the number of letters) and the &lt;code&gt;font-size&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"scrabble"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;span&amp;gt;&lt;/span&gt;CSS&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"scrabble"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;span&amp;gt;&lt;/span&gt;is&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"scrabble animate"&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;"--n:5"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;span&amp;gt;&lt;/span&gt;crazy&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;You can easily animate any text you want:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/MWoaxNa?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;sup&gt;PS: click on the "rerun" button to see the animation again&lt;/sup&gt;&lt;/p&gt;



&lt;p&gt;A quick overview of the previous events:&lt;/p&gt;

&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/alvaromontoro"&gt;@alvaromontoro&lt;/a&gt;
 started the war with his CSS-only typewriter:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/alvaromontoro" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8ekLisLu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--aTV3h--8--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/161327/2ff05281-db58-4dcb-946a-4b679e4a266b.jpeg" alt="alvaromontoro"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/alvaromontoro/typewriter-effect-with-css-38im" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Typewriter Effect with CSS&lt;/h2&gt;
      &lt;h3&gt;Alvaro Montoro „Éª Aug 27 „Éª 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;p&gt;I replied with my "simple-code" implementation&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/afif" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jSZolrIL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--5k2bquNj--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/577896/343fde9f-609b-419b-95d1-07d16b320a37.png" alt="afif"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/afif/a-scalable-css-only-typewriter-effect-2opn" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;A scalable CSS only Typewriter Effect&lt;/h2&gt;
      &lt;h3&gt;Temani Afif „Éª Aug 28 „Éª 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;He strike back with a cartoon 0-element version&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/alvaromontoro" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8ekLisLu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--aTV3h--8--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/161327/2ff05281-db58-4dcb-946a-4b679e4a266b.jpeg" alt="alvaromontoro"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/alvaromontoro/animated-no-element-typewriter-2835" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Animated no-element typewriter&lt;/h2&gt;
      &lt;h3&gt;Alvaro Montoro „Éª Aug 29 „Éª 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#art&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;Another warrior (&lt;a class="mentioned-user" href="https://dev.to/auroratide"&gt;@auroratide&lt;/a&gt;
) is trying to defeat us with an SVG version!&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/auroratide" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IQGc9Jrb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--yRZgsqjz--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/176563/df2440ff-8bcb-4662-bdd6-c1f1a5c06c0d.png" alt="auroratide"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/auroratide/a-typewriter-but-with-no-html-css-or-js-1bgd" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;A Typewriter, but with no HTML, CSS, or JS?!&lt;/h2&gt;
      &lt;h3&gt;Timothy Foster „Éª Aug 29 „Éª 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#codepen&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#svg&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;But, I am here with my secret weapon: &lt;strong&gt;the Scrabble writer!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_SU3W_vs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/X5wqqXmtbttG121WMy/giphy.gif%3Fcid%3Decf05e47jnr1ayqczx022cegqu9xawicym7361sdd8xiidct%26rid%3Dgiphy.gif%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_SU3W_vs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/X5wqqXmtbttG121WMy/giphy.gif%3Fcid%3Decf05e47jnr1ayqczx022cegqu9xawicym7361sdd8xiidct%26rid%3Dgiphy.gif%26ct%3Dg" alt="to be continued"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>css</category>
      <category>html</category>
      <category>webdev</category>
      <category>codepen</category>
    </item>
    <item>
      <title>Tutorials For Learning 10 Of The Most Helpful Python Modules</title>
      <author>Aya Bouchiha</author>
      <pubDate>Sun, 29 Aug 2021 20:17:24 +0000</pubDate>
      <link>https://dev.to/ayabouchiha/tutorials-for-learning-10-of-the-most-helpful-python-modules-73d</link>
      <guid>https://dev.to/ayabouchiha/tutorials-for-learning-10-of-the-most-helpful-python-modules-73d</guid>
      <description>&lt;p&gt;Hi, I'm &lt;a href="//developer.aya.b@gmail.com"&gt;Aya Bouchiha&lt;/a&gt;, on this beautiful and amazing day, we're going to talk about 10 helpful python modules.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#json"&gt;
  &lt;/a&gt;
  json
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;json:  is a built-in package used for reading json data, or converting data to json.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#articles-amp-youtube-videos"&gt;
  &lt;/a&gt;
  articles &amp;amp; youtube videos
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ayabouchiha/all-you-need-to-know-about-python-json-module-5ef0"&gt;https://dev.to/ayabouchiha/all-you-need-to-know-about-python-json-module-5ef0&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://realpython.com/python-json/"&gt;https://realpython.com/python-json/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.programiz.com/python-programming/json"&gt;https://www.programiz.com/python-programming/json&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.w3schools.com/python/python_json.asp"&gt;https://www.w3schools.com/python/python_json.asp&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#requests"&gt;
  &lt;/a&gt;
  requests
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;requests: This is a module that helps you to send http requests.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#articles-amp-youtube-videos"&gt;
  &lt;/a&gt;
  articles &amp;amp; youtube videos
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/ayabouchiha/sending-get-post-put-delete-requests-in-python-45o8"&gt;https://dev.to/ayabouchiha/sending-get-post-put-delete-requests-in-python-45o8&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.edureka.co/blog/python-requests-tutorial/"&gt;https://www.edureka.co/blog/python-requests-tutorial/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=tb8gHvYlCFs"&gt;https://www.youtube.com/watch?v=tb8gHvYlCFs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=KM_9in6ei50"&gt;https://www.youtube.com/watch?v=KM_9in6ei50&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#beautifulsoup"&gt;
  &lt;/a&gt;
  beautifulSoup
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;beautifulSoup: used for web scraping.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#articles-amp-youtube-videos"&gt;
  &lt;/a&gt;
  articles &amp;amp; youtube videos
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt; &lt;a href="https://www.youtube.com/watch?v=XVv6mJpFOb0"&gt;https://www.youtube.com/watch?v=XVv6mJpFOb0&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://www.youtube.com/watch?v=ng2o98k983k"&gt;https://www.youtube.com/watch?v=ng2o98k983k&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://www.geeksforgeeks.org/implementing-web-scraping-python-beautiful-soup/"&gt;https://www.geeksforgeeks.org/implementing-web-scraping-python-beautiful-soup/&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#selenium"&gt;
  &lt;/a&gt;
  selenium
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;selenium: for controlling web browsers through programs and performing browser automation.&lt;a href="https://www.geeksforgeeks.org/selenium-python-tutorial/"&gt;more details&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#articles-amp-youtube-videos"&gt;
  &lt;/a&gt;
  articles &amp;amp; youtube videos
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.geeksforgeeks.org/selenium-python-tutorial/"&gt;https://www.geeksforgeeks.org/selenium-python-tutorial/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.softwaretestinghelp.com/selenium-python-tutorial/"&gt;https://www.softwaretestinghelp.com/selenium-python-tutorial/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=3dQY_JqGalk"&gt;https://www.youtube.com/watch?v=3dQY_JqGalk&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#math"&gt;
  &lt;/a&gt;
  math
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;math: used for performing mathematical tasks&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#articles-amp-youtube-videos"&gt;
  &lt;/a&gt;
  articles &amp;amp; youtube videos
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.programiz.com/python-programming/modules/math"&gt;https://www.programiz.com/python-programming/modules/math&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://realpython.com/python-math-module/"&gt;https://realpython.com/python-math-module/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/ayabouchiha/5-helpful-python-math-module-methods-44gf"&gt;https://dev.to/ayabouchiha/5-helpful-python-math-module-methods-44gf&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#os"&gt;
  &lt;/a&gt;
  os
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;os: used for interacting with the operating system.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#articles-amp-youtubes-videos"&gt;
  &lt;/a&gt;
  articles &amp;amp; youtubes videos
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/ayabouchiha/6-helpful-os-module-methods-5e3k"&gt;https://dev.to/ayabouchiha/6-helpful-os-module-methods-5e3k&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.tutorialsteacher.com/python/os-module"&gt;https://www.tutorialsteacher.com/python/os-module&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.analyticsvidhya.com/blog/2021/05/30-useful-methods-from-python-os-module/"&gt;https://www.analyticsvidhya.com/blog/2021/05/30-useful-methods-from-python-os-module/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=tJxcKyFMTGo"&gt;https://www.youtube.com/watch?v=tJxcKyFMTGo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#csv"&gt;
  &lt;/a&gt;
  csv
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;csv: used for interacting with csv files.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#articles-amp-youtubes-videos"&gt;
  &lt;/a&gt;
  articles &amp;amp; youtubes videos
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.python.org/3/library/csv.html"&gt;https://docs.python.org/3/library/csv.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://realpython.com/python-csv/"&gt;https://realpython.com/python-csv/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.geeksforgeeks.org/working-csv-files-python/"&gt;https://www.geeksforgeeks.org/working-csv-files-python/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#array"&gt;
  &lt;/a&gt;
  array
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;array: for defining an object type that can compactly represent an array of basic values: characters, integers, floating-point numbers. &lt;a href="https://docs.python.org/3/library/array.html"&gt;more details&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#articles-amp-youtubes-videos"&gt;
  &lt;/a&gt;
  articles &amp;amp; youtubes videos
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://data-flair.training/blogs/python-array-module/"&gt;https://data-flair.training/blogs/python-array-module/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.programiz.com/python-programming/array"&gt;https://www.programiz.com/python-programming/array&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.geeksforgeeks.org/python-arrays/"&gt;https://www.geeksforgeeks.org/python-arrays/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#random"&gt;
  &lt;/a&gt;
  random
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;random: used for generating random numbers.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#articles-amp-youtubes-videos"&gt;
  &lt;/a&gt;
  articles &amp;amp; youtubes videos
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/ayabouchiha/5-helpful-python-random-module-methods-10g1"&gt;https://dev.to/ayabouchiha/5-helpful-python-random-module-methods-10g1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.geeksforgeeks.org/python-random-module/#:~:text=Python%20Random%20module%20is%20an,a%20list%20or%20string%2C%20etc."&gt;https://www.geeksforgeeks.org/python-random-module/#:~:text=Python%20Random%20module%20is%20an,a%20list%20or%20string%2C%20etc.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=KzqSDvzOFNA"&gt;https://www.youtube.com/watch?v=KzqSDvzOFNA&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#pandas"&gt;
  &lt;/a&gt;
  pandas
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;pandas: used for data analysis&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#articles-amp-youtubes-videos"&gt;
  &lt;/a&gt;
  articles &amp;amp; youtubes videos
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.geeksforgeeks.org/python-data-analysis-using-pandas/"&gt;https://www.geeksforgeeks.org/python-data-analysis-using-pandas/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3schools.com/python/pandas/default.asp"&gt;https://www.w3schools.com/python/pandas/default.asp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=PfVxFV1ZPnk"&gt;https://www.youtube.com/watch?v=PfVxFV1ZPnk&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Have a good day :)&lt;/p&gt;

</description>
      <category>python</category>
      <category>codenewbie</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>Introduction</title>
      <author>ksanroman</author>
      <pubDate>Sun, 29 Aug 2021 20:08:08 +0000</pubDate>
      <link>https://dev.to/ksanroman/introduction-3dmf</link>
      <guid>https://dev.to/ksanroman/introduction-3dmf</guid>
      <description>&lt;p&gt;Hi my name is Karina San Roman. I am a senior Human Centered design and development major and have a minor in SRA. I am from Long Island New York and I am the youngest of 7. I am interested in web development because my major revolves heavly around it. I also enjoy programming and web development so I am very excited for this semester. I have used javascript before but not much so I am looking forward to learning more about it and becoming familiar with it. &lt;/p&gt;

</description>
    </item>
    <item>
      <title>Building a habit </title>
      <author>Clever coder</author>
      <pubDate>Sun, 29 Aug 2021 19:52:31 +0000</pubDate>
      <link>https://dev.to/yusuf_software/building-a-habit-lgg</link>
      <guid>https://dev.to/yusuf_software/building-a-habit-lgg</guid>
      <description>&lt;p&gt;"Rome wasn't built in a day"&lt;/p&gt;

&lt;p&gt;You probably know this quote and its meaning, which is, "Great things take time".&lt;/p&gt;

&lt;p&gt;The same goes to building an amazing lifestyle or being a great Techie üôÇ&lt;/p&gt;

&lt;p&gt;It's all about the game of "&lt;em&gt;patience&lt;/em&gt;".&lt;/p&gt;

&lt;p&gt;If you play it right, you'll become successful, if you try to cheat, you'll fail in the process.&lt;/p&gt;

&lt;p&gt;The #1 reason you fail in building a habit, is because you don't try to build habits, but you try to build a lifestyle.&lt;/p&gt;

&lt;p&gt;Habit ‚â† Good Lifestyle&lt;/p&gt;

&lt;p&gt;Habits compounded = Good Lifestyle&lt;/p&gt;

&lt;p&gt;You can't build an amazing lifestyle, without building great habits.&lt;/p&gt;

&lt;p&gt;To build great habits, you need to be patient and build ONE at a time.&lt;/p&gt;

&lt;p&gt;I've tried it both ways, and I've failed horribly.&lt;/p&gt;

&lt;p&gt;I've tried building 10 habits at once and building 1 habit at a time and I've noticed the second is more effective.&lt;/p&gt;

&lt;p&gt;Why?&lt;/p&gt;

&lt;p&gt;I'll explain.&lt;/p&gt;

&lt;p&gt;Think about the reason why you never succeed with your new year's resolutions?&lt;/p&gt;

&lt;p&gt;You don't have patience.&lt;/p&gt;

&lt;p&gt;You expect results fast.&lt;/p&gt;

&lt;p&gt;When you start to build too many habits all at the same time, you overwhelm yourself with all these new things and when the excitement wears off, you slip out of it.&lt;/p&gt;

&lt;p&gt;Because it's not fun anymore, you feel bored, you get disappointed because your lifestyle didn't change in a week or month.&lt;/p&gt;

&lt;p&gt;When you focus on building one habit at a time, you don‚Äôt feel overwhelmed but you feel obliged to do it on a daily basis.&lt;/p&gt;

&lt;p&gt;You can focus on building one habit for 21 days and then it becomes a daily ritual, after that you can start working on building another habit, and so on.&lt;/p&gt;

&lt;p&gt;If you follow this ‚Äî You will have successfully have built 17 new habits in 1 year.&lt;/p&gt;

&lt;p&gt;Doesn't that sound crazy? ü§Ø&lt;/p&gt;

&lt;p&gt;It only takes 21 days to build a habit.&lt;/p&gt;

&lt;p&gt;So take it one step at a time, build a habit, then another, and another, compounding towards building that amazing lifestyle you want.&lt;/p&gt;

&lt;p&gt;If I get good comments, I'll show you how to take actionable steps towards building great habits as a developer and how I track my habits and stick to them.&lt;/p&gt;

&lt;p&gt;Disclaimer: this are all personal view that work for me if if doesn't work for you maybe build yours.&lt;/p&gt;

&lt;p&gt;Drop by drop is the water pot filled. -Buddha&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>health</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>How to Design for Color Blindness</title>
      <author>Standly Mith</author>
      <pubDate>Sun, 29 Aug 2021 19:50:35 +0000</pubDate>
      <link>https://dev.to/standlymith/how-to-design-for-color-blindness-7e1</link>
      <guid>https://dev.to/standlymith/how-to-design-for-color-blindness-7e1</guid>
      <description>&lt;p&gt;Color blindness or color vision deficiency (CVD) affects around 1 in 12 men and 1 in 200 women worldwide. This means that for every 100 users that visit your website or app, up to 8 people could actually experience the content much differently that you‚Äôd expect. But how do you ensure that your user experience appeals equally to these visitors? We‚Äôre here to lend a helping hand. So, before you run to your design team in a panic, take a look at our roundup of top things to consider when designing a UX for color accessibility.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SA6dTFWO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4y79ahkcody4mv2it67u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SA6dTFWO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4y79ahkcody4mv2it67u.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;First up, what exactly is color blindness?&lt;/h2&gt;

&lt;p&gt;Most color blind people are able to see things just as clearly as the rest of the population, the difference is their inability to distinguish red, green, or blue light. The deficiency is the result of a mutation in the X-chromosome ‚Äì meaning women are more likely to be carriers than sufferers ‚Äì and it can manifest in 3 main ways.&lt;/p&gt;

&lt;p&gt;The most common is red/green color blindness, where sufferers mix up all colors which have red or green as part of the whole color. Those affected by Protan color blindness are less sensitive to red light, whilst sufferers of Deuteranopia have the same problem with green. For example, a person with Protanopia will confuse blue and purple because they can‚Äôt recognize the red element of the color purple. The third type of color deficiency, Tritanopia, is the least common and refers to sufferers who struggle to distinguish blue or yellow light. The image below shows what the rainbow may look like to individuals with each of these forms of color blindness. If you need to know more about it &lt;a href="https://www.colorblindnesstest.org/"&gt;check the colour blindness tool&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;How Can I Design for Better Color Accessibility?&lt;/h2&gt;

&lt;p&gt;You might be thinking: ‚Äúwhy should I bother designing for such a small group of users?‚Äù But generally, the elements that are favorable for colorblind users are actually considered to be good design practices in the wider sense. So if your site is well designed, it should already be accessible to all users.&lt;/p&gt;

&lt;p&gt;Designing for accessibility doesn‚Äôt mean that the aesthetic integrity of your design needs to suffer. With that in mind, here are the top five elements you should be focusing on for a colorblind-friendly UX:&lt;/p&gt;

&lt;h3&gt;1. Use both colors and symbols&lt;/h3&gt;

&lt;p&gt;You shouldn‚Äôt rely on color alone to convey a message; for example, certain types of color blindness might make it difficult or even impossible to see common red error messages. One approach is to use both colors and symbols where users‚Äô attention is required. A good example of this is Facebook‚Äôs form fields and the error messaging attached.&lt;/p&gt;

&lt;h3&gt;2. Keep it minimal&lt;/h3&gt;

&lt;p&gt;You should limit the color palette you use for your website; the fewer colors you use in your design, the fewer instances there will be for confusion.&lt;/p&gt;

&lt;p&gt;Not only is minimalistic design a timeless and aesthetically pleasing trend, it‚Äôs also useful when you‚Äôre designing for color accessibility.&lt;/p&gt;

&lt;h3&gt;3. Use patterns and textures to show contrast&lt;/h3&gt;

&lt;p&gt;Try to use different textures, as opposed to multiple colors, for elements that require emphasis. For example, it might be difficult for color blind users to interpret graphs and charts. In this case, it‚Äôs better to use contrasting patterns and, where possible, place text instead.&lt;/p&gt;

&lt;h3&gt;4. Be careful with contrasting colors and hues&lt;/h3&gt;

&lt;p&gt;Instead of relying on black and white as your only contrasting colors; try to use a range of clearly contrasting colors and hues in your design. For example, the game Word Feud uses four colors for its tiles that can be easily distinguished by those with or without color vision deficiency.&lt;/p&gt;

&lt;h3&gt;5. Avoid bad color combos&lt;/h3&gt;

&lt;p&gt;You need to be smart when picking out your color combinations. Since color blindness affects people in different ways, it‚Äôs difficult to determine which colors are ‚Äòsafe‚Äô to use in web design. That being said, here‚Äôs a few color combinations to avoid because they‚Äôre a potential nightmare to color blind users:&lt;/p&gt;

&lt;p&gt;‚Ä¢ Green &amp;amp; Red&lt;br&gt;
‚Ä¢ Green &amp;amp; Brown&lt;br&gt;
‚Ä¢ Blue &amp;amp; Purple&lt;br&gt;
‚Ä¢ Green &amp;amp; Blue&lt;br&gt;
‚Ä¢ Light Green &amp;amp; Yellow&lt;br&gt;
‚Ä¢ Blue &amp;amp; Grey&lt;br&gt;
‚Ä¢ Green &amp;amp; Grey&lt;br&gt;
‚Ä¢ Green &amp;amp; Black&lt;/p&gt;

&lt;p&gt;Well‚Ä¶ Some people go years without knowing they‚Äôre color blind as the effects can go relatively unnoticed unless someone else points them out. The image below is commonly used to test for color blindness ‚Äì give it a go! (You can find a link to the full test at the bottom of this article.)&lt;/p&gt;

&lt;h2&gt;Still not sure?&lt;/h2&gt;

&lt;p&gt;Ishihara Color Blindness Test: You can take the 38 plate based test and get feedback as well.&lt;/p&gt;

&lt;p&gt;Color Blind Check: an Android App created by Colorblindor where you can test whether you are color blind in ¬±60 seconds.&lt;/p&gt;

&lt;p&gt;Coblis: Color Blindness Simulator: here you can upload an image and take a look at what it‚Äôd look like through the eyes of people with different types of color blindness.&lt;/p&gt;

&lt;p&gt;Mobile Apps: here‚Äôs 3 Android and iOS apps specifically developed to help color blind users.&lt;/p&gt;

&lt;h2&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Generally, UX designers should create websites that are accessible and user-friendly to all. Unfortunately there isn‚Äôt a one-size-fits-all solution when designing for color blindness specifically, but there are a few essential UX design principles to bear in mind that will certainly help:&lt;/p&gt;

&lt;p&gt;‚Ä¢ Don‚Äôt only rely on color to convey a message&lt;br&gt;
‚Ä¢ Keep your color palette limited to 2 or 3 colors&lt;br&gt;
‚Ä¢ Use texture and patterns to show contrast&lt;br&gt;
‚Ä¢ Carefully select any contrasting colors and shades&lt;br&gt;
‚Ä¢ Avoid using bad color combinations&lt;/p&gt;

</description>
    </item>
    <item>
      <title>A Typewriter, but with no HTML, CSS, or JS?!</title>
      <author>Timothy Foster</author>
      <pubDate>Sun, 29 Aug 2021 19:49:21 +0000</pubDate>
      <link>https://dev.to/auroratide/a-typewriter-but-with-no-html-css-or-js-1bgd</link>
      <guid>https://dev.to/auroratide/a-typewriter-but-with-no-html-css-or-js-1bgd</guid>
      <description>&lt;p&gt;Apparently a battle of sorts has erupted amongst devs clamoring for the title of Best Typewriter Animator Person.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a class="mentioned-user" href="https://dev.to/alvaromontoro"&gt;@alvaromontoro&lt;/a&gt;
 started with a &lt;a href="https://dev.to/alvaromontoro/typewriter-effect-with-css-38im"&gt;Typewriter effect in CSS&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a class="mentioned-user" href="https://dev.to/afif"&gt;@afif&lt;/a&gt;
 then gave us &lt;a href="https://dev.to/afif/a-scalable-css-only-typewriter-effect-2opn"&gt;A scalable CSS only Typewriter Effect&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a class="mentioned-user" href="https://dev.to/inhuofficial"&gt;@inhuofficial&lt;/a&gt;
 has promised us an HTML-only typewriter&lt;/li&gt;
&lt;li&gt;And &lt;a class="mentioned-user" href="https://dev.to/alvaromontoro"&gt;@alvaromontoro&lt;/a&gt;
 came back with an &lt;a href="https://dev.to/alvaromontoro/animated-no-element-typewriter-2835"&gt;Animated no-element typewriter &lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In the classic spirit of one-uppery that has arisen, it was only a matter of time before &lt;em&gt;someone&lt;/em&gt;, &lt;em&gt;somewhere&lt;/em&gt; took on the most legendary of tasks: to create a typewriter animation for the web without using &lt;em&gt;anything&lt;/em&gt;. No Javascript. No CSS. Not even HTML.&lt;/p&gt;

&lt;p&gt;Behold, the power of &lt;strong&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/SVG"&gt;Scalable Vector Graphics&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/auroratide/embed/ExXVdZG?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Ok but actually &lt;strong&gt;don't use this&lt;/strong&gt; if you want a typewriter animation! It's got browser compatibility and accessibility issues, but at least it's a cute experiment.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-it-works"&gt;
  &lt;/a&gt;
  How it works
&lt;/h2&gt;

&lt;p&gt;The SVG spec has something called &lt;a href="https://developer.mozilla.org/en-US/docs/Web/SVG/SVG_animation_with_SMIL"&gt;Synchronized Multimedia Integration Language&lt;/a&gt; (SMIL) which allows animations to be defined in the XML document directly.&lt;/p&gt;

&lt;p&gt;For example, consider the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/SVG/Element/animate"&gt;animate&lt;/a&gt; tag. When made a child of some shape like &lt;code&gt;rect&lt;/code&gt;, you can choose what attribute to animate over time and specify the way in which it changes.&lt;/p&gt;

&lt;p&gt;So for example, the text cursor is given a simple blink animation just by adjusting the width of a rectangle between 0 and 1, and doing it discretely so it blinks:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight xml"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;rect&lt;/span&gt; &lt;span class="na"&gt;fill=&lt;/span&gt;&lt;span class="s"&gt;"black"&lt;/span&gt; &lt;span class="na"&gt;x=&lt;/span&gt;&lt;span class="s"&gt;"0"&lt;/span&gt; &lt;span class="na"&gt;y=&lt;/span&gt;&lt;span class="s"&gt;"4"&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"1"&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;"12"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;animate&lt;/span&gt;
    &lt;span class="na"&gt;attributeName=&lt;/span&gt;&lt;span class="s"&gt;"width"&lt;/span&gt;
    &lt;span class="na"&gt;calcMode=&lt;/span&gt;&lt;span class="s"&gt;"discrete"&lt;/span&gt;
    &lt;span class="na"&gt;values=&lt;/span&gt;&lt;span class="s"&gt;"1; 0"&lt;/span&gt;
    &lt;span class="na"&gt;dur=&lt;/span&gt;&lt;span class="s"&gt;"1s"&lt;/span&gt;
    &lt;span class="na"&gt;repeatCount=&lt;/span&gt;&lt;span class="s"&gt;"indefinite"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/rect&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is the first time I've ever used SMIL, so almost certainly someone smarter than me can find a better way than adjusting an overlaying white rectangle!&lt;/p&gt;

</description>
      <category>codepen</category>
      <category>svg</category>
      <category>html</category>
    </item>
    <item>
      <title>Building a Twitter Sidebar Clone with Material-UI and React</title>
      <author>OpenReplay Tech Blog</author>
      <pubDate>Sun, 29 Aug 2021 19:21:23 +0000</pubDate>
      <link>https://dev.to/asayerio_techblog/building-a-twitter-sidebar-clone-with-material-ui-and-react-2m2g</link>
      <guid>https://dev.to/asayerio_techblog/building-a-twitter-sidebar-clone-with-material-ui-and-react-2m2g</guid>
      <description>&lt;p&gt;&lt;em&gt;by author &lt;a href=""&gt;Taminoturoko Briggs&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Material-UI is an  open-source React component library for building responsive UI applications. It's a reliable component library that provides React components that can be easily customized to meet our UI development needs.&lt;br&gt;
Material-UI is based on &lt;a href="https://material.io/design/introduction"&gt;Google‚Äôs Material Design&lt;/a&gt;, providing a high-quality digital experience while developing front-end applications.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#benefits-of-using-materialui"&gt;
  &lt;/a&gt;
  Benefits of using Material-UI
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Well-designed responsive components, helping you to focus more on business logic.&lt;/li&gt;
&lt;li&gt;A large community and properly written document.&lt;/li&gt;
&lt;li&gt;Design consistency&lt;/li&gt;
&lt;li&gt;Faster development with ready-made components.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These are just some of the benefits of using Material-UI.&lt;/p&gt;

&lt;p&gt;Material-UI also has some drawbacks like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Missing components.&lt;/li&gt;
&lt;li&gt;Also, it's not intuitive to use.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#materialui-usage"&gt;
  &lt;/a&gt;
  Material-UI usage
&lt;/h2&gt;

&lt;p&gt;To get started with Material-UI, you have to first install the &lt;a href="https://www.npmjs.com/package/@material-ui/core"&gt;npm package&lt;/a&gt;.&lt;br&gt;
You can do that with this command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// with npm
$ npm install @material-ui/core

// with yarn
$ yarn add @material-ui/core
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After installation, to start using the components all you have to do is import them.&lt;br&gt;
Here is a quick example of how you can use the Button components.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Button&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@material-ui/core/Button&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Button&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nx"&gt;Hello&lt;/span&gt; &lt;span class="nx"&gt;World&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is really all you need to start using Material UI.&lt;/p&gt;

&lt;p&gt;Here are some use cases for Material UI.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Icons ‚Äî There are over 1,100+ React material icons ready to use from the &lt;a href="https://material-ui.com/components/material-icons/"&gt;official site&lt;/a&gt;. There is also an option to change the looks of these icons to be either Filled, Outlined, Rounded, etc.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wXslnrsO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ux0ommpsfnr0x5adyb8x.png" alt=""&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;AddShoppingCartIcon&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@material-ui/icons/AddShoppingCart&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;AddAPhotoOutlinedIcon&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@material-ui/icons/AddAPhotoOutlined&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;HomeRoundedIcon&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@material-ui/icons/HomeRounded&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;ContactMailTwoToneIcon&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@material-ui/icons/ContactMailTwoTone&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;MailSharpIcon&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@material-ui/icons/MailSharp&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="na"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;flex&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;justifyContent&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;space-evenly&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;marginTop&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;70&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;AddShoppingCartIcon&lt;/span&gt; &lt;span class="nx"&gt;fontSize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;large&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;AddAPhotoOutlinedIcon&lt;/span&gt; &lt;span class="nx"&gt;fontSize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;large&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;HomeRoundedIcon&lt;/span&gt; &lt;span class="nx"&gt;fontSize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;large&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ContactMailTwoToneIcon&lt;/span&gt; &lt;span class="nx"&gt;fontSize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;large&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;MailSharpIcon&lt;/span&gt; &lt;span class="nx"&gt;fontSize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;large&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
   &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, we imported the Icons from the material-ui icon package then rendered them in the &lt;strong&gt;App&lt;/strong&gt; component. We also passed a &lt;strong&gt;fontSize&lt;/strong&gt; prop to the icons with a value ‚Äúlarge‚Äù, which will make the icons large. This is one of the props that can be used to customize the icons. You can take a look at others in the &lt;a href="https://material-ui.com/api/icon/"&gt;Icon API docs&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Note: Before using Material-UI icons, you have to install the icon package which is &lt;strong&gt;@material-ui/icons.&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Grid systems ‚Äî With Material UI Grid component, you can create responsive grid layouts.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f6CB3hm1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xa3moxg4og65bu823ojk.png" alt=""&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Grid&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@material-ui/core/Grid&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Paper&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@material-ui/core/Paper&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Grid&lt;/span&gt; &lt;span class="nx"&gt;container&lt;/span&gt; &lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;90%&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;0 auto&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Grid&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="nx"&gt;xs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Paper&lt;/span&gt; &lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Paper&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Grid&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Grid&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="nx"&gt;xs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Paper&lt;/span&gt; &lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Paper&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Grid&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Grid&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="nx"&gt;xs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Paper&lt;/span&gt; &lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Paper&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Grid&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Grid&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;At the top of the code, we imported the Grid component from the material-ui package, we also imported a Paper component which adds a nice box-shadow to the Grid.&lt;br&gt;
The Grid component behaves like a CSS flexbox. In the first Grid component we rendered, we passed a prop called &lt;strong&gt;container&lt;/strong&gt;, this makes it have a flex container behaviour, it defines a flex context for all its direct children. Then, in the other Grid‚Äôs which are under the container Grid, we passed an &lt;strong&gt;item&lt;/strong&gt; prop to them, this gives them a flex item behaviour, we also passed an &lt;strong&gt;xs&lt;/strong&gt; prop which defines the number of grid space the component will use for very small screen and also wider screen if not handled. The highest number of grids is 12 which means the Grid component we passed an &lt;strong&gt;xs&lt;/strong&gt; prop of 12 to will occupy the entire screen width. There are also other props that can be used to target other screen sizes like &lt;strong&gt;xl&lt;/strong&gt; for very large screens, &lt;strong&gt;md&lt;/strong&gt; for middle screens, etc. You can take a look at the others in the &lt;a href="https://material-ui.com/api/grid/"&gt;Grid API docs&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Navigations ‚Äî Material-UI has different navigation components that you can utilize to meet your navigation requirements, like Bottom Navigation, Breadcrumb, etc. Here is an example of how to use the Bottom Navigation component.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UptqD7Oo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v49p7dbdh9joqg7b841j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UptqD7Oo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v49p7dbdh9joqg7b841j.png" alt=""&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;BottomNavigation&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@material-ui/core/BottomNavigation&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;BottomNavigationAction&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@material-ui/core/BottomNavigationAction&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;FolderIcon&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@material-ui/icons/Folder&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;RestoreIcon&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@material-ui/icons/Restore&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;FavoriteIcon&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@material-ui/icons/Favorite&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;LocationOnIcon&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@material-ui/icons/LocationOn&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setValue&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;recents&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handleChange&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;newValue&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;setValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newValue&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;BottomNavigation&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;handleChange&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;70px auto&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;BottomNavigationAction&lt;/span&gt; &lt;span class="nx"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Recents&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;recents&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;icon&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;RestoreIcon&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;BottomNavigationAction&lt;/span&gt; &lt;span class="nx"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Favorites&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;favorites&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;icon&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;FavoriteIcon&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;BottomNavigationAction&lt;/span&gt; &lt;span class="nx"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Nearby&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;nearby&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;icon&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;LocationOnIcon&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;BottomNavigationAction&lt;/span&gt; &lt;span class="nx"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Folder&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;folder&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;icon&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;FolderIcon&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/BottomNavigation&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To create Bottom navigation that displays a nice animation when clicked, this is literally all you have to do. In the above code what we did majorly was setting an initial value to the state, we defined a &lt;strong&gt;handleChange&lt;/strong&gt; function that is responsible for changing the state when it is called, we rendered the &lt;code&gt;ButtomNavigation&lt;/code&gt; component passing it a &lt;strong&gt;value&lt;/strong&gt; prop which holds the current value of the state, we also passed an &lt;strong&gt;onChange&lt;/strong&gt; event which calls the &lt;strong&gt;handleChange&lt;/strong&gt; function, Finally, we used the BottomNavigationAction component to display action for the Bottom Navigation.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#exploring-materialui"&gt;
  &lt;/a&gt;
  Exploring Material-UI
&lt;/h2&gt;

&lt;p&gt;Using Material-UI to meet your UI needs can really save a lot of time while developing an application. In the previous section, we have seen some cool components that Material-UI provides but that isn‚Äôt all, Material-UI has a lot more. Also, there are API references for each Material-UI component which can be a big help when making use of them. In this section, we will cover all of this and we will also cover Material-UI styles.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#materialui-component"&gt;
  &lt;/a&gt;
  Material-UI component
&lt;/h3&gt;

&lt;p&gt;Material-UI components are divided into eight(8) categories.&lt;br&gt;
Here is a list of the categories and the most common of their components:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Layout ‚Äî Container, Grid, Box, Image List, etc.&lt;/li&gt;
&lt;li&gt;Inputs ‚Äî Button, Checkbox, Radio, Text Field, etc.&lt;/li&gt;
&lt;li&gt;Navigation ‚Äî Button Navigation, Breadcrumbs, Drawer, Link Menu, etc.&lt;/li&gt;
&lt;li&gt;Surfaces ‚Äî App Bar, Paper, Card, Accordion.&lt;/li&gt;
&lt;li&gt;Feedback ‚Äî Progress, Dialog, Snackbar, Backdrop.&lt;/li&gt;
&lt;li&gt;Data Display ‚Äî Avatar, Badge, Chip, Divider, Icons, Material Icons, etc.&lt;/li&gt;
&lt;li&gt;Utils ‚Äî CSS Baseline, Modal, Click Away Listener, Portal, etc.&lt;/li&gt;
&lt;li&gt;Lab ‚Äî Alert, Autocomplete, Pagination, Speed Dail, etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To view the list of all the components Material-UI provides, go to the &lt;a href="https://material-ui.com/"&gt;Material-UI&lt;/a&gt; official site, click on the menu icon, and in the sidebar click on Components.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#materialui-component-api"&gt;
  &lt;/a&gt;
  Material-UI component API
&lt;/h3&gt;

&lt;p&gt;The component API provides detailed documentation of the props and CSS customization points for Material-UI components.&lt;/p&gt;

&lt;p&gt;You will find the component API section in the sidebar of Material-UI‚Äôs official site.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#materialui-styles"&gt;
  &lt;/a&gt;
  Material-UI styles
&lt;/h3&gt;

&lt;p&gt;Material-UI styles provide an alternative means of styling components, whether or not you are using Material-UI components. It‚Äôs not compulsory to use Material-UI‚Äôs styling solution since it is interoperable with all the major styling solutions.&lt;br&gt;
There are three APIs you can use to generate and apply Material UI styles, they are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hook API&lt;/li&gt;
&lt;li&gt;Styled components API &lt;/li&gt;
&lt;li&gt;Higher-order components API&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can read about these APIs and how to get started with them in &lt;a href="https://material-ui.com/styles/basics/"&gt;Material-UI docs&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;At this point, you know what Material-UI is, its benefits, and more. Now let's build something with it. In the following sections, we will build a Twitter sidebar clone, utilizing Material Icons and button components.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting started
&lt;/h2&gt;

&lt;p&gt;First, let‚Äôs create a new React app and also Install the dependencies for our application.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#creating-and-setting-up-react"&gt;
  &lt;/a&gt;
  Creating and setting up React
&lt;/h3&gt;

&lt;p&gt;Type the following command in your terminal to create a new React app&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ npx create-react-app twitter_sidebar
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here our app's name is &lt;strong&gt;twitter_sidebar,&lt;/strong&gt; but you can give it any name you want as long as it's not a restricted npm name. After the installation is complete, in the &lt;strong&gt;src&lt;/strong&gt; directory of the &lt;strong&gt;twitter_sidebar&lt;/strong&gt; app delete (optional) the following files:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;App.test.js&lt;/li&gt;
&lt;li&gt;logo.svg&lt;/li&gt;
&lt;li&gt;setupTests.js&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We deleted these files because they are not relevant to us in our project.&lt;/p&gt;

&lt;p&gt;That‚Äôs not all, clean up the &lt;strong&gt;App.js&lt;/strong&gt; file and let what is left look like this:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;src/App.js&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./App.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;

    &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now that we have set up our React app, let's install the dependencies for our app.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#installing-dependencies"&gt;
  &lt;/a&gt;
  Installing dependencies
&lt;/h3&gt;

&lt;p&gt;In the terminal, make sure you are in the the &lt;strong&gt;twitter_sidebar&lt;/strong&gt; directory, then type in the following command to install the dependencies for our app.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// with npm
$ npm install @material-ui/core @material-ui/icons

// with yarn
$ yarn add @material-ui/core @material-ui/icons

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;These are the dependencies we need to build Twitter sidebar clone.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#open-source-session-replay"&gt;
  &lt;/a&gt;
  Open Source Session Replay
&lt;/h2&gt;

&lt;p&gt;Debugging a web application in production may be challenging and time-consuming. &lt;a href="https://github.com/openreplay/openreplay"&gt;OpenReplay&lt;/a&gt; is an Open-source alternative to FullStory, LogRocket and Hotjar. It allows you to monitor and replay everything your users do and shows how your app behaves for every issue. &lt;br&gt;
It‚Äôs like having your browser‚Äôs inspector open while looking over your user‚Äôs shoulder.&lt;br&gt;
OpenReplay is the only open-source alternative currently available.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MvoFt7Qf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/openreplay/openreplay/main/static/replayer.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MvoFt7Qf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/openreplay/openreplay/main/static/replayer.png" alt="OpenReplay"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Happy debugging, for modern frontend teams - &lt;a href="https://github.com/openreplay/openreplay"&gt;Start monitoring your web app for free&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#building-twitter-sidebar-clone"&gt;
  &lt;/a&gt;
  Building Twitter sidebar clone
&lt;/h2&gt;

&lt;p&gt;This is what we are going to build in this section.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ix_tvZPy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/69b2hdk6nhn8vtjqjv2e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ix_tvZPy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/69b2hdk6nhn8vtjqjv2e.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On the main Twitter sidebar, when you click on the More button, you will see a menu just like the one in our second image. We are going to be building that too. There are a few Twitter icons Material-UI does not have. For does we will improvise with other Material-UI icons. without further ado, let‚Äôs begin.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#building-sidebar-component"&gt;
  &lt;/a&gt;
  Building Sidebar component
&lt;/h3&gt;

&lt;p&gt;In the &lt;strong&gt;src&lt;/strong&gt; directory, create a &lt;strong&gt;Sidebar.js&lt;/strong&gt; file and add the following lines of code:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;src/Sidebar.js&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./sidebar.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;SidebarLink&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./SidebarLink&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Sidebar&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;sidebar&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;SidebarLink&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Home&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;SidebarLink&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Explore&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;SidebarLink&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Notifications&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;SidebarLink&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Messages&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;SidebarLink&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Bookmarks&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;SidebarLink&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Lists&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;SidebarLink&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Profile&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;SidebarLink&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;More&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Sidebar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;strong&gt;SidebarLink&lt;/strong&gt; component we used represents the options present in the Twitter sidebar clone. We will create this component shortly. But first, let's add the styling for our Sidebar component.&lt;br&gt;
In the &lt;strong&gt;src&lt;/strong&gt; directory, create a &lt;strong&gt;sidebar.css&lt;/strong&gt; file and add the following CSS style:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;src/sidebar.css&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.sidebar&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;250px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;min-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;250px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;6px&lt;/span&gt; &lt;span class="n"&gt;hsl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;210&lt;/span&gt; &lt;span class="m"&gt;14%&lt;/span&gt; &lt;span class="m"&gt;90%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, let's create the &lt;strong&gt;SidebarLink&lt;/strong&gt; component.&lt;br&gt;
In the &lt;strong&gt;src&lt;/strong&gt; directory, create a &lt;strong&gt;SidebarLink.js&lt;/strong&gt; file and add the following lines of code:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;src/SidebarLink.js&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./sidebarLink.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;SidebarLink&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;link&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h2&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;SidebarLink&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let‚Äôs add some styling for this component.&lt;br&gt;
In the &lt;strong&gt;src&lt;/strong&gt; directory, create a &lt;strong&gt;sidebarLink.css&lt;/strong&gt; file and add the following style:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;src/sidebarLink.css&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.link&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;cover&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;30px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.link&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#e8f5fe&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#50b7f5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="m"&gt;100ms&lt;/span&gt; &lt;span class="n"&gt;ease-out&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.link&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;h2&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;700&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin-right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let‚Äôs see how far we have gone in building the Twitter sidebar clone. But first, we need to render the &lt;strong&gt;Sidebar&lt;/strong&gt; component. Open the &lt;strong&gt;App.js&lt;/strong&gt; file and add the &lt;strong&gt;Sidebar&lt;/strong&gt; component to the return statements.&lt;br&gt;
The App.js file should now look like this:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;src/App.js&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./App.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Sidebar&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./Sidebar&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Sidebar&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Run the development server and open this link: &lt;a href="http://localhost:3000/"&gt;http://localhost:3000/&lt;/a&gt;,  you will see a screen like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qx0R7QHF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y4v54219107uwe1g7qxw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qx0R7QHF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y4v54219107uwe1g7qxw.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It‚Äôs not yet looking like the Twitter sidebar clone we want to build. Some things are missing, like the icons and button. We will use Material-UI components to handle that.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#using-materialui-components"&gt;
  &lt;/a&gt;
  Using Material-UI components
&lt;/h3&gt;

&lt;p&gt;We have already installed the dependencies needed to use Material-UI in our app, what we need to do now is to import the needed components and start using them.&lt;br&gt;
First, let‚Äôs add the icons.&lt;br&gt;
In the &lt;strong&gt;Sidebar.js&lt;/strong&gt; file import the icons from Material-UI like this:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;src/Sidebar.js&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;HomeIcon&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@material-ui/icons/Home&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;SearchIcon&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@material-ui/icons/Search&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;NotificationsNoneIcon&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@material-ui/icons/NotificationsNone&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;MailOutlineIcon&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@material-ui/icons/MailOutline&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;BookmarkBorderIcon&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@material-ui/icons/BookmarkBorder&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;ListAltIcon&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@material-ui/icons/ListAlt&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;PermIdentityIcon&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@material-ui/icons/PermIdentity&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;MoreHorizIcon&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@material-ui/icons/MoreHoriz&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, pass the icon components as props to &lt;strong&gt;SidebarLink&lt;/strong&gt; like this:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;src/Sidebar.js&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;...&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;SidebarLink&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Home&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;Icon&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;HomeIcon&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;SidebarLink&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Explore&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;Icon&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;SearchIcon&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;SidebarLink&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Notifications&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;Icon&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;NotificationsNoneIcon&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;SidebarLink&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Messages&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;Icon&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;MailOutlineIcon&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;SidebarLink&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Bookmarks&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;Icon&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;BookmarkBorderIcon&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;SidebarLink&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Lists&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;Icon&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;ListAltIcon&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;SidebarLink&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Profile&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;Icon&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;PermIdentityIcon&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;SidebarLink&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;More&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;Icon&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;MoreHorizIcon&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we need to destructure the icons component from the &lt;strong&gt;SidebarLink&lt;/strong&gt; props and also add it to the &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; element.&lt;br&gt;
In the &lt;strong&gt;SidebarLink.js&lt;/strong&gt; file, modify the &lt;strong&gt;SidebarLink&lt;/strong&gt; component to look like this:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;src/SidebarLink.js&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;SidebarLink&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Icon&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;link&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Icon&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h2&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let‚Äôs add some styling for the icons.&lt;br&gt;
In the &lt;strong&gt;sidebarLink.css&lt;/strong&gt; file, add the following CSS style:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;src/sidebarLink.css&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.link&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nc"&gt;.MuiSvgIcon-root&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In our CSS, we styled the &lt;strong&gt;.MuiSvgIcon-root&lt;/strong&gt; class name, this is how you style the root element of the Material UI icon component. You will see all the CSS customization points for the icons in the &lt;a href="https://material-ui.com/api/svg-icon/"&gt;Material-UI SvgIcon API&lt;/a&gt; documentation.&lt;/p&gt;

&lt;p&gt;Now if you start the development server and open the app, it should look like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tTVdvzYK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xmy2i52rdeypp1gsxafv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tTVdvzYK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xmy2i52rdeypp1gsxafv.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We have successfully added the icons, now what is left is to add the button.&lt;br&gt;
In the &lt;strong&gt;Sidebar.js&lt;/strong&gt; file import the Button component from Material-UI as follows:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;src/Sidebar.js&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Button&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@material-ui/core&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, include the &lt;strong&gt;Button&lt;/strong&gt; component before the ending of the &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; element of the &lt;strong&gt;Sidebar&lt;/strong&gt; component like this:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;src/Sidebar.js&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Button&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;tweet&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nx"&gt;Tweet&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, we gave the button and &lt;strong&gt;id&lt;/strong&gt; of ‚Äútweet‚Äù. You might be wondering why we used an &lt;strong&gt;id&lt;/strong&gt; instead of a class name. That's because &lt;strong&gt;id&lt;/strong&gt; have higher specificity than class, so styling we give the Button will override the style already given to the Button. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;src/Sidebar.js&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Sidebar&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;sidebar&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;SidebarLink&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Home&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;active&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;Icon&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;HomeIcon&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;SidebarLink&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Explore&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;Icon&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;SearchIcon&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;SidebarLink&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Notifications&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;Icon&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;NotificationsNoneIcon&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;SidebarLink&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Messages&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;Icon&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;MailOutlineIcon&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;SidebarLink&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Bookmarks&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;Icon&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;BookmarkBorderIcon&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;SidebarLink&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Lists&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;Icon&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;ListAltIcon&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;SidebarLink&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Profile&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;Icon&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;PermIdentityIcon&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;SidebarLink&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;More&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;Icon&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;MoreHorizIcon&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Button&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;tweet&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nx"&gt;Tweet&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let‚Äôs add some styling to make the Button component look nice.&lt;br&gt;
In the &lt;strong&gt;sidebar.css&lt;/strong&gt; file add the following lines of code:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;src/sidebar.css&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nf"&gt;#tweet&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;hsl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;203&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;89%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;64%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;700&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;text-transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;inherit&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now our Twitter sidebar clone looks like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nr-vYyoL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gakbgxiipgzf125qigf3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nr-vYyoL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gakbgxiipgzf125qigf3.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you click on the Tweet button, you will see a nice animation that displays from the point in the button you clicked. This is one cool feature Material-UI adds to all its clickable components.&lt;/p&gt;

&lt;p&gt;Now let's add the feature where when you click on the More button a menu will appear. For that, we are going to use Material-UI‚Äôs Menu component.&lt;br&gt;
Open the &lt;strong&gt;Sidebar.js&lt;/strong&gt; file and add the following imports:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;src/Sidebar.js&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Menu&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@material-ui/core/Menu&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;MenuItem&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@material-ui/core/MenuItem&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;These are what we need to start using the Menu component. We also need to import the Icons we are going to use for the menu.&lt;br&gt;
Add the following imports to the Sidebar.js file:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;src/Sidebar.js&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;BookmarkBorderOutlinedIcon&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@material-ui/icons/BookmarkBorderOutlined&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;ListAltOutlinedIcon&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@material-ui/icons/ListAltOutlined&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;ChatOutlinedIcon&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@material-ui/icons/ChatOutlined&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;OfflineBoltOutlinedIcon&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@material-ui/icons/OfflineBoltOutlined&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;PostAddOutlinedIcon&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@material-ui/icons/PostAddOutlined&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;CallMadeOutlinedIcon&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@material-ui/icons/CallMadeOutlined&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;BarChartOutlinedIcon&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@material-ui/icons/BarChartOutlined&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;SettingsOutlinedIcon&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@material-ui/icons/SettingsOutlined&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;HelpOutlineOutlinedIcon&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@material-ui/icons/HelpOutlineOutlined&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;BrushOutlinedIcon&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@material-ui/icons/BrushOutlined&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;AccessibilityNewOutlinedIcon&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@material-ui/icons/AccessibilityNewOutlined&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now that we have imported the Menu component, we need to render it in the Sidebar component.&lt;br&gt;
Add this code before the ending of the &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; element in the return statement of the Sidebar component:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;src/Sidebar.js&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Menu&lt;/span&gt;
    &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;long-menu&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="nx"&gt;open&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;open&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;onClose&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;handleClose&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Menu&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We passed an &lt;strong&gt;id&lt;/strong&gt; of ‚Äúlong-menu‚Äù, an &lt;strong&gt;open&lt;/strong&gt; prop with a variable open. If this variable is equal to true the menu will be open, otherwise, it wont‚Äôt. We also passed an &lt;strong&gt;onClose&lt;/strong&gt; prop which calls a &lt;strong&gt;handleClose&lt;/strong&gt; function, this function will be responsible for closing the Menu.&lt;br&gt;
First, let's create the open variable. This variable will reside in the state, which means we have to create a state for the Sidebar component. We will do that using the useState hook which we imported earlier.&lt;/p&gt;

&lt;p&gt;Add this line of code at the beginning of the Sidebar component:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;src/Sidebar.js&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;open&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setOpen&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, let‚Äôs create the &lt;strong&gt;handleClose&lt;/strong&gt; function.&lt;br&gt;
Add the following lines after the state we just created:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;src/Sidebar.js&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handleClose&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;setOpen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, let‚Äôs make it possible that when More is clicked on our Twitter sidebar clone it will display the Material-UI Menu. For that, we need to change the More link to a Button then add an &lt;strong&gt;onClick&lt;/strong&gt; event to it.&lt;/p&gt;

&lt;p&gt;In the Sidebar component, replace the the &lt;strong&gt;SidebarLink&lt;/strong&gt; which has &lt;strong&gt;text&lt;/strong&gt; prop equal to ‚ÄúMore‚Äù with this:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;src/Sidebar.js&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;...
&lt;span class="nt"&gt;&amp;lt;Button&lt;/span&gt; &lt;span class="na"&gt;onClick=&lt;/span&gt;&lt;span class="s"&gt;{handleClick}&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"moreLinks"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;MoreHorizIcon/&amp;gt;&lt;/span&gt; More
&lt;span class="nt"&gt;&amp;lt;/Button&amp;gt;&lt;/span&gt;
...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;strong&gt;onClick&lt;/strong&gt; event calls a &lt;strong&gt;handleClick&lt;/strong&gt; function that will be responsible for changing the state to true. &lt;br&gt;
Let‚Äôs create the &lt;strong&gt;handleClick&lt;/strong&gt; function. Add the following lines of code under the useState hook of Sidebar component:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;src/Sidebar.js&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handleClick&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;setOpen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The More button on our Twitter sidebar clone now works, but if you click on it now you won‚Äôt see anything. This is because we haven‚Äôt added the menu links. Let‚Äôs do that now.&lt;br&gt;
At the beginning of the Sidebar component, add the following line of code:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;src/Sidebar.js&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;link&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Bookmarks&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;BookmarkBorderOutlinedIcon&lt;/span&gt; &lt;span class="nx"&gt;fontSiz0px&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;link&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;List&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ListAltOutlinedIcon&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;link&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Topic&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ChatOutlinedIcon&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;link&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Moments&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;OfflineBoltOutlinedIcon&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;link&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Newsletters&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;PostAddOutlinedIcon&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;link&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Twitter Ads&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;CallMadeOutlinedIcon&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;link&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Analytics&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;BarChartOutlinedIcon&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;link&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Settings&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;SettingsOutlinedIcon&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;link&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Help Center&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;HelpOutlineOutlinedIcon&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;link&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Display&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;BrushOutlinedIcon&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;link&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Keyboard shortcuts&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;AccessibilityNewOutlinedIcon&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;

  &lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is an Array of the links and icons present in the menu. All we have to do now is to iterate through it and display it within the Material-UI Menu component. We are going to use JavaScript‚Äôs map function to loop through it, then we will use the &lt;strong&gt;MenuItem&lt;/strong&gt; component we imported earlier to display it with the Menu.&lt;/p&gt;

&lt;p&gt;Add the following lines of code within the &lt;strong&gt;Menu:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;src/Sidebar.js&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;option&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;MenuItem&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;option&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;link&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;handleClose&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;option&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;option&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;link&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/MenuItem&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;))}&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The Sidebar component now looks like this:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;src/Sidebar.js&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Sidebar&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;link&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Bookmarks&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;BookmarkBorderOutlinedIcon&lt;/span&gt; &lt;span class="nx"&gt;fontSiz0px&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;link&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;List&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ListAltOutlinedIcon&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;link&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Topic&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ChatOutlinedIcon&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;link&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Moments&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;OfflineBoltOutlinedIcon&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;link&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Newsletters&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;PostAddOutlinedIcon&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;link&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Twitter Ads&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;CallMadeOutlinedIcon&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;link&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Analytics&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;BarChartOutlinedIcon&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;link&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Settings&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;SettingsOutlinedIcon&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;link&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Help Center&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;HelpOutlineOutlinedIcon&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;link&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Display&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;BrushOutlinedIcon&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;link&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Keyboard shortcuts&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;AccessibilityNewOutlinedIcon&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;

  &lt;span class="p"&gt;];&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;open&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setOpen&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handleClick&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;setOpen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handleClose&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;setOpen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;

    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;sidebar&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;SidebarLink&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Home&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;Icon&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;HomeIcon&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;SidebarLink&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Explore&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;Icon&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;SearchIcon&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;SidebarLink&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Notifications&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;Icon&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;NotificationsNoneIcon&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;SidebarLink&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Messages&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;Icon&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;MailOutlineIcon&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;SidebarLink&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Bookmarks&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;Icon&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;BookmarkBorderIcon&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;SidebarLink&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Lists&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;Icon&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;ListAltIcon&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;SidebarLink&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Profile&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;Icon&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;PermIdentityIcon&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;handleClick&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;moreLinks&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;MoreHorizIcon&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;More&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Button&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;tweet&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nx"&gt;Tweet&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Menu&lt;/span&gt;
          &lt;span class="nx"&gt;open&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;open&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="nx"&gt;onClose&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;handleClose&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;long-menu&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;option&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;MenuItem&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;option&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;link&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;handleClose&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
              &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;option&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;option&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;link&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/MenuItem&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="p"&gt;))}&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Menu&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Our Twitter sidebar clone now looks something like this when the More button has been clicked:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0E1jFPj6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vj7dbnwq70zrt1xbfzqh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0E1jFPj6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vj7dbnwq70zrt1xbfzqh.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In our Twitter sidebar clone things like the More button, the Menu and the icons are not looking nice. Let‚Äôs add some styling to fix that.&lt;br&gt;
In the &lt;strong&gt;sidebar.css&lt;/strong&gt; file, add the following styling:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;src/sidebar.css&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nf"&gt;#moreLinks&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;30px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;700&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;unset&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin-right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;text-transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;inherit&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;black&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;60px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding-right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;30px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nf"&gt;#moreLinks&lt;/span&gt; &lt;span class="nc"&gt;.MuiSvgIcon-root&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;margin-right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nf"&gt;#moreLinks&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;hsl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;205&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;92%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;95%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;hsl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;203&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;89%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;64%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="m"&gt;100ms&lt;/span&gt; &lt;span class="n"&gt;ease-out&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nf"&gt;#long-menu&lt;/span&gt; &lt;span class="nc"&gt;.MuiMenu-paper&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;220px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;max-height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;40%&lt;/span&gt; &lt;span class="cp"&gt;!important&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;unset&lt;/span&gt; &lt;span class="cp"&gt;!important&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nf"&gt;#long-menu&lt;/span&gt; &lt;span class="nc"&gt;.MuiListItem-root&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;padding-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.MuiListItem-root&lt;/span&gt;&lt;span class="nd"&gt;:nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;6&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;border-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="n"&gt;hsl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;210&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;12%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;95%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.MuiListItem-root&lt;/span&gt; &lt;span class="nc"&gt;.MuiSvgIcon-root&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;hsl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;210&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;12%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;20%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;400&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin-right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With that, we are done building the Twitter sidebar clone, it now looks like this when the More button has been clicked:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3QUjEnT9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jqnxl3gjmbcvojxhwkqq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3QUjEnT9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jqnxl3gjmbcvojxhwkqq.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Material-UI is really a helpful library to use when developing the frontend. I really like the way all its clickable components display a cool animation when clicked and also how it makes it easy to use and customize SVG icons. &lt;br&gt;
Though there are still some useful icons and components that it doesn‚Äôt have yet, overall Material-UI is a nice component library to use in any web application.&lt;/p&gt;

</description>
      <category>react</category>
      <category>tutorial</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Edge Cases are the hardest parts of a Developer's job</title>
      <author>Renan Moura</author>
      <pubDate>Sun, 29 Aug 2021 18:46:04 +0000</pubDate>
      <link>https://dev.to/renanmouraf/edge-cases-are-the-hardest-parts-of-a-developer-s-job-6h9</link>
      <guid>https://dev.to/renanmouraf/edge-cases-are-the-hardest-parts-of-a-developer-s-job-6h9</guid>
      <description>&lt;p&gt;If you are a developer with not much experience you might feel like a lot of the parts of your job are really hard.&lt;/p&gt;

&lt;p&gt;The framework doesn't behave as it should.&lt;/p&gt;

&lt;p&gt;The database is locking.&lt;/p&gt;

&lt;p&gt;The language you are using has a weird way to deal with some situations that should be simpler or easier.&lt;/p&gt;

&lt;p&gt;Maybe you are fighting to center that div on your screen.&lt;/p&gt;

&lt;p&gt;All of those problems are legitimate and can drive you crazy.&lt;/p&gt;

&lt;p&gt;But once you get past these issues and become a master of your tools and how they behave in each and every situation then, and only then, you will feel the &lt;strong&gt;hardest&lt;/strong&gt; part of a developer's job: Edge Cases.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-i-mean-by-edge-cases"&gt;
  &lt;/a&gt;
  What I mean by edge cases?
&lt;/h2&gt;

&lt;p&gt;An edge case is a situation that you (and maybe not even your end-user) never thought would happen.&lt;/p&gt;

&lt;p&gt;You create a page where everything fits perfectly, you test it on mobile, on your computer, and on your super-sized TV, great!&lt;/p&gt;

&lt;p&gt;And then you deploy your app in production to find out how a user is having rendering issues when using Safari on an iPad and, curiously, on the same iPad, it works perfectly on Firefox, go figure.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Edge Cases are the hardest parts of a Developer's job.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The previous example is quite technical, but you got the idea.&lt;/p&gt;

&lt;p&gt;The same rationale applies to any layer of your app.&lt;/p&gt;

&lt;p&gt;If you implement business logic in your backend, you have to think about all of the possible combinations that might happen and test each and every one of them for your system to work bug-free.&lt;/p&gt;

&lt;p&gt;Most problems in software arise from edge cases.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-identify-and-avoid-problems-with-edge-cases"&gt;
  &lt;/a&gt;
  How to identify and avoid problems with Edge Cases?
&lt;/h2&gt;

&lt;p&gt;Communication.&lt;/p&gt;

&lt;p&gt;When writing business logic, the first thing to do to catch edge cases is to talk with your users, customers, clients, or any person who understands the problem in depth.&lt;/p&gt;

&lt;p&gt;Ask as much as possible, understand the situation and think about the possible edge cases.&lt;/p&gt;

&lt;p&gt;Remember there is a distance between regular manual work and automating this work with a system.&lt;/p&gt;

&lt;p&gt;There are edge cases your users might not even notice because they are so obvious to them, but not to you or anyone else.&lt;/p&gt;

&lt;p&gt;As said by Bill Gates:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The first rule of any technology used in a business is that automation applied to an efficient operation will magnify the efficiency. The second is that automation applied to an inefficient operation will magnify the inefficiency.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Most operations are inefficient, so be careful before automating anything.&lt;/p&gt;

&lt;p&gt;The second thing to avoid falling into an Edge Case trap is simple attention to detail.&lt;/p&gt;

&lt;p&gt;Attention to detail avoids problems related to the technical part while Communication avoids problems related to business logic.&lt;/p&gt;

&lt;p&gt;Attention to detail is for when you don't test your application with all kinds of screen sizes, or all browsers, or when all the planets align in a leap year and your app crashes (who knows).&lt;/p&gt;

&lt;p&gt;So, if you ask me, how do you evolve from a junior developer to a mid-level developer?&lt;/p&gt;

&lt;p&gt;My answer is: learn how to communicate clearly and learn to develop attention to detail.&lt;/p&gt;

&lt;p&gt;After learning general technical skills, these skills are the ones required to jump to another level in your career.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>programming</category>
      <category>career</category>
    </item>
    <item>
      <title>AWS Cognito Hosted UI</title>
      <author>Jones Zachariah Noel</author>
      <pubDate>Sun, 29 Aug 2021 18:44:14 +0000</pubDate>
      <link>https://dev.to/awscommunity-asean/aws-cognito-hosted-ui-34ep</link>
      <guid>https://dev.to/awscommunity-asean/aws-cognito-hosted-ui-34ep</guid>
      <description>&lt;p&gt;&lt;a href="https://aws.amazon.com/cognito/"&gt;AWS Cognito&lt;/a&gt; which is used for authentication and authorization features &lt;em&gt;Hosted UIs&lt;/em&gt; for Cognito User Pool. &lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/zachjonesnoel" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rTCEL73H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--2MTjnerN--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/615180/12ee3aca-f67e-4f08-986f-1bdfd7ca384b.jpg" alt="zachjonesnoel"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/zachjonesnoel/modern-apps-going-cognito-1o77" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Modern apps going Cognito&lt;/h2&gt;
      &lt;h3&gt;Jones Zachariah Noel „Éª May 16 „Éª 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#aws&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#awscognito&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#modernapplications&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#authorization&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
Previously in my post about &lt;strong&gt;Modern apps going Cognito&lt;/strong&gt;, had provided different ways to get started with Cognito User Pool integration on client applications. Where it was mentioned that, &lt;em&gt;Hosted UIs&lt;/em&gt; helps speeding up application integration. And we will deep dive into &lt;em&gt;Hosted UIs&lt;/em&gt; in this post.

&lt;h4&gt;
  &lt;a href="#key-takeaways-from-the-blog-"&gt;
  &lt;/a&gt;
  Key takeaways from the blog -
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Setting up Hosted UIs on AWS Cognito User Pool.&lt;/li&gt;
&lt;li&gt;Hosted UIs supported workflows.&lt;/li&gt;
&lt;li&gt;Customization of Hosted UIs.&lt;/li&gt;
&lt;li&gt;Options with Hosted UI URLs.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#setting-up-hosted-uis-on-aws-cognito-user-pool"&gt;
  &lt;/a&gt;
  Setting up Hosted UIs on AWS Cognito User Pool
&lt;/h4&gt;

&lt;p&gt;In this blog, the Cognito User Pool is already created and available to setup Hosted UI. To create one, you can refer to the mentioned post &lt;a href="https://dev.to/zachjonesnoel/modern-apps-going-cognito-1o77"&gt;Modern apps going Cognito&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Step 1 : Setup a app client in the created Cognito User Pool by navigating to the &lt;em&gt;App client&lt;/em&gt; menu in the Cognito User Pool details screen. To create a app client, provide a unique app name (the name has to be unique in the User Pool). And for the app client, you can set the token expiry/refresh time-out periods. 
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NalXISTD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p7ufgspg85rt3u7elhzm.PNG" alt="create a app client"&gt;
&lt;/li&gt;
&lt;li&gt;Step 2 : Setting up domain on Cognito User Pool, this can be done from the &lt;em&gt;Domain name&lt;/em&gt; menu under &lt;em&gt;App integration&lt;/em&gt;. 
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WqRGMKfb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/73cxb50nzkf1c5ew3ryb.PNG" alt="Setting up domain"&gt;
Types of domains supported - &lt;em&gt;Amazon Cognito Domain&lt;/em&gt; and &lt;em&gt;Custom domains&lt;/em&gt;. &lt;em&gt;Amazon Cognito Domain&lt;/em&gt; are the default domain name generated by Cogntio where you can choose a domain prefix (this domain prefix has to be unique across all Amazon domains), this has the format - &lt;code&gt;https://&amp;lt;domain-name&amp;gt;.auth.&amp;lt;aws-region&amp;gt;.amazoncognito.com&lt;/code&gt; &lt;em&gt;Custom domains&lt;/em&gt; have to verified domains with equivalent certificated on &lt;em&gt;AWS Certificate Manager (ACM)&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Step 3 : Setup app-client settings by navigating to the &lt;em&gt;App client settings&lt;/em&gt; menu under &lt;em&gt;App integration&lt;/em&gt;. Select the created app client in step 1. 
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oEc9L6RI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vwd1g7a8pwu00ke1qn7p.PNG" alt="app-client settings"&gt;
In this step you would have to provide re-directional links to your app after sign-in and sign-out (these URLs can be comma separated). In this demo, I would be using a web-app on &lt;em&gt;localhost&lt;/em&gt; but the production ready applications should use production URLs. For &lt;em&gt;Hosted UIs&lt;/em&gt;, the app-client should use a OAuth 2.0 workflow and should have a domain verified on Cognito User Pool. And if OAuth and domain constraints are satisfied, you will see a &lt;em&gt;Launch Hosted UI&lt;/em&gt; hyperlink, on click it will open the authentication Hosted UI on a new tab. 
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y1OxqWbh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u2tvtk1pjuyqnlaeord3.PNG" alt="Hosted UI"&gt;
And you can use the URL available in the browser to add to your application.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#hosted-uis-supported-workflows"&gt;
  &lt;/a&gt;
  Hosted UIs supported workflows
&lt;/h4&gt;

&lt;p&gt;Hosted UI supports the standard workflows provided by Cogntio User Pool - &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Sign-in : The standard workflow for sign-in to AWS Cognito User Pool. This uses the Cognito's configuration of the email/mobile number with password. 
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y1OxqWbh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u2tvtk1pjuyqnlaeord3.PNG" alt="Sign-in"&gt;
&lt;/li&gt;
&lt;li&gt;Sign-up : For the self-sign-up process, the &lt;em&gt;Hosted UIs&lt;/em&gt; take minimal information such as username, email/mobile number (based on the Cognito User Pool configuration), password. Which also validates on the password policy set in Cognito User Pool.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vW9A4gUH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ujfyuw0fb8svk1b63kfo.PNG" alt="Sign-up"&gt;
Once signed-up, the user has to be verified for that the confirmation workflow also is available. 
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iOt64aCh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lz5hxca29p56a0lkhigg.PNG" alt="confirmation "&gt;
&lt;/li&gt;
&lt;li&gt;Forgot password : The another standard authentication workflow supported is forgot password.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F-BxL2fT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hx2dd237pe9dsuc4n12r.PNG" alt="Forgot password"&gt;
This also requires a verification so a confirmation code is sent to the registered username.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OfXTt-iw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6s260luscfztfgpvz0mn.PNG" alt="verification "&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All of the mentioned workflows are the standard workflows supported natively on Cogntio User Pool, but Hosted UIs are currently not supporting &lt;em&gt;Custom Auth Flows&lt;/em&gt; as of now.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#customization-of-hosted-uis"&gt;
  &lt;/a&gt;
  Customization of Hosted UIs
&lt;/h4&gt;

&lt;p&gt;Similar to Amplify UI Components, the hosted UIs can also be customized. The customization is limited to adding a logo and other CSS customization with various classes of fields - &lt;em&gt;labels, input fields, error messages, background&lt;/em&gt; and many more.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f0DeQi60--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5tdrkvktz1art01xhbh4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f0DeQi60--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5tdrkvktz1art01xhbh4.png" alt="Customization options"&gt;&lt;/a&gt;&lt;br&gt;
With some of the customization on certain properties, the sign-in screen now looks like - &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Q-VhkLvC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rtp2yqiqk5n66c7d0xc7.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q-VhkLvC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rtp2yqiqk5n66c7d0xc7.PNG" alt="Customization of Hosted UIs"&gt;&lt;/a&gt;&lt;br&gt;
(P.S. Didn't have a logo so used a emoticon.)&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#options-with-hosted-ui-urls"&gt;
  &lt;/a&gt;
  Options with Hosted UI URLs
&lt;/h4&gt;

&lt;p&gt;The &lt;em&gt;Hosted UI&lt;/em&gt; URLs are based on the domain which was selected. With the URL, there are certain URL parameters which will help you integrate the right way. &lt;/p&gt;

&lt;p&gt;Basic format of Hosted UI URLs - &lt;code&gt;&amp;lt;domain-name&amp;gt;/&amp;lt;url-action&amp;gt;?client_id=&amp;lt;client-id-value&amp;gt;&amp;amp;response_type=&amp;lt;response_type&amp;gt;&amp;amp;scope=&amp;lt;selected-scope&amp;gt;&amp;amp;redirect_uri=&amp;lt;callback-url-selected&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Parameters - &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;&amp;lt;domain-name&amp;gt;&lt;/code&gt; - The selected and verified domain name. This can be the &lt;em&gt;Amazon Cognito Domain&lt;/em&gt; or &lt;em&gt;Custom domain&lt;/em&gt; whichever has been configured for the Cogntio Pool. 
If it is a &lt;em&gt;Amazon Cognito Domain&lt;/em&gt;, it would be in then the format &lt;code&gt;https://&amp;lt;domain-name&amp;gt;.auth.&amp;lt;aws-region&amp;gt;.amazoncognito.com/&lt;/code&gt;with &lt;code&gt;&amp;lt;domain-name&amp;gt;&lt;/code&gt; being the domain prefix selected in Step 2 and &lt;code&gt;&amp;lt;aws-region&amp;gt;&lt;/code&gt;being AWS region where the Cognito User Pool is created.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;&amp;lt;url-action&amp;gt;&lt;/code&gt; - The URL action based on the type of workflow, Eg. login, forgotpassword, sign-up.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;&amp;lt;client-id-value&amp;gt;&lt;/code&gt; - The selected app client's ID which has Hosted UI enabled.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;&amp;lt;response_type&amp;gt;&lt;/code&gt; - The type of response expected, Eg. code, token. If a code response is requested, the unique code is returned as a URL parameter in the callback URL. .
&lt;code&gt;https://www.example.com/#code=123456789code123456789&lt;/code&gt;
If token, then in the callback URL the bearer token along with expiry time is returned.
&lt;code&gt;https://www.example.com/#id_token=123456789tokens123456789&amp;amp;expires_in=3600&amp;amp;token_type=Bearer&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;&amp;lt;callback-url-selected&amp;gt;&lt;/code&gt; - In &lt;em&gt;App client settings&lt;/em&gt;, you can have multiple callback URLs configured with comma separated (Eg. &lt;a href="https://www.dev.to"&gt;https://www.dev.to&lt;/a&gt;, &lt;a href="https://www.google.com"&gt;https://www.google.com&lt;/a&gt;, &lt;a href="https://www.zachjonesnoel.com/"&gt;https://www.zachjonesnoel.com/&lt;/a&gt;) and whenever using the Hosted UI, one of the configured callback URLs can be used as &lt;code&gt;redirect_uri&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h4&gt;

&lt;p&gt;AWS Cognito User Pool's &lt;em&gt;Hosted UIs&lt;/em&gt; helps setting up authentication workflows in minutes and the ease of integration on the client-apps helps in speeding up the application development process. This is a pure no-code approach to get started with a fully-functional authentication module for your web or mobile application. Hosted UIs provides the feasibility to customize your UIs to match to your application theme. &lt;/p&gt;

</description>
      <category>cognito</category>
      <category>aws</category>
      <category>serverless</category>
      <category>nocode</category>
    </item>
    <item>
      <title>Industry focused roadmap to be JavaScript developer ‚Äì 2021</title>
      <author>Prashant Yadav</author>
      <pubDate>Sun, 29 Aug 2021 18:30:51 +0000</pubDate>
      <link>https://dev.to/learnersbucket/industry-focused-roadmap-to-be-javascript-developer-2021-1m2b</link>
      <guid>https://dev.to/learnersbucket/industry-focused-roadmap-to-be-javascript-developer-2021-1m2b</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i34fHg6B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/learnersbucket.com/wp-content/uploads/2021/08/Industry-focused-roadmap-to-be-JavaScript-developer-2021-2-1.png%3Fw%3D768%26ssl%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i34fHg6B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/learnersbucket.com/wp-content/uploads/2021/08/Industry-focused-roadmap-to-be-JavaScript-developer-2021-2-1.png%3Fw%3D768%26ssl%3D1" alt="Industry focused roadmap to be JavaScript developer ‚Äì 2021"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Visit &lt;a href="https://learnersbucket.com"&gt;learnersbucket.com&lt;/a&gt; If you are preparing for your JavaScript interview. You will find DSA, System Design and JavaScript Questions.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;An Industry Focused Roadmap to become Frontend Developer.&lt;/p&gt;

&lt;p&gt;This is guide is my recommendation of libraries/frameworks to learn each aspect of front-end development, based on their popularity across the industry.&lt;/p&gt;

&lt;p&gt;This roadmap is targeted at the freshers who are trying to understand front end. If you are already familiar with front end development and want to explore another perspective, then you are welcome to explore it.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: If you find an issue, please comment it down, I will try to fix it. Also if you like it, share it with others.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Pre-requisites
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Good understanding of core programming concepts.&lt;/li&gt;
&lt;li&gt;Already familiar with the working of web such as with web protocols and conventions like HTTP and RESTful APIs.&lt;/li&gt;
&lt;li&gt;Comfortable with basic command line actions.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table of contents
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#html"&gt;HTML&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#css"&gt;CSS: Cascading Style Sheets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#javascript"&gt;JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#spa"&gt;Single Page Application (SPA)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#react"&gt;React (A library to create Single Page Applications)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#redux"&gt;State Management ‚Äì Flux/Redux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#cssinjs"&gt;CSS Modules (CSS in JS)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Maintainability

&lt;ul&gt;
&lt;li&gt;&lt;a href="#eslint"&gt;Linting JavaScript ‚Äì ESLint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#csslint"&gt;Linting CSS ‚Äì stylelint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#prettier"&gt;Formatting Code ‚Äì Prettier&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#testing"&gt;Testing ‚Äì Jest + Enzyme&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Deployment and Hosting

&lt;ul&gt;
&lt;li&gt;&lt;a href="#git"&gt;Version Control System ‚Äì GIT&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#npm"&gt;Package Management ‚Äì NPM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#webpack"&gt;Build System ‚Äì webpack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#cicd"&gt;Deployment ‚Äì CI/CD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#cdn"&gt;Hosting and CDN&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Advanced Topics

&lt;ul&gt;
&lt;li&gt;&lt;a href="#typescript"&gt;Static Types ‚Äì Typescript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#react-native"&gt;Mobile App Development ‚Äì React Native&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#electronjs"&gt;Desktop App Development ‚Äì Electron JS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#nextjs"&gt;Server Side Rendering ‚Äì Next.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#pwa"&gt;Progressive Web Apps (PWA): The future of web development&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#html"&gt;
  &lt;/a&gt;
  HTML &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;HTML is a (Hypertext Markup Language) is not a programming language. It is a markup language that tells web browsers how to structure the web pages you visit. It can be as complicated or as simple as the web developer wants it to be.&lt;/p&gt;

&lt;p&gt;HTML consists of a series of elements, which you use to enclose, wrap, or markup different parts of content to make it appear or act in a certain way. The enclosing tags can make content into a hyperlink to connect to another page, italicize words, and so on. For example, consider the following line of text:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;p&amp;gt;Hello World!.&amp;lt;/p&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Below figure represents the anatomy of HTML.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KBiavJzJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/developer.mozilla.org/en-US/docs/Learn/HTML/Introduction_to_HTML/Getting_started/grumpy-cat-small.png%3Fw%3D1170%26ssl%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KBiavJzJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/developer.mozilla.org/en-US/docs/Learn/HTML/Introduction_to_HTML/Getting_started/grumpy-cat-small.png%3Fw%3D1170%26ssl%3D1" alt="Anatomy of HTML (MDN)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;HTML is very important from the SEO perspective thus HTML5 introduced many new tags which really helps in SEO optimization.&lt;/p&gt;

&lt;p&gt;Apart from that, accessibility is also an important thing to learn in HTML to make sure web-apps are accessible to everyone through different devices.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#things-to-learn-in-html"&gt;
  &lt;/a&gt;
  Things to learn in HTML.
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;SEMANTIC HTML (HTML5)&lt;/li&gt;
&lt;li&gt;Accessibility&lt;/li&gt;
&lt;li&gt;DOM&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Estimated Time to learn:- 10 to 15 days (3 ‚Äì 4 hrs daily).&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#study-links"&gt;
  &lt;/a&gt;
  Study Links.
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Introduction_to_HTML/Getting_started"&gt;MDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developers.google.com/web"&gt;Web.dev&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=pQN-pnXPaVg"&gt;Freecodecamp&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#css-cascading-style-sheets"&gt;
  &lt;/a&gt;
  CSS: Cascading Style Sheets &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Cascading Style Sheets (CSS) is a stylesheet language used to describe the presentation of a document written in HTML or XML (including XML dialects such as SVG, MathML or XHTML). CSS describes how elements should be rendered on screen, on paper, in speech, or on other media.&lt;/p&gt;

&lt;p&gt;It is extremely important to have a good understanding of CSS, it may seem simple but is quite complex to work with. Writing cross device / browser style can be challenging at times.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#things-to-study-under-css"&gt;
  &lt;/a&gt;
  Things to study under css.
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;CSS Specificity&lt;/li&gt;
&lt;li&gt;CSS Pre-processors&lt;/li&gt;
&lt;li&gt;CSS resetting / normalization&lt;/li&gt;
&lt;li&gt;CSS Architecture(BEM)&lt;/li&gt;
&lt;li&gt;Floats&lt;/li&gt;
&lt;li&gt;Flexbox &amp;amp; Grids&lt;/li&gt;
&lt;li&gt;SVG&lt;/li&gt;
&lt;li&gt;Media Queries&lt;/li&gt;
&lt;li&gt;Display Properties&lt;/li&gt;
&lt;li&gt;Position properties&lt;/li&gt;
&lt;li&gt;Animations&lt;/li&gt;
&lt;li&gt;Psuedo Classes&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Estimated Time to learn:- 10 ‚Äì 15 days (3 ‚Äì 4 hrs daily).&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#study-links"&gt;
  &lt;/a&gt;
  Study Links.
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS"&gt;MDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://smacss.com/"&gt;Smaccs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://css-tricks.com/"&gt;CSS-Tricks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=1Rs2ND1ryYc"&gt;CSS Tutorial ‚Äì Zero to Hero (Complete Course)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=ieTHC78giGQ"&gt;CSS Full Course ‚Äì Includes Flexbox and CSS Grid Tutorials&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#advanced-css"&gt;
  &lt;/a&gt;
  Advanced CSS
&lt;/h3&gt;

&lt;p&gt;CSS is now advanced and provides using normal programming concepts with it like defining variable, functions, using &lt;a href="https://en.wikipedia.org/wiki/Object-oriented_programming"&gt;OOPs concepts&lt;/a&gt;, etc. There are many extensions of it that help in using it more efficiently.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#sass"&gt;
  &lt;/a&gt;
  SASS
&lt;/h4&gt;

&lt;p&gt;Sass stands for Syntactically Awesome Stylesheet is a preprocessor scripting language that is interpreted or compiled into Cascading Style Sheets (CSS).&lt;/p&gt;

&lt;p&gt;Estimated Time to learn:- 7 ‚Äì 10 days (3 ‚Äì 4 hrs daily).&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#study-links"&gt;
  &lt;/a&gt;
  Study Links
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=_a5j7KoflTs"&gt;Sass Tutorial for Beginners ‚Äì CSS With Superpowers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://sass-lang.com/guide"&gt;SASS ‚Äì Official Website.&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#less"&gt;
  &lt;/a&gt;
  LESS
&lt;/h4&gt;

&lt;p&gt;Less (which stands for Leaner Style Sheets) is a backwards-compatible language extension for CSS.&lt;/p&gt;

&lt;p&gt;Less extends CSS with dynamic behavior such as variables, mixins, operations and functions. Less runs on both the server-side and client-side.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#study-links"&gt;
  &lt;/a&gt;
  Study Links
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=YD91G8DdUsw"&gt;Less CSS Pre-Processor Tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lesscss.org/"&gt;LESS ‚Äì Official Website.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#javascript"&gt;
  &lt;/a&gt;
  JavaScript&lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;JavaScript or ECMAScript is the language of the web, it is incredibly versatile programming language using which we can build web servers, native mobile apps, web apps, and desktop apps.&lt;/p&gt;

&lt;p&gt;Being loosely typed it is easy to learn but hard to master. Practice is the key to mastering it.&lt;/p&gt;

&lt;p&gt;In recent times, JavaScript has seen major improvements with lots of new features being added to the language making it more powerful.&lt;/p&gt;

&lt;p&gt;ECMAScript 2015 (previously called ECMAScript 6) was released, which had major feature updates, after that every year new features are being added to the language, new version of ECMAScript is referred as ESNext.&lt;/p&gt;

&lt;p&gt;Here is a great article incase you want to learn &lt;a href="https://auth0.com/blog/a-brief-history-of-javascript/"&gt;history of JavaScript&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;As browsers must implement the new features once they are published to make them useable, which takes time, tools such as &lt;a href="https://learnersbucket.com/tutorials/es6/babel"&gt;Babel&lt;/a&gt; enable developers to write these new features in their apps as Babel &lt;a href="https://en.wikipedia.org/wiki/Babel_(transcompiler)"&gt;transpiles&lt;/a&gt; them down to browser compatible code.&lt;/p&gt;

&lt;p&gt;With the development of &lt;a href="https://nodejs.org/en/"&gt;Nodejs&lt;/a&gt;, JavaScript was able to move out of the web to everywhere, right now you can use JavaScript as a server side languages as well as almost on every platform, Web, Mobile, Desktop, IOT, etc.&lt;/p&gt;

&lt;p&gt;Estimated time to learn:- 30 ‚Äì 45 days (3 ‚Äì 4 hrs daily).&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#study-links-basic"&gt;
  &lt;/a&gt;
  Study Links (Basic).
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript"&gt;MDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://javascript30.com/"&gt;JavaScript30&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://eloquentjavascript.net/"&gt;Eloquent JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.codecademy.com/learn/learn-javascript"&gt;ES5 on Codecademy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.codecademy.com/learn/introduction-to-javascript"&gt;ES6 on Codecademy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://babeljs.io/docs/en/learn/"&gt;ES5 on Babel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://learnersbucket.com/tutorials/es6/es6-intro"&gt;ES6 Tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yangshun/front-end-interview-handbook/blob/master/contents/en/javascript-questions.md"&gt;JavaScript Questions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#topics-to-cover-to-get-better-at-the-language"&gt;
  &lt;/a&gt;
  Topics to cover to get better at the language.
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;this&lt;/li&gt;
&lt;li&gt;IIFE&lt;/li&gt;
&lt;li&gt;Closure&lt;/li&gt;
&lt;li&gt;Null vs undefined&lt;/li&gt;
&lt;li&gt;Loop vs map&lt;/li&gt;
&lt;li&gt;call, apply &amp;amp; bind&lt;/li&gt;
&lt;li&gt;hoisting&lt;/li&gt;
&lt;li&gt;Scope&lt;/li&gt;
&lt;li&gt;attributes vs properties&lt;/li&gt;
&lt;li&gt;Ternary operators&lt;/li&gt;
&lt;li&gt;Promises vs callbacks&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://learnersbucket.com/tutorials/data-structures/javascript-objects-complete-reference"&gt;Objects&lt;/a&gt;, Object freezing&lt;/li&gt;
&lt;li&gt;mutable vs immutable&lt;/li&gt;
&lt;li&gt;&lt;a href="https://learnersbucket.com/tutorials/es6/javascript-symbol"&gt;Symbol&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://learnersbucket.com/examples/interview/currying-in-javascript-part-1"&gt;Currying&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://learnersbucket.com/examples/interview/what-is-debouncing-in-javascript"&gt;Debouncing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://learnersbucket.com/examples/interview/what-is-throttling-in-javascript"&gt;Throttling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://learnersbucket.com/examples/html/how-to-load-script-efficiently-with-async-and-defer"&gt;async vs defer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Event Bubbling &amp;amp; Capturing&lt;/li&gt;
&lt;li&gt;Prototype &amp;amp; Prototypal Inheritance&lt;/li&gt;
&lt;li&gt;Thinking Recursively&lt;/li&gt;
&lt;li&gt;Local Storage and Session Storage&lt;/li&gt;
&lt;li&gt;CORS&lt;/li&gt;
&lt;li&gt;sum(a)(b)(c)‚Ä¶(n)&lt;/li&gt;
&lt;li&gt;Web Storage APIs&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=8aGhZQkoFbQ"&gt;Event Loop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Web Sockets&lt;/li&gt;
&lt;li&gt;Single Page Applications&lt;/li&gt;
&lt;li&gt;Server Side rendering&lt;/li&gt;
&lt;li&gt;Optimization&lt;/li&gt;
&lt;li&gt;Critical rendering path&lt;/li&gt;
&lt;li&gt;Lazy loading data&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#advanced-study-links"&gt;
  &lt;/a&gt;
  Advanced Study Links
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/getify/You-Dont-Know-JS"&gt;You Don‚Äôt Know JS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.amazon.com/Professional-JavaScript-Developers-Nicholas-Zakas/dp/1118026691"&gt;Professional JAVASCRIPT For Web Developers ‚Äì Book&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#single-page-application-spa"&gt;
  &lt;/a&gt;
  Single Page Application (SPA) &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Traditionally website were built with server-side rendering. Browser used to receive HTML from the server and then render it. When page refreshes or user navigates to different page, the servers used to send new HTML.&lt;/p&gt;

&lt;p&gt;However in single page applications (SPA) client-side rendering is used. The browser loads the initial page from the server, along with the scripts (frameworks, libraries, app code) and stylesheets required for the whole app. When the user navigates to other pages, a page refresh is not triggered. The URL of the page is updated via the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/History_API"&gt;HTML5 History API&lt;/a&gt;. New data required for the new page, usually in JSON format, is retrieved by the browser via &lt;a href="https://developer.mozilla.org/en-US/docs/Web/Guide/AJAX/Getting_Started"&gt;AJAX&lt;/a&gt; requests to the server. The SPA then dynamically updates the page with the data via JavaScript, which it has already downloaded in the initial page load. This model is like how native mobile apps work.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#advantages"&gt;
  &lt;/a&gt;
  Advantages
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Web apps give more native feel and are more responsive as there is no flash between page navigations due to full-page refreshes.&lt;/li&gt;
&lt;li&gt;As we don‚Äôt have to repeatedly fetch the same resources again and again, we have to make fewer HTTP request, also the payload size are smaller which are faster to process.&lt;/li&gt;
&lt;li&gt;The server and client are decoupled which means that we can independently develop new clients for different platforms (e.g. mobile, chatbots, smart watches) without having to modify the server code. The client can also be developed using new tech stack.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#disadvantages"&gt;
  &lt;/a&gt;
  Disadvantages
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;As majority of the resources are fetched when the web app loads for first time it can hamper the initial load time of the application.&lt;/li&gt;
&lt;li&gt;There‚Äôs an additional step to be done on your server which is to configure it to route all requests to a single entry point and allow client-side routing to take over from there.&lt;/li&gt;
&lt;li&gt;SEO issues:- SPAs are reliant on JavaScript to render content, but not all search engines execute JavaScript during crawling, and they may see empty content on your page. This inadvertently hurts the Search Engine Optimization (SEO) of your app. To overcome this, you can either server-side render your app or use services such as Prerender to ‚Äúrender your javascript in a browser, save the static HTML, and return that to the crawlers‚Äù.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There is still time when server-side applications are preferred where SEO is involved as well as when we are building small scale applications like blogs etc.&lt;/p&gt;

&lt;p&gt;But a SPA application with client-server relation is preferred for large enterprise application where a clear client-server separation scales better for larger engineering teams, as the client and server code can be developed and released independently.&lt;/p&gt;

&lt;p&gt;Web developers these days refer to the products they build as web apps, rather than websites. While there is no strict difference between the two terms, web apps tend to be highly interactive and dynamic, allowing the user to perform actions and receive a response for their action.&lt;/p&gt;

&lt;p&gt;While jQuery can be still used for server-side applications to add user interactivity to each page. But it is not easy for jQuery for handle large scale applications. After all, jQuery is primarily a library for DOM manipulation and it‚Äôs not a framework.&lt;/p&gt;

&lt;p&gt;For this task JavaScript frameworks have been created to provide higher-level abstractions over the DOM, allowing you to keep state in memory, out of the DOM. Using frameworks also brings the benefits of reusing recommended concepts and best practices for building apps.&lt;/p&gt;

&lt;p&gt;It is lot easier to onboard a Junior who is not familiar with the code base, but has experience with a framework, will find it easier to understand the code because it is organized in a structure that he is familiar with. Also popular frameworks have great community support and tutorials as well as guide which makes them easy to start with.&lt;/p&gt;

&lt;p&gt;Estimated time to learn:- 7 ‚Äì 10 days (3 ‚Äì 4 hrs daily).&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#study-links"&gt;
  &lt;/a&gt;
  Study Links
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/21862054/single-page-app-advantages-and-disadvantages"&gt;Single Page App: advantages and disadvantages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.isquaredsoftware.com/presentations/2016-10-revolution-of-web-dev/"&gt;The (R)Evolution of Web Development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.freecodecamp.com/heres-why-client-side-rendering-won-46a349fadb52"&gt;Here‚Äôs Why Client Side Rendering Won&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#react-a-library-to-create-single-page-applications"&gt;
  &lt;/a&gt;
  React (A library to create Single Page Applications) &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;There is no other JavaScript library other than &lt;a href="https://reactjs.org/"&gt;React&lt;/a&gt; which has taken the front-end ecosystem by storm in modern time. React is a library built and open-sourced by the smart people at Facebook. In React, developers write components for their web interface and compose them together.&lt;/p&gt;

&lt;p&gt;As frontend development is shifting towards a paradigm of component-based development, where each components are developed independently and then clubbed together to create a feature and eventually leads in creating a web app using these features. React encourages that you write your HTML and CSS in your JavaScript itself. This sounds like a crazy idea at first as it is opposite of the existing good practice to write HTML, JavaScript and CSS separately. But if you keep your HTML, CSS, and JavaScript scoped to the component level only, then it is easier to do the development with conflict also different components can be developed individually without any dependency on each other while designing.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#features-of-react"&gt;
  &lt;/a&gt;
  Features of React.
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Declarative&lt;/strong&gt;:- You describe what you want to see in your view and not how to achieve it. Each component has its own state, you simply change the state within the component and the view will update itself according to the state. It is also easy to determine how the component will look like just by looking at the HTML in the &lt;code&gt;render()&lt;/code&gt; method.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Functional&lt;/strong&gt;:- Each component is a JavaScript pure function which has &lt;code&gt;props&lt;/code&gt; (External data) and &lt;code&gt;state&lt;/code&gt; (Internal data). Pure functions are easy to test, and the same goes for functional components.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Maintainable&lt;/strong&gt;:- React forces composition rather inheritance for scalability and reusability, thus writing your view in a component-based fashion encourages reusability. As each component has their logic and view limited to themselves, it is easier to maintain them.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;High Performance&lt;/strong&gt;:- React use a concept of Virtual DOM and it re-renders everything when there is a change in state or props. Why is there a need for a virtual DOM? While modern JavaScript engines are fast, reading from and writing to the DOM is slow. React keeps a lightweight virtual representation of the DOM in memory. Re-rendering everything is a misleading term. In React it actually refers to re-rendering the in-memory representation of the DOM, not the actual DOM itself. When there‚Äôs a change in the underlying data of the component, a new virtual representation is created, and compared against the previous representation. The difference (minimal set of changes required) is then patched to the real browser DOM.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Ease of Learning&lt;/strong&gt;:- React has very few API‚Äôs which remains constant and hardly changes, apart from that it is one of the largest community which providing an array of tools, open-sourced UI components, and a ton of great resources online to get you started on learning React.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Over the years, new view libraries that are even more performant than React have emerged. React may not be the fastest library out there, but in terms of the ecosystem, overall usage experience and benefits, it is still one of the greatest. Facebook is also channeling efforts into making React even faster with a &lt;a href="https://github.com/acdlite/react-fiber-architecture"&gt;rewrite of the underlying reconciliation algorithm&lt;/a&gt;. The concepts that React introduced has taught us how to write better code, more maintainable web apps and made us better engineers.&lt;/p&gt;

&lt;p&gt;Estimated time to learn:- 30 ‚Äì 45 days (3 ‚Äì 4 hrs daily).&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#study-links"&gt;
  &lt;/a&gt;
  Study Links
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://facebook.github.io/react/tutorial/tutorial.html"&gt;React Official Tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://egghead.io/courses/build-your-first-production-quality-react-app"&gt;Egghead Course ‚Äì Build Your First Production Quality React App&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Ke90Tje7VS0"&gt;Reactjs ‚Äì Crash Course&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#alternatives"&gt;
  &lt;/a&gt;
  Alternatives
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://vuejs.org/"&gt;Angular&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://vuejs.org/"&gt;Vue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://emberjs.com/"&gt;Ember&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cycle.js.org/"&gt;Cycle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://svelte.dev/"&gt;Svelte&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#state-management-fluxredux"&gt;
  &lt;/a&gt;
  State Management ‚Äì Flux/Redux &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;React is a library, not a framework, and does not deal with the layers below the view.&lt;/p&gt;

&lt;p&gt;As your app grows bigger, you may find that the app structure becomes a little messy. Components throughout the app may have to share and display common data but there is no elegant way to handle that in React. After all, React is just the view layer, it does not dictate how you structure the other layers of your app, such as the model and the controller, in traditional MVC paradigms. In an effort to solve this, Facebook invented &lt;a href="https://facebook.github.io/flux/docs/in-depth-overview.html"&gt;Flux&lt;/a&gt;, an app architecture that complements React‚Äôs composable view components by utilizing a unidirectional data flow.&lt;/p&gt;

&lt;p&gt;In summary, the Flux pattern has the following characteristics:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Unidirectional data flow&lt;/strong&gt;:- Makes the app more predictable as updates can be tracked easily.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Separation of concerns&lt;/strong&gt;:- Each part in the Flux architecture has clear responsibilities and are highly decoupled.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Works well with declarative programming&lt;/strong&gt;:- The store can send updates to the view without specifying how to transition views between states.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As Flux is not a framework per se, developers have tried to come up with many implementations of the Flux pattern. Eventually, a clear winner emerged, which was &lt;a href="http://redux.js.org/"&gt;Redux&lt;/a&gt;. Redux combines the ideas from Flux, &lt;a href="https://www.wikiwand.com/en/Command_pattern"&gt;Command pattern&lt;/a&gt; and &lt;a href="https://www.wikiwand.com/en/Command_pattern"&gt;Elm architecture&lt;/a&gt; and is the de facto state management library developers use with React these days. Its core concepts are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;App &lt;code&gt;state&lt;/code&gt; is described by a single plain old JavaScript object (POJO).&lt;/li&gt;
&lt;li&gt;Dispatch an &lt;code&gt;action&lt;/code&gt; (also a POJO) to modify the state.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Reducer&lt;/code&gt; is a pure function that takes in current state and action to produce a new state.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The concepts sound simple, but they are really powerful as they enable apps to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Have their state rendered on the server, booted up on the client.&lt;/li&gt;
&lt;li&gt;Trace, log and backtrack changes in the whole app.&lt;/li&gt;
&lt;li&gt;Implement undo/redo functionality easily.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The creator of Redux, &lt;a href="https://github.com/gaearon"&gt;Dan Abramov&lt;/a&gt;, has taken great care in writing up detailed documentation for Redux, along with creating comprehensive video tutorials for learning &lt;a href="https://egghead.io/courses/getting-started-with-redux"&gt;basic&lt;/a&gt; and &lt;a href="https://egghead.io/courses/building-react-applications-with-idiomatic-redux"&gt;advanced&lt;/a&gt; Redux. They are extremely helpful resources for learning Redux.&lt;/p&gt;

&lt;p&gt;While Redux does not necessarily have to be used with React, it is highly recommended as they play very well with each other. React and Redux have a lot of ideas and traits in common.&lt;/p&gt;

&lt;p&gt;Your app will likely have to deal with async calls like making remote API requests. &lt;a href="https://github.com/gaearon/redux-thunk"&gt;redux-thunk&lt;/a&gt; and &lt;a href="https://github.com/redux-saga/redux-saga"&gt;redux-saga&lt;/a&gt; were created to solve those problems. They may take some time to understand as they require understanding of functional programming and generators. Our advice is to deal with it only when you need it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/reactjs/react-redux"&gt;react-redux&lt;/a&gt; is an official React binding for Redux and is very simple to learn.&lt;/p&gt;

&lt;p&gt;Estimated time to learn:- 7 ‚Äì 10 days (3 ‚Äì 4 hrs daily).&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#study-links"&gt;
  &lt;/a&gt;
  Study Links
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://facebook.github.io/flux"&gt;Flux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://redux.js.org/"&gt;Redux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://egghead.io/courses/getting-started-with-redux"&gt;Egghead Course ‚Äì Getting Started with Redux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://egghead.io/courses/building-react-applications-with-idiomatic-redux"&gt;Egghead Course ‚Äì Build React Apps with Idiomatic Redux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/markerikson/react-redux-links"&gt;React Redux Links&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@dan_abramov/you-might-not-need-redux-be46360cf367"&gt;You Might Not Need Redux&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#alternative"&gt;
  &lt;/a&gt;
  Alternative
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mobxjs/mobx"&gt;MobX&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#css-modules"&gt;
  &lt;/a&gt;
  CSS Modules &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;CSS adds interactivity to the HTML, it is used to define how HTML elements will look and adjust as to the screen, to the sibling, etc. We all understand that writing good CSS is hard, it takes years of experience to get better at it. The major problem we face is writing scalable and maintainable CSSS that also for different screens and devices. To make it easier to work with it, over time, experienced frontend developers have designed methodologies to guide people on how to write organized CSS for complex projects, such as using &lt;a href="https://smacss.com/"&gt;SMACSS&lt;/a&gt;, &lt;a href="http://getbem.com/"&gt;BEM&lt;/a&gt;, &lt;a href="https://suitcss.github.io/"&gt;SUIT CSS&lt;/a&gt;, etc.&lt;/p&gt;

&lt;p&gt;The bad thing about these methodologies are that they very fragile, they are artificially enforced by conventions and guidelines. They break the moment developers do not follow them.&lt;/p&gt;

&lt;p&gt;As you might have realized by now, the front end ecosystem is saturated with tools, and unsurprisingly, tools have been invented to partially solve some of the &lt;a href="https://speakerdeck.com/vjeux/react-css-in-js"&gt;problems with writing CSS at scale&lt;/a&gt;. ‚ÄúAt scale‚Äù means that many developers are working on the same large project and touching the same stylesheets. There is no community-agreed approach on writing &lt;a href="https://github.com/MicheleBertoli/css-in-js"&gt;CSS in JS&lt;/a&gt; at the moment, and we are hoping that one day a winner would emerge, just like Redux did, among all the Flux implementations. For now, we are banking on &lt;a href="https://github.com/css-modules/css-modules"&gt;CSS Modules&lt;/a&gt;. CSS modules is an improvement over existing CSS that aims to fix the problem of global namespace in CSS; it enables you to write styles that are local by default and encapsulated to your component. This feature is achieved via tooling. With CSS modules, large teams can write modular and reusable CSS without fear of conflict or overriding other parts of the app. However, at the end of the day, CSS modules are still being compiled into normal globally-namespaced CSS that browsers recognize, and it is still important to learn and understand how raw CSS works.&lt;/p&gt;

&lt;p&gt;If you are a total beginner to CSS, Codecademy‚Äôs &lt;a href="https://www.codecademy.com/learn/learn-html-css"&gt;HTML &amp;amp; CSS course&lt;/a&gt; will be a good introduction to you. Next, read up on the &lt;a href="http://sass-lang.com/"&gt;Sass preprocessor&lt;/a&gt;, an extension of the CSS language which adds syntactic improvements and encourages style reusability. Study the CSS methodologies mentioned above, and lastly, CSS modules.&lt;/p&gt;

&lt;p&gt;Estimated time to learn:- 7 ‚Äì 10 days (3 ‚Äì 4 hrs daily). Try styling up your app using the SMACSS/BEM approach and/or CSS modules.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#study-links"&gt;
  &lt;/a&gt;
  Study Links
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.codecademy.com/learn/learn-html-css"&gt;Learn HTML &amp;amp; CSS course on Codecademy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://intro%20to%20html/CSS%20on%20Khan%20Academy"&gt;Intro to HTML/CSS on Khan Academy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://smacss.com/"&gt;SMACSS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://getbem.com/introduction/"&gt;BEM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://suitcss.github.io/"&gt;SUIT CSS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/css-modules/css-modules"&gt;CSS Modules Specification&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/yangshun/tech-interview-handbook/blob/master/front-end/interview-questions.md#html-questions"&gt;Answers to Front End Job Interview Questions‚Ää‚Äî‚ÄäHTML&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/yangshun/tech-interview-handbook/blob/master/front-end/interview-questions.md#css-questions"&gt;Answers to Front End Job Interview Questions‚Ää‚Äî‚ÄäCSS&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#alternatives"&gt;
  &lt;/a&gt;
  Alternatives
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cssinjs/jss"&gt;JSS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/styled-components/styled-components"&gt;Styled Components&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#maintainability"&gt;
  &lt;/a&gt;
  Maintainability
&lt;/h2&gt;

&lt;p&gt;Code is read more frequently than it is written. When you work in a large team and are involved with multiple teams across multiple projects. Then it is extremely important to highly value readability, maintainability and stability of the code and there are a few ways to achieve that: ‚ÄúExtensive testing‚Äù, ‚ÄúConsistent coding style‚Äù and ‚ÄúTypechecking‚Äù.&lt;/p&gt;

&lt;p&gt;Also when you are in a team, sharing same practices becomes really important. If you are a beginner then read about &lt;a href="https://github.com/elsewhencode/project-guidelines"&gt;JavaScript project guidelines&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#linting-javascript-eslint"&gt;
  &lt;/a&gt;
  Linting JavaScript ‚Äì ESLint &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;A linter is a tool to statically analyze code and finds problems with them, potentially preventing bugs/runtime errors and at the same time, enforcing a coding style. Time is saved during pull request reviews when reviewers do not have to leave nitpicky comments on coding style. &lt;a href="http://eslint.org/"&gt;ESLint&lt;/a&gt; is a tool for linting JavaScript code that is highly extensible and customizable. Teams can write their own lint rules to enforce their custom styles. At Grab, we use Airbnb‚Äôs &lt;a href="https://www.npmjs.com/package/eslint-config-airbnb"&gt;eslint-config-airbnb&lt;/a&gt; preset, that has already been configured with the common good coding style in the &lt;a href="https://github.com/airbnb/javascript"&gt;Airbnb JavaScript style guide&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For the most part, using ESLint is as simple as tweaking a configuration file in your project folder. There‚Äôs nothing much to learn about ESLint if you‚Äôre not writing new rules for it. Just be aware of the errors when they surface and Google it to find out the recommended style.&lt;/p&gt;

&lt;p&gt;Estimated time to learn:- 2 ‚Äì 3 days (3 ‚Äì 4 hrs daily).&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#study-links"&gt;
  &lt;/a&gt;
  Study Links
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://eslint.org/"&gt;ESlint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/airbnb/javascript"&gt;Airbnb Style Guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#alternatives"&gt;
  &lt;/a&gt;
  Alternatives
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/standard/standard"&gt;Standard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://jshint.com/"&gt;JSHint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/xojs/xo"&gt;XO&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#linting-css-stylelint"&gt;
  &lt;/a&gt;
  Linting CSS ‚Äì stylelint  &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;As mentioned earlier, good CSS is notoriously hard to write. Usage of static analysis tools on CSS can help to maintain our CSS code quality and coding style. For linting CSS, we use stylelint. Like ESLint, stylelint is designed in a very modular fashion, allowing developers to turn rules on/off and write custom plugins for it. Besides CSS, stylelint is able to parse SCSS and has experimental support for Less, which lowers the barrier for most existing code bases to adopt it.&lt;/p&gt;

&lt;p&gt;Once you have learnt ESLint, learning stylelint would be effortless considering their similarities. stylelint is currently being used by big companies like Facebook, Github and WordPress.&lt;/p&gt;

&lt;p&gt;Estimated time to learn:- 2 ‚Äì 3 days (3 ‚Äì 4 hrs daily).&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#study-links"&gt;
  &lt;/a&gt;
  Study Links
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://stylelint.io/"&gt;Stylelint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://css-tricks.com/stylelint/"&gt;Lint your CSS with stylelint&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#alternatives"&gt;
  &lt;/a&gt;
  Alternatives
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/sasstools/sass-lint"&gt;Sass Lint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://csslint.net/"&gt;CSS Lint&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#formatting-code-prettier"&gt;
  &lt;/a&gt;
  Formatting Code ‚Äì Prettier &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Another tool for enforcing consistent coding style for JavaScript and CSS is Prettier.&lt;/p&gt;

&lt;p&gt;In most cases, it is recommended to setup Prettier on top of ESLint and stylelint and integrate it into the workflow. This allows the code to be formatted into consistent style automatically via commit hooks, so that developers do not need to spend time formatting the coding style manually.&lt;/p&gt;

&lt;p&gt;Note that Prettier only enforces coding style, but does not check for logic errors in the code. Hence it is not a replacement for linters.&lt;/p&gt;

&lt;p&gt;Estimated time to learn:- 2 ‚Äì 3 days (3 ‚Äì 4 hrs daily). Add prettier extension to your code editor.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#study-links"&gt;
  &lt;/a&gt;
  Study Links
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://prettier.io/"&gt;Prettier Homepage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gist.github.com/yangshun/318102f525ec68033bf37ac4a010eb0c"&gt;Comparison between tools that allow you to use ESLint and Prettier together&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#testing-jest-enzyme"&gt;
  &lt;/a&gt;
  Testing ‚Äì Jest + Enzyme &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;All the above helps to preventing bugs/runtime errors, but once something has been built, it has to be tested to make sure it is meeting all the requirements and working as expected.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://facebook.github.io/jest/"&gt;Jest&lt;/a&gt; is a testing library by Facebook that aims to make the process of testing pain-free. As with Facebook projects, it provides a great development experience out of the box. Tests can be run in parallel resulting in shorter duration. During watch mode, by default, only the tests for the changed files are run. One particular feature we like is ‚ÄúSnapshot Testing‚Äù. Jest can save the generated output of your React component and Redux state and save it as serialized files, so you wouldn‚Äôt have to manually come up with the expected output yourself. Jest also comes with built-in mocking, assertion and test coverage. One library to rule them all!.&lt;/p&gt;

&lt;p&gt;React comes with some testing utilities, but &lt;a href="http://airbnb.io/enzyme/"&gt;Enzyme&lt;/a&gt; by Airbnb makes it easier to generate, assert, manipulate and traverse your React components‚Äô output with a jQuery-like API. It is recommended that Enzyme be used to test React components.&lt;/p&gt;

&lt;p&gt;Jest and Enzyme makes writing front end tests fun and easy. When writing tests becomes enjoyable, developers write more tests. It also helps that React components and Redux actions/reducers are relatively easy to test because of clearly defined responsibilities and interfaces. For React components, we can test that given some props, the desired DOM is rendered, and that callbacks are fired upon certain simulated user interactions. For Redux reducers, we can test that given a prior state and an action, a resulting state is produced.&lt;/p&gt;

&lt;p&gt;The documentation for Jest and Enzyme are pretty concise, and it should be sufficient to learn them by reading it.&lt;/p&gt;

&lt;p&gt;Estimated time to learn:- 7 ‚Äì 10 days (3 ‚Äì 4 hrs daily).&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#study-links"&gt;
  &lt;/a&gt;
  Study Links
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://facebook.github.io/jest/"&gt;Jest Homepage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://auth0.com/blog/testing-react-applications-with-jest/"&gt;Testing React Applications with Jest&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://airbnb.io/enzyme/"&gt;Enzyme Homepage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/airbnb-engineering/enzyme-javascript-testing-utilities-for-react-a417e5e5090f"&gt;Enzyme: JavaScript Testing utilities for React&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#alternatives"&gt;
  &lt;/a&gt;
  Alternatives
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/avajs/ava"&gt;AVA&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://karma-runner.github.io/"&gt;Karma&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#deployment-and-hosting"&gt;
  &lt;/a&gt;
  Deployment and Hosting
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#version-control-system-git"&gt;
  &lt;/a&gt;
  Version Control System ‚Äì GIT &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://git-scm.com/docs/gittutorial"&gt;Git&lt;/a&gt; is software for tracking changes in any set of files, usually used for coordinating work among programmers collaboratively developing source code during software development. Its goals include speed, data integrity, and support for distributed, non-linear workflows (thousands of parallel branches running on different systems).&lt;/p&gt;

&lt;p&gt;From its definition you would have already realized why GIT is used, it helps us to track the files and folders. If there is any addition or modification to any part in the project, you can track that using git.&lt;/p&gt;

&lt;p&gt;The changes are tracked on your local system with corresponding to the remote repository where the whole code base is maintained (A central system).&lt;/p&gt;

&lt;p&gt;when we work in team, everyone works on different things, thus we there is a need of a central repository where the whole code base will be maintained. Once you code changes are done, you push that changes to the central repo and pull the others code as per your requirement.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/"&gt;GitHub&lt;/a&gt; is a provider of Internet hosting for software development and version control using Git. All the major cloud service provides provides there own central repository storage service.&lt;/p&gt;

&lt;p&gt;It important that you are familiar with basic git commands to work in collaborative environment.&lt;/p&gt;

&lt;p&gt;Estimated time to learn:- 7 ‚Äì 10 days (3 ‚Äì 4 hrs daily).&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#study-links"&gt;
  &lt;/a&gt;
  Study Links
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://git-scm.com/docs/gittutorial"&gt;Git official Website&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.atlassian.com/git/tutorials"&gt;Atlassian (BitBucket) Git Tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=8JJ101D3knE"&gt;Git tutorial ‚Äì Youtube&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#alternatives"&gt;
  &lt;/a&gt;
  Alternatives
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.mercurial-scm.org/"&gt;Mercurial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://azure.microsoft.com/en-in/services/devops/server/"&gt;Azure DevOps Server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://subversion.apache.org/"&gt;Subversion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#package-management-npm"&gt;
  &lt;/a&gt;
  Package Management ‚Äì NPM &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;A good developer does smart work rather than hard work, if there is something already build then it is wise to use that rather than building something of yourself.&lt;/p&gt;

&lt;p&gt;Thus to download and manage all those we need a package manager. &lt;a href="https://www.npmjs.com/"&gt;Npm&lt;/a&gt; (Node Package Manager) is a package manager for the JavaScript programming language maintained by npm, Inc.&lt;/p&gt;

&lt;p&gt;Npm is the default package manager for the JavaScript runtime environment Node.js. It consists of a command line client, also called npm, and an online database of public and paid-for private packages, called the npm registry. The registry is accessed via the client, and the available packages can be browsed and searched via the npm website. The package manager and the registry are managed by npm, Inc.&lt;/p&gt;

&lt;p&gt;All the packages that are download using npm are registered in &lt;code&gt;package.json&lt;/code&gt; file and files and folder are stored inside the &lt;code&gt;node_modules&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;package-lock.json&lt;/code&gt; is another file which is update every time when you add a new package to your project. It is automatically generated for any operations where npm modifies either the &lt;code&gt;node_modules&lt;/code&gt; tree, or &lt;code&gt;package.json&lt;/code&gt;. It describes the exact tree that was generated, such that subsequent installs are able to generate identical trees, regardless of intermediate dependency updates.&lt;/p&gt;

&lt;p&gt;This file is intended to be committed into source repositories, and serves various purposes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Describe a single representation of a dependency tree such that teammates, deployments, and continuous integration are guaranteed to install exactly the same dependencies.
-Provide a facility for users to ‚Äútime-travel‚Äù to previous states of node_modules without having to commit the directory itself.
-Facilitate greater visibility of tree changes through readable source control diffs.
-Optimize the installation process by allowing npm to skip repeated metadata resolutions for previously-installed packages.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Estimated time to learn:- 3 ‚Äì 4 days (3 ‚Äì 4 hrs daily).&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#study-links"&gt;
  &lt;/a&gt;
  Study Links
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/npm-cheat-sheet-most-common-commands-and-nvm/"&gt;NPM Cheat Sheet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=bdHE2wHT-gQ"&gt;Getting started with NPM&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#alternative"&gt;
  &lt;/a&gt;
  Alternative
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://code.facebook.com/posts/1840075619545360"&gt;Yarn: A new package manager for JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#build-system-webpack"&gt;
  &lt;/a&gt;
  Build System ‚Äì webpack &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This part will be kept short as setting up webpack can be a tedious process and might be a turn-off to developers who are already overwhelmed by the barrage of new things they have to learn for front end development. In a nutshell, webpack is a module bundler that compiles a front end project and its dependencies into a final bundle to be served to users. Usually, projects will already have the webpack configuration set up and developers rarely have to change it. Having an understanding of webpack is still a good to have in the long run. It is due to webpack that features like hot reloading and CSS modules are made possible.&lt;/p&gt;

&lt;p&gt;We have found the webpack walkthrough by &lt;a href="https://survivejs.com/webpack/foreword/"&gt;SurviveJS&lt;/a&gt; to be the best resource on learning webpack. It is a good complement to the official documentation and we recommend following the walkthrough first and referring to the documentation later when the need for further customization arises.&lt;/p&gt;

&lt;p&gt;Estimated time to learn:- 7 ‚Äì 10 days (3 ‚Äì 4 hrs daily).&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#study-links"&gt;
  &lt;/a&gt;
  Study Links
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://webpack.js.org/"&gt;Webpack Homepage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://survivejs.com/webpack/foreword/"&gt;SurviveJS ‚Äì Webpack: From apprentice to master&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#alternatives"&gt;
  &lt;/a&gt;
  Alternatives
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rollupjs.org/"&gt;Rollup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://browserify.org/"&gt;Browserify&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://parceljs.org/"&gt;Parcel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#deployment-cicd"&gt;
  &lt;/a&gt;
  Deployment ‚Äì CI/CD &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;When you commit your code to the github and once your pull request is approved and merged in the codebase, before deploying it on any cloud service it has to again generate the build and run set of test to make sure things won‚Äôt break on the production.&lt;/p&gt;

&lt;p&gt;For this we often use tool, which helps us in continuous integration and deployement. Jenkins is one of the most popular Continuous Integration and Continuous Delivery server provider.&lt;/p&gt;

&lt;p&gt;It helps us to run:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Run linting for the project.&lt;/li&gt;
&lt;li&gt;Run unit tests for the project.&lt;/li&gt;
&lt;li&gt;If all the test cases pass then generate a production bundle with webpack into a build directory.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once setup and configured it can be automatically/manually triggered to run the build pipeline and once the build is generated, it can be deployed using release pipeline.&lt;/p&gt;

&lt;p&gt;Often there is a separate team (Devops) who handle it configuration and setting up the CI/CD environment, but if you want you can still learn it. Being familiar with basic things is always good.&lt;/p&gt;

&lt;p&gt;Estimated time to learn:- 3 ‚Äì 4 days (3 ‚Äì 4 hrs daily).&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#study-links"&gt;
  &lt;/a&gt;
  Study Links
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=FX322RVNGj4"&gt;Jenkins&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#alternatives"&gt;
  &lt;/a&gt;
  Alternatives
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://about.gitlab.com/product/continuous-integration/"&gt;GitLab CI/CD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://circleci.com/"&gt;CircleCI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://travis-ci.com/"&gt;TravisCI&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#hosting-and-cdn"&gt;
  &lt;/a&gt;
  Hosting and CDN &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Traditionally, web servers that receive a request for a webpage will render the contents on the server, and return a HTML page with dynamic content meant for the requester. This is known as server-side rendering. As mentioned earlier in the section on Single-page Apps, modern web applications do not involve server-side rendering, and it is sufficient to use a web server that serves static asset files. Nginx and Apache are possible options and not much configuration is required to get things up and runnning. The caveat is that the web server will have to be configured to route all requests to a single entry point and allow client-side routing to take over. The flow for front end routing goes like this:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Web server receives a HTTP request for a particular route, for example &lt;code&gt;/user/john&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Regardless of which route the server receives, serve up &lt;code&gt;index.html&lt;/code&gt; from the static assets directory.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;index.html&lt;/code&gt; should contain scripts that load up a JavaScript framework/library that handles client-side routing.&lt;/li&gt;
&lt;li&gt;The client-side routing library reads the current route, and communicates to the MVC (or equivalent where relevant) framework about the current route.&lt;/li&gt;
&lt;li&gt;The MVC JavaScript framework renders the desired view based on the route, possibly after fetching data from an API if required. Example, load up &lt;code&gt;UsersController&lt;/code&gt;, fetch user data for the username john as JSON, combine the data with the view, and render it on the page.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A good practice for serving static content is to use caching and putting them on a CDN. We use &lt;a href="https://aws.amazon.com/s3/"&gt;Amazon Simple Storage Service (S3)&lt;/a&gt; for hosting our static website content and &lt;a href="https://aws.amazon.com/cloudfront/"&gt;Amazon CloudFront&lt;/a&gt; as the CDN. We find that it is an affordable and reliable solution that meets our needs.&lt;/p&gt;

&lt;p&gt;S3 provides the option to ‚ÄúUse this bucket to host a website‚Äù, which essentially directs the requests for all routes to the root of the bucket, which means we do not need our own web servers with special routing configurations.&lt;/p&gt;

&lt;p&gt;An example of a web app that we host on S3 is &lt;a href="https://hub.grab.com/"&gt;Hub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Other than hosting the website, we also use S3 to host the build files generated from each successful CI build.&lt;/p&gt;

&lt;p&gt;In Visual Studio Code using an extension you can directly &lt;a href="https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-static-website-host"&gt;deploy static site on Azure and host it&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Estimated time to learn:- 3 ‚Äì 4 days (3 ‚Äì 4 hrs daily). &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#study-links"&gt;
  &lt;/a&gt;
  Study Links
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html"&gt;Hosting a Static Website on Amazon S3&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#alternatives"&gt;
  &lt;/a&gt;
  Alternatives
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://azure.microsoft.com/en-in/"&gt;Microsoft Azure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cloud.google.com/"&gt;Google cloud platform&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.digitalocean.com/"&gt;Digital Ocean&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.heroku.com/"&gt;Heroku&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#advanced-topics"&gt;
  &lt;/a&gt;
  Advanced Topics
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#static-types-typescript"&gt;
  &lt;/a&gt;
  Static Types ‚Äì Typescript &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Static typing brings about many benefits when writing apps. They can catch common bugs and errors in your code early. Types also serve as a form of documentation for your code and improves the readability of your code. As a code base grows larger, we see the importance of types as they gives us greater confidence when we do refactoring. It is also easier to onboard new members of the team to the project when it is clear what kind of values each object holds and what each function expects.&lt;/p&gt;

&lt;p&gt;Adding types to your code comes with the trade-off of increased verbosity and a learning curve of the syntax. But this learning cost is paid upfront and amortized over time. In complex projects where the maintainability of the code matters and the people working on it change over time, adding types to the code brings about more benefits than disadvantages.&lt;/p&gt;

&lt;p&gt;The two biggest contenders in adding static types to JavaScript are Flow (by Facebook) and TypeScript (by Microsoft). As of date, there is no clear winner in the battle.&lt;/p&gt;

&lt;p&gt;You can choose anyone of them but I personally prefer TypeScript. It is a strict syntactical superset of JavaScript and adds optional static typing to the language. TypeScript is designed for the development of large applications and &lt;a href="https://en.wikipedia.org/wiki/Source-to-source_compiler"&gt;transcompiles&lt;/a&gt; to JavaScript. As TypeScript is a superset of JavaScript, existing JavaScript programs are also valid TypeScript programs.&lt;/p&gt;

&lt;p&gt;TypeScript may be used to develop JavaScript applications for both client-side and server-side execution (as with Node.js or Deno). There are multiple options available for transcompilation. Either the default TypeScript Checker can be used, or the Babel compiler can be invoked to convert TypeScript to JavaScript.&lt;/p&gt;

&lt;p&gt;Estimated time to learn:- 7 ‚Äì 10 days (3 ‚Äì 4 hrs daily).&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#study-links"&gt;
  &lt;/a&gt;
  Study Links
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=WBPrJSw7yQA"&gt;Learn TypeScript in 50 Minutes ‚Äì Tutorial for Beginners&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=BwuLxPH8IDs"&gt;TypeScript Course for Beginners 2021 ‚Äì Learn TypeScript from Scratch!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#alternatives"&gt;
  &lt;/a&gt;
  Alternatives
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://flow.org/"&gt;Flow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/niieani/typescript-vs-flowtype"&gt;TypeScript vs Flow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#mobile-app-development-react-native"&gt;
  &lt;/a&gt;
  Mobile App Development ‚Äì React Native &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;It is now possible to create cross device mobile applications using just HTML, CSS, JavaScript. Thus it opened a large boundary for web developers to migrate to different platform and do the development using same technology.&lt;/p&gt;

&lt;p&gt;React Native is a JavaScript framework for building native mobile apps. React Native brings React‚Äôs declarative UI framework to iOS and Android. With React Native, you use native UI controls and have full access to the native platform.&lt;/p&gt;

&lt;p&gt;Following features are what makes React Native an idle choice.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Declarative&lt;/strong&gt;: React makes it painless to create interactive UIs. Declarative views make your code more predictable and easier to debug.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Component-Based&lt;/strong&gt;: Build encapsulated components that manage their state, then compose them to make complex UIs.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Developer Velocity&lt;/strong&gt;: See local changes in seconds. Changes to JavaScript code can be live reloaded without rebuilding the native app.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Portability&lt;/strong&gt;: Reuse code across iOS, Android, and &lt;a href="https://reactnative.dev/docs/out-of-tree-platforms"&gt;other platforms&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Estimated time to learn:- 20 ‚Äì 30 days (3 ‚Äì 4 hrs daily).&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#study-links"&gt;
  &lt;/a&gt;
  Study Links
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/facebook/react-native"&gt;React Native official DOC.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=0-S5a0eXPoc"&gt;React Native Tutorial for Beginners ‚Äì Build a React Native App [2020]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#alternatives"&gt;
  &lt;/a&gt;
  Alternatives
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://cordova.apache.org/"&gt;Cordova&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ionicframework.com/"&gt;Ionic&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#desktop-app-development-electron-js"&gt;
  &lt;/a&gt;
  Desktop App Development ‚Äì Electron JS &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Not only mobile apps but using HTML, CSS, JavaScript you can now build desktop apps as well. The most popular framework for it right now is &lt;a href="https://www.electronjs.org/"&gt;ElectronJs&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;ElectronJs combines the &lt;a href="https://en.wikipedia.org/wiki/Chromium_(web_browser)"&gt;Chromium rendering engine&lt;/a&gt; and the &lt;a href="https://en.wikipedia.org/wiki/Node.js"&gt;Node.js&lt;/a&gt; runtime allowing for the development of desktop GUI applications using web technologies.&lt;/p&gt;

&lt;p&gt;Electron applications comprise multiple processes. There is the ‚Äúmain‚Äù process and several ‚Äúrenderer‚Äù processes. The main process runs the application logic, and can then launch multiple renderer processes, rendering the windows that appear on a user‚Äôs screen rendering HTML and CSS.&lt;/p&gt;

&lt;p&gt;Both the main and renderer processes can run with Node.js integration if enabled.&lt;/p&gt;

&lt;p&gt;Most of Electron‚Äôs APIs are written in C++ or Objective-C and then exposed directly to the application code through JavaScript bindings.&lt;/p&gt;

&lt;p&gt;Estimated time to learn:- 20 ‚Äì 30 days (3 ‚Äì 4 hrs daily).&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#study-links"&gt;
  &lt;/a&gt;
  Study Links
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=mr9Mtm_TRpw"&gt;An Intro To Electron ‚Äì Desktop Apps with JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=kN1Czs0m1SU"&gt;Build an Electron App in Under 60 Minutes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#alternatives"&gt;
  &lt;/a&gt;
  Alternatives
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://nwjs.io/"&gt;NW.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://appjs.com/"&gt;AppJS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meteor.com/"&gt;Meteor&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#server-side-rendering-nextjs"&gt;
  &lt;/a&gt;
  Server Side Rendering ‚Äì Next.js &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;It is still a viable option to do server side rendering while leveraging the decoupled development capability of server and client or the best of both, some part can be rendered on server side, while some can be updated as per requirement on client side. It really helps enhancing the applications performance.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://nextjs.org/"&gt;Next.js&lt;/a&gt; is an open-source development framework built on top of Node.js enabling React based web applications functionalities such as server-side rendering and generating static websites. React documentation mentions Next.js among ‚ÄúRecommended Toolchains‚Äù advising it to developers as a solution when ‚Äúbuilding a server-rendered website with Node.js‚Äù. Traditional React apps render all their content in the client-side browser, Next.js is used to extend this functionality to include applications rendered on the server side.&lt;/p&gt;

&lt;p&gt;Estimated time to learn:- 10 ‚Äì 20 days (3 ‚Äì 4 hrs daily).&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#study-links"&gt;
  &lt;/a&gt;
  Study Links
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://nextjs.org/learn/basics/create-nextjs-app"&gt;Create a Next.js App&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=MFuwkrseXVE"&gt;Next.js Crash Course for Beginners 2021&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=mTz0GXj8NN0"&gt;Next.js Crash Course 2021&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#alternatives"&gt;
  &lt;/a&gt;
  Alternatives
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.gatsbyjs.com/"&gt;Gatsbyjs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nuxtjs.org/"&gt;NuxtJS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#progressive-web-apps-pwa-the-future-of-web-development"&gt;
  &lt;/a&gt;
  Progressive Web Apps (PWA): The future of web development. &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;A progressive web application (PWA) is a type of application software delivered through the web, built using common web technologies including HTML, CSS and JavaScript. It is intended to work on any platform that uses a standards-compliant browser, including both desktop and mobile devices.&lt;/p&gt;

&lt;p&gt;Progressive Web Apps (PWA) are built and enhanced with modern APIs to deliver enhanced capabilities, reliability, and installability while reaching anyone, anywhere, on any device with a single codebase.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VHxEtbRL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/1DKtUFjXLJbiiruKA9P1.svg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VHxEtbRL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/1DKtUFjXLJbiiruKA9P1.svg" alt="PWA"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The three app pillars of a PWA:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Capable&lt;/strong&gt;: Between modern APIs, WebAssembly, and new and upcoming APIs, web applications are more capable than ever, and those capabilities are only growing.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Reliable&lt;/strong&gt;: A reliable Progressive Web App feels fast and dependable regardless of the network.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Installable&lt;/strong&gt;: Installed Progressive Web Apps run in a standalone window instead of a browser tab. They‚Äôre launchable from on the user‚Äôs home screen, dock, taskbar, or shelf. It‚Äôs possible to search for them on a device and jump between them with the app switcher, making them feel like part of the device they‚Äôre installed on.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What makes a good Progressive Web App?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Starts fast, stays fast&lt;/strong&gt;: Performance plays a significant role in the success of any online experience, because high performing sites engage and retain users better than poorly performing ones. Sites should focus on optimizing for user-centric performance metrics.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Works in any browser&lt;/strong&gt;: Users can use any browser they choose to access your web app before it‚Äôs installed.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Responsive to any screen size&lt;/strong&gt;: Users can use your PWA on any screen size and all of the content is available at any viewport size.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Provides a custom offline page&lt;/strong&gt;: When users are offline, keeping them in your PWA provides a more seamless experience than dropping back to the default browser offline page.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Is installable&lt;/strong&gt;: Users who install or add apps to their device tend to engage with those apps more.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Is fully accessible&lt;/strong&gt;: All user interactions pass WCAG 2.0 accessibility requirements.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Can be discovered through search&lt;/strong&gt;: Your PWA can be easily discovered through search.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Works with any input type&lt;/strong&gt;: Your PWA is equally usable with a mouse, a keyboard, a stylus, or touch.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Provides context for permission requests&lt;/strong&gt;: When asking permission to use powerful APIs, provide context and ask only when the API is needed.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Follows best practices for healthy code&lt;/strong&gt;: Keeping your codebase healthy makes it easier to meet your goals and deliver new features.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Estimated time to learn:- 7 ‚Äì 15 days (3 ‚Äì 4 hrs daily).&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#study-links"&gt;
  &lt;/a&gt;
  Study Links
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://web.dev/progressive-web-apps/"&gt;Web.dev&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#miscellaneous-articles"&gt;
  &lt;/a&gt;
  Miscellaneous articles
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.infoq.com/articles/state-of-javascript-2016"&gt;State of the JavaScript Landscape: A Map for Newcomers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://marcobotto.com/the-hitchhikers-guide-to-the-modern-front-end-development-workflow/"&gt;The Hitchhiker‚Äôs guide to the modern front end development workflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://trackchanges.postlight.com/modern-javascript-for-ancient-web-developers-58e7cae050f9"&gt;Modern JavaScript for Ancient Web Developers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.freecodecamp.com/a-study-plan-to-cure-javascript-fatigue-8ad3a54f2eb1#.c0wnrrcwd"&gt;A Study Plan To Cure JavaScript Fatigue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/verekia/js-stack-from-scratch"&gt;JS Stack from Scratch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.freecodecamp.com/a-beginners-javascript-study-plan-27f1d698ea5e#.bgf49xno2"&gt;A Beginner‚Äôs JavaScript Study Plan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This article was inspired by &lt;a href="https://github.com/grab/front-end-guide"&gt;Grab‚Äôs ‚Äì Frontend Guide&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>react</category>
    </item>
    <item>
      <title>Why is chia-blockchain trending on Github?</title>
      <author>Victor Quan Lam</author>
      <pubDate>Sun, 29 Aug 2021 18:22:10 +0000</pubDate>
      <link>https://dev.to/victorquanlam/why-is-chia-blockchain-trending-on-github-2m6n</link>
      <guid>https://dev.to/victorquanlam/why-is-chia-blockchain-trending-on-github-2m6n</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pXUSVB3U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/github/stars/Chia-Network/chia-blockchain" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pXUSVB3U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/github/stars/Chia-Network/chia-blockchain" alt="stars"&gt;&lt;/a&gt; &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--96EUDbsx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/github/forks/Chia-Network/chia-blockchain" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--96EUDbsx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/github/forks/Chia-Network/chia-blockchain" alt="forks"&gt;&lt;/a&gt; &lt;br&gt;
Chia-coin &lt;a href="https://github.com/Chia-Network/chia-blockchain"&gt;(repo)&lt;/a&gt; is a python- based open source project where "modern cryptocurrency is built from scratch, designed to be efficient, decentralized, and secure". &lt;/p&gt;

&lt;p&gt;In contrast to Bitcoin or Ethereum, Chia coin are mined by the force of a processor or video cards, this new digital currency is mined on hard drives and SSDs.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#whats-pace-and-timeproof"&gt;
  &lt;/a&gt;
  What's pace and time-proof?
&lt;/h3&gt;

&lt;p&gt;While in PoW, the client should demonstrate the work he has done, in PoS, the stake is made, PoT related to Proof-of-Space suggests verification of free hard plate space. Proof of space and proof of time improve the network's security immensely. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-algorithms"&gt;
  &lt;/a&gt;
  The algorithms
&lt;/h3&gt;

&lt;p&gt;Notwithstanding a few similitudes to Bitcoin, Chia's code is composed without any preparation and doesn't utilize the Bitcoin codebase. &lt;/p&gt;

&lt;p&gt;To lessen the instability of the coin, Chia will utilize the essential hold made because of pre-cultivating. The engineers set the accompanying regions as their objectives: making an ideal blockchain for conveying applications, making the first traded on an open market cryptographic money near ETF, animating reception in partnerships and among end-clients.&lt;/p&gt;

&lt;p&gt;Being one of the most trendy repo on github, there're plenty of issues are required to be resolved. &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UGl-6rWS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/github/issues/Chia-Network/chia-blockchain" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UGl-6rWS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/github/issues/Chia-Network/chia-blockchain" alt="enter image description here"&gt;&lt;/a&gt; This may be a good opportunities for you to contribute to this "green" crypto project and gain some solid coding experience. &lt;/p&gt;

</description>
      <category>crypto</category>
      <category>blockchain</category>
      <category>python</category>
      <category>contributorswanted</category>
    </item>
  </channel>
</rss>
