<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How to Customize WordPress Login Page</title>
      <author>elinabey</author>
      <pubDate>Thu, 30 Dec 2021 16:24:10 +0000</pubDate>
      <link>https://dev.to/elinabey/how-to-customize-wordpress-login-page-42d4</link>
      <guid>https://dev.to/elinabey/how-to-customize-wordpress-login-page-42d4</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--teFbt9LI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zzoulqigibwrbb250sij.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--teFbt9LI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zzoulqigibwrbb250sij.jpg" alt="Customize WordPress Login Page" width="600" height="300"&gt;&lt;/a&gt;&lt;br&gt;
When you customize a website for a customer, the first preference of your work is usually the WordPress login page. As we know, by default, every WordPress login page looks exactly the same. This is not a strong initial impression at all. If you are running a WordPress woo-commerce store, you may have many users to see a login page. For a better user experience, we need to customize the default WordPress login page.&lt;/p&gt;

&lt;p&gt;The default WordPress login page looks like this.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ijfHN_7I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q5d5e03n6mubrpsp8t4b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ijfHN_7I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q5d5e03n6mubrpsp8t4b.png" alt="default WordPress login page" width="614" height="588"&gt;&lt;/a&gt;&lt;br&gt;
In this post, We will see how to customize your WordPress login page easily. So let's get started.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#customize-wordpress-login-page-by-using-plugin"&gt;
  &lt;/a&gt;
  Customize WordPress Login Page by using plugin
&lt;/h2&gt;

&lt;p&gt;You can customize the WordPress login page using plugins and tools. There are many plugins to provide this feature but here, we will use the best plugin called &lt;a href="https://wordpress.org/plugins/loginpress/"&gt;Custom Login Page Customizer&lt;/a&gt; made by LoginPress.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Go to WordPress Dashboard.&lt;/li&gt;
&lt;li&gt;Click on Plugin &amp;gt;&amp;gt; &lt;strong&gt;Add New&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Type &lt;strong&gt;LoginPress&lt;/strong&gt;in search bar.&lt;/li&gt;
&lt;li&gt;Click on &lt;strong&gt;Install Now&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;After Installing click on &lt;strong&gt;Activate&lt;/strong&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Once you activated this plugin you will see a window to allow the permissions.&lt;/p&gt;

&lt;p&gt;So, if you are seeking a more functional solution that provides you a lot of free effects, then Custom Login Customizer is perfect for you. Also, they have paid version with other amazing features.&lt;/p&gt;

&lt;p&gt;I shared this post from &lt;a href="https://softcodeon.com/wordpress/customize-wordpress-login-page.htm"&gt;How to Customize WordPress Login Page&lt;/a&gt; you can read in detail from there.&lt;/p&gt;

&lt;p&gt;I hope you like this article, if you have a question about creating a custom WordPress login page? please discuss below help to improve. Thank you.&lt;/p&gt;

</description>
      <category>wordpress</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Top 100 Lenny Face List</title>
      <author>lenny-face</author>
      <pubDate>Thu, 30 Dec 2021 16:11:38 +0000</pubDate>
      <link>https://dev.to/lennyface/top-100-lenny-face-list-4n7d</link>
      <guid>https://dev.to/lennyface/top-100-lenny-face-list-4n7d</guid>
      <description>&lt;p&gt;(⌣̩̩́_⌣̩̩̀)&lt;/p&gt;

&lt;p&gt;(⌣́_⌣̀)&lt;/p&gt;

&lt;p&gt;(´Oƪ)&lt;/p&gt;

&lt;p&gt;(ʃ_⌣̀ )/||&lt;/p&gt;

&lt;p&gt;(˘_˘٥)&lt;/p&gt;

&lt;p&gt;(@~_@~)&lt;/p&gt;

&lt;p&gt;(~_~;)&lt;/p&gt;

&lt;p&gt;(・_・;)&lt;/p&gt;

&lt;p&gt;¯(°_o)/¯&lt;/p&gt;

&lt;p&gt;(⌣́_⌣̀)(˘⌣˘ )&lt;/p&gt;

&lt;p&gt;(^_^;)&lt;/p&gt;

&lt;p&gt;(.&lt;em&gt;. )( .&lt;/em&gt;.)&lt;/p&gt;

&lt;p&gt;(´△｀)♪&lt;/p&gt;

&lt;p&gt;(-_-;)&lt;/p&gt;

&lt;p&gt;( ‘́з’̀)&lt;/p&gt;

&lt;p&gt;(︶︿︶)&lt;/p&gt;

&lt;p&gt;щ(ಥ◡ಥ)щ&lt;/p&gt;

&lt;p&gt;ಥ_ಥ&lt;/p&gt;

&lt;p&gt;(._.)&lt;/p&gt;

&lt;p&gt;(ø_ø)&lt;/p&gt;

&lt;p&gt;( •́ﻩ•̀ )&lt;/p&gt;

&lt;p&gt;(⌣́_⌣̀)&lt;/p&gt;

&lt;p&gt;(‘́⌣’̀ )&lt;/p&gt;

&lt;p&gt;(ʃ⌣́,⌣́ƪ)&lt;/p&gt;

&lt;p&gt;(҂⌣̀_⌣́)&lt;/p&gt;

&lt;p&gt;ヽ(ಠ_ಠ)ノ&lt;/p&gt;

&lt;p&gt;(ಠ¿ಠ)&lt;/p&gt;

&lt;p&gt;┌( ಠ_ಠ)┘&lt;/p&gt;

&lt;p&gt;ლ(ಠ_ಠლ)&lt;/p&gt;

&lt;p&gt;ఠ_ఠ&lt;/p&gt;

&lt;p&gt;ಠ_ರೃ&lt;/p&gt;

&lt;p&gt;₍ ὸ.ό₎ރ&lt;/p&gt;

&lt;p&gt;¯_ಠ&lt;em&gt;ಠ&lt;/em&gt;/¯&lt;/p&gt;

&lt;p&gt;( ..•˘___˘• .. )&lt;/p&gt;

&lt;p&gt;＼(｀0´)／&lt;/p&gt;

&lt;p&gt;(╯°□°）╯&lt;/p&gt;

&lt;p&gt;ಠ_ಠ&lt;/p&gt;

&lt;p&gt;(#｀ε´)&lt;/p&gt;

&lt;p&gt;(ง’̀-‘́)ง&lt;/p&gt;

&lt;p&gt;←(ಠ_ಠ)→&lt;/p&gt;

&lt;p&gt;ب_ب&lt;/p&gt;

&lt;p&gt;ಥ_ಥ&lt;/p&gt;

&lt;p&gt;ヽ(｀⌒´メ)ノ&lt;/p&gt;

&lt;p&gt;(⋋▂⋌)&lt;/p&gt;

&lt;p&gt;Ծ_Ծ&lt;/p&gt;

&lt;p&gt;מּ_מ&lt;/p&gt;

&lt;p&gt;ּತ_ತ&lt;/p&gt;

&lt;p&gt;♒‘(T∩T)’♒&lt;/p&gt;

&lt;p&gt;(!!˚☐˚)/&lt;/p&gt;

&lt;p&gt;(•̀o•́)ง&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5mP3SabK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t2e32ngeg5nt4d8ozlga.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5mP3SabK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t2e32ngeg5nt4d8ozlga.png" alt="Lenny Face" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ʘ‿ʘ ಥ⌣ಥ&lt;br&gt;
(ΘεΘ;)   (n˘v˘•)¬&lt;br&gt;
(✪㉨✪) ヽ(๏∀๏ )ﾉ&lt;br&gt;
（╹ェ╹） ╮(─▽─)╭&lt;br&gt;
щ(ಥДಥщ)  ≖‿≖&lt;br&gt;
(ﾉ◕ヮ◕)ﾉ&lt;em&gt;:･ﾟ✧    (⊙ヮ⊙)&lt;br&gt;
ᕦ(ò_óˇ)ᕤ ᕙ(⇀‸↼‶)ᕗ&lt;br&gt;
( ಠ◡ಠ )   (•⊙ω⊙•)&lt;br&gt;
‘︿’   （　´∀｀）☆&lt;br&gt;
(´ー｀)  (つд｀)&lt;br&gt;
(￣。￣) (&lt;/em&gt;~▽~)&lt;br&gt;
( ^▽^)σ)~O~) (=゜ω゜)&lt;br&gt;
(´ω｀)   (ノ&lt;em&gt;・。)&lt;br&gt;
(-＿- )ノ (´ヘ｀;)&lt;br&gt;
(^^;)   （　´∀｀）&lt;br&gt;
((((゜д゜;))))   (=ω=;)&lt;br&gt;
(。・&lt;/em&gt;・。) (o´ω｀o)&lt;br&gt;
(^▽^) (&lt;em&gt;´д｀&lt;/em&gt;)&lt;br&gt;
(￣□￣) ∩(︶▽︶)∩&lt;br&gt;
(✿◠‿◠)  (◡‿◡✿)&lt;br&gt;
(◕‿◕✿)  (✖╭╮✖)&lt;br&gt;
(≧◡≦) (¬&lt;em&gt;¬)&lt;br&gt;
(◑‿◐) (◕‿-)&lt;br&gt;
✖‿✖   (-’&lt;/em&gt;’-)&lt;br&gt;
(╥&lt;em&gt;╥)   (╯&lt;/em&gt;╰)&lt;br&gt;
(╯3╰)   (o_-)&lt;br&gt;
(¬‿¬)   (◣&lt;em&gt;◢)&lt;br&gt;
(∪ ◡ ∪)   (≧ω≦)&lt;br&gt;
o(≧o≦)o (⋋▂⋌)&lt;br&gt;
(॓&lt;/em&gt;॔)   (╯ಊ╰)&lt;br&gt;
(─‿‿─)  ‹(•¿•)›&lt;br&gt;
(╯︵╰,)    (︶︹︺)&lt;br&gt;
(∩︵∩) (｡◕‿◕｡)&lt;br&gt;
(⊙&lt;em&gt;◎)   (~￣▽￣)~&lt;br&gt;
(︶ω︶)  (+&lt;/em&gt;+)&lt;br&gt;
(｡♥‿♥｡)   (✿ ♥‿♥)&lt;br&gt;
♥╣[-&lt;em&gt;-]╠♥   ٩(͡๏̯͡๏)۶&lt;br&gt;
٩(-̮̮̃•̃)۶  ٩(̾●̮̮̃̾•̃̾)۶&lt;br&gt;
٩(-̮̮̃-̃)۶    ٩(×̯×)۶&lt;br&gt;
(∩▂∩) (¬▂¬)&lt;br&gt;
(╯◕&lt;/em&gt;◕)╯ (╹◡╹)凸&lt;br&gt;
(▰˘◡˘▰) (☞ﾟ∀ﾟ)☞&lt;br&gt;
ლ(╹◡╹ლ)   (✿◠‿◠)&lt;br&gt;
╰(✿´⌣&lt;code&gt;✿)╯♡キス  ♡♥♡」0 [♥óܫò] Vﾖ♡♥♡&lt;br&gt;
(✿ฺ◕ฺ‿◕ฺ）ｳﾌｯ♥   (人〃◡ฺ ω◡)❤ฺ大好き❤ฺ(◡ฺ ω◡ฺ〃人)&lt;br&gt;
.+:｡LOVEﾟ･*:♥⌒ヾ(￫௰￩❀)   ♪ラブ♥═━┈┈♡═━┈┈(*-ェ-(-ェ-*)♥═━┈┈♡═━┈&lt;br&gt;
+.(*♡Ü(Ü♡*)ﾟ+.  ♡o+:;;;:+o♡o+:;(๑ó㉨ò(ó㉨ò๑);;:+o♡o+:;;;:+o♡&lt;br&gt;
.+✽:｡(*￫௰◕)♡(◕௰￩*)ﾟ.+✽:｡    (*ﾉωﾉ)ｷｬ…(*ﾉ･ิω･ิ)ﾉ…(*ﾉωﾉ)ｷｬ-&lt;br&gt;
♥━━ヾ(●´v’)人(’v｀○)ノ━━♥ヵヮュィ  (p萌q♡ω♡+*)・+&lt;br&gt;
♥キュ━.+゜*(о☯ฺд☯ฺо)*゜+.━ン♥   (♧◑ω◑)☞♡☜(◐ω◐♧)&lt;br&gt;
ღ❤ღ´ｪ&lt;/code&gt;&lt;em&gt;)   (●’ω’σ)σணღ&lt;/em&gt;&lt;br&gt;
㋢㋶♡♥♡♥（๑・౩・๑）㋕㋻㋴㋜可  каωαﾟ+.(´◉◞⊖◟◉｀)bﾟ+.ﾟЁ❤&lt;br&gt;
ｷｬｰ♡╰(&lt;em&gt;ﾟxﾟ​&lt;/em&gt;)╯    ﾄﾞｷﾄﾞｷ((o(‾◡◝&lt;em&gt;)(&lt;/em&gt; ◜◡‾)o))ﾜｸﾜｸ&lt;br&gt;
(◕ฺó(ｪ)ò◕ฺ)ﾎﾟｯ    ﾎﾟｯ(・艸・ฺ&lt;em&gt;▶▪◀)&lt;br&gt;
ﾌﾌﾌｰﾝ♪(◉ε◉&lt;/em&gt;)   (〃◕ฺˇε ˇ◕ฺ〃) ﾆｭｩ～&lt;br&gt;
ლ(//´◜◞⊜◟◝｀////ლ)ﾃﾚﾃﾚ  (๑&amp;gt;◡&amp;lt;๑) ɭ ɿ兯ん❤&lt;br&gt;
━(￫ิܫ￩)━ !!! (((&lt;em&gt;☣ω☣(ε◕&lt;/em&gt; ))) ﾁｭｯ❤&lt;br&gt;
((((((/´⊙З⊙)/ﾁｭﾁｭﾁｭｩｳｳｳｳ!!❤❤❤ chu♥(人´3｀)⌒♡&lt;br&gt;
( ˘ ³˘)♥ ﾟ+｡:.ﾟ  ♥═━┈┈　(￫∀￩人)㋜㋖&lt;/p&gt;

&lt;p&gt;( ͡° ͜ʖ ͡°) ( ͠° ͟ʖ ͡°) ( ͡~ ͜ʖ ͡°) ( ͡ʘ ͜ʖ ͡ʘ) ( ͡o ͜ʖ ͡o) (° ͜ʖ °) ( ‾ʖ̫‾) ( ಠ ͜ʖಠ) ( ͡° ʖ̯ ͡°) ( ͡ಥ ͜ʖ ͡ಥ) ༼ ͡° ͜ʖ ͡° ༽ (▀̿Ĺ̯▀̿ ̿) ( ✧≖ ͜ʖ≖) (ง ͠° ͟ل͜ ͡°) ง(͡ ͡° ͜ つ ͡͡°) (✿❦ ͜ʖ ❦) ᕦ( ͡° ͜ʖ ͡°)ᕤ ( ͡° ͜ʖ ͡°)╭∩╮ ¯_ ( ͡° ͜ʖ ͡°)&lt;em&gt;/¯ (╯ ͠° ͟ʖ ͡°) ╯┻━┻ ( ͡°( ͡° ͜ʖ( ͡° ͜ʖ ͡°)ʖ ͡°) ͡°) ¯_(ツ)&lt;/em&gt;/¯ ಠ_ಠ&lt;/p&gt;

&lt;p&gt;Snipars Face, Lenny Face Happy, Cool Lenny Faces, Shrugging Lenny Face, Lenny Kaomoji, Shy Lenny Face, Lenny Face Kawaii, Lenny Face Anime, Lenny Face Sunglasses. Lenny Face Glasses, Lenny Faces Copy, Textfaces Gun, Official &lt;strong&gt;&lt;a href="https://lennyfacepapa.me/"&gt;Lenny Face&lt;/a&gt;&lt;/strong&gt; Website, Lenny Smiley Face, Lenny Face And More, Lenny Fac3, Blushing Lenny, Lenny Face With Arms, Lenny The Face, Faces Lenny. Glasses Lenny Face. Lenny Face Iphone, Lennyemote, Lenny Blush Face, Csgo Lenny Face, Lenny Face Original, Happy Birthday Lenny Meme, Flip Table Lenny Face, Follow Official Twitter &lt;a href="https://twitter.com/__lennyface"&gt;Lenny Face&lt;/a&gt; Profile.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Never manually change your copyright date again with this innovative cloud-based API. 🗓</title>
      <author>Adam Greenough</author>
      <pubDate>Thu, 30 Dec 2021 16:09:25 +0000</pubDate>
      <link>https://dev.to/adamgreenough/never-manually-change-your-copyright-date-again-with-this-innovative-cloud-based-api-3m6p</link>
      <guid>https://dev.to/adamgreenough/never-manually-change-your-copyright-date-again-with-this-innovative-cloud-based-api-3m6p</guid>
      <description>&lt;p&gt;Fed up of changing your websites copyright date by hand EVERY year? Looking to offload complex date calculations to the cloud? Travelled here from the future and looking for a definitive confirmation of the current year? This FREE current year API is here to help.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://current-year-api.addy.codes/"&gt;https://current-year-api.addy.codes/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#api-documentation"&gt;
  &lt;/a&gt;
  API Documentation
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#basic-usage"&gt;
  &lt;/a&gt;
  Basic Usage
&lt;/h3&gt;

&lt;p&gt;If you don't need to factor in timezones and are content using UTC, the basic usage is the simplest way to get up and running with the Current Year API. Simply make a request to the API URL with your preferred method to receive the current year in JSON format.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;https://current-year-api.addy.codes/what-year-is-it&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#advanced-usage"&gt;
  &lt;/a&gt;
  Advanced Usage
&lt;/h3&gt;

&lt;p&gt;For those that need accurate current year calculations based on timezone data, you can add a timezone parameter.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://current-year-api.addy.codes/"&gt;Read more...&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media ltag__twitter-tweet__media__video-wrapper"&gt;
        &lt;div class="ltag__twitter-tweet__media--video-preview"&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--57GV6_ST--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/tweet_video_thumb/FH3gKl5WQAIDzeH.jpg" alt="unknown tweet media content"&gt;
          &lt;img src="/assets/play-butt.svg" class="ltag__twitter-tweet__play-butt" alt="Play butt"&gt;
        &lt;/div&gt;
        &lt;div class="ltag__twitter-tweet__video"&gt;
          
            
          
        &lt;/div&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--33lz8R8w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1432184488189116419/SltFU59W_normal.jpg" alt="Adam Greenough profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Adam Greenough
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @adam_greenough
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      I've got you covered: &lt;a href="https://t.co/StP0TC6hnI"&gt;current-year-api.addy.codes&lt;/a&gt;&lt;br&gt;&lt;br&gt;Never manually change your copyright date again with this innovative cloud-based API. 🗓☁️🧑🏼‍💻 &lt;a href="https://t.co/vMYQhZDE9k"&gt;twitter.com/elyktrix/statu…&lt;/a&gt; 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      15:55 PM - 30 Dec 2021
    &lt;/div&gt;

      &lt;div class="ltag__twitter-tweet__quote"&gt;
        &lt;div class="ltag__twitter-tweet__quote__header"&gt;
          &lt;span class="ltag__twitter-tweet__quote__header__name"&gt;
            Kyle Shook⚡
          &lt;/span&gt;
          &lt;a class="mentioned-user" href="https://dev.to/elyktrix"&gt;@elyktrix&lt;/a&gt;
        &lt;/div&gt;
        Don’t forget, it’s almost time to update the year in your website’s footer. You’d think we could automate this by now.
      &lt;/div&gt;

    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1476582732083904514" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1476582732083904514" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1476582732083904514" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>discuss</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Show and Hide Password Using jQuery</title>
      <author>Shantanu Jana</author>
      <pubDate>Thu, 30 Dec 2021 15:38:06 +0000</pubDate>
      <link>https://dev.to/shantanu_jana/show-and-hide-password-using-jquery-1ajm</link>
      <guid>https://dev.to/shantanu_jana/show-and-hide-password-using-jquery-1ajm</guid>
      <description>&lt;p&gt;In this article you will learn how to create Show and Hide Password using JQuery. When we input a password into a password input box, it appears as a bullet. The input box contains a small icon or text that, when clicked, converts the passwords into text and we see. &lt;/p&gt;

&lt;p&gt;Passwords are usually seen in the form of bullets because we use &lt;code&gt;type = "password"&lt;/code&gt; in the input. If you use &lt;code&gt;type = "text"&lt;/code&gt; then those passwords can be seen in the form of text.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.foolishdeveloper.com/2021/12/show-and-hide-password-using-jquery.html"&gt;Watch its live demo&lt;/a&gt; to learn how it works. This project (Show and Hide Password Using jQuery) will basically help to convert the password into text with one click.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#show-and-hide-password-using-jquery"&gt;
  &lt;/a&gt;
  Show and Hide Password Using jQuery
&lt;/h2&gt;

&lt;p&gt;Here I have used Jquery. First created an input box in which you can input the password.&lt;/p&gt;

&lt;p&gt;There is a small button that, when clicked, will convert the password into text. And the second time you click, that text will be converted back to bullet form or password form.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#html-code-of-show-hide-password"&gt;
  &lt;/a&gt;
  HTML code of Show Hide Password
&lt;/h3&gt;

&lt;p&gt;With the help of the following HTML codes I have created a place to input and a button. First we created a box containing all this information. If you want, you can &lt;a href="https://www.foolishdeveloper.com/2021/12/show-and-hide-password-using-jquery.html"&gt;download the source code&lt;/a&gt; for making it.&lt;/p&gt;

&lt;p&gt;The input space is created using the input function of HTML and &lt;code&gt;type = "password"&lt;/code&gt; is used here. As a result, all the input characters can be seen here in the form of bullets.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"input__item"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; 
 &lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;&amp;lt;!-- input place --&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"password"&lt;/span&gt; &lt;span class="na"&gt;autocomplete=&lt;/span&gt;&lt;span class="s"&gt;"off"&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"password123"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;&amp;lt;!-- button --&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"showPass"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Show&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#design-with-css"&gt;
  &lt;/a&gt;
  Design with CSS
&lt;/h3&gt;

&lt;p&gt;Now is the time to design the project with the help of CSS. Above we have created input boxes and buttons with the help of HTML. Now the following CSS codes have been used to design it.&lt;/p&gt;

&lt;p&gt;I first designed the webpage using the following codes. Here I have used light green background-color of webpage.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;box-sizing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;border-box&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;rgb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;41&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;140&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;140&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2QYR_m39--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t6asjojfod0qzcmndqwe.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2QYR_m39--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t6asjojfod0qzcmndqwe.jpg" alt="design the webpage" width="880" height="391"&gt;&lt;/a&gt;&lt;br&gt;
Now we have created an area with input boxes and buttons. The width of this box is: 320px and the background color is white.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.input__item&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;180px&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;320px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt; &lt;span class="m"&gt;-3px&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aG_mArl1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ypaom8vhjvpwcax7u8c7.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aG_mArl1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ypaom8vhjvpwcax7u8c7.jpg" alt="Show and Hide Password" width="880" height="391"&gt;&lt;/a&gt;&lt;br&gt;
Now I have designed a place to input. The size of the input box depends on the padding. I used &lt;code&gt;padding: 15px&lt;/code&gt; here and used &lt;code&gt;font-size: 17px&lt;/code&gt; to increase the text size a bit.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.input__item&lt;/span&gt; &lt;span class="nt"&gt;label&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.input__item&lt;/span&gt; &lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;17px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding-right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.4px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#e6d9d9&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RLq8bwlM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8ak6fw4hhfls59lmru4p.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RLq8bwlM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8ak6fw4hhfls59lmru4p.jpg" alt="design the input place" width="880" height="367"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now the button has been designed. That button will help to show and hide the password. The background color of this button is transparent. As a result, the button is only visible in text form.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.input__item&lt;/span&gt; &lt;span class="nc"&gt;.showPass&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;line-height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin-right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;dodgerblue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.input__item&lt;/span&gt; &lt;span class="nc"&gt;.showPass&lt;/span&gt;&lt;span class="nd"&gt;:focus&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;outline&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---E0N1Aon--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/px4vxyj6y1at9svwu6f7.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---E0N1Aon--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/px4vxyj6y1at9svwu6f7.jpg" alt="jquery Show and Hide Password" width="880" height="367"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#activate-jquery-show-and-hide-password"&gt;
  &lt;/a&gt;
  Activate JQuery Show and Hide Password
&lt;/h3&gt;

&lt;p&gt;I just designed this &lt;a href="https://www.foolishdeveloper.com/2021/12/show-and-hide-password-using-jquery.html"&gt;jquery Show and Hide Password&lt;/a&gt; above. Now is the time to implement it with the help of JQuery. First I set a constant of the class class function of the button.&lt;/p&gt;

&lt;p&gt;The calculations used here work very easily. I have given the condition here that if the characters in the input box are in the form of password then it will be converted into text.&lt;/p&gt;

&lt;p&gt;If in text form, will be converted to password. Here the click function is used and all those calculation buttons are attached. When you click on the button, those calculations will be effective.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//Set the constant of the button's class function&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;showPass&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.showPass&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;//The following calculation will be activated when you click on the button&lt;/span&gt;
&lt;span class="nx"&gt;showPass&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;click&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;$this&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;//If the contacts in the input box are in the form of a password(type="password"), it will be converted to text(type="text").&lt;/span&gt;

&lt;span class="c1"&gt;//If it is in text, it will be converted to password&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;toLowerCase&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;show&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="nx"&gt;$this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hide&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
     &lt;span class="nx"&gt;$this&lt;/span&gt;
     &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prev&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;input&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;type&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;$this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Show&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
     &lt;span class="nx"&gt;$this&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prev&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;input&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;type&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;password&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mqjm6J-1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uck0mksvpz4c5re2pwc2.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mqjm6J-1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uck0mksvpz4c5re2pwc2.jpg" alt="Show and Hide Password Using jQuery" width="880" height="367"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hopefully the above tutorial has helped you to know how I created this &lt;strong&gt;Show and Hide Password&lt;/strong&gt; with the help of Jquery. &lt;/p&gt;

&lt;p&gt;If you want, you can &lt;a href="https://www.foolishdeveloper.com/2021/12/show-and-hide-password-using-jquery.html"&gt;download the source code&lt;/a&gt; for making Jquery Show and Hide Password input. Be sure to comment on how you like this tutorial. &lt;/p&gt;

&lt;p&gt;You can visit my blog for more tutorials like this. 😊&lt;br&gt;
&lt;a href="https://www.foolishdeveloper.com/"&gt;https://www.foolishdeveloper.com/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>My first impressions with pyenv</title>
      <author>Waylon Walker</author>
      <pubDate>Thu, 30 Dec 2021 15:23:45 +0000</pubDate>
      <link>https://dev.to/waylonwalker/my-first-impressions-with-pyenv-29h8</link>
      <guid>https://dev.to/waylonwalker/my-first-impressions-with-pyenv-29h8</guid>
      <description>&lt;p&gt;pyenv provides an easy way to install almost any version of python from a large list of distributions. I have simply been using the version of python from the os package manager for awhile, but recently I bumped my home system to Ubuntu 21.10 impish, and it is only 3.9+ while the libraries I needed were only compatable with up to 3.8.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I needed to install an older version of python on ubuntu&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I've been wanting to check out pyenv for awhile now, but without a burning need to do so.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#installing"&gt;
  &lt;/a&gt;
  installing
&lt;/h2&gt;

&lt;p&gt;Based on the Readme it looked like I needed to install using homebrew,so this is what I did, but I later realized that there is a pyenv-installer repo that may have saved me this need.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://waylonwalker.com/til/installing-homebrew-linux/"&gt;https://waylonwalker.com/til/installing-homebrew-linux/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#list-out-install-candidates"&gt;
  &lt;/a&gt;
  List out install candidates
&lt;/h2&gt;

&lt;p&gt;You can list all of the available versions to install with&lt;br&gt;
&lt;code&gt;pyenv install --list&lt;/code&gt;.  It does reccomend updating pyenv if you suspect that it is missing one.  At the time of writing this comes out to 532 different versions!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;pyenv &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;--list&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#lets-install-the-latest-38-patch"&gt;
  &lt;/a&gt;
  Let's install the latest 3.8 patch
&lt;/h2&gt;

&lt;p&gt;Installing a version is as easy as &lt;code&gt;pyenv install 3.8.12&lt;/code&gt;.  This will install it, but not make it active anywhere.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pyenv install 3.8.12
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#lets-use-python-3812-while-in-this-directory"&gt;
  &lt;/a&gt;
  let's use python 3.8.12 while in this directory
&lt;/h2&gt;

&lt;p&gt;Running &lt;code&gt;pyenv local&lt;/code&gt; will set the version of python that we wish to use while in this directory and any directory underneath of it while using the pyenv command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;pyenv &lt;span class="nb"&gt;local &lt;/span&gt;python3.8.12
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#pythonversion-file"&gt;
  &lt;/a&gt;
  .python-version file
&lt;/h2&gt;

&lt;p&gt;This creates a &lt;code&gt;.python-version&lt;/code&gt; files in the directory I ran it in, that contains simply the version number.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;3.8.12
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#using-with-pipx"&gt;
  &lt;/a&gt;
  using with pipx
&lt;/h2&gt;

&lt;p&gt;I immediately ran into the same issue I was having before when trying to run pipx, as pipx was running my system python.  I had to install pipx in the python3.8 environment to get it to use it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;pyenv &lt;span class="nb"&gt;exec &lt;/span&gt;pip &lt;span class="nb"&gt;install &lt;/span&gt;pipx
pyenv &lt;span class="nb"&gt;exec &lt;/span&gt;pipx run kedro new
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#python-is-still-the-system-python"&gt;
  &lt;/a&gt;
  python is still the system python
&lt;/h2&gt;

&lt;p&gt;When I open a terminal and call &lt;code&gt;python&lt;/code&gt; its still my system python that I installed and set with update-alternatives.  I am not sure if this is expected or based on how I had installed the system python previously, but it's what happened on my system.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;update-alternatives --query python

Name: python
Link: /home/walkers/.local/bin/python
Status: auto
Best: /usr/bin/python3
Value: /usr/bin/python3
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#making-a-virtual-environment"&gt;
  &lt;/a&gt;
  making a virtual environment
&lt;/h2&gt;

&lt;p&gt;To make a virtual environment, I simply ran &lt;code&gt;pyenv exec python&lt;/code&gt; in place of where I would normally run python and it worked for me.  There is a whole package to get pyenv and venv to play nicely together, so I suspect that there is more to it, but this worked well for me and I was happy.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pyenv exec python -m venv .venv --prompt $(basename $PWD)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now when my virtual environment is active it points to the python in that virtual environment, and is the version of python that was used to create the environment.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#links"&gt;
  &lt;/a&gt;
  Links
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/pyenv/pyenv#installation"&gt;https://github.com/pyenv/pyenv#installation&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;I wrote this during my first few minutes of using pyenv.  It's been working great for me since then and has been practically invisible.  If you have more experience with pyenv I would really appreciate a comment on your experience below.&lt;/p&gt;

</description>
      <category>python</category>
      <category>linux</category>
      <category>todayilearned</category>
    </item>
    <item>
      <title>Designing the Analytics patterns using a Lake House approach on AWS
</title>
      <author>Adit Modi</author>
      <pubDate>Thu, 30 Dec 2021 15:12:13 +0000</pubDate>
      <link>https://dev.to/aws-builders/designing-the-analytics-patterns-using-a-lake-house-approach-on-aws-2hh6</link>
      <guid>https://dev.to/aws-builders/designing-the-analytics-patterns-using-a-lake-house-approach-on-aws-2hh6</guid>
      <description>&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Many organizations are moving all their data from various silos into a single location, often called a data lake, to perform analytics and ML. These same companies also store data in purpose-built data stores for the performance, scale, and cost advantages they provide for specific use cases. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Examples of such data stores include data warehouses (to get quick results for complex queries on structured data) and technologies like Elasticsearch (to quickly search and analyze log data to monitor the health of production systems). A one-size-fits-all approach to data analytics no longer works, because it inevitably leads to compromises.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Lake House architecture on AWS provides a strategic vision of how multiple AWS data and analytics services can be combined into a multi-purpose data processing and analytics environment. There are the three analytics patterns you can derive insights from by using a Lake House approach on AWS:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Inside-out data movement&lt;/li&gt;
&lt;li&gt;Outside-in data movement&lt;/li&gt;
&lt;li&gt;Data movement around the perimeter&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#derive-insights-with-insideout-data-movement"&gt;
  &lt;/a&gt;
  Derive insights with inside-out data movement
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;To get the most from your data lakes and these purpose-built stores, you need to move data between these systems easily. For example, clickstream data from web applications can be collected directly in a data lake and a portion of that data can be
moved out to a data warehouse for daily reporting. We think of this concept as insideout data movement.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--666pQD59--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1ewq8i9c3ky79tqjl0jn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--666pQD59--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1ewq8i9c3ky79tqjl0jn.png" alt="Image description" width="336" height="274"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#gt-derive-real-time-eventbased-visualization-insights-from-your-lake-house-with-amazon-redshift-and-amazon-quicksight"&gt;
  &lt;/a&gt;
  -&amp;gt; Derive real time event-based visualization insights from your Lake house with Amazon Redshift and Amazon QuickSight
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Customers often want to analyze their data visually as soon as data is ingested into their data lake, to make decisions with speed and agility for downstream business value.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The following diagram illustrates the Lake House inside-out data movement with Amazon Redshift and Amazon QuickSight to perform data visualization insights.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--x9iggSYn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eetcz0225kjwo54fcpz6.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x9iggSYn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eetcz0225kjwo54fcpz6.jpg" alt="Image description" width="683" height="270"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Derive real time event-based visualization insights from your Lake House with Amazon Redshift and Amazon QuickSight&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The steps that data follows through the architecture are as follows:&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Data ingestion&lt;/strong&gt; — A new data file is uploaded in Amazon S3. An S3 event triggers an AWS Lambda function.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Event trigger&lt;/strong&gt; —Lambda triggers an AWS Glue workflow to start processing the file. Lambda updates Glue Data Catalog with metadata changes.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Data processing&lt;/strong&gt; — Load transformed data into target data stores like S3 and Amazon Redshift. AWS Glue jobs push logs and notifications to Amazon CloudWatch. CloudWatch triggers a Lambda function upon AWS Glue job completion.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Data analytics&lt;/strong&gt; — Analyze the data in Amazon Redshift and the data lake (S3). Lambda calls the QuickSight ingestion API to refresh the SPICE dataset.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Data visualizations&lt;/strong&gt; — New data is reflected in QuickSight visuals. QuickSight can create a data set by combining data in Amazon Redshift and Athena. Output is stored in SPICE for fast analytics.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#gt-derive-personacentric-insights-from-your-lake-house-with-aws-glue-databrew-amazon-athena-amazon-redshift-and-amazon-quicksight"&gt;
  &lt;/a&gt;
  -&amp;gt; Derive persona-centric insights from your Lake House with AWS Glue DataBrew, Amazon Athena, Amazon Redshift, and Amazon QuickSight
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Many organizations want to get insights from exponentially growing data volumes to help them make decisions with speed and agility. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;They need to embrace data gravity by using both a central data lake, and a ring of purpose-built data services and data&lt;br&gt;
warehouses based on persona or job function.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The following diagram illustrates the Lake House inside-out data movement with AWS Glue DataBrew, Amazon Athena, Amazon Redshift, and Amazon QuickSight to perform persona-centric data analytics&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--43IpzBm3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ptlte7njbuz44asxkwzh.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--43IpzBm3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ptlte7njbuz44asxkwzh.gif" alt="Image description" width="639" height="308"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The steps that data follows through the architecture are as follows:&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Data ingestion&lt;/strong&gt; — Data is ingested into S3 from different sources.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Ad-hoc data processing&lt;/strong&gt; — Data curators and data scientists use Data Brew to validate, clean, and enrich the data. Amazon Athena is also used to run ad-hoc queries to analyze the data in the lake. The transformation is shared with data engineers to set up batch processing.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Batch data processing&lt;/strong&gt; — Data engineers or developers set up batch jobs in AWS Glue and AWS Glue DataBrew. Jobs can be event-triggered, or can be scheduled to run periodically.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Data analytics&lt;/strong&gt; — Data and business analysts can now analyze prepared datasets in Amazon Redshift, or in S3 using Athena.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Data visualizations&lt;/strong&gt; — Business analysts can create visuals in QuickSight. Data curators can enrich data from multiple sources. Administrators can enforce security and data governance. Developers can embed the QuickSight dashboard in applications.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#derive-insights-with-outsidein-data-movement"&gt;
  &lt;/a&gt;
  Derive insights with outside-in data movement
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;You can also move data in the other direction: from the outside-in. For example, you can copy query results for sales of products in a given Region from your data warehouse into your data lake, to run product recommendation algorithms against a larger data set using machine learning. Think of this concept as outside-in data
movement.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--W2uZDwCl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j3ubzeb9v25ucgw0jr8r.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W2uZDwCl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j3ubzeb9v25ucgw0jr8r.jpg" alt="Image description" width="306" height="241"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#gt-derive-insights-from-amazon-dynamodb-data-for-realtime-prediction-with-amazon-sagemaker"&gt;
  &lt;/a&gt;
  -&amp;gt; Derive insights from Amazon DynamoDB data for real-time prediction with Amazon SageMaker
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Amazon DynamoDB is a fast NoSQL database used by applications that need consistent, single-digit millisecond latency. Customers want to move valuable data in DynamoDB into S3 to derive insights. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;This data in S3 can be the primary source for understanding customers’ past behavior, predicting future behavior, and generating downstream business value. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The following diagram illustrates the Lake House outside-in data movement with DynamoDB data to derive personalized recommendations.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zqtCfglR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8jlcoguem03uxf2ltk7s.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zqtCfglR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8jlcoguem03uxf2ltk7s.jpg" alt="Image description" width="570" height="79"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Derive insights from Amazon DynamoDB data for real-time prediction with Amazon SageMaker&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The steps that data follows through the architecture are as follows:&lt;/li&gt;
&lt;li&gt;Export DynamoDB tables as JSON into S3.&lt;/li&gt;
&lt;li&gt;Exported JSON files are converted to comma-separated value (.csv) format to
use as a data source for Amazon SageMaker by using AWS Glue.&lt;/li&gt;
&lt;li&gt;Amazon SageMaker renews the model artifact and updates the endpoint.&lt;/li&gt;
&lt;li&gt;The converted .csv file is available for ad hoc queries with Athena.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#gt-derive-insights-from-amazon-aurora-data-with-apache-hudi-aws-glue-aws-dms-and-amazon-redshift"&gt;
  &lt;/a&gt;
  -&amp;gt; Derive insights from Amazon Aurora data with Apache Hudi, AWS Glue, AWS DMS, and Amazon Redshift
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;AWS Database Migration Service (AWS DMS) can replicate the data from your source systems to S3. When the data is in S3, customers process it based on their analytics requirements. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A typical requirement is to sync the data in S3 with the updates on the source systems. Although it’s easy to apply updates on a relational database management system (RDBMS) that backs an online source application, it’s difficult to apply this CDC process on your data lakes. Apache Hudi is a good way to solve this problem. Currently, you can use Hudi on Amazon EMR to create Hudi tables.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The following diagram illustrates the Lake House outside-in data movement with Amazon Aurora Postgres-changed data to derive analytics.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Xjw5_LLA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e2d8c49b6vgjn1lw04h5.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Xjw5_LLA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e2d8c49b6vgjn1lw04h5.jpg" alt="Image description" width="576" height="222"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Derive insights from Amazon Aurora data with Apache Hudi, AWS Glue, AWS DMS, and Amazon Redshift&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The steps that data follows through the architecture are as follows:&lt;/li&gt;
&lt;li&gt;AWS DMS replicates the data from the Aurora cluster to the raw S3 bucket.&lt;/li&gt;
&lt;li&gt;Use Apache Hudi to create tables in the AWS Glue Data Catalog using AWS Glue jobs. An AWS Glue job (HudiJob) that is scheduled to run at a frequency set in the ScheduleToRunGlueJob parameter.&lt;/li&gt;
&lt;li&gt;This job reads the data from the raw S3 bucket, writes to the curated S3 bucket, and creates a Hudi table in the Data Catalog.&lt;/li&gt;
&lt;li&gt;The job also creates an Amazon Redshift external schema in the Amazon Redshift cluster.&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You can now query the Hudi table in Amazon Athena or Amazon Redshift.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Refer to the blog post Creating a source to Lakehouse data replication pipe using Apache Hudi, AWS Glue, AWS DMS, and Amazon Redshift for additional details.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#derive-insights-with-moving-data-around-the-perimeter"&gt;
  &lt;/a&gt;
  Derive insights with moving data around the perimeter
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;In other situations, you want to move data from one purpose-built data store to another: data movement around-the-perimeter. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;For example, you may copy the product catalog data stored in your database to your search service to make it easier to look through your product catalog and offload the search queries from the database. We think of this concept as data movement around the perimeter.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DEkWJYxL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yyubyhn09kqbkvtacej4.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DEkWJYxL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yyubyhn09kqbkvtacej4.gif" alt="Image description" width="291" height="258"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#gt-derive-insights-from-your-data-lake-data-warehouse-and-operational-databases"&gt;
  &lt;/a&gt;
  -&amp;gt; Derive insights from your data lake, data warehouse and operational databases
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;A data warehouse is a database optimized to analyze relational data coming from transactional systems and line of business applications. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Amazon Redshift is a fast, fully managed data warehouse that makes it simple and cost-effective to analyze data using standard SQL and existing Business Intelligence (BI) tools.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;To get information from unstructured data that would not fit in a data warehouse, you can build a data lake. A data lake is a centralized repository that allows you to store all your structured and unstructured data at any scale. With a data lake built on Amazon S3, you can easily run big data analytics and use ML to gain insights from your semistructured (such as JSON, XML) and unstructured datasets.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;AWS is launching two new features to help you improve the way you manage your data warehouse and integrate with a data lake:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Data Lake Export to unload data from an Amazon Redshift cluster to S3 in Apache Parquet format, an efficient open columnar storage format optimized for analytics.&lt;/li&gt;
&lt;li&gt;Federated Query to be able, from an Amazon Redshift cluster, to query:
o Across data stored in the cluster
o In your S3 data lake
o In one or more Amazon Relational Database Service (Amazon RDS) for PostgreSQL and Amazon Aurora PostgreSQL databases&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The following diagram illustrates the “moving the data around the perimeter” Lake House approach with S3, Amazon Redshift, Amazon Aurora PostgreSQL, and Amazon EMR to derive analytics.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---upfA3pN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3lzlsubh4l8tv4j1nuh6.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---upfA3pN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3lzlsubh4l8tv4j1nuh6.gif" alt="Image description" width="627" height="347"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Derive insights from your data lake, data warehouse and operational databases&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The steps that data follows through the architecture are as follows:&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Using the Redshift data lake export&lt;/strong&gt; — You can unload the result of a Redshift query to an S3 data lake in Apache Parquet format. The Parquet format is up to 2x faster to unload, and consumes up to 6x less storage in S3, compared to text formats. Redshift Spectrum enables you to query data directly from files in S3
without moving data. Or, you can use Amazon Athena, Amazon EMR, or
Amazon SageMaker to analyze the data.&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Using the Redshift federated query&lt;/strong&gt; — You can also access data in Amazon RDS and Aurora PostgreSQL stores directly from your Amazon Redshift data warehouse. In this way, you can access data as soon as it is available. By using federated queries in Amazon Redshift, you can query and analyze data across operational databases, data warehouses, and data lakes.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;See the blog post &lt;a href="https://aws.amazon.com/blogs/aws/new-for-amazon-redshift-data-lake-export-and-federated-queries/"&gt;New for Amazon Redshift – Data Lake Export and Federated Query&lt;/a&gt; for additional details.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#gt-derive-insights-from-your-data-lake-data-warehouse-and-purposebuilt-analytics-stores-by-using-glue-elastic-views"&gt;
  &lt;/a&gt;
  -&amp;gt; Derive insights from your data lake, data warehouse, and purpose-built analytics stores by using Glue Elastic Views
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;AWS Glue Elastic Views automates the flow of data from one AWS location to another, helping to eliminate the need for data engineers to write complex extract, transform and load (ETL) or extract, load and transform (ELT) scripts to facilitate data movement in the AWS Cloud. By utilizing CDC technology, you can be assured that you’re getting the latest changes from the source data sources.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You can just create a view using SQL and pull data out of databases, like DynamoDB or Aurora, and then you can pick a target like Amazon Redshift or S3 or Elastic Search Service, and all changes will propagate through. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You can scale up and down automatically. AWS also monitors that flow of data for any change, so all the error handling and monitoring is no longer your responsibility. It simplifies that data movement across services.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;AWS Glue Elastic Views builds on Athena’s federated query capability by making it easier for users to get access to the most up-to-date data while also enabling them to query data wherever it might reside–all using SQL. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The preview of AWS Glue Elastic Views supports DynamoDB and Aurora as sources, and Amazon Redshift and Elasticsearch as targets. The goal is for AWS to add more supported sources and destinations over time. It’s also welcoming customers and partners to use the Elastic Views API to add support for their databases and data stores, too.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The following diagram illustrates the “moving the data around the perimeter” Lake House approach with AWS Glue Elastic Views to derive insights.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Jr9do65m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/32y8rt5kn2zbr3u46dm6.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Jr9do65m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/32y8rt5kn2zbr3u46dm6.gif" alt="Image description" width="568" height="229"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Derive insights from your data lake, data warehouse, and purpose-built analytics stores by using AWS Glue Elastic Views&lt;/em&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;A Lake House architecture, built on a portfolio of purpose-built services, helps you quickly get insight from all your data to all your users. It enables you to build for the future so you can easily add new analytic approaches and technologies as they become
available.&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Hope this guide helps you with Designing the Analytics patterns using a Lake House approach on AWS.&lt;/p&gt;

&lt;p&gt;Let me know your thoughts in the comment section 👇&lt;br&gt;
And if you haven't yet, make sure to follow me on below handles:&lt;/p&gt;

&lt;p&gt;👋 &lt;strong&gt;connect with me on &lt;a href="https://www.linkedin.com/in/adit-modi-2a4362191/"&gt;LinkedIn&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
🤓 &lt;strong&gt;connect with me on &lt;a href="https://twitter.com/adi_12_modi"&gt;Twitter&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
🐱‍💻 &lt;strong&gt;follow me on &lt;a href="https://github.com/AditModi"&gt;github&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
✍️ &lt;strong&gt;Do Checkout &lt;a href="https://aditmodi.hashnode.dev"&gt;my blogs&lt;/a&gt;&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Like, share and follow me 🚀 for more content.&lt;/p&gt;


&lt;div class="ltag__user ltag__user__id__497987"&gt;
  
    .ltag__user__id__497987 .follow-action-button {
      background-color: #000000 !important;
      color: #fa6c00 !important;
      border-color: #000000 !important;
    }
  
    &lt;a href="/aditmodi" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FYJrtrA_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--mUzXbt1U--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/497987/edde8513-7308-4a4d-9592-2be160d074d2.png" alt="aditmodi image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/aditmodi"&gt;Adit Modi&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/aditmodi"&gt;Cloud Engineer | AWS Community Builder | 8x AWS Certified | 3x Azure Certified | Author of Cloud Tech , DailyDevOps &amp;amp; BigDataJournal | DEV moderator&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a href="https://d1.awsstatic.com/whitepapers/derive-insights-from-aws-lake-house.pdf?did=wp_card&amp;amp;trk=wp_card"&gt;Reference Notes&lt;/a&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>bigdata</category>
      <category>cloud</category>
      <category>analytics</category>
    </item>
    <item>
      <title>An In-Depth Look at the React Lifecycle Methods</title>
      <author>Shafia Rahman Chowdhury</author>
      <pubDate>Thu, 30 Dec 2021 14:57:35 +0000</pubDate>
      <link>https://dev.to/shafia/an-in-depth-look-at-the-react-lifecycle-methods-1i20</link>
      <guid>https://dev.to/shafia/an-in-depth-look-at-the-react-lifecycle-methods-1i20</guid>
      <description>&lt;p&gt;&lt;strong&gt;What is react component lifecycle?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Humans have to go through three stages of life: birth, grow and death to complete their lifecycle. To govern whatever events are taking place on a website, a React component also has a lifecycle, and like humans, a React component’s lifecycle comprises three phases to have better control over the components as well as to manipulate them. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What are the three phases of a React component’s lifecycle?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A component must go through three stages of life to complete its lifecycle: &lt;strong&gt;mounting&lt;/strong&gt;, &lt;strong&gt;updating&lt;/strong&gt; and &lt;strong&gt;unmounting&lt;/strong&gt;. Each stage of a lifecycle offers lifecycle methods. In this blog, I will explain the purpose of these methods and will demonstrate how to implement them by writing a code for each.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Mounting&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Mounting is the initial phase in the lifecycle of a React component, and it is invoked when the component has to be placed into the Document Object Model (DOM) and displayed for the first time on the webpage. &lt;/p&gt;

&lt;p&gt;Mounting provides us with four lifecycle methods: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;constructor()&lt;/li&gt;
&lt;li&gt;getDerivedStateFromProps()&lt;/li&gt;
&lt;li&gt;render()&lt;/li&gt;
&lt;li&gt;componentDidMount()&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Constructor()&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The constructor() method is triggered when the component is created as well as when a state or any variable needs to be defined. We can also use the constructor() method to bind event handlers to the class instance. &lt;/p&gt;

&lt;p&gt;The following shows an example of how to use a constructor() method:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Input:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CBkAPeE1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/etxbhto41wry25shhzfj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CBkAPeE1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/etxbhto41wry25shhzfj.png" alt="constructor()" width="838" height="791"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0JpKrDmh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fc97nd102brbcxq42pc3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0JpKrDmh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fc97nd102brbcxq42pc3.png" alt="Image description" width="496" height="125"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The super() is used to access all the methods of the parent class. The constructor() method only initializes the state hence why we wrote the increment() function outside the constructor since it carries the setState() method that updates the state (the count gets incremented by 1 every time the button is clicked) when the button ‘click’ is clicked.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;getDerivedStateFromProps()&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This method is a static method used when the state depends on the props of the components. It takes updated props and the current state as arguments and returns either null or an object that has the updated state of the component. The following shows an example of how to use a getDerivedStateFromProps() method:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Input:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OCj2G_9C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rmka7cnnv5s27yxrdh3t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OCj2G_9C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rmka7cnnv5s27yxrdh3t.png" alt="getDerivedStateFromProps()" width="880" height="976"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A prop is sent from the parent class ‘App’ to the child class ‘Child’. With the help of a constructor(), a state is initialized. The getDerivedStateFromProps() receives the prop from the parent class as a parameter and compares the message in this.state with the message in prop. As a result, the state gets updated as the condition in the if statement is false. A null would have been returned, however, if the condition was true and we would have seen the message ‘Hi Everyone’ on the UI.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;render()&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Out of all lifecycle methods, the render() method is the only one that must be used. This is the mechanism responsible for delivering HTML to the DOM. In other words, it describes the browser how the content should be rendered on the UI.&lt;/p&gt;

&lt;p&gt;I haven’t provided any examples as we have already seen how to use this method in the above two examples.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;componentDidMount()&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This method is called after the render() method. After the React component is mounted (i.e., is created and inserted) into the DOM, the componentDidMount() gets invoked. This method is usually called to implement APIs. The following shows an example of how to use a componentDidMount() method:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Input:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--au0TOHf0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a35z0jaokdh6z03wlgxc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--au0TOHf0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a35z0jaokdh6z03wlgxc.png" alt="componentDidMount()" width="600" height="688"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Output 1:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ibh6PO3g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e9ck6dt3d7bws6uhl2jb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ibh6PO3g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e9ck6dt3d7bws6uhl2jb.png" alt="Image description" width="566" height="153"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Output 2:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3Xxr4mto--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vklr47rbgrj66hvla5az.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3Xxr4mto--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vklr47rbgrj66hvla5az.png" alt="Image description" width="744" height="151"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The componentDidMount() is invoked after the constructor initializes the state and with help of the render() method, the message Year 2021 gets rendered. Then  the componentDidMount() gets called  to re-render the message.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Updating&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The second phase of a React component’s lifecycle gets triggered when the components need to get re-rendered due to changes in props or in state.&lt;/p&gt;

&lt;p&gt;Updating provides us with five lifecycle methods:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;getDerivedStateFromProps()&lt;/li&gt;
&lt;li&gt;shouldComponentUpdate()&lt;/li&gt;
&lt;li&gt;render()&lt;/li&gt;
&lt;li&gt;getSnapshotBeforeUpdate()&lt;/li&gt;
&lt;li&gt;componentDidUpdate()&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Out of the five methods, I will explain &lt;strong&gt;shouldComponentUpdate()&lt;/strong&gt;, &lt;strong&gt;getSnapshotBeforeUpdate()&lt;/strong&gt; and &lt;strong&gt;componentDidUpdate()&lt;/strong&gt; as the other two methods(&lt;strong&gt;render()&lt;/strong&gt; and &lt;strong&gt;getDerivedStateFromProps()&lt;/strong&gt;) has already been discussed in the above sections.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;shouldComponentUpdate()&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This method informs React whether or not to update and re-render the component. It produces a Boolean result indicating whether or not to update, with true being the default. This approach is quite effective for improving performance by minimizing the need to constantly re-render components.&lt;/p&gt;

&lt;p&gt;You may create your own logic to verify whether the component should update or not depending on the comparison result between the previous props and the next props as well as the previous state and the next state. If the result evaluates to true the component gets updated and re-rendered. The following shows an example of how to use a shouldComponentUpdate() method:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Input:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rA_CdLng--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8fime3h1zyircfvcgeu0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rA_CdLng--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8fime3h1zyircfvcgeu0.png" alt="shouldComponentUpdate()" width="880" height="721"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SIQL14-Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5xhpox6i34qpy8tu4gj6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SIQL14-Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5xhpox6i34qpy8tu4gj6.png" alt="Image description" width="525" height="221"&gt;&lt;/a&gt;  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zEMFMMFG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ncmqfxa8zvojznpgww2j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zEMFMMFG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ncmqfxa8zvojznpgww2j.png" alt="Image description" width="185" height="220"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here, I have sent a prop with a value 5 to the shouldComponentUpdate() method and inside the method I have incorporated an if statement that evaluates to true and  returns false if the count after incrementing equals to 5. This indicates that the method will not update the component if it returns false and this can be seen in the output - the value 5 did not get rendered on the console of Chrome DevTools as it returned false.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;getSnapshotBeforeUpdate&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This methods receives the previous props and the previous state as parameters and is invoked right before the DOM gets rendered. The getSnapshotBeforeUpdate() allows your component to capture certain information from the DOM before it gets updated. It returns either a null or a value and this values gets passed as an argument to the next method we will be talking about. &lt;/p&gt;

&lt;p&gt;The following shows an example of how to use a getSnapshotBeforeUpdate() method:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Input:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Rz6QpYKp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v6b54fqg6uzu4magb9zj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rz6QpYKp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v6b54fqg6uzu4magb9zj.png" alt="getSnapshotBeforeUpdate()" width="880" height="904"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--v6jqKzqp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l77amq1imol3mtpz4ay6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--v6jqKzqp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l77amq1imol3mtpz4ay6.png" alt="Image description" width="880" height="185"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;componentDidUpdate()&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Once the update is complete, this function is called. It accepts as input the previous props, previous state, and a parameter from the getSnapshotBeforeUpdate(). If we need to change anything in the component after the update we use the componentDidUpdate() method.&lt;/p&gt;

&lt;p&gt;I have not shown any code for the componentDidUpdate() as I have implemented this method in the previous example.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Unmounting&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is the last stage of a React component lifecycle and this get invoked when the component needs to be removed from the DOM.&lt;/p&gt;

&lt;p&gt;Unmounting provides us with one lifecycle method: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;componentWillUnmount()&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;componentWillUnmount()&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When there is no matching in the element tree for a component, it enters the unmount phase. The componentWillUnmount() gets called just before the component is deleted from the real DOM. Along with the removal of this component from the DOM tree, all of its children are also automatically deleted.&lt;/p&gt;

&lt;p&gt;The following shows an example of how to use a componentWillUnmount() method:&lt;br&gt;
Input:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3omM5suq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0s08dn4t1pezaacklp5h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3omM5suq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0s08dn4t1pezaacklp5h.png" alt="componentWillUnmount()" width="880" height="940"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Output:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bIrsEX4N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xvj3qp7tvopvlnqi4bu5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bIrsEX4N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xvj3qp7tvopvlnqi4bu5.png" alt="Image description" width="719" height="356"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c4orzxi4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1rmwz9qmwscjkoeffjzc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c4orzxi4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1rmwz9qmwscjkoeffjzc.png" alt="Image description" width="623" height="343"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The componentWillUnmount() pops a message on the alert box before hiding the second message when the this.state.show becomes true after clicking the button. This shows that the method gets invoked before deleting any components.&lt;/p&gt;

&lt;p&gt;Well, that’s all! I hope you have a better grasp of what React lifecycle methods and how they operate after going through this blog and the practical examples.&lt;/p&gt;

&lt;p&gt;Catch you later!&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Convert video to gif in python</title>
      <author>Praveen Kumar</author>
      <pubDate>Thu, 30 Dec 2021 14:44:36 +0000</pubDate>
      <link>https://dev.to/abipravi/convert-video-to-gif-in-python-464n</link>
      <guid>https://dev.to/abipravi/convert-video-to-gif-in-python-464n</guid>
      <description>&lt;h2&gt;
  &lt;a href="#how-to-convert-raw-video-file-endraw-to-raw-gif-endraw-format-using-python-programming-language"&gt;
  &lt;/a&gt;
  How to convert &lt;code&gt;video file&lt;/code&gt; to &lt;code&gt;gif&lt;/code&gt; format using &lt;strong&gt;Python&lt;/strong&gt; programming language
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;First install module
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pip install MoviePy
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Now Code the following
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;moviepy.editor&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="n"&gt;clip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;VideoFileClip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"./video1.mp4"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;clip&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write_gif&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"output.gif"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can also trim the video from one part and then convert them into gif&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;moviepy.editor&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; 
&lt;span class="n"&gt;clip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;VideoFileClip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"./video1.mp4"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;subclip&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="p"&gt;),(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="n"&gt;resize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ACCORDING&lt;/span&gt; &lt;span class="n"&gt;TO&lt;/span&gt; &lt;span class="n"&gt;THE&lt;/span&gt; &lt;span class="n"&gt;USER&lt;/span&gt; &lt;span class="n"&gt;WISH&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; 
&lt;span class="n"&gt;clip&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write_gif&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"output.gif"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Thanks for Reading&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wmBtEpkv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1nefpdykghwyfpuve2f2.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wmBtEpkv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1nefpdykghwyfpuve2f2.gif" alt="Image 1" width="498" height="498"&gt;&lt;/a&gt; &lt;br&gt;
If you like this article please like and leave us an comment&lt;/p&gt;

</description>
      <category>python</category>
      <category>abipravi</category>
    </item>
    <item>
      <title>Bootstrap vs Tailwind CSS</title>
      <author>Kamran Ahmad</author>
      <pubDate>Thu, 30 Dec 2021 13:59:28 +0000</pubDate>
      <link>https://dev.to/officialkamran/bootstrap-vs-tailwind-css-13o8</link>
      <guid>https://dev.to/officialkamran/bootstrap-vs-tailwind-css-13o8</guid>
      <description>&lt;h2&gt;
  &lt;a href="#bootstrap"&gt;
  &lt;/a&gt;
  Bootstrap
&lt;/h2&gt;

&lt;p&gt;Bootstrap is &lt;strong&gt;Component-based&lt;/strong&gt; framework. It is based on &lt;strong&gt;object-oriented CSS&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Bootstrap comes with a set of &lt;strong&gt;pre-made components&lt;/strong&gt; that are used to design a typical website quickly.&lt;/p&gt;

&lt;p&gt;Bootstrap CSS is an &lt;strong&gt;easy-to-learn framework&lt;/strong&gt; that maintains consistency for different browser and devices. If you know CSS, then it is pretty easy to learn customization in Bootstrap for website development.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tailwind-css"&gt;
  &lt;/a&gt;
  Tailwind CSS
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Tailwind is known as Utility-first CSS Framework.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The most interesting feature of Tailwind CSS is &lt;strong&gt;high customization.&lt;/strong&gt; You can style each component of your website as the Tailwind UI demands form it.&lt;/p&gt;

&lt;p&gt;This framework has &lt;strong&gt;no ready-made components&lt;/strong&gt; for designing. You &lt;strong&gt;build your own custom components&lt;/strong&gt; with the utility classes.&lt;/p&gt;

&lt;p&gt;**&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#performance-of-bootstrap-vs-tailwind-css"&gt;
  &lt;/a&gt;
  Performance of Bootstrap vs Tailwind CSS
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Bootstrap&lt;/strong&gt; requires four main files to be incorporate in the project for development which requires heavy space to be occupaied about &lt;strong&gt;300 kb.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In &lt;strong&gt;Tailwind CSS&lt;/strong&gt; , we need style sheets to get our task done. This CSS file occupies about &lt;strong&gt;30kb&lt;/strong&gt; of the space.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#build-time-of-bootstrap-vs-tailwind-css"&gt;
  &lt;/a&gt;
  Build time of Bootstrap vs Tailwind CSS
&lt;/h2&gt;

&lt;p&gt;In &lt;strong&gt;Bootstrap&lt;/strong&gt;, we have a lot of overhead code and this causes the build time to be around &lt;strong&gt;160 seconds&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;As &lt;strong&gt;Tailwind&lt;/strong&gt; has built-in utility libraries, this shortens the build time up to &lt;strong&gt;8 to 10 seconds&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#which-one-to-pick-and-why"&gt;
  &lt;/a&gt;
  Which one to Pick and why?
&lt;/h2&gt;

&lt;p&gt;So, we can conclude that if you are working as a new backend developer or a "Full-Stack" developer, you should opt for Bootstrap first. Whereas if you are working as front-end developer then Tailwind CSS is the better option for the custom designs.&lt;/p&gt;

&lt;p&gt;but in the end, it is your choice either you want to go with Bootstrap for responsive design, or you want high customization in style your web with advantages of Tailwind CSS. it depends on project requirements and personal preferences.&lt;/p&gt;

&lt;p&gt;one more thing you can do for me &lt;br&gt;
&lt;a href="https://www.buymeacoffee.com/kamranah"&gt;buymeacoffee&lt;/a&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>css</category>
      <category>webdev</category>
      <category>tailwindcss</category>
    </item>
    <item>
      <title>LIVING IN THE ERA OF METAVERSE: 
</title>
      <author>Aqsa A. Razzaq</author>
      <pubDate>Thu, 30 Dec 2021 13:55:25 +0000</pubDate>
      <link>https://dev.to/zenkoders/living-in-the-era-of-metaverse-h3e</link>
      <guid>https://dev.to/zenkoders/living-in-the-era-of-metaverse-h3e</guid>
      <description>&lt;p&gt;When they say METAVERSE, do they actually mean an entire VIRTUAL UNIVERSE?&lt;br&gt;
A world where science will lay off and fiction will meet reality, is this what our future beholds?&lt;br&gt;
These, including several mind-blowing questionnaires, would be running in each one of our minds including us too. But for what has been this hype? Is it just fiction? Or is it a reality? Or maybe, even a fictitious reality?&lt;br&gt;
We have come up today with an answer to a number of your questions.&lt;br&gt;
Metaverse; A Family of apps comprising virtual reality is “an expansive network of persistent, real-time rendered 3D worlds and simulations.”&lt;br&gt;
The word “metaverse” is a portmanteau of two words “meta-” and “verse”. The word “meta” is a prefix of Greek-origin meaning “beyond” while “verse” comes from the word “universe.&lt;br&gt;
The metaverse is officially a game-changer. Though in its infancy, it's clear that the metaverse will radically change how we're able to interact online, how brands advertise, how fast crypto is adopted, and any number of other facets of life. Here's an explainer to help understand what changes are underway—and what's to come.&lt;br&gt;
Cmon’! Let’s watch the metaverse get physical!&lt;br&gt;
Imagine a VIRTUAL WORLD where people can connect from any corner of the glode by actually sitting next to each other, Avatars of every person around the globe representing their respective humans, including wardrobe of virtual clothes. A home space where people can store virtual goods, invite people over, and teleport (a whole different world of gaming where they are in to play). A world where your privacy and safety are taken good care of virtually. Fitness freaks get their own space to spend a good amount of time staying fit without any hassle of actually going or paying to the gym. A platform where businessmen and entrepreneurs can connect to their meetings or clients from everywhere on the earth, physically. Students can learn and practice virtually from history and space by watching every process of required info from closest to their eyes.&lt;br&gt;
Now imagine “YOU“ being a part of this world and actually living in this virtual reality!!! Isn’t it insane? Yes, we know it is.&lt;br&gt;&lt;br&gt;
If you haven’t considered how the metaverse will impact marketing, then you’re already behind the curve. The metaverse isn’t an “if” but a “when.” That is, it’s an inevitability. The metaverse will impact marketing in many ways, some of which you can begin to implement now.&lt;br&gt;
A few days ago, an NFT-based metaverse real estate company named Metaverse Group bought a parcel of land on a virtual real estate platform known as Decentraland for USD 2.43 million. It was the highest ever amount spent so far on virtual real estate!&lt;/p&gt;

&lt;p&gt;Virtual reality isn’t new. It’s been around in one variation or another for decades. Of course, it’s improved leaps in bounds in recent years, and it will continue to do so in the years to come.&lt;br&gt;
So what are the improvements which this new version of the virtual world holds?&lt;br&gt;
Selling physical and digital goods.&lt;br&gt;
Future hardware.&lt;br&gt;
Avatars being able to make actual eye contact and facial expressions. Also, having the same skin tones like that of the representative human.&lt;br&gt;
Measuring geometrics of a house to turn it into an avatar.&lt;br&gt;
From product development to the sale of existing products or services, virtual reality enables you to bring your customers into the fold. They can play an active role in all stages of the process. A virtual world, like aspects of Fortnite that can be accessed through PCs, game consoles, and even phones, could be metaverse.&lt;br&gt;
As the metaverse grows, so too will branding and advertising opportunities. Including virtual message boards, billboards, merchandise, and even the virtual clothing avatars wear.&lt;/p&gt;

&lt;p&gt;With events like this becoming more popular, especially with Generations Z and Alpha, metaverse events won’t just be a tool you can use but a necessity. As your target audience changes, so too will your marketing efforts. This is just one example of how the metaverse will play a role.&lt;/p&gt;

&lt;p&gt;METAVERSE; An ultimate promise of technology to connect people.&lt;br&gt;
It is the future, where just with a pair of glasses you can step beyond the physical world into the virtual world. &lt;/p&gt;

&lt;p&gt;How do you see this world ahead? &lt;/p&gt;

</description>
      <category>metaverse</category>
    </item>
    <item>
      <title>Ultimate list of JavaScript Learning Resource (Free)</title>
      <author>Kamran Ahmad</author>
      <pubDate>Thu, 30 Dec 2021 13:15:12 +0000</pubDate>
      <link>https://dev.to/officialkamran/ultimate-list-of-javascript-learning-resource-free-3kef</link>
      <guid>https://dev.to/officialkamran/ultimate-list-of-javascript-learning-resource-free-3kef</guid>
      <description>&lt;h2&gt;
  &lt;a href="#this-post-is-going-to-have-some-awesome-resources"&gt;
  &lt;/a&gt;
  This post is Going to have some Awesome Resources
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Website&lt;/strong&gt;&lt;br&gt;
👉&lt;a href="https://www.tutorialrepublic.com/"&gt;TutorialRepublic&lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://www.javascript.com/"&gt;Javascript.org&lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://htmldog.com/"&gt;HTML Dog&lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://www.freecodecamp.org/"&gt;FreeCodeCamp.org&lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://www.theodinproject.com/"&gt;The Odin Project&lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://www.w3schools.com/"&gt;W3Schools&lt;/a&gt; &lt;br&gt;
👉&lt;a href="https://www.javatpoint.com/"&gt;Javapoint&lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://wesbos.com/javascript"&gt;JavaScript Notes  &amp;amp; Reference(by Wesbos)&lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://www.studytonight.com/"&gt;Study Tonight&lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://www.tutorialspoint.com/index.htm"&gt;Tutorial Point&lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://devdocs.io/"&gt;Devdocs.io&lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://developer.mozilla.org/en-US/"&gt;MDN web Docs&lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://www.geeksforgeeks.org/"&gt;Geeks for Geeks&lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://www.sololearn.com/home"&gt;Sololearn&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Youtube Channels&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;👉&lt;a href="https://www.youtube.com/c/Freecodecamp"&gt;FreeCodeCamp.org&lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://www.youtube.com/c/HiteshChoudharydotcom"&gt;Hitesh Chaudhary &lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://www.youtube.com/c/Telusko"&gt;Telusko&lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://www.youtube.com/c/akshaymarch7"&gt;Akshay Saini&lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://www.youtube.com/c/CodeWithHarry"&gt;CodeWithHarry&lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://www.youtube.com/c/Academind"&gt;Academaind&lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://www.youtube.com/c/YahooBaba"&gt;Yahoo Baba&lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://www.youtube.com/c/TraversyMedia"&gt;Traversy Media&lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://www.youtube.com/c/TheNetNinja"&gt;The Net Ninja&lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://www.youtube.com/c/WebDevSimplified"&gt;Web Dev Simplified&lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://www.youtube.com/c/ThapaTechnical"&gt;Thapa Technical&lt;/a&gt; &lt;br&gt;
👉&lt;a href="https://www.youtube.com/c/dcode-software"&gt;Dcode&lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://www.youtube.com/user/LearnWebCode"&gt;LearnWebCode&lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://www.youtube.com/c/DevEd"&gt;Dev Ed&lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://dev.toJavaScript%20Mastery"&gt;JavaScript Mastery&lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://www.youtube.com/c/FlorinPop"&gt;Florin Pop&lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://www.youtube.com/c/CleverProgrammer"&gt;Clever Programmer&lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://www.youtube.com/c/WesBos"&gt;Wes Bos&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;E-Book&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;👉&lt;a href="https://eloquentjavascript.net/"&gt;Eloquent JavaScript&lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://github.com/getify/You-Dont-Know-JS"&gt;You Don't Know JS Yet Series&lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://www.oreilly.com/library/view/javascript-the-definitive/9781491952016/"&gt;JavaScript: The Definitive Guide&lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://www.oreilly.com/library/view/javascript-the-good/9780596517748/"&gt;JavaScript: The Good Parts&lt;br&gt;
&lt;/a&gt;👉&lt;a href="https://www.geeksforgeeks.org/difference-between-javascript-and-jquery/"&gt;JavaScript And JQuery&lt;/a&gt;&lt;br&gt;
👉&lt;a href="http://speakingjs.com/es5/"&gt;Speaking JavaScript&lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://exploringjs.com/impatient-js/"&gt;JavaScript For Impatient Programmers&lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://www.amazon.in/Effective-JavaScript-Specific-Software-Development/dp/0321812182"&gt;Effective JavaScript &lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://www.amazon.in/JavaScript-Easy-Steps-Mike-McGrath-ebook/dp/B00DMHO5EK"&gt;JavaScript in Easy Steps&lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://www.amazon.in/Learn-JavaScript-VISUALLY-Interactive-Exercises-ebook/dp/B00LDZ7824"&gt;Learn JavaScript Visually&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>tutorial</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Easy understanding of functions in python</title>
      <author>enosemi</author>
      <pubDate>Thu, 30 Dec 2021 13:11:42 +0000</pubDate>
      <link>https://dev.to/enosemi/easy-understanding-of-functions-in-python-1508</link>
      <guid>https://dev.to/enosemi/easy-understanding-of-functions-in-python-1508</guid>
      <description>&lt;p&gt;We should all understand a function is a block of organized reusable code for performing single or related action. Python has many built-in functions that we have probably used e.g &lt;code&gt;print()&lt;/code&gt;,&lt;code&gt;input()&lt;/code&gt;, etc. But there are also user-defined functions which allows you to create a block of code to perform your bidding at any time it is called.&lt;/p&gt;

&lt;p&gt;Now let's look at the python function syntax:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
def functionname(parameters):
   '''block of code'''
   pass

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It is as simple as that, next is explaining the use of each keywords in the syntax.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;The &lt;code&gt;def&lt;/code&gt; keyword is also know as  define is the first keyword that a function should begin with.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;Parameters&lt;/code&gt; or &lt;code&gt;arguments&lt;/code&gt; are placed within the parentheses and we use them inside our function body&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The code block begins after a colon and is usually indented&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Let's put this into practice and write a function that takes the sum of two numbers.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;def sum(num1, num2):
      '''this function adds two numbers'''
      Return num1 + num2

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above code shows the function name &lt;code&gt;sum&lt;/code&gt; that has two parameters for calculating the sum of two numbers&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-call-a-function"&gt;
  &lt;/a&gt;
  How to call a function
&lt;/h2&gt;

&lt;p&gt;In the previous code we wrote our function wasn't called so if we execute the command it will return nothing. To call a function we just type the function name and the desired parameters.&lt;br&gt;
 Let's try another example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Def sum(a , b):
    #this function add two numbers
    Return num1 + num2
#now call the function
sum(2,5)

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#how-to-define-a-functionuserdefined-functions"&gt;
  &lt;/a&gt;
  How To Define A Function(User-Defined Functions).
&lt;/h2&gt;

&lt;p&gt;The four steps to defining a function in Python are the following:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Use the keyword def to declare the function and follow this up with the function name.&lt;/li&gt;
&lt;li&gt;Add parameters to the function: they should be within the parentheses of the function. End your line with a colon.&lt;/li&gt;
&lt;li&gt;Add statements that the functions should execute.&lt;/li&gt;
&lt;li&gt;End your function with a return statement if the function should output something. Without the return statement, your function will return an object None.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Finally I want us to know we have two types of functions in python which are:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Built-in functions that were developed with the language e.g min()&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;user-defined functions that are created by the users to solve their problem.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>python</category>
    </item>
  </channel>
</rss>
