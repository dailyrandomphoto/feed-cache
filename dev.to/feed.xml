<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Plan your weekly meals ü•ó with this template</title>
      <author>Sarthak Sharma</author>
      <pubDate>Fri, 07 May 2021 11:20:24 +0000</pubDate>
      <link>https://dev.to/xenoxdev/plan-your-weekly-meals-with-this-template-120d</link>
      <guid>https://dev.to/xenoxdev/plan-your-weekly-meals-with-this-template-120d</guid>
      <description>&lt;p&gt;Hey folks üëãüèº&lt;/p&gt;

&lt;p&gt;We just launched another Product on the Product hunt. It's a notion template that helps you track your calories and make healthier choices ! and who doesn't want to have a fit physique when they come out of quarantine, eh ?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#meal-planner"&gt;
  &lt;/a&gt;
  Meal Planner
&lt;/h3&gt;

&lt;p&gt;Meal planning has never been easier and more organized! Prototion brings you this amazing Meal Planning Template for Notion, that helps you organize your meals for the day, keep track of the calories and macros present along the freedom to supplement your recipes with pictures - Just adds a special something to the meal planning process!&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/KJs6V_TroB4"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;In this template, you'll be able to track -&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#weekly-meals"&gt;
  &lt;/a&gt;
  Weekly Meals:
&lt;/h3&gt;

&lt;p&gt;In this template, you're provided with a weekly overview of your meals that you can change or upgrade at your convenience. Don't want fish on a Saturday ? Simply switch it up and replace it with an item of equal nutritive value! Yes, meals are easy to switch up!&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b1sp0tFD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/65t45gwzhsfrxnz9ison.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b1sp0tFD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/65t45gwzhsfrxnz9ison.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#daily-meals"&gt;
  &lt;/a&gt;
  Daily Meals:
&lt;/h3&gt;

&lt;p&gt;With the filters to the right of the Weekly meal, you can change the board view and select the card for a particular day - This lets you look at all your meals for that day - Breakfast, lunch, dinner, snacks, etc.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PkAMWxFD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w9ko8et4jrj35ra6naf2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PkAMWxFD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w9ko8et4jrj35ra6naf2.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#calories-calculator-"&gt;
  &lt;/a&gt;
  Calories calculator :
&lt;/h3&gt;

&lt;p&gt;A calories calculator that saves you from the hassle of counting your intake and making cuts accordingly. Yes, that donut doesn't sound too alluring now, does it ? &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3Kr9uKQZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4eihltp2n8h5bdp2t19s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3Kr9uKQZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4eihltp2n8h5bdp2t19s.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#food-calories"&gt;
  &lt;/a&gt;
  Food Calories
&lt;/h3&gt;

&lt;p&gt;You have the freedom to view foods that meet certain criteria like being low-fat, sugar-free, etc. A list will then open up in front of you and you'll be pleased to find all those foods that you can eat while not worrying about them being sugary or not!&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zJRXnPAm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0ozzft3bge93sjwr3z2z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zJRXnPAm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0ozzft3bge93sjwr3z2z.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#in-depth-macros-count-"&gt;
  &lt;/a&gt;
  In depth Macros count :
&lt;/h3&gt;

&lt;p&gt;You have the freedom to enter and view calories and other macros like protein, carbs, etc. by clicking on the card of your choice in the weekly view.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wZ1nD4dW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/75203uran7pqvhfwyxln.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wZ1nD4dW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/75203uran7pqvhfwyxln.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#want-one"&gt;
  &lt;/a&gt;
  Want One?
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/3XBPrAvitLOBxD3bAn/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/3XBPrAvitLOBxD3bAn/giphy.gif" alt=""&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;&lt;em&gt;Here is your link&lt;/em&gt;&lt;/strong&gt; üëâ &lt;a href="https://prototion.com/notion-for/meal-planner"&gt;&lt;strong&gt;&lt;em&gt;Meal Planner&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We are on Producthunt today. Go show some love hereüî•&lt;br&gt;
&lt;a href="https://www.producthunt.com/posts/notion-meal-planner"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7Wqh1gaU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qpbl45jr6gyjnoggz29b.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>How to test Your API inside VSCODE</title>
      <author>Mukul Singhal</author>
      <pubDate>Fri, 07 May 2021 11:19:59 +0000</pubDate>
      <link>https://dev.to/mukul_singhal/how-to-test-your-api-inside-vscode-5635</link>
      <guid>https://dev.to/mukul_singhal/how-to-test-your-api-inside-vscode-5635</guid>
      <description>&lt;p&gt;Hey All üëã . &lt;/p&gt;

&lt;p&gt;Recently I got to know about a VS Code extension called &lt;strong&gt;Thunder Client‚ö°‚ö°&lt;/strong&gt; which can be used to test our API inside VS Code.&lt;br&gt;
How Cool üòé is that to test our API in the editor that we use all the time.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Thunder Client&lt;/strong&gt; is a GUI-based Rest Api HTTPS client and has a very clean UI and easy-to-use interface.&lt;/p&gt;

&lt;p&gt;One of the key highlights of this extension is &lt;strong&gt;Scriptless Testing&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As we need to write a lot of boilerplate code in Postman and other clients to do basic testing using scripting like status code equal 200. In Thunder client, there is a GUI-based test where we can select a couple of dropdowns to do most standard tests very easily without any scripting knowledge.&lt;br&gt;
As you can see in the image below&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0MCC2I8r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1000/1%2AKe_upcoljKriEz1q6hmIHg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0MCC2I8r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1000/1%2AKe_upcoljKriEz1q6hmIHg.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%F0%9F%96%A5-how-to-install"&gt;
  &lt;/a&gt;
  üñ• How to install
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;First of all open your VS Code and Click on extensions on the sidebar and install thunder client.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jaBHiyYA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5ts7sjh59q6czrlnyws2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jaBHiyYA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5ts7sjh59q6czrlnyws2.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;now you will see a icon on side bar
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZWeI99zF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ri47g140gygip7v840pg.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#lets-test-thunder-client-a-little-bit"&gt;
  &lt;/a&gt;
  Lets test Thunder client a little bit
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;for testing you can create your own API or you can use&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://gorest.co.in/"&gt;https://gorest.co.in/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;and get your authentication token and you are good to go.&lt;/p&gt;

&lt;p&gt;below you can see Thunder Client in action in Below GIF&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;GET request
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oTpOHsMj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sfeerc57eueuxy8f40bo.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oTpOHsMj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sfeerc57eueuxy8f40bo.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;POST request in which we create a GUI based Test&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gnGZuQ23--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/auiegalj5rkgf9m6q4cj.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gnGZuQ23--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/auiegalj5rkgf9m6q4cj.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now you can play around thunder client a little more.&lt;/p&gt;

&lt;p&gt;Let me know your thoughts about it üòÉand if you like it share it with others.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1EBI3Zrq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media2.giphy.com/media/26AHC0kdj8IeLkmBy/200.webp%3Fcid%3Decf05e47a1atqwznh4fq0oe3xqf3hy4ifhr25jovp2c21ld7%26rid%3D200.webp%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1EBI3Zrq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media2.giphy.com/media/26AHC0kdj8IeLkmBy/200.webp%3Fcid%3Decf05e47a1atqwznh4fq0oe3xqf3hy4ifhr25jovp2c21ld7%26rid%3D200.webp%26ct%3Dg" alt="end"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>vscode</category>
      <category>productivity</category>
    </item>
    <item>
      <title>API's From Dev to Production - Part 9</title>
      <author>Pete King</author>
      <pubDate>Fri, 07 May 2021 10:59:17 +0000</pubDate>
      <link>https://dev.to/newday-technology/api-s-from-dev-to-production-part-9-43fd</link>
      <guid>https://dev.to/newday-technology/api-s-from-dev-to-production-part-9-43fd</guid>
      <description>&lt;h1&gt;
  &lt;a href="#series-introduction"&gt;
  &lt;/a&gt;
  Series Introduction
&lt;/h1&gt;

&lt;p&gt;Welcome to &lt;strong&gt;Part 9&lt;/strong&gt; of this blog series that will go from the most basic example of a .net 5 webapi in C#, and the journey from development to production with a &lt;a href="https://dev.to/newday-technology/shift-left-engineering-4fpp"&gt;&lt;strong&gt;shift-left&lt;/strong&gt;&lt;/a&gt; mindset. We will use &lt;strong&gt;Azure&lt;/strong&gt;, &lt;strong&gt;Docker&lt;/strong&gt;, &lt;strong&gt;GitHub&lt;/strong&gt;, &lt;strong&gt;GitHub Actions&lt;/strong&gt; for CI/C-Deployment and Infrastructure as Code using &lt;strong&gt;Pulumi&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;In this post we will be looking at:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;S&lt;/strong&gt;tatic &lt;strong&gt;C&lt;/strong&gt;ode &lt;strong&gt;A&lt;/strong&gt;nalysis (SCA)&lt;/li&gt;
&lt;/ul&gt;




&lt;h1&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TL;DR
&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;S&lt;/strong&gt;tatic &lt;strong&gt;C&lt;/strong&gt;ode &lt;strong&gt;A&lt;/strong&gt;nalysis is an important step in the journey from dev to production; and continuing into other cycles such as feature development and more. With an abundance of tools out there on the market, there's bound to be one that suits you. CodeCov.io proved useful, but only for code coverage, by taking the next step and using SCA as well as code coverage, your API products will reap the benefits.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Quality should never take a back seat when building mission critical systems.&lt;/p&gt;
&lt;/blockquote&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/peteking"&gt;
        peteking
      &lt;/a&gt; / &lt;a href="https://github.com/peteking/Samples.WeatherForecast-Part-9"&gt;
        Samples.WeatherForecast-Part-9
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;





&lt;h1&gt;
  &lt;a href="#requirements"&gt;
  &lt;/a&gt;
  Requirements
&lt;/h1&gt;

&lt;p&gt;We will be picking-up where we left off in &lt;a href="https://dev.to/newday-technology/api-s-from-dev-to-production-part-8-4igl"&gt;Part 8&lt;/a&gt;, which means you‚Äôll need the end-result from &lt;a href="https://github.com/peteking/Samples.WeatherForecast-Part-8"&gt;GitHub Repo - Part 8&lt;/a&gt; to start with.&lt;/p&gt;

&lt;p&gt;If you have followed this series all the way through, and I would encourage you to do so, but it isn't necessary if previous posts are knowledge to you already.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;We are looking at &lt;em&gt;Static Code Analysis&lt;/em&gt;, another &lt;strong&gt;must have&lt;/strong&gt; when we are going from development to production. These days there are a great number of tools out there from self-hosted to SaaS, for me, I'm more comfortable with less to manage and have opted for a SaaS solution; this certainly doesn't mean you have to. I highly recommend you checkout what is on the market and what will suite your needs.&lt;/p&gt;

&lt;p&gt;We will be waving goodbye to CodeCov, there was a nasty breach and you can read more about that &lt;a href="https://www.zdnet.com/article/codecov-breach-impacted-hundreds-of-customer-networks/"&gt;here&lt;/a&gt; and &lt;a href="https://venturebeat.com/2021/04/26/hashicorp-revoked-private-key-exposed-in-codecov-security-breach/"&gt;here&lt;/a&gt;. However, the move away is not solely because of that reason, the main reason is the SaaS solution we are going to integrate with provides SCA as well as code coverage :)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;We will be integrating with &lt;a href="https://www.codeclimate.com/quality"&gt;Code Climate Quality&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Let's get started!&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#step-1"&gt;
  &lt;/a&gt;
  Step 1
&lt;/h1&gt;

&lt;p&gt;Head to their website ‚Üí Navigate to their Quality product and click ‚Üí Get Started. &lt;em&gt;This will register Code Climate Quality as a GitHub App&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Once you have complete that journey, you'll be presented with the below - A list of all you public repositories.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---_-5NQRu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hyxb8q693x83yavutib1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---_-5NQRu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hyxb8q693x83yavutib1.png" alt="blog-9-01"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#step-2"&gt;
  &lt;/a&gt;
  Step 2
&lt;/h1&gt;

&lt;p&gt;Add the repo of your choice, in our case, this will be, &lt;code&gt;Samples.WeatherForecast-Part-9&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;As soon as you select your chosen repository, Code Climate Quality will starting &lt;em&gt;doing its thing&lt;/em&gt;, just wait, have a cuppa tea :)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lDR3UJRM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/88c4erm7o86m4iloj9t1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lDR3UJRM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/88c4erm7o86m4iloj9t1.png" alt="blog-9-02"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Once Code Climate Quality has completed its build and scan etc. you'll be informed about it with a nice little pop-up :)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SmAu6fRz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n24pv2tkey95ox8s51ba.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SmAu6fRz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n24pv2tkey95ox8s51ba.png" alt="blog-9-03"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#step-3"&gt;
  &lt;/a&gt;
  Step 3
&lt;/h1&gt;

&lt;p&gt;Navigate to your repository dashboard.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Checkout the stats - They look pretty good so far!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You'll notice the &lt;em&gt;maintainability rating&lt;/em&gt; is currently an &lt;strong&gt;A&lt;/strong&gt;. However, &lt;strong&gt;there is no code coverage!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kHHTDiYD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/30wkncmxjmvqwedbr0ng.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kHHTDiYD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/30wkncmxjmvqwedbr0ng.png" alt="blog-9-04"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#step-4"&gt;
  &lt;/a&gt;
  Step 4
&lt;/h1&gt;

&lt;p&gt;Let's fix the code coverage.&lt;/p&gt;

&lt;p&gt;Now, Code Climate Quality states in their documentation or technically speaking, doesn't state that C# is supported... Sad face :(&lt;/p&gt;

&lt;p&gt;However, let's not give up so quickly, looking at the &lt;a href="https://docs.codeclimate.com/docs/configuring-test-coverage#supported-languages-and-formats"&gt;supported code coverage formats&lt;/a&gt;, we should be...covered :D&lt;/p&gt;

&lt;p&gt;As we have learnt even in this blog series, &lt;code&gt;lcov&lt;/code&gt; is what we are currently using, and we can also generate &lt;code&gt;Cobertura&lt;/code&gt; as well; these are supported formats.&lt;/p&gt;

&lt;p&gt;We need to feed Code Climate Quality the &lt;code&gt;lcov&lt;/code&gt; file, just like we did with our departed CodeCov (&lt;em&gt;don't forget to remove CodeCov from your GitHub Workflows&lt;/em&gt;).&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#step-41"&gt;
  &lt;/a&gt;
  Step 4.1
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Navigate&lt;/em&gt; to Code Climate Quality ‚Üí Your repo ‚Üí Repo Settings ‚Üí Test Coverage.&lt;/p&gt;

&lt;p&gt;You'll see your &lt;code&gt;TEST REPORTER ID&lt;/code&gt;, we need to put this into our GitHub Secrets area.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fDfW0ce2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0a6u1v8h03p20k6zrmz7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fDfW0ce2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0a6u1v8h03p20k6zrmz7.png" alt="blog-9-19"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You should know how to do this by now, put it into your secrets for your repo and call it, &lt;code&gt;CC_TEST_REPORTER_ID&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h2&gt;
  &lt;a href="#step-42"&gt;
  &lt;/a&gt;
  Step 4.2
&lt;/h2&gt;

&lt;p&gt;Let's add a new step to our GitHub Action CI Workflow.&lt;/p&gt;

&lt;p&gt;Either remove CodeCov.io or before/after the job step, place the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Code coverage [Code Climate]&lt;/span&gt;
  &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;paambaati/codeclimate-action@v2.7.5&lt;/span&gt;
  &lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; 
    &lt;span class="na"&gt;CC_TEST_REPORTER_ID&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{secrets.CC_TEST_REPORTER_ID}}&lt;/span&gt;
  &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;coverageLocations&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ github.workspace }}/path/to/artifacts/testresults/coverage.info:lcov&lt;/span&gt;
    &lt;span class="na"&gt;prefix&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/code/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;We have the environment set to our test reporter id so it know which repo in Code Climate Quality to link it to.&lt;/p&gt;

&lt;p&gt;We've specified the coverage file, please note that there is a, &lt;code&gt;:lcov&lt;/code&gt; at the end to state that it is indeed an &lt;code&gt;lcov&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;The prefix parameter is purely required because of how we have built with Docker.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Prefix can refer to &lt;a href="https://app.codility.com/tests/184820/details/?assignedTo=all&amp;amp;invitedBy=all&amp;amp;review=all&amp;amp;score=any&amp;amp;search=&amp;amp;sort=createdDate&amp;amp;sortOrder=desc&amp;amp;status=active"&gt;sub-commands&lt;/a&gt; of the test reporter.&lt;/p&gt;

&lt;p&gt;We need to use this simply because when we compiled our code inside our Dockerfile, we copied to a local directory inside Docker, we, or more like I, chose to copy to, &lt;code&gt;/code&lt;/code&gt; by setting the working directory like so, &lt;code&gt;WORKDIR /code&lt;/code&gt;, and then copying the code and building. This means all the paths inside the &lt;code&gt;lcov&lt;/code&gt; file will point to &lt;code&gt;/code&lt;/code&gt;. However, inside the GitHub repository, that directory does &lt;strong&gt;not&lt;/strong&gt; exist.&lt;/p&gt;

&lt;p&gt;Very luckily (and with some trial and error on my part), &lt;code&gt;prefix: /code/&lt;/code&gt; resolves this issue :)&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#step-5"&gt;
  &lt;/a&gt;
  Step 5
&lt;/h1&gt;

&lt;p&gt;Make any commit, or simply trigger the CI workflow.&lt;/p&gt;

&lt;p&gt;Head on over to Code Climate Quality and you should have code coverage stats in your dashboard like so:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eXiHkwBZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ddxkc92ca9emps57l5hv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eXiHkwBZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ddxkc92ca9emps57l5hv.png" alt="blog-9-05"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#step-6"&gt;
  &lt;/a&gt;
  Step 6
&lt;/h1&gt;

&lt;p&gt;Code Climate Quality has a GitHub Bot.&lt;/p&gt;

&lt;p&gt;Let's set this up...&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Click&lt;/em&gt; ‚Üí &lt;strong&gt;Set up&lt;/strong&gt; (&lt;em&gt;Pull request comments&lt;/em&gt;)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Og8ITraM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1d8sya2ix3gw9nwebuar.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Og8ITraM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1d8sya2ix3gw9nwebuar.png" alt="blog-9-06"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Install the GitHub App...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Exwv-Qn---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k19drr11sfth6393vpwi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Exwv-Qn---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k19drr11sfth6393vpwi.png" alt="blog-9-07"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Confirm the permissions you've set...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u669WLQK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gryf4jv9e277u8ijkcue.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u669WLQK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gryf4jv9e277u8ijkcue.png" alt="blog-9-08"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;em&gt;Select&lt;/em&gt; ‚Üí &lt;strong&gt;Post additional inline comments on new issues&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UJDMXDxl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/guorngmaz3ktg07cykcp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UJDMXDxl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/guorngmaz3ktg07cykcp.png" alt="blog-9-09"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;em&gt;Toggle On&lt;/em&gt; ‚Üí &lt;strong&gt;Inline issue comments&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dvTCTa4g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b7w4ijuoy51sqt4zc817.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dvTCTa4g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b7w4ijuoy51sqt4zc817.png" alt="blog-9-10"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#step-7"&gt;
  &lt;/a&gt;
  Step 7
&lt;/h1&gt;

&lt;p&gt;Let's test out Code Climate Quality by making some obvious issues and see how it handles it, plus we can test out the developer experience.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-71"&gt;
  &lt;/a&gt;
  Step 7.1
&lt;/h2&gt;

&lt;p&gt;Modify the, &lt;code&gt;WeatherForecastController.cs&lt;/code&gt;&lt;br&gt;
&lt;em&gt;Change&lt;/em&gt; ‚Üí &lt;strong&gt;&lt;code&gt;Get()&lt;/code&gt;&lt;/strong&gt; method...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;HttpGet&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;IEnumerable&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;WeatherForecast&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Get&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;rng&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;Random&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;temps1&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Enumerable&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;Select&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;WeatherForecast&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Date&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;DateTime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Now&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;AddDays&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="n"&gt;TemperatureC&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rng&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Next&lt;/span&gt;&lt;span class="p"&gt;(-&lt;/span&gt;&lt;span class="m"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;55&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="n"&gt;Summary&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Summaries&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;rng&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Next&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Summaries&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Length&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ToArray&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;temps2&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Enumerable&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;Select&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;WeatherForecast&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Date&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;DateTime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Now&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;AddDays&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="n"&gt;TemperatureC&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rng&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Next&lt;/span&gt;&lt;span class="p"&gt;(-&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;45&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="n"&gt;Summary&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Summaries&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;rng&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Next&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Summaries&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Length&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ToArray&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Enumerable&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Concat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;temps1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;temps2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;All we've done here is duplicate the amount of responses, but it's slightly different. Take note of the &lt;code&gt;TemperatureC&lt;/code&gt; value in each. Hopefully this will be caught by Code Climate Quality as a &lt;strong&gt;duplication&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h2&gt;
  &lt;a href="#step-72"&gt;
  &lt;/a&gt;
  Step 7.2
&lt;/h2&gt;

&lt;p&gt;For the next modification, let's change the &lt;code&gt;WeatherForecast.cs&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Add&lt;/em&gt; ‚Üí New property called, &lt;code&gt;TemperatureFahrenheit&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;TemperatureFahrenheit&lt;/span&gt;  &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="m"&gt;32&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="n"&gt;TemperatureC&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt; &lt;span class="m"&gt;0.5556&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;This is identical, except for the property name, hopefully Code Climate Quality will pick this up as a duplication also.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h1&gt;
  &lt;a href="#step-8"&gt;
  &lt;/a&gt;
  Step 8
&lt;/h1&gt;

&lt;p&gt;Raise a PR for all of your changes and with your new CI workflow you should see some &lt;em&gt;action&lt;/em&gt; taken by Code Climate Quality...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KQosF0D1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gbwft6r33espryg0vcuo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KQosF0D1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gbwft6r33espryg0vcuo.png" alt="blog-9-11"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;As you can see from the image above, the Code Climate Quality GitHub Bot has made inline comments as it found a duplication, whoohoo!&lt;/p&gt;

&lt;p&gt;However, don't jump for joy just yet, as this is the only duplication found, it seems it has &lt;strong&gt;not&lt;/strong&gt; picked-up on the property body duplication :(&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h1&gt;
  &lt;a href="#step-9"&gt;
  &lt;/a&gt;
  Step 9
&lt;/h1&gt;

&lt;p&gt;Let's enable GitHub Status Checks.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Navigate&lt;/em&gt; to Code Climate Quality ‚Üí Your repo ‚Üí Repo Settings ‚Üí GitHub ‚Üí Pull request status updates ‚Üí &lt;em&gt;Click&lt;/em&gt; &lt;strong&gt;Edit&lt;/strong&gt; ‚Üí &lt;em&gt;Toggle On&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TxsdE3Yd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/70hs2odliylvj0axrqxt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TxsdE3Yd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/70hs2odliylvj0axrqxt.png" alt="blog-9-12"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Back in GitHub, head over to your repository ‚Üí Branches ‚Üí Branch Rule ‚Üí Check the below items so GitHub knows what required:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e1PU5bxB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9rd7y0aj4o2d50gqgjo6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e1PU5bxB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9rd7y0aj4o2d50gqgjo6.png" alt="blog-9-13"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;A handy thing in Code Climate Quality is you can see issues within its product itself, not just GitHub, so you have 2 views to look at.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SDXvGHxx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fpj3ietonjz35j5sahjn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SDXvGHxx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fpj3ietonjz35j5sahjn.png" alt="blog-9-14"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;By &lt;em&gt;resubmitting&lt;/em&gt; the PR, you will see the GitHub Status Checks shine - &lt;em&gt;Note I still have CodeCov.io in there, but it will be gone in subsequent posts&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rZmeUTwS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l13gekh6v0yn3bfvsdt6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rZmeUTwS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l13gekh6v0yn3bfvsdt6.png" alt="blog-9-15"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Given the status checks are true/false - Code Climate Quality has flagged the duplication issues and now I need to approve this &lt;em&gt;impact&lt;/em&gt; to the codebase. For this example, I will approve so we can see what happens.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This is a key moment to take note of, by using this workflow we can easily assess the impact and approve or deny, keeping track of codebase health has now never been more simple :)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lguVR50M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/amf4uvohvbnuzh6p4err.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lguVR50M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/amf4uvohvbnuzh6p4err.png" alt="blog-9-16"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#codebase-impact"&gt;
  &lt;/a&gt;
  Codebase Impact
&lt;/h1&gt;

&lt;p&gt;As we expected, we have made things worse! We have duplicated code, our maintainability has gone down, therefore, our rating has dropped from &lt;strong&gt;A&lt;/strong&gt; to &lt;strong&gt;B&lt;/strong&gt;; naturally our test coverage has dropped down as well.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kkEXR_nD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nn2r254mtxttca2p50qn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kkEXR_nD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nn2r254mtxttca2p50qn.png" alt="blog-9-17"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#technical-debt-view"&gt;
  &lt;/a&gt;
  Technical Debt View
&lt;/h1&gt;

&lt;p&gt;A nice view in Code Climate Quality is the Technical Debt graph, it needs to be taken with a &lt;em&gt;pinch of salt&lt;/em&gt; in terms &lt;strong&gt;resolution time&lt;/strong&gt; and all, however, I do see how this can be useful from time to time.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Zblce5N6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/14h69ho0ul6421d2aj8d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Zblce5N6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/14h69ho0ul6421d2aj8d.png" alt="blog-9-18"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#what-have-we-learned"&gt;
  &lt;/a&gt;
  What have we learned?
&lt;/h1&gt;

&lt;p&gt;We have learned about why &lt;strong&gt;Static Code Analysis&lt;/strong&gt; is important and how an optimised workflow using SaaS tools such as Code Climate Quality can impact an engineering teams' daily lives. This is part of the journey to production, releasing without knowing elements such as maintainability and code coverage can so easily create issues down the line, especially with missions critical systems.&lt;/p&gt;

&lt;p&gt;Understanding maintainability and test coverage are vitally important to the quality of the products engineering teams' produce.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;CodeCov.io has now been removed.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h1&gt;
  &lt;a href="#next-up"&gt;
  &lt;/a&gt;
  Next up
&lt;/h1&gt;

&lt;p&gt;Part 10 in this series will be about:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;SAST - &lt;strong&gt;S&lt;/strong&gt;tatic &lt;strong&gt;A&lt;/strong&gt;pplication &lt;strong&gt;S&lt;/strong&gt;ecurity testing is used to secure software by reviewing the source code of the software to identify sources of vulnerabilities.&lt;/li&gt;
&lt;/ul&gt;




&lt;h1&gt;
  &lt;a href="#more-information"&gt;
  &lt;/a&gt;
  More information
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.azure.com"&gt;https://www.azure.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dotnet.microsoft.com/"&gt;https://dotnet.microsoft.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.github.com"&gt;https://www.github.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.docker.com"&gt;https://www.docker.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.pulumi.com"&gt;https://www.pulumi.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/coverlet-coverage/"&gt;https://github.com/coverlet-coverage/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.codeclimate.com/quality/"&gt;https://www.codeclimate.com/quality/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>dotnet</category>
      <category>docker</category>
      <category>csharp</category>
      <category>github</category>
    </item>
    <item>
      <title>My sight and accessibility tools</title>
      <author>Matthew Lane</author>
      <pubDate>Fri, 07 May 2021 10:47:06 +0000</pubDate>
      <link>https://dev.to/newday-technology/my-sight-and-accessibility-tools-3i69</link>
      <guid>https://dev.to/newday-technology/my-sight-and-accessibility-tools-3i69</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;If I don‚Äôt have my glasses on or my contact lenses in, most visual interfaces are hard to use, the nature of my eyesight is such that anything over 20-30cm from my face becomes blurred, out of focus and indistinct. Even with WCAG AA recommendations the contrast level is often not enough unless I have also pushed up the zoom size. I can easily dig around in the sofa to find and put my glasses on, but there are many forms of degeneration in sight affecting our customers/users that can‚Äôt be corrected. A deeper dive into how low vision is described, its incidences and causes can be found in &lt;a href="#footnote-1"&gt;footnote 1&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I invite you to walk through an experience of this and join me for a three stage experiment at the end.&lt;/p&gt;

&lt;p&gt;Without my glasses the following image is roughly what I see, only the larger and bolder fonts are readable, images have little internal detail and none of the legal compliance text is readable.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#what-i-see"&gt;
  &lt;/a&gt;
  What I see
&lt;/h1&gt;

&lt;p&gt;This is my world without my glasses. Thankfully there are built in tools in most operating systems to help me with this problem.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qiuNmTmm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tmvcman5flw3dparzvt2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qiuNmTmm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tmvcman5flw3dparzvt2.png" alt="The aqua login page, blurred to simulate what a user with low vision might experience."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#what-i-do-when-my-glasses-are-down-the-back-of-the-sofa"&gt;
  &lt;/a&gt;
  What I do when my glasses are down the back of the sofa?
&lt;/h2&gt;

&lt;p&gt;One of the most used features for users with low vision is the zoom, allowing content to be enlarged, if a website is well designed the content will re-flow so that content is kept within the browser window. Being able to re-size the interface without a loss in functionality ensures that we meet &lt;a href="https://www.w3.org/WAI/WCAG21/Understanding/resize-text.html"&gt;WCAG 2.1 - 1.4.4: Resize text&lt;/a&gt;; a &lt;em&gt;AA standard&lt;/em&gt;. All browsers should support zooming using the ctrl and plus keys, ctrl and 0 will reset your zoom.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9-r5LBTS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e8uqpq8ygjo71z8nmq6q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9-r5LBTS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e8uqpq8ygjo71z8nmq6q.png" alt="The aqua login page, zoomed in and blurred to simulate what a user with low vision might experience."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;A system wide tool that enables text to be read more clearly is &lt;em&gt;high contrast&lt;/em&gt; which improves &lt;strong&gt;clarity&lt;/strong&gt; and &lt;strong&gt;readability&lt;/strong&gt;, whilst this tool is useful it is system wide, meaning the entire operating system is in high contrast mode. &lt;/p&gt;

&lt;p&gt;Our base level of contrast supports &lt;a href="https://www.w3.org/WAI/WCAG21/Understanding/contrast-minimum.html"&gt;WCAG 2.1 - 1.4.3: Contrast (Minimum)&lt;/a&gt; a &lt;em&gt;AA standard&lt;/em&gt;, but without a control on our sites to increase contrast we cannot meet &lt;a href="https://www.w3.org/WAI/WCAG21/Understanding/contrast-enhanced.html"&gt;WCAG 2.1 - 1.4.6: Contrast (Enhanced)&lt;/a&gt; a &lt;strong&gt;&lt;em&gt;AAA&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;standard&lt;/em&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Enabling high contrast for Windows can be found in start ‚Üí settings ‚Üí ease of access ‚Üí high contrast.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0Am1K65l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pvtqbxctzmt42yyikox2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0Am1K65l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pvtqbxctzmt42yyikox2.png" alt="The aqua login page, switched to high contrast and blurred to simulate what a user with low vision might experience."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Using zoom and high contrast together gives me a much better chance at understanding what‚Äôs happening on the login page, being readable (for me without glasses) with no content hidden by horizontal scroll.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fzGdX5ck--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v4o69hralsds247glm93.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fzGdX5ck--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v4o69hralsds247glm93.png" alt="The aqua login page, switched to high contrast, zoomed in and blurred to simulate what a user with low vision might experience."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;The design systems we use at New Day support our adherence WCAG 2.1 AA guidelines when implemented to meet these standards.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;A note about magnifiers: whilst zooming in the browser is supported as a standard, there are tools which magnify a specific portion on the screen in all major operating systems see &lt;a href="#footnote-2"&gt;footnote 2&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#use-case-focus-is-important"&gt;
  &lt;/a&gt;
  Use case: Focus is important
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IXWEFppU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gsdv8rilyv5mnt17zmpt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IXWEFppU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gsdv8rilyv5mnt17zmpt.png" alt="The aqua login form, blurred to simulate what a user with low vision might experience."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nkLiJLok--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q907bgjnbv6umqfe0ktq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nkLiJLok--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q907bgjnbv6umqfe0ktq.png" alt="The aqua login form with username field focused, blurred to simulate what a user with low vision might experience."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;All browsers by default provide a focus state that will meet or exceed WCAG level A guidelines. If we change these default states we must make sure that:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;‚ÄúIt must be possible for a person to know which element among multiple elements has the keyboard focus. If there is only one keyboard actionable control on the screen, the success criterion would be met because the visual design presents only one keyboard actionable item.‚Äù&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The preceding statement is from the understanding success criterion and is a Level A standard see &lt;a href="#footnote-3"&gt;footnote 3&lt;/a&gt;.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#an-experiment-in-three-parts"&gt;
  &lt;/a&gt;
  An Experiment in Three Parts
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#part-one-the-low-vision-simulator"&gt;
  &lt;/a&gt;
  Part One - The Low Vision Simulator
&lt;/h2&gt;

&lt;p&gt;An experience of low vision can be simulated with a pair of old sunglasses and some sticky back plastic, simply wrap one or two layers of the tape around the glasses and pop them on - you now have an approximation of low vision. (If like me you are lucky enough to use glasses for near sight, just pop them off, or make you own glasses and experience the world of someone with more limited vision).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#part-two-see-what-its-like"&gt;
  &lt;/a&gt;
  Part Two - See what it‚Äôs like
&lt;/h2&gt;

&lt;p&gt;With your new vision simulators firmly on your face, open a webpage or download an application that you are unfamiliar with and attempt a login or registration journey without using any assistive tools - zoom, high contrast, screen readers, keyboard navigation etc. It‚Äôs important to be conscious of your experience, take notes about what actions you find difficult to achieve.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#part-three-explore-assistive-technologies"&gt;
  &lt;/a&gt;
  Part Three - Explore assistive technologies
&lt;/h2&gt;

&lt;p&gt;Re-visit the same webpage still with your fancy eyewear on, this time make use of as many accessibility tools as you feel comfortable with. Most mobile and desktop platforms have built in assistive technologies, find a mix that enables you to use application or site you were visiting, take notes about your experience and share that with your colleagues.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#footnotes"&gt;
  &lt;/a&gt;
  Footnotes
&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/WAI/GL/low-vision-a11y-tf/wiki/Overview_of_Low_Vision#Definition_of_Low_Vision"&gt;Overview of Low Vision - Low Vision Accessibility Task Force (w3.org)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.pcmag.com/how-to/how-to-use-the-magnifier-tool-on-windows-mac-and-mobile"&gt;How to Use the Magnifier Tool on Windows, Mac, and Mobile&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/WAI/WCAG21/Understanding/focus-visible.html"&gt;Understanding Success Criterion 2.4.7: Focus Visible (w3.org)&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>a11y</category>
      <category>webdev</category>
    </item>
    <item>
      <title>An Immersive Guide to Geospatial MongoDB Data</title>
      <author>Akash Shyam</author>
      <pubDate>Fri, 07 May 2021 10:28:43 +0000</pubDate>
      <link>https://dev.to/akashshyam/an-immersive-guide-to-geospatial-mongodb-data-13ci</link>
      <guid>https://dev.to/akashshyam/an-immersive-guide-to-geospatial-mongodb-data-13ci</guid>
      <description>&lt;p&gt;Dealing with coordinates can be a huge pain, so why not take the easy way? Instead of wrestling with coordinates in the frontend, push it away to the backend and let mongoDB do the work. Today, we'll look at dealing with geospatial data in mongoDB or mongoose. First on our list is GeoJSON.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#geojson"&gt;
  &lt;/a&gt;
  GeoJSON
&lt;/h3&gt;

&lt;p&gt;It has various data types to make dealing with coordinates easy. Keep in mind that longitude comes before latitude:&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#1-point"&gt;
  &lt;/a&gt;
  1) Point
&lt;/h5&gt;

&lt;p&gt;The simplest of all types, it's basically a coordinate i.e. a longitude and a latitude:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y0jn9L5M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kmubs9kmaast0qlqfncz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y0jn9L5M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kmubs9kmaast0qlqfncz.png" alt="An image of a point"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// A point&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nl"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Point&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;coordinates&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#2-linestring"&gt;
  &lt;/a&gt;
  2) LineString
&lt;/h5&gt;

&lt;p&gt;It's an array of array of coordinates, which will be joined to form a line. It basically consists of an array of points.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3wvqd7TC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gmauj819ce82r022pteu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3wvqd7TC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gmauj819ce82r022pteu.png" alt="An image of linestring"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// A linestring&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nl"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;LineString&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;coordinates&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;41&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#3-polygon"&gt;
  &lt;/a&gt;
  3) Polygon
&lt;/h5&gt;

&lt;p&gt;It's a polygon, that's it! squares, rectangles, hexagons, decagons, quadrilaterals so on. This must be a closed figure(the first point must be the same as the last point, I'm sounding like my maths teacher now üòÖ).&lt;/p&gt;

&lt;p&gt;We draw the sides of the polygon using linestrings. Now, to illustrate this better, I'm going to draw a very very simple coordinate grid(don't worry, nothing complicated).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RxiG45ao--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/adyn8y9v5ydan0glqalr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RxiG45ao--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/adyn8y9v5ydan0glqalr.png" alt="Screenshot 2021-05-07 at 12.40.50"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(I apologize on behalf of my bad designing skills for that crude grid)&lt;/p&gt;

&lt;p&gt;Now, let's draw a simple polygon:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--58sB0Qtl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hhkhm4554s0psznati31.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--58sB0Qtl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hhkhm4554s0psznati31.png" alt="Screenshot 2021-05-07 at 12.45.15"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here's how we can represent this in code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;type&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Polygon&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;coordinates&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
     &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There are a few to notice in this:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The nested arrays go 3 levels deep, I'll get back to this in a minute&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In the diagram, there are only 4 points but we have written 5 points in our code. This is because the first point and last point overlap in the diagram so it's not visible. To make this a closed figure and a valid &lt;code&gt;Polygon&lt;/code&gt;, we need to specify the last value the same as the first value to tell mongoDB that the figure has ended.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As I promised earlier, I'm going to explain the secret of the nested arrays:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The first array holds all the rings(I'll explain this in a second).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The second one holds each ring. Now, what are rings? It's basically a hole inside the polygon. So, the figure holds the area between the polygons. Here's a diagram:&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AX8A27eR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hjbqzn5luac1deteuqsr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AX8A27eR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hjbqzn5luac1deteuqsr.png" alt="Screenshot 2021-05-07 at 12.55.45"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The white triangle inside  is a &lt;code&gt;ring&lt;/code&gt;. The figure contains the area inside the outer polygon but outside the white area( the area shaded in red is contained).&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Finally, the 3rd array is our old friend, the array of coordinates.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The code for this polygon would look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;type&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Polygon&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;coordinates&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
     &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;],&lt;/span&gt;
     &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That was a long (and hopefully not boring) maths lesson. Let's actually play around with these types and learn about more operators.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-geometry-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;$geometry&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;It holds our geometrical data type (eg: &lt;code&gt;Point&lt;/code&gt;, &lt;code&gt;Polygon&lt;/code&gt;) and is used in tandem with other operators.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;$geometry&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;type&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Polygon&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;coordinates&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
     &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; 
    &lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#-raw-geointersects-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;$geoIntersects&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;It checks if the coordinates in a document are intersecting(not necessarily completely inside) the provided geometrical type(It has to be a 2d type i.e. &lt;code&gt;Polygon&lt;/code&gt;).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="nx"&gt;Places&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
   &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="na"&gt;location&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="na"&gt;$geoIntersects&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;$geometry&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="na"&gt;type&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Polygon&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;coordinates&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
               &lt;span class="p"&gt;[&lt;/span&gt; 
                  &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; 
               &lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="p"&gt;]&lt;/span&gt;
         &lt;span class="p"&gt;}&lt;/span&gt;
       &lt;span class="p"&gt;}&lt;/span&gt;
     &lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#-raw-geowithin-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;$geoWithin&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;Checks if the coordinates in a document are completely inside the provided &lt;code&gt;Polygon&lt;/code&gt;(single/multi ringed).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="nx"&gt;Places&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
   &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="na"&gt;location&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="na"&gt;$geoWithin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;$geometry&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="na"&gt;type&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Polygon&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;coordinates&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
               &lt;span class="p"&gt;[&lt;/span&gt; 
                  &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; 
               &lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="p"&gt;]&lt;/span&gt;
         &lt;span class="p"&gt;}&lt;/span&gt;
       &lt;span class="p"&gt;}&lt;/span&gt;
     &lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you want to do the same thing, but in a circle(i.e. in a particular radius from the coordinates) we use &lt;code&gt;$center&lt;/code&gt;. It takes in an array which has two elements. The first is the coordinates for the center and the second is the radius. The format is &lt;code&gt;[[coordinateX, coordinateY], radius]&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;Places&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;location&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;$geoWithin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;$center&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;74&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;40.74&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;  
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#-raw-near-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;$near&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;Fetches all documents which are have a certain distance from a specified coordinate which can be controlled using minimum and maximum lengths. Also, it will sort the documents from nearest to farthest.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;Places&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
   &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="na"&gt;location&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
       &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;$near&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;
          &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;$geometry&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Point&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="na"&gt;coordinates&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;68&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;35&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; 
            &lt;span class="p"&gt;},&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;
       &lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can optionally specify a &lt;code&gt;$minDistance&lt;/code&gt; and &lt;code&gt;$maxDistance&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;Places&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
   &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="na"&gt;location&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
       &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;$near&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;
          &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;$geometry&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Point&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="na"&gt;coordinates&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;68&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;35&lt;/span&gt; &lt;span class="p"&gt;],&lt;/span&gt;
              &lt;span class="na"&gt;$minDistance&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="na"&gt;$maxDistance&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2000&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;
       &lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;You might be thinking, how is this useful? Well, &lt;br&gt;
Suppose our user is looking for restaurants near him, we can provide all restaurants in a 10 mile radius.&lt;/p&gt;

&lt;p&gt;Thanks for reading until here. If you liked the article and learn something today, don't forget to leave a like and follow me on dev.to!&lt;/p&gt;

</description>
      <category>mongodb</category>
      <category>javascript</category>
      <category>node</category>
    </item>
    <item>
      <title>Build a GMAIL Clone Using just HTML &amp; CSS - Beginners Tutorial</title>
      <author>Somanath Goudar</author>
      <pubDate>Fri, 07 May 2021 09:57:48 +0000</pubDate>
      <link>https://dev.to/somanathgoudar/build-a-gmail-clone-using-just-html-css-476b</link>
      <guid>https://dev.to/somanathgoudar/build-a-gmail-clone-using-just-html-css-476b</guid>
      <description>&lt;p&gt;I Built Gmail Clone using just HTML &amp;amp; CSS. I Just Love to build these to practice my HTML &amp;amp; CSS Skills. I made a tutorial video to help beginners to improve there html &amp;amp; css skills to build real world projects.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tutorial Video:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/ZgUehcvVx7g"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Github:&lt;/strong&gt; &lt;a href="https://github.com/somanath-goudar/html-css-projects"&gt;https://github.com/somanath-goudar/html-css-projects&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Do you want to improve your HTML &amp;amp; CSS skills? Then Watch this video and follow along with me where we build GMAIL Clone using just HTML &amp;amp; CSS. We will be using flexbox and Google font Icons in this project.&lt;/p&gt;

&lt;p&gt;Hope You Guys Enjoyed the Video. Like Share Comment and Subscribe to my channel for more videos like these.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Channel:&lt;/strong&gt; &lt;a href="https://www.youtube.com/channel/UC_nTrhTr5fnBGjOxnkPUmmA"&gt;https://www.youtube.com/channel/UC_nTrhTr5fnBGjOxnkPUmmA&lt;/a&gt;&lt;br&gt;
Subscribe to My YouTube Channel, Next Week I Will be building &lt;strong&gt;Tiktok Clone&lt;/strong&gt; &amp;amp; &lt;strong&gt;Instagram Reels Clone&lt;/strong&gt; with just HTML &amp;amp; CSS.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You may also like my other posts:&lt;/strong&gt;&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/somanathgoudar" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KnNEMcDo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--15QGQnyq--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/600953/fdee0195-6d25-410d-9d97-c10ffaa4eb7d.jpeg" alt="somanathgoudar image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/somanathgoudar/build-a-youtube-clone-with-just-html-css-for-complete-beginners-4fk1" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Build a YouTube Clone with just HTML &amp;amp; CSS + Responsive - For  Beginners&lt;/h2&gt;
      &lt;h3&gt;Somanath Goudar „Éª Mar 21 „Éª 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/somanathgoudar" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KnNEMcDo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--15QGQnyq--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/600953/fdee0195-6d25-410d-9d97-c10ffaa4eb7d.jpeg" alt="somanathgoudar image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/somanathgoudar/build-a-linkedin-clone-using-just-html-css-3p1n" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Build a LinkedIn Clone Using just HTML &amp;amp; CSS - Beginners Tutorial&lt;/h2&gt;
      &lt;h3&gt;Somanath Goudar „Éª May 6 „Éª 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>tutorial</category>
      <category>html</category>
    </item>
    <item>
      <title>Techniques to scale your Relational Databases - Part 1</title>
      <author>Vishnu Chilamakuru</author>
      <pubDate>Fri, 07 May 2021 09:53:03 +0000</pubDate>
      <link>https://dev.to/vishnuchilamakuru/techniques-to-scale-your-relational-databases-part-1-3lj3</link>
      <guid>https://dev.to/vishnuchilamakuru/techniques-to-scale-your-relational-databases-part-1-3lj3</guid>
      <description>&lt;h3&gt;
  &lt;a href="#relational-database-management-system-rdbms"&gt;
  &lt;/a&gt;
  Relational database management system (RDBMS)
&lt;/h3&gt;

&lt;p&gt;A relational database like SQL is a collection of data items organized in tables.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ACID&lt;/strong&gt; is a set of properties of relational database &lt;a href="https://en.wikipedia.org/wiki/Database_transaction"&gt;transactions&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Atomicity&lt;/strong&gt; - Each transaction is all or nothing&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Consistency&lt;/strong&gt; - Any transaction will bring the database from one valid state to another&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Isolation&lt;/strong&gt; - Executing transactions concurrently has the same results as if the transactions were executed serially&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Durability&lt;/strong&gt; - Once a transaction has been committed, it will remain so&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are many techniques to scale a relational database like :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Replication&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Federation&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Sharding&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Denormalization&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SQL tuning&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In this article, I will explain more about &lt;strong&gt;&lt;em&gt;Replication&lt;/em&gt;&lt;/strong&gt; its advantages and disadvantages. I will be explaining about remaining techniques in upcoming blog posts.&lt;/p&gt;

&lt;p&gt;In general, there are two types of replication.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="#master-slave-replication"&gt;Master-Slave replication&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#master-master-replication"&gt;Master-Master replication&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#masterslave-replication"&gt;
  &lt;/a&gt;
  Master-Slave replication
&lt;/h2&gt;

&lt;p&gt;The master serves reads and writes, replicating writes to one or more slaves, which serve only reads.  Slaves can also replicate to additional slaves in a tree-like fashion.  If the master goes offline, the system can continue to operate in read-only mode until a slave is promoted to a master or a new master is provisioned.&lt;/p&gt;

&lt;p&gt;
  &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y3nmsqW---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://i.imgur.com/C9ioGtn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y3nmsqW---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://i.imgur.com/C9ioGtn.png"&gt;&lt;/a&gt;
  &lt;br&gt;
&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#disadvantages"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Disadvantages&lt;/strong&gt;:
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;Additional logic is needed to promote a slave to a master.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#mastermaster-replication"&gt;
  &lt;/a&gt;
  Master-Master replication
&lt;/h2&gt;

&lt;p&gt;Both masters serve reads and writes and coordinate with each other on writes.  If either master goes down, the system can continue to operate with both reads and writes.&lt;/p&gt;

&lt;p&gt;
  &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PHckTABu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://i.imgur.com/krAHLGg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PHckTABu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://i.imgur.com/krAHLGg.png"&gt;&lt;/a&gt;
  &lt;br&gt;
&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#disadvantages"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Disadvantages&lt;/strong&gt;:
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;You'll need a load balancer or you'll need to make changes to your application logic to determine where to write.&lt;/li&gt;
&lt;li&gt;Most master-master systems are either loosely consistent (violating ACID) or have increased write latency due to synchronization.&lt;/li&gt;
&lt;li&gt;Conflict resolution comes more into play as more write nodes are added and as latency increases.&lt;/li&gt;
&lt;/ul&gt;




&lt;h5&gt;
  &lt;a href="#disadvantages-of-replication-"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Disadvantages of replication&lt;/strong&gt; :
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;There is a potential for loss of data if the master fails before any newly written data can be replicated to other nodes.&lt;/li&gt;
&lt;li&gt;Writes are replayed to the read replicas.  If there are a lot of writes, the read replicas can get stuck with replaying writes and can't do as many reads.&lt;/li&gt;
&lt;li&gt;The more read slaves, the more you have to replicate, which leads to greater replication lag.&lt;/li&gt;
&lt;li&gt;On some systems, writing to the master can spawn multiple threads to write in parallel, whereas read replicas only support writing sequentially with a single thread.&lt;/li&gt;
&lt;li&gt;Replication adds more hardware and additional complexity.&lt;/li&gt;
&lt;/ul&gt;

&lt;h5&gt;
  &lt;a href="#references-"&gt;
  &lt;/a&gt;
  &lt;strong&gt;References&lt;/strong&gt; :
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.slideshare.net/jboner/scalability-availability-stability-patterns/"&gt;Scalability, availability, stability, patterns&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In the upcoming articles, I will discuss more about other scalability techniques like Sharding, Federation, Denormalization &amp;amp; SQL tuning.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#thank-you-for-reading"&gt;
  &lt;/a&gt;
  Thank you for reading
&lt;/h2&gt;

&lt;p&gt;Hope you find these resources useful. If you like what you read and want to see more about system design, microservices and other technology-related stuff... You can follow me on &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://twitter.com/vishnuchi"&gt;Twitter here&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Subscribe to my &lt;a href="https://www.getrevue.co/profile/vishnuch"&gt;Newsletter here&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/vishnuchi"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rb9xKs4G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png" alt="Buy Me A Coffee"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>database</category>
      <category>architecture</category>
      <category>performance</category>
      <category>devops</category>
    </item>
    <item>
      <title>Five classic SQL &amp; database posts - May 2021</title>
      <author>Helen Anderson</author>
      <pubDate>Fri, 07 May 2021 09:45:43 +0000</pubDate>
      <link>https://dev.to/helenanders26/five-classic-sql-database-posts-may-2021-48hd</link>
      <guid>https://dev.to/helenanders26/five-classic-sql-database-posts-may-2021-48hd</guid>
      <description>&lt;p&gt;Hi! I'm Helen, one of &lt;a href="https://dev.to/t/sql/top/infinity"&gt;#SQL&lt;/a&gt; and &lt;a href="https://dev.to/t/database/top/infinity"&gt;#database&lt;/a&gt; tag moderators.&lt;/p&gt;

&lt;p&gt;Each month I'll be taking a trip down memory lane and showcasing some classic data posts. Some of these might be your 'go-to' resources already, others may offer some new insight or ideas.&lt;/p&gt;

&lt;p&gt;Let's jump into the posts!&lt;/p&gt;




&lt;p&gt;First up &lt;a href="https://dev.to/jamesmh"&gt;James&lt;/a&gt; writes about building an e-commerce data model that‚Äôs scalable, flexible, and fast. This post shows what it takes to start building this infrastructure on your own. What are some of the areas to consider? What might the data model look like? How much work is involved?&lt;/p&gt;





&lt;div class="ltag__link"&gt;
  &lt;a href="/jamesmh" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t9fDHUdj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--504Brk9K--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/93505/c8881a55-01b1-4504-a36c-24606b1bb3c6.png" alt="jamesmh image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/fabric_commerce/building-a-scalable-e-commerce-data-model-p9l" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Building a Scalable E-Commerce Data Model&lt;/h2&gt;
      &lt;h3&gt;James Hickey „Éª Dec 29 '20 „Éª 8 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#database&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#architecture&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;





&lt;p&gt;This classic post from &lt;a href="https://dev.to/backendandbbq"&gt;Viach&lt;/a&gt; focuses on scanning a large table with 100 000 000 records using OFFSET with a primary key (keyset pagination). Check it out for three different approaches that might be right for your next project.&lt;/p&gt;





&lt;div class="ltag__link"&gt;
  &lt;a href="/backendandbbq" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lOOOak6F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--xDqEgNUY--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/25129/f5648ff9-4d7b-4dee-97f8-f757b4489cd2.jpg" alt="backendandbbq image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/backendandbbq/the-sql-i-love-chapter-one" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;The SQL I Love. Efficient pagination of a table with 100M records&lt;/h2&gt;
      &lt;h3&gt;Viach Kakovskyi „Éª Sep 24 '17 „Éª 6 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#sql&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#database&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;





&lt;p&gt;Next up is a post from &lt;a href="https://dev.to/molly"&gt;Molly&lt;/a&gt; who writes about how to tackle the common issue of giving engineers access to the data they need to do their jobs while keeping sensitive data secure. Read more for how the Forem team solved this very problem.&lt;/p&gt;





&lt;div class="ltag__link"&gt;
  &lt;a href="/molly" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xMrAIHhS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--qARnw-JH--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/119473/4fe2a414-c5d4-4cfe-b9da-8b9da90fb5e6.jpg" alt="molly image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/molly/how-to-give-engineers-filtered-database-access-8b6" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;How To Give Engineers Filtered Database Access&lt;/h2&gt;
      &lt;h3&gt;Molly Struve (she/her) „Éª Mar 18 '20 „Éª 7 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#ruby&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#rails&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#database&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;





&lt;p&gt;This classic post from &lt;a href="https://dev.to/mdgale"&gt;Matthew&lt;/a&gt; shows you how a database index works 'under the hood'. We don‚Äôt all have to be DBAs to write sufficiently fast queries and we shouldn‚Äôt need to be. As developers, getting familiar with the core structures of a database is a sufficiently pragmatic way to spot and improve performance.&lt;/p&gt;





&lt;div class="ltag__link"&gt;
  &lt;a href="/mdgale" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LWeQ2nPx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--jtGFvf47--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/242915/65de6792-dc10-446a-916e-d4c59ed262fc.png" alt="mdgale image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/mdgale/we-re-not-all-dbas-indexes-for-developers-557f" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;We‚Äôre not all DBAs: Indexes For Developers&lt;/h2&gt;
      &lt;h3&gt;Matthew Gale „Éª Oct 24 '19 „Éª 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#sql&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#index&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#backend&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#performance&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;





&lt;p&gt;Our last post is from &lt;a href="https://dev.to/ronsoak"&gt;Ron Soak&lt;/a&gt; with lessons and learnings from building a Redshift specific VS Code syntax highlighter from scratch. Check it out for more on the process and if you're a Redshift user check out the extension too.&lt;/p&gt;





&lt;div class="ltag__link"&gt;
  &lt;a href="/ronsoak" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KSi--unr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--wsKbBV0L--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/141003/2e555ee4-0ec3-4fc3-abf7-bcd45e2e069c.jpeg" alt="ronsoak image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/ronsoak/i-built-my-own-vs-code-syntax-highlighter-from-scratch-and-here-s-what-i-learned-1h98" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;I built my own VS Code Syntax Highlighter from scratch and here's what I learned.&lt;/h2&gt;
      &lt;h3&gt;ronsoak  „Éª Jul 16 '19 „Éª 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#data&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#sql&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#vscode&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;








&lt;p&gt;That's all for this month! For more from the Data Community check out the #sql, #postgres, #mysql, and #database tags, and follow &lt;a href="https://twitter.com/TheDatabaseDev"&gt;@TheDatabaseDev on Twitter&lt;/a&gt;.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jJnjqEMK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/6m19oidtq78smktb9haq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jJnjqEMK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/6m19oidtq78smktb9haq.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;




</description>
      <category>sql</category>
      <category>database</category>
      <category>bestofdev</category>
      <category>classicdev</category>
    </item>
    <item>
      <title>7 ways to improve developer productivity without getting drained</title>
      <author>Ranjali Roy</author>
      <pubDate>Fri, 07 May 2021 09:44:16 +0000</pubDate>
      <link>https://dev.to/ranjalir/7-ways-to-improve-developer-productivity-without-getting-drained-2cj2</link>
      <guid>https://dev.to/ranjalir/7-ways-to-improve-developer-productivity-without-getting-drained-2cj2</guid>
      <description>&lt;p&gt;Improving developer productivity isn‚Äôt straightforward.&lt;/p&gt;

&lt;p&gt;Because the day in the life of a developer doesn‚Äôt involve just writing code and solving problems. They‚Äôre expected to keep everyone updated on their progress. Share knowledge. Collaborate with their teammates ‚Äî technical and non-technical. Handoff work. Do code reviews. &lt;/p&gt;

&lt;p&gt;Whew!&lt;/p&gt;

&lt;p&gt;And the list goes on‚Ä¶&lt;/p&gt;

&lt;p&gt;In my exploration on the topic of developer productivity, &lt;a href="https://news.ycombinator.com/item?id=25590846"&gt;I came across two camps&lt;/a&gt;:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Folks who constantly ask why you haven‚Äôt updated progress. These are people who believe tracking progress is essential because how can you improve productivity if you don‚Äôt know where you stand! If devs aren‚Äôt working on priority items, are off-target to timelines, are not following QA process, or not following agreed specs then the company could be losing money. And developers are expensive as hell.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Folks who absolutely loathe the idea of being tracked. These are people who believe tickets in your PM tool are not the work itself, never was and never will be, but it gets taken for the central thing. They just want to get the work done. Fixing a bug without filing a ticket is in itself progress. Moving a card without any other change is not. Yet the second is what‚Äôs visible and therefore what‚Äôs rewarded.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;To be fair, both camps have some rather compelling points. You can‚Äôt completely stop tracking progress. And at the same time, you can‚Äôt constantly pester your teammate to share updates. &lt;/p&gt;

&lt;p&gt;So, what do you do? How do you improve a developer‚Äôs productivity and ship great software together?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-work-happens-in-git-why-not-let-it-do-the-grunt-work"&gt;
  &lt;/a&gt;
  1. Work happens in Git. Why not let it do the grunt work?
&lt;/h2&gt;

&lt;p&gt;According to &lt;a href="https://insights.stackoverflow.com/survey/2018#work-_-version-control"&gt;Stack Overflow‚Äôs 2018 survey of developers&lt;/a&gt;, 87% of developers use git around the world. Being one among them, having the ability to integrate git with your PM tool must be incredibly useful in getting work done and tracking its progress. &lt;/p&gt;

&lt;p&gt;But not many tools support such deep integration with GitHub, GitLab, and Bitbucket as Zepel does. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7ARwHci7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/no09d0agv9js7wstvoqm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7ARwHci7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/no09d0agv9js7wstvoqm.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When you‚Äôve integrated Zepel with &lt;a href="https://zepel.io/guide/integrations/github/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=ways-to-improve-developer-productivity"&gt;GitHub&lt;/a&gt;, &lt;a href="https://zepel.io/guide/integrations/gitlab/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=ways-to-improve-developer-productivity"&gt;GitLab&lt;/a&gt;, or &lt;a href="https://zepel.io/guide/integrations/bitbucket/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=ways-to-improve-developer-productivity"&gt;Bitbucket&lt;/a&gt;, there are a bunch of things you can do: &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Automatically showing progress information,&lt;/li&gt;
&lt;li&gt;Creating a feature in Zepel when a branch is created as &lt;code&gt;feature/{squad-key}/feature-name&lt;/code&gt;, and
Creating a bug when a bug-fix branch is created as &lt;code&gt;bug/{squad-key}/bug-fix-name&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Because let‚Äôs be honest, sometimes developers begin working on a fix even before it can be logged in your PM tool. To interrupt and ask them to link to an item just so you can track their progress isn‚Äôt ideal. So why not just log it automatically?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-if-you-dont-automate-the-mundane-tasks-youre-doing-a-disservice-to-your-development-team"&gt;
  &lt;/a&gt;
  2. If you don‚Äôt automate the mundane tasks, you‚Äôre doing a disservice to your development team
&lt;/h2&gt;

&lt;p&gt;A developer‚Äôs time is expensive. Surely you‚Äôd prefer if they spent it solving problems and building software.&lt;/p&gt;

&lt;p&gt;So what boring tasks can you take off their plate? Updating statuses, sharing progress, and letting you know that they‚Äôre waiting for you to have a look at the PR, of course. &lt;/p&gt;

&lt;p&gt;Once you‚Äôve connected your Zepel account with git (GitHub, GitLab, or Bitbucket), you can &lt;a href="https://zepel.io/guide/integrations/setup-git-workflow-automation/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=ways-to-improve-developer-productivity"&gt;set up git workflow automation&lt;/a&gt; and make automatic status updates. Any item can be moved automatically from one status to another. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y2Fhnd2J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k3vojtcj03kkef0wqg2y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y2Fhnd2J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k3vojtcj03kkef0wqg2y.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can set up triggers and appropriate actions to be carried out when those set of events occur. Some examples are shown in the image below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4IBOgg4---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xnj2g8y1hzqqxeb0ztog.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4IBOgg4---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xnj2g8y1hzqqxeb0ztog.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Of course, you don‚Äôt want to go overboard and automate every part of your development process. But when you automate key areas that are also considered by your developers as mundane, you aren‚Äôt just saving developers time and energy. You‚Äôre making sure they get to do what they love doing the most ‚Äî building products and software.&lt;/p&gt;

&lt;p&gt;Psst‚Ä¶ Here are &lt;a href="https://zepel.io/blog/5-git-workflows-to-improve-development/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=ways-to-improve-developer-productivity"&gt;5 git workflow strategies&lt;/a&gt; that you can use for inspiration.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-developer-controlled-system-automated"&gt;
  &lt;/a&gt;
  3. Developer controlled, System automated
&lt;/h2&gt;

&lt;p&gt;System notifications are probably the biggest culprits when it comes to a drop in productivity. But when you turn them off, you‚Äôre going to leave your teammates in the dark about your progress. &lt;/p&gt;

&lt;p&gt;Talk about a catch 22!&lt;/p&gt;

&lt;p&gt;Get control over what notifications you want (and don‚Äôt want) to send by connecting your Zepel account to your Slack channel. &lt;/p&gt;

&lt;p&gt;Don‚Äôt want to be notified when a task is completed? Sure. But want to be notified when a feature is marked as completed. Got it. And need a notification when a branch is opened for a feature that your developer was working on? Yep, you can get a notification for that too!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LkK6SKkZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ayx0xrlxndtnw0qvlo1k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LkK6SKkZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ayx0xrlxndtnw0qvlo1k.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And if you‚Äôve got the Git Workflow Automation already set up, you now have one powerful automation in place that connects Zepel + Git + Slack. Since it‚Äôs all automated and under your control, it allows developers to stay focussed and managers to plan the next steps.&lt;/p&gt;

&lt;p&gt;Look ma, no hands!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FDAb-orq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cqacbor42hmdrmm7txbs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FDAb-orq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cqacbor42hmdrmm7txbs.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-dont-leave-developers-in-the-dark-especially-when-it-comes-to-customer-feedbackrequests"&gt;
  &lt;/a&gt;
  4. Don‚Äôt leave developers in the dark. Especially when it comes to customer feedback/requests
&lt;/h2&gt;

&lt;p&gt;For all the talk of agile and scrum and getting constant feedback, there‚Äôs actually very little information that your developers get about what your customers are saying about the feature you just built.&lt;/p&gt;

&lt;p&gt;This becomes all the more painful when you have multiple customers making several requests across multiple tools ‚Äî help desks, live chat, error tracking tools, and more.&lt;/p&gt;

&lt;p&gt;And it gets painfully hard for the developer to get a sense of why they‚Äôre building what they‚Äôre building from an isolated ticket.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://zepel.io/product/streams/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=ways-to-improve-developer-productivity"&gt;Streams&lt;/a&gt; in Zepel helps you bridge this gap. You can gather requests from popular tools such as Canny, Intercom, Zendesk, Sentry, and more with a few clicks. You can then prioritize these requests and delegate them to your &lt;a href="https://zepel.io/product/streams/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=ways-to-improve-developer-productivity"&gt;Squad&lt;/a&gt; as a feature, user story, enhancement, or bug to be worked on. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QormY1yI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h684axihsiev4w7smsr1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QormY1yI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h684axihsiev4w7smsr1.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With Streams, your team won‚Äôt be cranking out software and features. They‚Äôll be shipping customer-focussed software. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-your-devs-have-great-ideas-too"&gt;
  &lt;/a&gt;
  5. Your devs have great ideas too!
&lt;/h2&gt;

&lt;p&gt;Between all the emojis and memes and ‚ÄúCan you hear me?‚Äù, there‚Äôs a wealth of ideas that your teammates have that can help you build better products. &lt;/p&gt;

&lt;p&gt;These pop-up between conversations and ‚ÄúBy the way, my friend said this about our product‚Äù. &lt;/p&gt;

&lt;p&gt;How do you capture them?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://zepel.io/guide/streams/sources-catalog/slack/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=ways-to-improve-developer-productivity"&gt;You can use Slack as a source for Streams&lt;/a&gt; in Zepel to collect all these ideas with just two clicks.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---LTiv6im--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fmt4zchs4uwcpfcib286.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---LTiv6im--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fmt4zchs4uwcpfcib286.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once they‚Äôre captured inside Streams in Zepel, you can group them with other similar requests, prioritize them, and hand them over to your development team for execution. &lt;/p&gt;

&lt;p&gt;P.S. You can send any team member's Slack message as a request, not just yours.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-get-in-the-zone-with-my-tasks"&gt;
  &lt;/a&gt;
  6. Get in the ‚ÄúZone‚Äù with My Tasks
&lt;/h2&gt;

&lt;p&gt;Everybody has a way of working. Some prefer to organize their work by deadlines. Some by Sprints. And some like to wing it. (It‚Äôs not productive. Trust me.)&lt;/p&gt;

&lt;p&gt;However you like to view your work, you can do it with My Tasks in Zepel.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--F420WsSq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bnpcox3l3czyflwyi66d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F420WsSq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bnpcox3l3czyflwyi66d.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And with quick access to the ID, you can effortlessly link the task assigned to you to a branch, commit, or a PR.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-communicate-changes-with-images-after-all-an-image-screams-a-thousand-words"&gt;
  &lt;/a&gt;
  7. Communicate changes with images. After all, an image screams a thousand words.
&lt;/h2&gt;

&lt;p&gt;One of the crucial aspects of product development involves design. How do you communicate minute design changes? Or a front-end bug? &lt;/p&gt;

&lt;p&gt;&lt;a href="https://chrome.google.com/webstore/detail/zepel-capture/gdaolpfjnepcmcgfjmjdfgmdbkifdpcp?hl=en?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=ways-to-improve-developer-productivity"&gt;Zepel Capture&lt;/a&gt; lets you capture images, edit them, share them with your team as screenshots, and even add them as an attachment to a new item in Zepel.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LiZI-1XE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s4h0rwwdtgvgorcdmmd3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LiZI-1XE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s4h0rwwdtgvgorcdmmd3.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#you-neednt-leave-your-current-workflow-and-switch-to-any-other-tool-take-screenshots-edit-them-and-then-share-these-with-the-team-or-attach-it-to-an-itemfeature"&gt;
  &lt;/a&gt;
  You needn‚Äôt leave your current workflow and switch to any other tool - take screenshots, edit them, and then share these with the team or attach it to an item/feature. 
&lt;/h2&gt;

&lt;p&gt;Impressed? Head to your &lt;a href="https://zepel.io/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=7-ways-to-improve-developer-productivity"&gt;Zepel&lt;/a&gt; account right away and tweak it to meet your needs. And if you‚Äôve got any queries reach out to us; we‚Äôre always happy to help.&lt;/p&gt;

</description>
      <category>devops</category>
      <category>devrel</category>
      <category>productivity</category>
      <category>softwaredevelopment</category>
    </item>
    <item>
      <title>JS interview in 2 minutes / this ü§Ø</title>
      <author>Nikita Kozlov</author>
      <pubDate>Fri, 07 May 2021 09:43:36 +0000</pubDate>
      <link>https://dev.to/kozlovzxc/js-interview-in-2-minutes-this-3hlm</link>
      <guid>https://dev.to/kozlovzxc/js-interview-in-2-minutes-this-3hlm</guid>
      <description>&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;br&gt;
Explain &lt;code&gt;this&lt;/code&gt; keyword in JavaScript.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Quick answer:&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;this&lt;/code&gt; keyword is referencing the current execution context.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Longer answer:&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;this&lt;/code&gt; works differently depending on where it was called.&lt;/p&gt;

&lt;p&gt;If you use &lt;code&gt;this&lt;/code&gt; in the global context, it will reference the &lt;code&gt;window&lt;/code&gt; object in the browser and the &lt;code&gt;global&lt;/code&gt; object in the node.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// browser&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// undefined&lt;/span&gt;
&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// 1&lt;/span&gt;

&lt;span class="c1"&gt;// node&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;global&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// undefined&lt;/span&gt;
&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;global&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// 1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For functions, it works similarly, but a still bit differently for the &lt;code&gt;strict&lt;/code&gt; mode.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;f1&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt; &lt;span class="c1"&gt;// default to global context&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;f2&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;use strict&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt; &lt;span class="c1"&gt;// undefined&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Arrow functions have their own tricks as well, they always refer to enclosing &lt;code&gt;this&lt;/code&gt;. We will get into details in the next section.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;f1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;f2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;f1&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="nx"&gt;f2&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="c1"&gt;// Window, Window&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;f1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;f2&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;f1&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;f2&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="c1"&gt;// obj reference, Window&lt;/span&gt;
&lt;span class="c1"&gt;// ^^^ f1 changed reference, but f2 didn't&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As for the class context, &lt;code&gt;this&lt;/code&gt; refers object itself&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Tmp&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
  &lt;span class="nx"&gt;method&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;tmp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Tmp&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nx"&gt;tmp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;method&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;// Tmp¬†{a: 10}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Feels like these are the most popular cases, but there are much much more corner cases, take a look on &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this"&gt;mdn&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Real-life applications:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I think one of the most common caveats with &lt;code&gt;this&lt;/code&gt; is when you are using callbacks, which are popular in React and in Angular as well.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;_say&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;sayHello&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_say&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello world&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;sayHi&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_say&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hi!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sayHi&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;// Works&lt;/span&gt;
&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sayHello&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;// Works&lt;/span&gt;

&lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sayHi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Works&lt;/span&gt;

&lt;span class="c1"&gt;// callback will show an error, because `this` reference will change&lt;/span&gt;
&lt;span class="c1"&gt;// Uncaught TypeError: this._say is not a function at sayHello&lt;/span&gt;
&lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sayHello&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So be careful and stay safe!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Resources:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this"&gt;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Other posts:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/kozlovzxc/js-interview-in-2-minutes-encapsulation-oop-2ico"&gt;JS interview in 2 minutes / Encapsulation (OOP)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/kozlovzxc/js-interview-in-2-minutes-polymorphism-oop-3pla"&gt;JS interview in 2 minutes / Polymorphism (OOP)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/kozlovzxc/js-interview-in-2-minutes-inheritance-in-oop-53h2"&gt;JS interview in 2 minutes / Inheritance in OOP&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Btw, I will post more fun stuff here and on &lt;a href="https://twitter.com/kozlovzxc"&gt;Twitter&lt;/a&gt;. Let's be friends üëã&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>typescript</category>
      <category>beginners</category>
      <category>career</category>
    </item>
    <item>
      <title>Five classic AWS posts - May 2021</title>
      <author>Helen Anderson</author>
      <pubDate>Fri, 07 May 2021 09:37:32 +0000</pubDate>
      <link>https://dev.to/aws-heroes/five-classic-aws-posts-may-2021-3cj8</link>
      <guid>https://dev.to/aws-heroes/five-classic-aws-posts-may-2021-3cj8</guid>
      <description>&lt;p&gt;Hi! I'm Helen, one of your AWS Heroes! &lt;/p&gt;

&lt;p&gt;Each month I'll be taking a trip down memory lane and showcasing some classic AWS posts. Some of these might be your 'go-to' resources already, others may offer some new insight or ideas.&lt;/p&gt;

&lt;p&gt;Let's jump into the posts!&lt;/p&gt;




&lt;p&gt;To get us started we have AWS Hero &lt;a href="https://dev.to/t04glovern"&gt;Nathan&lt;/a&gt; with an introduction to IoT. This is a great read for beginners as it breaks down some of the barriers people think exist when contemplating building an internet-connected project.&lt;/p&gt;





&lt;div class="ltag__link"&gt;
  &lt;a href="/t04glovern" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y6NxFBBp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--4WGuYDm8--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/91847/cf8f8065-aa21-43fd-9391-f29581844f12.png" alt="t04glovern image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/t04glovern/so-you-want-to-build-an-iot-project-2c0h" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;So, you want to build an IoT Project?&lt;/h2&gt;
      &lt;h3&gt;Nathan Glover „Éª Mar 1 '20 „Éª 9 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#iot&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#aws&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;





&lt;p&gt;Next, we have &lt;a href="https://dev.to/vel12171"&gt;Veliswa&lt;/a&gt; and the incredible journey from mainframe developer, to business analyst, to AWS Certified Cloud Engineer (and since this post was written AWS Hero and now Senior Developer Advocate at AWS). Check out this inspiring story for more.&lt;/p&gt;





&lt;div class="ltag__link"&gt;
  &lt;a href="/vel12171" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GjqSompz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--5D1J8-M7--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/173716/d7079eb3-3d89-41ce-b5de-81c4af292e7e.jpg" alt="vel12171 image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/vel12171/my-life-changing-journey-to-being-aws-certified-2njn" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;My life changing journey to being AWS Certified&lt;/h2&gt;
      &lt;h3&gt;Veliswa_Boya üáøüá¶ „Éª Aug 9 '19 „Éª 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#aws&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#womenwhocloud&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#career&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;





&lt;p&gt;&lt;a href="https://dev.to/pubudusj"&gt;Pubudu&lt;/a&gt; then shares the learnings from a project building an intelligent door bell with AWS Serverless services and a raspberry pi.&lt;/p&gt;

&lt;p&gt;When someone presses the 'door bell', it not only captures an image and checks through an Amazon Rekognition faces collection to see if the faces are indexed. But it also sends a message to Slack with the scaled image and a message with the names of the people recognised.&lt;/p&gt;





&lt;div class="ltag__link"&gt;
  &lt;a href="/pubudusj" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--awg5AFhh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--6gX1VKZC--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/353213/dadcca32-1581-4aec-bcbd-625554ed3cfb.png" alt="pubudusj image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/pubudusj/how-i-created-a-door-bell-with-aws-serverless-3n9j" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;How I created a door bell with AWS Serverless&lt;/h2&gt;
      &lt;h3&gt;Pubudu Jayawardana „Éª Sep 22 '20 „Éª 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#showdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#aws&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#serverless&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#lambda&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;





&lt;p&gt;Moving on to another classic tutorial, this time from &lt;a href="https://dev.to/yashints"&gt;Yaser&lt;/a&gt; who shows how you can easily set up a VPN with AWS for free using OpenVPN. Yas went from setting it up and a couple of mins later had it up and running. &lt;/p&gt;





&lt;div class="ltag__link"&gt;
  &lt;a href="/yashints" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rFCyiC6s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--EpAw1YMW--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/151401/4259d1b6-8e5b-47f0-b16b-eaa71e02ec62.jpeg" alt="yashints image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/yashints/let-s-setup-a-vpn-server-for-free-on-aws-under-5-min-1mg4" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Let's setup a VPN server, for free, on AWS, under 5 min üò±ü§Øüî•&lt;/h2&gt;
      &lt;h3&gt;Yaser Adel Mehraban  „Éª Aug 21 '19 „Éª 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#showdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#aws&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#vpnserver&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#openvpn&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;





&lt;p&gt;Our last classic post this month is from &lt;a href="https://dev.to/ceeoreo"&gt;Ceora&lt;/a&gt; with some great advice on keeping your AWS bill under control as you get started. If you follow some of the advice outlined in this post, you can be sure that unexpected costs won't be something you have to struggle with.&lt;/p&gt;





&lt;div class="ltag__link"&gt;
  &lt;a href="/ceeoreo" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CnpPqWlY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--xZCqZv2b--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/102841/e1a65308-9b86-49be-8dec-3a6ecac71489.jpeg" alt="ceeoreo image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/ceeoreo/never-get-an-unexpected-aws-bill-again-5526" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Never Get an Unexpected AWS Bill Again!&lt;/h2&gt;
      &lt;h3&gt;Ceora Ford „Éª Sep 8 '20 „Éª 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#aws&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#cloud&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;








&lt;p&gt;That's all for this month! For more great posts check out the &lt;a href="https://dev.to/t/aws"&gt;#aws tag&lt;/a&gt; and the &lt;a href="https://dev.to/aws-heroes"&gt;AWS Heroes&lt;/a&gt;.&lt;/p&gt;




</description>
      <category>aws</category>
      <category>bestofdev</category>
      <category>classicdev</category>
    </item>
    <item>
      <title>Good Git Commits</title>
      <author>Lakshya Singh</author>
      <pubDate>Fri, 07 May 2021 09:37:29 +0000</pubDate>
      <link>https://dev.to/king11/good-git-commits-2deo</link>
      <guid>https://dev.to/king11/good-git-commits-2deo</guid>
      <description>&lt;p&gt;Git commits are everywhere, and you might be generating more than 1k commits over a year. So it becomes crucial to understand that commit should be structured and created in a scalable manner.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4ta26ttc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/30qsglopgioj7asgrt1p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4ta26ttc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/30qsglopgioj7asgrt1p.png" alt="commit.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-bother"&gt;
  &lt;/a&gt;
  Why bother?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Writing better commits can make the difference between your debugging session lasting &lt;strong&gt;1 hour to a few minutes&lt;/strong&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;With good commits, it's easier for anyone to understand the progress of a project and get up to speed. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It also allows reviewers to understand your progress during the resolution of an issue clearly.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Generating good commits will allow you to track back changes/issues to a specific module/file and associate it to the code easily.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;They enable you to understand how the issue crept in the codebase and how you can easily resolve it.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Good commit messages can save you the hassle while creating release notes&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-are-good-commits"&gt;
  &lt;/a&gt;
  What are good commits?
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#modular"&gt;
  &lt;/a&gt;
  Modular
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aLSLGzkn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kmae1n5tcyvqczufjk1c.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aLSLGzkn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kmae1n5tcyvqczufjk1c.jpeg" alt="Modular Commits"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A commit should be &lt;strong&gt;modular&lt;/strong&gt; in nature, just like our codebase. Each commit should &lt;strong&gt;encapsulate&lt;/strong&gt; a single logical idea only that might span over several changes but as a whole is a single related group of changes.&lt;/p&gt;

&lt;p&gt;E.g., add CSS to a component, change the margin of all pages, strong typing your functions, etc.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#type-of-commit"&gt;
  &lt;/a&gt;
  Type of Commit
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Categorising&lt;/strong&gt; your commits into types will clarify what type of change it made and be instantly identified. I usually keep a template file that contains those types, so I don't have to remember them :P&lt;/p&gt;

&lt;p&gt;Some of the subtypes can be a chore, feat, fix, refactor, style, etc. What meaning does each carry can vary based on your team or you as an individual as well. Below are the types that I use in my commits :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  feat: new feature&lt;/li&gt;
&lt;li&gt;  fix: bug fix&lt;/li&gt;
&lt;li&gt;  refactor: refactoring production code&lt;/li&gt;
&lt;li&gt;  style: formatting, missing semicolons, etc.; no code change&lt;/li&gt;
&lt;li&gt;  docs: changes to documentation&lt;/li&gt;
&lt;li&gt;  test: adding or refactoring tests no production code change&lt;/li&gt;
&lt;li&gt;  chore: updating dependencies etc. no production code change&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#description"&gt;
  &lt;/a&gt;
  Description
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/kEFa2FuLcG0mn3t0ef/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/kEFa2FuLcG0mn3t0ef/giphy.gif" alt="Perfect Description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A commit message except for the subject line limited to &lt;code&gt;50&lt;/code&gt; chars should include a description broken into &lt;code&gt;72&lt;/code&gt; char lines/line. The description is separated from the subject by a blank line. The description should try to cover things like :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the current behaviour,&lt;/li&gt;
&lt;li&gt;what change are you making?&lt;/li&gt;
&lt;li&gt;why this fix is needed?&lt;/li&gt;
&lt;li&gt;why take the current approach for this change?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Commit message should be in the future tense, i.e. 'Fix' vs 'Fixed.' &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bonus-treats"&gt;
  &lt;/a&gt;
  Bonus Treats
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/Y0UmGpoLtAlrvdrK9Q/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/Y0UmGpoLtAlrvdrK9Q/giphy.gif" alt="Treat"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can specify a template for your git commits by adding the following config to your &lt;code&gt;$HOME/.gitconfig&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;[&lt;/span&gt;commit]
    template &lt;span class="o"&gt;=&lt;/span&gt; ~/path/to/template
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;My template looks like this, which allows constraining the number of characters in the subject and description line. I also add the types and just in case I don't remember :'(&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# &amp;lt;type&amp;gt;: &amp;lt;subject&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;##### Subject 50 characters ################# -&amp;gt; |&lt;/span&gt;


&lt;span class="c"&gt;# Body Message&lt;/span&gt;
&lt;span class="c"&gt;######## Body 72 characters ####################################### -&amp;gt; |&lt;/span&gt;

&lt;span class="c"&gt;# --- COMMIT END ---&lt;/span&gt;
&lt;span class="c"&gt;# Type can be&lt;/span&gt;
&lt;span class="c"&gt;#   feat    : new feature&lt;/span&gt;
&lt;span class="c"&gt;#   fix     : bug fix&lt;/span&gt;
&lt;span class="c"&gt;#   refactor: refactoring production code&lt;/span&gt;
&lt;span class="c"&gt;#   style   : formatting, missing semi colons, etc; no code change&lt;/span&gt;
&lt;span class="c"&gt;#   docs    : changes to documentation&lt;/span&gt;
&lt;span class="c"&gt;#   test    : adding or refactoring tests&lt;/span&gt;
&lt;span class="c"&gt;#             no production code change&lt;/span&gt;
&lt;span class="c"&gt;#   chore   : updating grunt tasks etc&lt;/span&gt;
&lt;span class="c"&gt;#             no production code change&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note&lt;/strong&gt;&lt;/em&gt;: For your template to be prompted, you have to use &lt;code&gt;git commit&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This is my first post hope you liked it =)&lt;/em&gt;&lt;/p&gt;

</description>
      <category>github</category>
      <category>git</category>
      <category>firstpost</category>
      <category>opensource</category>
    </item>
  </channel>
</rss>
