<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>🚀10 Trending projects on GitHub for web developers - 11th June 2021</title>
      <author>Iain Freestone</author>
      <pubDate>Fri, 11 Jun 2021 14:00:56 +0000</pubDate>
      <link>https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-11th-june-2021-772</link>
      <guid>https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-11th-june-2021-772</guid>
      <description>&lt;p&gt;Trending Projects is available as a weekly newsletter please sign up at &lt;a href="https://www.iainfreestone.com"&gt;www.iainfreestone.com&lt;/a&gt; to ensure you never miss an issue.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-slides"&gt;
  &lt;/a&gt;
  1. Slides
&lt;/h3&gt;

&lt;p&gt;Terminal based presentation tool&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/maaslalani"&gt;
        maaslalani
      &lt;/a&gt; / &lt;a href="https://github.com/maaslalani/slides"&gt;
        slides
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Terminal based presentation tool
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Slides&lt;/h1&gt;
&lt;p&gt;Slides in your terminal.&lt;/p&gt;
&lt;h5&gt;
Credits&lt;/h5&gt;
&lt;p&gt;This project is heavily inspired by &lt;a href="https://github.com/d0c-s4vage/lookatme"&gt;&lt;code&gt;lookatme&lt;/code&gt;&lt;/a&gt;
&lt;code&gt;slides&lt;/code&gt; is a more minimal version of &lt;a href="https://github.com/d0c-s4vage/lookatme"&gt;&lt;code&gt;lookatme&lt;/code&gt;&lt;/a&gt; and written in Go.&lt;/p&gt;
&lt;h3&gt;
Demo&lt;/h3&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/maaslalani/slides/main/../assets/demo.gif?raw=true"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--09WFOAtm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/maaslalani/slides/main/../assets/demo.gif%3Fraw%3Dtrue" alt="slides"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
Installation&lt;/h3&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;&lt;pre&gt;&lt;code&gt;go get github.com/maaslalani/slides
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;
Usage&lt;/h3&gt;
&lt;p&gt;Create a simple markdown file that contains your slides:&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;&lt;pre&gt;&lt;code&gt;# Welcome to Slides
A terminal based presentation tool

---

## Everything is markdown
In fact, this entire presentation is a markdown file.

---

## Everything happens in your terminal
Create slides and present them without ever leaving your terminal.

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Checkout the &lt;a href="https://raw.githubusercontent.com/maaslalani/slides/main/./examples"&gt;example slides&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Then, to present, run:&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;&lt;pre&gt;&lt;code&gt;slides presentation.md
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You are also able to pass in slides through &lt;code&gt;stdin&lt;/code&gt;, this allows you to &lt;code&gt;curl&lt;/code&gt; and present remote files:&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;&lt;pre&gt;&lt;code&gt;curl https://example.com/slides.md | slides
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Go to the next slide with any of the following keys:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;space&lt;/li&gt;
&lt;li&gt;right&lt;/li&gt;
&lt;li&gt;down&lt;/li&gt;
&lt;li&gt;enter&lt;/li&gt;
&lt;li&gt;n&lt;/li&gt;
&lt;li&gt;k&lt;/li&gt;
&lt;li&gt;l&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Go to the previous slide with any of the following keys:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;left&lt;/li&gt;
&lt;li&gt;up&lt;/li&gt;
&lt;li&gt;p&lt;/li&gt;
&lt;li&gt;h&lt;/li&gt;
&lt;li&gt;j&lt;/li&gt;
&lt;/ul&gt;…&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/maaslalani/slides"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#2-million"&gt;
  &lt;/a&gt;
  2. million
&lt;/h3&gt;

&lt;p&gt;&amp;lt;1kb virtual DOM - it's fast! Current Virtual DOM implementations are inadequate—Ranging from overcomplicated to abandoned, most are unusable without sacrificing raw performance and size. Million aims to fix this, providing a library-agnostic Virtual DOM to serve as the core for Javascript libraries.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/millionjs"&gt;
        millionjs
      &lt;/a&gt; / &lt;a href="https://github.com/millionjs/million"&gt;
        million
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      🌈 &amp;lt;1kb virtual DOM - it's fast!
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/millionjs/million/main/.github/assets/logo.svg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6OAZPmDv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/millionjs/million/main/.github/assets/logo.svg" height="60" alt="Million Logo"&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;h3&gt;
&amp;lt;1kb virtual DOM - it's fast!&lt;/h3&gt;
&lt;p&gt;Current Virtual DOM implementations are inadequate—Ranging from overcomplicated to abandoned, most are unusable without sacrificing raw performance and size. Million aims to fix this, providing a library-agnostic Virtual DOM to serve as the core for Javascript libraries.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://img.shields.io/github/workflow/status/millionjs/million" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0009800b9e366aeab1ad9ea77c4cba4532428f3fd02b56ae8a992e23ef1ac7ac/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f776f726b666c6f772f7374617475732f6d696c6c696f6e6a732f6d696c6c696f6e2f43493f636f6c6f723d464439333336266c6162656c436f6c6f723d303030267374796c653d666c61742d737175617265266c6162656c3d6275696c64" alt="CI"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/eb4372d96cc2a6d35676752263cb932fe0355a26ac139c9ec590e407af0ad0a8/68747470733a2f2f62616467656e2e6e65742f626164676573697a652f62726f746c692f68747470732f756e706b672e636f6d2f6d696c6c696f6e3f7374796c653d666c61742d737175617265266c6162656c3d73697a6526636f6c6f723d413034413943266c6162656c436f6c6f723d303030"&gt;&lt;img src="https://camo.githubusercontent.com/eb4372d96cc2a6d35676752263cb932fe0355a26ac139c9ec590e407af0ad0a8/68747470733a2f2f62616467656e2e6e65742f626164676573697a652f62726f746c692f68747470732f756e706b672e636f6d2f6d696c6c696f6e3f7374796c653d666c61742d737175617265266c6162656c3d73697a6526636f6c6f723d413034413943266c6162656c436f6c6f723d303030" alt="Code Size"&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/million" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0edb167656b877289455cc3b78d32a35c386d958687c5ca998718d22257897f1/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f6d696c6c696f6e3f7374796c653d666c61742d73717561726526636f6c6f723d344538324545266c6162656c436f6c6f723d303030" alt="NPM Version"&gt;&lt;/a&gt; &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/9881d867ea2e6845ec6156b8fbe26e063704168ce4bf26068e30b89965c2063b/68747470733a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f6769746875622f6d696c6c696f6e6a732f6d696c6c696f6e3f636f6c6f723d334346354542266c6162656c436f6c6f723d303030267374796c653d666c61742d737175617265"&gt;&lt;img src="https://camo.githubusercontent.com/9881d867ea2e6845ec6156b8fbe26e063704168ce4bf26068e30b89965c2063b/68747470733a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f6769746875622f6d696c6c696f6e6a732f6d696c6c696f6e3f636f6c6f723d334346354542266c6162656c436f6c6f723d303030267374796c653d666c61742d737175617265" alt="Code Coverage"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://million.js.org" rel="nofollow"&gt;&lt;strong&gt;→ Check out the Million documentation&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Installing Million&lt;/h2&gt;
&lt;p&gt;Million doesn't require build tools by default, but it is highly recommended you use NPM to install.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;npm install million&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
Hello World Example&lt;/h2&gt;
&lt;p&gt;Below is an extremely simple implementation of a Hello World page using Million.&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-s1"&gt;m&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s1"&gt;createElement&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s1"&gt;patch&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'million'&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-c"&gt;// Initialize app&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;app&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;createElement&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-en"&gt;m&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;'div'&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-c1"&gt;id&lt;/span&gt;: &lt;span class="pl-s"&gt;'app'&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-kos"&gt;[&lt;/span&gt;&lt;span class="pl-s"&gt;'Hello World'&lt;/span&gt;&lt;span class="pl-kos"&gt;]&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-smi"&gt;document&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;body&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;appendChild&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s1"&gt;app&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-c"&gt;// Patch content&lt;/span&gt;
&lt;span class="pl-en"&gt;patch&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s1"&gt;app&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-en"&gt;m&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;'div'&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-c1"&gt;id&lt;/span&gt;: &lt;span class="pl-s"&gt;'app'&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-kos"&gt;[&lt;/span&gt;&lt;/pre&gt;…
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/millionjs/million"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#3-haunted"&gt;
  &lt;/a&gt;
  3. Haunted
&lt;/h3&gt;

&lt;p&gt;React's Hooks API implemented for web components&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/matthewp"&gt;
        matthewp
      &lt;/a&gt; / &lt;a href="https://github.com/matthewp/haunted"&gt;
        haunted
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      React's Hooks API implemented for web components 👻
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Haunted 🦇 🎃
&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://npm.im/haunted" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8e3ca092f03e58dd0063235cdc22ebaf3cb8156d71b1298e0d007144d81402a0/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f64742f6861756e746564" alt="npm"&gt;&lt;/a&gt;
&lt;a href="https://npm.im/haunted" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/84c9ef8b1de2d9884d086a625025a38fb22807e9972143e0e4ff996108e39e63/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f6861756e746564" alt="npm"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;React's Hooks API but for standard web components and &lt;a href="https://lit-html.polymer-project.org/" rel="nofollow"&gt;lit-html&lt;/a&gt; or &lt;a href="https://codepen.io/WebReflection/pen/pxXrdy?editors=0010" rel="nofollow"&gt;hyperHTML&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-text-html-basic position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;html&lt;/span&gt; &lt;span class="pl-c1"&gt;lang&lt;/span&gt;="&lt;span class="pl-s"&gt;en&lt;/span&gt;"&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;my-counter&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;my-counter&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;

  &lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt; &lt;span class="pl-c1"&gt;type&lt;/span&gt;="&lt;span class="pl-s"&gt;module&lt;/span&gt;"&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-s1"&gt;html&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'https://unpkg.com/lit-html/lit-html.js'&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
    &lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-s1"&gt;component&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s1"&gt;useState&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'https://unpkg.com/haunted/haunted.js'&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;

    &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-v"&gt;Counter&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
      &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-kos"&gt;[&lt;/span&gt;&lt;span class="pl-s1"&gt;count&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s1"&gt;setCount&lt;/span&gt;&lt;span class="pl-kos"&gt;]&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;useState&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-c1"&gt;0&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;

      &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-en"&gt;html&lt;/span&gt;&lt;span class="pl-s"&gt;`&lt;/span&gt;
&lt;span class="pl-s"&gt;        &lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;div&lt;/span&gt; &lt;span class="pl-c1"&gt;id&lt;/span&gt;="&lt;span class="pl-s"&gt;count&lt;/span&gt;"&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-s1"&gt;&lt;span class="pl-kos"&gt;${&lt;/span&gt;&lt;span class="pl-s1"&gt;count&lt;/span&gt;&lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;div&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;        &lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;button&lt;/span&gt; &lt;span class="pl-c1"&gt;type&lt;/span&gt;="&lt;span class="pl-s"&gt;button&lt;/span&gt;" &lt;span class="pl-c1"&gt;@click&lt;/span&gt;=&lt;span class="pl-s1"&gt;&lt;span class="pl-kos"&gt;${&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt; &lt;span class="pl-c1"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-s1"&gt;setCount&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s1"&gt;count&lt;/span&gt; &lt;span class="pl-c1"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;          Increment&lt;/span&gt;
&lt;span class="pl-s"&gt;        &lt;span class="pl-kos"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;button&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;      `&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
    &lt;span class="pl-kos"&gt;}&lt;/span&gt;

    &lt;span class="pl-s1"&gt;customElements&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;define&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;'my-counter'&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-en"&gt;component&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-v"&gt;Counter&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
  &lt;span class="pl-kos"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="pl-kos"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;html&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
Getting started&lt;/h2&gt;
&lt;p&gt;A starter app is available on &lt;a href="https://codesandbox.io/s/github/matthewp/haunted-starter-app/tree/master/" rel="nofollow"&gt;codesandbox&lt;/a&gt; and also can be cloned from &lt;a href="https://github.com/matthewp/haunted-starter-app"&gt;this repo&lt;/a&gt;. This app…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/matthewp/haunted"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#4-react-cool-virtual"&gt;
  &lt;/a&gt;
  4. React Cool Virtual
&lt;/h3&gt;

&lt;p&gt;A tiny React hook for rendering large datasets like a breeze.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/wellyshen"&gt;
        wellyshen
      &lt;/a&gt; / &lt;a href="https://github.com/wellyshen/react-cool-virtual"&gt;
        react-cool-virtual
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      😎 ♻️ A tiny React hook for rendering large datasets like a breeze.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
  &lt;a href="https://github.com/wellyshen/react-cool-virtual/blob/master/README.md" title="React Cool Virtual"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2zg6eUDo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/wellyshen/react-cool-virtual/raw/master/images/logo.svg" alt="React Cool Virtual"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;A tiny React hook for rendering large datasets like a breeze.&lt;/p&gt;

&lt;div&gt;
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/react-cool-virtual" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9053dd775cde9dfdb29bb920adefc0f46f21eb879e159377d3381833f9592893/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f72656163742d636f6f6c2d7669727475616c3f7374796c653d666c61742d737175617265" alt="npm version"&gt;&lt;/a&gt;
&lt;a href="https://www.npmtrends.com/react-cool-virtual" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ca301625f96a5911005ac20f63971d03c1f1e2dd5baaa7a590cdfeeacea0ec5b/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f64742f72656163742d636f6f6c2d7669727475616c3f7374796c653d666c61742d737175617265" alt="npm downloads"&gt;&lt;/a&gt;
&lt;a href="https://bundlephobia.com/result?p=react-cool-virtual" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f0ae183fcc7f3893a5b8f1100bf47ce1302ccaf067422186140e97aee04355c6/68747470733a2f2f62616467656e2e6e65742f62756e646c6570686f6269612f6d696e7a69702f72656163742d636f6f6c2d7669727475616c3f6c6162656c3d677a697025323073697a65267374796c653d666c61742d737175617265" alt="gzip size"&gt;&lt;/a&gt;
&lt;a href="https://raw.githubusercontent.com/wellyshen/react-cool-virtual/master/#contributors-"&gt;&lt;img src="https://camo.githubusercontent.com/60f4e6a9ba8683a8303d97cab7693a1d022cc822a729ebeb434e801ce870eb67/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f616c6c5f636f6e7472696275746f72732d312d6f72616e67652e7376673f7374796c653d666c61742d737175617265" alt="All Contributors"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;h2&gt;
Features &lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
♻️ Renders millions of items with highly performant way, using &lt;a href="https://developers.google.com/web/updates/2016/07/infinite-scroller" rel="nofollow"&gt;DOM recycling&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
🎣 Easy to use, based on React &lt;a href="https://reactjs.org/docs/hooks-custom.html#using-a-custom-hook" rel="nofollow"&gt;hook&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;💅🏼 Apply styles without hassle, just &lt;a href="https://raw.githubusercontent.com/wellyshen/react-cool-virtual/master/#basic-usage"&gt;few setups&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
🧱 Supports &lt;a href="https://raw.githubusercontent.com/wellyshen/react-cool-virtual/master/#fixed-size"&gt;fixed&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/wellyshen/react-cool-virtual/master/#variable-size"&gt;variable&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/wellyshen/react-cool-virtual/master/#dynamic-size"&gt;dynamic&lt;/a&gt;, and &lt;a href="https://raw.githubusercontent.com/wellyshen/react-cool-virtual/master/#real-time-resize"&gt;real-time&lt;/a&gt; heights/widths.&lt;/li&gt;
&lt;li&gt;
🖥 Supports &lt;a href="https://raw.githubusercontent.com/wellyshen/react-cool-virtual/master/#responsive-web-design-rwd"&gt;responsive web design (RWD)&lt;/a&gt; for better UX.&lt;/li&gt;
&lt;li&gt;
📌 Supports &lt;a href="https://raw.githubusercontent.com/wellyshen/react-cool-virtual/master/#sticky-headers"&gt;sticky headers&lt;/a&gt; for building on-trend lists.&lt;/li&gt;
&lt;li&gt;
🚚 Built-ins &lt;a href="https://raw.githubusercontent.com/wellyshen/react-cool-virtual/master/#infinite-scroll"&gt;load more callback&lt;/a&gt; for you to deal with infinite scroll + &lt;a href="https://uxdesign.cc/what-you-should-know-about-skeleton-screens-a820c45a571a" rel="nofollow"&gt;skeleton screens&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
🖱 Imperative &lt;a href="https://raw.githubusercontent.com/wellyshen/react-cool-virtual/master/#scroll-to-offsetitems"&gt;scroll-to methods&lt;/a&gt; for offset, items, and alignment.&lt;/li&gt;
&lt;li&gt;
🛹 Out-of-the-box &lt;a href="https://raw.githubusercontent.com/wellyshen/react-cool-virtual/master/#smooth-scrolling"&gt;smooth scrolling&lt;/a&gt; and the effect is DIY-able.&lt;/li&gt;
&lt;li&gt;
💬 It's possible to implement &lt;a href="https://raw.githubusercontent.com/wellyshen/react-cool-virtual/master/#sticking-to-bottom"&gt;stick to bottom&lt;/a&gt; and &lt;a href="https://raw.githubusercontent.com/wellyshen/react-cool-virtual/master/#pre-pending-items"&gt;pre-pending items&lt;/a&gt; for chat/feeds.&lt;/li&gt;
&lt;li&gt;
⛳ Provides &lt;code&gt;isScrolling&lt;/code&gt; indicator to you for UI placeholders or &lt;a href="https://raw.githubusercontent.com/wellyshen/react-cool-virtual/master/#use-isscrolling-indicator"&gt;performance optimization&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
🗄️ Supports &lt;a href="https://raw.githubusercontent.com/wellyshen/react-cool-virtual/master/#server-side-rendering-ssr"&gt;server-side rendering (SSR)&lt;/a&gt; for a fast &lt;a href="https://developers.google.com/web/updates/2019/02/rendering-on-the-web#server-rendering" rel="nofollow"&gt;FP + FCP&lt;/a&gt; and better &lt;a href="https://developers.google.com/web/updates/2019/02/rendering-on-the-web#server-rendering" rel="nofollow"&gt;SEO&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
📜 Supports &lt;a href="https://raw.githubusercontent.com/wellyshen/react-cool-virtual/master/#working-in-typescript"&gt;TypeScript&lt;/a&gt; type…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/wellyshen/react-cool-virtual"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#5-windmill-ui"&gt;
  &lt;/a&gt;
  5. Windmill UI
&lt;/h3&gt;

&lt;p&gt;The component library for fast and accessible development of gorgeous interfaces.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/estevanmaito"&gt;
        estevanmaito
      &lt;/a&gt; / &lt;a href="https://github.com/estevanmaito/windmill-react-ui"&gt;
        windmill-react-ui
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      🧩 The component library for fast and accessible development of gorgeous interfaces.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Windmill React UI&lt;/h1&gt;
&lt;p&gt;The component library for fast and accessible development of gorgeous interfaces.&lt;/p&gt;
&lt;p&gt;
  &lt;a href="https://codecov.io/gh/estevanmaito/windmill-react-ui" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4a5bd9c8caa03ef358f02ede9390b6d4907d0a3a24b1f394c543f6fd8edf4420/68747470733a2f2f636f6465636f762e696f2f67682f6573746576616e6d6169746f2f77696e646d696c6c2d72656163742d75692f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov"&gt;&lt;/a&gt;
  &lt;a rel="noopener noreferrer" href="https://github.com/estevanmaito/windmill-react-ui/workflows/Build/badge.svg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6yQ81UqR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/estevanmaito/windmill-react-ui/workflows/Build/badge.svg" alt="Build"&gt;&lt;/a&gt;
  &lt;a href="https://www.npmjs.com/package/@windmill/react-ui" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/abd9bff35f09b1266882516ec43213b1f7ef1d8295addc0e071642e8c8ae771f/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f4077696e646d696c6c2f72656163742d7569" alt="npm"&gt;&lt;/a&gt;
  &lt;a href="https://github.com/estevanmaito/windmill-react-ui/blob/master/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/ac7c0e9d1cce610f4457ef0a553787a65854e26dcc72a9c954af10807a92bf90/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6573746576616e6d6169746f2f77696e646d696c6c2d72656163742d7569" alt="MIT License"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;Projects using it: &lt;a href="https://github.com/estevanmaito/windmill-dashboard-react"&gt;Windmill Dashboard React&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Mission&lt;/h2&gt;
&lt;p&gt;Be the most accessible it can be out of the box and the fastest way to production.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://windmillui.com/react-ui" rel="nofollow"&gt;Go to docs to see complete, live examples&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
🚀 Usage&lt;/h2&gt;
&lt;p&gt;Install&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;npm i &lt;a class="mentioned-user" href="https://dev.to/windmill"&gt;@windmill&lt;/a&gt;
/react-ui&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Inside &lt;code&gt;tailwind.config.js&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;windmill&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;require&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;'&lt;a class="mentioned-user" href="https://dev.to/windmill"&gt;@windmill&lt;/a&gt;
/react-ui/config'&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;
&lt;span class="pl-smi"&gt;module&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;exports&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-s1"&gt;windmill&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;{&lt;/span&gt;
  &lt;span class="pl-c1"&gt;purge&lt;/span&gt;: &lt;span class="pl-kos"&gt;[&lt;/span&gt;&lt;span class="pl-kos"&gt;]&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-c1"&gt;theme&lt;/span&gt;: &lt;span class="pl-kos"&gt;{&lt;/span&gt;
    &lt;span class="pl-c1"&gt;extend&lt;/span&gt;: &lt;span class="pl-kos"&gt;{&lt;/span&gt;&lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-c1"&gt;variants&lt;/span&gt;: &lt;span class="pl-kos"&gt;{&lt;/span&gt;&lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-c1"&gt;plugins&lt;/span&gt;: &lt;span class="pl-kos"&gt;[&lt;/span&gt;&lt;span class="pl-kos"&gt;]&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
&lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Then place &lt;code&gt;Windmill&lt;/code&gt; at the root of your project (the order doesn't matter, as long as your application is inside).&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-c"&gt;// index.js&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-v"&gt;React&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'react'&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-v"&gt;ReactDOM&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'react-dom'&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-v"&gt;App&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'./App'&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-v"&gt;Windmill&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'&lt;a class="mentioned-user" href="https://dev.to/windmill"&gt;@windmill&lt;/a&gt;
/react-ui'&lt;/span&gt;
&lt;span class="pl-v"&gt;ReactDOM&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;render&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;
  &lt;span class="pl-c1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;Windmill&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="pl-c1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;App&lt;/span&gt; &lt;span class="pl-c1"&gt;/&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;Windmill&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;…
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/estevanmaito/windmill-react-ui"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#6-minitypescript"&gt;
  &lt;/a&gt;
  6. mini-typescript
&lt;/h3&gt;

&lt;p&gt;A miniature model of the Typescript compiler, intended to teach the structure of the real Typescript compiler&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/sandersn"&gt;
        sandersn
      &lt;/a&gt; / &lt;a href="https://github.com/sandersn/mini-typescript"&gt;
        mini-typescript
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A miniature model of the Typescript compiler, intended to teach the structure of the real Typescript compiler
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
mini-typescript&lt;/h1&gt;
&lt;p&gt;A miniature model of the Typescript compiler, intended to teach the structure of the real Typescript compiler&lt;/p&gt;
&lt;p&gt;I started this project as part of reading &lt;a href="https://www.cs.princeton.edu/~appel/modern/ml/" rel="nofollow"&gt;Modern Compiler Implementation in ML&lt;/a&gt; because I wanted to learn more about compiler backends. When I started building the example compiler I found I disagreed with the implementation of nearly everything in the &lt;em&gt;frontend&lt;/em&gt;. So I wrote my own, and found that I had just written &lt;a href="https://github.com/sandersn/minits"&gt;a small Typescript&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I realised a small Typescript would be useful to others who want to learn how the Typescript compiler works. So I rewrote it in Typescript and added some exercises to let you practise with it. The resulting compiler covers a tiny slice of Typescript: just &lt;code&gt;var&lt;/code&gt; declarations, assignments and numeric literals. The only two types are &lt;code&gt;string&lt;/code&gt; and &lt;code&gt;number&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;
Limitations&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;This is an example of the way that Typescript's compiler does things…&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/sandersn/mini-typescript"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#7-pinia"&gt;
  &lt;/a&gt;
  7. Pinia
&lt;/h3&gt;

&lt;p&gt;Intuitive, type safe, light and flexible Store for Vue using the composition api with DevTools support&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/posva"&gt;
        posva
      &lt;/a&gt; / &lt;a href="https://github.com/posva/pinia"&gt;
        pinia
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      🍍 Intuitive, type safe, light and flexible Store for Vue using the composition api with DevTools support
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
  &lt;a href="https://pinia.esm.dev" rel="nofollow"&gt;
    &lt;img width="180" src="https://camo.githubusercontent.com/6ef810688cb6b9312dd3bbf7e0262f65076ec7b22d779760768a44b30906902b/68747470733a2f2f70696e69612e65736d2e6465762f6c6f676f2e737667" alt="Pinia logo"&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;
  &lt;a href="https://npmjs.com/package/pinia" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/88cc30835e26cc461e01ac26522a0c9089bdc6699ae3ab2284b69ff331bc64c0/68747470733a2f2f62616467656e2e6e65742f6e706d2f762f70696e69612f6e657874" alt="npm package"&gt;&lt;/a&gt;
  &lt;a href="https://github.com/posva/pinia/actions/workflows/test.yml?query=branch%3Av2"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--84dP_r_O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/posva/pinia/workflows/test/badge.svg%3Fbranch%3Dv2" alt="build status"&gt;&lt;/a&gt;
  &lt;a href="https://codecov.io/github/posva/pinia" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b01a3ad99dd5840fc1dde834f3b85cfc3e70511c6ccaaf8c3ce28e8964d18c8e/68747470733a2f2f62616467656e2e6e65742f636f6465636f762f632f6769746875622f706f7376612f70696e69612f7632" alt="code coverage"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;h1&gt;
Pinia&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Intuitive, type safe and flexible Store for Vue&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
💡 Intuitive&lt;/li&gt;
&lt;li&gt;
🔑 Type Safe&lt;/li&gt;
&lt;li&gt;
⚙️ Devtools support&lt;/li&gt;
&lt;li&gt;
🔌 Extensible&lt;/li&gt;
&lt;li&gt;
🏗 Modular by design&lt;/li&gt;
&lt;li&gt;
📦 Extremely light&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pinia works both for Vue 2.x and Vue 3.x and you are currently on the branch that supports Vue 3.x. &lt;strong&gt;If you are looking for the version compatible with Vue 2.x, check the &lt;a href="https://github.com/posva/pinia/tree/v1"&gt;&lt;code&gt;v1&lt;/code&gt; branch&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Pinia is is the most similar English pronunciation of the word &lt;em&gt;pineapple&lt;/em&gt; in Spanish: &lt;em&gt;piña&lt;/em&gt;. A pineapple is in reality a group of individual flowers that join together to create a multiple fruit. Similar to stores, each one is born individually, but they are all connected at the end. It's also a delicious tropical fruit indigenous to South America.&lt;/p&gt;
&lt;h2&gt;
👉 &lt;a href="https://j4qzw.csb.app/" rel="nofollow"&gt;Demo on CodeSandbox&lt;/a&gt;
&lt;/h2&gt;

&lt;h2&gt;
Help me keep working on this project 💚
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/sponsors/posva"&gt;Become a Sponsor on GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://paypal.me/posva" rel="nofollow"&gt;One-time donation via PayPal&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
Gold Sponsors&lt;/h4&gt;
&lt;p&gt;
  &lt;a href="https://passionatepeople.io/" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/d4506da3296fff8628dc29f238616e289ed1a19fcb218ad7d3c801a23d8ccf81/68747470733a2f2f696d67322e73746f7279626c6f6b2e636f6d2f30783230302f66696c746572733a3a666f726d61742877656270292f662f38363338372f782f346366366137306138632f6c6f676f2d77686974652d746578742e737667" height="72px" alt="Passionate People"&gt;
  &lt;/a&gt;
  &lt;a href="https://vuejobs.com/?utm_source=vuerouter&amp;amp;utm_campaign=sponsor" rel="nofollow"&gt;
    &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dTWr7bYt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/posva/pinia/v2/docs/public/sponsors/vuejobs.png" height="72px" alt="VueJobs"&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;h4&gt;
Silver Sponsors&lt;/h4&gt;
&lt;p&gt;
  &lt;a href="https://www.vuemastery.com" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/144a5c7a2403372a50942d89733c8588a886803cea66e7f1fd7c48d191c07f56/68747470733a2f2f7777772e7675656d6173746572792e636f6d2f696d616765732f7675656d6173746572792e737667" height="42px" alt="Vue Mastery"&gt;
  &lt;/a&gt;
  &lt;a href="https://vuetifyjs.com" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/357f56184da9de32ccc85e38e79836b6431abacb53d2119abff708966d528657/68747470733a2f2f63646e2e767565746966796a732e636f6d2f646f63732f696d616765732f6c6f676f732f767565746966792d6c6f676f2d6c696768742d746578742e737667" alt="Vuetify" height="42px"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.codestream.com/?utm_source=github&amp;amp;utm_campaign=vuerouter&amp;amp;utm_medium=banner" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/fdc458a37453371083e7a6a7881bff676e15282d4b16b79154d0cf24b3c091cf/68747470733a2f2f616c742d696d616765732e636f646573747265616d2e636f6d2f636f646573747265616d5f6c6f676f5f767565726f757465722e706e67" alt="CodeStream" height="42px"&gt;
  &lt;/a&gt;
  &lt;a href="https://birdeatsbug.com/?utm_source=vuerouter&amp;amp;utm_medium=sponsor&amp;amp;utm_campaign=silver" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/51de316d55eed3be60052c5fd6f541aaabc5f41ede7c7129de4701884dc5d9a6/68747470733a2f2f7374617469632e62697264656174736275672e636f6d2f67656e6572616c2f626972642d6c6f676f747970652d3135307832372e737667" alt="Bird Eats bug" height="42px"&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;h4&gt;
Bronze Sponsors&lt;/h4&gt;
&lt;p&gt;
  &lt;a href="https://storyblok.com" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/158f5c597e91da997e32ae58c61c5e093b13bd82b7838e523d10350eb04f6b76/68747470733a2f2f612e73746f7279626c6f6b2e636f6d2f662f35313337362f33383536783832342f666561343464353261392f636f6c6f7265642d66756c6c2e706e67" alt="Storyblok" height="32px"&gt;
  &lt;/a&gt;
  &lt;a href="https://nuxtjs.org" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/26d3cf009b5897ff0881919fe49e827444c849541284763b685d49a2a2fc6323/68747470733a2f2f6e7578746a732e6f72672f6c6f676f732f6e7578746a732d7479706f2d77686974652e737667" alt="NuxtJS" height="32px"&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;h2&gt;
FAQ&lt;/h2&gt;
&lt;p&gt;…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/posva/pinia"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#8-squoosh"&gt;
  &lt;/a&gt;
  8. Squoosh
&lt;/h3&gt;

&lt;p&gt;Make images smaller using best-in-class codecs, right in the browser.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/GoogleChromeLabs"&gt;
        GoogleChromeLabs
      &lt;/a&gt; / &lt;a href="https://github.com/GoogleChromeLabs/squoosh"&gt;
        squoosh
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Make images smaller using best-in-class codecs, right in the browser.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
&lt;a href="https://squoosh.app" rel="nofollow"&gt;Squoosh&lt;/a&gt;!&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://squoosh.app" rel="nofollow"&gt;Squoosh&lt;/a&gt; is an image compression web app that allows you to dive into the advanced options provided
by various image compressors.&lt;/p&gt;
&lt;h1&gt;
API &amp;amp; CLI&lt;/h1&gt;
&lt;p&gt;Squoosh now has &lt;a href="https://github.com/GoogleChromeLabs/squoosh/tree/dev/libsquoosh"&gt;an API&lt;/a&gt; and &lt;a href="https://github.com/GoogleChromeLabs/squoosh/tree/dev/cli"&gt;a CLI&lt;/a&gt; that allows you to compress many images at once.&lt;/p&gt;
&lt;h1&gt;
Privacy&lt;/h1&gt;
&lt;p&gt;Google Analytics is used to record the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://support.google.com/analytics/answer/6004245?ref_topic=2919631" rel="nofollow"&gt;Basic visit data&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Before and after image size once an image is downloaded. These values are rounded to the nearest
kilobyte.&lt;/li&gt;
&lt;li&gt;If install is available, when Squoosh is installed, and what method was used to install Squoosh.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Image compression is handled locally; no additional data is sent to the server.&lt;/p&gt;
&lt;h1&gt;
Building locally&lt;/h1&gt;
&lt;p&gt;Clone the repo, and:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;npm install
npm run build&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;You can run the development server with:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;npm run dev&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;

  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/GoogleChromeLabs/squoosh"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#9-map-of-javascript"&gt;
  &lt;/a&gt;
  9. Map of javascript
&lt;/h3&gt;

&lt;p&gt;Javascript on one sheet. (and one for algorithms)&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/mechaniac"&gt;
        mechaniac
      &lt;/a&gt; / &lt;a href="https://github.com/mechaniac/Map-of-Javascript"&gt;
        Map-of-Javascript
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Javascript on one sheet. (and one for algorithms)
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
map of javascript&lt;/h1&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/mechaniac/javaScript_cheatSheet/blob/main/Javascript_01.jpg?raw=true"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fqHtAGIh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/mechaniac/javaScript_cheatSheet/raw/main/Javascript_01.jpg%3Fraw%3Dtrue" alt="alt text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;data structures and alogrithms
&lt;a rel="noopener noreferrer" href="https://github.com/mechaniac/javaScript_cheatSheet/blob/main/algorithms_01.jpg?raw=true"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_JXff5Ns--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/mechaniac/javaScript_cheatSheet/raw/main/algorithms_01.jpg%3Fraw%3Dtrue" alt="alt text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;HTML and CSS and DOM interaction
&lt;a rel="noopener noreferrer" href="https://github.com/mechaniac/javaScript_cheatSheet/blob/main/HTML_CSS_01.jpg?raw=true"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q_4RAbCB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/mechaniac/javaScript_cheatSheet/raw/main/HTML_CSS_01.jpg%3Fraw%3Dtrue" alt="alt text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/mechaniac/Map-of-Javascript"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#10-cssgram"&gt;
  &lt;/a&gt;
  10. CSSgram
&lt;/h3&gt;

&lt;p&gt;CSSGram is an Instagram filter library written in Sass and CSS.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/una"&gt;
        una
      &lt;/a&gt; / &lt;a href="https://github.com/una/CSSgram"&gt;
        CSSgram
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      CSS library for Instagram filters
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/438b85cd0a1eb1c20cdb3b02b8dcfa2cbe6b5ed95599bbfd13ed5587f516ae3d/687474703a2f2f756e612e696d2f4353536772616d2f696d672f6373736772616d2d6c6f676f2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/438b85cd0a1eb1c20cdb3b02b8dcfa2cbe6b5ed95599bbfd13ed5587f516ae3d/687474703a2f2f756e612e696d2f4353536772616d2f696d672f6373736772616d2d6c6f676f2e706e67" alt=""&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
CSSgram&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://cdnjs.com/libraries/cssgram" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7b84d1ea3bcdd903d75dc350914d4be0d83fe7e670818e2542142b93f22abe76/68747470733a2f2f696d672e736869656c64732e696f2f63646e6a732f762f6373736772616d2e737667" alt="CDNJS"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;CSSGram is an Instagram filter library written in Sass and CSS.&lt;/p&gt;
&lt;h2&gt;
What is This?&lt;/h2&gt;
&lt;p&gt;Simply put, CSSgram is a library for editing your images with Instagram-like filters directly using CSS. What we're doing is adding filters to the images, as well as applying color and/or gradient overlays via various blending techniques to mimic filter effects. This means &lt;em&gt;less manual image processing&lt;/em&gt; and more fun filter effects on the web!&lt;/p&gt;
&lt;p&gt;We're using pseudo-elements (i.e. &lt;code&gt;::before&lt;/code&gt; and &lt;code&gt;::after&lt;/code&gt;) to create the filter effects, so you must apply these filters on a containing element (i.e. not a &lt;em&gt;replaced element&lt;/em&gt; like &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;). The recommendation is to wrap your images in a &lt;code&gt;&amp;lt;figure&amp;gt;&lt;/code&gt; tag. More about the tag &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/figure" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
Browser Support&lt;/h2&gt;
&lt;p&gt;This library uses &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/filter" rel="nofollow"&gt;CSS Filters&lt;/a&gt; and &lt;a href="https://css-tricks.com/basics-css-blend-modes/" rel="nofollow"&gt;CSS Blend Modes&lt;/a&gt;. These features are supported in the following browsers:&lt;/p&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/b4f81b98c0134da8baa7f6f0baef1de19b4f4abad6b9a3e385c7ee77bbcca790/687474703a2f2f692e696d6775722e636f6d2f4e6a49566d524f2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/b4f81b98c0134da8baa7f6f0baef1de19b4f4abad6b9a3e385c7ee77bbcca790/687474703a2f2f692e696d6775722e636f6d2f4e6a49566d524f2e706e67" width="48px" height="48px" alt="Chrome logo"&gt;&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/37429ee0cb738f5c99542d342dbea5c292be4031f22591d916b71d4e7673282b/687474703a2f2f692e696d6775722e636f6d2f6f316d355263512e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/37429ee0cb738f5c99542d342dbea5c292be4031f22591d916b71d4e7673282b/687474703a2f2f692e696d6775722e636f6d2f6f316d355263512e706e67" width="48px" height="48px" alt="Firefox logo"&gt;&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/638c765156da63771c04eda6ef717555566acda0ddaa1886e698c415d457e7a5/687474703a2f2f692e696d6775722e636f6d2f305235776871632e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/638c765156da63771c04eda6ef717555566acda0ddaa1886e698c415d457e7a5/687474703a2f2f692e696d6775722e636f6d2f305235776871632e706e67" width="48px" height="48px" alt="Internet Explorer logo"&gt;&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/9028affececb1b44a4257634ffb8f41d403c93bddf7518e0b7ee51cfa20164c3/687474703a2f2f692e696d6775722e636f6d2f6b513165374d6b2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/9028affececb1b44a4257634ffb8f41d403c93bddf7518e0b7ee51cfa20164c3/687474703a2f2f692e696d6775722e636f6d2f6b513165374d6b2e706e67" width="45px" height="45px" alt="Edge logo"&gt;&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/739acc86a4e79575351f9f0efad962a6b46e597fa40140c6b393349defb63909/687474703a2f2f692e696d6775722e636f6d2f46534a4238424c2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/739acc86a4e79575351f9f0efad962a6b46e597fa40140c6b393349defb63909/687474703a2f2f692e696d6775722e636f6d2f46534a4238424c2e706e67" width="48px" height="48px" alt="Opera logo"&gt;&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/1bf2bf2016ed3bd36768af9d37aff2c7b50ec5317440e02d93a595313d086b4f/687474703a2f2f692e696d6775722e636f6d2f794c77463234492e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/1bf2bf2016ed3bd36768af9d37aff2c7b50ec5317440e02d93a595313d086b4f/687474703a2f2f692e696d6775722e636f6d2f794c77463234492e706e67" width="48px" height="48px" alt="Safari logo"&gt;&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;43+ ✔
&lt;/td&gt;
&lt;td&gt;38+ ✔
&lt;/td&gt;
&lt;td&gt;Nope ✘&lt;/td&gt;
&lt;td&gt;13 ✔
&lt;/td&gt;
&lt;td&gt;32+ ✔
&lt;/td&gt;
&lt;td&gt;8+ ✔
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/una/CSSgram"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#stargazing"&gt;
  &lt;/a&gt;
  Stargazing 📈
&lt;/h3&gt;
&lt;h4&gt;
  &lt;a href="#top-risers-over-last-7-days"&gt;
  &lt;/a&gt;
  Top risers over last 7 days
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/public-apis/public-apis"&gt;Public APIs&lt;/a&gt; +3,934 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/slidevjs/slidev"&gt;Slidev&lt;/a&gt; +2,106 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/electron/electron"&gt;Electron&lt;/a&gt; +1,706 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jwasham/coding-interview-university"&gt;Coding Interview University&lt;/a&gt; +1,442 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/sindresorhus/awesome"&gt;Awesome&lt;/a&gt; +1,148 stars&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-growth-over-last-7-days"&gt;
  &lt;/a&gt;
  Top growth(%) over last 7 days
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/remorses/vitro"&gt;Vitro&lt;/a&gt; +20%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/alwinn1977/react-simple-flowchart"&gt;react-simple-flowchart&lt;/a&gt; +19%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/slidevjs/slidev"&gt;Slidev&lt;/a&gt; +18%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/observablehq/plot"&gt;Observable Plot&lt;/a&gt; +13%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/cassiozen/useStateMachine"&gt;useStateMachine&lt;/a&gt; +12%&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-risers-over-last-30-days"&gt;
  &lt;/a&gt;
  Top risers over last 30 days
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/jwasham/coding-interview-university"&gt;Coding Interview University&lt;/a&gt; +7,202 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/public-apis/public-apis"&gt;Public APIs&lt;/a&gt; +6,806 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/EbookFoundation/free-programming-books"&gt;Free Programming Books&lt;/a&gt; +4,594 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/sindresorhus/awesome"&gt;Awesome&lt;/a&gt; +3,148 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/kamranahmedse/developer-roadmap"&gt;Developer Roadmap&lt;/a&gt; +3,120 stars&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-growth-over-last-30-days"&gt;
  &lt;/a&gt;
  Top growth(%) over last 30 days
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/cassiozen/useStateMachine"&gt;useStateMachine&lt;/a&gt; +380%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/withfig/autocomplete"&gt;Fig&lt;/a&gt; +169%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/observablehq/plot"&gt;Observable Plot&lt;/a&gt; +47%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/appwrite/appwrite"&gt;Appwrite&lt;/a&gt; +40%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/sinclairzx81/hammer"&gt;Hammer&lt;/a&gt; +39%&lt;/li&gt;
&lt;/ol&gt;




&lt;p&gt;Trending Projects is available as a weekly newsletter please sign up at &lt;a href="https://www.iainfreestone.com"&gt;www.iainfreestone.com&lt;/a&gt; to ensure you never miss an issue.&lt;/p&gt;

&lt;p&gt;If you enjoyed this article you can &lt;a href="https://twitter.com/iain_freestone"&gt;follow me&lt;/a&gt; on Twitter where I regularly post bite size tips relating to HTML, CSS and JavaScript.&lt;/p&gt;

</description>
      <category>react</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Learn React and Redux-Saga By Building Netflix</title>
      <author>Hiep Le</author>
      <pubDate>Fri, 11 Jun 2021 13:55:03 +0000</pubDate>
      <link>https://dev.to/hieptl/learn-react-and-redux-saga-by-building-netflix-28hf</link>
      <guid>https://dev.to/hieptl/learn-react-and-redux-saga-by-building-netflix-28hf</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mCZt_fGX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/phbevvg6q36s5qxf20ax.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mCZt_fGX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/phbevvg6q36s5qxf20ax.png" alt="learn-react-by-building-netflix"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I'm Hiep. I work as a full-time software engineer. Most of my open-source projects are focused on one thing - to help people learn 📚. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Before moving on with this part, you should follow the first part and the second part in this series:&lt;/p&gt;

&lt;p&gt;The first part - &lt;strong&gt;Learn React By Building Netflix&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Github: &lt;a href="https://github.com/hieptl/netflix-clone"&gt;https://github.com/hieptl/netflix-clone&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Dev.to: &lt;a href="https://dev.to/hieptl/learn-react-by-building-netflix-1127"&gt;https://dev.to/hieptl/learn-react-by-building-netflix-1127&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The second part - &lt;strong&gt;Learn Redux by Building Netflix&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Github: &lt;a href="https://github.com/hieptl/netflix-clone/tree/main/advanced/netflix-clone-with-redux"&gt;https://github.com/hieptl/netflix-clone/tree/main/advanced/netflix-clone-with-redux&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Dev.to: &lt;a href="https://dev.to/hieptl/learn-redux-by-building-netflix-4dem"&gt;https://dev.to/hieptl/learn-redux-by-building-netflix-4dem&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;The repository helps you learn Redux Saga by buiding Netflix. It means that you are learning Redux Saga by building a real-life project. I will explain concepts in detail. This post is the fourth part in my series and it is suitable for beginners.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you feel the repository is useful, please help me share the post and give me Github ⭐. It will make me feel motivation to work even harder. I will try to make many open sources and share to the community.&lt;/p&gt;

&lt;p&gt;I also created some series that help you improve your practical skills: &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Master Design Patterns by Building Real Projects - Javascript.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Github: &lt;a href="https://github.com/hieptl/master-javascript-design-patterns-by-building-real-projects"&gt;https://github.com/hieptl/master-javascript-design-patterns-by-building-real-projects&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Blog: &lt;a href="https://dev.to/hieptl/series/13039"&gt;https://dev.to/hieptl/series/13039&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#preface"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Preface&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;This course will help you to learn Redux-Saga by building Netflix. It means that you are learning by doing a real-life project.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Table of Contents&lt;/strong&gt;
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;No.&lt;/th&gt;
&lt;th&gt;Topics&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;&lt;a href="#how-to-run-the-project"&gt;How to Run the Project.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;&lt;a href="#live-demo"&gt;Live Demo.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;&lt;a href="#introduction-about-the-creator"&gt;Introduction about the Creator.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2.1&lt;/td&gt;
&lt;td&gt;&lt;a href="#greenwich-university"&gt;      Greenwich University.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2.2&lt;/td&gt;
&lt;td&gt;&lt;a href="#hitachi-vantara-vietnam"&gt;      Hitachi Vantara Vietnam.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;&lt;a href="#prequisites"&gt;Prequisites.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.1&lt;/td&gt;
&lt;td&gt;&lt;a href="#softwares"&gt;      Softwares.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.2&lt;/td&gt;
&lt;td&gt;&lt;a href="#technical-skills"&gt;      Technical Skills.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.3&lt;/td&gt;
&lt;td&gt;&lt;a href="#materials"&gt;      Materials.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;&lt;a href="#purposes-of-the-course"&gt;Purposes of the Course.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4.1&lt;/td&gt;
&lt;td&gt;&lt;a href="#final-project"&gt;      Final Project.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4.2&lt;/td&gt;
&lt;td&gt;&lt;a href="#job"&gt;      Job.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;&lt;a href="#what-is-redux-middleware"&gt;Redux Middleware.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5.1&lt;/td&gt;
&lt;td&gt;&lt;a href="#what-is-redux-saga"&gt;      What is Redux Saga.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5.2&lt;/td&gt;
&lt;td&gt;&lt;a href="#the-architecture-of-redux-middleware"&gt;      The Architecture of Redux Middleware.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5.3&lt;/td&gt;
&lt;td&gt;&lt;a href="#why"&gt;      Why.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5.4&lt;/td&gt;
&lt;td&gt;&lt;a href="#when"&gt;      When.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5.5&lt;/td&gt;
&lt;td&gt;&lt;a href="#how"&gt;      How.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;&lt;a href="#build-login-feature-by-using-redux-and-redux-saga-netflix"&gt;Build Login Feature By Using Redux and Redux Saga - Netflix&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;&lt;a href="#summary"&gt;Summary.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;&lt;a href="#useful-resources-to-learn-react"&gt;Useful Resources to Learn React.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;&lt;a href="#references"&gt;References.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#table-of-images"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Table of Images.&lt;/strong&gt;
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;No.&lt;/th&gt;
&lt;th&gt;Topics&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;&lt;a href="#figure1"&gt;Figure 1: Redux Middleware - Architecture.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;&lt;a href="#figure2"&gt;Figure 2: Login Page - Netflix.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;&lt;a href="#figure3"&gt;Figure 3: The Final Result.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;a id="how-to-run-the-project"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#0-how-to-run-the-project"&gt;
  &lt;/a&gt;
  &lt;strong&gt;0. How to Run the Project.&lt;/strong&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Step 1: Clone the project by using git clone or download the zip file.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Step 2: Open "terminal" / "cmd" / "gitbash" and change directory to "netflix-clone" and run "npm install" to install dependencies.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Step 3: Run "npm start" to run the fron-end project.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a id="live-demo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-live-demo"&gt;
  &lt;/a&gt;
  &lt;strong&gt;1. Live Demo.&lt;/strong&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kkiqq.csb.app/login"&gt;https://kkiqq.csb.app/login&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Username: &lt;a href="mailto:demo@gmail.com"&gt;demo@gmail.com&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Password: 123456&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a id="introduction-about-the-creator"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-introduction-about-the-creator"&gt;
  &lt;/a&gt;
  &lt;strong&gt;2. Introduction about the Creator.&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a id="greenwich-university"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#21-greenwich-university"&gt;
  &lt;/a&gt;
  &lt;strong&gt;2.1. Greenwich University.&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Valedictorian.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;GPA 4.0 / 4.0.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Machine Learning paper - Recommendation System - IEEE/ICACT2020.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Co-Founder / Mentor IT club.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a id="hitachi-vantara-vietnam"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#22-hitachi-vantara-vietnam"&gt;
  &lt;/a&gt;
  &lt;strong&gt;2.2. Hitachi Vantara Vietnam.&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Employee of the year.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Second prize - innovation contest.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Techlead - HN branch.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;One of CoE Leaders (Center of Excellence).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a id="prequisites"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-prequisites"&gt;
  &lt;/a&gt;
  &lt;strong&gt;3. Prequisites.&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a id="softwares"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#31-softwares"&gt;
  &lt;/a&gt;
  &lt;strong&gt;3.1. Softwares.&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Install NodeJS.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;An IDE or a text editor (VSCode, Intellij, Webstorm, etc).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a id="technical-skills"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#32-technical-skills"&gt;
  &lt;/a&gt;
  &lt;strong&gt;3.2. Technical Skills.&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Basic programming skill.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Basic HTML, CSS, JS skills.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a id="materials"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#33-materials"&gt;
  &lt;/a&gt;
  &lt;strong&gt;3.3. Materials.&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Html, css, js (source code) was prepared because I want to focus on React and share knowledge about React. Building html and css from scratch would take a lot of time.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;README.md (the md file will contain everything about the course).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Netflix data will be used to import to Firebase. In this course, we use Firebase as our back-end service.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a id="purposes-of-the-course"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-purposes-of-the-course"&gt;
  &lt;/a&gt;
  &lt;strong&gt;4. Purposes of the Course.&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a id="final-project"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#41-final-project"&gt;
  &lt;/a&gt;
  &lt;strong&gt;4.1. Final Project.&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The course would help you have understanding about React.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You could build the final project with end-to-end solution (front-end solution using React and back-end solution using Firebase).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a id="job"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#42-job"&gt;
  &lt;/a&gt;
  &lt;strong&gt;4.2. Job.&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;After finishing the course, you could get a job with fresher / junior position.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a id="what-is-redux-middleware"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-redux-middleware"&gt;
  &lt;/a&gt;
  &lt;strong&gt;5. Redux Middleware&lt;/strong&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;It provides a third-party extension point between dispatching an action, and the moment it reaches the reducer.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a id="what-is-redux-saga"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#51-what-is-redux-saga"&gt;
  &lt;/a&gt;
  &lt;strong&gt;5.1. What is Redux Saga&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;redux-saga is a library that aims to make application side effects (i.e. asynchronous things like data fetching and impure things like accessing the browser cache) easier to manage, more efficient to execute, easy to test, and better at handling failures.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The mental model is that a saga is like a separate thread in your application that's solely responsible for side effects. redux-saga is a redux middleware, which means this thread can be started, paused and cancelled from the main application with normal redux actions, it has access to the full redux application state and it can dispatch redux actions as well.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a id="the-architecture-of-redux-middleware"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#52-the-architecture-of-redux-middlware"&gt;
  &lt;/a&gt;
  &lt;strong&gt;5.2. The Architecture of Redux Middlware&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a id="figure1"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--svpPsS2W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xgfava2ri7jttg4idnji.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--svpPsS2W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xgfava2ri7jttg4idnji.gif" alt="redux-middleware-architecture"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Figure 1. Redux Middleware - Architecture.&lt;/p&gt;

&lt;p&gt;&lt;a id="why"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#53-why"&gt;
  &lt;/a&gt;
  &lt;strong&gt;5.3. Why&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;With a plain basic Redux store, you can only do simple synchronous updates by dispatching an action. Middleware extends the store's abilities, and lets you write async logic that interacts with the store.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Redux-saga are the recommended middleware for basic Redux side effects logic, including complex synchronous logic that needs access to the store, and simple async logic like AJAX requests.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a id="when"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#54-when"&gt;
  &lt;/a&gt;
  &lt;strong&gt;5.4. When&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;You can do synchronous updates by dispatching an action. In some cases, you need to perform asynchronous actions. It is time to use Redux Middleware. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a id="how"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#55-how"&gt;
  &lt;/a&gt;
  &lt;strong&gt;5.5. How&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Firstly, we need to understand the flow first. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The components will get state from the store. Whenever the state is changed, the components will be re-rendered.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The components will dispatch actions to tell the reducers update the state in the store.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In the case, we want to dispatch some asynchronous actions. The middleware will perform some side effects and get then pass the result to the reducers. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The reducers will take the responsibility to update the state. It will be used to return the latest state. In fact, we will not dispatch actions in the reducers. It is an anti-patten, we should avoid that.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In order to integrate Redux Saga in our Netflix application, please follow the below steps: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Step 1: define the actions including the actions and the action's types. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Step 2: define the reducers.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Step 3: define the store.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Step 4: Import redux-saga and apply middleware to the store.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Step 5: Use the store in our application.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Step 6: Let our components get the state from the store.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Step 7: Let our components dispatch the actions to the store.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a id="build-login-feature-by-using-redux-and-redux-saga-netflix"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-build-login-feature-by-using-redux-and-redux-saga-netflix"&gt;
  &lt;/a&gt;
  6. Build Login Feature by Using Redux and Redux Saga - Netflix.
&lt;/h2&gt;

&lt;p&gt;&lt;a id="figure2"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RvfPiQpT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/29z5cdnnsyzmb3k0f4dw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RvfPiQpT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/29z5cdnnsyzmb3k0f4dw.png" alt="reduc-middleware-architecture"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Figure 2. Login Page - Netflix.&lt;/p&gt;

&lt;p&gt;In the first part of the series, we built the login feature by using pure React. In this part, we will refactor the code and re-build the login feature with supporting from Redux-Saga.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Step 1: Install the Redux-Saga by running &lt;strong&gt;npm install redux-saga&lt;/strong&gt; or &lt;strong&gt;yarn add redux-saga&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Step 2: Create &lt;strong&gt;services&lt;/strong&gt; folder. The folder will be used to contain files which interact with the back-end.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Step 3: Create &lt;strong&gt;LoginService.js&lt;/strong&gt; file in &lt;strong&gt;services&lt;/strong&gt; folder. &lt;strong&gt;LoginService&lt;/strong&gt; is used to perform auth feature.&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// import firebase authentication.&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;firebaseAuth&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../firebase/firebase&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;login&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;firebaseAuth&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;signInWithEmailAndPassword&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Step 4: Create &lt;strong&gt;LoginActionTypes.js&lt;/strong&gt; in &lt;strong&gt;actions&lt;/strong&gt; folder. The file will specify action's types for the login reducer such as login action, etc.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;LOGIN&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;LOGIN&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Step 5: Create &lt;strong&gt;sagas&lt;/strong&gt; folder. The folder will be used to store different sagas in the application.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Step 6: Create &lt;strong&gt;LoginSaga.js&lt;/strong&gt; inside &lt;strong&gt;sagas&lt;/strong&gt; folder.&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// import redux saga.&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;call&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;put&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;takeLatest&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;redux-saga/effects&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// import action types.&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;loadingActionTypes&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../actions/LoadingActionTypes&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;loginActionTypes&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../actions/LoginActionTypes&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// import login service.&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;loginService&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../services/LoginService&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;login&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// show loading indicator.&lt;/span&gt;
    &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="nx"&gt;put&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;loadingActionTypes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;SHOW_LOADING&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="c1"&gt;// call login service.&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userCredentials&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="nx"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="nx"&gt;loginService&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;login&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;password&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;userCredentials&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Signed in user: &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;userCredentials&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="c1"&gt;// hide loading indicator.&lt;/span&gt;
    &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="nx"&gt;put&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;loadingActionTypes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;HIDE_LOADING&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;loginSaga&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="nx"&gt;takeLatest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;loginActionTypes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;LOGIN&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;login&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;loginSaga&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;1st NOTE&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;In saga file, we define functions as generator functions.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Each saga function will be associated with an action. For this reason, the function accepts &lt;strong&gt;action&lt;/strong&gt; as parameter. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;put&lt;/strong&gt; is used to dispatch other actions in redux-saga. In this case, we dispatch &lt;strong&gt;SHOW_LOADING&lt;/strong&gt; ans &lt;strong&gt;HIDE_LOADING&lt;/strong&gt; actions.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;call(fn, ...args)&lt;/strong&gt; creates an Effect description that instructs the middleware to call the function fn with args as arguments.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;As mentioned before, each saga function should be associated with an action. We associate the &lt;strong&gt;login&lt;/strong&gt; function with &lt;strong&gt;loginActionTypes.LOGIN&lt;/strong&gt; action.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;takeLatest&lt;/strong&gt; gets the response of the latest request that was fired&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Step 7: In fact, we could have many sagas in our application. The best practice is to combine all sagas into a root saga. Create &lt;strong&gt;index.js&lt;/strong&gt; file in &lt;strong&gt;sagas&lt;/strong&gt; folder. The &lt;strong&gt;index.js&lt;/strong&gt; file is used to combine all sagas.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// import redux saga.&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;all&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;redux-saga/effects&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// import sagas.&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;loginSaga&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./LoginSaga&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;rootSaga&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="nx"&gt;loginSaga&lt;/span&gt;&lt;span class="p"&gt;()]);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;rootSaga&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;2nd NOTE&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;all&lt;/strong&gt;: is used to execute different sagas in parallel.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We are importing different sagas from different files and combine them into a single root saga.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Step 8: Update &lt;strong&gt;store.js&lt;/strong&gt; with the following code.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// import create store&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createStore&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;applyMiddleware&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;redux&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// import root reducer.&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;reducer&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./reducers&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// import redux saga.&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;createSagaMiddleware&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;redux-saga&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// import root saga.&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;rootSaga&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./sagas&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;sagaMiddleware&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createSagaMiddleware&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;store&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createStore&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;reducer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;applyMiddleware&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sagaMiddleware&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

&lt;span class="nx"&gt;sagaMiddleware&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;rootSaga&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;3rd NOTE&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;applyMiddleware&lt;/strong&gt;: is used to apply middleware to the store. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;createSagaMiddleware&lt;/strong&gt;: is used to define saga middleware.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We need to import the root saga and it will be the parameter of &lt;strong&gt;sagaMiddleware.run&lt;/strong&gt; function.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Step 9: In &lt;strong&gt;LoginForm.js&lt;/strong&gt;, we should perform auth feature by dispatching the login action.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// import react.&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// import useDispatch to dispach an action to the store.&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useDispatch&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-redux&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// import action tyoes.&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;loginActionTypes&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../../actions/LoginActionTypes&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="cm"&gt;/**
 * create LoginForm component.
 */&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;LoginForm&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// create email and password state to store user's credentials.&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setEmail&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setPassword&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="c1"&gt;// create dispatch object to dispatch an action to the store.&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;dispatch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useDispatch&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="cm"&gt;/**
   * handle event when the user clicks on "Login" button.
   */&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;login&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// call firebase authentication service.&lt;/span&gt;
    &lt;span class="nx"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;loginActionTypes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;LOGIN&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;password&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="cm"&gt;/**
   * update email state when the user inputs the email field.
   * @param {*} e - synthetic event to get the latest email's value.
   */&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;onEmailChanged&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// get email value.&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;updatedEmail&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;// update email state.&lt;/span&gt;
    &lt;span class="nx"&gt;setEmail&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;updatedEmail&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="cm"&gt;/**
   * update password state when the user input the password field.
   * @param {*} e - synthetic event to get the latest password's value.
   */&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;onPasswordChanged&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// get password value.&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;updatedPassword&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;// update password state.&lt;/span&gt;
    &lt;span class="nx"&gt;setPassword&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;updatedPassword&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;login-body&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;login-body__form&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Sign&lt;/span&gt; &lt;span class="nx"&gt;In&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;login-body__input mb-16&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;
            &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;placeholder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Email or phone number&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;onEmailChanged&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;login-body__input&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;
            &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;password&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;placeholder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Password&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;onPasswordChanged&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;login-body__submit-btn&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;login&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nx"&gt;Sign&lt;/span&gt; &lt;span class="nx"&gt;In&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;login-body__options&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Remember&lt;/span&gt; &lt;span class="nx"&gt;me&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;login-body__need-help&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Need&lt;/span&gt; &lt;span class="nx"&gt;help&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;login-body__footer&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;login-body__fb&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;img&lt;/span&gt;
              &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://assets.nflxext.com/ffe/siteui/login/images/FB-f-Logo__blue_57.png&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
              &lt;span class="nx"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;fb&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Login&lt;/span&gt; &lt;span class="kd"&gt;with&lt;/span&gt; &lt;span class="nx"&gt;Facebook&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;login-body__new-to-nl&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;New&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;Netflix&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;login-body__sign-up&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Sign&lt;/span&gt; &lt;span class="nx"&gt;up&lt;/span&gt; &lt;span class="nx"&gt;now&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;login-body__google_captcha&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nx"&gt;This&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt; &lt;span class="kr"&gt;protected&lt;/span&gt; &lt;span class="nx"&gt;by&lt;/span&gt; &lt;span class="nx"&gt;Google&lt;/span&gt; &lt;span class="nx"&gt;reCAPTCHA&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;ensure&lt;/span&gt; &lt;span class="nx"&gt;you&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;re not a
            bot.
            &amp;lt;span className="login-body__learn-more"&amp;gt;Learn more.&amp;lt;/span&amp;gt;
          &amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
      &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
  );
}
// export LoginForm component.
export default LoginForm;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;4th NOTE&lt;/strong&gt;: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We import &lt;strong&gt;useDispatch&lt;/strong&gt; to dispatch action to the store. &lt;/li&gt;
&lt;/ul&gt;


&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;loginActionTypes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;LOGIN&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;password&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;ul&gt;
&lt;li&gt;&lt;p&gt;After dispatching the login action, the login function in &lt;strong&gt;LoginSaga&lt;/strong&gt; will be executed to perform side effects.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;After running the code, your result should be like this. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a id="figure3"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---00RdJrL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xmtpos5g4l7wvmv5f8y6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---00RdJrL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xmtpos5g4l7wvmv5f8y6.png" alt="reduc-middleware-architecture"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Figure 3. The Final Result.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a id="summary"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Summary&lt;/strong&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;You can do synchronous updates by dispatching an action. In some cases, you need to perform asynchronous actions. It is time to use Redux Middleware. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Redux-saga are the recommended middleware for basic Redux side effects logic, including complex synchronous logic that needs access to the store, and simple async logic like AJAX requests.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;applyMiddleware&lt;/strong&gt; is used to apply middleware to the store. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In fact, we can apply multiple middlewares.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thank you so much for taking the course. I hope that you could understand about Redux and you can build many real-life projects by using React (as front-end) and Firebase (as back-end) in order to solve many problems and make our life become better.&lt;/p&gt;

&lt;p&gt;&lt;a id="useful-resources-to-learn-react"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#useful-resources-to-learn-react"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Useful Resources to Learn React.&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;[1]. &lt;a href="https://reactjs.org/docs/getting-started.html"&gt;https://reactjs.org/docs/getting-started.html&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a id="references"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  &lt;strong&gt;References&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;[1]. &lt;a href="https://reactjs.org/docs/getting-started.html"&gt;https://reactjs.org/docs/getting-started.html&lt;/a&gt;.&lt;br&gt;
[2]. &lt;a href="https://firebase.google.com/docs/database"&gt;https://firebase.google.com/docs/database&lt;/a&gt;.&lt;br&gt;
[3]. &lt;a href="https://firebase.google.com/docs/auth/web/password-auth"&gt;https://firebase.google.com/docs/auth/web/password-auth&lt;/a&gt;.&lt;br&gt;
[4]. &lt;a href="https://firebase.google.com/docs/hosting"&gt;https://firebase.google.com/docs/hosting&lt;/a&gt;.&lt;br&gt;
[5]. &lt;a href="https://redux.js.org/"&gt;https://redux.js.org/&lt;/a&gt;&lt;br&gt;
[6]. &lt;a href="https://redux-saga.js.org/"&gt;https://redux-saga.js.org/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>javascript</category>
      <category>react</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Tips to build an awesome portfolio</title>
      <author>Krowser Web Services </author>
      <pubDate>Fri, 11 Jun 2021 13:52:28 +0000</pubDate>
      <link>https://dev.to/krowser/tips-to-build-an-awesome-portfolio-595</link>
      <guid>https://dev.to/krowser/tips-to-build-an-awesome-portfolio-595</guid>
      <description>&lt;p&gt;I've often heard students pursuing their degrees saying, "I wish I could have learned this". When applying for a job, companies have a brief look at your portfolio. Not only companies but also universities providing courses post-graduation have look at an individual's portfolio. Hence, it is essential to focus on your portfolio and build one which will stand out from the rest.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Learn new skills and build projects&lt;/strong&gt;&lt;br&gt;
Continuous learning is the minimum requirement for success in any field. Keep learning new skills at regular intervals. Suppose you're interested in web development or app development then start with its basics, build some basic projects and go for advanced learning and build advanced projects. As you see yourself progressing, start building projects which are based on real-life problem-solving. If you're stuck somewhere never hesitate to ask for help. You'll grow as you keep learning by making mistakes and improving. For learning new tech skills you can refer Udemy, Coursera, Udacity.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Apply for internships&lt;/strong&gt;&lt;br&gt;
Experience matters a lot&lt;br&gt;
After learning some skills and building personal projects it's time for working on some ongoing projects. You can start applying for internships in companies. Internships are the best way to gain industry experience. You might have to appear for an interview and some test rounds. Internships can be paid and unpaid depending upon the companies.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Start Freelancing&lt;/strong&gt;&lt;br&gt;
As a developer, you can start freelancing. As a student, it will help to generate extra revenue and help you to enhance your skills. Start with small projects, build them properly. Once you're confident enough then go for building medium and advanced-level projects. Freelancing will definitely add value to the portfolio. Projects built as a freelancer shows your confidence and proficiency in that skill.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Write blogs&lt;/strong&gt;&lt;br&gt;
Along with outstanding coding skills a developer must have good writing skills. Being a content write gives you an additional advantage over other candidates. Writing blogs is really good practice. Content writing is an amazing mind exercise.&lt;br&gt;
Writing content is a test of your creativity. Writing a weekly blog will enhance your writing skills and help you to maintain a blog page. Maintaining a blog page is a really helpful and add-on for a portfolio.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Publish research paper&lt;/strong&gt;&lt;br&gt;
If you're in college and doing some kind of research on some project or topic you should publish your own research paper. If you're applying for further studies in some top universities then this is really helpful. This is an extra point which will attract universities and companies. Your portfolio will look diverse and will stand out from the rest.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Join a social service committee&lt;/strong&gt;&lt;br&gt;
Joining a social service committee shows your concern towards society. You're not secluded in your own world, instead, it shows that you're also bothered about your society. This becomes helpful for future studies when you're applying to some top universities. If they have a look at your portfolio then the social service factor is advantageous.&lt;/p&gt;

&lt;p&gt;Hence, I would end this post by saying there are a lot of other factors, but these are the ones that I found to be prominent. If you some other factors then please do share them. Please do put down your thoughts in the comment section below.&lt;/p&gt;

</description>
      <category>career</category>
      <category>codenewbie</category>
      <category>javascript</category>
      <category>python</category>
    </item>
    <item>
      <title>Context Switching: Why It Hurts Code Reviews And What We Are Doing About It</title>
      <author>Marcelo Sousa</author>
      <pubDate>Fri, 11 Jun 2021 13:44:40 +0000</pubDate>
      <link>https://dev.to/reviewpad/context-switching-why-it-hurts-code-reviews-and-what-we-are-doing-about-it-2g0g</link>
      <guid>https://dev.to/reviewpad/context-switching-why-it-hurts-code-reviews-and-what-we-are-doing-about-it-2g0g</guid>
      <description>&lt;p&gt;&lt;em&gt;Context switching, not fear, is&lt;/em&gt;&lt;a href="https://www.youtube.com/watch?v=A54yfyi00dI&amp;amp;t=77s"&gt; &lt;em&gt;the mind-killer&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. One of the main obstacles to quality code reviews is the simple fact that developers have a lot to do. The cost of going back and forth during code reviews and between code reviews and other tasks is standing between us and excellence.&lt;/em&gt;  &lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;But we can help.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#we-are-letting-context-switching-get-in-our-way"&gt;
  &lt;/a&gt;
  We are letting context switching get in our way
&lt;/h3&gt;

&lt;p&gt;In several ways, actually. There are several types of context switching, and they are all harmful in their own specific manner.&lt;/p&gt;

&lt;p&gt;One of Reviewpad’s main goals is to reduce the amount of context switching you are doing today.&lt;/p&gt;

&lt;p&gt;So, what exactly do we mean by context switching?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#our-brains-dont-excel-at-multitasking"&gt;
  &lt;/a&gt;
  Our brains don’t excel at multitasking
&lt;/h3&gt;

&lt;p&gt;A bold claim, right? But it’s true. &lt;a href="https://link.springer.com/article/10.1023/A:1022193728205"&gt;Cognitive load theory&lt;/a&gt; is a useful framework to understand how our brain processes information. There’s a &lt;a href="https://www.mindtools.com/pages/article/cognitive-load-theory.htm"&gt;lot&lt;/a&gt; &lt;a href="https://www.sciencedirect.com/topics/psychology/cognitive-load-theory"&gt;of&lt;/a&gt; &lt;a href="https://www.bbc.com/worklife/article/20201103-cognitive-load-theory-explaining-our-fight-for-focus"&gt;science&lt;/a&gt; about this.&lt;/p&gt;

&lt;p&gt;The basic idea is that we store knowledge in the long-term memory of our brains, yet we are only consciously aware of a chunk of this memory. The so-called &lt;strong&gt;working memory&lt;/strong&gt;. In other words, our brains (much in the same way as a computer that has limited RAM) can only store and manipulate a certain amount of information at any given time. If you exceed that amount, you generate errors, stereotyping, or both.&lt;/p&gt;

&lt;p&gt;No two brains are the same. However, according to &lt;a href="https://en.wikipedia.org/wiki/Miller%27s_law"&gt;Miller’s law&lt;/a&gt;, an average human can only concurrently store and manipulate seven different elements in their working memory. This is what we call &lt;strong&gt;cognitive load&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Whether the &lt;a href="https://en.wikipedia.org/wiki/The_Magical_Number_Seven,_Plus_or_Minus_Two"&gt;magic number&lt;/a&gt; is 7, 9 or 4, several studies have suggested that humans are particularly poor at complex reasoning using totally new information in working memory. Still, this memory is fundamental to form knowledge that will be stored in long-term memory.&lt;/p&gt;

&lt;p&gt;According to cognitive load theory, working memory load can be affected by three kinds of cognitive load.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;strong&gt;Intrinsic cognitive load&lt;/strong&gt;: How difficult the subject matter actually is. (2+2 is easier to understand than E=mc&lt;sup&gt;2&lt;/sup&gt;).&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;Extraneous cognitive load&lt;/strong&gt;: How much the format is helping or hindering you. (It’s easier to read in your native language than your second language).&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;Germane cognitive load&lt;/strong&gt;: How efficient you are at structuring your thoughts. (A trained mathematician will learn new math faster than an equally skilled linguist).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What happens when you’re reading a novel and you &lt;strong&gt;stop&lt;/strong&gt; to reply to a tweet? Even if you were paying the utmost attention to what you were reading, you will replace whatever elements were in your working memory. When you get back, you will have to reread a couple of words, maybe a couple of sentences, to find your place. It may take you a couple of minutes to refocus on what you were doing.&lt;/p&gt;

&lt;p&gt;This is pretty much how we’re doing code reviews &lt;strong&gt;at all times&lt;/strong&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#context-switching-hurts-all-developers"&gt;
  &lt;/a&gt;
  Context switching hurts all developers
&lt;/h3&gt;

&lt;p&gt;We have &lt;a href="https://www.alleydog.com/glossary/definition.php?term=Context+Dependent+Memory#:~:text=Context%20dependent%20memory%20refers%20to,the%20original%20encoding%20and%20retrieval."&gt;context-dependent memories&lt;/a&gt;. We have, as we mentioned above, limited cognitive loads. Modern work environments aren’t ideal for total focus. Especially in the kind of fast-paced environments that most developers find themselves in. Context switching is constant. Email, Slack, IDE, Jira, Teams, Zoom, meetings, clients. Every time you go from one environment to another, your brain needs to gather context so it can refocus. The effects of this &lt;a href="https://www.linkedin.com/pulse/context-switching-developers-paul-graham/"&gt;are known&lt;/a&gt;, and they’re not ideal.&lt;/p&gt;

&lt;p&gt;Code reviews, in particular, are heavily affected by this.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#we-need-to-prioritize-code-reviews-in-our-work"&gt;
  &lt;/a&gt;
  We need to prioritize code reviews in our work
&lt;/h3&gt;

&lt;p&gt;Code reviews often &lt;strong&gt;are&lt;/strong&gt; context switches. If a developer is squeezing code reviews into a busy schedule, then the code review itself will constitute a switch in context.&lt;/p&gt;

&lt;p&gt;So why would we prioritize code reviews?&lt;/p&gt;

&lt;p&gt;Shouldn’t we let code review requests accumulate and then handle them all at once?&lt;/p&gt;

&lt;p&gt;Absolutely &lt;strong&gt;not&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;As I have discussed in &lt;a href="https://reviewpad.com/why-you-need-to-be-doing-code-reviews/"&gt;my previous post&lt;/a&gt;, the complexity of reviews increases exponentially with the number of changes, the maturity of the codebase and the expertise of the reviewer. For a team to move forward with a project with a lot of unreviewed code is &lt;strong&gt;a costly thing to do&lt;/strong&gt;. It will lead to mistakes and bugs that will be costlier to fix with every passing day.&lt;/p&gt;

&lt;p&gt;It goes without saying that for any elements of your team to be stuck waiting for code reviews &lt;strong&gt;isn’t ideal either&lt;/strong&gt;. Even if they do have other tasks they can get to in the meantime, that’s just extra context switches.&lt;/p&gt;

&lt;p&gt;There are solutions for this. Greg Sanford, from Slack, advocates for checking (and resolving) your code review requests &lt;a href="https://medium.com/@9len/on-code-review-16ea85f7c585"&gt;whenever you interrupt work&lt;/a&gt;. Allan Stewart, of Pluralsight, advocates for &lt;a href="https://www.pluralsight.com/tech-blog/continuous-code-reviews/"&gt;continuous code reviews&lt;/a&gt;, with developers working in pairs. We’ll write about how we cope with it in a future post.&lt;/p&gt;

&lt;p&gt;Teams need to find strategies to reduce the amount of &lt;strong&gt;context switching between development and code reviews&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;But that’s not the only kind of context switching.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#context-switching-between-tools-during-review-is-hell"&gt;
  &lt;/a&gt;
  Context switching between tools during review is hell
&lt;/h3&gt;

&lt;p&gt;And that’s where we come in.&lt;/p&gt;

&lt;p&gt;When developers are doing code reviews, they are using &lt;strong&gt;an excessive number of tools&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Slack, or another &lt;strong&gt;messaging app&lt;/strong&gt;, will be there, to get a notification and reach the original author of the code.&lt;/p&gt;

&lt;p&gt;Then you move to a &lt;strong&gt;review interface&lt;/strong&gt; to understand the differences and provide feedback. This typically will be the Web UI of GitHub, GitLab, Bitbucket or some other code host.&lt;/p&gt;

&lt;p&gt;After that, there will be some juggling with a &lt;strong&gt;project management tool&lt;/strong&gt;, such as Jira, to understand the scope of the changes, and with the &lt;strong&gt;IDE&lt;/strong&gt; to understand some parts of the code.&lt;/p&gt;

&lt;p&gt;This is a veritable Babel tower of context switching. Reviewers will be switching between a series of environments to help &lt;strong&gt;understand the code and its scope&lt;/strong&gt;.And then, they will switch between tools to &lt;strong&gt;communicate the review&lt;/strong&gt;. A typical code review requires the developer to switch context endless times and none of these tools was actually designed from the ground-up for the review process. What ends up happening is that you spend a big chunk of your review time context switching. After a while, your brain will be screaming “LGTM”.&lt;/p&gt;

&lt;p&gt;This is detrimental not only to the review itself but to all the other tasks being carried out alongside them. Can you imagine what happens to your short-term memory with that much extraneous cognitive load? It’s not a coincidence that you get a coffee before and after doing a complex review.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#heres-how-were-fixing-it"&gt;
  &lt;/a&gt;
  Here’s how we’re fixing it
&lt;/h3&gt;

&lt;p&gt;I acknowledge that &lt;strong&gt;context switching between tasks&lt;/strong&gt; isn’t something Reviewpad can fix. That’s a question of team culture that companies have to tackle (we hope they will!). But we can help with both the tools used to &lt;strong&gt;understand the code&lt;/strong&gt; and those used to &lt;strong&gt;communicate&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code reviewers shouldn’t be switching between these many tools&lt;/strong&gt;. At Reviewpad, we believe that your browser can replace most of the suite of apps we described above.&lt;/p&gt;

&lt;p&gt;We are integrating the entire review cycle into &lt;strong&gt;one tool&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;First of all, you shouldn’t need an IDE anymore. &lt;strong&gt;IDEs are for coding&lt;/strong&gt; –that’s a different cognitive task than understanding code or suggesting edits in a review. Reviewpad will provide you with the semantic context that you need to understand the code changes and identify functional bugs and security vulnerabilities. You will also be able to review changes easily by iteration (push or commit) to break down complex reviews into manageable chunks. We’re designing Reviewpad while aware of the limits in cognitive load so that you don’t feel overwhelmed with information.&lt;/p&gt;

&lt;p&gt;How about &lt;strong&gt;communication&lt;/strong&gt;?&lt;/p&gt;

&lt;p&gt;Reviewpad provides new ways of giving and receiving feedback during reviews. It achieves this without comments being lost (because you modified a line of code) or having to go into a meeting to understand the overall structure of the changes. Everything is integrated with current code hosts so that you can have a smooth transition process.&lt;/p&gt;

&lt;p&gt;If this looks good to you, you should &lt;a href="https://reviewpad.com/book-a-demo"&gt;book a demo&lt;/a&gt; with us. We would love to show you how much time Reviewpad can save you and your team. &lt;/p&gt;

&lt;p&gt;If you are facing problems with code reviews, please share them with us – we’re here to help.&lt;/p&gt;

</description>
      <category>codereview</category>
      <category>contextswitching</category>
    </item>
    <item>
      <title>Fitness Equipment Helps In Weight Management, Boost Stamina, And Remove Excessive Fat</title>
      <author>Indrayani Pande</author>
      <pubDate>Fri, 11 Jun 2021 13:43:53 +0000</pubDate>
      <link>https://dev.to/pande_indrayani/fitness-equipment-helps-in-weight-management-boost-stamina-and-remove-excessive-fat-2ehn</link>
      <guid>https://dev.to/pande_indrayani/fitness-equipment-helps-in-weight-management-boost-stamina-and-remove-excessive-fat-2ehn</guid>
      <description>&lt;p&gt;Fitness equipment for the home is a great investment if users can find the right piece that fits their needs. Most people think of treadmills when they think of home fitness equipment, but newer versions of the treadmill have been hitting the market for a while now and are well worth considering for home workout needs. When considering the fitness equipment for home, there are a few things to consider that may help users make the best choice.&lt;/p&gt;

&lt;p&gt;The first thing to decide is what the goals are. If they want to start a home gym with weights or machines, they will need a space large enough for both weight collections and fitness equipment. Most fitness equipment that users see at the local gym can now be bought for home use even though it was intended to be used in a gym. For cardiovascular fitness, users may want to consider a treadmill or elliptical.&lt;/p&gt;

&lt;p&gt;There are many excellent options for fitness equipment such as treadmills and exercise bikes these days. Customers can find everything from a basic model to a fancy rowing machine with many features. A treadmill usually offers the basics like incline and belt tension and speeds for both easy and difficult workouts. An exercise bike provides a good cardio workout without the impact on the legs or back and can be an excellent choice for a home fitness workout. Rowing machines offer many features that a treadmill cannot, including adjustable resistance levels, interactive workout modes, and automatic restocking of pre-programmed reels.&lt;/p&gt;

&lt;p&gt;Read More: &lt;a href="https://bit.ly/3gqW8Fx"&gt;https://bit.ly/3gqW8Fx&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Forecast Weather using Python</title>
      <author>Ayushi Rawat </author>
      <pubDate>Fri, 11 Jun 2021 13:22:52 +0000</pubDate>
      <link>https://dev.to/ayushi7rawat/forecast-weather-using-python-896</link>
      <guid>https://dev.to/ayushi7rawat/forecast-weather-using-python-896</guid>
      <description>&lt;p&gt;Hello reader!&lt;br&gt;
&lt;strong&gt;Weather&lt;/strong&gt; is the mix of events that happen each day in our atmosphere and is different in different parts of the world and changes over minutes, hours, days, and weeks. Rain and dull clouds, windy blue skies, cold snow, and sticky heat are very different conditions, yet they are all-weather. According to the Wikipedia definition:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Weather&lt;/strong&gt; is the state of the atmosphere. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In this blog post, we will learn how to forecast weather details. We will see the implementation in Python with hardly a few lines of code.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/ayushi7rawat/Ultimate-Python-Resource-Hub"&gt;Check out the Repository for Ultimate Resource in python&lt;/a&gt;. Drop a star if you find it useful! Got anything to add? Open a PR on the same!&lt;/p&gt;

&lt;p&gt;You can refer to my &lt;strong&gt;YouTube video Tutorial&lt;/strong&gt; to see a working tutorial for better understanding and a step-by-step guide of the same. &lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/jAVVtOzQ5ww"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-will-be-covered-in-this-blog"&gt;
  &lt;/a&gt;
  What will be covered in this Blog
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="mf"&gt;1.&lt;/span&gt;  &lt;span class="n"&gt;What&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="n"&gt;wttr&lt;/span&gt;&lt;span class="err"&gt;?&lt;/span&gt;
&lt;span class="mf"&gt;2.&lt;/span&gt;  &lt;span class="n"&gt;What&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt; &lt;span class="n"&gt;Module&lt;/span&gt;
&lt;span class="mf"&gt;3.&lt;/span&gt;  &lt;span class="n"&gt;How&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;forecast&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;weather&lt;/span&gt; &lt;span class="n"&gt;using&lt;/span&gt; &lt;span class="n"&gt;Python&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;Let's get started!&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-wttr"&gt;
  &lt;/a&gt;
  What is wttr?
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;wttr — the right way to check the weather!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;wttr.in is a console-oriented weather forecast service that supports various information representation methods like terminal-oriented ANSI-sequences for console HTTP clients (curl, httpie, or wget), HTML for web browsers, or PNG for graphical viewers.&lt;/p&gt;

&lt;p&gt;wttr.in uses &lt;a href="http://github.com/schachmat/wego"&gt;wego&lt;/a&gt; for visualization and various data sources for weather forecast information.&lt;/p&gt;

&lt;p&gt;If you wish to know more about it, you can refer to &lt;a href="https://github.com/chubin/wttr.in"&gt;&lt;strong&gt;wttr's&lt;/strong&gt; GitHub Repo&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#module-used"&gt;
  &lt;/a&gt;
  Module Used:
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#requests-module"&gt;
  &lt;/a&gt;
  requests Module:
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Requests&lt;/strong&gt; is a simple, yet elegant HTTP library. It allows you to send HTTP/1.1 requests extremely easily. Requests officially support Python 2.7 &amp;amp; 3.5+.&lt;/p&gt;

&lt;p&gt;If you wish to know more about it, you can refer to &lt;a href="https://docs.python-requests.org/en/master/"&gt;&lt;strong&gt;Requests Module&lt;/strong&gt; Documentation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Now that you are familiar with &lt;em&gt;Requests Module&lt;/em&gt; basics and have acquired basic knowledge of &lt;em&gt;wttr,&lt;/em&gt; we can move forward to &lt;em&gt;the coding section.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#time-to-code"&gt;
  &lt;/a&gt;
  Time to Code!
&lt;/h2&gt;

&lt;p&gt;You can find all the code at my &lt;a href="https://github.com/ayushi7rawat/Youtube-Projects/tree/master/Weather%20Forecast"&gt;GitHub Repository&lt;/a&gt;. &lt;strong&gt;Drop a star&lt;/strong&gt; if you find it useful.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Cifzmz8L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623385811809/P3sI8iBxw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Cifzmz8L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623385811809/P3sI8iBxw.png" alt="carbon (1).png"&gt;&lt;/a&gt;&lt;br&gt;
In order to access the Python library, you need to install it into your Python environment&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, we need to import the package into our python script. Use the following command to do so.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now that we have imported the library using the command &lt;code&gt;import requests&lt;/code&gt;, let's proceed.&lt;/p&gt;

&lt;p&gt;Let's ask the user to input the city name for which he/she wishes to fetch the weather details.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;city&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'input the city name'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;city&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can also hard-code the value if you will only check for yourself.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;city&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'bhopal'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, let's display a simple message.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Displaying Weather report for: '&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;city&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;#output:
&lt;/span&gt;&lt;span class="n"&gt;Displaying&lt;/span&gt; &lt;span class="n"&gt;Weather&lt;/span&gt; &lt;span class="n"&gt;report&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;bhopal&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's define the URL, We will make use of &lt;code&gt;format&lt;/code&gt; to pass city as a parameter here.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'https://wttr.in/{}'&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;city&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It's time to make use of the &lt;code&gt;requests&lt;/code&gt; module.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Our resultant data is stored in &lt;code&gt;res&lt;/code&gt;. We will make use of the &lt;code&gt;text&lt;/code&gt; method to extract our desired weather details and let's display the result.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is how the Weather Forecast will look like:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CQWIUZO8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623385775384/Hf5_78w-f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CQWIUZO8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623385775384/Hf5_78w-f.png" alt="output.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Isn't it beautiful? And with that, it's a wrap!  I hope you found the article useful! Share in the comments below.&lt;br&gt;
I create content about &lt;strong&gt;Career, Blogging, Programming, and Productivity&lt;/strong&gt;, If this is something that interests you, please share the article with your friends and connections. You can also subscribe to my newsletter to get updates every time I write something!&lt;/p&gt;

&lt;p&gt;Thank you for reading, If you have reached so far, please like the article, It will encourage me to write more such articles. Do share your valuable suggestions, I appreciate your honest feedback!&lt;/p&gt;

&lt;p&gt;I would strongly recommend you to Check out the &lt;a href="https://www.youtube.com/watch?v=jAOkWehMF6E"&gt;YouTube video&lt;/a&gt; of the same and &lt;strong&gt;don't forget to subscribe to my Channel&lt;/strong&gt;. I would love to connect with you at &lt;a href="https://twitter.com/ayushi7rawat"&gt;Twitter&lt;/a&gt; | &lt;a href="https://www.linkedin.com/in/ayushi7rawat/"&gt;LinkedIn&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You should definitely check out my other Blogs:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ayushirawat.com/python-39-all-you-need-to-know"&gt;Python 3.9: All You need to know&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ayushirawat.com/github-cli-10-all-you-need-to-know"&gt;GitHub CLI 1.0: All you need to know&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ayushirawat.com/how-to-make-your-own-google-chrome-extension-1"&gt;How to make your own Google Chrome Extension&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ayushirawat.com/run-javascript-from-python"&gt;Run Javascript from Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ayushirawat.com/automate-whatsapp-using-python"&gt;Automate WhatsApp using Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ayushirawat.com/automate-cowin-vaccine-slots-availablity-using-python"&gt;Automate Cowin Vaccine slots Availability using Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ayushirawat.com/what-is-competitive-programming-or-beginners-guide"&gt;What is Competitive Programming&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://scied.ucar.edu/learning-zone/how-weather-works/weather"&gt;https://scied.ucar.edu/learning-zone/how-weather-works/weather&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Weather"&gt;https://en.wikipedia.org/wiki/Weather&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/chubin/wttr.in"&gt;https://github.com/chubin/wttr.in&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/requests/"&gt;https://pypi.org/project/requests/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.python-requests.org/en/master/"&gt;https://docs.python-requests.org/en/master/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;See you in my next Blog article, Take care!!&lt;/p&gt;

</description>
      <category>python</category>
      <category>computerscience</category>
      <category>career</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Using the GraphCMS Mutation API to import content from CSV</title>
      <author>Jamie Barton</author>
      <pubDate>Fri, 11 Jun 2021 13:19:01 +0000</pubDate>
      <link>https://dev.to/graphcms/using-the-graphcms-mutation-api-to-import-content-from-csv-4254</link>
      <guid>https://dev.to/graphcms/using-the-graphcms-mutation-api-to-import-content-from-csv-4254</guid>
      <description>&lt;p&gt;Migrating from any platform to another isn't a straightforward process, the same goes for a Headless CMS. GraphCMS provides the SDK, APIs, and UI to make the process easier to create, and manage your schema and content.&lt;/p&gt;

&lt;p&gt;The GraphCMS schema and Content API is completely designed by you. This means any content types, and fields you add will immediately be available via the API. There are a few system content types, and &lt;a href="https://graphcms.com/docs/schema/system-fields"&gt;system fields&lt;/a&gt; you get out of the box, but you can use as much, or as little as you need.&lt;/p&gt;

&lt;p&gt;Before you begin creating any schema, or content, take a look at what content, and content types (referred to as "models" at GraphCMS) you already have, and what they may look like in GraphCMS.&lt;/p&gt;

&lt;p&gt;GraphCMS supports over a dozen &lt;a href="https://graphcms.com/docs/schema/field-types"&gt;field types&lt;/a&gt;, everything from regular strings, booleans, dates, polymorphic relations (Union Types) to remote field level resolvers that let you fetch content from other APIs.&lt;/p&gt;

&lt;p&gt;You'll want to begin by deciding on the models, and fields you need.&lt;/p&gt;

&lt;p&gt;Some users migrating prefer to take the time now to normalize their schema in a way that could not be done before, but this can often lead to manual intervention when importing content.&lt;/p&gt;

&lt;p&gt;If you don't normalize this now, you can always use String, and JSON fields to represent as much of your data without any modification, however you'll lose some benefits with filtering that data at an API later if fields aren't set to their best field types.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-explore-your-current-data-and-relations"&gt;
  &lt;/a&gt;
  1. Explore your current data, and relations
&lt;/h2&gt;

&lt;p&gt;Look at your existing data, and export it to a format such as JSON, or CSV. You can use this export to inspect your existing content types, and field names, as well as any relations between data.&lt;/p&gt;

&lt;p&gt;For the purposes of this article, we'll use a very basic CSV of authors:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;firstName;lastName
Jamie;Barton
Michael;Lukaszczyk
Daniel;Winter
Jonas;Faber
Bruno;Scheufler
Aien;Saidi
Pablo;Fernandez Busch
Marcos;Pasqualino
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#2-create-your-new-schema"&gt;
  &lt;/a&gt;
  2. Create your new schema
&lt;/h2&gt;

&lt;p&gt;You can use the GraphCMS schema editor UI to manage your schema, or use the &lt;a href="https://github.com/graphcms/management-sdk"&gt;Management SDK&lt;/a&gt; to create your models, fields, enums, relations programmatically.&lt;/p&gt;

&lt;p&gt;In the example below we'll import the &lt;code&gt;@graphcms/management&lt;/code&gt; dependency, and create a model, and add some fields.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// migration.js&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;newMigration&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;FieldType&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@graphcms/management&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;migration&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;newMigration&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;endpoint&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;...&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;authToken&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;...&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;author&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;migration&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createModel&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;apiId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Author&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;apiIdPlural&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Authors&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Author&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;author&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addSimpleField&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;apiId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;firstName&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;First Name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;FieldType&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="nx"&gt;author&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addSimpleField&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;apiId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;lastName&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Last Name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;FieldType&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;migration&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;run&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;ℹ️ You'll need your GraphCMS endpoint, and a Permanent Auth Token with Management API access granted.&lt;/p&gt;

&lt;p&gt;Next you'll need to run this with node. If you'd like to see the result, or any errors of the migration, you can opt to run this migration in the foreground by passing &lt;code&gt;true&lt;/code&gt; as the first argument to &lt;code&gt;run()&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;migration&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;foreground&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;errors&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;errors&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Depending on what filename you gave the migration, you can run &lt;code&gt;node migration.js&lt;/code&gt; from the command line.&lt;/p&gt;

&lt;p&gt;ℹ️ If you &lt;a href="https://graphql.org/learn/introspection/"&gt;introspect&lt;/a&gt; your GraphCMS endpoint, or visit the &lt;a href="https://app.graphcms.com/"&gt;schema editor UI&lt;/a&gt;, you'll notice the model "Author" with the fields "First Name", and "Last Name".&lt;/p&gt;

&lt;p&gt;There are many other options available using the Management SDK, so it's recommended you read through the &lt;a href="https://github.com/graphcms/management-sdk"&gt;documentation&lt;/a&gt;, and understand everything that is available before using it.&lt;/p&gt;

&lt;p&gt;Now we've some schema, it's time to import content!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-import-your-existing-content"&gt;
  &lt;/a&gt;
  3. Import your existing content
&lt;/h2&gt;

&lt;p&gt;Before you can begin creating any content within GraphCMS, you'll want to inspect the &lt;a href="https://graphcms.com/docs/content-api/mutations#auto-generated-mutations"&gt;auto generated GraphQL mutations&lt;/a&gt; for your models.&lt;/p&gt;

&lt;p&gt;Let's take a look at mutations are added to the GraphCMS GraphQL schema for the new "Author" model:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight graphql"&gt;&lt;code&gt;&lt;span class="err"&gt;createAuthor(data:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;AuthorCreateInput&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="err"&gt;):&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Author&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;updateAuthor(where:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;AuthorWhereUniqueInput&lt;/span&gt;&lt;span class="p"&gt;!,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;data:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;AuthorUpdateInput&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="err"&gt;):&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Author&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;deleteAuthor(where:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;AuthorWhereUniqueInput&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="err"&gt;):&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Author&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;upsertAuthor(&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;where:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;AuthorWhereUniqueInput&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;upsert:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;AuthorUpsertInput&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;):&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Author&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;publishAuthor(&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;where:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;AuthorWhereUniqueInput&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;to:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;[Stage&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;[PUBLISHED]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;):&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Author&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;unpublishAuthor(&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;where:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;AuthorWhereUniqueInput&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;from:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;[Stage&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;[PUBLISHED]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;):&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Author&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;updateManyAuthorsConnection(&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;where:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;AuthorManyWhereInput&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;data:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;AuthorUpdateManyInput&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;skip:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Int&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;first:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Int&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;last:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Int&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;before:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;ID&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;after:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;ID&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;):&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;AuthorConnection&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;deleteManyAuthorsConnection(&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;where:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;AuthorManyWhereInput&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;skip:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Int&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;first:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Int&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;last:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Int&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;before:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;ID&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;after:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;ID&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;):&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;AuthorConnection&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;publishManyAuthorsConnection(&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;where:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;AuthorManyWhereInput&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;from:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Stage&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;DRAFT&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;to:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;[Stage&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;[PUBLISHED]&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;skip:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Int&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;first:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Int&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;last:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Int&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;before:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;ID&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;after:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;ID&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;):&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;AuthorConnection&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;unpublishManyAuthorsConnection(&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;where:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;AuthorManyWhereInput&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;stage:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Stage&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;DRAFT&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;from:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;[Stage&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;[PUBLISHED]&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;skip:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Int&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;first:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Int&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;last:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Int&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;before:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;ID&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;after:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;ID&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;):&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;AuthorConnection&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You'll want to inspect the types referenced above, but if we take the &lt;code&gt;AuthorCreateInput&lt;/code&gt; which we'll need when importing content, you can see we provide some values:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight graphql"&gt;&lt;code&gt;&lt;span class="k"&gt;input&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;AuthorCreateInput&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;createdAt&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DateTime&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;updatedAt&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DateTime&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Creating an author will return the following &lt;code&gt;Author&lt;/code&gt; type:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight graphql"&gt;&lt;code&gt;&lt;span class="k"&gt;interface&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Node&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;ID&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;stage&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Stage&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="k"&gt;type&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Author&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;implements&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Node&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;stage&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Stage&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;documentInStages&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;stages&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Stage&lt;/span&gt;&lt;span class="p"&gt;!]!&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;PUBLISHED&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DRAFT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;QA&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;includeCurrent&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;Boolean&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;inheritLocale&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;Boolean&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Author&lt;/span&gt;&lt;span class="p"&gt;!]!&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;ID&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;createdAt&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DateTime&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;createdBy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;locales&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Locale&lt;/span&gt;&lt;span class="p"&gt;!]):&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;updatedAt&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DateTime&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;updatedBy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;locales&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Locale&lt;/span&gt;&lt;span class="p"&gt;!]):&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;publishedAt&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DateTime&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;publishedBy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;locales&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Locale&lt;/span&gt;&lt;span class="p"&gt;!]):&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;history&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;limit&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;skip&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;0&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;stageOverride&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Stage&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Version&lt;/span&gt;&lt;span class="p"&gt;!]!&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Since your data is mostly like of a different shape, and structure than it was before, it's quite difficult to create a 1:1 mapping, and import from your existing database to GraphCMS. Because of this you will want to consider tweaking your current dataset to match your new input types.&lt;/p&gt;

&lt;p&gt;Now you're ready to import, you should manage the imports in a queue.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;run&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;csvToJson&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getJsonFromCsv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./data.csv&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;queue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Queue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;GraphCMS Import&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;row&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;job&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;queue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createJob&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;row&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;backoff&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;fixed&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5000&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;save&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;job&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="nx"&gt;queue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;job succeeded&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;jobId&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`[SUCCESS]: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;jobId&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="nx"&gt;queue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;job failed&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;jobId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`[FAILED]: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;jobId&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; (&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;)`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;queue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;job&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;createContentEntry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;job&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;run&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When each job is processed, it executes the &lt;code&gt;createContentEntry&lt;/code&gt; function. This function is what will make a request to GraphCMS to perform a GraphQL mutation, specifically  &lt;code&gt;createAuthor&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;createContentEntry&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;variables&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;GraphQLClient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GRAPHCMS_ENDPOINT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;Authorization&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`Bearer &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GRAPHCMS_TOKEN&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;gql&lt;/span&gt;&lt;span class="s2"&gt;`
    mutation createAuthor($firstName: String, $lastName: String) {
      createAuthor(data: { firstName: $firstName, lastName: $lastName }) {
        id
      }
    }
  `&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;variables&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's it!&lt;/p&gt;

&lt;p&gt;Hopefully this article was useful for giving you some ideas on how you can manage importing content to GraphCMS.&lt;/p&gt;

</description>
      <category>graphql</category>
      <category>headlesscms</category>
      <category>import</category>
    </item>
    <item>
      <title>Cloud automation in 2021: The new normal in the tech industry</title>
      <author>CAST AI</author>
      <pubDate>Fri, 11 Jun 2021 13:08:15 +0000</pubDate>
      <link>https://dev.to/castai/cloud-automation-in-2021-the-new-normal-in-the-tech-industry-1oc7</link>
      <guid>https://dev.to/castai/cloud-automation-in-2021-the-new-normal-in-the-tech-industry-1oc7</guid>
      <description>&lt;p&gt;Scaling, provisioning, and configuring cloud resources manually often results in errors that can affect your availability or performance. Solution? Cloud automation.&lt;/p&gt;

&lt;p&gt;Keep on reading to discover the most impactful use cases of cloud automation across the tech industry.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I prepared this guide to help you get started:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#whatis"&gt;What is cloud automation?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#benefits"&gt;What are the benefits of cloud automation?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#autovs"&gt;Cloud automation vs. orchestration - what’s the difference?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#usecases"&gt;Cloud automation use cases that showcase its power&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#usecase1"&gt;1. Auto-provisioning cloud resources&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#usecase2"&gt;2. Mitigating cloud sprawl and avoiding waste&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#usecase3"&gt;3. Enabling Infrastructure as Code (IaC)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#usecase4"&gt;4. Enhancing application development and testing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#usecase5"&gt;5. Making hybrid cloud work&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="#kubernetes"&gt;Does Kubernetes count as cloud automation?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#areyouready"&gt;Are you ready for cloud automation?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="whatis"&gt;What is cloud automation?&lt;/h2&gt;

&lt;p&gt;Cloud service providers have definitely made accessing resources on demand easier, but not managing them. Just imagine that you have to configure virtual machines, create VM clusters, set up virtual networks, and manage both the availability and performance. &lt;/p&gt;

&lt;p&gt;Automation takes all these tasks off your plate. &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Cloud automation is a set of processes and tools that reduce the manual effort and time your team spends on provisioning and managing cloud workloads and services. And you can apply cloud automation to private, public, and hybrid environments.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The main value of automating your cloud setup is eliminating repetitive and manual processes of deploying and managing cloud workloads. They’re inefficient and error-prone, leading to troubleshooting that, in turn, affects your workload’s availability. &lt;/p&gt;

&lt;p&gt;Moreover, manual cloud deployment might result in security vulnerabilities that can put your company at risk. Automation also helps to reduce the variability and complexity of your infrastructure and tech stack.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;The truth is that if you want DevOps to work, you need Infrastructure as Code (IaC), tight feedback loops, and continuous delivery. And they all rely on automation.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;How do teams achieve automation? By using orchestration and automation tools that run on top of the virtualized environment.&lt;/p&gt;

&lt;h2 id="benefits"&gt;What are the benefits of cloud automation?&lt;/h2&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xSBVHWg8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cast.ai/wp-content/uploads/2021/06/Benefits-of-cloud-automation.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xSBVHWg8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cast.ai/wp-content/uploads/2021/06/Benefits-of-cloud-automation.png" alt="Benefits of cloud automation"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;Reducing IT infra expenses&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;By reducing the amount of manual effort in managing cloud-based operations, you’re going to accelerate your processes - or even carry them out without lifting a finger. &lt;/p&gt;

&lt;p&gt;Fewer manual processes mean fewer errors and less time wasted on diagnosing and debugging (and more time developing new things and innovating).&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;Enabling continuous deployment&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;The idea behind continuous deployment is automating the application deployment pipeline to enable more frequent updates. Teams striving to build a smooth continuous deployment process and working in line with DevOps best practices can reap a lot of benefits from automation tools that automate deployments to cloud-based environments.&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;Making the most of the cloud&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;Cloud automation tools are here to help teams use cloud infrastructure to the fullest. It can cover and impact many areas like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;automated storage and backups, &lt;/li&gt;
&lt;li&gt;security and compliance management,&lt;/li&gt;
&lt;li&gt;applying changes to configurations and settings,&lt;/li&gt;
&lt;li&gt;deploying code.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;strong&gt;Improving security and resilience&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;Automating sensitive tasks is a smart move. That way, you will no longer need several people to log into mission-critical systems. This dramatically reduces the risk of human-made error and account compromise. &lt;/p&gt;

&lt;p&gt;Building security best practices into automated workflows is a path to enforcing security principles in every single deployment.&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;Enhancing backup processes&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;System backups are a must-have if you’re looking to protect your systems from risks ranging from equipment failure to cyber attacks. To improve your resilience, automate backups on the cloud or back up your on-premises systems automatically to a cloud-based environment. &lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;Taking governance to the next level&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;When teams set up systems manually or on an ad-hoc basis, admins might end up with low visibility of what’s actually running. How can they control the infrastructure without a centralized view? &lt;/p&gt;

&lt;p&gt;This is another automation superpower. It sets up resources in a standardized way, giving you more control over the infrastructure running across your company.&lt;/p&gt;

&lt;h2 id="autovs"&gt;Cloud automation vs. orchestration - what’s the difference?&lt;/h2&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EGNh5bMt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cast.ai/wp-content/uploads/2021/06/image-12.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EGNh5bMt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cast.ai/wp-content/uploads/2021/06/image-12.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cloud automation and cloud orchestration both come in handy for building an effective cloud strategy. But they’re not one and the same thing. Understanding the difference between them and their purposes is essential.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;Cloud automation &lt;/strong&gt;is about using cloud management tools for completing tasks without any manual work. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;We’re talking about tasks like provisioning servers, backing up data, or identifying and eliminating processes that aren’t used. Cloud automation can do all of that without engaging any time or effort of your team. &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;Cloud orchestration &lt;/strong&gt;is about achieving your goals in the cloud infrastructure by organizing automated tasks.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The idea is to bring low-level tasks together to create processes and then coordinate them throughout the entire infrastructure, often across multiple systems or locations. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;While &lt;strong&gt;cloud automation&lt;/strong&gt; defines the deployment and management tasks up for automation, &lt;strong&gt;cloud orchestration &lt;/strong&gt;coordinates these defined tasks into a strategic approach that brings you closer to your goals. &lt;/em&gt;&lt;/p&gt;

&lt;p&gt;You can make automation work without orchestration, but combining these two techniques brings the best results.&lt;/p&gt;

&lt;h2 id="usecases"&gt;Cloud automation use cases that showcase its power&lt;/h2&gt;

&lt;h3 id="usecase1"&gt;1. Auto-provisioning cloud resources&lt;/h3&gt;

&lt;p&gt;Choosing &lt;a href="https://cast.ai/blog/aws-eks-vs-ecs-vs-fargate-where-to-manage-your-kubernetes/" rel="noreferrer noopener"&gt;the right VM for the job&lt;/a&gt; is tough because you’re facing many different choices with unique parameters. How are you supposed to know which ones have the optimal cost vs. performance ratio?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You can delegate the tasks of rightsizing and &lt;a href="https://thenewstack.io/reduce-kubernetes-costs-using-autoscaling-mechanisms" rel="noreferrer noopener"&gt;autoscaling&lt;/a&gt; to an instance selection algorithm. &lt;/strong&gt;It’s capable of choosing the best instance types that meet the requirements of your application whenever your cluster needs extra nodes. Your workloads will run at maximum performance and minimum cost.&lt;/p&gt;

&lt;p&gt;Here’s how it works if you run your app in a managed Kubernetes solution that takes care of automated provisioning: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YfrqWCeL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/I9Y1BfGZDMv74N0A1BDnDAttYaa64_2mIn9POQ91D0ghpKZswC2SqUDpOxmuJK7akpRiwQ5tICYhQccuy-gaNje0jNYWslNeDR_hud1S5LndLSKDbC38l5lFr6CcsNokW8sZtf4s" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YfrqWCeL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/I9Y1BfGZDMv74N0A1BDnDAttYaa64_2mIn9POQ91D0ghpKZswC2SqUDpOxmuJK7akpRiwQ5tICYhQccuy-gaNje0jNYWslNeDR_hud1S5LndLSKDbC38l5lFr6CcsNokW8sZtf4s" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;At 15:41, the application starts experiencing a surge of traffic. The tool creates new pods to handle it, but they have no place to run. We need new CPU cores.&lt;/li&gt;
&lt;li&gt;Within 2 minutes, the solution adds a new 16-core node automatically.&lt;/li&gt;
&lt;li&gt;At 15:45, some more traffic appears in the application. The tool adds an extra 8-core node within one minute so that the application can handle the traffic.&lt;/li&gt;
&lt;li&gt;Once the traffic is gone, the solution instantly retires 2 nodes to avoid resource waste.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id="usecase2"&gt;2. Mitigating cloud sprawl and avoiding waste&lt;/h3&gt;

&lt;p&gt;Cloud automation solutions can shut down unused instances and processes to reduce your cloud costs. And losing track of cloud-deployed instances is more common than you think:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L70NWRXI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/jaLASR-L_l759KNHX8UaArI5pJM4-xZvsHukELJIUs9hhe-_Z_cKWUq00xgQKjlBGP-88l0wSvXa6XQsZG5x4EL8l_dYsmxN1_C6shHReQzJ5mIZT8xXYhhTQXJ88fivIYKipdRL" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L70NWRXI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/jaLASR-L_l759KNHX8UaArI5pJM4-xZvsHukELJIUs9hhe-_Z_cKWUq00xgQKjlBGP-88l0wSvXa6XQsZG5x4EL8l_dYsmxN1_C6shHReQzJ5mIZT8xXYhhTQXJ88fivIYKipdRL" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Many teams face orphaned instances that have no ownership or battle shadow IT projects that come with poorly accounted for resources in the cloud. Such examples of zombie infrastructure are still activated and generate a monthly bill, but you get zero value from the assets.&lt;/p&gt;

&lt;p&gt;Cloud automation can streamline the process of identifying zombie IT infrastructure and addressing the problem before it snowballs into a massive &lt;a href="https://cast.ai/blog/how-to-solve-the-costliest-cloud-bill-issues/"&gt;cloud bill&lt;/a&gt; at the end of the month.&lt;/p&gt;

&lt;h3 id="usecase3"&gt;3. Enabling Infrastructure as Code (IaC)&lt;/h3&gt;

&lt;p&gt;Establishing Infrastructure as Code (IaC) is another use case for cloud automation. In IaC, IT infrastructure is defined in configuration files and launched automatically in line with that configuration. These configuration files undergo the same processes as source code - they need to be kept in version control, managed, tested, and developed. &lt;/p&gt;

&lt;p&gt;With cloud automation, you can&lt;strong&gt; extend the control over nearly all infrastructure aspects to the cloud platform&lt;/strong&gt;, allowing orchestration of more complex systems:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Cloud automation processes can draw from resource pools and define common configuration items (like VMs, containers, or virtual private networks). &lt;/li&gt;
&lt;li&gt;Next, they can load these application components and services into the configuration items.&lt;/li&gt;
&lt;li&gt;Finally, they can assemble them to create an improved operational environment.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Here’s an example to show you how it works&lt;/strong&gt;. A cloud automation template can perform many tasks to make a microservices application work:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create a number of containers for the application, &lt;/li&gt;
&lt;li&gt;Load components into the container clusters, &lt;/li&gt;
&lt;li&gt;Bring storage and database together, &lt;/li&gt;
&lt;li&gt;Seamlessly configure a virtual network, &lt;/li&gt;
&lt;li&gt;Create load balancers for the clusters, &lt;/li&gt;
&lt;li&gt;And open the workload to users.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id="usecase4"&gt;4. Enhancing application development and testing&lt;/h3&gt;

&lt;p&gt;Continuous delivery and continuous deployment need automatically provisioned dev/test environments that are part of automated development pipelines. Automation on the public cloud is &lt;strong&gt;the primary method of serving the continuous delivery pipeline&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Modern development methods rely on a team’s ability to rapidly deploy resources and scale them to test new releases. When the testing is over, the resources should be released for reuse. Public clouds with automation tools can make that happen.&lt;/p&gt;

&lt;h3 id="usecase5"&gt;5. Making hybrid cloud work&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://cast.ai/blog/multi-cloud-vs-hybrid-cloud-whats-the-difference-and-why-does-it-matter/" rel="noreferrer noopener"&gt;Hybrid cloud environments&lt;/a&gt; are complicated, to say the least. They require careful integrations between on-premises and public cloud systems. This is where cloud automation can help. &lt;/p&gt;

&lt;p&gt;Automation solutions can &lt;strong&gt;synchronize assets between local data centers and cloud resources to make “cloud bursting” possible&lt;/strong&gt;. Cloud bursting is the process of moving loads to the cloud when the application exceeds local resources. &lt;/p&gt;

&lt;p&gt;The use of cloud automation in the hybrid cloud also enables disaster recovery scenarios with the remote site mirroring the on-premises environment.&lt;/p&gt;

&lt;h2 id="kubernetes"&gt;Does Kubernetes count as cloud automation?&lt;/h2&gt;

&lt;p&gt;If you’re using Kubernetes, you’re already one step ahead in the automation game. Sure, Kubernetes isn’t an automation solution since it doesn’t automate all the cloud resources you’re using. Still, it manages and orchestrates containers that can be used to run practically any workload on the cloud. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;If you’re wondering which Amazon Kubernetes service is the right fit for your application, take a look here: &lt;/em&gt;&lt;a href="https://cast.ai/blog/aws-eks-vs-ecs-vs-fargate-where-to-manage-your-kubernetes/" rel="noreferrer noopener"&gt;&lt;em&gt;AWS EKS vs. ECS vs. Fargate: Where to manage your Kubernetes?&lt;/em&gt;&lt;/a&gt;&lt;em&gt; &lt;/em&gt;&lt;/p&gt;

&lt;h2 id="areyouready"&gt;Are you ready for cloud automation?&lt;/h2&gt;

&lt;p&gt;Cloud automation saves your team lots of time and effort. It’s faster, more scalable, and more secure, allowing you to build more predictable and reliable workflows. &lt;/p&gt;

&lt;p&gt;The technology is emerging, but the implementations and reports so far show that effective automation is bound to become a real force multiplier for businesses. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Are you using any automation tools to provision, manage, or scale your cloud resources? Are you planning to experiment with automated Ops processes?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Give us a shout out in the comments, we’re happy to start a conversation about automating cloud processes.&lt;/p&gt;

</description>
      <category>devops</category>
      <category>aws</category>
      <category>googlecloud</category>
      <category>azure</category>
    </item>
    <item>
      <title>Everything I learned at the first job I had as a developer</title>
      <author>Pasca Vlad</author>
      <pubDate>Fri, 11 Jun 2021 13:05:08 +0000</pubDate>
      <link>https://dev.to/pascavld/everything-i-learned-at-the-first-job-i-had-as-a-developer-f8c</link>
      <guid>https://dev.to/pascavld/everything-i-learned-at-the-first-job-i-had-as-a-developer-f8c</guid>
      <description>&lt;p&gt;&lt;em&gt;If you found value in this thread you will most likely enjoy my tweets too so make sure you follow me on &lt;a href="https://twitter.com/VladPasca5"&gt;Twitter&lt;/a&gt;  for more information about web development and how to improve as a developer. This article was first published on my &lt;a href="https://vladpasca.hashnode.dev/"&gt;Blog&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;If you didn't new already, last summer I had a job as a web developer for 3 months&lt;/p&gt;

&lt;p&gt;It was at a local startup&lt;/p&gt;

&lt;p&gt;You can read more about how I got it from here&lt;/p&gt;

&lt;p&gt;&lt;a href="https://blog.vlddev.live/how-i-got-a-job-as-a-developer-at-16-1?guid=0cd9e036-aad5-4209-998b-38df8f57fcf4&amp;amp;deviceId=8e582af3-dbdf-4370-918b-080f344a9692"&gt;https://blog.vlddev.live/how-i-got-a-job-as-a-developer-at-16-1?guid=0cd9e036-aad5-4209-998b-38df8f57fcf4&amp;amp;deviceId=8e582af3-dbdf-4370-918b-080f344a9692&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now let's continue with what I learned&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-communication-is-key"&gt;
  &lt;/a&gt;
  1. Communication is key
&lt;/h3&gt;

&lt;p&gt;In the beginning, I was afraid to ask questions and that was a huge mistake&lt;/p&gt;

&lt;p&gt;Why?&lt;/p&gt;

&lt;p&gt;Because I spent one day on a problem I could solve in 4 hours&lt;/p&gt;

&lt;p&gt;Once I started asking more questions I become more productive&lt;/p&gt;

&lt;p&gt;And people love to see that you ask questions&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-learning-git-is-a-must"&gt;
  &lt;/a&gt;
  2. Learning Git is a must
&lt;/h3&gt;

&lt;p&gt;I never really understood how important Git is until I worked at this job&lt;/p&gt;

&lt;p&gt;In those 3 months, I worked with Git every single day&lt;/p&gt;

&lt;p&gt;So please take the time to learn&lt;/p&gt;

&lt;p&gt;It will save you a lot of time and struggle in the future&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-you-need-to-test-your-code"&gt;
  &lt;/a&gt;
  3. You need to test your code
&lt;/h3&gt;

&lt;p&gt;I had no idea what testing was but after one week I realized how important it is&lt;/p&gt;

&lt;p&gt;It saves you a lot of time of finding bugs and all that&lt;/p&gt;

&lt;p&gt;It's simply not worth it to push code without testing it&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-everyone-has-impostor-syndrome"&gt;
  &lt;/a&gt;
  4. Everyone has Impostor Syndrome
&lt;/h3&gt;

&lt;p&gt;When I joined this startup my impostor syndrome was huge&lt;/p&gt;

&lt;p&gt;I felt like a loser but I realized that I'm not the only dev that feels that&lt;/p&gt;

&lt;p&gt;One dev I worked with made me understand that this is normal and I shouldn't worry about it&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-reading-the-docs-is-a-life-hack"&gt;
  &lt;/a&gt;
  5. Reading the docs is a life hack
&lt;/h3&gt;

&lt;p&gt;One day I had to work with a new technology I never worked with before&lt;/p&gt;

&lt;p&gt;I didn't read the docs and just jumped into writing code&lt;/p&gt;

&lt;p&gt;Huge mistake&lt;/p&gt;

&lt;p&gt;I wasted a lot of time that could be saved by reading the docs for one hour&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-end"&gt;
  &lt;/a&gt;
  The end
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;I hope found this useful and if you did please let me know. If you have any question feel free to DM me on  &lt;a href="https://twitter.com/VladPasca5"&gt;Twitter&lt;/a&gt; .&lt;/em&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>learnings</category>
      <category>newbie</category>
    </item>
    <item>
      <title>How to Level Up Your React Conditionals</title>
      <author>Reed Barger</author>
      <pubDate>Fri, 11 Jun 2021 13:04:11 +0000</pubDate>
      <link>https://dev.to/reedbarger/how-to-level-up-your-react-conditionals-3hom</link>
      <guid>https://dev.to/reedbarger/how-to-level-up-your-react-conditionals-3hom</guid>
      <description>&lt;p&gt;Do you write conditionals correctly within your React applications?&lt;/p&gt;

&lt;p&gt;Good conditionals are an essential part of any React application. We use conditionals to show or hide elements or components in our application.&lt;/p&gt;

&lt;p&gt;In short--to be an effective React developer, you must know how to write good conditionals.&lt;/p&gt;

&lt;p&gt;Let's go over all of the major patterns you need to know to write clean, concise conditionals, plus what anti-patterns you should avoid.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#want-your-own-copy%E2%80%AC"&gt;
  &lt;/a&gt;
  Want Your Own Copy?‬ 📄
&lt;/h2&gt;

&lt;p&gt;*****&lt;strong&gt;&lt;em&gt;&lt;a href="http://bit.ly/react-conditionals-2021"&gt;Download the cheatsheet in PDF format here&lt;/a&gt;&lt;/em&gt;&lt;/strong&gt;***** (it takes 5 seconds).&lt;/p&gt;

&lt;p&gt;Here are some quick wins from grabbing the downloadable version:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Quick reference guide to review however and whenever&lt;/li&gt;
&lt;li&gt;  Tons of copyable code snippets for easy reuse&lt;/li&gt;
&lt;li&gt;  Read this massive guide wherever suits you best. On the train, at your desk, standing in line... anywhere.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There's a ton of great stuff to cover, so let's get started.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-use-ifstatements-primarily-no-need-for-else-or-elseif"&gt;
  &lt;/a&gt;
  1. Use if-statements primarily. No need for else or else-if.
&lt;/h2&gt;

&lt;p&gt;Let's start with the most basic type of conditional in React. If we have data, we want to display it. If not, we want to show nothing.&lt;/p&gt;

&lt;p&gt;Simple! How would we write that?&lt;/p&gt;

&lt;p&gt;Let's say we are fetching an array of posts data from an API. When it is fetching the data, &lt;code&gt;posts&lt;/code&gt; has a value of &lt;code&gt;undefined&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;We can check for that value with a simple if-statement.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;posts&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;usePosts&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// posts === undefined at first&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;posts&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;PostList&lt;/span&gt; &lt;span class="nx"&gt;posts&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;posts&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The reason this patterns works is that we are returning early. If the condition is met (if &lt;code&gt;!posts&lt;/code&gt; is has a boolean value of &lt;code&gt;true&lt;/code&gt;), we display nothing in our component by returning &lt;code&gt;null&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If statements also work when you have multiple conditions that you want to check for.&lt;/p&gt;

&lt;p&gt;For example, if you want to check for loading and error states before you display your data:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;isLoading&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;isError&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;posts&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;usePosts&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isLoading&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Loading&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;;
&lt;/span&gt;  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isError&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="o"&gt;!&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;;
&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;PostList&lt;/span&gt; &lt;span class="nx"&gt;posts&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;posts&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice that we can reuse the if-statement and do not have to write if-else or if-else-if, which cuts down on the code that we have to write and is still just as readable.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-use-the-ternary-operator-to-write-conditionals-in-your-jsx"&gt;
  &lt;/a&gt;
  2. Use the ternary operator to write conditionals in your JSX
&lt;/h2&gt;

&lt;p&gt;If-statements are great when we want to exit early and display nothing or a totally different component.&lt;/p&gt;

&lt;p&gt;However, what if we don't want to write a conditional separate from our returned JSX, but directly within it?&lt;/p&gt;

&lt;p&gt;In React, we must include expressions (something that resolves to a value), not statements within our JSX.&lt;/p&gt;

&lt;p&gt;This is why we must write conditionals in our JSX only with ternaries and not if-statements.&lt;/p&gt;

&lt;p&gt;For example, if we wanted to display one nested component on a mobile-sized screen and another on a larger screen, a ternary would be a perfect choice:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isMobile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useWindowSize&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Header&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Sidebar&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;isMobile&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;MobileChat&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Chat&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/main&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Most developers think this the only pattern they can leverage when it comes to using ternaries.&lt;/p&gt;

&lt;p&gt;In fact, you don't have to clutter your component tree by including all of these ternaries directly in your returned JSX.&lt;/p&gt;

&lt;p&gt;Since ternaries resolve to a value, remember that you can assign the result of a ternary to a variable, which you can then use where you like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isMobile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useWindowSize&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ChatComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;isMobile&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;MobileChat&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Chat&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Header&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Sidebar&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;ChatComponent&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/main&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#3-no-else-condition-use-the-ampamp-and-operator"&gt;
  &lt;/a&gt;
  3. No else condition? Use the &amp;amp;&amp;amp; (and) operator
&lt;/h2&gt;

&lt;p&gt;In many cases, you will want to use a ternary in your JSX, but will realize that if that condition is not met, you don't want to display anything.&lt;/p&gt;

&lt;p&gt;This ternary would look like the following: &lt;code&gt;condition ? &amp;lt;Component /&amp;gt; : null&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;We&lt;/p&gt;

&lt;p&gt;If you don't have an else condition, use the &amp;amp;&amp;amp; operator&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;PostFeed&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;posts&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;hasFinished&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;usePosts&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;PostList&lt;/span&gt; &lt;span class="nx"&gt;posts&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;posts&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;hasFinished&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;You&lt;/span&gt; &lt;span class="nx"&gt;have&lt;/span&gt; &lt;span class="nx"&gt;reached&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;end&lt;/span&gt;&lt;span class="o"&gt;!&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="p"&gt;)}&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#4-switch-statements-for-multiple-conditions"&gt;
  &lt;/a&gt;
  4. Switch statements for multiple conditions
&lt;/h2&gt;

&lt;p&gt;What if we are in a situation where have many different conditions, more than just one or two?&lt;/p&gt;

&lt;p&gt;We could certainly write multiple if-statements, but all of these if statements, as we've seen earlier, are written above our returned JSX.&lt;/p&gt;

&lt;p&gt;Too many if-statements can clutter our components. How do we make our code cleaner?&lt;/p&gt;

&lt;p&gt;We can often extract multiple conditions to a separate component which contains a switch statement.&lt;/p&gt;

&lt;p&gt;For example, we have a Menu component that we can toggle and display different tabs.&lt;/p&gt;

&lt;p&gt;We have tabs that can display user, chat and room data as you see below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Menu&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;menu&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setMenu&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;toggleMenu&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;setMenu&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;m&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;m&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;m&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;MenuItem&lt;/span&gt; &lt;span class="nx"&gt;menu&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;menu&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;toggleMenu&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Toggle&lt;/span&gt; &lt;span class="nx"&gt;Menu&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;MenuItem&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;menu&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;menu&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Users&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Chats&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Rooms&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Since we are using a dedicated MenuItem component with a switch statement, our parent Menu component is not cluttered by conditional logic and we can easily see what component will be displayed given the &lt;code&gt;menu&lt;/code&gt; state.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-want-conditionals-as-components-try-jsx-control-statements"&gt;
  &lt;/a&gt;
  5. Want conditionals as components? Try JSX Control Statements
&lt;/h2&gt;

&lt;p&gt;It's greatly beneficial to be able to use plain JavaScript within our React components, but if you want even more declarative and straightforward conditionals, check out the React library JSX control statements.&lt;/p&gt;

&lt;p&gt;You can bring it into your React projects by running the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;--save-dev&lt;/span&gt; babel-plugin-jsx-control-statements
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Additionally, you can list it in your .babelrc file like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"plugins"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"jsx-control-statements"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is a Babel plugin that allows you to use React components directly within your JSX to write very easy to understand conditionals.&lt;/p&gt;

&lt;p&gt;The best way to understand the use of such a library is by taking a look at an example. Let's rewrite one of our previous examples with the help of JSX control statements:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;isLoading&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;isError&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;posts&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;usePosts&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Choose&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;When&lt;/span&gt; &lt;span class="nx"&gt;condition&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;isLoading&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Loading&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/When&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;When&lt;/span&gt; &lt;span class="nx"&gt;condition&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;isError&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="o"&gt;!&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/When&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Otherwise&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;PostList&lt;/span&gt; &lt;span class="nx"&gt;posts&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;posts&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Otherwise&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Choose&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can see that there's no if or ternary statement in sight and we have a very readable component structure.&lt;/p&gt;

&lt;p&gt;Give JSX control statements a try in your next React project and see if a library like this is for you.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-next"&gt;
  &lt;/a&gt;
  ***&lt;strong&gt;&lt;em&gt;What's Next&lt;/em&gt;&lt;/strong&gt;***
&lt;/h2&gt;

&lt;p&gt;I hope this guide gave you some helpful patterns to write great React conditionals.&lt;/p&gt;

&lt;p&gt;If you want a copy of this cheatsheet to keep for learning purposes, you can &lt;a href="http://bit.ly/react-conditionals-2021"&gt;download a complete PDF version of this cheatsheet here.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Also check out these ultimate resources, made to take your React skills to the next level, including:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://reactbootcamp.com/react-for-beginners-2021/"&gt;React for beginners: The complete guide&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://reactbootcamp.com/how-to-code-react-hooks/"&gt;How to write custom React hooks&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://reactbootcamp.com/react-props-cheatsheet/"&gt;The complete guide to React props&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://reactbootcamp.com/fetch-data-in-react/"&gt;How to fetch data in React from front to back&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://reactbootcamp.com/react-app-node-backend/"&gt;How to build fullstack apps in React with Node&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://reactbootcamp.com/what-to-know-about-react-state/"&gt;Learn more about React state&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://reactbootcamp.com/react-router-cheatsheet/"&gt;How to add routing to your React app with React Router&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://reactbootcamp.com/react-cheatsheet-2021/"&gt;Learn every part of React with the advanced React cheatsheet&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Build your MEAN project with automatic Express.js management </title>
      <author>Kirk</author>
      <pubDate>Fri, 11 Jun 2021 12:20:34 +0000</pubDate>
      <link>https://dev.to/scaledynamics/build-your-mean-project-with-automatic-express-js-management-3a79</link>
      <guid>https://dev.to/scaledynamics/build-your-mean-project-with-automatic-express-js-management-3a79</guid>
      <description>&lt;p&gt;Hi there, some of you guys might already know that we built a &lt;a href="https://dev.to/scaledynamics/no-need-to-handle-express-js-with-this-mern-stack-project-template-1bm6"&gt;MERN stack template&lt;/a&gt; earlier that helps you skip Express.js.&lt;/p&gt;

&lt;p&gt;Regarding some of your requests, we would like to bring you a new open-source template. And this time, it is for MEAN stack 😉&lt;/p&gt;

&lt;p&gt;And you know what, you can still develop both front &amp;amp; backend with live-reload and deploy with a simple command-line while the Express.js part is managed 100% automatically, isn’t that great? 🤯&lt;/p&gt;

&lt;p&gt;Clone it right here 👉 &lt;a href="https://github.com/ScaleDynamics/angular-mongodb-template"&gt;MEAN ready-to-deploy template&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now let’s get to know how the template can help you!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-mean-stack-but-you-only-code-man"&gt;
  &lt;/a&gt;
  A MEAN stack but you only code MAN 🤯
&lt;/h2&gt;

&lt;p&gt;Besides the MERN stack that stands for MongoDB, Express, React and Node.js, we still have the MEAN stack for people who use Angular instead of React. It is also considered as a quite popular one for Full Stack JavaScript developers.&lt;/p&gt;

&lt;p&gt;Quite similar to the MERN template, this MEAN template is also configured specifically for the ScaleDynamics cloud platform on MIT license. It offers all you need to start developing your MEAN based apps/services:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;One command to develop with live-reload&lt;/li&gt;
&lt;li&gt;Another one to deploy, make your app/service available on a URL&lt;/li&gt;
&lt;li&gt;No Express.js layers management, the platform takes care of them automatically &lt;/li&gt;
&lt;li&gt;No HTTP/JSON coding as our compiler automatically generates its stubs required to call a Node.js function using JS objects.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Don’t forget that you need a ScaleDynamics platform account, you can create your FREE  Community account &lt;a href="https://console.scaledynamics.com/auth/signup/"&gt;right here&lt;/a&gt;).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-use-the-template"&gt;
  &lt;/a&gt;
  How to use the template
&lt;/h2&gt;

&lt;p&gt;First of all, clone the template by:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ssh"&gt;&lt;code&gt;&lt;span class="k"&gt;git&lt;/span&gt; clone https://github.com/ScaleDynamics/angular-mongodb-template.git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then you’ll have both frontend and backend template ready:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;On the frontend, you’ll have a &lt;code&gt;angular-app&lt;/code&gt; web template app created with &lt;code&gt;angular-cli&lt;/code&gt;. To update it, open the &lt;code&gt;src&lt;/code&gt; folder where you can add, modify or delete components.&lt;/li&gt;
&lt;li&gt;The backend contains a node module and a MongoDB module. You can update the frontend/backend as you need to build your own app.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To start developing with the template, go in &lt;code&gt;frontend/angular-app&lt;/code&gt; folder and run those commands below:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#install-the-project"&gt;
  &lt;/a&gt;
  Install the project
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ssh"&gt;&lt;code&gt;&lt;span class="k"&gt;npm&lt;/span&gt; install
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#log-in-to-the-scaledynamics-platform"&gt;
  &lt;/a&gt;
  Log in to the ScaleDynamics Platform
&lt;/h3&gt;

&lt;p&gt;Don’t forget to login to ScaleDynamics Platform to start developing. In case you don’t have an account yet, take 2 mins to create a free community account &lt;a href=""&gt;here&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ssh"&gt;&lt;code&gt;&lt;span class="k"&gt;npx&lt;/span&gt; warp login
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#develop-with-livereload"&gt;
  &lt;/a&gt;
  Develop with live-reload
&lt;/h3&gt;

&lt;p&gt;Start a live-reload development session by using this command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ssh"&gt;&lt;code&gt;&lt;span class="k"&gt;npm&lt;/span&gt; run start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can always update the frontend or the backend code, it will be rebuilt at each modification.&lt;/p&gt;

&lt;p&gt;Please note that you’ll need to select an existing project or create a new one as you want before running this command. On the ScaleDynamics platform, a project identifies an application or a microservice. For more details on projects, see the &lt;a href="https://docs.scaledynamics.com"&gt;documentation&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#deploy-with-scaledynamics"&gt;
  &lt;/a&gt;
  Deploy with ScaleDynamics
&lt;/h3&gt;

&lt;p&gt;When it comes to deployment, you’ll need to compile and minimize your project for production by using:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ssh"&gt;&lt;code&gt;&lt;span class="k"&gt;npm&lt;/span&gt; run build
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then the deploy command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ssh"&gt;&lt;code&gt;&lt;span class="k"&gt;npm&lt;/span&gt; run deploy
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, beside selecting a project, you’ll also have to select or create an environment which identifies the cloud execution environment to run your app. You can create as many as you want like ‘staging’, ‘demo’, ‘prod’... Each environment has its own URL. &lt;/p&gt;

&lt;p&gt;For more details on projects or environments, see the &lt;a href="https://docs.scaledynamics.com"&gt;documentation&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#configure-mongodb-driver"&gt;
  &lt;/a&gt;
  Configure MongoDB driver
&lt;/h3&gt;

&lt;p&gt;In &lt;code&gt;src/mongodb.js&lt;/code&gt;. There is a template module that you can replace its &lt;code&gt;URI&lt;/code&gt; constant with your own.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;URI&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mongodb://[username:password@]host1[:port1][,...hostN[:portN]][/[defaultauthdb][?options]]&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#youre-all-set"&gt;
  &lt;/a&gt;
  You’re all set!
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#creating-new-functions"&gt;
  &lt;/a&gt;
  Creating new functions
&lt;/h3&gt;

&lt;p&gt;With ScaleDynamics Platform, new functions can be called by the frontend. Add them in &lt;code&gt;index.js&lt;/code&gt; or into another module and export it. The platform manages the Express.js layers automatically.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;myFunction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// your code here&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;myFunction&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To access your new functions on the frontend side, adapt this code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;Backend&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./.backend/hello.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;myFunction&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Backend&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#other-info"&gt;
  &lt;/a&gt;
  Other info
&lt;/h3&gt;

&lt;p&gt;And that’s it! If you need more information, check out these documentations:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.scaledynamics.com/docs/frameworks"&gt;ScaleDynamics Platform&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://angular.io/docs"&gt;Angular&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.mongodb.com/guides/"&gt;MongoDB&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We hope you liked it, please let us know if you have any questions or feedback! &lt;br&gt;
Stay tuned for the Vue.js template coming up! you can subscribe, or follow us on &lt;a href="https://twitter.com/scaledynamics"&gt;Twitter&lt;/a&gt;, &lt;a href="https://www.facebook.com/scaledynamics.tech"&gt;Facebook&lt;/a&gt; and even &lt;a href="https://www.instagram.com/scaledynamicstech/"&gt;Instagram&lt;/a&gt; for more updates!&lt;br&gt;
Cheers!&lt;/p&gt;

</description>
    </item>
    <item>
      <title>How I got 1000 followers on DEV</title>
      <author>Coderslang: Become a Software Engineer</author>
      <pubDate>Fri, 11 Jun 2021 12:20:06 +0000</pubDate>
      <link>https://dev.to/coderslang/how-i-got-1000-followers-on-dev-34l7</link>
      <guid>https://dev.to/coderslang/how-i-got-1000-followers-on-dev-34l7</guid>
      <description>&lt;p&gt;I just hit my first significant milestone by getting 1000 followers on &lt;a href="http://dev.to"&gt;dev.to&lt;/a&gt; and I thank you all from the bottom of my heart. Now, I want to share my experience starting from the day I've created an account. I'm absolutely positive that you can achieve the same result (or way better) if you follow the plan.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#first-steps"&gt;
  &lt;/a&gt;
  First steps
&lt;/h2&gt;

&lt;p&gt;I've created an account at DEV a little over 6 months back. I was (and still am) building a &lt;a href="https://js.coderslang.com"&gt;Full-Stack JavaScript course&lt;/a&gt;, and I wanted to get feedback from the developer community.&lt;/p&gt;

&lt;p&gt;I've been coding for quite a few years, but I was completely new to writing a blog or promoting my product. I wasn't aware of any coding communities apart from Stack Overflow. And writing a personal blog on a separate domain isn't much fun when there's no one to read it.&lt;/p&gt;

&lt;p&gt;Brief googling uncovered 2 options:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hashnode&lt;/li&gt;
&lt;li&gt;DEV&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I created accounts on both platforms but then decided to stick to DEV as the community seemed a lot more active here. It was Nov 27, 2020.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Fur7yj8e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://learn.coderslang.com/dev-profile-header.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Fur7yj8e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://learn.coderslang.com/dev-profile-header.png" alt="dev-profile-header"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#posting-into-the-void"&gt;
  &lt;/a&gt;
  Posting into the void
&lt;/h2&gt;

&lt;p&gt;As my primary goal was to get the attention of the beginner devs that want to &lt;a href="https://js.coderslang.com"&gt;learn Full-Stack JS&lt;/a&gt;, I started posting some things that I thought would be interesting for beginners.&lt;/p&gt;

&lt;p&gt;It was quite lonely as my posts didn't attract any readers.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--48rpxjYn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://learn.coderslang.com/dev-first-articles.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--48rpxjYn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://learn.coderslang.com/dev-first-articles.png" alt="dev-first-articles"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Current numbers look fine, but they don't tell the full story. Most of the reads came in the recent weeks, and you see that there still is one article with &lt;code&gt;&amp;lt;25&lt;/code&gt; views. Probably it just sucks.&lt;/p&gt;

&lt;p&gt;I felt hopeless and was ready to declare growing my DEV following as (yet another) failed experiment, but then I got another idea.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#changing-the-strategy"&gt;
  &lt;/a&gt;
  Changing the strategy
&lt;/h2&gt;

&lt;p&gt;As the approach of "posting random things" and hoping for the better didn't quite work, I decided to change the strategy. What if I just stopped looking at the numbers and posted a new article every day?&lt;/p&gt;

&lt;p&gt;In February 2021 I decided to go for it. One day — one article.&lt;/p&gt;

&lt;p&gt;To make things easier, I only published the posts that I already wrote. This way I didn't have to spend too much time coming up with new ideas every day.&lt;/p&gt;

&lt;p&gt;Here's what I wrote in my first article about &lt;a href="https://dev.to/coderslang/js-test-1-type-conversion-in-javascript-1oed"&gt;Type Conversion in JavaScript&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A couple of months back, I've started posting &lt;a href="https://learn.coderslang.com/tags/js-test"&gt;colorful JavaScript code snippets that you can use to check your JS skills on my blog&lt;/a&gt;. Every problem has the correct answer and explanation. But I strongly suggest you first try to solve it yourself.&lt;br&gt;
Every day in February I'm going to post a new JS test here on DEV. Follow, like, comment if it's something you're interested in.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And the results immediately improved. After about a week of daily posting, I noticed that I get about 10 new followers each day.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uJIzoTny--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://learn.coderslang.com/dev-js-test-articles.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uJIzoTny--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://learn.coderslang.com/dev-js-test-articles.png" alt="dev-js-test-articles"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;These aren't your regular coding tutorials or articles. Each of the posts I've published was about 200 words and consisted of 4 things:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;a JavaScript code snippet&lt;/li&gt;
&lt;li&gt;a question that an interviewer might ask&lt;/li&gt;
&lt;li&gt;an explanation of what's going on&lt;/li&gt;
&lt;li&gt;the correct answer&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And, last (but not least), I've already had the stock of those posts published at &lt;a href="http://learn.coderslang.com"&gt;learn.coderslang.com&lt;/a&gt;, so all I had to do was import them to DEV and log in once a day to hit "publish" and answer the comments.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#keeping-it-up"&gt;
  &lt;/a&gt;
  Keeping it up
&lt;/h2&gt;

&lt;p&gt;My February experiment was very successful. The main takeaway was that consistency and persistence are key. Show up every day, and the results will follow.&lt;/p&gt;

&lt;p&gt;The problem was the lack of new articles, so I couldn't keep up the pace and continue posting daily.&lt;/p&gt;

&lt;p&gt;I wrote a couple of longer-from articles (still under 10 minutes of reading time) and got featured in DEV Twitter with 230k followers! Here's the post about &lt;a href="https://dev.to/coderslang/javascript-asynchronous-programming-and-promises-1epl"&gt;JavaScript Promises&lt;/a&gt; that got a ton of views and likes from Twitter.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tb2Wj5Nw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://learn.coderslang.com/dev-twitter-post.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tb2Wj5Nw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://learn.coderslang.com/dev-twitter-post.png" alt="dev-twitter-post"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#getting-better"&gt;
  &lt;/a&gt;
  Getting better
&lt;/h2&gt;

&lt;p&gt;The truth is, I'm not the best writer. And I'm not the best developer in the world either. And I'd be lying if I told you that it wouldn't matter. It definitely would.&lt;/p&gt;

&lt;p&gt;But I'm not here to compare myself with the celebrities with millions of followers. Nor am I here to brag about how great I am and how my success was inevitable.&lt;/p&gt;

&lt;p&gt;And have I told you that English is not my first language?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Got 1000 followers on DEV in 6 months 🥳&lt;/li&gt;
&lt;li&gt;Very little views/reactions in the first 3 months 🤷&lt;/li&gt;
&lt;li&gt;Consistent daily growth after I started posting a new article each day 💪&lt;/li&gt;
&lt;li&gt;Published 87 posts (average reading time - 2 minutes) ⚡️&lt;/li&gt;
&lt;li&gt;You can do the same 🚀&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uw6i1H0f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://learn.coderslang.com/dev-1000-followers.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uw6i1H0f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://learn.coderslang.com/dev-1000-followers.png" alt="dev-1000-followers.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now I have only one thing left to say.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#thank-you"&gt;
  &lt;/a&gt;
  THANK YOU!
&lt;/h2&gt;

&lt;p&gt;And remember that if you want to get something or want to learn something new, don't let anyone stop you. Show up and get things done. The results will follow.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>devjournal</category>
      <category>motivation</category>
      <category>discuss</category>
    </item>
  </channel>
</rss>
