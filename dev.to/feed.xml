<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Super simple imports with Webpack resolve</title>
      <author>Tjaša</author>
      <pubDate>Sat, 08 May 2021 11:16:12 +0000</pubDate>
      <link>https://dev.to/tjasa/super-simple-imports-with-webpack-resolve-150</link>
      <guid>https://dev.to/tjasa/super-simple-imports-with-webpack-resolve-150</guid>
      <description>&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules"&gt;Modules&lt;/a&gt; were, without a dought, one of the best improvements that came with ES6. When combined with Webpack, it allows us to write code in a more developer-friendly way. But file referencing when importing can sometimes become repetitive, error-prone, and hard to look at. Luckily Webpack has us covered with the right solution that is super easy to configure.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#webpack-resolve"&gt;
  &lt;/a&gt;
  Webpack resolve
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://webpack.js.org/concepts/module-resolution/"&gt;Resolve&lt;/a&gt; is a Webpack library that helps locate imported modules. To configure it, add the code snippet below to the config file.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;webpack.config.js&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// configuration options&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Resolve library allows us to resolve imports in two ways: with &lt;code&gt;modules&lt;/code&gt; or &lt;code&gt;alias&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#modules"&gt;
  &lt;/a&gt;
  Modules
&lt;/h2&gt;

&lt;p&gt;Modules resolve imports by searching for them in the specified directories. Often this is used to resolve node modules.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;webpack.config.js&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;modules&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;node_modules&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This configuration allows us to replace this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Module&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../../../../node_modules/module&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;with this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Module&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;module&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Using &lt;code&gt;resolve.modules&lt;/code&gt;, this is all you have to do to make imports work since it will not cause issues with other config files.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#alias"&gt;
  &lt;/a&gt;
  Alias
&lt;/h2&gt;

&lt;p&gt;Alias resolves imports by replacing the original path with the custom one.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;webpack.config.js&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;alias&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;components&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;components/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;partials&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;partials/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This allows us to change this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../../../../components/component&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Part&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../../../../partislas/part&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;to this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@components/component&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Part&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@partials/part&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;Note that &lt;code&gt;__dirname&lt;/code&gt; points to the location of the &lt;code&gt;webpack.config.js&lt;/code&gt; file.&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#eslint-adjustment"&gt;
  &lt;/a&gt;
  ESLint adjustment
&lt;/h3&gt;

&lt;p&gt;Using an alias you might get an ESLint error saying the path can’t be resolved. To fix that you can use &lt;a href="https://www.npmjs.com/package/eslint-import-resolver-webpack"&gt;eslint-import-resolver-webpack&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To configure it you can add this line of code to the &lt;code&gt;.eslintrc.yml&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="sr"&gt;/resolver: webpac&lt;/span&gt;&lt;span class="err"&gt;k
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This setting will work if a &lt;code&gt;webpack.config.js&lt;/code&gt; is in the same directory as the &lt;code&gt;eslintrc.yml&lt;/code&gt; file. Otherwise, see other settings options.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;Configuring Webpack can be overwhelming with all the available options but luckily, this library is very simple to understand and configure. It helped me to write cleaner imports, and I am sure you will find it as useful as I have.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>webdev</category>
      <category>webpack</category>
    </item>
    <item>
      <title>I Built a VSCode Inspired Developer Portfolio</title>
      <author>Nitin Ranganath</author>
      <pubDate>Sat, 08 May 2021 11:06:26 +0000</pubDate>
      <link>https://dev.to/itsnitinr/i-built-a-vscode-inspired-developer-portfolio-418g</link>
      <guid>https://dev.to/itsnitinr/i-built-a-vscode-inspired-developer-portfolio-418g</guid>
      <description>&lt;h2&gt;
  &lt;a href="#the-idea-amp-inspiration"&gt;
  &lt;/a&gt;
  The Idea &amp;amp; Inspiration
&lt;/h2&gt;

&lt;p&gt;Truth be told, I've lost count of the number of amazing portfolio websites I've visited and been in awe of. I would try to take some inspiration from them and recreate them in my own way for my portfolio. However, after working on it for a few hours, I would come across a different design or idea and hop onto that instead. &lt;/p&gt;

&lt;p&gt;Due to this cycle, I have over 5-6 incomplete portfolio websites on my laptop, each having a different design. I love the creativity of some websites but I just can't make up my mind and stick to one design. So, what caught my eye this time? This amazing &lt;a href="https://vivek9patel.github.io/"&gt;Ubuntu-themed portfolio website&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I liked the idea so I thought of what tools do developers use. And what could be a better choice than the text editor most of us write code on: Visual Studio Code.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#vscodethemed-portfolio"&gt;
  &lt;/a&gt;
  VSCode-Themed Portfolio
&lt;/h2&gt;

&lt;p&gt;If you're interested in exploring the project yourself, there's the link to it: &lt;a href="http://vscode-portfolio.vercel.app/"&gt;http://vscode-portfolio.vercel.app/&lt;/a&gt;&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/itsnitinr"&gt;
        itsnitinr
      &lt;/a&gt; / &lt;a href="https://github.com/itsnitinr/vscode-portfolio"&gt;
        vscode-portfolio
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A VSCode themed developer portfolio built using Next.js
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
vscode-portfolio&lt;/h1&gt;
&lt;p&gt;A Visual Studio Code themed developer portfolio website built with Next.js and deployed on Vercel.&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/901d5ea56b11835b3aece7fee74e6f874694077d617c5190f6542f222ef353d8/68747470733a2f2f696d6775722e636f6d2f614365595753512e676966"&gt;&lt;img src="https://camo.githubusercontent.com/901d5ea56b11835b3aece7fee74e6f874694077d617c5190f6542f222ef353d8/68747470733a2f2f696d6775722e636f6d2f614365595753512e676966" alt="vscode-portfolio banner"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Features Roadmap&lt;/h2&gt;
&lt;ul class="contains-task-list"&gt;
&lt;li class="task-list-item"&gt;
 Themes and customizations
&lt;ul class="contains-task-list"&gt;
&lt;li class="task-list-item"&gt;
 GitHub Dark (default)&lt;/li&gt;
&lt;li class="task-list-item"&gt;
 One Dark Pro&lt;/li&gt;
&lt;li class="task-list-item"&gt;
 Dracula&lt;/li&gt;
&lt;li class="task-list-item"&gt;
 Ayu&lt;/li&gt;
&lt;li class="task-list-item"&gt;
 Nord&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li class="task-list-item"&gt;
 Interactive custom terminal&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For other features and themes suggestions, please open an issue.&lt;/p&gt;
&lt;h2&gt;
Running Development Server&lt;/h2&gt;
&lt;div class="highlight highlight-source-shell js-code-highlight"&gt;
&lt;pre&gt;npm run dev
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; or&lt;/span&gt;
yarn dev&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Open &lt;a href="http://localhost:3000" rel="nofollow"&gt;http://localhost:3000&lt;/a&gt; with your browser to see the result.&lt;/p&gt;
&lt;p&gt;All VSCode related components can be found in the &lt;code&gt;components&lt;/code&gt; folder. To change the content of the portfolio, check out the &lt;code&gt;pages&lt;/code&gt; folder. To add or remove pages, modify &lt;code&gt;components/Sidebar.jsx&lt;/code&gt; and &lt;code&gt;components/Tabsbar.jsx&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;
Next.js Resources&lt;/h2&gt;
&lt;p&gt;To learn more about Next.js, take a look at the following resources:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://nextjs.org/docs" rel="nofollow"&gt;Next.js Documentation&lt;/a&gt; - learn about Next.js features and API.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://nextjs.org/learn" rel="nofollow"&gt;Learn Next.js&lt;/a&gt; - an interactive Next.js tutorial.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can check out &lt;a href="https://github.com/vercel/next.js/"&gt;the Next.js GitHub repository&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Deploy on Vercel&lt;/h2&gt;
&lt;p&gt;The easiest way to deploy your Next.js app is to use the &lt;a href="https://vercel.com/new?utm_medium=default-template&amp;amp;filter=next.js&amp;amp;utm_source=create-next-app&amp;amp;utm_campaign=create-next-app-readme" rel="nofollow"&gt;Vercel Platform&lt;/a&gt;…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/itsnitinr/vscode-portfolio"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;This is a responsive and server-side rendered portfolio website built with Next.js, one of the technologies that I mentioned in my "Technologies I'll be Learning in 2021" post.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/itsnitinr" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G4BI-70A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--ETUrsG6Q--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/243850/50980395-72a9-45f6-ae80-ed8aa49b87d6.jpeg" alt="itsnitinr image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/itsnitinr/technologies-that-i-ll-be-learning-in-2021-as-a-mern-stack-developer-with-resources-4pci" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Technologies That I'll Be Learning in 2021 as a MERN Stack Developer (with resources)&lt;/h2&gt;
      &lt;h3&gt;Nitin Ranganath ・ Jan 5 ・ 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#typescript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#react&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#node&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;Right from the layout to appearance, I'm aiming to build a portfolio website that looks and feels like Visual Studio Code. This includes adding some cool stuff like themes, extensions, an interactive terminal, and probably more. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#can-you-help-me"&gt;
  &lt;/a&gt;
  Can You Help Me?
&lt;/h2&gt;

&lt;p&gt;As you might've noticed, most of the pages are still empty because I wanted some feedback on the layout and VSCode aspects of the design. What type of design would you like to see for the other pages? What other features would you like to see in this project? I would highly appreciate if you leave a feedback, criticism or suggestion of any kind. &lt;/p&gt;

&lt;p&gt;The best part of the project is that since the other pages are yet to be built, you can fork the project and implement your own design which can help you stand out from the original project.&lt;/p&gt;

&lt;p&gt;If you're interested in contributing, the project is open-source and I would appreciate any sort of help. Otherwise, you can share it or star the repo, if you want to of course.  &lt;/p&gt;

</description>
      <category>showdev</category>
      <category>webdev</category>
      <category>react</category>
      <category>nextjs</category>
    </item>
    <item>
      <title>Challenge: Write a true quine</title>
      <author>Siddharth</author>
      <pubDate>Sat, 08 May 2021 10:16:12 +0000</pubDate>
      <link>https://dev.to/siddharthshyniben/challenge-write-a-true-quine-4pme</link>
      <guid>https://dev.to/siddharthshyniben/challenge-write-a-true-quine-4pme</guid>
      <description>&lt;p&gt;By a true quine I mean a real true quine. Maybe the wikipedia article of quine will help:&lt;/p&gt;


&lt;div class="ltag__wikipedia--container"&gt;
  &lt;div class="ltag__wikipedia--header"&gt;
    &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Sew3uq9H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/wikipedia-logo-0a3e76624c7b1c3ccdeb9493ea4add6ef5bd82d7e88d102d5ddfd7c981efa2e7.svg" class="ltag__wikipedia--logo" alt="Wikipedia Logo"&gt;
    &lt;a href="https://en.wikipedia.org/wiki/Quine_(computing)" rel="noopener noreferrer"&gt;Quine (computing)&lt;/a&gt;
  &lt;/div&gt;
  &lt;div class="ltag__wikipedia--extract"&gt;&lt;p&gt;A &lt;b&gt;quine&lt;/b&gt; is a computer program which takes no input and produces a copy of its own source code as its only output. The standard terms for these programs in the computability theory and computer science literature are "self-replicating programs", "self-reproducing programs", and "self-copying programs".&lt;/p&gt;&lt;/div&gt;
  &lt;div class="ltag__wikipedia--btn--container"&gt;
    
      &lt;a href="https://en.wikipedia.org/wiki/Quine_(computing)" rel="noopener noreferrer"&gt;View on Wikipedia&lt;/a&gt;
    
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;So no evals or reading the source like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;quine&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;quine&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; quine();&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;quine&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Can you do it? &lt;/p&gt;

&lt;p&gt;
  If you need a hint
  &lt;p&gt;The wikipedia article contains a Java Quine &lt;/p&gt;

&lt;/p&gt;

</description>
      <category>challenge</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Cool syntax #1 | Optional chaining</title>
      <author>Dalibor Belic</author>
      <pubDate>Sat, 08 May 2021 10:12:36 +0000</pubDate>
      <link>https://dev.to/daliboru/cool-syntax-1-optional-chaining-3410</link>
      <guid>https://dev.to/daliboru/cool-syntax-1-optional-chaining-3410</guid>
      <description>&lt;p&gt;Welcome to the first post of the &lt;em&gt;Cool Syntax&lt;/em&gt; series! I intend to publish a post, from time to time, on how to write clean JavaScript code like a pro!&lt;/p&gt;

&lt;p&gt;The first text is about &lt;strong&gt;optional chaining&lt;/strong&gt;. A syntactic sugar that makes reading content of an object much shorter and simpler. Let me show it to you. &lt;/p&gt;

&lt;p&gt;Take a look at this array of objects.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;art&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;paining&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;about&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;The starry night&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;author&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Vincent van Gogh&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;year&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1889&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;medium&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Oil on canvas&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="na"&gt;dimensions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;92.1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;73.7&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;sculpture&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;about&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;David&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;author&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Michelangelo&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="na"&gt;dimensions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;517&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;199&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;photography&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;about&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Pillars of Creation (Eagle Nebula)&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;author&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hubble Space Telescope&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Imagine we fetched some data, and now we have the &lt;code&gt;art&lt;/code&gt; array of objects. Then, let's say we want to log &lt;code&gt;type&lt;/code&gt; of each object in the &lt;code&gt;art&lt;/code&gt; array.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;art&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;artPiece&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;artPiece&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, let's log each &lt;code&gt;height&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;art&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;artPiece&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;artPiece&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dimensions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And... Yes, it will display the error message -&amp;gt; TypeError: Cannot read property 'height' of undefined. It's because we don't have the &lt;code&gt;dimensions&lt;/code&gt; (on each object), and we're trying to get a property from it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#solution-1-ampamp-operator"&gt;
  &lt;/a&gt;
  SOLUTION 1 - &amp;amp;&amp;amp; operator
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;art&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;artPiece&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;artPiece&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dimensions&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;artPiece&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dimensions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#solution-2-optional-chaining"&gt;
  &lt;/a&gt;
  SOLUTION 2 - optional chaining
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;art&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;artPiece&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;artPiece&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;dimensions&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Imagine you have a complex object with many objects in objects...&lt;/p&gt;

&lt;p&gt;&lt;code&gt;w &amp;amp;&amp;amp; w.x &amp;amp;&amp;amp; w.x.y &amp;amp;&amp;amp; w.x.y.z&lt;/code&gt; &lt;br&gt;
vs&lt;br&gt;
&lt;code&gt;w?.x?.y?.z&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;I guess you see why optional chaining is the better solution (in terms of syntax)! &lt;/p&gt;

&lt;p&gt;I hope you enjoyed this short syntax-related post! Check out my previous posts and stay tuned for more cool JavaScript stuff!&lt;/p&gt;

&lt;p&gt;Cheers,&lt;br&gt;
Dalibor &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>tips</category>
      <category>beginners</category>
      <category>syntax</category>
    </item>
    <item>
      <title>Do computer languages have common sense??</title>
      <author>Likhitha Guntaka</author>
      <pubDate>Sat, 08 May 2021 10:10:05 +0000</pubDate>
      <link>https://dev.to/guntakalikhitha/do-computer-languages-have-common-sense-ike</link>
      <guid>https://dev.to/guntakalikhitha/do-computer-languages-have-common-sense-ike</guid>
      <description>&lt;p&gt;Learning any computer language is one thing. Integrating all that one has learned into professional-level software is a different cup of tea. Many books teach us other concepts in languages that computer understands in their various garbs. With practice, can one quickly master any norms and start how the program’s layout should be? But believe me, putting the whole logic across to the computer is an altogether different story! With all the super-intelligence of the laptop, it still lacks commonsense, which plays a leading role in crucial matters. While our faculties allow us to judge by sight what needs to come where, the same is done on the computer by reading, verifying, counting, comparing, checking, and finally deciding what should be written.&lt;/p&gt;

&lt;p&gt;“Don your starched thinking caps and go head to work out the logic independently.”&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Ordering fuzzy search results by relevancy using trigrams</title>
      <author>Ana Nunes da Silva</author>
      <pubDate>Sat, 08 May 2021 10:07:41 +0000</pubDate>
      <link>https://dev.to/anakbns/ordering-fuzzy-search-results-by-relevancy-using-trigrams-9bk</link>
      <guid>https://dev.to/anakbns/ordering-fuzzy-search-results-by-relevancy-using-trigrams-9bk</guid>
      <description>&lt;p&gt;Say that I want to search users by name or email. If I type 'ana' I want to get all the users whose name or email contains the character combination 'ana'.  I'm saying &lt;strong&gt;contains&lt;/strong&gt; since there might be emails or names that are not an exact match to 'ana ' but can contain it - e.g. 'joana', 'diana', '&lt;a href="mailto:user@banana.com"&gt;user@banana.com&lt;/a&gt;' - I don't want to exclude those from my results. Other names or emails similar to 'ana' can be valuable to whoever is searching. &lt;/p&gt;

&lt;p&gt;This type of search is called &lt;strong&gt;fuzzy string matching&lt;/strong&gt; and can be implemented with SQL using wildcards. I'll be using PostgreSQL but similar SQLs can be written in other databases:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;email&lt;/span&gt;
&lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt;
&lt;span class="k"&gt;AND&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="k"&gt;ILIKE&lt;/span&gt; &lt;span class="s1"&gt;'%ana%'&lt;/span&gt;
&lt;span class="k"&gt;OR&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;email&lt;/span&gt; &lt;span class="k"&gt;ILIKE&lt;/span&gt; &lt;span class="s1"&gt;'%ana%'&lt;/span&gt;
&lt;span class="k"&gt;LIMIT&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This query will return all the users whose name or email contains 'ana' but I won't get them in any specific order. I could order them alphabetically by 'name' and 'email' but that does not guarantee relevance. Since I'm limiting results to the first 20 I could even be excluding relevant results by ordering alphabetically. &lt;/p&gt;

&lt;p&gt;Luckily I've learned that Postgres has this very interesting extension called &lt;code&gt;pg_trgm&lt;/code&gt;. Quoting from the &lt;a href="https://www.postgresql.org/docs/12/pgtrgm.html"&gt;postgresql&lt;/a&gt; documentation: &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;[pg_trgm] provides functions and operators for determining the similarity of alphanumeric text based on trigram matching, as well as index operator classes that support fast searching for similar strings.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In linguistics, a trigram is a group of three consecutive written units such as letters, syllables, or words. What Postgres will do is to split words into trigrams. For instance, the 'ruby' trigram would be {"  r"," ru","by ",rub,uby}. Note that some trigrams have empty spaces. That's because &lt;em&gt;each word is considered to have two spaces prefixed and one space suffixed when determining the set of trigrams contained in the string&lt;/em&gt;.  What we really need to take away from this is that postgres will split words into smaller chunks of 3 alphanumeric characters and then check the similarities with the same size chunks of other words. &lt;/p&gt;

&lt;p&gt;So when comparing two strings using trigrams, Postgres can score the similarity between them from 0 to 1 (where 1 is a perfect match). Let's play with the &lt;code&gt;pg_trgm&lt;/code&gt; extension to understand how it works.&lt;/p&gt;

&lt;p&gt;First, I'll add the extension:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="n"&gt;EXTENSION&lt;/span&gt; &lt;span class="n"&gt;pg_trgm&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, I can compare two words:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;SIMILARITY&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Ana'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Addriana'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
&lt;span class="c1"&gt;-- returns 0.3&lt;/span&gt;

&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;SIMILARITY&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Ana'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Alana'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
&lt;span class="c1"&gt;-- returns 0.42857143&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This illustrates the consequences of ordering alphabetically. If I search 'Ana', 'Addriana' will show up in the results before 'Alana' despite having a lower similarity score. It might be ok for you, depending on the requirements of your product, to order alphabetically. Using similarity adds a bit of complexity to your code but in this case, it does add value to the search feature I'm working on. &lt;/p&gt;

&lt;p&gt;So now that we know how trigrams and the similarity function work, let's add that to our initial query. To order by similarity I'll first have to &lt;code&gt;SELECT&lt;/code&gt; that score, give it an alias, and pass that variable to the &lt;code&gt;ORDER BY&lt;/code&gt; clause:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt;
&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;              
&lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="n"&gt;SIMILARITY&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'ana'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;name_score&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="n"&gt;SIMILARITY&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'ana'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;email_score&lt;/span&gt;
&lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt;
&lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="k"&gt;ILIKE&lt;/span&gt; &lt;span class="s1"&gt;'%ana%'&lt;/span&gt;
&lt;span class="k"&gt;OR&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;email&lt;/span&gt; &lt;span class="k"&gt;ILIKE&lt;/span&gt; &lt;span class="s1"&gt;'%ana%'&lt;/span&gt;
&lt;span class="k"&gt;ORDER&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="n"&gt;name_score&lt;/span&gt; &lt;span class="k"&gt;DESC&lt;/span&gt; &lt;span class="n"&gt;NULLS&lt;/span&gt; &lt;span class="k"&gt;LAST&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;email_score&lt;/span&gt; &lt;span class="k"&gt;DESC&lt;/span&gt; &lt;span class="n"&gt;NULLS&lt;/span&gt; &lt;span class="k"&gt;LAST&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;
&lt;span class="k"&gt;LIMIT&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Looking closely at the &lt;code&gt;ORDER BY&lt;/code&gt; clause, note that since I'm searching on two columns, I've considered that the most relevant is &lt;code&gt;name_score&lt;/code&gt;. Then I'll look at the &lt;code&gt;email_score&lt;/code&gt; and I'll finally order alphabetically if necessary. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#fast-searches-with-trigram-indexes"&gt;
  &lt;/a&gt;
  Fast searches with trigram indexes
&lt;/h3&gt;

&lt;p&gt;Now that we've got our query, I've analyzed its performance and it seems fairly fast (~100-130ms). Still, since I want to return search results as my users are typing, I don't want this search to be just fast - I want it &lt;strong&gt;blazing-fast&lt;/strong&gt;. I need immediate feedback. I'm going to test adding a couple of indexes to see if they can improve the response time. &lt;/p&gt;

&lt;p&gt;GIN (Generalized Inverted Index) and GiST (Generalized Search Tree) indexes are very useful in text search features since they can map multiple values (e.g.: list of trigrams) to a single row. On the other hand, Postgres default B-Tree indexes are optimized for when a row has a single key-value. &lt;/p&gt;

&lt;p&gt;When choosing between GIN vs GiST, I've decided to go with the GIN index. Although it might be a bit slower to write it is faster to read than the GiST index. To make sure that it will not raise any performance issues, I've tested creating my indexes locally on data amounts similar to the production data. Creating an index locks out the table for writes and in problematic cases, it can cause downtime. To avoid this, I'll tell Postgres to create these indexes concurrently. These can take longer to build but they will not require a lock that blocks writes. &lt;/p&gt;

&lt;p&gt;So with the help of &lt;code&gt;pg_trgm&lt;/code&gt;, which supports indexing based on trigrams, I'll add a GIN index to each of the columns that I'm searching - &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;email&lt;/code&gt; - and pass the operator class &lt;code&gt;gin_trgm_ops&lt;/code&gt; to instruct Postgres to build these indexes with trigrams.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;INDEX&lt;/span&gt; &lt;span class="n"&gt;CONCURRENTLY&lt;/span&gt; &lt;span class="n"&gt;index_users_on_name_trigram&lt;/span&gt;
&lt;span class="k"&gt;ON&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt; 
&lt;span class="k"&gt;USING&lt;/span&gt; &lt;span class="n"&gt;gin&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="n"&gt;gin_trgm_ops&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;INDEX&lt;/span&gt; &lt;span class="n"&gt;CONCURRENTLY&lt;/span&gt; &lt;span class="n"&gt;index_users_on_email_trigram&lt;/span&gt;
&lt;span class="k"&gt;ON&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt; 
&lt;span class="k"&gt;USING&lt;/span&gt; &lt;span class="n"&gt;gin&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;email&lt;/span&gt; &lt;span class="n"&gt;gin_trgm_ops&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With these two indexes, I've managed to reduce the query runtime to ~60-80ms 🚀.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#other-performance-remarks-raw-ilike-endraw-vs-raw-like-endraw-"&gt;
  &lt;/a&gt;
  Other performance remarks: &lt;code&gt;ILIKE&lt;/code&gt; vs &lt;code&gt;LIKE&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;There are two reasons why I've decided to use the Postgresql &lt;code&gt;ILIKE&lt;/code&gt; function instead of the &lt;code&gt;LIKE&lt;/code&gt;. One has to do with the functionality per se and the other with performance.&lt;/p&gt;

&lt;p&gt;In terms of functionality, the main difference between the two is that &lt;code&gt;ILIKE&lt;/code&gt; is case-insensitive. So if I want to know if 'Ana' and 'ana' are the same, &lt;code&gt;ILIKE&lt;/code&gt; will tell you that statement is true, and &lt;code&gt;LIKE&lt;/code&gt; will tell you otherwise:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="s1"&gt;'Ana'&lt;/span&gt; &lt;span class="k"&gt;ILIKE&lt;/span&gt; &lt;span class="s1"&gt;'ana'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="c1"&gt;-- returns true&lt;/span&gt;

&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="s1"&gt;'Ana'&lt;/span&gt; &lt;span class="k"&gt;LIKE&lt;/span&gt; &lt;span class="s1"&gt;'ana'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="c1"&gt;-- returns false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can make &lt;code&gt;LIKE&lt;/code&gt; case-insensitive as well with the help of the &lt;code&gt;LOWER&lt;/code&gt; function:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="s1"&gt;'Ana'&lt;/span&gt; &lt;span class="k"&gt;ILIKE&lt;/span&gt; &lt;span class="s1"&gt;'ana'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="c1"&gt;--returns true&lt;/span&gt;

&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="k"&gt;LOWER&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Ana'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;LIKE&lt;/span&gt; &lt;span class="k"&gt;LOWER&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'ana'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
&lt;span class="c1"&gt;-- returns true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But this is a more verbose and prone to errors version that does not add any value to this feature. Besides, I've noted a slight improvement in performance using &lt;code&gt;ILIKE&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;If you're interested in understanding the performance differences between these two approaches, I recommend &lt;a href="https://stackoverflow.com/questions/20336665/lower-like-vs-ilike"&gt;this stackoverflow thread&lt;/a&gt;. Here are my 2 cents after reading about it and doing some benchmarks: The latter option (&lt;code&gt;LIKE&lt;/code&gt; with &lt;code&gt;LOWER&lt;/code&gt;) can be significantly faster than the first (&lt;code&gt;ILIKE&lt;/code&gt;) &lt;strong&gt;if you're not using indexes&lt;/strong&gt;. When you use good indexes, those differences are reduced or even inverted. In my case, creating different GIN indexes for &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;email&lt;/code&gt; ended up showing that the &lt;code&gt;ILIKE&lt;/code&gt; option is the most performant (though with indexes this difference is not that relevant).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;Using the PostgresSQL &lt;code&gt;pg_trgm&lt;/code&gt; extension not only improved the relevancy of the search results but also brought this feature with great performance improvements (vs. a previously sluggish user experience). To come up with the final query and index solutions, I've used &lt;a href="https://www.pgadmin.org/"&gt;&lt;code&gt;pgAdmin&lt;/code&gt;&lt;/a&gt; to test different hypotheses. Postgres &lt;code&gt;EXPLAIN ANALYZE&lt;/code&gt; is an awesome command that I've also used heavily throughout this development. Remember that each problem is different so I'd advise anyone to use the tools that Postgres provides to analyze and measure different potential solutions. &lt;/p&gt;

</description>
      <category>sql</category>
      <category>postgres</category>
      <category>performance</category>
    </item>
    <item>
      <title>Vue.js Project to help learn English with Youglish API and OwlBot Dictionary API.</title>
      <author>Cihat Salik</author>
      <pubDate>Sat, 08 May 2021 10:02:16 +0000</pubDate>
      <link>https://dev.to/cihat/english-teaching-project-with-vue-js-35b5</link>
      <guid>https://dev.to/cihat/english-teaching-project-with-vue-js-35b5</guid>
      <description>&lt;h2&gt;
  &lt;a href="#helpful-content-when-memorizing-english-words"&gt;
  &lt;/a&gt;
  Helpful content when memorizing English words
&lt;/h2&gt;

&lt;p&gt;I tried to make a project that will help you learn English with Vue.js. It gives you to understand the most common 1000 words in English randomly according to the range you entered and with the examples used on Youtube with Youglish API. I hope it will be useful content when studying English, memorizing words.&lt;/p&gt;

&lt;p&gt;My purpose of doing this project was when I realized that I had a hard time memorizing English words. I did this project to get a little more familiar with the words. I think hard work can be overcome with simple solutions. My english is not perfect at the moment, but I am working on it. I hope it becomes a little easier for me to learn English with this project. I did this project in English-Turkish. But you can do this project in your native language by forking.&lt;/p&gt;

&lt;p&gt;I will share the source code url of the project. You can see how he does it from there. I used two APIs in the project. One of them is OWLBOT DICTIONARY API and the other is Youglish API. These APIs helped me a lot in the project.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-project-is-as-follows"&gt;
  &lt;/a&gt;
  The project is as follows;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;There is the most common 1000-word json in English, and the key values in this json correspond to English-Turkish words. &lt;br&gt;
You can change the most commonly used 1000 words in your language to JSON by forking the repo.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pwHD0uRc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ay6hg4wn51rgbpvnzn7y.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pwHD0uRc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ay6hg4wn51rgbpvnzn7y.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In the project, there are two input ranges from 0 to 1000, the user selects the desired value in these ranges and comes across the user randomly in the desired range.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kxad16XT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/szbng1fvodhacm4wt163.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kxad16XT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/szbng1fvodhacm4wt163.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It sends the APIs we use with this word, bringing the meaning of the word, an example sentence, the place where it is used in these APIs.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oNor5-w5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/quqc76wn0hay5b4wivxm.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oNor5-w5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/quqc76wn0hay5b4wivxm.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gpwe11So--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/88rtf4gozp8vf3qvtbth.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gpwe11So--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/88rtf4gozp8vf3qvtbth.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://cihat.github.io/dictionary/"&gt;Project Live&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;&lt;a href="https://github.com/cihat/dictionary"&gt;Source Code&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Project Gif
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R-nsvDwE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/57585087/117534885-f3fc9180-affb-11eb-91b5-72734fc07fc4.gif" alt="dictionary"&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>vue</category>
      <category>javascript</category>
    </item>
    <item>
      <title>10 Things you need to know in React.</title>
      <author>Sohrab Hossain</author>
      <pubDate>Sat, 08 May 2021 09:33:33 +0000</pubDate>
      <link>https://dev.to/sohrab09/10-things-you-need-to-know-in-react-1cg7</link>
      <guid>https://dev.to/sohrab09/10-things-you-need-to-know-in-react-1cg7</guid>
      <description>&lt;p&gt;What is react?&lt;/p&gt;

&lt;p&gt;React is an open source, front end, declarative, efficient, and flexible JavaScript library for building user interfaces. It lets you compose complex UIs from small and isolated pieces of code called “components”.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Here are just few of the reasons why people choose to program with React.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;React if fast. Apps made in React can handle complex updates and still feet quick and responsive.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;React is modular. Instead of writing large, dense files of code, you can write many smaller, reusable files. Reacts modularity can be a beautiful solution to JavaScript’s maintainability problems.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;React is scalable. Large programs that display a lot of changing data are where React performs best.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;React is flexible. You can use React for interesting projects that have nothing to do with making a web app. People are still figuring out Reacts potential.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;React is popular. While this reason has admittedly little to do with Reacts quality, the truth is that understanding React will make you more employable.&lt;br&gt;
What React Components?&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Components are independent and reusable bits of code. They serve the same purpose as JavaScript functions, but work in isolation and return HTML via a render () function.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Components come in two types
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Class Components&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Function Components&lt;/p&gt;

&lt;p&gt;Class Components: A class component is a more featured way to define a React component. It also acts like a function that receives props, but that function also considers a private internal state as additional input that controls the returned JSX.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;When creating a React component, the component’s name must start with an upper-case letter.&lt;/p&gt;

&lt;p&gt;The component has to include the extends React. Component statement, this statement creates an inheritance to React. Component, and gives your component access to React. Component’s functions.&lt;/p&gt;

&lt;p&gt;The component also requires a render () method, this method returns HTML.&lt;/p&gt;

&lt;p&gt;Example: Create a Class components called Car&lt;/p&gt;

&lt;p&gt;class Car extends React. Components {&lt;/p&gt;

&lt;p&gt;render () {&lt;/p&gt;

&lt;p&gt;return &lt;/p&gt;
&lt;h1&gt; Hi, I’m a Rolls Royce Car! &lt;/h1&gt;;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;Now React application has a component called Car, which returns a &lt;/p&gt;
&lt;h1&gt; element.

&lt;/h1&gt;
&lt;p&gt;To use this component in your application, use similar syntax as normal HTML: &lt;/p&gt;

&lt;p&gt;Example: Display the Car component in the “root” element:&lt;/p&gt;

&lt;p&gt;ReactDOM.render(, document.getElementById(‘root’));&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Function Components: A functional component is just a plain JavaScript function which accepts props as an argument and returns a React element. … Component and create a render function which returns a React element. This requires more code but will also give you some benefits which you will see later on.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Here is the same example as above, but created using a Function component instead.&lt;/p&gt;

&lt;p&gt;A Function component also returns HTML, and behaves pretty much the same way as a Class component, but Class components have some additions, and will be preferred in this tutorial.&lt;/p&gt;

&lt;p&gt;Example: Create a Function component called Car&lt;/p&gt;

&lt;p&gt;function Car () {return &lt;/p&gt;
&lt;h1&gt;Hi, I am also Rolls Royce Car! &lt;/h1&gt;;}

&lt;p&gt;Once again, your React application has a Car component.&lt;/p&gt;

&lt;p&gt;Refer to the Car component as normal HTML (except in React, components must start with an upper-case letter):&lt;/p&gt;

&lt;p&gt;Example: Display the Car component in the "root" element:&lt;/p&gt;

&lt;p&gt;ReactDOM.render(, document.getElementById('root'));&lt;/p&gt;

&lt;p&gt;What are Props?&lt;/p&gt;

&lt;p&gt;React is a component-based library which divides the UI into little reusable pieces. In some cases, those components need to communicate (send data to each other) and the way to pass data between components is by using props.&lt;/p&gt;

&lt;p&gt;“Props” is a special keyword in React, which stands for properties and is being used for passing data from one component to another. But the important part here is that data with props are being passed in a uni-directional flow. (one way from parent to child)&lt;/p&gt;

&lt;p&gt;Here are two important things about Props:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Props are read-only.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Props cannot be modified.&lt;/p&gt;

&lt;p&gt;Using Props in React: I will be explaining how to use Props step by step&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Firstly, define an attribute and its value(data).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Then pass it to child components by using props.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Finally, render the Props Data.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Example, we have a ParentComponent including another component (child):&lt;/p&gt;

&lt;p&gt;class ParentComponent extends Component {&lt;/p&gt;

&lt;p&gt;render () {&lt;/p&gt;

&lt;h1&gt;

I’m the parent components.



&lt;/h1&gt;

&lt;p&gt;);&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;And this is our ChildComponents:&lt;/p&gt;

&lt;p&gt;const ChildComponents = () =&amp;gt; {&lt;/p&gt;

&lt;p&gt;return &lt;/p&gt;
&lt;p&gt; I’m the 1st child! &lt;/p&gt;


&lt;p&gt;};&lt;br&gt;
What is state?&lt;/p&gt;

&lt;p&gt;Answer: React components has a built-in state object. The state object is where you store property values that belongs to the component. When the state object changes, the component re-renders.&lt;/p&gt;

&lt;p&gt;Here are two important things about State:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;State changes can be asynchronous.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;State can be modified using this.setState&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;ü Using State in React: I will be explaining how to use State step by step.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;We import useState Hook from React. It lets us keep local state in a function component.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Inside the example components, we declare a new state variable by calling the useState Hook. It returns a pair of values, to which we give names.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;When the user clicks, we call setCount with a new value.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The State object can contain as many properties as you like:&lt;/p&gt;

&lt;p&gt;Example: Specify all the properties your component need:&lt;/p&gt;

&lt;p&gt;class Car extends React.Component {constructor(props) {super(props);this.state = {brand: "Ford",model: "Mustang",color: "red",year: 1964};}render() {return (&lt;/p&gt;
&lt;h1&gt;My Car&lt;/h1&gt;);}}

&lt;p&gt;What is JSX?&lt;/p&gt;

&lt;p&gt;JSX stands for JavaScript XML. JSX makes it easier to write and add HTML in React.&lt;/p&gt;

&lt;p&gt;JSX allows us to write HTML in React.&lt;/p&gt;

&lt;p&gt;JSX is an inline markup that looks like HTML and gets transformed to JavaScript. A JSX expression starts with an HTML-like open tag, and ends with the corresponding closing tag. JSX tags support the XML self-close syntax so you can optionally leave the closing tag off.&lt;/p&gt;

&lt;p&gt;Coding JSX&lt;/p&gt;

&lt;p&gt;JSX allows us to write HTML elements in JavaScript and place them in the DOM without any createElement() and/or appendChild() methods.&lt;/p&gt;

&lt;p&gt;JSX converts HTML tags into react elements.&lt;/p&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;p&gt;With JSX:&lt;/p&gt;

&lt;p&gt;const myelement = &lt;/p&gt;
&lt;h1&gt;I Love JSX!&lt;/h1&gt;;

&lt;p&gt;ReactDOM.render(myelement, document.getElementById(‘root’));&lt;/p&gt;

&lt;p&gt;Without JSX:&lt;/p&gt;

&lt;p&gt;const myelement = React.createElement(‘h1’, {}, ‘I do not use JSX!’);&lt;/p&gt;

&lt;p&gt;ReactDOM.render(myelement, document.getElementById(‘root’));&lt;br&gt;
What is virtual DOM?&lt;/p&gt;

&lt;p&gt;Virtual DOM is a virtual representation of the real DOM.&lt;/p&gt;

&lt;p&gt;The virtual DOM then sends a batch update to the real DOM to update the UI. React uses virtual DOM to enhance its performance.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;How does virtual DOM works?
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;the Virtual DOM is a node tree that lists elements and their attributes and content as objects and properties. React’s render() method creates a node tree from React components and updates this tree in response to mutations in the data model, caused by actions.&lt;/p&gt;

&lt;p&gt;htmlhead lang="en"bodyul class="list"li class="list__item""List item"&lt;/p&gt;

&lt;p&gt;What is Optimizing performance in React?&lt;/p&gt;

&lt;p&gt;Performance Optimization of a programs and software is the process modifying a software system to make it work more efficiently and execute more rapidly.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;21 Performance Optimization Techniques for React Apps
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Using Immutable Data Structures&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Function/Stateless Components and React.PureComponent&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Multiple Chunk Files&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Using Production Mode Flag in Webpack&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Dependency optimization&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Use React.Fragments to Avoid Additional HTML Element Wrappers&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Avoid Inline Function Definition in the Render Function.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Throttling and Debouncing Event Action in JavaScript&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Avoid using Index as Key for map&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Avoiding Props in Initial States&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Spreading props on DOM elements&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Use Reselect in Redux to Avoid Frequent Re-render&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Avoid Async Initialization in componentWillMount()&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Memoize React Components&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;CSS Animations Instead of JS Animations&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Using Web Workers for CPU Extensive Tasks&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Using a CDN&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Virtualize Long Lists&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Analyzing and Optimizing Your Webpack Bundle Bloat&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Consider Server-side Rendering&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Enable Gzip Compression on Web Server&lt;br&gt;
What is React Hook?&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;It allows you to use state and other React features without writing a class. Hooks are the functions which “hook into” React state and lifecycle features from function components. It does not work inside classes.&lt;/p&gt;

&lt;p&gt;When to use Hook: If you write a function component, and then you want to add some state to it, previously you do this by converting it to a class. But now you can do it by using a Hook inside the existing function component.&lt;/p&gt;

&lt;p&gt;Rules of Hook: Hooks are similar to JavaScript functions, but you need to follow these two rules when using them. Hook’s rule ensures that all the stateful logic in a component is visible in its source code. These rules are:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Only call Hooks at the top level&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Do not call Hooks inside loops, conditions, or nested functions. Hooks should always be used at the top level of the React functions. This rule ensures that Hooks are called in the same order each time a component render.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Only call Hooks from React functions&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You cannot call Hooks from regular JavaScript functions. Instead, you can call Hooks from React function components. Hooks can also be called from custom Hooks.&lt;/p&gt;

&lt;p&gt;Pre requisites for React Hook&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Node version 6 or above&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;NPM version 5.2 or above&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create-react-app tool for running the React App&lt;br&gt;
What is Conditional Rendaring?&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Conditional rendering is a term to describe the ability to render different user interface (UI) markup if a condition is true or false.&lt;br&gt;
In React, it allows us to render different elements or components based on a condition.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;7 Ways to Implement Conditional Rendering in React Applications
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;Using an if…else Statement&lt;/li&gt;
&lt;li&gt;Using a switch Statement&lt;/li&gt;
&lt;li&gt;Using Element Variables&lt;/li&gt;
&lt;li&gt;Using Ternary Operators&lt;/li&gt;
&lt;li&gt;Using Logical &amp;amp;&amp;amp; (Short Circuit Evaluation)&lt;/li&gt;
&lt;li&gt;Using Immediately Invoked Function Expressions (IIFEs)&lt;/li&gt;
&lt;li&gt;Using Enhanced JSX Libraries
Composition is the key&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Parent components that own the state are often referred to as container components. They are responsible for state management and rendering children (this sounds so odd). Child components are used to trigger event handlers passed down from parents (like the InputBox component in previous examples) and to display the data.&lt;/p&gt;

&lt;p&gt;Child components that are responsible for displaying the data are called presentational components.&lt;/p&gt;

&lt;p&gt;Container component is often responsible for fetching data, API calls (see componentDidMount() lifecycle method) and so on. You should keep this in one place to avoid side-effects in presentational components. Those should be as dumb as possible about everything other than displaying the data.&lt;/p&gt;

&lt;p&gt;This separation of concerns and terminology were popularized by Dan Abramov, the author of Redux. You can read more about it in his article.&lt;/p&gt;

&lt;p&gt;You can see that it all fits together. When every component follows single responsibility principle it can be composed with others and reused.&lt;/p&gt;

&lt;p&gt;The biggest challenge is to figure out how to divide those responsibilities and where to put the state. If you want to know more about the topic search for “thinking in react” articles.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
    </item>
    <item>
      <title>Why is math needed, when we have HTML+CSS?</title>
      <author>Yuri Filatov</author>
      <pubDate>Sat, 08 May 2021 08:53:16 +0000</pubDate>
      <link>https://dev.to/filatovv/why-is-math-needed-when-we-have-html-css-3c84</link>
      <guid>https://dev.to/filatovv/why-is-math-needed-when-we-have-html-css-3c84</guid>
      <description>&lt;p&gt;Hey! I've decided to make some tutorials about CSS+HTML, something like "website school", so first of all we have to answer all these questions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#is-really-web-development-the-future"&gt;
  &lt;/a&gt;
  Is really web development the future?
&lt;/h3&gt;

&lt;p&gt;There is no exact answer to this question. Remember, today one programming language is popular, the next day not anymore. &lt;br&gt;
According to &lt;a href="https://www.codingdojo.com/blog/top-7-programming-languages"&gt;Codingdojo&lt;/a&gt;, today the web development direction becomes more and more popular.&lt;/p&gt;

&lt;p&gt;It can't be named as future, as&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;There are other directions that still have value. If all people start coding js, who will be making for example custom software?&lt;/li&gt;
&lt;li&gt;That is not the right question. It can be the most popular direction, but other directions that are not really popular such as ruby have their value. That means that this direction doesn't need a lof of people, but some with strict requirements (expirience, quality of projects and etc.)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#then-what-language-to-start"&gt;
  &lt;/a&gt;
  Then, what language to start?
&lt;/h3&gt;

&lt;p&gt;It is a question for you. You shouldn't start coding on js just because it is popular. One day it becomes not and you have to choose another one. Choose something you like and you are really good in. Why? Because it is your key to have always job - your individuality and your quality.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-do-programmers-need-math"&gt;
  &lt;/a&gt;
  Why do programmers need math?
&lt;/h3&gt;

&lt;p&gt;More and more programmers (if I can name them so) think that programming is &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Coding&lt;/li&gt;
&lt;li&gt;Language to learn&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But it is&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;logic&lt;/li&gt;
&lt;li&gt;creativity&lt;/li&gt;
&lt;li&gt;MATH&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#why-math"&gt;
  &lt;/a&gt;
  Why math?
&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;Do you really know fast algorythms to solve some problem without math?&lt;/em&gt;&lt;br&gt;
No. You can find the solution, but do you really understand to make your code faster in future?&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Have your algorythms same value as a fast one?&lt;/em&gt;&lt;br&gt;
No. Because logic brings shorter algorythms to solve any problem.&lt;/p&gt;

&lt;p&gt;Logic brings faster solution and better quality:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You can deal with problems faster as you find the solution faster.&lt;/li&gt;
&lt;li&gt;Your code is shorter &lt;/li&gt;
&lt;li&gt;Your code is structured. All variables and methods have max value. So your program works faster&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Math brings you logic:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You know fast algorythms and you know their foundation&lt;/li&gt;
&lt;li&gt;You know programming definitions as it is in math&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Some examples:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Recursive functions - fast function processing&lt;/li&gt;
&lt;li&gt;Binary Trees - Fast Walk Through Data&lt;/li&gt;
&lt;li&gt;Sorting algorithms - a way to save space and time&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Even if you study HTML+CSS, where there are no algorythms, remember, that logic is needed everywhere and math still have value even here: you save your time.&lt;/p&gt;

&lt;p&gt;Btw, I want to start real tutorials with tasks about HTML+CSS, moving to JS and databases.&lt;/p&gt;

&lt;p&gt;Follow me, if it is ineresting for you!&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>html</category>
      <category>css</category>
      <category>productivity</category>
    </item>
    <item>
      <title>hopOn -  Car Sharing and Rental App</title>
      <author>Shivani Singh</author>
      <pubDate>Sat, 08 May 2021 08:14:01 +0000</pubDate>
      <link>https://dev.to/singhshivani/hopon-car-sharing-and-rental-app-fjb</link>
      <guid>https://dev.to/singhshivani/hopon-car-sharing-and-rental-app-fjb</guid>
      <description>&lt;p&gt; 
 A car sharing &amp;amp; rental app using &lt;a href="https://flutter.dev/"&gt;Flutter, &lt;/a&gt;&lt;a href="https://firebase.google.com/"&gt;Firebase &lt;/a&gt; &amp;amp; &lt;a href="https://cloud.google.com/"&gt;Google Maps APIs&lt;/a&gt; 🔥
&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#about-the-app"&gt;
  &lt;/a&gt;
  About the App 🚘
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;hopOn is flutter based application for car sharing and rental services.&lt;/li&gt;
&lt;li&gt;The two main functions that app includes are -

&lt;ol&gt;
&lt;li&gt;Rent a nearby car &lt;/li&gt;
&lt;li&gt;Give your car on rent&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;The app uses 3 Google Maps API

&lt;ol&gt;
&lt;li&gt;Geocoding API (provides geocoding and reverse geocoding of addresses)&lt;/li&gt;
&lt;li&gt;Places API (returns information about places using HTTP requests)&lt;/li&gt;
&lt;li&gt;Directions API (returns JSON or XML-formatted directions between locations)&lt;/li&gt;
&lt;li&gt;This app has been completed with the detail study which includes Wireframe, methods, API study etc. All the information has been provided in the Github repository.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#wireframe"&gt;
  &lt;/a&gt;
  Wireframe✒️
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.figma.com/file/3ALznWfTL7k7nPWyPuMfKT/Vehicle-Sharing-App?node-id=520%3A2"&gt;https://www.figma.com/file/3ALznWfTL7k7nPWyPuMfKT/Vehicle-Sharing-App?node-id=520%3A2&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thank-you"&gt;
  &lt;/a&gt;
  Thank you!
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Feel free to ask your doubts and contribute to this project.&lt;/li&gt;
&lt;li&gt;Find the app video with the detail explaination about methods and resources(Firebase, GCP etc.) on Github - &lt;a href="https://github.com/Singh-Shivani/hopOn/"&gt;https://github.com/Singh-Shivani/hopOn/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Do ⭐ the repo.&lt;/li&gt;
&lt;li&gt;Keep hustling &amp;amp; Stay safe❤️&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>flutter</category>
      <category>googlecloud</category>
      <category>firebase</category>
      <category>mobile</category>
    </item>
    <item>
      <title>Top 5 Reasons to Launch P2P Crypto Exchange – You Need to know!</title>
      <author>KatrinKunze</author>
      <pubDate>Sat, 08 May 2021 08:00:39 +0000</pubDate>
      <link>https://dev.to/katrinkunze8/top-5-reasons-to-launch-p2p-crypto-exchange-you-need-to-know-2g3d</link>
      <guid>https://dev.to/katrinkunze8/top-5-reasons-to-launch-p2p-crypto-exchange-you-need-to-know-2g3d</guid>
      <description>&lt;p&gt;Cryptocurrencies have been touching new highs every day as many people are interested in adopting cryptocurrencies for facilitating seamless transactions. It makes the crypto exchanges popular and establishes them as a profitable business. Many crypto traders are utilizing P2P exchanges to make hassle-free transactions by devoiding third parties. The growing demand for  P2P crypto exchange development implies the potency of P2P exchange. In this blog, you will get to know the outline description of P2P crypto exchanges and why their demands are increasing in the crypto space.&lt;/p&gt;

&lt;p&gt;What is P2P Crypto Exchange?&lt;/p&gt;

&lt;p&gt;In the early days of crypto trading before the arrival of crypto exchange platforms, a person interested in selling/receiving cryptocurrencies is required to meet with other people in person to barter their digital assets in exchange for other assets. Then popped up the centralized exchange platforms which incur high transaction charges. Hence, the crypto community evolved with P2P crypto exchanges to promote direct trading and reduced transaction costs. &lt;/p&gt;

&lt;p&gt;P2P crypto exchanges allow buyers and sellers to communicate directly and complete the trading. Escrow system is used to monitor the crypto exchanges and helps to ensure the secured crypto transfers.&lt;/p&gt;

&lt;p&gt;How does P2P Exchange work?&lt;br&gt;
If you want to conduct crypto trading in a P2P exchange, follow the below steps&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        Register details in P2P crypto exchange and create an
              account.

          Based on the requirements, view the orders available in the crypto exchange.
         Select the amount you want to trade and place an order.
         Finally, buy or sell the cryptos with the person directly without any intermediaries.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Top 5 Advantages of P2P Crypto Exchange&lt;br&gt;
Secured business&lt;/p&gt;

&lt;p&gt;P2P Crypto Exchanges have followed high-security mechanisms like 2-factor authentication, Email verification, biometric authentication, SSL to ensure security in crypto transfers. It makes the system reliable, secured and makes it harder for hacking. Hence the P2P exchange launching is a secured business.&lt;/p&gt;

&lt;p&gt;High Profits&lt;/p&gt;

&lt;p&gt;Exchange platforms are earning their major revenues from transaction fees that have been collected from traders. Professional crypto-traders perform crypto trading extensively that will directly raise the transaction revenues and earn the high profits.&lt;/p&gt;

&lt;p&gt;No third parties&lt;/p&gt;

&lt;p&gt;In a P2P Exchange, the seller and buyer interacts directly, while the escrow system monitors the transactions and removes the intermediaries, which could automatically reduce operational costs and boost up your business.&lt;/p&gt;

&lt;p&gt;Quick crypto transfers&lt;/p&gt;

&lt;p&gt;The transaction takes place in a peer-to-peer way with no middlemen intervention, saving time and facilitating the quick transaction. Handling the P2P crypto exchanges is easy, can be processed quickly and hassle-free.&lt;/p&gt;

&lt;p&gt;Future-proofed business&lt;/p&gt;

&lt;p&gt;Cryptocurrencies will reach a high peak in the future. So, advanced P2P crypto exchanges will continue to grow in demand. Launching P2P crypto exchanges will help to occupy a leading position in the crypto space.&lt;/p&gt;

&lt;p&gt;Conclusion&lt;br&gt;
This is all about the explanation of the P2P crypto exchange. Now you have understood the benefits of the P2P crypto exchange business. If you want to know more about P2P exchange, approach Blockchain Firm and leverage the lucrative deals!&lt;/p&gt;

&lt;p&gt;For More: &lt;a href="https://www.blockchainfirm.io/p2p-exchange-development"&gt;https://www.blockchainfirm.io/p2p-exchange-development&lt;/a&gt;&lt;/p&gt;

</description>
      <category>p2pcrypto</category>
      <category>cryptoexchange</category>
    </item>
    <item>
      <title>Do you use subdomains?</title>
      <author>Madza</author>
      <pubDate>Sat, 08 May 2021 07:41:52 +0000</pubDate>
      <link>https://dev.to/madza/do-you-use-subdomains-2go1</link>
      <guid>https://dev.to/madza/do-you-use-subdomains-2go1</guid>
      <description>&lt;p&gt;Subdomains are the part of a domain that comes before the main domain name and domain extension. They are created to organize and navigate to different sections of the website.&lt;/p&gt;

&lt;p&gt;Do you use subdomains for your personal domain like &lt;code&gt;awesomeproject.mydomain.com&lt;/code&gt;? &lt;/p&gt;

&lt;p&gt;If so, could you elaborate on your reasons why do you prefer them over subdirectories like &lt;code&gt;mydomain.com/awesomeproject&lt;/code&gt; or buying a dedicated domain like &lt;code&gt;awesomeproject.com&lt;/code&gt;?&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>webdev</category>
      <category>domain</category>
    </item>
  </channel>
</rss>
