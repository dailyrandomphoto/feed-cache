<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Babel‚Äôs Money Challenges, What It's Like to Work on Rails, &amp; more on DevNews!</title>
      <author>Josh Puetz</author>
      <pubDate>Thu, 20 May 2021 18:44:47 +0000</pubDate>
      <link>https://dev.to/devteam/babel-s-money-challenges-what-it-s-like-to-work-on-rails-more-on-devnews-124o</link>
      <guid>https://dev.to/devteam/babel-s-money-challenges-what-it-s-like-to-work-on-rails-more-on-devnews-124o</guid>
      <description>&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/saronyitbarek"&gt;@saronyitbarek&lt;/a&gt;
 and I are back for another week of developer news commentary üó£ &lt;/p&gt;


&lt;div class="podcastliquidtag"&gt;
  &lt;div class="podcastliquidtag__info"&gt;
    &lt;a href="/devnews/s4-e6-babel-s-money-challenges-what-it-s-like-to-work-on-rails-and-coinbase-s-end-to-salary-negotiations"&gt;
      &lt;h1 class="podcastliquidtag__info__episodetitle"&gt;S4:E6 - Babel‚Äôs Money Challenges, What It's Like to Work on Rails, and Coinbase‚Äôs End to Salary Negotiations&lt;/h1&gt;
    &lt;/a&gt;
    &lt;a href="/devnews"&gt;
      &lt;h2 class="podcastliquidtag__info__podcasttitle"&gt;
        DevNews ¬†

      &lt;/h2&gt;
    &lt;/a&gt;
  &lt;/div&gt;
  &lt;div id="record-s4-e6-babel-s-money-challenges-what-it-s-like-to-work-on-rails-and-coinbase-s-end-to-salary-negotiations" class="podcastliquidtag__record"&gt;
    &lt;img class="button play-butt" id="play-butt-s4-e6-babel-s-money-challenges-what-it-s-like-to-work-on-rails-and-coinbase-s-end-to-salary-negotiations" src="https://res.cloudinary.com/practicaldev/image/fetch/s--1SirfZpJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/playbutt-5e444a2eae28832efea0dec3342ccf28a228b326c47f46700d771801f75d6b88.png" alt="play"&gt;
    &lt;img class="button pause-butt" id="pause-butt-s4-e6-babel-s-money-challenges-what-it-s-like-to-work-on-rails-and-coinbase-s-end-to-salary-negotiations" src="https://res.cloudinary.com/practicaldev/image/fetch/s--8YU2a2mP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/pausebutt-bba7cb5f432cfb16510e78835378fa22f45fa6ae52a624f7c9794fefa765c384.png" alt="pause"&gt;
    &lt;img class="podcastliquidtag__podcastimage" id="podcastimage-s4-e6-babel-s-money-challenges-what-it-s-like-to-work-on-rails-and-coinbase-s-end-to-salary-negotiations" alt="DevNews" src="https://res.cloudinary.com/practicaldev/image/fetch/s--jJPvwj98--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--XOSCOlKI--/c_fill%2Cf_auto%2Cfl_progressive%2Cq_auto/https://dev-to-uploads.s3.amazonaws.com/uploads/podcast/image/346/5b0bd095-4a8c-4449-a43d-9e9b154b9d09.png"&gt;
  &lt;/div&gt;

  &lt;div class="hidden-audio" id="hidden-audio-s4-e6-babel-s-money-challenges-what-it-s-like-to-work-on-rails-and-coinbase-s-end-to-salary-negotiations"&gt;
  
    
    Your browser does not support the audio element.
  
  &lt;div id="progressBar" class="audio-player-display"&gt;
    &lt;a href="/devnews/s4-e6-babel-s-money-challenges-what-it-s-like-to-work-on-rails-and-coinbase-s-end-to-salary-negotiations"&gt;
      &lt;img id="episode-profile-image" alt="S4:E6 - Babel‚Äôs Money Challenges, What It's Like to Work on Rails, and Coinbase‚Äôs End to Salary Negotiations" width="420" height="420" src="https://res.cloudinary.com/practicaldev/image/fetch/s--84VpOv6S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--3GWkSFQs--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_420%2Cq_auto%2Cw_420/https://dev-to-uploads.s3.amazonaws.com/uploads/podcast/image/346/5b0bd095-4a8c-4449-a43d-9e9b154b9d09.png"&gt;
      &lt;img id="animated-bars" src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZzrPEFmt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev.to/assets/animated-bars-4e8c57c8b58285fcf7d123680ad8af034cd5cd43b4d9209fe3aab49d1e9d77b3.gif" alt="animated volume bars"&gt;
    &lt;/a&gt;
    &lt;span id="barPlayPause"&gt;
      &lt;img class="butt play-butt" alt="play" src="https://res.cloudinary.com/practicaldev/image/fetch/s--1SirfZpJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/playbutt-5e444a2eae28832efea0dec3342ccf28a228b326c47f46700d771801f75d6b88.png"&gt;
      &lt;img class="butt pause-butt" alt="pause" src="https://res.cloudinary.com/practicaldev/image/fetch/s--8YU2a2mP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/pausebutt-bba7cb5f432cfb16510e78835378fa22f45fa6ae52a624f7c9794fefa765c384.png"&gt;
    &lt;/span&gt;
    &lt;span id="volume"&gt;
      &lt;span id="volumeindicator" class="volume-icon-wrapper showing"&gt;
        &lt;span id="volbutt"&gt;
          &lt;img alt="volume" class="icon-img" height="16" width="16" src="https://res.cloudinary.com/practicaldev/image/fetch/s--vTou7JP3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/volume-cd20707230ae3fc117b02de53c72af742cf7d666007e16e12f7ac11ebd8130a7.png"&gt;
        &lt;/span&gt;
        &lt;span class="range-wrapper"&gt;
          
        &lt;/span&gt;
      &lt;/span&gt;
      &lt;span id="mutebutt" class="volume-icon-wrapper hidden"&gt;
        &lt;img alt="volume-mute" class="icon-img" height="16" width="16" src="https://res.cloudinary.com/practicaldev/image/fetch/s--OX5NjT0t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/volume-mute-8f08ec668105565af8f8394eb18ab63acb386adbe0703afe3748eca8f2ecbf3b.png"&gt;
      &lt;/span&gt;
      &lt;span class="speed" id="speed"&gt;1x&lt;/span&gt;
    &lt;/span&gt;
    &lt;span class="buffer-wrapper" id="bufferwrapper"&gt;
      &lt;span id="buffer"&gt;&lt;/span&gt;
      &lt;span id="progress"&gt;&lt;/span&gt;
      &lt;span id="time"&gt;initializing...&lt;/span&gt;
      &lt;span id="closebutt"&gt;√ó&lt;/span&gt;
    &lt;/span&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#in-this-episode-youll-hear-about"&gt;
  &lt;/a&gt;
  &lt;strong&gt;In this episode, you‚Äôll hear about...&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Cryptocurrency company CoinBase refusing to negotiate job offers &lt;/li&gt;
&lt;li&gt;A blog post by the Babel core team titled, ‚ÄúBabel is used by millions, so why are we running out of money?‚Äù which created a bit of a Twitter storm.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Then, we spoke with Babel Core Maintainer, &lt;a href="//twitter.com/NicoloRibaudo"&gt;Nicol√≤ Ribaudo&lt;/a&gt;, about paying for open source software and why the popular Javascript project is running out of money.&lt;/p&gt;

&lt;p&gt;Finally, we spoke with Rails Core Contributor &lt;a href="//twitter.com/schneems"&gt;Richard Schneeman&lt;/a&gt;, about what it‚Äôs like to work on Rails in the aftermath of Basecamp co-founders Jason Fried and Rails creator David Heinemeier [High-Nemer] Hansson‚Äôs highly criticized blog post, which raised concerns about Rails' independence from its creator.&lt;/p&gt;

&lt;p&gt;I hope you enjoy!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;You can &lt;a href="//dev.to/devnews"&gt;follow DevNews&lt;/a&gt; to get episode notifications and listen right in your feed&lt;/em&gt; ‚Äî or subscribe on your platform of choice! Plus, if you leave us a review, we'll send you a free pack of thank-you stickers. Details &lt;a href="https://airtable.com/shr8oKAIMZgdYnBxx"&gt;here&lt;/a&gt;. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#quick-listening-links"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Quick Listening Links&lt;/strong&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://podcasts.apple.com/us/podcast/s4-e6-babels-money-challenges-what-its-like-to-work/id1525581923?i=1000522461260"&gt;Apple Podcasts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://open.spotify.com/episode/7JlOAnVWuZwIHdVYAQkL27"&gt;Spotify&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://podcasts.google.com/feed/aHR0cDovL2ZlZWRzLmNvZGVuZXdiaWUub3JnL2Rldm5ld3NfcG9kY2FzdC54bWw/episode/aHR0cHM6Ly9kZXZwb2RzLmRldi9wb2RjYXN0cy9kZXZuZXdzLzMw?sa=X&amp;amp;ved=0CAQQkfYCahcKEwjgnqHF7NjwAhUAAAAAHQAAAAAQCA"&gt;Google&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.stitcher.com/show/devnews/episode/s4-e6-babels-money-challenges-what-its-like-to-work-on-rails-and-coinbases-end-to-salary-negotiations-84092032"&gt;Stitcher&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.listennotes.com/podcasts/devnews-dev-fH8hvsClkWp/"&gt;Listen Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tunein.com/podcasts/Technology-Podcasts/DevNews-p1352512/?topicId=163183906"&gt;TuneIn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://feeds.codenewbie.org/devnews_podcast.xml"&gt;RSS Feed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://devpods.herokuapp.com/podcasts/devnews/episodes/164"&gt;Transcript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Acknowledgements&lt;/em&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;a class="mentioned-user" href="https://dev.to/levisharpe"&gt;@levisharpe&lt;/a&gt;
 for producing &amp;amp; mixing the show&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Our season four sponsors, &lt;a href="https://scoutapm.com/devnews"&gt;Scout APM&lt;/a&gt; and &lt;a href="https://rudderstack.com/"&gt;Rudderstack&lt;/a&gt; ‚ù§Ô∏è &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/JxYcC04MT2Noc/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/JxYcC04MT2Noc/giphy.gif" alt="Speaker"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>news</category>
      <category>podcast</category>
    </item>
    <item>
      <title>Secure GET and POST requests using PHP</title>
      <author>Danilo C√©sar</author>
      <pubDate>Thu, 20 May 2021 18:21:22 +0000</pubDate>
      <link>https://dev.to/danilo/secure-get-and-post-requests-using-php-k50</link>
      <guid>https://dev.to/danilo/secure-get-and-post-requests-using-php-k50</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;This post is also available in the following languages:  &lt;a href="https://medium.com/@danilocsar/requisi%C3%A7%C3%B5es-get-e-post-de-maneira-segura-usando-php-b2978af162e8"&gt;Portuguese&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;In this article, we will cover two request methods: the&lt;/em&gt; GET &lt;em&gt;and the&lt;/em&gt; POST &lt;em&gt;methods, for sending and receiving data from an HTML form using PHP. Also, we will examine the most common problems involving information security, such as&lt;/em&gt; Cross-Site Scripting (XSS) &lt;em&gt;and&lt;/em&gt; SQL Injection, &lt;em&gt;and how to solve them with adequate sanitization.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Let's start with the theory: what are&lt;/em&gt; GET &lt;em&gt;and&lt;/em&gt; POST &lt;em&gt;requests, and how do they differ? ‚Äì if you want to, you can skip to the next section, where we will start with the practice.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#understanding-the-get-and-post-methods"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Understanding the &lt;em&gt;GET&lt;/em&gt; and &lt;em&gt;POST&lt;/em&gt; methods&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;The &lt;em&gt;Hypertext Transfer Protocol&lt;/em&gt; (&lt;em&gt;HTTP&lt;/em&gt;) was developed as a protocol to serve the transmission of documents, and works as an intermediary between internet browsers and web servers. You are used to reading it in the addresses of web pages ‚Äì as well as its ‚Äúbrother‚Äù, the &lt;em&gt;HTTPS&lt;/em&gt;, a more secure encrypted version (hence the ‚ÄúS‚Äù at the end, meaning ‚ÄúSecure‚Äù).&lt;/p&gt;

&lt;p&gt;In other words, &lt;em&gt;HTTP&lt;/em&gt; is a protocol that serves as a ‚Äúbridge‚Äù: it collects a request from the internet browser; sends it to the server; waits for an answer; and, finally, it returns the new information to the &lt;em&gt;browser&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Generally, these requests keep some metadata in their ‚Äúheader‚Äù, that contains messages used to perform certain behavior on the client or on the server. In addition, &lt;em&gt;HTTP&lt;/em&gt; requests can assume different models.&lt;/p&gt;

&lt;p&gt;The most used &lt;em&gt;HTTP&lt;/em&gt; request types are &lt;em&gt;GET&lt;/em&gt; and &lt;em&gt;POST&lt;/em&gt;, but there are other types in their technical specification, such as &lt;code&gt;PUT&lt;/code&gt;, &lt;code&gt;HEAD&lt;/code&gt;, &lt;code&gt;DELETE&lt;/code&gt;, &lt;code&gt;PATCH&lt;/code&gt; and &lt;code&gt;OPTIONS&lt;/code&gt;. For the purposes of this article, we will focus only on the two most common.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-get-request"&gt;
  &lt;/a&gt;
  &lt;strong&gt;The &lt;em&gt;GET&lt;/em&gt; request&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;The &lt;a href="https://tools.ietf.org/html/rfc7231#section-4.3.1"&gt;&lt;em&gt;GET request&lt;/em&gt; method&lt;/a&gt; is used when you want to obtain data from a specific source or resource. It should only be used to retrieval data, because its query string are sent and displayed at &lt;em&gt;URL&lt;/em&gt;, for example: &lt;code&gt;https://www.youtube.com/watch?v=fJ9rUzIMcZQ&amp;amp;t=3m5s&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;When we insert this &lt;em&gt;URL&lt;/em&gt; into the &lt;em&gt;browser&lt;/em&gt;, we are asking the YouTube server for a specific resource: to retrieve the data from the video &lt;code&gt;v&lt;/code&gt; identified as &lt;code&gt;fJ9rUzIMcZQ&lt;/code&gt;. As soon as the server ‚Äúreturns‚Äù the request, the &lt;em&gt;HTTP&lt;/em&gt; protocol will tell the &lt;em&gt;browser&lt;/em&gt; how to display the video, in this example, the official video for the song ‚ÄúBohemian Rhapsody‚Äù, by the British band Queen.&lt;/p&gt;

&lt;p&gt;Note that in our example, the second parameter of the &lt;em&gt;GET&lt;/em&gt; request, the &lt;code&gt;t&lt;/code&gt; parameter, informs the start time that we expect in our response, in this case, from 3min and 5s. The parameters &lt;code&gt;v&lt;/code&gt; and &lt;code&gt;t&lt;/code&gt; are separated by the character &lt;code&gt;&amp;amp;&lt;/code&gt;, which indicates to the &lt;em&gt;HTTP&lt;/em&gt; protocol where the ‚Äúkey-value‚Äù pairs of these parameters begin and end. So, the server knows exactly that you search for the video &lt;code&gt;v=fJ9rUzIMcZQ&lt;/code&gt; at the time &lt;code&gt;t=3m5s&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;GET&lt;/em&gt; requests are generally limited in length ‚Äî for most &lt;em&gt;browsers&lt;/em&gt;, it is up to &lt;a href="https://stackoverflow.com/a/2659995"&gt;8 KB, or 8192 bytes&lt;/a&gt; in &lt;em&gt;URI&lt;/em&gt; ‚Äî and, because they only serve to request data, they are not able to modify it. In addition, they can be stored in &lt;em&gt;cache&lt;/em&gt;, in the browser's history and also in the bookmarks. That's why you should &lt;strong&gt;never&lt;/strong&gt; use it to send sensitive data, such as Social Security Numbers and user passwords.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;üí° Some developers, however, ignore it and expose personal and sensitive data of people on the internet. In Brazil, due to the &lt;a href="http://www.planalto.gov.br/ccivil_03/_ato2015-2018/2018/lei/l13709.htm"&gt;General Personal Data Protection Law (LGPD)&lt;/a&gt;, this practice may cause big inconveniences, such as serious penalties to the company or to the ones who operate and manage this data, when a leak happens. So, the best practice is to &lt;strong&gt;never&lt;/strong&gt; send sensitive personal data via the &lt;em&gt;GET&lt;/em&gt; method.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#the-post-request"&gt;
  &lt;/a&gt;
  &lt;strong&gt;The &lt;em&gt;POST&lt;/em&gt; request&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;The &lt;a href="https://tools.ietf.org/html/rfc7231#section-4.3.3"&gt;&lt;em&gt;POST request&lt;/em&gt; method&lt;/a&gt; is used to send data to the server, to update or create a new resource.&lt;/p&gt;

&lt;p&gt;Unlike the &lt;em&gt;GET&lt;/em&gt; method, the &lt;em&gt;POST&lt;/em&gt; method does not expose the information at the &lt;em&gt;URL&lt;/em&gt; address. In this case, the data is transmitted in the &lt;em&gt;HTTP&lt;/em&gt; request body, as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;POST /update/webform.php HTTP/1.1
Host: youtube.com
Content-Type: application/x-www-form-urlencoded
Content-Length: 42
user=Stevie&amp;amp;playlist=British&amp;amp;v=fJ9rUzIMcZQ
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this example, we are informing the &lt;code&gt;Host: youtube.com&lt;/code&gt; server that we will make a &lt;code&gt;POST&lt;/code&gt; method request to the &lt;code&gt;/update/webform.php&lt;/code&gt; address, using the technical specifications of the &lt;code&gt;HTTP/1.1&lt;/code&gt; protocol. We are also indicating that there is a 42 character information (&lt;code&gt;Content-Length: 42&lt;/code&gt;), in the standard &lt;code&gt;Content-Type&lt;/code&gt; content format, whose value is &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt;. Finally, our information is on the bottom line, containing 3 parameters: &lt;code&gt;user&lt;/code&gt;, &lt;code&gt;playlist&lt;/code&gt;, and &lt;code&gt;v&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;üí° The information traveling in the body of the &lt;em&gt;HTTP&lt;/em&gt; request can be intercepted by bad agents. The best practice, then, is to make these transmissions using encryption, via the &lt;em&gt;HTTPS&lt;/em&gt; protocol, so it makes harder to them read this information.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Let's assume the YouTube server recognized our request, and this address is valid. In our example, the informed video, which we received previously, will be added to the &lt;code&gt;British&lt;/code&gt; playlist of the user identified as &lt;code&gt;Stevie&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Note that this is a one-time request, which is unlikely to be repeated. As a rule, the &lt;em&gt;POST&lt;/em&gt; method, unlike &lt;em&gt;GET&lt;/em&gt;, is not stored in &lt;em&gt;cache&lt;/em&gt; or in the client's browser history, nor can it be saved in bookmarks. &lt;em&gt;POST&lt;/em&gt; requests have no restrictions on the size of messages, which allows us to send complete articles, such as this one, through an electronic HTML form, for example. Also, the &lt;em&gt;POST&lt;/em&gt; method supports a wide variety of &lt;code&gt;Content-Type&lt;/code&gt;s, including binary documents, &lt;em&gt;strings&lt;/em&gt;, and numbers.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;üí° &lt;em&gt;POST&lt;/em&gt; method is generally preferable over &lt;em&gt;GET&lt;/em&gt;. However, there are situations in which we should include the requisition data in the address &lt;em&gt;URL&lt;/em&gt;: for example, in search forms or by displaying documents and videos, because we want the client to be able to repeat it easily and to re-access the address through the browser's history.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#creating-forms-with-html-and-php"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Creating forms with HTML and PHP&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Now that we understand how the &lt;em&gt;GET&lt;/em&gt; and &lt;em&gt;POST&lt;/em&gt; methods work in the theory, let's go to the practices: let's create an HTML form, and have it to send and to receive information using PHP.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;üí° There are several ways to do this, like via JavaScript and &lt;em&gt;AJAX&lt;/em&gt;, where the user don't have to refresh the page, because we are transmitting the information asynchronously. For the purposes of this article, we will focus only on HTML and PHP technologies.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#inserting-the-form-on-the-page"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Inserting the form on the page&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;The first step to create our web page is to inform the structure of the &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; element that will contain the fields where user types the data, like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;lt;!-- origin.html --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;form&lt;/span&gt; &lt;span class="na"&gt;method=&lt;/span&gt;&lt;span class="s"&gt;"GET"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"webform"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"webform"&lt;/span&gt; &lt;span class="na"&gt;action=&lt;/span&gt;&lt;span class="s"&gt;"target.php"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this fragment, we are using the &lt;em&gt;GET&lt;/em&gt; method, defined in &lt;code&gt;method="GET"&lt;/code&gt;, to send the information that will be inserted into the form, whose name was defined in &lt;code&gt;name="webform"&lt;/code&gt;, to the target page (&lt;code&gt;action="target.php"&lt;/code&gt;).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#inserting-the-fields-to-the-form"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Inserting the fields to the form&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;The next step is to insert the fields, or &lt;code&gt;input&lt;/code&gt;s to our form, where users can type the values. Let's update our source file like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;lt;!-- origin.html --&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"utf-8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Electronic form&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;form&lt;/span&gt; &lt;span class="na"&gt;method=&lt;/span&gt;&lt;span class="s"&gt;"GET"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"webform"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"webform"&lt;/span&gt; &lt;span class="na"&gt;action=&lt;/span&gt;&lt;span class="s"&gt;"target.php"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"iduser"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;User ID:&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"iduser"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"iduser"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;br&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"idplaylist"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Playlist ID:&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"idplaylist"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"idplaylist"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;br&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"v"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Video ID:&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"v"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"v"&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"fJ9rUzIMcZQ"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;br&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"submit"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Send data&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We inserted 3 fields, defined by the &lt;em&gt;HTML&lt;/em&gt; tag &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;, and also 1 button that sends the form's data, using &lt;code&gt;&amp;lt;button type="submit"&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;We also add labels to the text fields, using the &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; tags. Notice that each values on the &lt;code&gt;for&lt;/code&gt; attributes, on each &lt;code&gt;label&lt;/code&gt; element corresponds to an &lt;code&gt;id&lt;/code&gt; attribute of one the &lt;code&gt;input&lt;/code&gt; fields, like this: &lt;code&gt;&amp;lt;label for="idplaylist"&amp;gt;&lt;/code&gt; refers specifically to the field that contains the corresponding &lt;code&gt;id="idplaylist"&lt;/code&gt; attribute, and vice versa.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;üí° It is possible to insert predefined values to the fields, adding the data corresponding to the &lt;code&gt;value&lt;/code&gt; attribute in each HTML &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; element.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Finally, the &lt;code&gt;name&lt;/code&gt; attribute in each &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; field will be used to obtain the values inserted by the user in the corresponding field when we move to PHP.&lt;/p&gt;

&lt;p&gt;The final result, displayed in the client's &lt;em&gt;browser&lt;/em&gt;, should look like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aiTkEMZw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621533203977/gA6-X-OJP.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aiTkEMZw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621533203977/gA6-X-OJP.png" alt="en_1.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#reading-data-with-php"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Reading data with PHP&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;After completing our HTML form, we can move on to the next step. Let's define the elements of the target page using PHP.&lt;/p&gt;

&lt;p&gt;The source code below, inserted in the file &lt;code&gt;target.php&lt;/code&gt;, will be executed by PHP as soon as the user submits the form data that we created earlier.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;lt;!-- target.php --&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span class="c1"&gt;// Prints the values of each field on the page&lt;/span&gt;
    &lt;span class="k"&gt;echo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s2"&gt;"The user identified as "&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$_GET&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"iduser"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s2"&gt;" added the video whose ID is "&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$_GET&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"v"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s2"&gt;" to the playlist "&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$_GET&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"idplaylist"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s2"&gt;"."&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice that we use the &lt;em&gt;superglobal&lt;/em&gt; &lt;code&gt;$_GET[]&lt;/code&gt; variable to obtain the values inserted by the user, that were transmitted using the &lt;em&gt;HTTP&lt;/em&gt; protocol. For each &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; field that we previously created on the form, its corresponding &lt;code&gt;name&lt;/code&gt; attribute must be informed within the &lt;em&gt;superglobal variable&lt;/em&gt;. For example: the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; field that shows the attribute &lt;code&gt;name="iduser"&lt;/code&gt; can be found in PHP by using &lt;code&gt;$_GET["iduser]&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;PHP has some &lt;a href="https://www.php.net/manual/en/language.variables.superglobals.php"&gt;native &lt;em&gt;superglobals&lt;/em&gt; variables&lt;/a&gt;, such as &lt;code&gt;$_GET&lt;/code&gt;, &lt;code&gt;$_POST&lt;/code&gt;, and &lt;code&gt;$_REQUEST&lt;/code&gt;. Remember that we use them &lt;strong&gt;according to the &lt;em&gt;HTTP&lt;/em&gt; request method that we are using&lt;/strong&gt; for data transmission, so it must correspond to what been defined in the &lt;code&gt;method&lt;/code&gt; attribute of our &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; element.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;üí° PHP's &lt;code&gt;$_REQUEST&lt;/code&gt; &lt;em&gt;superglobal&lt;/em&gt; variable can carry information from both &lt;code&gt;$_GET&lt;/code&gt; and &lt;code&gt;$_POST&lt;/code&gt; methods, in addition to any &lt;em&gt;cookies&lt;/em&gt; transmitted in &lt;code&gt;$_COOKIE&lt;/code&gt;. However, its use &lt;strong&gt;is not&lt;/strong&gt; always recommended: the best practice is that developers know the methods used for inputs and outputs traveling on their server, in order to avoid more generic commands.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Then, we separate the &lt;em&gt;strings&lt;/em&gt; and the variables in PHP with the &lt;code&gt;.&lt;/code&gt; character, so each fragment of text is contained between the &lt;code&gt;"&lt;/code&gt; characters, at the beginning and at the end of the sentence. Finally, we print on the user's screen the entire expression within the parentheses with the &lt;code&gt;echo()&lt;/code&gt; function.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#learn-by-doing"&gt;
  &lt;/a&gt;
  üìù Learn by doing
&lt;/h3&gt;

&lt;p&gt;Did you notice that the &lt;em&gt;URL&lt;/em&gt; address on &lt;code&gt;target.php&lt;/code&gt; page shows the values typed in the source page?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Test #1:&lt;/strong&gt; Rewrite the source code of the form we coded, using another requisition method, so that the information stays safe from reading by eavesdroppers and unauthorized people. After you finish, you can check &lt;a href="https://gist.github.com/DaniloCeesar/b49ec6a77f3d75380fe0b689afbfe065"&gt;the final answer&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#increasing-html-form-security"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Increasing HTML form security&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Our HTML form is finally done! However, we can increase the security of our page, protecting the reading of the information on PHP.&lt;/p&gt;

&lt;p&gt;This is our last step. We will add an extra layer of security, although basic, to prevent PHP from executing commands at the moment it receives and displays the values reported by the client.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;üí° The rule in programming is to &lt;strong&gt;never blindly trust the values inserted by the user&lt;/strong&gt;. Unfortunately, many bad agents have exploited technical problems on websites in order to collect sensitive information, or to damage servers by executing unexpected commands. For those reasons, it is very important that you &lt;strong&gt;protect, beforehand, the transmitted requests and the server&lt;/strong&gt;, after all, if the users' interests are legitimate, they will also benefit from the increased security of your application.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The technique that filters and transforms the values entered by the user into simpler &lt;em&gt;strings&lt;/em&gt; is called &lt;strong&gt;sanitization&lt;/strong&gt;. By default, PHP has a collection of native functions that helps us on this step, such as the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;htmlspecialchars()&lt;/code&gt; - Converts special characters, such as &lt;code&gt;&amp;amp;‚Äú‚Äù&amp;lt;&amp;gt;&lt;/code&gt;, to HTML entities;&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;htmlentities()&lt;/code&gt; - Similar to the previous one, but it converts a larger number of characters to HTML entities;&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;strip_tags()&lt;/code&gt; - Removes HTML and PHP &lt;em&gt;tags&lt;/em&gt; from a &lt;em&gt;string&lt;/em&gt;, such as &lt;em&gt;hyperlinks&lt;/em&gt; and comments.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When we use adequate sanitization, as soon as the server receives an improper information ‚Äî for example, &lt;code&gt;&amp;lt;script&amp;gt;alert('Intrusive alert');&amp;lt;/script&amp;gt;&lt;/code&gt; ‚Äî it will be transformed, ‚Äúsanitized‚Äù, and should not display a warning message on the users' screen in this case.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;üí° Notice that, in our example, we use a harmless, in theory, &lt;em&gt;script&lt;/em&gt; ‚Äî at most, uncomfortable for the user. However, it is important to reiterate: you must &lt;strong&gt;always protect and sanitize information&lt;/strong&gt;. In other cases, a bad agent could transmit malicious &lt;em&gt;scripts&lt;/em&gt; ‚Äî this technique is known as &lt;em&gt;Cross-Site Scripting&lt;/em&gt;, or &lt;em&gt;XSS&lt;/em&gt; ‚Äî or execute harmful commands to the database (usually called &lt;em&gt;SQL Injection&lt;/em&gt;).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Let's edit the source code of our page, by adding one of these sanitizing functions. Our final code should look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;lt;!-- target.php --&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span class="c1"&gt;// Prints the values of each field on the page&lt;/span&gt;
    &lt;span class="k"&gt;echo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s2"&gt;"The user identified as "&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nb"&gt;htmlspecialchars&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_GET&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"iduser"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="no"&gt;ENT_QUOTES&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"UTF-8"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s2"&gt;" added the video whose ID is "&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nb"&gt;htmlspecialchars&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_GET&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"v"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="no"&gt;ENT_QUOTES&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"UTF-8"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s2"&gt;" to the playlist "&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nb"&gt;htmlspecialchars&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_GET&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"idplaylist"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="no"&gt;ENT_QUOTES&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"UTF-8"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s2"&gt;"."&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The final result, displayed in the browser, should look like the figure below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5Sf39swu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621533214749/2elZdyIK4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5Sf39swu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621533214749/2elZdyIK4.png" alt="en_2.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#learn-by-doing"&gt;
  &lt;/a&gt;
  üìù Learn by doing
&lt;/h3&gt;

&lt;p&gt;Have you ever noticed that the majority of sites and search engines use the &lt;code&gt;q&lt;/code&gt; parameter to transmit the data inserted by the user in the query requests to the server?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Test #2:&lt;/strong&gt; Create a search form, using HTML and PHP, that contains at least 1 text field and 1 button to send the data, so that the address &lt;em&gt;URL&lt;/em&gt; on the target page displays the &lt;code&gt;q&lt;/code&gt; (or ‚Äúquery‚Äù) parameter. It should receive the values, sanitized, inserted by the user in the text field. After you finish, you can check &lt;a href="https://gist.github.com/DaniloCeesar/95c63e7c93e56deb05fb150923d03fe8"&gt;the final answer&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Conclusion&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;So, we're done! We made our electronic form in HTML that is capable of transmitting data via &lt;em&gt;HTTP&lt;/em&gt; request methods, in this case, &lt;em&gt;GET&lt;/em&gt; or &lt;em&gt;POST&lt;/em&gt; ‚Äî and we also understand how they work ‚Äî, and send them to the target page written in PHP. Then, it receives, handles the data, and displays the information on the user's screen. Also, we sanitized the values informed by the user in order to avoid serious problems of information security.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#next-steps"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Next steps&lt;/strong&gt; üö∂
&lt;/h3&gt;

&lt;p&gt;Internet security it is never too much, so there is always something more to learn and apply. In order to build safer applications, be sure to follow the next article on this series, and read the &lt;a href="https://www.php.net/manual/en/security.php"&gt;Security topic in the PHP Manual&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you have any questions or suggestions on how to build more secure applications using PHP, share it in the comments. üì£&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  &lt;strong&gt;References&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;[1] ‚ÄúHTTP Request Methods‚Äù, from &lt;em&gt;w3schools&lt;/em&gt;: &lt;a href="https://www.w3schools.com/tags/ref_httpmethods.asp"&gt;https://www.w3schools.com/tags/ref_httpmethods.asp&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;[2] ‚ÄúHTTP‚Äù, from &lt;em&gt;MDN Web Docs&lt;/em&gt; (&lt;em&gt;Mozilla Developer Network&lt;/em&gt;): &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP"&gt;https://developer.mozilla.org/en-US/docs/Web/HTTP&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;[3] ‚ÄúGET‚Äù, from &lt;em&gt;MDN Web Docs&lt;/em&gt; (&lt;em&gt;Mozilla Developer Network&lt;/em&gt;): &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/GET"&gt;https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/GET&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;[4] ‚ÄúPOST‚Äù, from &lt;em&gt;MDN Web Docs&lt;/em&gt; (&lt;em&gt;Mozilla Developer Network&lt;/em&gt;): &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/POST"&gt;https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/POST&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;[5] ‚Äúhtmlspecialchars‚Äù, from &lt;em&gt;PHP Manual&lt;/em&gt;: &lt;a href="https://www.php.net/htmlspecialchars"&gt;https://www.php.net/htmlspecialchars&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;[6] ‚Äúhtmlentities‚Äù, from &lt;em&gt;PHP Manual&lt;/em&gt;: &lt;a href="https://www.php.net/htmlentities"&gt;https://www.php.net/htmlentities&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;[7] ‚Äústrip_tags‚Äù, from &lt;em&gt;PHP Manual&lt;/em&gt;: &lt;a href="https://www.php.net/strip_tags"&gt;https://www.php.net/strip_tags&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;[8] ‚ÄúSuperglobals‚Äù, from &lt;em&gt;PHP Manual&lt;/em&gt;: &lt;a href="https://www.php.net/manual/en/language.variables.superglobals.php"&gt;https://www.php.net/manual/en/language.variables.superglobals.php&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>codenewbie</category>
      <category>php</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Unboxing Apple AirTag with engraving and testing it out </title>
      <author>Michael Crump</author>
      <pubDate>Thu, 20 May 2021 18:16:25 +0000</pubDate>
      <link>https://dev.to/mbcrump/unboxing-apple-airtag-with-engraving-and-testing-it-out-5222</link>
      <guid>https://dev.to/mbcrump/unboxing-apple-airtag-with-engraving-and-testing-it-out-5222</guid>
      <description>&lt;p&gt;Hello everyone, &lt;/p&gt;

&lt;p&gt;I just got my hands on the new Apple AirTag and wanted to share a  quick review with you. Hopefully you'll find it interesting or funny! &lt;/p&gt;

&lt;p&gt;Video (12 mins)&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/exBMOkWoCzI"&gt;
&lt;/iframe&gt;
 &lt;/p&gt;

&lt;p&gt;Conclusion&lt;/p&gt;

&lt;p&gt;Feel free to checkout my &lt;a href="https://twitch.tv/mbcrump"&gt;Twitch streams&lt;/a&gt; as we learn about security and app development or you can watch the condensed version of all of my streams by subscribing to my &lt;a href="https://youtube.com/mbcrump"&gt;YouTube&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Stay connected with me on social platforms for daily software development news.&lt;/p&gt;

&lt;p&gt;-&lt;a href="https://twitter.com/intent/follow?screen_name=mbcrump"&gt;Twitter&lt;/a&gt; | &lt;a href="https://twitch.tv/mbcrump"&gt;Twitch&lt;/a&gt; | &lt;a href="https://instagram.com/mbcrump"&gt;Instagram&lt;/a&gt; | &lt;a href="https://youtube.com/mbcrump"&gt;YouTube&lt;/a&gt; | &lt;a href="https://github.com/mbcrump"&gt;GitHub&lt;/a&gt; | &lt;a href="https://www.michaelcrump.net"&gt;Website&lt;/a&gt;&lt;/p&gt;

</description>
      <category>airtag</category>
      <category>productivity</category>
      <category>apple</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Incorporating Accessibility Into Web Applications</title>
      <author>Lauren Conrad</author>
      <pubDate>Thu, 20 May 2021 18:15:47 +0000</pubDate>
      <link>https://dev.to/mural/incorporating-accessibility-into-web-applications-5bi6</link>
      <guid>https://dev.to/mural/incorporating-accessibility-into-web-applications-5bi6</guid>
      <description>&lt;p&gt;&lt;em&gt;On May 20th, we're celebrating Global Accessibility Awareness Day (GAAD). This significant day is here to remind us all that even though the journey toward accessibility can take years, we‚Äôre still committed to making our websites and apps accessible to all people and to continue advocating for accessibility in every aspect of our lives. The Design Systems &amp;amp; Accessibility team at MURAL has been working on incorporating accessibility (&lt;a href="https://adrianroselli.com/2016/11/a11y-accessibility.html"&gt;also known as a11y&lt;/a&gt;) into our product. Along this journey to make MURAL‚Äôs product accessible, we‚Äôve learned quite a few tips and tricks. Today, we're sharing what we've learned with you about incorporating accessibility into designs and products.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-accessibility"&gt;
  &lt;/a&gt;
  What is accessibility?
&lt;/h2&gt;

&lt;p&gt;Accessibility is the practice of ensuring that any person, particularly people with disabilities, can use a website or web application. When someone considers accessibility, they might think only about a set of disabilities that they are familiar with, but the people who are impacted have a broad range of disabilities, which can be permanent, temporary, or even situational. For instance, if a person is holding a baby in one arm, how easily can they write an email? If a person is blind, how easily can they navigate your website?&lt;/p&gt;

&lt;p&gt;Now that we‚Äôve defined accessibility, you might be wondering, why is accessibility important? How do I convince others that it‚Äôs important? Who on my team should be working on accessibility? Some key points the Design Systems &amp;amp; Accessibility team kept top of mind while thinking about these questions include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;‚ÄúOpt-in‚Äù by default:&lt;/strong&gt; Accessibility needs to be the default standard, not something that would be nice to have. Everyone uses the web differently. Making products accessible ensures that more users can access your product. In other words, enabling more people to use your product, grants you access to a bigger market place. Working on implementing accessibility from the start also costs exponentially less than retrofitting a production-facing application/site, or worse yet, a lawsuit.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Teamwork, Dreamwork:&lt;/strong&gt; Creating an accessible app is a huge project, and having only one person responsible for accessibility can create bottlenecks and burnout. By collectively assuming accessibility goals, everyone can focus on how their own roles contribute to accessibility. For instance, UX designers specifically are focused on developing the usability and interactions of an application/site. They also do things like user research, testing, feedback etc. These skill sets are not ones that developers typically have, so bringing designers into the discussion early on can make accessibility-focused development less overwhelming and difficult to achieve. Ultimately, to incorporate accessibility practices into the development lifecycle long term, the entire organization needs to actively prioritize accessibility, from development and design all the way to QA, management, and customer support. This is why the Design Systems &amp;amp; Accessibility team codified a universal pledge to encourage commitment to accessibility and inclusion. As of today, every MURAL employee has been asked to sign this pledge.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://feather.ca/shift-left/"&gt;&lt;strong&gt;Shift Left:&lt;/strong&gt;&lt;/a&gt; Think about accessibility at the start of the product development process, not after. Implementing accessibility into an existing app can be especially challenging for organizations that have been around for a long time. It‚Äôs easier to incorporate accessible elements while developing a product than to create a potentially inaccessible product and try to fix it afterward.  So whenever possible, start early.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#how-to-get-started"&gt;
  &lt;/a&gt;
  How to get started
&lt;/h2&gt;

&lt;p&gt;In case you‚Äôre wondering how to begin, here are some ways to start incorporating accessibility into your app:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Use a plugin or a linter to scan your code for accessibility issues.&lt;/strong&gt; For example, for React applications, you can use &lt;a href="https://www.npmjs.com/package/eslint-plugin-jsx-a11y"&gt;eslint-plugin-jsx-a11y&lt;/a&gt; to catch approximately 30% of &lt;a href="https://www.24a11y.com/2017/reacts-accessibility-code-linter"&gt;issues that make an app inaccessible&lt;/a&gt;, like missing alt text on images. What a quick win! However, it‚Äôs important to also run a full accessibility audit including manual processes, to help identify usability issues. See the bottom of this section for details.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Run an automated testing audit using an accessibility browser extension.&lt;/strong&gt; Free extensions like &lt;a href="https://chrome.google.com/webstore/detail/axe-devtools-web-accessib/lhdoppojpmngadmnindnejefpokejbdd?hl=en-US"&gt;aXe&lt;/a&gt; and &lt;a href="https://wave.webaim.org/extension/"&gt;Wave&lt;/a&gt; can scan your app for accessibility issues that the linter may have missed, like low contrast color schemes. While this can be a great way to check for automatically detectible issues, it‚Äôs no replacement for usability testing, so be sure to still do a full manual audit.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Familiarize yourself with the &lt;a href="https://www.w3.org/WAI/standards-guidelines/wcag"&gt;Web Content Accessibility Guidelines&lt;/a&gt; (WCAG).&lt;/strong&gt; WCAG is the go-to standard reference for implementing accessibility features and is maintained by the &lt;a href="https://en.wikipedia.org/wiki/World_Wide_Web_Consortium"&gt;W3C&lt;/a&gt;, and is &lt;a href="https://developer.mozilla.org/en-US/docs/Web/Accessibility/Understanding_WCAG"&gt;guided by four principles&lt;/a&gt; to ensure a broad range of accessibility: Perceivability, Operability, Understandability, and Robustness. Although they can also be overwhelming due to their thoroughness, they are the official resource on accessibility.
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Create a checklist based on your product‚Äôs existing or planned features and make strategies to adapt those features to be more accessible.&lt;/strong&gt; Here‚Äôs a sample checklist from the Design Systems &amp;amp; Accessibility team that you can take inspiration from:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Ensure that users can fully navigate your app with a keyboard.&lt;/li&gt;
&lt;li&gt;Test your software using common assistive technologies, such as a screen reader.&lt;/li&gt;
&lt;li&gt;Ensure users can zoom in to 200% (&lt;a href="https://www.w3.org/WAI/WCAG21/quickref/#resize-text"&gt;the zoom percentage that the WCAG recommends&lt;/a&gt;) and that all content is still easily readable.&lt;/li&gt;
&lt;li&gt;Check that images and text meet color contrast levels of 4.5:1 to help ensure they‚Äôre still readable. Here is a &lt;a href="https://webaim.org/resources/contrastchecker/"&gt;color contrast checker&lt;/a&gt; you can use to test your designs.&lt;/li&gt;
&lt;li&gt;Make sure that language is clear and understandable. Check out the &lt;a href="https://www.plainlanguage.gov/guidelines/"&gt;Plain Language Guidelines&lt;/a&gt;. &lt;/li&gt;
&lt;li&gt;Ensure you have no images that &lt;a href="https://www.w3.org/TR/UNDERSTANDING-WCAG20/seizure-does-not-violate.html"&gt;flash more than three times per second&lt;/a&gt;, because quick-moving graphics could be an issue for users with epilepsy or attention deficit disorder.&lt;/li&gt;
&lt;li&gt;Write &lt;a href="https://supercooldesign.co.uk/blog/how-to-write-good-alt-text"&gt;alt text&lt;/a&gt; for functional images. These are descriptions of &lt;a href="https://sheribyrnehaber.com/context-is-the-most-critical-aspect-of-alt-text-everyone-seems-to-miss"&gt;non-decorative graphics&lt;/a&gt; that a screen reader can read aloud to users with visual impairments.&lt;/li&gt;
&lt;li&gt;Add captions for videos and audio.&lt;/li&gt;
&lt;li&gt;Ensure that videos and sounds do not play automatically. &lt;a href="https://www.boia.org/blog/why-autoplay-is-an-accessibility-no-no"&gt;Autoplay can cause a number of issues for users&lt;/a&gt;, and even prevent them from being able to navigate your site.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you want to learn more about accessibility and the above recommendations, check out the &lt;a href="https://www.w3.org/WAI/WCAG21/quickref/"&gt;Web Content Accessibility Quick Reference Guide&lt;/a&gt; that summarizes the &lt;a href="https://en.wikipedia.org/wiki/Web_Content_Accessibility_Guidelines"&gt;Web Content Accessibility Guidelines&lt;/a&gt;. The guidelines contain extensive lists of standards to enable a variety of users to access web products more easily. For more digestible checklists and write ups on the topic, check out &lt;a href="https://www.ibm.com/able/toolkit"&gt;IBM‚Äôs breakdown of the WCAG checklist by role&lt;/a&gt; and &lt;a href="https://www.and.org.au/articles.php/43/how-to-write-more-accessible-social-media-posts"&gt;this article on making images and other media incorporated into a website or app accessible&lt;/a&gt;.&lt;/p&gt;


&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Do a full manual audit of your product to ensure it is usable in real life situations.&lt;/strong&gt; This is the biggest and most important step, because automated programs can‚Äôt test apps for the ways users will navigate them. Teach yourself how to navigate your website or application using only your keyboard, and then only a screen reader, and then show the rest of the team how it‚Äôs done. Bake in time for local testing using these approaches on even small product changes. If possible, include testing and feedback from users with disabilities, or hire an accessibility expert to augment your routine manual audits For more info, check out this &lt;a href="https://www.smashingmagazine.com/2018/09/importance-manual-accessibility-testing"&gt;Smashing Magazine article on the importance of manual testing&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now that we‚Äôve defined accessibility and reviewed key guidelines, we hope you‚Äôve got a lot more ideas on how to make apps accessible to everyone and, as a result, how to create a more inclusive world.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Linux CLI tool</title>
      <author>endormi</author>
      <pubDate>Thu, 20 May 2021 18:12:49 +0000</pubDate>
      <link>https://dev.to/endormi/linux-cli-tool-2en3</link>
      <guid>https://dev.to/endormi/linux-cli-tool-2en3</guid>
      <description>&lt;p&gt;I have created a tool for linux called tilux (work in progress) that has multiple scripts you can run. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-idea"&gt;
  &lt;/a&gt;
  The idea
&lt;/h3&gt;

&lt;p&gt;I as also many others (probably) as well have a ton of useful scripts for Linux, that just happen to be all over the system and not in one specific folder. So this is where this project comes handy, everything is in one CLI.&lt;/p&gt;

&lt;p&gt;The &lt;a href="https://github.com/endormi/tilux"&gt;project&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I have included multiple scripts such as. monitoring (cpu, memory etc.), networking (ip pinging and server pinging, system scripts (add alias, clean logs and trash etc.) and many more.&lt;/p&gt;

&lt;p&gt;You can the scripts individually from any folder, but to run the CLI you need to be inside the &lt;code&gt;tilux&lt;/code&gt; folder. This hopefully will be updated so that you can run it from any folder later.&lt;/p&gt;

&lt;p&gt;The CLI is built with Ruby and it calls the scripts that you choose either by using arguments or by running interactively. If you know a better way to call the scripts, feel free to implement it!&lt;/p&gt;

&lt;p&gt;Feel free to check out the &lt;a href="https://github.com/endormi/tilux"&gt;project&lt;/a&gt;. New script ideas are always welcome and stars are appreciated üòÑ.&lt;/p&gt;

</description>
      <category>showdev</category>
      <category>linux</category>
    </item>
    <item>
      <title>FFmpeg for Instagram</title>
      <author>alfg</author>
      <pubDate>Thu, 20 May 2021 18:01:51 +0000</pubDate>
      <link>https://dev.to/alfg/ffmpeg-for-instagram-35bi</link>
      <guid>https://dev.to/alfg/ffmpeg-for-instagram-35bi</guid>
      <description>&lt;p&gt;Uploading high quality video to &lt;a href="https://www.instagram.com/"&gt;Instagram&lt;/a&gt; can result in lower quality video on posts and stories due to aggressive re-encoding to save on bandwidth and storage for users. You will notice this especially if uploading videos from &lt;a href="https://gopro.com"&gt;GoPro&lt;/a&gt; or other devices captured in 4K or 1440p with larger file sizes. Although the video preview on Instagram looks high quality, the resulting output will be degraded drastically.&lt;/p&gt;

&lt;p&gt;This guide describes various &lt;a href="https://ffmpeg.org"&gt;FFmpeg&lt;/a&gt; encoding presets that can be used to help improve your video quality output when uploading to Instagram. These settings can also be applied to other encoders, such as &lt;a href="https://handbrake.fr"&gt;Handbrake&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#recommended-encoding-settings"&gt;
  &lt;/a&gt;
  Recommended Encoding Settings
&lt;/h2&gt;

&lt;p&gt;Instagram does not provide an official list of encoding requirements. These settings are gathered from various sources and through trial and error. However, Instagram does provide some &lt;a href="https://help.instagram.com/1038071743007909"&gt;encoding requirements for IGTV&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Set your encoder to use these settings: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;MP4 Container format&lt;/li&gt;
&lt;li&gt;H.264 Video Codec&lt;/li&gt;
&lt;li&gt;AAC Audio&lt;/li&gt;
&lt;li&gt;3500kbps bitrate&lt;/li&gt;
&lt;li&gt;30 FPS&lt;/li&gt;
&lt;li&gt;60 seconds maximum in length&lt;/li&gt;
&lt;li&gt;1080p 16:9 max (vertical or horizontal)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Also, if you inspect a story video using a tool like &lt;a href="https://mediaarea.net/en/MediaInfo"&gt;mediainfo&lt;/a&gt;, you'll see something like the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;First video stream:
1 367 kb/s 640*1136 (0.563) at 30.000 FPS, AVC (Main@L3)(CABAC 4 Ref Frames)
64.0 kb/s 44.1 kHz, 1 channel, AAC LC
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Stories without audio, don't have an audio stream within the container at all.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#optimize-with-ffmpeg"&gt;
  &lt;/a&gt;
  Optimize with FFmpeg
&lt;/h2&gt;

&lt;p&gt;We can apply the settings above using &lt;code&gt;FFmpeg&lt;/code&gt;. Here are some encoding profiles to try out.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#-raw-720p30-crf-23-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;720p30 @ CRF 23&lt;/code&gt;
&lt;/h4&gt;

&lt;p&gt;Using CRF only without targetting a bitrate.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ffmpeg -i INPUT.MOV -vf scale=-2:720 -c:v libx264 -profile:v main -level:v 3.0 -x264-params scenecut=0:open_gop=0:min-keyint=72:keyint=72 -c:a aac -preset slow -crf 23 -r 30 -sn -f mp4 OUTPUT.mp4
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#-raw-720p30-3500k-video-bitrate-256k-audio-bitrate-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;720p30 @ 3500k video bitrate + 256k audio bitrate&lt;/code&gt;
&lt;/h4&gt;

&lt;p&gt;Variable bitrate with a max of 3500k.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ffmpeg -i INPUT.MOV -vf scale=-2:720 -c:v libx264 -profile:v main -level:v 3.0 -x264-params scenecut=0:open_gop=0:min-keyint=72:keyint=72:ref=4 -c:a aac -crf 23 -maxrate 3500k -bufsize 3500k -r 30 -ar 44100 -b:a 256k -sn -f mp4 OUTPUT.mp4
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#-raw-720p30-3500k-video-bitrate-256k-audio-bitrate-2pass-encoding-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;720p30 @ 3500k video bitrate + 256k audio bitrate - 2-pass encoding&lt;/code&gt;
&lt;/h4&gt;

&lt;p&gt;Using 2-pass encoding with a targetted bitrate of 3500k. This doesn't necessarily improve quality, but helps target a filesize more accurately.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ffmpeg -i INPUT.MOV -vf scale=-2:720 -c:v libx264 -profile:v main -level:v 3.0 -x264-params scenecut=0:open_gop=0:min-keyint=72:keyint=72:ref=4 -c:a aac -b:v 3500k -maxrate 3500k -bufsize 3500k -r 30 -ar 44100 -b:a 256k -pass 1 -sn -f mp4 NUL &amp;amp;&amp;amp; \ 
 ffmpeg -i INPUT.MOV -vf scale=-2:720 -c:v libx264 -profile:v main -level:v 3.0 -x264-params scenecut=0:open_gop=0:min-keyint=72:keyint=72:ref=4 -c:a aac -b:v 3500k -maxrate 3500k -bufsize 3500k -r 30 -ar 44100 -b:a 256k -pass 2 OUTPUT.mp4
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Try adjusting a few settings to get the optimal quality and filesize before uploading. Maybe try 1080p for IGTV, per their specification.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#what-do-those-options-mean"&gt;
  &lt;/a&gt;
  What do those options mean?
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;-i INPUT.MOV&lt;/code&gt; - Input movie file.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;-vf scale=-2:720&lt;/code&gt; - Video filter to scale to 720p while keeping aspect ratio.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;-c:v libx264&lt;/code&gt; - Use &lt;code&gt;x264&lt;/code&gt; video codec.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;-profile:v main -level:v 3.1&lt;/code&gt; - Mostly for H.264 compatibility for older devices. This seems to be the profile Apple devices export to.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;-x264-params scenecut=0:open_gop=0:min-keyint=72:keyint=72:ref=4&lt;/code&gt; - Some x264 codec options I use to improve video for streaming.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;-c:a aac&lt;/code&gt; - Use AAC audio codec.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;-preset slow&lt;/code&gt; - Slower presets will result in better quality. Feel free to also try &lt;code&gt;slower&lt;/code&gt; and &lt;code&gt;veryslow&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;-crf 23&lt;/code&gt; - Constant Rate Factor encoding mode that adjusts the file data rate up or down to achieve a selected quality level rather than a specific data rate.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;-b:v 3500k&lt;/code&gt; - Targets video bitrate to 3500k.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;-b:a 256k&lt;/code&gt; - Targets audio bitrate to 256k.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;-ar 44100&lt;/code&gt; - Sets audio sample rate to 44.1 kHz.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;-r 30&lt;/code&gt; - Sets the framerate to 30.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;-f mp4&lt;/code&gt; - Sets the MP4 container format. This is optional if you have &lt;code&gt;.mp4&lt;/code&gt; in the output filename.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;OUTPUT.mp4&lt;/code&gt; - The encoded output movie file.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#demo"&gt;
  &lt;/a&gt;
  Demo
&lt;/h2&gt;

&lt;p&gt;Here's a before and after test I created using the above requirements. These were downloaded directly from Instagram after posting to compare results.&lt;/p&gt;

&lt;p&gt;The source video file being a 3840x2160 @ 60fps (4K) file recorded from a GoPro Hero 8 at 567MB in size.&lt;/p&gt;

&lt;p&gt;The optimized video encoded at 1280x720 @ 30fps using the 2-pass profile settings at 34.7MB in size.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#without-optimizing-video"&gt;
  &lt;/a&gt;
  Without optimizing video
&lt;/h4&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#with-optimized-video"&gt;
  &lt;/a&gt;
  With optimized video
&lt;/h4&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#without-optimizing-as-a-story"&gt;
  &lt;/a&gt;
  Without optimizing as a story
&lt;/h4&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#optimized-video-as-a-story"&gt;
  &lt;/a&gt;
  Optimized video as a story
&lt;/h4&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;Notice the unoptimized videos have more jagged edge artifacts around the guard rails and curb, especially for video with a lot of motion.&lt;/p&gt;

&lt;p&gt;The goal is basically to reduce your video to an optimal size and image quality so it doesn't get affected as much by Instagram's aggressive encoding.&lt;/p&gt;

&lt;p&gt;Try adjusting some settings to find the best results for your use case and picture. Results will vary!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#thanks-for-reading"&gt;
  &lt;/a&gt;
  Thanks for reading!
&lt;/h2&gt;

&lt;p&gt;Find me on GitHub at: &lt;a href="https://github.com/alfg"&gt;https://github.com/alfg&lt;/a&gt; for more video-related projects!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ffmpeg.org/"&gt;https://ffmpeg.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://trac.ffmpeg.org/wiki/Encode/H.264"&gt;https://trac.ffmpeg.org/wiki/Encode/H.264&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://handbrake.fr/"&gt;https://handbrake.fr/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://help.instagram.com/1038071743007909"&gt;Video upload requirements for IGTV &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mediaarea.net/en/MediaInfo"&gt;https://mediaarea.net/en/MediaInfo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>ffmpeg</category>
      <category>instagram</category>
      <category>video</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>A Gentle Reminder to Take a Vacation</title>
      <author>Anna</author>
      <pubDate>Thu, 20 May 2021 17:56:38 +0000</pubDate>
      <link>https://dev.to/annaspies/a-gentle-reminder-to-take-a-vacation-4ffn</link>
      <guid>https://dev.to/annaspies/a-gentle-reminder-to-take-a-vacation-4ffn</guid>
      <description>&lt;p&gt;I landed on my own Github profile the other day, which is a pretty rare occurrence as I'm usually looking for repos in my company's account, but I was in search of a tutorial project I had done a while back. It had been a minute, and I noticed the Github wizards had further expanded the contributions panel (yay, code reviews are finally acknowledged!). But I also saw something more disturbing: too much green.&lt;/p&gt;

&lt;p&gt;Let me explain.&lt;/p&gt;

&lt;p&gt;I started coding for a living in 2018. This is what my contributions look like from that year:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--une_LxG_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m5m9v7vkt47xv8iw9ynm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--une_LxG_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m5m9v7vkt47xv8iw9ynm.png" alt="2018 Github contributions"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The big gap in May is the period between finishing code school and getting a job in June (during which I went to Mexico, because YOLO). There's a gap in September when I took a week off to meet my parents in San Francisco and drive up through the redwoods with them back to Portland (highly recommended), and then a winter holiday break in December into January 2019.&lt;/p&gt;

&lt;p&gt;Next, there's 2019, my first full year of working as a software engineer:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--81vpkQbK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qdmffkdqd79ua59gsrl1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--81vpkQbK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qdmffkdqd79ua59gsrl1.png" alt="2019 Github contributions"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are some solid gaps in there: May 2019, when family from Poland came to visit and we toured up and down the West Coast. October, when I flew to Germany and Poland for more family time and a wedding. Another couple of weeks off for the holidays in December-January. Good times.&lt;/p&gt;

&lt;p&gt;And then... 2020.&lt;/p&gt;

&lt;p&gt;I suppose this one won't be too surprising - there was this little thing about a global pandemic and all:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TnurtmaS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bbtnka1rkbrpxpyjw1z5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TnurtmaS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bbtnka1rkbrpxpyjw1z5.png" alt="2020 Github contributions"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Wow, so solid green it would give that subway station envy. Ok, there's one little gap: in October, around my birthday, I took a road trip to the &lt;a href="https://traveloregon.com/things-to-do/destinations/parks-forests-wildlife-areas/the-alvord-desert/"&gt;Alvord Desert&lt;/a&gt; (also highly recommended). But that didn't even last a full week.&lt;/p&gt;

&lt;p&gt;And yeah, it makes sense. We were in lockdown. There was literally nowhere to go most of the year, and a pandemic killing millions that made even weekend trips seem like unnecessary risks. Understandable.&lt;/p&gt;

&lt;p&gt;But what I saw that disturbed me was my 2021 so far:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UPRO6eAr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ira2zkxpeam8n58f2jnt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UPRO6eAr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ira2zkxpeam8n58f2jnt.png" alt="2021 Github contributions"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pretty dang solid. And possibly on the road to burnout (anyone else feel that?).&lt;/p&gt;

&lt;p&gt;Luckily, I'm now fully vaccinated, and taking my first full week off next week to go on a road trip (by car, to a pretty remote area, because the pandemic's not over). Even planning it a few weeks back felt strange, as if vacations are another thing the pandemic took away. But that doesn't have to be the case.&lt;/p&gt;

&lt;p&gt;So, for whoever needs to hear it: this is a gentle reminder to take a vacation. Even if you can't go anywhere yet, your mind and body need time away from the green squares. You'll thank yourself later.&lt;/p&gt;

</description>
      <category>devjournal</category>
      <category>career</category>
      <category>productivity</category>
      <category>webdev</category>
    </item>
    <item>
      <title>I tried Frontend Mentor for a week.</title>
      <author>Munem Prionto</author>
      <pubDate>Thu, 20 May 2021 17:47:20 +0000</pubDate>
      <link>https://dev.to/munemprionto/i-tried-frontend-mentor-for-a-week-10oi</link>
      <guid>https://dev.to/munemprionto/i-tried-frontend-mentor-for-a-week-10oi</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--C8dW4ldU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ptl12eutr4df03m0almo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C8dW4ldU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ptl12eutr4df03m0almo.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
¬†&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-is-frontend-mentor"&gt;
  &lt;/a&gt;
  What is Frontend Mentor?
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://www.frontendmentor.io/"&gt;Frontend Mentor&lt;/a&gt; is a platform where you can solve real-world HTML, CSS and JavaScript challenges whilst working to professional designs.&lt;br&gt;
¬†&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Categories&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;One of my favorite things about &lt;a href="https://www.frontendmentor.io/"&gt;Frontend Mentor&lt;/a&gt; is the barrier to entry is very low which makes it very beginner friendly. But that doesn't mean it is only for beginners. There is something for everyone. The challenges are well categorized (Newbie, Junior, Intermediate, Advanced, Guru) So you can choose your level.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Versions&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are two versions. One is a free version and the other is the PRO version (paid). I only tried the free version and I have been very pleased with it. You can check out the differences here &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--POP_3tJv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dsj7adjwqtx6rj2e8u4t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--POP_3tJv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dsj7adjwqtx6rj2e8u4t.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Scoring system&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It has a very engaging scoring system. You earn points through  solving problems and interacting with the community. Badges were introduced on Jun 15, 2020. You can earn the badges through points. And it was a great addition. It acts as a motivational incentive for those who are competitive.But don't get disheartened if you don't see yourself at the top. The scoring system is more geared towards being an active member of the community than being the best developer. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--F73WyBg8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1szm9z04ilu6e2b5kd9n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F73WyBg8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1szm9z04ilu6e2b5kd9n.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can also check the Wall of Fame to see the leader board.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Community&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The community is very helpful. You will get feedback almost instantly. You also get points for interacting and by getting up votes on your comments which is an added incentive.  &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Escaping Tutorial Hell&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Every self-taught developer has gone through tutorial hell. And it is very difficult to get out of it. But &lt;a href="https://www.frontendmentor.io/"&gt;Frontend Mentor&lt;/a&gt; does a wonderful job of helping you get out it. It is also helpful for those who want to code and learn rather than building up a website from scratch.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; &lt;strong&gt;Learning Git/GitHub&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Many beginner developers are scared of the idea of learning git and &lt;a href="https://github.com/"&gt;GitHub&lt;/a&gt; as it has quite a steep learning curve but fem forces you (in a good way) to learn git and &lt;a href="https://github.com/"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Learning Hosting&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Hosting is an important part of Web Development. &lt;a href="https://www.frontendmentor.io/"&gt;Frontend Mentor&lt;/a&gt; provides a shortlist of free hosting platforms that can be used to host your static websites. &lt;br&gt;
¬†&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons
&lt;/h1&gt;

&lt;p&gt;To be honest, I wasn‚Äôt dissatisfied with any part. It was overall a very good experience.&lt;/p&gt;

&lt;p&gt;¬†&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#tips"&gt;
  &lt;/a&gt;
  Tips
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt; &lt;strong&gt;Don't skip challenges&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It might be tempting to pass on challenges you find too easy. Again on the flip side, you might get stuck on a challenge you find difficult. Try your best not to skip it. Push your boundaries and get out of your comfort zone as often as possible. That is the only way to grow.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Create a separate GitHub repository&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you plan on doing more than 5 challenges, creating a single repository for every challenge might populate your &lt;a href="https://github.com/"&gt;GitHub&lt;/a&gt; repository and it will be hard for you to find the repository in the future. So my recommendation would be to keep all the challenges in a single repository and keeping every project/challenge in a different folder inside the repository&lt;br&gt;
¬†&lt;br&gt;
Example - &lt;a href="https://github.com/Munem-Prionto/frontendmentor.io"&gt;https://github.com/Munem-Prionto/frontendmentor.io&lt;/a&gt;&lt;br&gt;
¬†&lt;br&gt;
P.S : I don‚Äôt know if this is conventionally correct but I personally find this process helpful.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Write READMEs&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://www.frontendmentor.io/"&gt;Frontend Mentor&lt;/a&gt; provides you with a README template. You might want to skip writing the README but it is a good practice to write README because if someone visits your repository, the README will enable them to understand the project. It is the medium of communication between you and the users.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Time-box yourself&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There is no time limit on the challenges which is a good thing as you can go at your own pace but it can also be a bad thing. When there is no time limit we tend to waste more time. So time-boxing yourself is a great way to tackle this problem. When you take a challenge, estimate the time that you need to complete this project/challenge and try your best to complete it within your estimation. This will also help you to understand yourself and your skill level. It will also improve your estimation game which will come in handy if you venture into freelancing. But don't get disheartened if you fail to complete it within your estimation.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Compete with your friends&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you have friends that are on the same skill level as you, have a friendly competition. Who can do the most challenges? Who can do it faster?  Who can do it better? But avoid comparing yourself with someone who is clearly ahead of you and has put in more hours than you. Be realistic whilst comparing with others. And keep in mind that everyone has a different learning speed.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;DON‚ÄôT  be a perfectionist&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A lot of us have a perfectionist mindset but being a perfectionist can slow you down. If your website is close enough  to the design and looks good, submit the challenge and move on to the next one. Use the design as a guideline and not the finished product.&lt;/p&gt;

&lt;p&gt;¬†&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#my-experience"&gt;
  &lt;/a&gt;
  My experience
&lt;/h1&gt;

&lt;p&gt;In the last 7 days , I learned a lot from &lt;a href="https://www.frontendmentor.io/"&gt;Frontend Mentor&lt;/a&gt;. It helped me get motivated to code again and do it consistently. It got me out of tutorial hell.  I tried my best to get the "Mentor of the week" badge (solved 16 newbie and junior challenges) but came up a little short. But it was still a great experience. My goal is to complete all the challenges the free version provides. And if you are willing to take your HTML CSS and JavaScript skill to the next level, I recommend &lt;a href="https://www.frontendmentor.io/"&gt;Frontend Mentor&lt;/a&gt; highly. It is an amazing platform. &lt;/p&gt;

&lt;p&gt;¬†¬†&lt;/p&gt;

&lt;p&gt;Lastly I would recommend you to take my advice with a pinch of salt as i am a beginner myself. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://munemprionto.netlify.app/"&gt;Munem Prionto&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>html</category>
      <category>css</category>
    </item>
    <item>
      <title>How to Automagically Take Notes From Podcasts Without Typing A Word</title>
      <author>Patryk Jeziorowski</author>
      <pubDate>Thu, 20 May 2021 17:35:25 +0000</pubDate>
      <link>https://dev.to/pjeziorowski/how-to-automagically-take-notes-from-podcasts-without-typing-a-word-123m</link>
      <guid>https://dev.to/pjeziorowski/how-to-automagically-take-notes-from-podcasts-without-typing-a-word-123m</guid>
      <description>&lt;p&gt;Listening to podcasts is a great way to learn. It's a shame that taking notes of the most insightful information we hear forces us to pick up our phones or look for our pens and journals. It's disturbing and sometimes not even possible, especially while driving a car or having our hands occupied in any other way. Luckily, there are services and apps that make this process fully automatic, without requiring us to type a word.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-we-can-achieve"&gt;
  &lt;/a&gt;
  What we can achieve
&lt;/h2&gt;

&lt;p&gt;Imagine going for a walk with AirPods in your ears. You hear something very insightful. You press a button on a headphone. The valuable sentence you just heard is saved as text in your note-taking system (alongside the link to the podcast episode with the exact timing of the quote).&lt;/p&gt;

&lt;p&gt;Sounds cool, doesn't it? It's pretty easy to achieve by integrating a few services and an app on our phone. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#first-step-airr"&gt;
  &lt;/a&gt;
  First step - Airr
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.airr.io/"&gt;Airr&lt;/a&gt; is a podcast player that allows taking so-called &lt;strong&gt;AirrQuotes&lt;/strong&gt;. AirrQuotes are highlights of the best moments we hear in podcasts. When we hear something insightful, all we need to do is to press a button on AirPods (applies to Apple AirPods users - for other hardware users, you'll probably have other options). &lt;/p&gt;

&lt;p&gt;Airr allows exporting all the AirQuotes automagically to other services, alongside text transcription of the quote. It all happens automatically, without requiring us to trigger export manually.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#second-step-readwise"&gt;
  &lt;/a&gt;
  Second step - Readwise
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://readwise.io/"&gt;Readwise&lt;/a&gt; is an extremely useful service. It's a hub for highlights and notes from other systems - note something in Kindle, take AirrQuote in Podcast app, highlight something in RSS reader - all of this can be automatically ingested by Readwise and stored in one place. &lt;a href="https://help.readwise.io/article/103-how-do-i-save-highlights-from-the-podcasts-i-listen-to-using-airr"&gt;Steps for integrating it with Airr are extremely simple&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Right now, I'm exporting highlights from 8 apps and services to my Readwise hub.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Aln7wNri--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d0kcr6fvr8jvbh78sx0h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Aln7wNri--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d0kcr6fvr8jvbh78sx0h.png" alt="Readwise Integrations"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But, what is the most important, Readwise also allows exporting everything we ingest automatically to other systems (e.g. note-taking apps) like Notion, Evernote, Roam etc.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#third-step-notetaking-app"&gt;
  &lt;/a&gt;
  Third step - note-taking app
&lt;/h2&gt;

&lt;p&gt;I use Readwise to export all my notes (including AirrQuotes from podcasts, which are stored safely in my Readwise) to the best note-taking (it's an understatement) app in this world - &lt;a href="https://roamresearch.com/"&gt;Roam&lt;/a&gt; (I'm not sorry for this biased, strong opinion. Roam rulez).&lt;/p&gt;

&lt;p&gt;All we need to do to set up the integration is to sign up and follow easy steps from the manual, which takes less than a minute. This process will depend on what app you use to store your notes. In my case, it looked like &lt;a href="https://help.readwise.io/article/71-how-does-the-readwise-to-roam-export-integration-work"&gt;this&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#enjoy"&gt;
  &lt;/a&gt;
  Enjoy
&lt;/h2&gt;

&lt;p&gt;That's it. Having it all done, we can reward ourselves by going for a walk, listening to a podcast, and taking notes of the best insights with a single button click on our earphone.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zsh3sINc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fdcss0z5jfpmvewll496.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zsh3sINc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fdcss0z5jfpmvewll496.png" alt="Automatic Notes From Podcasts"&gt;&lt;/a&gt; &lt;/p&gt;

</description>
      <category>productivity</category>
      <category>blogging</category>
      <category>learning</category>
      <category>automation</category>
    </item>
    <item>
      <title>Inner and Outer Joins in SQL</title>
      <author>Kirsty Brewster</author>
      <pubDate>Thu, 20 May 2021 17:30:52 +0000</pubDate>
      <link>https://dev.to/kirstybrews/inner-and-outer-joins-in-sql-3ddm</link>
      <guid>https://dev.to/kirstybrews/inner-and-outer-joins-in-sql-3ddm</guid>
      <description>&lt;p&gt;I'm currently refreshing my knowledge of SQL and am starting with inner and outer joins. With any type of join, there has to be a relationship between two or more tables. This is done with a &lt;em&gt;foreign key&lt;/em&gt;, which connects data from one table to some data from another table. A join then returns the shared data from both tables. &lt;/p&gt;

&lt;p&gt;I'll go over the different types of joins throughout this blog post, but first, let's view the tables we'll be using as examples. This is an example from W3Schools. &lt;a href="https://www.w3schools.com/sql/sql_join.asp"&gt;Check out their tutorials here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Table 1:&lt;/strong&gt; Customers&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;id&lt;/th&gt;
&lt;th&gt;first_name&lt;/th&gt;
&lt;th&gt;last_name&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;Ana&lt;/td&gt;
&lt;td&gt;Trujillo&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;Antonio&lt;/td&gt;
&lt;td&gt;Moreno&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;Ernst&lt;/td&gt;
&lt;td&gt;Handel&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Table 2:&lt;/strong&gt; Orders&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;id&lt;/th&gt;
&lt;th&gt;customer_id&lt;/th&gt;
&lt;th&gt;order_date&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;05-19-2021&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;05-20-2021&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;05-21-2021&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#inner-join"&gt;
  &lt;/a&gt;
  Inner Join
&lt;/h3&gt;

&lt;p&gt;Our first example is an inner join. This type of join will compare some tables using a &lt;em&gt;foreign key&lt;/em&gt;, as mentioned earlier, and return only the matching info from the queried tables.&lt;/p&gt;

&lt;p&gt;We could write our join clause like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;SELECT Customer.first_name AS "customer_first_name", Customer.last_name AS "customer_last_name", Order.order_date
FROM Customers
INNER JOIN Orders
ON Customers.id=Orders.customer_id
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This would return:&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;customer_first_name&lt;/th&gt;
&lt;th&gt;customer_last_name&lt;/th&gt;
&lt;th&gt;order_date&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Ana&lt;/td&gt;
&lt;td&gt;Trujillo&lt;/td&gt;
&lt;td&gt;05-19-2021&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Antonio&lt;/td&gt;
&lt;td&gt;Moreno&lt;/td&gt;
&lt;td&gt;05-20-2021&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Notice how I renamed some of my columns. This is called an &lt;em&gt;alias&lt;/em&gt;. We can do this to better keep track of which table each column is from.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#outer-join"&gt;
  &lt;/a&gt;
  Outer Join
&lt;/h3&gt;

&lt;p&gt;An outer join returns what an inner join would, but also includes rows without matching info from the other table. There are three different types of outer joins.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#left-outer-join"&gt;
  &lt;/a&gt;
  Left Outer Join
&lt;/h4&gt;

&lt;p&gt;The left join returns all the data in the left-most table (or table 1), plus the shared data from table 2. If any info returned by table 1 is not in table 2, it will return NULL instead.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;SELECT Customer.first_name AS "customer_first_name", Customer.last_name AS "customer_last_name", Order.order_date
FROM Customers
LEFT OUTER JOIN Orders
ON Customers.id=Orders.customer_id
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;customer_first_name&lt;/th&gt;
&lt;th&gt;customer_last_name&lt;/th&gt;
&lt;th&gt;order_date&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Ana&lt;/td&gt;
&lt;td&gt;Trujillo&lt;/td&gt;
&lt;td&gt;05-19-2021&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Antonio&lt;/td&gt;
&lt;td&gt;Moreno&lt;/td&gt;
&lt;td&gt;05-20-2021&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ernst&lt;/td&gt;
&lt;td&gt;Handel&lt;/td&gt;
&lt;td&gt;NULL&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h4&gt;
  &lt;a href="#right-outer-join"&gt;
  &lt;/a&gt;
  Right Outer Join
&lt;/h4&gt;

&lt;p&gt;The right join does what the left outer join does. Just flipped. It returns all info from table 2 (or the table to the right), plus the shared data from table 1.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;SELECT Customer.first_name AS "customer_first_name", Customer.last_name AS "customer_last_name", Order.order_date
FROM Customers
RIGHT OUTER JOIN Orders
ON Customers.id=Orders.customer_id
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;customer_first_name&lt;/th&gt;
&lt;th&gt;customer_last_name&lt;/th&gt;
&lt;th&gt;order_date&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Ana&lt;/td&gt;
&lt;td&gt;Trujillo&lt;/td&gt;
&lt;td&gt;05-19-2021&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Antonio&lt;/td&gt;
&lt;td&gt;Moreno&lt;/td&gt;
&lt;td&gt;05-20-2021&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;NULL&lt;/td&gt;
&lt;td&gt;NULL&lt;/td&gt;
&lt;td&gt;05-21-2021&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h4&gt;
  &lt;a href="#full-outer-join"&gt;
  &lt;/a&gt;
  Full Outer Join
&lt;/h4&gt;

&lt;p&gt;The full join will return all info from both tables. It's essentially reproducing all info, but in one table instead of two. Again, if any info isn't shared by the other table, NULL will be returned.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;SELECT Customer.first_name AS "customer_first_name", Customer.last_name AS "customer_last_name", Order.order_date
FROM Customers
FULL OUTER JOIN Orders
ON Customers.id=Orders.customer_id
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;customer_first_name&lt;/th&gt;
&lt;th&gt;customer_last_name&lt;/th&gt;
&lt;th&gt;order_date&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Ana&lt;/td&gt;
&lt;td&gt;Trujillo&lt;/td&gt;
&lt;td&gt;05-19-2021&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Antonio&lt;/td&gt;
&lt;td&gt;Moreno&lt;/td&gt;
&lt;td&gt;05-20-2021&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ernst&lt;/td&gt;
&lt;td&gt;Handel&lt;/td&gt;
&lt;td&gt;NULL&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;NULL&lt;/td&gt;
&lt;td&gt;NULL&lt;/td&gt;
&lt;td&gt;05-21-2021&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#where-do-we-go-from-here"&gt;
  &lt;/a&gt;
  Where do we go from here?
&lt;/h3&gt;

&lt;p&gt;Using a join for two tables is as simple as it gets. Once we get used to it, we can start joining more than two tables! We might have situations where we want to relate two tables to each other with a third table. For example, we could have a table called 'Kittens', a table called 'Owners' and another table called 'Adoptions' to keep track of owners and which kittens they adopt. This is called a 'many-to-many relationship', whereas the customers and orders example throughout this blog is an example of a 'one-to-many relationship'.&lt;/p&gt;

&lt;p&gt;Why use join queries then?&lt;/p&gt;

&lt;p&gt;Join queries are a way to retrieve certain information from related tables. From the kitten adoption example, our 'Adoptions' table only holds the owner ID and the kitten ID. We'd use a join query to be able to view more information about the owners and the kittens.&lt;/p&gt;

&lt;p&gt;Hope this was helpful! It was certainly a good review for me.&lt;/p&gt;

&lt;p&gt;Resources: &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://www.diffen.com/difference/Inner_Join_vs_Outer_Join"&gt;Inner Join vs Outer Join&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3schools.com/sql/sql_join.asp"&gt;SQL Joins - W3 Schools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://learn.co/lessons/sql-joins-readme"&gt;SQL Joins - Learn.co&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>sql</category>
      <category>database</category>
      <category>beginners</category>
    </item>
    <item>
      <title>VacCoWIN - Book CoWIN Slots directly from your Terminal...</title>
      <author>Dhruv Panchal</author>
      <pubDate>Thu, 20 May 2021 17:30:08 +0000</pubDate>
      <link>https://dev.to/dhhruv/vaccowin-book-cowin-slots-directly-from-your-terminal-bba</link>
      <guid>https://dev.to/dhhruv/vaccowin-book-cowin-slots-directly-from-your-terminal-bba</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.cowin.gov.in/home"&gt;CoWIN Portal&lt;/a&gt;&lt;/strong&gt; is used to self-register yourself for the &lt;strong&gt;Vaccination&lt;/strong&gt; process in India. Here you can register yourself with your Phone Number and avail a slot from the available slots in various Vaccination Centres around the country.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#about"&gt;
  &lt;/a&gt;
  About
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;VacCowin&lt;/strong&gt; is a CLI based Python Script that can be used to perform tasks such as OTP Generation till Vaccination Slot Booking from Co-WIN Platform directly from your Terminal.  This script rechecks after every few seconds and when the slots are available, it &lt;strong&gt;confirms the slot only after you enter the captcha shown on the screen.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Since India has started the Vaccination Drive for those above 18 years of age, there is a very heavy rush and slots get booked soon. This script will come in handy for booking those slots as soon as they open.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;IMPORTANT: This is a Proof of Concept (POC) Project. I OR the Team do NOT endorse or condone, in any shape or form, automating any monitoring/booking tasks. It's only made for Educational Purposes. Use this at your own risk.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The data used is retrieved using the open APIs at &lt;a href="https://apisetu.gov.in/public/marketplace/api/cowin"&gt;API Setu&lt;/a&gt;. It works on both Linux and Windows.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/dhhruv"&gt;
        dhhruv
      &lt;/a&gt; / &lt;a href="https://github.com/dhhruv/Vac-Cowin"&gt;
        Vac-Cowin
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      üíâ One Stop Solution for Booking Vaccination Slots available in the CoWIN Portal directly from your Terminal...
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting Started
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Install Python&lt;/li&gt;
&lt;li&gt;Clone this repository...
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git clone https://github.com/dhhruv/Vac-Cowin.git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;OR&lt;/strong&gt;&lt;br&gt;
Download the Zip and Extract the content.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Install, create and activate virtual environment.
For instance we create a virtual environment named 'venv'.
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;pip &lt;span class="nb"&gt;install &lt;/span&gt;virtualenv
python &lt;span class="nt"&gt;-m&lt;/span&gt; virtualenv venv
venv&lt;span class="se"&gt;\S&lt;/span&gt;cripts&lt;span class="se"&gt;\a&lt;/span&gt;ctivate.bat
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Install dependencies
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;Vac-Cowin
pip &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-r&lt;/span&gt; requirements.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/dhhruv"&gt;
        dhhruv
      &lt;/a&gt; / &lt;a href="https://github.com/dhhruv/Vac-Cowin"&gt;
        Vac-Cowin
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      üíâ One Stop Solution for Booking Vaccination Slots available in the CoWIN Portal directly from your Terminal...
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#usage"&gt;
  &lt;/a&gt;
  Usage
&lt;/h2&gt;

&lt;p&gt;Will be Updated after Testing...&lt;/p&gt;

&lt;p&gt;Check out yourself and send me a Screenshot if found useful...&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#contributing"&gt;
  &lt;/a&gt;
  Contributing
&lt;/h2&gt;

&lt;p&gt;Any contributions you make are &lt;strong&gt;greatly appreciated&lt;/strong&gt;.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Fork the Project&lt;/li&gt;
&lt;li&gt;Create your Feature Branch (&lt;code&gt;git checkout -b feature/AmazingFeature&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Commit your Changes (&lt;code&gt;git commit -m 'Add some AmazingFeature'&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Push to the Branch (&lt;code&gt;git push origin feature/AmazingFeature&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Open a Pull Request&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#license"&gt;
  &lt;/a&gt;
  License
&lt;/h2&gt;

&lt;p&gt;Distributed under the MIT License. See &lt;code&gt;LICENSE&lt;/code&gt; for more information.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#team-members"&gt;
  &lt;/a&gt;
  Team Members:
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt; &lt;a href="https://github.com/dhhruv"&gt;Dhruv Panchal&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://github.com/urvesh254"&gt;Urveshkumar Patel&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://github.com/nirami98"&gt;Nirja Desai&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/dhhruv"&gt;
        dhhruv
      &lt;/a&gt; / &lt;a href="https://github.com/dhhruv/Vac-Cowin"&gt;
        Vac-Cowin
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      üíâ One Stop Solution for Booking Vaccination Slots available in the CoWIN Portal directly from your Terminal...
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#important"&gt;
  &lt;/a&gt;
  Important:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;This is a Proof of Concept Project. &lt;strong&gt;I OR the Team&lt;/strong&gt; do NOT endorse or condone, in any shape or form, automating any monitoring/booking tasks. &lt;strong&gt;It's only made for Educational Purposes. Use this at your own risk.&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;This &lt;strong&gt;Python Script CANNOT book slots automatically&lt;/strong&gt;. It doesn't skip any of the steps that a User would have to take on the official portal. You will still have to enter the OTP and Captcha as you do in the CoWIN Portal.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Do NOT&lt;/strong&gt; use unless all the beneficiaries selected are supposed to get the same Vaccine and Dose.&lt;/li&gt;
&lt;li&gt;There is &lt;strong&gt;no option&lt;/strong&gt; to Register a new Phone/Mobile or add beneficiaries for now. This can be used only after beneficiary has been added through the official Portal/App.&lt;/li&gt;
&lt;li&gt;Be careful if you're choosing to use the auto-book feature. It will blindly select first available Vaccination &lt;strong&gt;Centre, Date (Both Sorted Ascending) and a RANDOM slot&lt;/strong&gt;. I would not recommend using this feature unless and until it's crucial.&lt;/li&gt;
&lt;li&gt;If you accidentally booked a slot you didn't want to then don‚Äôt worry. You can always log in to the CoWIN Portal and cancel/re-schedule that.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;API Details (Do read the first paragraph): &lt;a href="https://apisetu.gov.in/public/marketplace/api/cowin/cowin-public-v2"&gt;https://apisetu.gov.in/public/marketplace/api/cowin/cowin-public-v2&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>codenewbie</category>
      <category>productivity</category>
      <category>beginners</category>
      <category>python</category>
    </item>
    <item>
      <title>HTML and CSS mistakes which I get to meet as person without disabilities. Part 2</title>
      <author>Stas Melnikov</author>
      <pubDate>Thu, 20 May 2021 17:29:44 +0000</pubDate>
      <link>https://dev.to/melnik909/html-and-css-mistakes-which-i-get-to-meet-as-person-without-disabilities-part-2-29me</link>
      <guid>https://dev.to/melnik909/html-and-css-mistakes-which-i-get-to-meet-as-person-without-disabilities-part-2-29me</guid>
      <description>&lt;p&gt;In last year I collected some &lt;a href="https://dev.to/melnik909/html-and-css-mistakes-which-i-get-to-meet-as-person-without-disabilities-2cbd"&gt;cases when&lt;/a&gt; HTML and CSS mistakes make accessibility of interfaces worse. In this article I'd like to share more cases. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-the-justifycontent-and-alignitems-make-users-suffer"&gt;
  &lt;/a&gt;
  How the justify-content and align-items make users suffer
&lt;/h2&gt;

&lt;p&gt;When we solve issues of alignment we like to use alignment properties such as justify-content or align-items. But few people know these properties can lead to losing data, particularly frequent, when vertical alignment.&lt;/p&gt;

&lt;p&gt;This is due to how these properties work. This process includes the two terms. The first, the alignment container is an element to that you declare the alignment properties. &lt;/p&gt;

&lt;p&gt;The second, the alignment subject is elements that are inside of the alignment container. The alignment properties affect them.&lt;/p&gt;

&lt;p&gt;So there is the case when the alignment subjects' sizes are larger than the alignment container's sizes. In the default alignment mode, it'll lead to overflow and loss of data. So users will see the cropped element.&lt;/p&gt;

&lt;p&gt;I created the example with the modal element to show this behavior. At first, the text is short. But when we make it more we lose the heading and the close button.&lt;/p&gt;

&lt;p&gt;We can fix it using auto margins because it uses extra space to align elements and doesn't lead to overflow. Take a look at how elements are no longer lost.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;don't do this&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"modal"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"modal__main"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.modal&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;You can use this instead&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"modal"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"modal__main"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.modal&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.modal__main&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nIY8JvoC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://stas-melnikov.ru/image4.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nIY8JvoC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://stas-melnikov.ru/image4.jpg" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#you-make-text-unavailable"&gt;
  &lt;/a&gt;
  You make text unavailable
&lt;/h2&gt;

&lt;p&gt;Nowadays we often use custom fonts so that our interface looks more unique. Custom fonts aren't in our systems so we have to load them but it takes some time and the issue is what to display at this time.&lt;/p&gt;

&lt;p&gt;By default, a browser waits while a font is loaded so he displays nothing. But we can change it that a browser uses the fallback for displaying text. &lt;/p&gt;

&lt;p&gt;There is the font-display descriptor that determines how a font face is displayed based on whether and when it is downloaded and ready to use. &lt;/p&gt;

&lt;p&gt;We can use the swap value that instructs the browser to use the fallback to display the text until the custom font is fully downloaded. &lt;/p&gt;

&lt;p&gt;This trick helps an user start to interact with an interface faster and to reach its goals.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;don't do this&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@font-face&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;"Baloo Tamma"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;src&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sx"&gt;url("balotamma.woff2")&lt;/span&gt; &lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;"woff2"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
       &lt;span class="sx"&gt;url("balotamma.woff")&lt;/span&gt; &lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;"woff"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;You can use this instead&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@font-face&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;"Baloo Tamma"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;src&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sx"&gt;url("balotamma.woff2")&lt;/span&gt; &lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;"woff2"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
       &lt;span class="sx"&gt;url("balotamma.woff")&lt;/span&gt; &lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;"woff"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="py"&gt;font-display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;swap&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UNUncoXd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://stas-melnikov.ru/image5.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UNUncoXd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://stas-melnikov.ru/image5.jpg" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#your-svg-icons-break-your-interfaces"&gt;
  &lt;/a&gt;
  Your SVG icons break your interfaces
&lt;/h2&gt;

&lt;p&gt;When you use SVG icons right in a HTML document, pay attention you have to set the width and height attributes. If you don't do it and you rely on you set the width and height properties in CSS your interface will be broken.&lt;/p&gt;

&lt;p&gt;Your CSS might not be loaded and at this point, the icons will try to fill all of the available space. So the mistake happens. Just set the width and height attributes and can sleep easy. Your interfaces will be bulletproof!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;don't do this&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;svg&lt;/span&gt; &lt;span class="na"&gt;xmlns=&lt;/span&gt;&lt;span class="s"&gt;"http://www.w3.org/2000/svg"&lt;/span&gt;
    &lt;span class="na"&gt;viewBox=&lt;/span&gt;&lt;span class="s"&gt;"0 0 448 512"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;path&lt;/span&gt; &lt;span class="na"&gt;fill=&lt;/span&gt;&lt;span class="s"&gt;"currentColor"&lt;/span&gt; &lt;span class="na"&gt;d=&lt;/span&gt;&lt;span class="s"&gt;"..."&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/path&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;svg&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.875rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;You can use this instead&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;svg&lt;/span&gt; &lt;span class="na"&gt;xmlns=&lt;/span&gt;&lt;span class="s"&gt;"http://www.w3.org/2000/svg"&lt;/span&gt;
    &lt;span class="na"&gt;viewBox=&lt;/span&gt;&lt;span class="s"&gt;"0 0 448 512"&lt;/span&gt;
    &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"0.875rem"&lt;/span&gt;
    &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;"1rem"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;path&lt;/span&gt; &lt;span class="na"&gt;fill=&lt;/span&gt;&lt;span class="s"&gt;"currentColor"&lt;/span&gt; &lt;span class="na"&gt;d=&lt;/span&gt;&lt;span class="s"&gt;"..."&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/path&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#you-dont-need-to-use-heavy-images-for-any-type-of-devices"&gt;
  &lt;/a&gt;
  You don't need to use heavy images for any type of devices
&lt;/h2&gt;

&lt;p&gt;Our users face too heavy images when they take a look at websites. If they have high-speed internet isn't an important problem but often users remained where there are problems with the internet. It's might be the subway, nature, or another country. I think we have to help users use our apps.&lt;/p&gt;

&lt;p&gt;The good idea is to help a browser doesn't load heavy images with cell phones or other mobile devices. And I want to share the solution that'll do it.&lt;/p&gt;

&lt;p&gt;This solution is known as the picture element that allows defining the set of images' source paths so that a browser can load the most appropriate image for devices. &lt;/p&gt;

&lt;p&gt;For example, we can create 2 source elements and define the width media feature to detect pads and desktops. Also, we will use the img element for cell phones. Then browsers will choose the image that best suits users. &lt;/p&gt;

&lt;p&gt;Pay attention, I use the mobile-first approach so if the picture isn't supported by browsers or the user came using a cell phone the small image will be shown. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;don't do this&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; 
  &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"ferrari-1920x1080.jpg"&lt;/span&gt;
  &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"yellow ferrari F8 spider on the background of the ocean"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;You can use this instead&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;picture&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;source&lt;/span&gt; 
    &lt;span class="na"&gt;srcset=&lt;/span&gt;&lt;span class="s"&gt;"ferrari-1200x960.jpg"&lt;/span&gt;
    &lt;span class="na"&gt;media=&lt;/span&gt;&lt;span class="s"&gt;"(min-width: 641px) and (max-width: 1200px)"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;source&lt;/span&gt; 
    &lt;span class="na"&gt;srcset=&lt;/span&gt;&lt;span class="s"&gt;"ferrari-1920x1080.jpg"&lt;/span&gt;
    &lt;span class="na"&gt;media=&lt;/span&gt;&lt;span class="s"&gt;"(min-width: 1201px)"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; 
  &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; 
    &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"ferrari-640x480.jpg"&lt;/span&gt;
    &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"yellow ferrari F8 spider on the background of the ocean"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/picture&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Also, you can use the display density descriptor and the scrset attribute to suggest which image is better for a specific device taking into account pixel density.&lt;/p&gt;

&lt;p&gt;For example, if a cell phone has 2x pixel density or more a browser loads the ferrari-640x480-2x.jpg image using the 2x descriptor. But if it has 1x pixel density the ferrari-640x480-1x image will be loaded. Also this rule will work for pads and desktop devices.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;don't do this&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; 
  &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"ferrari-1920x1080.jpg"&lt;/span&gt;
  &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"yellow ferrari F8 spider on the background of the ocean"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;You can use this instead&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; 
  &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"ferrari-1x.jpg"&lt;/span&gt;
  &lt;span class="na"&gt;srcset=&lt;/span&gt;&lt;span class="s"&gt;"ferrari-2x.jpg 2x"&lt;/span&gt;
  &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"yellow ferrari F8 spider on the background of the ocean"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="c"&gt;&amp;lt;!-- or --&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;picture&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;source&lt;/span&gt; 
    &lt;span class="na"&gt;srcset=&lt;/span&gt;&lt;span class="s"&gt;"ferrari-1200x960-1x.jpg,
            ferrari-1200x960-2x.jpg 2x"&lt;/span&gt;
    &lt;span class="na"&gt;media=&lt;/span&gt;&lt;span class="s"&gt;"(min-width: 641px) and (max-width: 1200px)"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;source&lt;/span&gt; 
    &lt;span class="na"&gt;srcset=&lt;/span&gt;&lt;span class="s"&gt;"ferrari-1920x1080-1x.jpg,
            ferrari-1920x1080-2x.jpg 2x"&lt;/span&gt;
    &lt;span class="na"&gt;media=&lt;/span&gt;&lt;span class="s"&gt;"(min-width: 1201px)"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; 
  &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; 
    &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"ferrari-640x480-1x.jpg,
         ferrari-640x480-2x.jpg 2x"&lt;/span&gt;
    &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"yellow ferrari F8 spider on the background of the ocean"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/picture&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;P.S.&lt;/strong&gt; If you like these tips go to read others on my &lt;a href="https://www.linkedin.com/in/melnik909/"&gt;Linkedin&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>css</category>
      <category>html</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
  </channel>
</rss>
