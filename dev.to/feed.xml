<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Day 6 - Responsive Web Design Principles | #100DaysOfCode</title>
      <author>MD Jannatin Naim</author>
      <pubDate>Fri, 03 Dec 2021 14:29:33 +0000</pubDate>
      <link>https://dev.to/jannatinnaim/day-6-responsive-web-design-principles-100daysofcode-28cg</link>
      <guid>https://dev.to/jannatinnaim/day-6-responsive-web-design-principles-100daysofcode-28cg</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nYkUroCQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jvyuxmcxapokv4lxivxw.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nYkUroCQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jvyuxmcxapokv4lxivxw.jpg" alt="Coding Motivation Banner" width="880" height="587"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-did-i-learn-today"&gt;
  &lt;/a&gt;
  What did I learn today?
&lt;/h3&gt;

&lt;p&gt;Today I learnt about responsive web design and how to implement them. &lt;code&gt;media-queries&lt;/code&gt; are somewhat new to me so kind of excited to learn about them.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-problems-did-i-face"&gt;
  &lt;/a&gt;
  What problems did I face?
&lt;/h3&gt;

&lt;p&gt;It was a fairly small section of course so I did not face any problems.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-do-i-want-to-do-tomorrow"&gt;
  &lt;/a&gt;
  What do I want to do tomorrow?
&lt;/h3&gt;

&lt;p&gt;I'll do the &lt;a href="//freecodecamp.org/learn/responsive-web-design#css-flexbox"&gt;CSS Flexbox&lt;/a&gt; section of the course tomorrow and this one seems kinda hard as this is a new concept entirely to me. Hope it goes well.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-is-the-experience-so-far"&gt;
  &lt;/a&gt;
  How is the experience so far?
&lt;/h3&gt;

&lt;p&gt;I think I'm starting to get a bit tired for now. I should probably get some rest but, that would break my daily streak. If it's not against the rule, I'll maybe take one.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#useful-links"&gt;
  &lt;/a&gt;
  Useful Links
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://freecodecamp.org/"&gt;FreeCodeCamp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JannatinNaim/"&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>100daysofcode</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Metamask authentication with Moralis in Next.js</title>
      <author>Avneesh Agarwal</author>
      <pubDate>Fri, 03 Dec 2021 14:24:57 +0000</pubDate>
      <link>https://dev.to/byteslash/metamask-authentication-with-moralis-in-nextjs-1hbc</link>
      <guid>https://dev.to/byteslash/metamask-authentication-with-moralis-in-nextjs-1hbc</guid>
      <description>&lt;p&gt;If you haven't been living under a rock you have probably heard of Web 3.0!&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MNj8UdB5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media4.giphy.com/media/WRQiZ1rkueNh0Dw1mQ/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MNj8UdB5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media4.giphy.com/media/WRQiZ1rkueNh0Dw1mQ/giphy.gif" alt="Living under a rock" width="480" height="270"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;One of the most important parts of a full-stack is authentication. So let's see how to authorize users with their Metamask wallet in a Next.js app.&lt;/p&gt;

&lt;p&gt;If you don't know what is metamask then check out their  &lt;a href="https://metamask.io/"&gt;website&lt;/a&gt; &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#setting-up-the-app"&gt;
  &lt;/a&gt;
  Setting up the app
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Create a new next app&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npx create-next-app next-metamask
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Navigate into the app&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd next-metamask
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Installing the required dependencies&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm i @walletconnect/web3-provider moralis react-moralis # npm

yarn add @walletconnect/web3-provider moralis react-moralis # yarn
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Start the server&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm run dev # npm

yarn dev # yarn
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#get-moralis-credentials"&gt;
  &lt;/a&gt;
  Get Moralis Credentials
&lt;/h3&gt;

&lt;p&gt;Go to &lt;a href="https://moralis.io/"&gt;moralis&lt;/a&gt; and signup/login. After that click on Create new Server and select &lt;code&gt;TestNet Server&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sOUgYOp0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638519444572/c63mPpZZ6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sOUgYOp0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638519444572/c63mPpZZ6.png" alt="image.png" width="880" height="457"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;By selecting it you will see a popup. Fill in the details, and click the &lt;code&gt;Add Instance&lt;/code&gt; button.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LmU22OSs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638519513809/x41ig0cC7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LmU22OSs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638519513809/x41ig0cC7.png" alt="image.png" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After the server is created click on &lt;code&gt;view details&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VkJwhqpt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638521693161/4xVCAOJGCO.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VkJwhqpt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638521693161/4xVCAOJGCO.png" alt="image.png" width="880" height="149"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We are going to need the server URL and Application ID &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--U9NbWdrx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638521770935/AG8Yv6dXz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U9NbWdrx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638521770935/AG8Yv6dXz.png" alt="image.png" width="880" height="772"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#building-out-the-authentication-system"&gt;
  &lt;/a&gt;
  Building out the authentication system
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Adding the environment variables&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Create a &lt;code&gt;.env.local&lt;/code&gt; file in the root of your folder and add the env variables like this-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;NEXT_PUBLIC_MORALIS_APP_ID=&amp;lt;app_id&amp;gt;
NEXT_PUBLIC_MORALIS_SERVER_ID=&amp;lt;server_id&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You need to replace the values of the variables with the credentials you got from Moralis.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Wrap the app in a MoralisProvider&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Go to &lt;code&gt;_app.js&lt;/code&gt; and wrap the &lt;code&gt;&amp;lt;Component {...pageProps} /&amp;gt;&lt;/code&gt; with the Moralis Provider with the env variables like this-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;MoralisProvider
  appId={process.env.NEXT_PUBLIC_MORALIS_APP_ID}
  serverUrl={process.env.NEXT_PUBLIC_MORALIS_SERVER_ID}
&amp;gt;
  &amp;lt;Component {...pageProps} /&amp;gt;
&amp;lt;/MoralisProvider&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now import &lt;code&gt;MoralisProvider&lt;/code&gt; from react-moralis&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { MoralisProvider } from "react-moralis";
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Creating the sign-in button&lt;/strong&gt;&lt;br&gt;
I am going to do create the login button on the home page, feel free to create it on any page you need.&lt;/p&gt;

&lt;p&gt;Get the authenticate function from the useMoralis hook-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const { authenticate } = useMoralis();
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You also need to import the hook from react-moralis&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { useMoralis } from "react-moralis";
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create a button like this-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;button
  onClick={() =&amp;gt; {
    authenticate({ provider: "metamask" });
  }}
&amp;gt;
  Sign in with MetaMask
&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now if we click on sign in, it will open the metamask extension for sign in.&lt;/p&gt;

&lt;p&gt;%[&lt;a href="https://www.loom.com/share/c2b1c9936ad44185810d9978ea5c2193"&gt;https://www.loom.com/share/c2b1c9936ad44185810d9978ea5c2193&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Show signout button if the user is signed out&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We need to get a few more things from the &lt;code&gt;useMoralis&lt;/code&gt; hook like this-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const { authenticate, isAuthenticated, logout } = useMoralis();
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create a ternary operator to show the logout button, if the user is signed in otherwise show the sign-in button-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{isAuthenticated ? (
    &amp;lt;button
      onClick={logout}
    &amp;gt;
      Logout
    &amp;lt;/button&amp;gt;
  ) : (
    &amp;lt;button
      onClick={() =&amp;gt; {
        authenticate({ provider: "metamask" });
      }}
    &amp;gt;
      Sign in with MetaMask
    &amp;lt;/button&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now our sign in and sign out is working 🥳🥳&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Getting the user data&lt;/strong&gt;&lt;br&gt;
Let's see how to get some basic data like their eth address and username.&lt;/p&gt;

&lt;p&gt;When the user is authenticated, you can add this fragment to show the userName and their address wallet-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;&amp;gt;
  &amp;lt;button onClick={logout}&amp;gt;Logout&amp;lt;/button&amp;gt;
  &amp;lt;h2&amp;gt;Welcome {user.get("username")}&amp;lt;/h2&amp;gt;
  &amp;lt;h2&amp;gt;Your wallet address is {user.get("ethAddress")}&amp;lt;/h2&amp;gt;
&amp;lt;/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You need to get the user from the &lt;code&gt;useMoralis&lt;/code&gt; hook as well-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const { authenticate, isAuthenticated, logout, user } = useMoralis();
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eLtPosMr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638538592544/Mmo4idnMF.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eLtPosMr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638538592544/Mmo4idnMF.png" alt="image.png" width="880" height="175"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The userName is very random 😂but it can help in some cases and the eth address can be used for transactions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#signing-off"&gt;
  &lt;/a&gt;
  Signing off
&lt;/h3&gt;

&lt;p&gt;It was this easy to implement authentication of metamask with moralis 🤯&lt;/p&gt;

&lt;p&gt;Hope you found this tutorial useful and stay tuned for more of these web 3.0 tutorials ✌️&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#useful-links"&gt;
  &lt;/a&gt;
  Useful links
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/avneesh0612/metamask-next"&gt;GitHub repo&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://moralis.io/"&gt;Moralis&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://metamask.io/"&gt;Metamask&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://links.avneesh.tech"&gt;Connect with me&lt;/a&gt;&lt;/p&gt;

</description>
      <category>metamask</category>
      <category>web3</category>
      <category>nextjs</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Javascript academy #2: Closures </title>
      <author>CodeOz</author>
      <pubDate>Fri, 03 Dec 2021 14:01:59 +0000</pubDate>
      <link>https://dev.to/codeoz/javascript-academy-2-closures-2j78</link>
      <guid>https://dev.to/codeoz/javascript-academy-2-closures-2j78</guid>
      <description>&lt;p&gt;Welcome to this new academy! In this I will NOT explain you javascript from scratch, the aim of this javascript academy is to explain you some concept in javascript that will help you to understand javascript engine!&lt;/p&gt;

&lt;p&gt;Today I will teach you what is a &lt;code&gt;Closure&lt;/code&gt;?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#short-definition"&gt;
  &lt;/a&gt;
  Short Definition
&lt;/h2&gt;

&lt;p&gt;A &lt;code&gt;Closure&lt;/code&gt; is a function that can access to variable outer its own scope.&lt;/p&gt;

&lt;p&gt;🤔...&lt;/p&gt;

&lt;p&gt;Ok let's take an example!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;toto&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;toto&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// 6&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When the JS Engine will pass to the function, it will check for each variable if this variable is available in the current context, here only the variable &lt;code&gt;a&lt;/code&gt; is available since it's the parameters.&lt;/p&gt;

&lt;p&gt;But when it will check the &lt;code&gt;b&lt;/code&gt; variable, it will check that this variable is not available in the function context! So it will check if this variable is available in the outer context!&lt;/p&gt;

&lt;p&gt;This is called a &lt;code&gt;Closure&lt;/code&gt;!&lt;/p&gt;

&lt;p&gt;But the JS Engine need to make some tricks in order to keep the outer variable access in the function!&lt;/p&gt;

&lt;p&gt;In fact JS Engine will store the outer variable (&lt;code&gt;b&lt;/code&gt;) in the memory &lt;code&gt;heap&lt;/code&gt;! So it keep a reference into this variable and when we will invoke the function, the variable will be available!&lt;/p&gt;

&lt;p&gt;In fact this &lt;code&gt;outer variable&lt;/code&gt; is store in an object name &lt;code&gt;Lexical environment&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-the-raw-lexical-environment-endraw-"&gt;
  &lt;/a&gt;
  What is the &lt;code&gt;Lexical environment&lt;/code&gt; ?
&lt;/h2&gt;

&lt;p&gt;Lexical environment only exists “theoretically”! It grant all thing that a function need to have in order to be invoked! It's composed in 2 parts:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Environment Record that will store local variable.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Reference to the outer variable used in this function.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now let's look how JS Engine manage variable scope in function&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;toto&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="c1"&gt;// declared in the global scope&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;hello&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;35&lt;/span&gt;
   &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;toto&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;45&lt;/span&gt;
   &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;toto&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;hello&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;// 80&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Why in the example above when we are calling &lt;code&gt;console.log(a + toto)&lt;/code&gt; the value of toto is &lt;code&gt;45&lt;/code&gt; and not &lt;code&gt;5&lt;/code&gt;?&lt;/p&gt;

&lt;p&gt;When we will invoked a function, &lt;strong&gt;JS Engine&lt;/strong&gt; will check if the variable is in the &lt;strong&gt;current context&lt;/strong&gt; (Environment Record), in this case it will take this value, otherwise it will check if the variable exist in the outer context until reaching the &lt;code&gt;Global Scope&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Another example to understand this behavior!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;toto&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;toto global | &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="c1"&gt;// declared in the global scope&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;b global | &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;hello&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;a hello | &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
   &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;toto&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;toto hello | &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
   &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;c hello | &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;hey&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;c hey | &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;toto&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;hello&lt;/span&gt;&lt;span class="p"&gt;()()&lt;/span&gt; &lt;span class="c1"&gt;// a hello | toto hello | b global | c hey |&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Do you see the logic know?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-purpose-of-raw-closure-endraw-"&gt;
  &lt;/a&gt;
  The purpose of &lt;code&gt;Closure&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;It use more ressource, so why use closure?&lt;/p&gt;

&lt;p&gt;Moreover we can create side effect!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;toto&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;55&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;change&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="nx"&gt;toto&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;69&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;change&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;toto&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// 69&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But you can encapsulate data and create some secret &amp;amp; protected variable!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;hello&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;counter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;counter&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;counter&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;upCounter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;hello&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nx"&gt;upCounter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;// 1&lt;/span&gt;
&lt;span class="nx"&gt;upCounter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;// 2&lt;/span&gt;
&lt;span class="nx"&gt;upCounter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;// 3&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Your variable is safe and you can only change it by the function return by &lt;code&gt;hello&lt;/code&gt;!&lt;/p&gt;

&lt;p&gt;Moreover, each instance of &lt;code&gt;hello()&lt;/code&gt; has its own context!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;upCounter1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;hello&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;upCounter2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;hello&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="nx"&gt;upCounter1&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;// 1&lt;/span&gt;
&lt;span class="nx"&gt;upCounter1&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;// 2&lt;/span&gt;

&lt;span class="nx"&gt;upCounter2&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;// 1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#quizz-about-closure"&gt;
  &lt;/a&gt;
  Quizz about Closure
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;arrFuncs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;toto&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;arrFuncs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;toto&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// i is 5&lt;/span&gt;

&lt;span class="nx"&gt;arrFuncs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arrFunc&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arrFunc&lt;/span&gt;&lt;span class="p"&gt;()))&lt;/span&gt; &lt;span class="c1"&gt;// All logs&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Why it's logging &lt;code&gt;5&lt;/code&gt; and not &lt;code&gt;0, 1, 2, 3, 4&lt;/code&gt; ?!&lt;/p&gt;

&lt;p&gt;Let understand this step by step!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;equal to&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Since we are using var, the variable &lt;code&gt;i&lt;/code&gt; is hoisted to the &lt;code&gt;global scope&lt;/code&gt;!&lt;/p&gt;

&lt;p&gt;So when we are doing&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;toto&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We are using toto function as &lt;code&gt;Closure&lt;/code&gt;!&lt;/p&gt;

&lt;p&gt;And as we know, closure used &lt;code&gt;reference&lt;/code&gt; for &lt;strong&gt;outer variable&lt;/strong&gt;(var i is an outer variable since it's declares on global scope)&lt;/p&gt;

&lt;p&gt;So when we will execute each closure (during the &lt;code&gt;forEach&lt;/code&gt;) we will get the variable value from the &lt;code&gt;reference&lt;/code&gt;, and the current value at this point is &lt;code&gt;5&lt;/code&gt;! &lt;/p&gt;

&lt;p&gt;So this is why we &lt;code&gt;console log 5&lt;/code&gt; five times!&lt;/p&gt;




&lt;p&gt;I hope you like this reading!&lt;/p&gt;

&lt;p&gt;🎁 You can get my new book &lt;code&gt;Underrated skills in javascript, make the difference&lt;/code&gt; for FREE if you follow me on &lt;a href="https://twitter.com/code__oz"&gt;Twitter&lt;/a&gt; and send message to me 😁 and &lt;strong&gt;SAVE 19$&lt;/strong&gt; 💵💵&lt;/p&gt;

&lt;p&gt;Or get it &lt;a href="https://codeoz.gumroad.com/l/RXLYp"&gt;HERE&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;🇫🇷🥖 For french developper you can check my &lt;a href="https://www.youtube.com/channel/UCC675U1ZUPFASsK9-FjawtA"&gt;YoutubeChannel&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🎁 &lt;a href="https://www.getrevue.co/profile/code__oz"&gt;MY NEWSLETTER&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;☕️ You can &lt;a href="https://www.buymeacoffee.com/CodeoZ"&gt;SUPPORT MY WORKS&lt;/a&gt; 🙏&lt;/p&gt;

&lt;p&gt;🏃‍♂️ You can follow me on 👇&lt;/p&gt;

&lt;p&gt;🕊 Twitter : &lt;a href="https://twitter.com/code__oz"&gt;https://twitter.com/code__oz&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;👨‍💻 Github: &lt;a href="https://github.com/Code-Oz"&gt;https://github.com/Code-Oz&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And you can mark 🔖 this article!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>node</category>
      <category>programming</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Backend Developer Roadmap (2021)</title>
      <author>The Nerdy Dev</author>
      <pubDate>Fri, 03 Dec 2021 13:48:03 +0000</pubDate>
      <link>https://dev.to/thenerdydev/backend-developer-roadmap-2021-1fah</link>
      <guid>https://dev.to/thenerdydev/backend-developer-roadmap-2021-1fah</guid>
      <description>&lt;p&gt;Hey guys 👋🏻,&lt;br&gt;
In this article, let us understand the roadmap that will help you in becoming a &lt;strong&gt;Backend Developer in 2021.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This article was first published on &lt;a href="https://the-nerdy-dev.com/"&gt;https://the-nerdy-dev.com/&lt;/a&gt;.&lt;br&gt;
Check the website for more interesting articles and tutorials on Web Development.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Every website that we build these days need a backend to manage the business logic of the application. To manage huge data for an application you need a database along with a API that makes the interaction between the client and the backend possible. Then there are other aspects to it that you need to care about when your application scales. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fQLUZN4U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cm0pm7s5mo2pr54u1pak.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fQLUZN4U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cm0pm7s5mo2pr54u1pak.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So without a further ado, let us first go over the technologies and skills that you need to succeed as a backend developer. &lt;/p&gt;

&lt;p&gt;As a pre-requisite, you do need the knowledge of: &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Internet and How the Web Works &lt;/li&gt;
&lt;li&gt;Operating Systems &lt;/li&gt;
&lt;li&gt;Frontend Knowledge is a plus &lt;/li&gt;
&lt;li&gt;Some programming experience is also a plus though it can be learned along the way. &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Needless to say if you want to succeed as a backend developer, you must have some programming knowledge under your belt. You do need to improve your coding skills if you are just getting started. For starters, getting familiar with the constructs of programming is important. A language like Java would be good to get you started with programming. You can also go for other languages like JavaScript, Ruby, Python etc. &lt;/p&gt;

&lt;p&gt;Some of the prominent backend technologies are  : &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Golang &lt;/li&gt;
&lt;li&gt;Node.js &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RCPZLA53--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/we9xmqyrgboliwp0djq6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RCPZLA53--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/we9xmqyrgboliwp0djq6.png" alt="Image description" width="493" height="186"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Ruby on Rails &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T0-g9FmD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zdvfbwb8inbs7i5lvfef.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T0-g9FmD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zdvfbwb8inbs7i5lvfef.png" alt="Image description" width="549" height="173"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Django&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0rymCm_z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w9e9flc5k00x1rokt4ac.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0rymCm_z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w9e9flc5k00x1rokt4ac.png" alt="Image description" width="491" height="192"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;and more... &lt;/p&gt;

&lt;p&gt;Next comes the knowledge of version control system, also called as &lt;strong&gt;VCS&lt;/strong&gt;. Now this enables developers to collaborate and work on a project along with that it also also allows us to manage the versions by recording the snapshots of the project history and even allow us to backtrack if a wrong change was committed. This way it limits the risk of errors and provides an efficient workflow to collaborate on projects. &lt;/p&gt;

&lt;p&gt;For backend development, you can use the following version control systems.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SRSj1ccP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/05dfw1klzj7eonwvypwd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRSj1ccP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/05dfw1klzj7eonwvypwd.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Git&lt;/li&gt;
&lt;li&gt;GitHub&lt;/li&gt;
&lt;li&gt;GitLab&lt;/li&gt;
&lt;li&gt;BitBucket&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
  &lt;a href="#database"&gt;
  &lt;/a&gt;
  Database
&lt;/h2&gt;

&lt;p&gt;Next you need the knowledge of a database : &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--67tQEGlg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0fjzlwqaojobjj09llxq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--67tQEGlg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0fjzlwqaojobjj09llxq.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;A database as we know is an organized collection of data which can be structured or unstructured. The database caters to the storage aspect of our application. So it is responsible for storing the data of our application. We can also make queries against our database and retrieve the data in the form that we need. &lt;br&gt;
Knowledge of databases is very important and a must have if you want to succeed as a backend developer. &lt;/p&gt;

&lt;p&gt;Backend developers either use relational or NoSQL databases. Some of them are as follows:&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#relational-databases"&gt;
  &lt;/a&gt;
  Relational Databases
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;PostgreSQL&lt;/li&gt;
&lt;li&gt;MySQL&lt;/li&gt;
&lt;li&gt;MS SQL&lt;/li&gt;
&lt;li&gt;Oracle&lt;/li&gt;
&lt;li&gt;MariaDB&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
  &lt;a href="#nosql-databases"&gt;
  &lt;/a&gt;
  NoSQL Databases
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;MongoDB&lt;/li&gt;
&lt;li&gt;RethinkDB&lt;/li&gt;
&lt;li&gt;DynamoDB&lt;/li&gt;
&lt;li&gt;CouchDB&lt;/li&gt;
&lt;li&gt;ArangoDB &lt;/li&gt;
&lt;li&gt;Neo4J 
(to name a few)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Along with the knowledge of some of the databases described above, you will also need to be familiar with the basic database principles like : &lt;/p&gt;

&lt;p&gt;ORMs, Transactions and Batches, ACID, Data Normalization, Indexing, Cursors etc. &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#apis"&gt;
  &lt;/a&gt;
  APIs
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--F8n4fbpq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f07ly4y2oipw09o5nqxi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F8n4fbpq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f07ly4y2oipw09o5nqxi.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;APIs (Application Programming Interfaces) are a type of intermediate that allows services to communicate with one another. APIs are used by backend developers to connect different apps or services in order to give a better user experience on the frontend. &lt;/p&gt;

&lt;p&gt;You should be aware of the following APIs:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;REST (important)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you want to learn about REST APIs in detail, I do have an article on same : &lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/thenerdydev/what-is-a-rest-api-288l"&gt;https://dev.to/thenerdydev/what-is-a-rest-api-288l&lt;/a&gt; &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;JSON&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z1JiDYmf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/igchgzf1dwnfwq37yaxc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z1JiDYmf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/igchgzf1dwnfwq37yaxc.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;SOAP&lt;/li&gt;
&lt;li&gt;GSON&lt;/li&gt;
&lt;li&gt;XML-RPC&lt;/li&gt;
&lt;li&gt;AES&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
  &lt;a href="#caching"&gt;
  &lt;/a&gt;
  Caching
&lt;/h2&gt;

&lt;p&gt;Caching is the process of storing copies of files in a cache, or temporary storage location, so that they can be accessed more quickly. So essentially it is a technique for storing a copy of a resource in a cache (temporary storage location) so it can be accessed quickly without any delays (basically for fast access). The main goal of caching is to improve &lt;em&gt;data retrieval performance while reducing the need to contact the slow-to-process underlying storage layer.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Here is a list of caching techniques and tools you should be aware of.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;CDN&lt;/li&gt;
&lt;li&gt;Server Side&lt;/li&gt;
&lt;li&gt;Client-Side&lt;/li&gt;
&lt;li&gt;Redis&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
  &lt;a href="#testing"&gt;
  &lt;/a&gt;
  Testing
&lt;/h2&gt;

&lt;p&gt;Backend Testing is a testing method that checks the server side or database of web applications or a software. Backend testing is also known as Database Testing. The data entered in the front end will be stored in the back-end database. Backend developers utilize the following testing methods:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Integration Testing&lt;/li&gt;
&lt;li&gt;Unit Testing&lt;/li&gt;
&lt;li&gt;Functional Testing&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I may cover more on Testing in a separate article. &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#code-analysis-tools"&gt;
  &lt;/a&gt;
  Code Analysis Tools
&lt;/h2&gt;

&lt;p&gt;Code analysis is the analysis of source code that is performed without actually executing programs. It involves the detection of vulnerabilities and functional errors in deployed or soon-to-be deployed software. &lt;/p&gt;

&lt;p&gt;Some of the tools used for code analysis are:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;SonarLint&lt;/li&gt;
&lt;li&gt;JUnit&lt;/li&gt;
&lt;li&gt;JaCoCo&lt;/li&gt;
&lt;li&gt;PMD&lt;/li&gt;
&lt;li&gt;SonarQube&lt;/li&gt;
&lt;li&gt;Qualys&lt;/li&gt;
&lt;li&gt;Jenkins&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
  &lt;a href="#architectural-patterns"&gt;
  &lt;/a&gt;
  Architectural Patterns
&lt;/h2&gt;

&lt;p&gt;An architectural pattern is a reusable solution to repeated issues in software development within a given context. The following are some of the most regularly used architectural patterns:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Monolithic&lt;/li&gt;
&lt;li&gt;SOA&lt;/li&gt;
&lt;li&gt;Microservices&lt;/li&gt;
&lt;li&gt;CQRS&lt;/li&gt;
&lt;li&gt;Event Sourcing&lt;/li&gt;
&lt;li&gt;Serverless&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
  &lt;a href="#message-broker"&gt;
  &lt;/a&gt;
  Message Broker
&lt;/h2&gt;

&lt;p&gt;A message broker is a part of software that allows systems, apps, and services to communicate with one another. A message broker is a module that converts the server’s formal messaging protocol into the client’s formal messaging protocol (receiver). Here is a list of some of the message brokers. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;RabbitMQ&lt;/li&gt;
&lt;li&gt;Kafka&lt;/li&gt;
&lt;li&gt;Kinesis&lt;/li&gt;
&lt;li&gt;JBOSS messaging&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;
  &lt;a href="#containerization"&gt;
  &lt;/a&gt;
  Containerization
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cWcsF_tQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/23d738ecnmtbqxi65lcb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cWcsF_tQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/23d738ecnmtbqxi65lcb.png" alt="Image description" width="880" height="478"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Containerization is the packaging of software code with all required components, such as frameworks, libraries, and other dependencies, in order to create services that are isolated from one another in a container. Backend developers use containerization to make it easier to move or execute containers depending of their infrastructure or environment. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Docker&lt;/strong&gt; is one of the most commonly used containers that you should learn.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#design-patterns"&gt;
  &lt;/a&gt;
  Design Patterns
&lt;/h2&gt;

&lt;p&gt;In software engineering, a design pattern is a general repeatable solution to a commonly occurring problem in software design. Design patterns are used to represent some of the best practices adapted by experienced object-oriented software developers. The following is a list of different design patterns that you should be familiar of.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Singleton&lt;/li&gt;
&lt;li&gt;Factory&lt;/li&gt;
&lt;li&gt;Observer&lt;/li&gt;
&lt;li&gt;Decorator&lt;/li&gt;
&lt;li&gt;Adapter&lt;/li&gt;
&lt;li&gt;Mediator&lt;/li&gt;
&lt;li&gt;Composite&lt;/li&gt;
&lt;li&gt;Facade&lt;/li&gt;
&lt;li&gt;Iterator&lt;/li&gt;
&lt;li&gt;Proxy&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
  &lt;a href="#webhook"&gt;
  &lt;/a&gt;
  WebHook
&lt;/h2&gt;

&lt;p&gt;Webhooks are automated messages sent from apps when something happens. They have a message—or payload—and are sent to a unique URL—essentially the app's phone number or address. Webhooks are almost always faster than polling, and require less work on your end.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;They're much like SMS notifications&lt;/em&gt; &lt;/p&gt;

&lt;p&gt;A webhook, often known as a reverse API, is a method for an app to give real-time data to other apps. Webhooks, unlike APIs, do not require a request to be sent after a response. Instead, webhooks provide data as soon as it becomes available, without the need for a request or specific callbacks. The webhook’s fundamental characteristic makes it useful for both users and providers.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#websocket"&gt;
  &lt;/a&gt;
  WebSocket
&lt;/h2&gt;

&lt;p&gt;WebSockets is a next-generation bidirectional communication technology for web applications which operates over a single socket and is exposed via a JavaScript interface in HTML 5 compliant browsers.&lt;/p&gt;

&lt;p&gt;The WebSocket API is a reducing technology that allows a two-way interactive communication session to be established between a user’s browser and a server. You can use this API to send messages to a server and obtain event-driven responses instead of asking the service. A WebSocket is a persistent link between a client and a server. It uses a TCP/IP socket connection to create a full-duplex, bi-directional communication channel over HTTP. Simply put, it’s a thin, lightweight layer over TCP that allows subprotocols to be used to lodge messages.&lt;/p&gt;

&lt;p&gt;So this is it for this article. Thanks for reading. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;If you enjoy my articles, consider following me on Twitter for more interesting stuff :&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xdzF7_iP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lf9dc7pby59jmgkstw74.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xdzF7_iP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lf9dc7pby59jmgkstw74.png" alt="Image description" width="284" height="255"&gt;&lt;/a&gt;  &lt;/p&gt;

&lt;p&gt;⚡Twitter : &lt;a href="https://twitter.com/The_Nerdy_Dev"&gt;https://twitter.com/The_Nerdy_Dev&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Don't forget to leave a like if you loved the article. Also share it with your friends and colleagues.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MGpya8n1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3qpl01uwp1qlmbqkhfpm.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MGpya8n1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3qpl01uwp1qlmbqkhfpm.gif" alt="Alt Text" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PS&lt;/strong&gt; - If you are looking to learn Web Development, I have curated a &lt;strong&gt;FREE&lt;/strong&gt; course for you on my YouTube Channel, check the below article :&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/thenerdydev" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dvgjnxQX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j2i8W0Wf--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/297820/e861379b-e75a-48e5-bc39-44b3e940c086.png" alt="thenerdydev"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/thenerdydev/2021-web-developer-full-course-html-css-javascript-node-js-and-mongodb-27pb" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;(2021) - Web Developer Full Course : HTML, CSS, JavaScript, Node.js and MongoDB&lt;/h2&gt;
      &lt;h3&gt;The Nerdy Dev ・ Apr 28 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#node&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


</description>
      <category>100daysofcode</category>
      <category>javascript</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>What is Happening With Crypto Market?</title>
      <author>Mark Vassilevskiy</author>
      <pubDate>Fri, 03 Dec 2021 13:38:52 +0000</pubDate>
      <link>https://dev.to/markfusion/what-is-happening-with-crypto-market-396n</link>
      <guid>https://dev.to/markfusion/what-is-happening-with-crypto-market-396n</guid>
      <description>&lt;p&gt;Many people are scared of Crypto. They say that Crypto is just a big Scam and also, that Crypto is just for Geeks. These myths have been around for years but it's time to debunk them! Crypto isn't just about the cryptocurrency market value - many people are using Crypto as an investment vehicle or even as a form of payment. It can be difficult to understand at first, so this blog post will go over some common myths related to Crypto and give you honest answers about what's happening with the crypto market today. Thanks to the community, it's easier than ever before to get involved with Crypto - even if you're a complete beginner. Crypto has the power to change your life for the better, so let's debunk these Crypto myths once and for all!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#what-is-crypto"&gt;
  &lt;/a&gt;
  What is Crypto?
&lt;/h2&gt;

&lt;p&gt;Crypto is not just about buying cryptocurrencies like Bitcoin (BTC), Ethereum (ETH), or Litecoin (LTC). It can be used as an investment vehicle that allows you to earn money through trading. You might have heard people talking in terms of “HODL” - this means holding onto a certain coin instead of selling it at any given time. Other traders use Crypto purely as a way to make some extra cash by using their skills with Crypto trading bots. Even though there are risks involved when choosing this path, they often find themselves making more than $100 every day by following Crypto price predictions.&lt;/p&gt;

&lt;p&gt;Crypto has also become popular as a form of payment with retailers - this is due to the low fees associated with payments and fast processing speeds for transactions!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-big-myth-about-crypto"&gt;
  &lt;/a&gt;
  A Big Myth About Crypto
&lt;/h2&gt;

&lt;p&gt;Another common myth related to Crypto is that it's just for Geeks or people who are good at computers. This couldn't be farther from the truth - many non-computer savvy individuals have been able to start their own Crypto trading accounts by following simple tutorials online. There are even some apps out there that make Crypto trading accessible with your mobile device, so you can trade on the go if needed! If you don’t know where to get started, check out resources like Youtube videos about how Cryptos work along with other beginner guides available online today. Even Crypto is a Crypto beginner and managed to turn $100 into thousands after learning more about Crypto trading.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-going-on-with-crypto-market"&gt;
  &lt;/a&gt;
  What's Going On With Crypto Market?
&lt;/h2&gt;

&lt;p&gt;While it’s true that Crypto market value has been seeing some dips lately, many experts believe they're simply part of the “growing pains” associated with getting Crypto off the ground in terms of popularity. Many people are choosing to invest their money with Crypto because there aren't any limits when it comes to transferring funds - this means you can send or receive an unlimited number of transactions without having to pay for each one! This also makes setting up your own Crypto wallet much easier than ever before, so don't be afraid if you've heard negative things about Cryptos from other sources online. Crypto is here to stay, and it's easier than ever before for beginners (and even Crypto experts) to get involved with Crypto trading today.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#therere-several-risks"&gt;
  &lt;/a&gt;
  There're Several Risks
&lt;/h2&gt;

&lt;p&gt;Just like any other investment vehicle out there, Crypto does come with risks - but this shouldn't scare you away from using Cryptos as an alternative way of sending or receiving money. If anything, the low fees associated with transactions are a major bonus compared to traditional methods used by banks! Even though prices have dipped recently due to some jitters in the market value, Crypto isn't going anywhere anytime soon. There will always be people who choose to invest their money into Cryptos because they offer benefits that surpass those found when investing your funds elsewhere online. Crypto is growing fast so now might just be the best time to get involved and see how Crypto can change your life for the better!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Cryptocurrency is a very interesting field in which you can get involved and earn good money. It's a new technology and of course, there're many risks, but as I said you don't need to worry because if you decided to invest a little bit so it's not your last money and even if some SHIT COIN will fall to zero your life won't change at all&lt;/p&gt;

</description>
      <category>crypto</category>
      <category>blockchain</category>
      <category>money</category>
      <category>career</category>
    </item>
    <item>
      <title>DevTips Daily Update 03/12/21</title>
      <author>James Bubb</author>
      <pubDate>Fri, 03 Dec 2021 13:25:27 +0000</pubDate>
      <link>https://dev.to/codebubb/devtips-daily-update-191121-434m</link>
      <guid>https://dev.to/codebubb/devtips-daily-update-191121-434m</guid>
      <description>&lt;p&gt;So in this week's videos on DevTips Daily, we were carrying on with our full end to end project and we did a bit more work on the API in terms of setting up the redirect endpoint in Express. We then moved on to setting up a deployment pipeline with a GitHub action and finished up by starting to configure our Digital Ocean droplet to accept out code.&lt;/p&gt;

&lt;p&gt;Here's a link to each individual tutorial:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/RrRXdNAVFpk"&gt;Sending POST requests with Postman&lt;/a&gt;&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/RrRXdNAVFpk"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/1y_RbcJ0eKk"&gt;Redirect Endpoint in Express&lt;/a&gt;&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/1y_RbcJ0eKk"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/bW_JV7jeJxE"&gt;CI/CD Pipeline Overview&lt;/a&gt;&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/bW_JV7jeJxE"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/2AD8-uYlTQA"&gt;Creating a GitHub action&lt;/a&gt;&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/2AD8-uYlTQA"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/mWw7XrBy-Aw"&gt;Installing and Building in the GitHub action&lt;/a&gt;&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/mWw7XrBy-Aw"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/DOocQ-yrT5g"&gt;Adding a new User on the server&lt;/a&gt;&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/DOocQ-yrT5g"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/h7HY6cwMY0M"&gt;Setting / Resetting a user's password&lt;/a&gt;&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/h7HY6cwMY0M"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Next week we're going to be carrying on with the project again, we're going to be finishing off setting up the server and getting our pipeline to push our code to the server!&lt;/p&gt;

&lt;p&gt;Thanks for watching 👍&lt;/p&gt;

</description>
      <category>devtipsdaily</category>
      <category>beginners</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Set in JavaScript: Everything you need to know</title>
      <author>Anjan Shomooder</author>
      <pubDate>Fri, 03 Dec 2021 13:24:11 +0000</pubDate>
      <link>https://dev.to/thatanjan/set-in-javascript-everything-you-need-to-know-577b</link>
      <guid>https://dev.to/thatanjan/set-in-javascript-everything-you-need-to-know-577b</guid>
      <description>&lt;p&gt;In this blog, you will learn everything you need to know about Set in javascript.&lt;/p&gt;

&lt;p&gt;You will learn:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Why do we need Set?&lt;/li&gt;
&lt;li&gt;How do we use Set in JavaScript?&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#why-do-we-need-set"&gt;
  &lt;/a&gt;
  Why do we need set?
&lt;/h2&gt;

&lt;p&gt;Suppose you want to create a list of user ids. But the list should contain unique items. How would you solve that problem?&lt;/p&gt;

&lt;p&gt;One thing you can do is while adding an item, you can check if that item exists already in the list or not.&lt;/p&gt;

&lt;p&gt;That will work but is not efficient. Because you have to loop over every item to check if the item exists or not. Time complexity will be O(n). Ignore time complexity if you don't know about them. Just remember it will not be efficient.&lt;/p&gt;

&lt;p&gt;That's why we have set. Set is a data structure that only stores unique items. You can check if an item exists in the list or not very efficiently. If you are using javascript then you will not have to implement Set from scratch. Let's see how we can use Set.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-a-set"&gt;
  &lt;/a&gt;
  Create a set
&lt;/h3&gt;

&lt;p&gt;We need to use the Set constructor.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;users&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Set&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;// Set(0) {}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;users2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Set&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="c1"&gt;// Set(3) { 10, 12, 14 }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You don't have to pass any arguments to the constructor. But if you pass an argument, then you have to pass iterable data. An iterable data is simply a data type that we can loop over like array and string. If you pass an array then it will remove all duplicate items. We can use this feature to remove all duplicates from an array.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;users&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Jack&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Mike&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Jack&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Roy&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;// remove all duplicates&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;usersSet&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;users&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Set(3) { 'Jack', 'Mike', 'Roy' }&lt;/span&gt;

&lt;span class="c1"&gt;// convert set to an array&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;uniqueUsers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[...&lt;/span&gt;&lt;span class="nx"&gt;usersSet&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;// [ 'Jack', 'Mike', 'Roy' ]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That was very easy right. But what about string?&lt;/p&gt;

&lt;p&gt;If you pass a string then the string will be split into individual characters and duplicate characters will be removed.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Anjan&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;nameSet&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Set(4) { 'A', 'n', 'j', 'a' }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#how-does-set-compares-values"&gt;
  &lt;/a&gt;
  How does set compares values?
&lt;/h3&gt;

&lt;p&gt;Simply it checks the references. The set does not contain any values. It only contains the references of the values. If the reference refers to a primitive value(number, string) then it checks with the value. Because primitives are passed by value. But if the reference is a non-primitive type then the set will compare the two references. If both reference matches, then both values will be considered as equals.&lt;/p&gt;

&lt;p&gt;To check if an item exists in the set, we need to use the &lt;code&gt;has&lt;/code&gt; method.&lt;/p&gt;

&lt;p&gt;Let's see some examples&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Anjan&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;set1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Set&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="c1"&gt;// Set(4) { 1, 2, 3, { name: 'Anjan' } }&lt;/span&gt;

&lt;span class="nx"&gt;set1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;has&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;//true&lt;/span&gt;
&lt;span class="nx"&gt;set1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;has&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Anjan&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="c1"&gt;// false because this object refering to different data&lt;/span&gt;
&lt;span class="nx"&gt;set1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;has&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// true because  both references are equal.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's see some operations with a set.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#adding-items"&gt;
  &lt;/a&gt;
  Adding items
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mySet1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Set&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="nx"&gt;mySet1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Set [ 1 ]&lt;/span&gt;
&lt;span class="nx"&gt;mySet1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Set [ 1, 5 ]&lt;/span&gt;
&lt;span class="nx"&gt;mySet1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Set [ 1, 5 ]&lt;/span&gt;
&lt;span class="nx"&gt;mySet1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;some text&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Set [ 1, 5, 'some text' ]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#remove-items"&gt;
  &lt;/a&gt;
  Remove items
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mySet1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Set&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="nx"&gt;mySet1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;mySet1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#remove-all-items"&gt;
  &lt;/a&gt;
  Remove all items
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mySet1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Set&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="nx"&gt;mySet1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clear&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;// Set(0) {}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#get-the-size"&gt;
  &lt;/a&gt;
  Get the size
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mySet1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Set&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="c1"&gt;// 6&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's see how we can iterate over the set.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#foreach-method"&gt;
  &lt;/a&gt;
  Foreach method
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mySet1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Set&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="nx"&gt;mySet1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#with-for-loops"&gt;
  &lt;/a&gt;
  With for loops
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;mySet1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;mySet1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;values&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note: &lt;code&gt;keys&lt;/code&gt; method returns a new iterator object that yields the values for each element in the Set object in insertion order.&lt;/p&gt;

&lt;p&gt;So, that's it for today. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#shameless-plug"&gt;
  &lt;/a&gt;
  Shameless Plug
&lt;/h2&gt;

&lt;p&gt;I have made a video about how to build a carousel postcard with React, Material-UI, and Swiper.js. If you are interested you can check the video.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/NDyjI7hd4uE"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;You can also demo the application form &lt;a href="https://insta-carousel-demo.vercl.app/"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sXlAWXXh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/thatanjan/insta-carousel-yt/development/public/Screenshot%2520of%2520the%2520App.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sXlAWXXh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/thatanjan/insta-carousel-yt/development/public/Screenshot%2520of%2520the%2520App.png" alt="Screenshot of Insta Carousel" width="880" height="445"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Please like and subscribe to &lt;a href="https://www.youtube.com/channel/UCBaGowNYTUsm3IDaHbLRMYw?sub_confirmation=1"&gt;Cules Coding&lt;/a&gt;. It motivates me to create more content like this.&lt;/p&gt;

&lt;p&gt;If you have any questions, please comment down below. You can reach out to me on social media as &lt;a class="mentioned-user" href="https://dev.to/thatanjan"&gt;@thatanjan&lt;/a&gt;
. Stay safe. Goodbye.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#about-me"&gt;
  &lt;/a&gt;
  About me
&lt;/h2&gt;

&lt;h4&gt;
  &lt;a href="#why-do-i-do-what-i-do"&gt;
  &lt;/a&gt;
  Why do I do what I do?
&lt;/h4&gt;

&lt;p&gt;The Internet has revolutionized our life. I want to make the internet more beautiful and useful.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#what-do-i-do"&gt;
  &lt;/a&gt;
  What do I do?
&lt;/h4&gt;

&lt;p&gt;I ended up being a full-stack software engineer.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#what-can-i-do"&gt;
  &lt;/a&gt;
  What can I do?
&lt;/h4&gt;

&lt;p&gt;I can develop complex full-stack web applications like social media applications or e-commerce sites.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#what-have-i-done"&gt;
  &lt;/a&gt;
  What have I done?
&lt;/h4&gt;

&lt;p&gt;I have developed a social media application called &lt;a href="https://con-fession.vercel.app/"&gt;Confession&lt;/a&gt;. The goal of this application is to help people overcome their imposter syndrome by sharing our failure stories.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XbQiTDS2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gjay62pz7byne4d8ja8v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XbQiTDS2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gjay62pz7byne4d8ja8v.png" alt="Alt Text" width="880" height="442"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I also love to share my knowledge. So, I run a youtube channel called &lt;a href="https://www.youtube.com/channel/UCBaGowNYTUsm3IDaHbLRMYw?sub_confirmation=1"&gt;Cules Coding&lt;/a&gt; where I teach people full-stack web development, data structure algorithms, and many more. So, Subscribe to Cules Coding so that you don't miss the cool stuff.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#want-to-work-with-me"&gt;
  &lt;/a&gt;
  Want to work with me?
&lt;/h2&gt;

&lt;p&gt;I am looking for a team where I can show my ambition and passion and produce great value for them. Contact me through my email or any social media as &lt;a class="mentioned-user" href="https://dev.to/thatanjan"&gt;@thatanjan&lt;/a&gt;
. I would be happy to have a touch with you.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#contacts"&gt;
  &lt;/a&gt;
  Contacts
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Email: &lt;a href="mailto:thatanjan@gmail.com"&gt;thatanjan@gmail.com&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;linkedin: &lt;a href="https://linkedin.com/in/thatanjan/"&gt;@thatanjan&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;portfolio: &lt;a href="https://thatanjan.me/"&gt;anjan&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Github: &lt;a href="https://github.com/thatAnjan/"&gt;@thatanjan&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Instagram (personal): &lt;a href="https://instagram.com/thatAnjan/"&gt;@thatanjan&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Instagram (youtube channel): &lt;a href="https://instagram.com/cules_coding/"&gt;@thatanjan&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Twitter: &lt;a href="https://twitter.com/thatAnjan"&gt;@thatanjan&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Facebook: &lt;a href="https://www.facebook.com/thatanjan/"&gt;@thatanjan&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Blogs you might want to read:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.culescoding.space/blog/setup-eslint-prettier-with-typescript-and-react"&gt; Eslint, prettier setup with TypeScript and react &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.culescoding.space/blog/what-is-client-side-rendering"&gt;What is Client-Side Rendering?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.culescoding.space/blog/what-is-server-side-rendering"&gt;What is Server Side Rendering?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.culescoding.space/blog/everything-you-need-to-know-about-tree-data-structure"&gt;Everything you need to know about tree data structure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.culescoding.space/blog/13-reasons-why-you-should-use-Nextjs"&gt;13 reasons why you should use Nextjs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Videos might you might want to watch:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/rSa8sUC8m_4"&gt;
&lt;/iframe&gt;
&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/T-n0mrssDiw"&gt;
&lt;/iframe&gt;
&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/s6J2Q2vOhf0"&gt;
&lt;/iframe&gt;
&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/0an2g0lq7LU"&gt;
&lt;/iframe&gt;
&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/HM7x3FhZqMk"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>react</category>
      <category>nextjs</category>
    </item>
    <item>
      <title>Go Smtp ve RabbitMQ ile Email servisi</title>
      <author>Tayfur</author>
      <pubDate>Fri, 03 Dec 2021 13:23:51 +0000</pubDate>
      <link>https://dev.to/go/go-smtp-ve-rabbitmq-ile-email-servisi-4end</link>
      <guid>https://dev.to/go/go-smtp-ve-rabbitmq-ile-email-servisi-4end</guid>
      <description>&lt;p&gt;Selamlar Ben Tayfur Kaya yeni &lt;strong&gt;Golang&lt;/strong&gt; öğreniyorum ve size öğrenirken yaşadığım zorlukları ve avantajları bu projede göstermek istiyorum.&lt;br&gt;
Bugün go dili ile yazmış olduğum basit bir email service inceleyeceğiz.&lt;br&gt;
kullandığım teknolojiler RabbitMQ, Smtp, fiber ve Gorm &lt;br&gt;
Github Reposuna gitmek istiyorsanız &lt;a href="https://github.com/Tayfur/Email-Service"&gt;Github&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#stmp"&gt;
  &lt;/a&gt;
  Stmp
&lt;/h1&gt;

&lt;p&gt;Golang ile basit bir sekilde gönderici olan mail adresine giriş yaparak istediğimiz email adresine mesajı html template olarak göndereceğiz&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#html-nas%C4%B1l-parse-edilir-"&gt;
  &lt;/a&gt;
  Html nasıl parse edilir ?
&lt;/h3&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
&lt;br&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt; &lt;span class="n"&gt;template&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ParseFiles&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"./Templates/FeatureNotification.html"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;yukarıda html dosyasını parse ediyoruz.&lt;br&gt;
ve aşağıdaki gibi execute ediyoruz buradaki subject kısmı ise gönderilecek mailin title yazıyoruz..&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="n"&gt;templateBuffer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Write&lt;/span&gt;&lt;span class="p"&gt;([]&lt;/span&gt;&lt;span class="kt"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Sprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Subject: Lates Features &lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;%s&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mimeHeaders&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
    &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;templateBuffer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#smtp-ile-mail-g%C3%B6ndermek"&gt;
  &lt;/a&gt;
  Smtp ile mail göndermek
&lt;/h3&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;p&gt;sendMail fonksiyonu hangi consumerden triggerlandıysa ilgili htmli parse ediyoruz&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;    &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="n"&gt;tamplate&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s"&gt;"WelcomeQueue"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;body&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;parseHtml&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WelcomeTemplate&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s"&gt;"WeeklyReportQueue"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;body&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;parseHtml&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WeeklyReportTemplate&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s"&gt;"FeatureNotificationQueue"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;body&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;parseHtml&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FeatureNotificationTemplate&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;smtp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SendMail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;smtpHost&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;":"&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;smtpPort&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;senderMail&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;yukaradaki kod bloğunda mail adresimize authentication oluyoruz ve oldugumuz email adresinden &lt;strong&gt;to&lt;/strong&gt; göndereceğimiz mail adresini içeriyor. &lt;strong&gt;msg&lt;/strong&gt;  kısmı ise gönderilecek olan mesajı içeriyor ama biz orada bir mesaj yerine html template göndereceğiz.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#rabbitmq"&gt;
  &lt;/a&gt;
  RabbitMQ
&lt;/h1&gt;

&lt;p&gt;diyebilirsinizki yukarıda basit yazıyordu ne gerek var rabbitMQ kullanmaya!&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uBxsUcuy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/de8czqszvyzpi1sxyuli.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uBxsUcuy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/de8czqszvyzpi1sxyuli.png" alt="Image description" width="880" height="880"&gt;&lt;/a&gt;&lt;br&gt;
Evet var çünkü gönderecek oldugumuz mailleri &lt;strong&gt;Message queue&lt;/strong&gt;&lt;br&gt;
ya göndermemiz gerekiyor,  yaptıgımız app belki databaseden aldığımız mail adreslerine email atarken yarısında app crashe olabilir ve biz hangi mail adreslerine mail gönderildi hangisine gönderilmedi bunu bilemeyiz.&lt;/p&gt;

&lt;p&gt;Birden fazla email templatemiz olabilir mesela welcome, verify, Feature Notification gibi farkettiginiz gibi bazıları &lt;strong&gt;Bulk&lt;/strong&gt;(toplu gönderilen) mail bazıları &lt;strong&gt;Transaction&lt;/strong&gt;(tekli ) mail.&lt;/p&gt;

&lt;p&gt;Biz her template icin bir &lt;strong&gt;Consume&lt;/strong&gt; ve &lt;strong&gt;Publish&lt;/strong&gt; oluşturacağız böylelikle mail adresleri ilk önce queue gidicek sonra Consume"a iletilecek ve oradan templatine göre smtp ile maili göndereceğiz =)&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#publish"&gt;
  &lt;/a&gt;
  Publish
&lt;/h3&gt;

&lt;p&gt;RabbitMQ bağlantısı oluşturuyoruz&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="n"&gt;connectRabbitMQ&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;amqp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Dial&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;amqpServerURL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;consume ile haberleşmek için bir channel oluşturuyoruz&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="n"&gt;channelRabbitMQ&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;connectRabbitMQ&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Channel&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;yeni bir mesaj oluşturup bunu queue gönderiyoruz ama burdaki en önemli nokta verilen queue name"i çok önemli bu fonksiyonun çağrıldığı yerden alıyor ve mesajı o queue ismine göre gönderiyor bu sayede consume ederken her template icin farklı queue den onları alabileceğiz&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;    &lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;amqp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Publishing&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;ContentType&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"text/plain"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;Body&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;        &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c"&gt;// mesaji publish eder.&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;channelRabbitMQ&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Publish&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="c"&gt;// exchange&lt;/span&gt;
        &lt;span class="n"&gt;queueName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="c"&gt;// queue name&lt;/span&gt;
        &lt;span class="no"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="no"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#consume"&gt;
  &lt;/a&gt;
  Consume
&lt;/h3&gt;

&lt;p&gt;buradaki işlemlerde aynı sayılır ama bir farkla =)&lt;br&gt;
queue deki mesajları okuyup her mesaj için bir sendMail fonksiyonunu trigger ediyor&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;    &lt;span class="n"&gt;forever&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nb"&gt;make&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;chan&lt;/span&gt; &lt;span class="kt"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;go&lt;/span&gt; &lt;span class="k"&gt;func&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;range&lt;/span&gt; &lt;span class="n"&gt;messages&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Body&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
            &lt;span class="c"&gt;//queue'dan gelen mesaji mail.Send fonksiyonuna gönder&lt;/span&gt;
            &lt;span class="n"&gt;mail&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SendMail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;queueName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;" &amp;gt; Received message: %s&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Body&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}()&lt;/span&gt;

    &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt;&lt;span class="n"&gt;forever&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#bulk-mail-amp-transaction-mail"&gt;
  &lt;/a&gt;
  Bulk Mail &amp;amp; Transaction Mail
&lt;/h3&gt;

&lt;p&gt;Yukarıda bu ikisinden bahsetmiştik genel anlamda toplu gönderilen maillere Bulk ,ve sadece tekli işlemler için gönderilen maillere Transaction mail denir&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;    &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ConnectDB&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Fatal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nb"&gt;panic&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="n"&gt;User&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;User&lt;/span&gt;
    &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;yukarıda diye bağlanıp dbdeki User ların hepsini arrayin içine alıyoruz&lt;br&gt;
Aşağıda is User arrayini for döngüsüne alıp her user"ın maili için []byte a dönüştürüp bunu queue gönderiyoruz burada []byte a dönüştürmemizin sebebi RabbitMQ channeli byte ile haberleşmesi&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;range&lt;/span&gt; &lt;span class="n"&gt;User&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;byte&lt;/span&gt;
        &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Email&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;rabbitmq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Publisher&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;template&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;p&gt;Transaction maillerinde ise farklı farklı işlemler yapılabilir ama biz basit bir halde fiber endpointinden gelen mail adresine email göndereceğiz  &lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;h1&gt;
  &lt;a href="#main"&gt;
  &lt;/a&gt;
  Main
&lt;/h1&gt;

&lt;p&gt;Main fonksiyonu içinde goroutine ile bütün consumeleri dinliyoruz bunlar hep açık kalıyor queue herhangi bir mail girdiğinde direkt bunları işleme gönderecek&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="n"&gt;WelcomeQueue&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="s"&gt;"WelcomeQueue"&lt;/span&gt;
    &lt;span class="n"&gt;WeeklyReportQueue&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="s"&gt;"WeeklyReportQueue"&lt;/span&gt;
    &lt;span class="n"&gt;FeatureNotificationQueue&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="s"&gt;"FeatureNotificationQueue"&lt;/span&gt;
    &lt;span class="c"&gt;// consumelari dinliyoruz&lt;/span&gt;
    &lt;span class="k"&gt;go&lt;/span&gt; &lt;span class="n"&gt;rabbitmq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Consume&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;WeeklyReportQueue&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;go&lt;/span&gt; &lt;span class="n"&gt;rabbitmq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Consume&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;FeatureNotificationQueue&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;go&lt;/span&gt; &lt;span class="n"&gt;rabbitmq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Consume&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;WelcomeQueue&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Dediğim gibi Mailleri gönderirken fiber endpointleri trigger edicek aslında daha complex hale getirilebilir örneğin eğer diye yeni bir kullanıcı eklendiyse o indexteki maile welcomeTemplati göndermek gibi ama şimdi daha basit bir şekilde handle ediyoruz&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;    &lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;fiber&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;New&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;New&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="c"&gt;// add simple logger&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/FeatureNotification"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;fiber&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ctx&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kt"&gt;error&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;go&lt;/span&gt; &lt;span class="n"&gt;logic&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BulkMail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;FeatureNotificationQueue&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SendString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Feature notification Sended"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/WelcomeNotification"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;fiber&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ctx&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kt"&gt;error&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;msg&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"msg"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="n"&gt;logic&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Transactional&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;WelcomeQueue&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SendString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Welcome Sended to "&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  conclusion
&lt;/h2&gt;

&lt;p&gt;Bence &lt;strong&gt;go&lt;/strong&gt; yazması çok keyifli bir dil ve kolayca service oluşturabiliyorsunuz eğer sizde benim gibi başka yazılım dillerinden geldiyseniz variables'a önem verin çünkü verileri çok defa convert etmem gerekti&lt;br&gt;
umarım yazımı beğenmişsinizdir, yazım yanlışları için özür dilerim elimden geldiğince anlaşılır yazmaya çalıştım&lt;/p&gt;

</description>
      <category>go</category>
      <category>rabbitmq</category>
      <category>smtp</category>
      <category>fiber</category>
    </item>
    <item>
      <title>Symfony Station Communique - 3 December 2021. A Look at Symfony and PHP News.</title>
      <author>Reuben Walker, Jr.</author>
      <pubDate>Fri, 03 Dec 2021 13:17:01 +0000</pubDate>
      <link>https://dev.to/reubenwalker64/symfony-station-communique-3-december-2021-a-look-at-symfony-and-php-news-47dm</link>
      <guid>https://dev.to/reubenwalker64/symfony-station-communique-3-december-2021-a-look-at-symfony-and-php-news-47dm</guid>
      <description>&lt;p&gt;This post originally appeared on Symfony Station. &lt;br&gt;
&lt;a href="https://symfonystation.com/Communiques"&gt;https://symfonystation.com/Communiques&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Welcome to this week's Symfony Station Communique. It's your weekly review of the most valuable and essential news in the Symfony and PHP development communities. This week it's extensive again, so take your time and enjoy its most valuable items.&lt;/p&gt;

&lt;p&gt;Thanks to Javier Eguiluz and Symfony for sharing &lt;a href="https://www.symfonystation.com/Symfony-Station-Communique-26-November-2021"&gt;our last communique&lt;/a&gt; in their &lt;a href="https://symfony.com/blog/a-week-of-symfony-778-22-28-november-2021"&gt;Week of Symfony&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;*Please note that links will open in a new browser window.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mMgocc3O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pg7fra7tkvzv2hcvkzxg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mMgocc3O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pg7fra7tkvzv2hcvkzxg.png" alt="Symfony Logo" width="209" height="208"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#symfony"&gt;
  &lt;/a&gt;
  Symfony
&lt;/h2&gt;

&lt;p&gt;As always, we will start with the official news from Symfony.&lt;/p&gt;

&lt;p&gt;Highlight -&amp;gt; "This week, Symfony 4.4.35 and 5.3.12 releases were published to address some potential security vulnerabilities. In addition, Symfony 5.4.0-RC1 and 6.0.0-RC1 were published in preparation for their imminent stable release. Lastly, Symfony announced the last days of its Black Friday 2021 deals which end on November 29."&lt;/p&gt;

&lt;p&gt;&lt;a href="https://symfony.com/blog/a-week-of-symfony-778-22-28-november-2021"&gt;A Week of Symfony #778 (22-28 November 2021)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Javier continues a series of posts on what's new in Symfony 5.4.&lt;/p&gt;

&lt;p&gt;New in Symfony 5.4: Misc. features (part 3) &lt;a href="https://symfony.com/blog/new-in-symfony-5-4-misc-features-part-3"&gt;https://symfony.com/blog/new-in-symfony-5-4-misc-features-part-3&lt;/a&gt; &lt;br&gt;
New in Symfony 5.4: Misc. features (part 2) &lt;a href="https://symfony.com/blog/new-in-symfony-5-4-misc-features-part-2"&gt;https://symfony.com/blog/new-in-symfony-5-4-misc-features-part-2&lt;/a&gt;&lt;br&gt;
New in Symfony 5.4: Misc. features (part 1) &lt;a href="https://symfony.com/blog/new-in-symfony-5-4-misc-features-part-1"&gt;https://symfony.com/blog/new-in-symfony-5-4-misc-features-part-1&lt;/a&gt;&lt;br&gt;
New in Symfony 5.4: Serializer improvements &lt;a href="https://symfony.com/blog/new-in-symfony-5-4-serializer-improvements"&gt;https://symfony.com/blog/new-in-symfony-5-4-serializer-improvements&lt;/a&gt;&lt;br&gt;
New in Symfony 5.4: Notifier integrations &lt;a href="https://symfony.com/blog/new-in-symfony-5-4-notifier-integrations"&gt;https://symfony.com/blog/new-in-symfony-5-4-notifier-integrations&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It's finally here. Symfony 6 is available!&lt;/p&gt;

&lt;p&gt;Symfony 6.0.0 released&lt;br&gt;
&lt;a href="https://symfony.com/blog/symfony-6-0-0-released"&gt;https://symfony.com/blog/symfony-6-0-0-released&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Symfony 5.4 as well.&lt;/p&gt;

&lt;p&gt;Symfony 5.4.0 released&lt;br&gt;
&lt;a href="https://symfony.com/blog/symfony-5-4-0-released"&gt;https://symfony.com/blog/symfony-5-4-0-released&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;SymfonyWorld conference starts in just a week: 10 workshops, 25 talks and hundreds of community members to meet. Don't miss it!&lt;/p&gt;

&lt;p&gt;A week left before SymfonyWorld Online 2021 Winter Edition, book your ticket now!&lt;br&gt;
&lt;a href="https://symfony.com/blog/a-week-left-before-symfonyworld-online-2021-winter-edition-book-your-ticket-now"&gt;https://symfony.com/blog/a-week-left-before-symfonyworld-online-2021-winter-edition-book-your-ticket-now&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;SensioLabs has this for us: "To mark the release of Symfony 6, SensioLabs has interviewed Nicolas Grekas, one of the most active members of the Symfony core team. Grekas described the main new features of this latest major version of Symfony and how to start preparing for the upgrade."&lt;/p&gt;

&lt;p&gt;Deep dive into Symfony 6: the interview with Nicolas Grekas&lt;br&gt;
&lt;a href="https://blog.sensiolabs.com/2021/12/01/symfony-6-interview-nicolas-grekas-2/"&gt;https://blog.sensiolabs.com/2021/12/01/symfony-6-interview-nicolas-grekas-2/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;SymfonyInsight is the official Symfony platform to monitor and maintain high quality projects over long periods of time. It also helps you reduce business risks and upgrade your application dependencies.&lt;/p&gt;

&lt;p&gt;PHP 8.1 is the latest version of PHP, released on November 25th. We’re thrilled to announce SymfonyInsight support of PHP 8.1 and all its features (enums, readonly properties, etc)!&lt;/p&gt;

&lt;p&gt;SymfonyInsight now supports PHP 8.1!&lt;br&gt;
&lt;a href="https://symfony.com/blog/symfonyinsight-now-supports-php-8-1"&gt;https://symfony.com/blog/symfonyinsight-now-supports-php-8-1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D_AbCTJG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2hwmsnwibmqn1noq06au.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D_AbCTJG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2hwmsnwibmqn1noq06au.png" alt="Featured Item graphic" width="660" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#featured-item"&gt;
  &lt;/a&gt;
  Featured Item
&lt;/h2&gt;

&lt;p&gt;We continue to highlight the most significant post of the week.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#stitcherio-has-this-for-us"&gt;
  &lt;/a&gt;
  Stitcher.io has this for us.
&lt;/h3&gt;

&lt;p&gt;PHP 8.1 was released on November 25, 2021. This post will go through all features, performance improvements, changes, and deprecations one by one.&lt;/p&gt;

&lt;p&gt;What's new in PHP 8.1&lt;br&gt;
&lt;a href="https://stitcher.io/blog/new-in-php-81"&gt;https://stitcher.io/blog/new-in-php-81&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#this-week"&gt;
  &lt;/a&gt;
  This week
&lt;/h2&gt;

&lt;p&gt;Speaking of Symfony 6, Alex Daubois has this interesting post.&lt;br&gt;
What's this upcoming "Encryption" component of Symfony 6.1?&lt;br&gt;
&lt;a href="https://alex-daubois.medium.com/whats-this-upcoming-encryption-component-of-symfony-6-1-c3359af26532"&gt;https://alex-daubois.medium.com/whats-this-upcoming-encryption-component-of-symfony-6-1-c3359af26532&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Kiratas provides this advice: "SensioLabs has presented versions 5.4 and 6.0 of the popular PHP framework Symfony. The two versions are identical regarding the innovations, but Symfony 6 cuts off old braids and removes all content marked as outdated (deprecated). Therefore, developers who want to switch to the new main version should first switch to 5.4 and remove all deprecations."&lt;/p&gt;

&lt;p&gt;PHP framework: Symfony 6.0 appears at the same time as version 5.4&lt;br&gt;
&lt;a href="https://www.kiratas.com/php-framework-symfony-6-0-appears-at-the-same-time-as-version-5-4/"&gt;https://www.kiratas.com/php-framework-symfony-6-0-appears-at-the-same-time-as-version-5-4/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Via SymfonyCasts: "We're heading into Twig and inside a service to fetch the currently-authenticated user. While we're there, we'll add some custom methods to our User class to make it smarter!" They continue their look at Symfony security with:&lt;/p&gt;

&lt;p&gt;This week on SymfonyCasts&lt;br&gt;
&lt;a href="https://5hy9x.r.ag.d.sendibm3.com/mk/mr/eMbqrPggo51bK8ayD5GJNvuYOLgs03Pwc1ig-aE3Z_vuqgpal9jfAOTYP8iRpT2tOspI0s3C9Sgjr3zrFrxDQZ43YDbcfDodlY6HvVkYv8mUeBBmhsLhErJdOUcpf933oFogeTlPRw"&gt;https://5hy9x.r.ag.d.sendibm3.com/mk/mr/eMbqrPggo51bK8ayD5GJNvuYOLgs03Pwc1ig-aE3Z_vuqgpal9jfAOTYP8iRpT2tOspI0s3C9Sgjr3zrFrxDQZ43YDbcfDodlY6HvVkYv8mUeBBmhsLhErJdOUcpf933oFogeTlPRw&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Mattia Toselli shows us how to develop a simple app with Symfony 5 on our local machine. Then we will deploy this app using a service of DigitalOcean called App Platform.&lt;/p&gt;

&lt;p&gt;How to create an automated pipeline for deploy with Symfony 5 and DigitalOcean App Platform.&lt;br&gt;
&lt;a href="https://toselli-mattia.medium.com/how-to-create-an-automated-pipeline-for-deploy-with-symfony-5-and-digitalocean-app-platform-67687342f5ef"&gt;https://toselli-mattia.medium.com/how-to-create-an-automated-pipeline-for-deploy-with-symfony-5-and-digitalocean-app-platform-67687342f5ef&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Why invest in AWS CDK today? Using a simple example with a basic web application built with the Symfony framework, this article will show you how to industrialize any application with Infrastructure as Code (IaC) methodology on AWS.&lt;/p&gt;

&lt;p&gt;Build and Deploy a Symfony Application on AWS using CDK, ECS, and RDS&lt;br&gt;
&lt;a href="https://medium.com/wiiisdom-labs/build-and-deploy-a-symfony-application-on-aws-using-cdk-ecs-and-rds-ec8c85465af6"&gt;https://medium.com/wiiisdom-labs/build-and-deploy-a-symfony-application-on-aws-using-cdk-ecs-and-rds-ec8c85465af6&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I know that there seems to be one of these comparison posts every week. But, if they have something new in them, even one sentence, we'll continue to feature them.&lt;/p&gt;

&lt;p&gt;Laravel vs. Symfony: Which PHP Framework to Choose for Enterprise-grade Web Applications?&lt;br&gt;
&lt;a href="https://www.communicationcrafts.com/laravel-vs-symfony/"&gt;https://www.communicationcrafts.com/laravel-vs-symfony/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;By the way, the answer for Enterprise-grade is Symfony.&lt;/p&gt;

&lt;p&gt;Prestaconcepts brings us this post in French.&lt;/p&gt;

&lt;p&gt;What Symfony 5.4 Brings&lt;br&gt;
&lt;a href="https://www.prestaconcept.net/blog/symfony/ce-qu-apporte-symfony-5-4"&gt;https://www.prestaconcept.net/blog/symfony/ce-qu-apporte-symfony-5-4&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Doctrine has a new release.&lt;/p&gt;

&lt;p&gt;New Release: Doctrine DBAL 3.2.0&lt;br&gt;
&lt;a href="https://www.doctrine-project.org/2021/11/26/dbal-3.2.0.html"&gt;https://www.doctrine-project.org/2021/11/26/dbal-3.2.0.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Gábor Hojtsy writes: "As you may know, we are planning to release Drupal 10 in 2022 (as early as June) because Drupal 9's Symfony 4 and CKEditor 4 are both at the end of life the year after, around the end of 2023. So we plan to give enough time for people to update to Drupal 10 before Drupal 9 goes end of life. A similar situation happened with Drupal 8 to 9 driven by Symfony 3 to 4. However, moving Drupal 10 from Symfony 4 to 5 would again only give us a couple of years to move on to Symfony 6 next, so the current plan is to move to Symfony 6 straight away."&lt;/p&gt;

&lt;p&gt;The big Symfony 4 to 6 jump plan in Drupal 10 and potential benefits down the line for future versions&lt;br&gt;
&lt;a href="http://www.hojtsy.hu/blog/2021-nov-29/big-symfony-4-6-jump-plan-drupal-10-and-potential-benefits-down-line-future"&gt;http://www.hojtsy.hu/blog/2021-nov-29/big-symfony-4-6-jump-plan-drupal-10-and-potential-benefits-down-line-future&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Websites developed on the Symfony framework were vulnerable to web cache poisoning attacks due to misuse of HTTP headers, according to CyberIntelMag.&lt;/p&gt;

&lt;p&gt;Symfony PHP Framework Had Cache Poisoning Vulnerability&lt;br&gt;
&lt;a href="https://cyberintelmag.com/cloud-security/symfony-php-framework-has-cache-poisoning-vulnerability/"&gt;https://cyberintelmag.com/cloud-security/symfony-php-framework-has-cache-poisoning-vulnerability/&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#last-week"&gt;
  &lt;/a&gt;
  Last Week
&lt;/h3&gt;

&lt;p&gt;Hantsy has the following min-tutorial.&lt;/p&gt;

&lt;p&gt;Building Restful APIs with Symfony 5 and PHP 8&lt;br&gt;
&lt;a href="https://hantsy.medium.com/building-restful-apis-with-symfony-5-and-php-8-35368a6246ad"&gt;https://hantsy.medium.com/building-restful-apis-with-symfony-5-and-php-8-35368a6246ad&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#timeless"&gt;
  &lt;/a&gt;
  Timeless
&lt;/h3&gt;

&lt;p&gt;The idea behind Inspector is to create a monitoring environment specifically designed for software developers avoiding any server or infrastructure configuration that many developers hate dealing with. It works with a lightweight software library that you can install in your application like any other dependencies. In the case of Symfony, you can use our official Symfony Bundle. &lt;/p&gt;

&lt;p&gt;Code Execution Monitoring for Symfony applications using Inspector&lt;br&gt;
&lt;a href="https://inspector.dev/code-execution-monitoring-for-symfony-applications-using-inspector/"&gt;https://inspector.dev/code-execution-monitoring-for-symfony-applications-using-inspector/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When it comes to open source ecommerce platforms, there are quite a few solutions to choose from. You may have heard about Magento or PrestaShop. But have you ever seen something about Sylius?&lt;/p&gt;

&lt;p&gt;What is Sylius and how to use it?&lt;br&gt;
&lt;a href="https://www.droptica.com/blog/what-sylius-and-how-use-it/"&gt;https://www.droptica.com/blog/what-sylius-and-how-use-it/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you may know, I ran across Akashic Seer's blog last month, which boasts Symfony-related posts. Here are a few more from his archive delivered with his unique approach.&lt;/p&gt;

&lt;p&gt;How to add CSRF protection to Symfony 5+ forms&lt;br&gt;
&lt;a href="https://akashicseer.com/web-security/how-to-add-csrf-protection-to-symfony-5-forms/"&gt;https://akashicseer.com/web-security/how-to-add-csrf-protection-to-symfony-5-forms/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;How to access Doctrine in Symfony 5+ services&lt;br&gt;
&lt;a href="https://akashicseer.com/web-development/how-to-access-doctrine-in-symfony-5-services/"&gt;https://akashicseer.com/web-development/how-to-access-doctrine-in-symfony-5-services/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IfCNZroA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lw2dd2ebhyo5664522y0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IfCNZroA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lw2dd2ebhyo5664522y0.png" alt="PHP logo" width="880" height="645"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#php"&gt;
  &lt;/a&gt;
  PHP
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#this-week"&gt;
  &lt;/a&gt;
  This week
&lt;/h3&gt;

&lt;p&gt;To paraphrase Cloudways, PHP is the backbone for almost every website, and its security shouldn't be negligible. PHP developers are responsible for avoiding common threats like cross-site request forgery, SQL injections, and data tampering. And PHP has built-in security features that make it easier for developers to protect their websites.&lt;/p&gt;

&lt;p&gt;Ultimate PHP Security Best Practices&lt;br&gt;
&lt;a href="https://www.cloudways.com/blog/php-security/"&gt;https://www.cloudways.com/blog/php-security/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This week, the latest PHP RFC, Deprecate Dynamic Properties, passed 2:1. It barely met the 2/3 vote threshold for passing, which of course, can and has been spun in various pro-and-con ways. The prominent argument people had against it was that it involves triggering deprecation warnings, which is kind of the point. That's what it does mostly.&lt;/p&gt;

&lt;p&gt;Evolving PHP safely&lt;br&gt;
&lt;a href="https://peakd.com/hive-168588/@crell/evolving-php-safely"&gt;https://peakd.com/hive-168588/@crell/evolving-php-safely&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here's more on security as Matthieu Robin asks: "You've been using PHP for years, and it seems to work just fine, but have you ever wondered what more you could be doing to keep your scripts secure?" &lt;/p&gt;

&lt;p&gt;10 Ways to Improve Your PHP Security&lt;br&gt;
&lt;a href="https://dev.to/matthieurobin/10-ways-to-improve-your-php-security-42e2"&gt;https://dev.to/matthieurobin/10-ways-to-improve-your-php-security-42e2&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Vedran Mihočinec too has a question. What is the easiest way to dockerize PHP applications?&lt;/p&gt;

&lt;p&gt;The Easiest Way to Dockerize PHP Applications&lt;br&gt;
&lt;a href="https://dev.to/vedran/the-easiest-way-to-dockerize-a-php-application-4jne"&gt;https://dev.to/vedran/the-easiest-way-to-dockerize-a-php-application-4jne&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In past communiques, we examined Anders Björkland posts on Bolt CMS. Here he takes a look at Silver Stripe CMS in two posts.&lt;/p&gt;

&lt;p&gt;A CMS with a new take - SilverStripe first impression&lt;br&gt;
&lt;a href="https://dev.to/andersbjorkland/a-cms-with-a-new-take-silverstripe-first-impression-46e4"&gt;https://dev.to/andersbjorkland/a-cms-with-a-new-take-silverstripe-first-impression-46e4&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Adding registration to SilverStripe and controlling privileges&lt;br&gt;
&lt;a href="https://dev.to/andersbjorkland/adding-registration-to-silverstripe-and-controlling-priveleges-k4h"&gt;https://dev.to/andersbjorkland/adding-registration-to-silverstripe-and-controlling-priveleges-k4h&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On an unrelated note, he also posted.&lt;/p&gt;

&lt;p&gt;Overview - The C in PHP stands for Christmas 🤶🎅. Follow this daily in December.&lt;br&gt;
&lt;a href="https://dev.to/andersbjorkland/overview-the-c-in-php-stands-for-christmas-5752"&gt;https://dev.to/andersbjorkland/overview-the-c-in-php-stands-for-christmas-5752&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Speaking of PHP CMSs.&lt;/p&gt;

&lt;p&gt;Composer and Contao for the Rest of the World&lt;br&gt;
&lt;a href="https://contao.org/en/news/composer-and-contao-for-the-rest-of-the-world.html"&gt;https://contao.org/en/news/composer-and-contao-for-the-rest-of-the-world.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ibrahim Alausa has written a comprehensive guide on writing cleaner, shorter class constructors.&lt;/p&gt;

&lt;p&gt;PHP 8: Constructor Property Promotion&lt;br&gt;
&lt;a href="https://worldclassibro.hashnode.dev/php-8-constructor-property-promotion"&gt;https://worldclassibro.hashnode.dev/php-8-constructor-property-promotion&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Jetbrains has another announcement, although it's quite as big as last week's.&lt;/p&gt;

&lt;p&gt;JetBrains Remote Development: The ultimate coding experience for a remote world&lt;br&gt;
&lt;a href="https://www.jetbrains.com/remote-development/"&gt;https://www.jetbrains.com/remote-development/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;They also announced that PhpStorm 2021.3 is now available! This major release introduces full support for PHP 8.1, better handling of generics in PHP, remote development, improvements to deployment, an HTTP client, refactorings, and much more.&lt;/p&gt;

&lt;p&gt;PhpStorm 2021.3: PHP 8.1, Generics, Remote Development, Refactorings, and More&lt;br&gt;
&lt;a href="https://blog.jetbrains.com/phpstorm/2021/12/phpstorm-2021-3-release/#move_class_and_move_namespace_refactorings_with_drag_and_drop"&gt;https://blog.jetbrains.com/phpstorm/2021/12/phpstorm-2021-3-release/#move_class_and_move_namespace_refactorings_with_drag_and_drop&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Olotin Temitope shows us how to configure Xdebug with PHPStorm and Docker to debug like a pro.&lt;/p&gt;

&lt;p&gt;How to debug like a pro using Xdebug, PHPStorm, and Docker.&lt;br&gt;
&lt;a href="https://olotintemitope.medium.com/how-to-debug-like-a-pro-using-xdebug-phpstorm-and-docker-d2d66630a9df"&gt;https://olotintemitope.medium.com/how-to-debug-like-a-pro-using-xdebug-phpstorm-and-docker-d2d66630a9df&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;PHP Architect interviews feature contributor Vinícius Campitelli about his article Cryptography with Libsodium.&lt;/p&gt;

&lt;p&gt;Interview with Vinícius Campitelli&lt;br&gt;
&lt;a href="https://www.phparch.com/podcast/interview-with-vinicius-campitelli-2/"&gt;https://www.phparch.com/podcast/interview-with-vinicius-campitelli-2/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As of today, when you update your dependencies in a pull request, Private Packagist comments with all composer.lock changes displayed in a clear and easy to scan table.&lt;/p&gt;

&lt;p&gt;Introducing: Update Review&lt;br&gt;
&lt;a href="https://blog.packagist.com/introducing-update-review/"&gt;https://blog.packagist.com/introducing-update-review/&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#last-week"&gt;
  &lt;/a&gt;
  Last Week
&lt;/h3&gt;

&lt;p&gt;In this episode of the PHP Internals News podcast, they're looking back at all the RFCs that were discussed on the podcast for PHP 8.1. In their own words, the RFC authors explain these features, with your host interjecting his comments on the state of affairs. Please give it a listen.&lt;/p&gt;

&lt;p&gt;PHP Internals News: Episode 95: PHP 8.1 Celebrations&lt;br&gt;
&lt;a href="https://derickrethans.nl/phpinternalsnews-95.html"&gt;https://derickrethans.nl/phpinternalsnews-95.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this video, BeachCasts shows us how to:&lt;/p&gt;

&lt;p&gt;Measure PHP Code Quality With Static Analysis Using PHPStan&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=OiS2xGVWEa0"&gt;https://www.youtube.com/watch?v=OiS2xGVWEa0&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;James Seconde has more on PHPStan.&lt;/p&gt;

&lt;p&gt;Scrub Up! Cleaning Your PHP Application With PHPStan&lt;br&gt;
&lt;a href="https://learn.vonage.com/blog/2021/11/30/scrub-up-cleaning-your-php-application-with-phpstan/"&gt;https://learn.vonage.com/blog/2021/11/30/scrub-up-cleaning-your-php-application-with-phpstan/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you use Drupal, its PHPStan solution gets an update.&lt;/p&gt;

&lt;p&gt;Better static analysis with entity type storage in phpstan-drupal 1.10&lt;br&gt;
&lt;a href="https://mglaman.dev/blog/better-static-analysis-entity-type-storages-phpstan-drupal-110"&gt;https://mglaman.dev/blog/better-static-analysis-entity-type-storages-phpstan-drupal-110&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And there's another one of these. Sigh.&lt;/p&gt;

&lt;p&gt;Is PHP a Dying Language?&lt;br&gt;
&lt;a href="https://medium.com/geekculture/is-php-a-dying-language-2cea47e2196d"&gt;https://medium.com/geekculture/is-php-a-dying-language-2cea47e2196d&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And as long as most of us will be alive, the answer is no. But the author still makes some interesting points about why that is.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Mw3w66pM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p9g97mq55vvymzv7kky9.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Mw3w66pM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p9g97mq55vvymzv7kky9.jpeg" alt="Code logo" width="626" height="626"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#other"&gt;
  &lt;/a&gt;
  Other
&lt;/h2&gt;

&lt;p&gt;How will future AI systems make the most ethical choices for all of us?&lt;/p&gt;

&lt;p&gt;Worried about AI ethics? Worry about developers' ethics first&lt;br&gt;
&lt;a href="https://thenextweb.com/news/worried-about-ai-ethics-worry-about-developers-ethics-first-syndication"&gt;https://thenextweb.com/news/worried-about-ai-ethics-worry-about-developers-ethics-first-syndication&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To continue on that line.&lt;/p&gt;

&lt;p&gt;AI can translate standard written text to code&lt;br&gt;
&lt;a href="https://www.freethink.com/technology/text-to-code"&gt;https://www.freethink.com/technology/text-to-code&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And regarding other so-called threats to the careers of developers.&lt;/p&gt;

&lt;p&gt;Low code will help but don't expect a revolution&lt;br&gt;
&lt;a href="https://tbtech.co/data/low-code-will-help-but-dont-expect-a-revolution/"&gt;https://tbtech.co/data/low-code-will-help-but-dont-expect-a-revolution/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here are five handy MySQL string functions you can add to your toolkit.&lt;/p&gt;

&lt;p&gt;5 MySQL String Functions You Should Know&lt;br&gt;
&lt;a href="https://openlamptech.substack.com/p/openlamptech-issue-3-5-mysql-string"&gt;https://openlamptech.substack.com/p/openlamptech-issue-3-5-mysql-string&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This type of CSS review is always helpful.&lt;/p&gt;

&lt;p&gt;Flexbox vs. CSS Grid: What are the differences between the two, and when should you use them?&lt;br&gt;
&lt;a href="https://betterprogramming.pub/flexbox-vs-css-grid-3e9011ee2951"&gt;https://betterprogramming.pub/flexbox-vs-css-grid-3e9011ee2951&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Postman says: "Before promoting an API direction, all parties must understand where we are and what destinations are possible. A map helps simplify an overwhelming number of technologies, techniques, and ideologies into something approachable and with a clear way forward. Ultimately, maps provide key insights so that having a conversation about an ecosystem's strengths and weaknesses can occur." &lt;/p&gt;

&lt;p&gt;How to Improve an API Ecosystem with Mapping&lt;br&gt;
&lt;a href="https://blog.postman.com/how-to-improve-api-ecosystem-with-mapping/"&gt;https://blog.postman.com/how-to-improve-api-ecosystem-with-mapping/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;GitHub had some problems this week, but they were able to post this about Actions.&lt;/p&gt;

&lt;p&gt;GitHub Actions: reusable workflows are generally available&lt;br&gt;
&lt;a href="https://github.blog/2021-11-29-github-actions-reusable-workflows-is-generally-available/"&gt;https://github.blog/2021-11-29-github-actions-reusable-workflows-is-generally-available/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here's an in-depth look at Docker, which is always helpful.&lt;/p&gt;

&lt;p&gt;Dock Life: Using Docker for All The Things!&lt;br&gt;
&lt;a href="https://nystudio107.com/blog/dock-life-using-docker-for-all-the-things"&gt;https://nystudio107.com/blog/dock-life-using-docker-for-all-the-things&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And here's a look at the vital topic of user experience.&lt;/p&gt;

&lt;p&gt;The State of UX in 2022&lt;br&gt;
&lt;a href="https://trends.uxdesign.cc/"&gt;https://trends.uxdesign.cc/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Like most articles in the New Yorker, this is a long one. But, it's worth grabbing your favorite beverage and reading it at your leisure.&lt;/p&gt;

&lt;p&gt;Lina Khan's Battle to Rein in Big Tech&lt;br&gt;
&lt;a href="https://www.newyorker.com/magazine/2021/12/06/lina-khans-battle-to-rein-in-big-tech"&gt;https://www.newyorker.com/magazine/2021/12/06/lina-khans-battle-to-rein-in-big-tech&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Have you published or seen something related to Symfony or PHP that we missed? If so, please contact us.&lt;/p&gt;

&lt;p&gt;That's it for this week. Thanks for making it to the end of another extended edition. I look forward to sharing next week's Symfony and PHP news with you on Friday. &lt;/p&gt;

&lt;p&gt;Please share this post. :) Be sure to join our newsletter list, so you get each week's communique directly in your inbox (a day early). And follow us on Twitter at @symfonfystation.&lt;/p&gt;

&lt;p&gt;Happy coding Symfonistas!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BhCQwzKh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v69wxxkcr84wq1z60ksm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BhCQwzKh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v69wxxkcr84wq1z60ksm.png" alt="Photo of Reuben Walker" width="880" height="587"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Reuben Walker&lt;br&gt;
Founder Symfony Station&lt;br&gt;
&lt;a href="https://symfonystation.com/"&gt;https://symfonystation.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Reuben is also Ringmaster of Mobile Atom Media and its division Mobile Atom Code. &lt;br&gt;
&lt;a href="https://media.mobileatom.net/about-us/"&gt;https://media.mobileatom.net/about-us/&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.mobileatom.net/"&gt;https://www.mobileatom.net/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>symfony</category>
      <category>php</category>
      <category>docker</category>
      <category>phpstan</category>
    </item>
    <item>
      <title>The SMOOTHEST yaml editing experience possible yaml-language-server neovim</title>
      <author>Waylon Walker</author>
      <pubDate>Fri, 03 Dec 2021 13:14:01 +0000</pubDate>
      <link>https://dev.to/waylonwalker/the-smoothest-yaml-editing-experience-possible-yaml-language-server-neovim-52mm</link>
      <guid>https://dev.to/waylonwalker/the-smoothest-yaml-editing-experience-possible-yaml-language-server-neovim-52mm</guid>
      <description>&lt;p&gt;I've gone far too long without a good setup for editing yaml files, I am missing out on autocomplete and proper diagnostics.  This ends today as I setup yaml-language-server in neovim.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/xo4HrFoKF4c"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;The video for this one is part of a&lt;br&gt;
&lt;a href="https://www.youtube.com/playlist?list=PLTRNG6WIHETAj0nR_WYAxxGjd7kXch5zj"&gt;challenge-playlist&lt;/a&gt; I put out for myself to constantly improve my dotfiles for all of December.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#initvim"&gt;
  &lt;/a&gt;
  init.vim
&lt;/h2&gt;

&lt;p&gt;I have my &lt;code&gt;init.vim&lt;/code&gt; setup to only source other modules, if you want everything in a single config, feel free to do as you wish.  I broke mine up earlier this year as I doubled into nvim and am not going back.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight viml"&gt;&lt;code&gt;&lt;span class="k"&gt;source&lt;/span&gt; &lt;span class="p"&gt;~&lt;/span&gt;&lt;span class="sr"&gt;/.config/&lt;/span&gt;nvim/plugins&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;vim&lt;/span&gt;
&lt;span class="k"&gt;lua&lt;/span&gt; require&lt;span class="s1"&gt;'waylonwalker.cmp'&lt;/span&gt;
&lt;span class="k"&gt;lua&lt;/span&gt; require&lt;span class="s1"&gt;'waylonwalker.lsp-config'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#plugin-setup"&gt;
  &lt;/a&gt;
  Plugin setup
&lt;/h2&gt;

&lt;p&gt;You will need the following plugins.  I use plug, if you don't you will have to convert the syntax over to the plugin manager you use.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/neovim/nvim-lspconfig"&gt;neovim/nvim-lspconfig&lt;/a&gt; is for configuring the lsp.  It comes with a bunch of sane defaults for most servers, so you pretty much just have to call setup on that server unless you want to change the defaults.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/hrsh7th/nvim-cmp"&gt;hrsh7th/nvim-cmp&lt;/a&gt; is what I use for autocomplete. If you are using something else you might need to set that up in a different way in order to get the autocomplete to work.  You will still get the diagnostics with just lsp-config.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/kabouzeid/nvim-lspinstall"&gt;kabouzeid/nvim-lspinstall&lt;/a&gt; will&lt;br&gt;
aide in installing lsp's if you want.  I have chosen not to because I want to have my full setup scripted so when I setup any new machine I just run my ansible-playbook.  This library is nice to just set things up quick and play with them.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight viml"&gt;&lt;code&gt;&lt;span class="c"&gt;" /home/u_walkews/.config/nvim/plugins.vim&lt;/span&gt;
Plug &lt;span class="s1"&gt;'neovim/nvim-lspconfig'&lt;/span&gt;

&lt;span class="c"&gt;" if you want to use nvim-cmp&lt;/span&gt;
Plug &lt;span class="s1"&gt;'hrsh7th/nvim-cmp'&lt;/span&gt;
Plug &lt;span class="s1"&gt;'hrsh7th/cmp-nvim-lsp'&lt;/span&gt;

&lt;span class="c"&gt;" if you want to use lsp-install&lt;/span&gt;
Plug &lt;span class="s1"&gt;'kabouzeid/nvim-lspinstall'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#cmp-config"&gt;
  &lt;/a&gt;
  cmp config
&lt;/h2&gt;

&lt;p&gt;Make sure that you have nvim_lsp as a source in your cmp config.  This is my config as of now, its likely to change in the future, set yours up how you like.  hrsh7th has a really good readme if you want help configuring cmp.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Again if you don't use cmp you can skip this step, cmp is for autocomplete.&lt;br&gt;
You can use a different plugin for autocomplete, or not use a plugin at all&lt;br&gt;
if that's your thing.&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight lua"&gt;&lt;code&gt;&lt;span class="c1"&gt;--  ~/.config/nvim/lua/waylonwalker/lsp-config.lua&lt;/span&gt;
&lt;span class="c1"&gt;-- Setup nvim-cmp.&lt;/span&gt;
&lt;span class="kd"&gt;local&lt;/span&gt; &lt;span class="n"&gt;cmp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;require&lt;/span&gt;&lt;span class="s1"&gt;'cmp'&lt;/span&gt;

&lt;span class="n"&gt;cmp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
&lt;span class="n"&gt;snippet&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;expand&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c1"&gt;-- For `vsnip` user.&lt;/span&gt;
    &lt;span class="n"&gt;vim&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"vsnip#anonymous"&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;-- For `luasnip` user.&lt;/span&gt;
    &lt;span class="c1"&gt;-- require('luasnip').lsp_expand(args.body)&lt;/span&gt;

    &lt;span class="c1"&gt;-- For `ultisnips` user.&lt;/span&gt;
    &lt;span class="c1"&gt;-- vim.fn["UltiSnips#Anon"](args.body)&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="n"&gt;mapping&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'&amp;lt;C-n&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cmp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mapping&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select_next_item&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="n"&gt;behavior&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cmp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SelectBehavior&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Insert&lt;/span&gt; &lt;span class="p"&gt;}),&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'&amp;lt;C-p&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cmp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mapping&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select_prev_item&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="n"&gt;behavior&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cmp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SelectBehavior&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Insert&lt;/span&gt; &lt;span class="p"&gt;}),&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'&amp;lt;Down&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cmp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mapping&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select_next_item&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="n"&gt;behavior&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cmp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SelectBehavior&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Select&lt;/span&gt; &lt;span class="p"&gt;}),&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'&amp;lt;Up&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cmp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mapping&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select_prev_item&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="n"&gt;behavior&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cmp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SelectBehavior&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Select&lt;/span&gt; &lt;span class="p"&gt;}),&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'&amp;lt;C-d&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cmp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mapping&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;scroll_docs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'&amp;lt;C-f&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cmp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mapping&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;scroll_docs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'&amp;lt;C-Space&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cmp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mapping&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;complete&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'&amp;lt;C-e&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cmp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mapping&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'&amp;lt;CR&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cmp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mapping&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;confirm&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="n"&gt;behavior&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cmp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ConfirmBehavior&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Replace&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nb"&gt;select&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="n"&gt;sources&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'nvim_lsp'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'vsnip'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'path'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'buffer'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'calc'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'tmux'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#lsp-config"&gt;
  &lt;/a&gt;
  lsp config
&lt;/h2&gt;

&lt;p&gt;Next up is the heart of this post, the lsp-config.lua.  This one is pretty straight forward, require lspconfig (which you need the plugin for), then set it up with cmp and the extra schemas.  I'm sure there are yaml schemas for tons of things, I'll probably add more in the future, but for now, this is what I have.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight lua"&gt;&lt;code&gt;&lt;span class="c1"&gt;--  ~/.config/nvim/lua/waylonwalker/lsp-config.lua&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt;&lt;span class="s1"&gt;'lspconfig'&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;yamlls&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;on_attach&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;on_attach&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;capabilities&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'cmp_nvim_lsp'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;update_capabilities&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vim&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lsp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;protocol&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;make_client_capabilities&lt;/span&gt;&lt;span class="p"&gt;()),&lt;/span&gt;
    &lt;span class="n"&gt;settings&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;yaml&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;schemas&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"https://raw.githubusercontent.com/quantumblacklabs/kedro/develop/static/jsonschema/kedro-catalog-0.17.json"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"conf/**/*catalog*"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"https://json.schemastore.org/github-workflow.json"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"/.github/workflows/*"&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#related-links"&gt;
  &lt;/a&gt;
  Related Links
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/WaylonWalker/devtainer/tree/main/nvim/.config/nvim"&gt;my nvim config&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/neovim/nvim-lspconfig"&gt;nvim-lspconfig GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hrsh7th/nvim-cmp"&gt;nvim-cmp GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kabouzeid/nvim-lspinstall/blob/main/lua/lspinstall/servers/yaml.lua"&gt;lspinstall yamlls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.npmjs.com/package/yaml-language-server?activeTab=readme"&gt;yaml-language-server npm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Follow the &lt;a href="https://youtube.com/waylonwalker"&gt;YouTube channel&lt;/a&gt; or the&lt;br&gt;
&lt;a href="https://waylonwalker/rss/"&gt;rss-feed&lt;/a&gt; to stay up to date.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#also-check-out-my-python-lsp-setup"&gt;
  &lt;/a&gt;
  Also Check out My python lsp setup
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://waylonwalker.com/setup-pylsp/"&gt;https://waylonwalker.com/setup-pylsp/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>linux</category>
      <category>vim</category>
      <category>neovim</category>
    </item>
    <item>
      <title>Spatial Search with Amazon Redshift and DBeaver</title>
      <author>Yasunori Kirimoto</author>
      <pubDate>Fri, 03 Dec 2021 13:07:19 +0000</pubDate>
      <link>https://dev.to/aws-builders/spatial-search-with-amazon-redshift-and-dbeaver-3d2d</link>
      <guid>https://dev.to/aws-builders/spatial-search-with-amazon-redshift-and-dbeaver-3d2d</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--X58Ax3mU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-071_00.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X58Ax3mU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-071_00.png" alt="img" width="880" height="293"&gt;&lt;/a&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#i-tried-a-spatial-search-with-amazon-redshift-and-dbeaver-tada"&gt;
  &lt;/a&gt;
  I tried a spatial search with Amazon Redshift and DBeaver 🎉
&lt;/h3&gt;

&lt;p&gt;This time, I used &lt;a href="https://dbeaver.io"&gt;DBeaver&lt;/a&gt; to connect to &lt;a href="https://aws.amazon.com/jp/redshift"&gt;Amazon Redshift&lt;/a&gt;, a cloud data warehouse provided by AWS, and tried to import location data and execute spatial functions!&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#advance-preparation-of-location-data"&gt;
  &lt;/a&gt;
  Advance Preparation of Location Data
&lt;/h2&gt;

&lt;p&gt;In advance, I used QGIS to prepare random points (1 million in blue) and polygons for spatial search (three in yellow) in shapefile format, a standard supported by Amazon Redshift.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://day-journal.com/memo/qgis-065"&gt;QGIS #065 - Create random points in a specified area&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8rTVwtJM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-071_04.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8rTVwtJM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-071_04.png" alt="img" width="880" height="723"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Also, upload the data set to S3 for importing into Amazon Redshift.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--X7uZumNP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-071_05.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X7uZumNP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-071_05.png" alt="img" width="880" height="679"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#creating-amazon-redshift-clusters"&gt;
  &lt;/a&gt;
  Creating Amazon Redshift Clusters
&lt;/h2&gt;

&lt;p&gt;To begin, we will create an Amazon Redshift cluster.&lt;/p&gt;



&lt;p&gt;Select Amazon Redshift in the AWS console → Clusters → Click Create Cluster.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hDEb1sDy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-071_01.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hDEb1sDy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-071_01.png" alt="img" width="880" height="680"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Set the cluster name, free trial, user name, and password → Click Create Cluster.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mTsNK4Hz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-071_02.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mTsNK4Hz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-071_02.png" alt="img" width="880" height="986"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After a while, the cluster will be created.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EBXulAV6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-071_03.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EBXulAV6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-071_03.png" alt="img" width="880" height="683"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This completes the creation of the Amazon Redshift cluster 👍 &lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#configuring-roles-and-public-access"&gt;
  &lt;/a&gt;
  Configuring Roles and Public Access
&lt;/h2&gt;

&lt;p&gt;Next, we will configure the role settings for accessing S3 from Amazon Redshift and the public access settings for connecting to Amazon Redshift from DBeaver.&lt;/p&gt;



&lt;p&gt;Create a role to access S3.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uNIcFuGP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-071_06.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uNIcFuGP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-071_06.png" alt="img" width="880" height="684"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Assign the role you created in the cluster details screen of Amazon Redshift.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4I-tIP13--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-071_07.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4I-tIP13--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-071_07.png" alt="img" width="880" height="1306"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click Actions → Click "Change Public Accessible Settings" on the Amazon Redshift cluster details screen.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kZg7Aui_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-071_08.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kZg7Aui_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-071_08.png" alt="img" width="880" height="682"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Enable Publicly Accessible → Click Save Changes.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WUvZbsT3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-071_09.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WUvZbsT3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-071_09.png" alt="img" width="880" height="682"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Verify that it has been enabled.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ho6Fkc7U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-071_10.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ho6Fkc7U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-071_10.png" alt="img" width="880" height="682"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On the Amazon Redshift cluster details screen, click Security Groups → Add Inbound Rule and set the type to Redshift → Click Save Rule.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PpUjJnwq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-071_11.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PpUjJnwq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-071_11.png" alt="img" width="880" height="682"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Verify that the inbound rule is configured.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LV5wsQo_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-071_12.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LV5wsQo_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-071_12.png" alt="img" width="880" height="682"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This will complete the configuration of roles and public access 👍 &lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#importing-location-data-with-dbeaver"&gt;
  &lt;/a&gt;
  Importing Location Data with DBeaver
&lt;/h2&gt;

&lt;p&gt;Next, we will use &lt;a href="https://dbeaver.io"&gt;DBeaver&lt;/a&gt; to connect to Amazon Redshift and import location data.&lt;/p&gt;



&lt;p&gt;Connect to Amazon Redshift with DBeaver. Set the hostname (cluster endpoint), port, database name, user name, password, and role name.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9t8iFQYb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-071_13.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9t8iFQYb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-071_13.png" alt="img" width="745" height="673"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's import a random point (1 million points). Create a table in advance, specify the role and destination of the shapefile to be imported, and execute.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="n"&gt;points&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
   &lt;span class="n"&gt;wkb_geometry&lt;/span&gt; &lt;span class="n"&gt;GEOMETRY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="nb"&gt;BIGINT&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;COPY&lt;/span&gt; &lt;span class="n"&gt;points&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="s1"&gt;'s3://redshift-geo-data/points.shp'&lt;/span&gt;
&lt;span class="n"&gt;FORMAT&lt;/span&gt; &lt;span class="n"&gt;SHAPEFILE&lt;/span&gt;
&lt;span class="n"&gt;CREDENTIALS&lt;/span&gt; &lt;span class="s1"&gt;'aws_iam_role=arn:aws:iam::xxxxxxx:role/redshift-geo-role-2112'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RyCtmGs6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-071_14.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RyCtmGs6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-071_14.png" alt="画像" width="880" height="725"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once the data is imported, you can check the information while visualizing it on the map.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MG8gikXs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-071_15.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MG8gikXs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-071_15.png" alt="画像" width="880" height="724"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's try importing the three polygons for spatial search. Create a table in advance, specify the destination and role of the shapefile to be imported, and execute.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="n"&gt;polygon&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
   &lt;span class="n"&gt;wkb_geometry&lt;/span&gt; &lt;span class="n"&gt;GEOMETRY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="nb"&gt;BIGINT&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;COPY&lt;/span&gt; &lt;span class="n"&gt;polygon&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="s1"&gt;'s3://redshift-geo-data/polygon.shp'&lt;/span&gt;
&lt;span class="n"&gt;FORMAT&lt;/span&gt; &lt;span class="n"&gt;SHAPEFILE&lt;/span&gt;
&lt;span class="n"&gt;CREDENTIALS&lt;/span&gt; &lt;span class="s1"&gt;'aws_iam_role=arn:aws:iam::xxxxxxx:role/redshift-geo-role-2112'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dbIRswXV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-071_16.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dbIRswXV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-071_16.png" alt="画像" width="880" height="725"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once the data is imported, you can check the information while visualizing it on the map.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Gr8sJdfm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-071_17.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Gr8sJdfm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-071_17.png" alt="画像" width="880" height="725"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This completes the import of location data in DBeaver 👍 &lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#running-a-spatial-function"&gt;
  &lt;/a&gt;
  Running a Spatial Function
&lt;/h2&gt;

&lt;p&gt;Finally, we will try to see if we can perform &lt;a href="https://docs.aws.amazon.com/ja_jp/redshift/latest/dg/geospatial-functions.html"&gt;spatial functions&lt;/a&gt; in Amazon Redshift. As a typical example, we will use "ST_AsGeoJSON" to convert data into GeoJSON format and "ST_Within" to execute a spatial function that extracts points within a polygon from 1 million points.&lt;/p&gt;



&lt;p&gt;First, let's use "ST_AsGeoJSON" to convert the data to GeoJSON format.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;ST_AsGeoJSON&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;wkb_geometry&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="k"&gt;public&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;polygon&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The data is now output in GeoJSON format!&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lGdUvfIj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-071_18.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lGdUvfIj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-071_18.png" alt="img" width="880" height="387"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next, try extracting the points inside the polygon using "ST_Within."&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="k"&gt;public&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;points&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;public&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;points&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;wkb_geometry&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="k"&gt;public&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;points&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;public&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;polygon&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;ST_Within&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;public&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;points&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;wkb_geometry&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;public&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;polygon&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;wkb_geometry&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The data was output only inside the polygon!&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LS6kbkbR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-071_19.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LS6kbkbR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-071_19.png" alt="img" width="880" height="792"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next, use "ST_Within" to extract the count of points within the polygon.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="k"&gt;COUNT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="k"&gt;public&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;points&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;public&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;polygon&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;ST_Within&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;public&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;points&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;wkb_geometry&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;public&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;polygon&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;wkb_geometry&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The count “5167 points” only in the polygon was output!&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Pf1cVIdc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-071_20.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Pf1cVIdc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-071_20.png" alt="img" width="880" height="510"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finally, I would like to check if the spatial search results match those using &lt;a href="https://qgis.org/ja/site"&gt;QGIS&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://day-journal.com/memo/qgis-076"&gt;QGIS #076 - Data selection in spatial search&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We got the same "5167 points"!&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IKUQd8oM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-071_21.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IKUQd8oM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-071_21.png" alt="img" width="880" height="725"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;h4&gt;
  &lt;a href="#we-were-able-to-perform-a-spatial-search-with-amazon-redshift-and-dbeaver-thumbsup"&gt;
  &lt;/a&gt;
  We were able to perform a spatial search with Amazon Redshift and DBeaver 👍
&lt;/h4&gt;

&lt;p&gt;Using Amazon Redshift and DBeaver, we confirmed that we could import location data and perform a spatial search with Amazon Redshift. It looks like it can be used successfully for location data analysis in the future.&lt;/p&gt;

&lt;p&gt;Initially, I’ve tried to use Query Editor V2, which is available in the service, but it hasn’t seemed to support location data import or spatial functions at present. If it is supported in the future, it may become easier to use, or it may become easier to use with &lt;a href="https://aws.amazon.com/jp/about-aws/whats-new/2021/11/amazon-redshift-serverless"&gt;Amazon Redshift Serverless&lt;/a&gt;, whose preview version was announced this week 👍 &lt;/p&gt;

</description>
      <category>aws</category>
      <category>redshift</category>
      <category>dbeaver</category>
      <category>qgis</category>
    </item>
    <item>
      <title>How to Create Accordion with HTML CSS</title>
      <author>Sadee</author>
      <pubDate>Fri, 03 Dec 2021 13:01:22 +0000</pubDate>
      <link>https://dev.to/codewithsadee/how-to-create-accordion-with-html-css-5cnk</link>
      <guid>https://dev.to/codewithsadee/how-to-create-accordion-with-html-css-5cnk</guid>
      <description>&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/qgYYg4unBFw"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;How to create accordion using only html and css.&lt;br&gt;
In this tutorial I will show you how to create accordion with only html css, no javascript&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#essential-links"&gt;
  &lt;/a&gt;
  🔗 Essential links
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://fonts.google.com/specimen/Outfit"&gt;Font - Quicksand&lt;/a&gt;&lt;br&gt;
&lt;a href="https://ionic.io/ionicons"&gt;Ionicon&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.patreon.com/codewithsadee"&gt;Source Code&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#like-follow-amp-subscribe-me"&gt;
  &lt;/a&gt;
  👤 Like - Follow &amp;amp; Subscribe Me
&lt;/h2&gt;

&lt;p&gt;Twitter : &lt;a href="https://twitter.com/codewithsadee"&gt;https://twitter.com/codewithsadee&lt;/a&gt;&lt;br&gt;
Github : &lt;a href="https://github.com/codewithsadee"&gt;https://github.com/codewithsadee&lt;/a&gt;&lt;br&gt;
YouTube : &lt;a href="https://www.youtube.com/channel/UC1PZHWV6VvICTL1LgFUZq6g"&gt;codewithsadee&lt;/a&gt;&lt;br&gt;
Patreon : &lt;a href="https://www.patreon.com/codewithsadee"&gt;https://www.patreon.com/codewithsadee&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/codewithsadee"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qhS87mRW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9kn6vwn4mulhsx6o69is.png" alt="Buy Me A Coffee" width="225" height="51"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>css</category>
      <category>tutorial</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
  </channel>
</rss>
