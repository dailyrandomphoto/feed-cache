<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Anatomy of a Dockerfile</title>
      <author>Mehmet Barış Kalkar</author>
      <pubDate>Sat, 21 Aug 2021 18:27:36 +0000</pubDate>
      <link>https://dev.to/mbaris/anatomy-of-a-dockerfile-4b4p</link>
      <guid>https://dev.to/mbaris/anatomy-of-a-dockerfile-4b4p</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-a-dockerfile"&gt;
  &lt;/a&gt;
  What is a Dockerfile?
&lt;/h2&gt;

&lt;p&gt;Dockerfile is a text document containing commands which can be run in sequence to assemble a docker image.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://docs.docker.com/get-started/02_our_app/"&gt;A sample Dockerfile from the official docs&lt;/a&gt; looks like this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="c"&gt;# syntax=docker/dockerfile:1&lt;/span&gt;
&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; node:12-alpine&lt;/span&gt;
&lt;span class="k"&gt;RUN &lt;/span&gt;apk add &lt;span class="nt"&gt;--no-cache&lt;/span&gt; python g++ make
&lt;span class="k"&gt;WORKDIR&lt;/span&gt;&lt;span class="s"&gt; /app&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; . .&lt;/span&gt;
&lt;span class="k"&gt;RUN &lt;/span&gt;yarn &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;--production&lt;/span&gt;
&lt;span class="k"&gt;CMD&lt;/span&gt;&lt;span class="s"&gt; ["node", "src/index.js"]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#why-do-we-need-them"&gt;
  &lt;/a&gt;
  Why do we need them?
&lt;/h2&gt;

&lt;p&gt;There are millions of images on &lt;a href="https://hub.docker.com/search?q=&amp;amp;type=image"&gt;dockerhub&lt;/a&gt; that we can directly start using with a command like this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker run &lt;span class="nt"&gt;-it&lt;/span&gt; &lt;span class="nt"&gt;--rm&lt;/span&gt; &lt;span class="nt"&gt;-d&lt;/span&gt; &lt;span class="nt"&gt;-p&lt;/span&gt; 8080:80 &lt;span class="nt"&gt;--name&lt;/span&gt; web nginx
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For various reasons, we may want to customize these base images. Docker images are immutable, so we can't &lt;em&gt;exactly&lt;/em&gt; modify them.&lt;br&gt;
We can technically run a container using an existing image, make some changes on it and then create a &lt;em&gt;new&lt;/em&gt; image with these modifications using the &lt;em&gt;commit&lt;/em&gt; command but there is a better way to accomplish this task &lt;br&gt;
However, before we start modifying images, we need to understand the concept of &lt;a href="https://docs.docker.com/storage/storagedriver/"&gt;layers in docker&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#images-layers-and-containers"&gt;
  &lt;/a&gt;
  Images, Layers and Containers
&lt;/h3&gt;

&lt;p&gt;Each Docker container consists of a readable and writable layer on top of multiple read only layers.&lt;br&gt;
These read only layers represent instructions in Dockerfiles, and they are deltas on previous layers(similar to git commits)&lt;/p&gt;

&lt;p&gt;Multiple containers can share the underlying layers since they have their own writable/readable layer on top.&lt;br&gt;
The readable and writable layer is a thin layer which has a lifespan associated with the container.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="c"&gt;# syntax=docker/dockerfile:1&lt;/span&gt;
&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; tiangolo/uvicorn-gunicorn-fastapi:python3.7&lt;/span&gt;
&lt;span class="k"&gt;LABEL&lt;/span&gt;&lt;span class="s"&gt; maintainer="Mehmet Baris Kalkar"&lt;/span&gt;
&lt;span class="k"&gt;LABEL&lt;/span&gt;&lt;span class="s"&gt; version="1.1"&lt;/span&gt;
&lt;span class="k"&gt;RUN &lt;/span&gt;addgroup api &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; adduser fast &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; adduser fast api 
&lt;span class="k"&gt;USER&lt;/span&gt;&lt;span class="s"&gt; fast:api&lt;/span&gt;
&lt;span class="k"&gt;ENV&lt;/span&gt;&lt;span class="s"&gt; GREETING="hola"&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; ./app /project/app&lt;/span&gt;
&lt;span class="k"&gt;WORKDIR&lt;/span&gt;&lt;span class="s"&gt; /project&lt;/span&gt;
&lt;span class="k"&gt;EXPOSE&lt;/span&gt;&lt;span class="s"&gt; 8090&lt;/span&gt;
&lt;span class="k"&gt;CMD&lt;/span&gt;&lt;span class="s"&gt; ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8090"]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If we create a container from this same dockerfile, we will see a log similar to this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;1/4] FROM docker.io/tiangolo/uvicorn-gunicorn-fastapi:python3.7@sha256:a0e0188a485fd8c232d8774ae4680d3b834f95dd2deccdb0211ce71cfd778b97
 &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;internal] load build context
 &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; transferring context: 56B
 &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;2/4] RUN addgroup api &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; adduser fast &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; adduser fast api
 &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;3/4] COPY ./app /project/app 
 &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;4/4] WORKDIR /project 
 &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; exporting to image 
 &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; exporting layers 
 &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; writing image sha256:3cef1a7b7ddc037fa375a1fb37daa907bc31031fedb4142b98e98e582c0bead5
 &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; naming to docker.io/library/fastapi
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;One important thing to understand is &lt;a href="https://docs.docker.com/develop/develop-images/dockerfile_best-practices/#leverage-build-cache"&gt;how these instructions are cached&lt;/a&gt;.&lt;br&gt;
The result of some commands like FROM, COPY/ADD, RUN and WORKDIR can be cached.&lt;/p&gt;

&lt;p&gt;Cached instructions are marked in the build command. If we build the same image by changing only the WORKDIR instruction to project2, we would see something like this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; CACHED &lt;span class="o"&gt;[&lt;/span&gt;1/4] FROM docker.io/tiangolo/uvicorn-gunicorn-fastapi:python3.7@sha256:a0e0188a485fd8c232d8774ae4680d3b834f95dd2deccdb0211ce71cfd778b97
 &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;internal] load build context
 &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; transferring context: 56B
 &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; CACHED &lt;span class="o"&gt;[&lt;/span&gt;2/4] RUN addgroup api &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; adduser fast &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; adduser fast api
 &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; CACHED &lt;span class="o"&gt;[&lt;/span&gt;3/4] COPY ./app /project/app
 &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;4/4] WORKDIR /project2
 &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; exporting to image
 &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; exporting layers
 &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; writing image sha256:fe482845750cf79708d1a6cc107578e76bd843f92fb3092d636180547b32b897
 &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; naming to docker.io/library/fastapi   
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's take a look at this Dockerfile line by line&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="c"&gt;# syntax=docker/dockerfile:1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;(Optional) &lt;em&gt;&lt;a href="https://docs.docker.com/engine/reference/builder/#syntax"&gt;syntax&lt;/a&gt;&lt;/em&gt; is only enabled if we are building the image with &lt;a href="https://docs.docker.com/engine/reference/builder/#buildkit"&gt;BuildKit&lt;/a&gt;&lt;br&gt;
In this line, we can inform the Dockerfile builder which syntax to use while parsing the Dockerfile&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; tiangolo/uvicorn-gunicorn-fastapi:python3.7&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;FROM&lt;/em&gt; instruction is used to set the base image that we are going to use. &lt;br&gt;
This should always be the first instruction in a Dockerfile.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;LABEL&lt;/span&gt;&lt;span class="s"&gt; maintainer="Mehmet Baris Kalkar"&lt;/span&gt;

&lt;span class="k"&gt;LABEL&lt;/span&gt;&lt;span class="s"&gt; version="1.1"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;LABEL&lt;/em&gt; instructions are used to add metadata to images.&lt;/p&gt;

&lt;p&gt;Side note, There used to be a MAINTAINER instruction in the past, but it is deprecated now.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;RUN &lt;/span&gt;addgroup api &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; adduser fast &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; adduser fast api 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;RUN&lt;/em&gt; instruction is used to execute commands in a new layer on top of the current image and commit changes.&lt;br&gt;
Following steps will use the new image.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;USER&lt;/span&gt;&lt;span class="s"&gt; fast:api&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;USER&lt;/em&gt; instruction sets the user and group for the following steps.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;ENV&lt;/span&gt;&lt;span class="s"&gt; GREETING="hola"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;ENV&lt;/em&gt; is used to add environment variables to the container. This variable can be used in the following steps during build as well.&lt;br&gt;
If we want to use a variable in only a single command and not in the image, we can define use the RUN command with a variable instead.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;RUN &lt;/span&gt;&lt;span class="nv"&gt;LOCUST_LOCUSTFILE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;custom_locustfile.py locust
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; ./app /project/app&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;COPY [--chown=:] ... &lt;/em&gt; copies files from source and adds it to the file system of the container&lt;br&gt;
Target path is always relative to the working directory.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;ADD&lt;/em&gt; command also has a similar function, but it can also be used to fetch files from a remote URL or extract tar files. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://docs.docker.com/develop/develop-images/dockerfile_best-practices/#add-or-copy"&gt;It is preferred to use COPY&lt;/a&gt; &lt;br&gt;
over add because COPY is a more transparent and simple instruction.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;WORKDIR&lt;/span&gt;&lt;span class="s"&gt; /project&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;WORKDIR&lt;/em&gt; Sets the working directory to run instructions like CMD, RUN, ENTRYPOINT and COPY after this step.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;EXPOSE&lt;/span&gt;&lt;span class="s"&gt; 8090&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;EXPOSE&lt;/em&gt; is an informational instruction. It does not actually publish any ports, but it is used as a documentation to let &lt;br&gt;
users know which ports should be published to use the image.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;CMD&lt;/span&gt;&lt;span class="s"&gt; ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8090"]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;CMD&lt;/em&gt; is the instruction to define the command you want to execute when run a container from an image. &lt;br&gt;
It is possible to override this command while actually running the image, so it acts as a default. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;ENTRYPOINT&lt;/em&gt; and &lt;em&gt;CMD&lt;/em&gt; are similar commands, &lt;a href="https://www.ctl.io/developers/blog/post/dockerfile-entrypoint-vs-cmd/"&gt;the differences are explained here pretty well&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;VOLUME&lt;/em&gt; command is used to create mounting points within the container. &lt;br&gt;
We can use these volumes to &lt;a href="https://docs.docker.com/storage/volumes/"&gt;share files between containers or the native host&lt;/a&gt;. &lt;/p&gt;

</description>
      <category>docker</category>
      <category>devops</category>
    </item>
    <item>
      <title>Animation React</title>
      <author>Gustavo Scarpim</author>
      <pubDate>Sat, 21 Aug 2021 18:08:27 +0000</pubDate>
      <link>https://dev.to/guscarpim/animation-react-2old</link>
      <guid>https://dev.to/guscarpim/animation-react-2old</guid>
      <description>&lt;p&gt;Today I'm bringing an animation made with GSAP/React, I won't post the entire code because it got a little big, but you can see in my github all the code.&lt;/p&gt;

&lt;p&gt;GSAP is a library that facilitates the creation of animations, making it simple and intuitive.&lt;br&gt;
With it we can animate (CSS properties, canvas library objects, SVG, React, Vue, Angular, generic objects, whatever) and also resolve countless browser inconsistencies, all with incredible speed (up to 20x faster than jQuery ), including automatic GPU acceleration of transforms.&lt;/p&gt;

&lt;p&gt;The GSAP community is very active, and for those who have doubts about creating some animation, I recommend posting it on the GSAP forum &lt;a href="https://greensock.com/forums/"&gt;https:/ /greensock.com/forums/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here's an example of an animation that I managed to create using GSAP to help me, I hope you like it:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LEgmLkR1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kxy0wnii3wnw800jk43t.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LEgmLkR1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kxy0wnii3wnw800jk43t.gif" alt="Gustavo Scarpim"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;See the complete code here on GitHub &lt;a href="https://github.com/GuScarpim/Cat-Animation"&gt;&lt;b&gt;Click here&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Check out the Project in action &lt;a href="https://cat-animation.netlify.app/"&gt;&lt;b&gt;Deploy&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks for reading.&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>gsap</category>
    </item>
    <item>
      <title>
Emotion Detection CNN using keras</title>
      <author>Mayank Choudhary</author>
      <pubDate>Sat, 21 Aug 2021 17:42:47 +0000</pubDate>
      <link>https://dev.to/rado_mayank/emotion-detection-cnn-using-keras-20n7</link>
      <guid>https://dev.to/rado_mayank/emotion-detection-cnn-using-keras-20n7</guid>
      <description>&lt;h2&gt;
  &lt;a href="#tools-and-libraries-used-"&gt;
  &lt;/a&gt;
  Tools and Libraries used -
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Install anaconda&lt;/li&gt;
&lt;li&gt;Jupyter notebook&lt;/li&gt;
&lt;li&gt;VSCode&lt;/li&gt;
&lt;li&gt;matplotlib &lt;/li&gt;
&lt;li&gt;numpy&lt;/li&gt;
&lt;li&gt;openCV&lt;/li&gt;
&lt;li&gt;keras


  dataset
  &lt;a href="https://www.kaggle.com/jonathanoheix/face-expression-recognition-dataset"&gt;https://www.kaggle.com/jonathanoheix/face-expression-recognition-dataset&lt;/a&gt;&lt;br&gt;



&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#given-dataset-of-different-expressions"&gt;
  &lt;/a&gt;
  Given dataset of different expressions:
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lZT2CSNf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ro6l2u6nolark9a44atu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lZT2CSNf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ro6l2u6nolark9a44atu.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;



&lt;ul&gt;
&lt;li&gt;source code - &lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/mayankchaudhary26"&gt;
        mayankchaudhary26
      &lt;/a&gt; / &lt;a href="https://github.com/mayankchaudhary26/Emotion_Detection_CNN_keras"&gt;
        Emotion_Detection_CNN_keras
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Emotion_Detection_CNN_keras&lt;/h1&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/56837137/129614646-5261538f-e67e-45ef-969d-91cce64fc103.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FjZNx3OP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/56837137/129614646-5261538f-e67e-45ef-969d-91cce64fc103.png" alt="Screenshot (237)"&gt;&lt;/a&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;
Given dataset of different expressions:&lt;/h3&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/56837137/129614578-81814958-85f9-4a19-b52d-cfd9eaa492f9.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Vxwh4HDj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/56837137/129614578-81814958-85f9-4a19-b52d-cfd9eaa492f9.png" alt="Screenshot (234)"&gt;&lt;/a&gt;
&lt;br&gt;
&lt;a href="https://www.kaggle.com/jonathanoheix/face-expression-recognition-dataset" rel="nofollow"&gt;https://www.kaggle.com/jonathanoheix/face-expression-recognition-dataset&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/mayankchaudhary26/Emotion_Detection_CNN_keras"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Emotion Detection — Classifying the emotion on the face as happy, angry, sad, neutral, and surprise.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2_J5qyya--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sj67dfophwicj3uqat14.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2_J5qyya--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sj67dfophwicj3uqat14.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>keras</category>
      <category>python</category>
      <category>cnn</category>
      <category>machinelearning</category>
    </item>
    <item>
      <title>Macbook's Shopping Cart</title>
      <author>Al Siam</author>
      <pubDate>Sat, 21 Aug 2021 17:05:43 +0000</pubDate>
      <link>https://dev.to/alsiamworld/macbook-s-shopping-cart-4ogo</link>
      <guid>https://dev.to/alsiamworld/macbook-s-shopping-cart-4ogo</guid>
      <description>&lt;h1&gt;
  &lt;a href="#100daysofcode-day-11"&gt;
  &lt;/a&gt;
  100daysofcode [Day -11]
&lt;/h1&gt;

&lt;p&gt;Hey, would you like to buy a MacBook? Click on the link below and set up the configuration and I will give it to you when I become a pro developer.&lt;br&gt;
Today I created this shopping cart and you will get all the costs in the real-time update.&lt;br&gt;
Live Preview: &lt;a href="https://macbook-carts.netlify.app"&gt;https://macbook-carts.netlify.app&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tPY5PwBE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a6bak6173pfbq81uu7v6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tPY5PwBE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a6bak6173pfbq81uu7v6.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#javascript-developer-programming"&gt;
  &lt;/a&gt;
  javascript # #developer #programming
&lt;/h1&gt;

</description>
      <category>100daysofcode</category>
      <category>javascript</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>ASP.NET Core Unit Testing with FluentAssertions</title>
      <author>EzzyLearning.net</author>
      <pubDate>Sat, 21 Aug 2021 17:00:29 +0000</pubDate>
      <link>https://dev.to/ezzylearning/asp-net-core-unit-testing-with-fluentassertions-59fg</link>
      <guid>https://dev.to/ezzylearning/asp-net-core-unit-testing-with-fluentassertions-59fg</guid>
      <description>&lt;p&gt;Writing and releasing a bug-free software product is a goal of every software developer and one of the tools to achieve this goal is unit testing. Unfortunately, the unit test coverage is not very high in many software projects and the main reason for this low coverage is that many developers think that they are either too busy in writing business logics and can’t give enough time to unit tests or they complain that most of the time unit tests written by other developers are not easy to read. Luckily, we have a library called &lt;a href="https://fluentassertions.com/"&gt;FluentAssertions&lt;/a&gt; that makes our unit test look like the sentences written in plain English which are very easy to write and read by developers. In this tutorial, I will cover different features available in the FluentAssertions library so that you can also develop robust and bug-free software.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-unit-testing"&gt;
  &lt;/a&gt;
  What is Unit Testing?
&lt;/h2&gt;

&lt;p&gt;A unit test is a way to test the smallest unit of the software. In almost all programming languages, this smallest unit is normally a function (method), a subroutine, or a property. When we do unit testing, we check whether a particular property has the expected value or a particular method is returning a value or result we are expecting it to return. There are many popular unit test frameworks available for almost all programming languages and all types of applications. The three most popular unit tests frameworks used by many .NET developers around the world are &lt;a href="https://nunit.org/"&gt;NUnit&lt;/a&gt;, &lt;a href="https://xunit.net/"&gt;xUnit&lt;/a&gt;, and &lt;a href="https://docs.microsoft.com/en-us/dotnet/core/testing/unit-testing-with-mstest"&gt;MSTest&lt;/a&gt;. All of these frameworks have their pros and cons but they all have an extensive set of features for writing unit tests. These three unit test frameworks are so popular that Microsoft Visual Studio has built-in project templates for these frameworks.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PCGDL-Wp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qyu192v7c11d9wkcaive.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PCGDL-Wp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qyu192v7c11d9wkcaive.jpg" alt="Unit Test Projects in Visual Studio 2019"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://fluentassertions.com/"&gt;FluentAssertions&lt;/a&gt; library supports many unit test frameworks including NUnit, xUnit, and MSTest. It has a feature to automatically detect the test framework you are using in your project and it will immediately start using the test framework for throwing framework specific exceptions.&lt;/p&gt;

&lt;p&gt;For this tutorial, I will write all unit tests using the NUnit framework which I have been using recently in some of my projects. Here is an example of a simple unit test written using the NUnit framework. Let’s say you have a simple Add method that simply returns the sum of two numbers passed as parameters.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;public int Add(int a, int b)
{
    return a + b;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The following unit test shows how to test the above method using NUnit by adding a &lt;strong&gt;[Test]&lt;/strong&gt; attribute and using the &lt;strong&gt;AreEqual&lt;/strong&gt; method of &lt;strong&gt;Assert&lt;/strong&gt; class.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[Test]
public void TestAddMethod()
{
    var result = Add(2, 3);
    var expected = 5;
    Assert.AreEqual(expected, result);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If the Add method is working as expected, our above test should pass and you will see the Success message in the Unit Test session running inside Visual Studio.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LDktHB9I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v0leqiziu7q6psnzmshz.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LDktHB9I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v0leqiziu7q6psnzmshz.jpg" alt="Unit Test Passed in Visual Studio"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now let’s assume that a developer made some changes in the Add method and by mistake changed the + operator with the – operator in the method.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;public int Add(int a, int b)
{
    return a - b;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you will run your Unit Test again, your test will fail because you are expecting the value 5 but due to a bug in the Add method, it is not returning what you are expecting. This is the simplest example to demonstrate to you how Unit Tests can help you in identifying the bugs in your method quickly so that you can fix those bugs.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eHCrY8FH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dd9qeemsg441ia7j6y4c.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eHCrY8FH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dd9qeemsg441ia7j6y4c.jpg" alt="Unit Test Failed in Visual Studio"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In real-world applications, your methods will not be as simple as our &lt;strong&gt;Add&lt;/strong&gt; method shown in the above example. Maybe you have a method similar to below that returns the array of integers and you want to test it in multiple ways.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;public int[] GetNumbers()
{
    return new int[] { 1, 2, 3, 4, 5};
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You want to write unit tests to test all of the following conditions:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The returned array is not empty&lt;/li&gt;
&lt;li&gt;Array length is 5&lt;/li&gt;
&lt;li&gt;The first value in the array is 1&lt;/li&gt;
&lt;li&gt;The last value in the array is 5&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Your unit test will look something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[Test]
public void TestAddMethod()
{
    int[] data = GetNumbers();

    var expectedLength = 5;
    var expectedFirstNumber = 1;
    var expectedLastNumber = 5;

    Assert.IsNotEmpty(data);
    Assert.AreEqual(expectedLength, data.Length);
    Assert.AreEqual(expectedFirstNumber, data\[0\]);
    Assert.AreEqual(expectedLastNumber, data\[expectedLength - 1\]);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There is nothing wrong with the above Unit Test but you need to spend a few seconds if not minutes to understand what’s going on. This is the biggest complaint developers normally have that their unit tests are not easy to read and understand. Before I deep dive into FluentAssertions, let me show you how you can write the above Unit Test using FluentAssertions. The following example shows how you can write a human readable, English style statements to test the same conditions mentioned above using the FluentAssertions library.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[Test]
public void TestAddMethod()
{
    int[] data = GetNumbers();

    var expectedLength = 5;
    var expectedFirstNumber = 1;
    var expectedLastNumber = 5;

    data.Should().NotBeEmpty();
    data.Should().HaveCount(expectedLength);
    data.Should().StartWith(expectedFirstNumber);
    data.Should().EndWith(expectedLastNumber);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can make your code even shorter by combing multiple conditions with And method as shown below. I am sure you will agree with me that reading the following unit tests is much easier than what we have written without FluentAssertions above.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;data.Should().NotBeEmpty()
    .And.HaveCount(expectedLength)
    .And.StartWith(expectedFirstNumber)
    .And.EndWith(expectedFirstNumber);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#what-is-fluentassertions"&gt;
  &lt;/a&gt;
  What is FluentAssertions?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://fluentassertions.com/"&gt;FluentAssertions&lt;/a&gt; is one of the most popular (over 66 million downloads on &lt;a href="https://www.nuget.org/packages/FluentAssertions/5.10.3"&gt;Nuget&lt;/a&gt;) .NET library that contains a large collection of .NET extension methods that allow .NET developers to write unit tests using a fluent syntax which is very easy to read and write and clearly shows the intent of the unit test. The library has extension methods to test almost everything related to .NET such as Strings, Booleans, Dates, Guids, Collections, Exceptions, and even Nullable Types. You can add this library to your unit test projects via &lt;a href="https://www.nuget.org/packages/FluentAssertions/5.10.3"&gt;Nuget&lt;/a&gt; package manager and start using this library in few minutes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k0vxl7bf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/il2vmpag0lrklaqu26fv.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k0vxl7bf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/il2vmpag0lrklaqu26fv.jpg" alt="Download FluentAssertions from Nuget"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once the library is downloaded from Nuget, you just need to add the following using statement in your unit test file and you have a big list of .NET extensions methods at your disposal.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;using FluentAssertions;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let’s write some basic unit tests to become comfortable with FluentAssertions. The following test is using the most common FluentAssertions method called “&lt;strong&gt;Should&lt;/strong&gt;” which can be chained with many other extension methods of the library. In the following example, we have a string and we want to test whether a string starts with the word “US” or not. Of course, the following test will pass as our currency variable hold the string “US Dollars” which starts with the word “US”.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[Test]
public void TestAddMethod()
{
    var currency = "US Dollars";
    currency.Should().StartWith("US");
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you are expecting a currency string to start with the word “GB” then the following test will fail.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[Test]
public void TestAddMethod()
{
    var currency = "US Dollars";
    currency.Should().StartWith("GB");
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You will see a clear message “&lt;strong&gt;Expected currency to start with “GB” but “US Dollars” differs near “US “ (index 0).&lt;/strong&gt;” to show you exactly why the test failed.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aL9KEZwt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2tdfr3p4c7w9nodr03c1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aL9KEZwt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2tdfr3p4c7w9nodr03c1.jpg" alt="Failed Unit Test with FluentAssertions"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You also have an option to customize the above message even further by setting the &lt;strong&gt;because&lt;/strong&gt; parameter available in most FluentAssertions extension methods.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var currency = "US Dollars";

currency.Should().StartWith("GB", because: "We only accepts GB Pounds.");
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Running the above test with a custom message will display the following message when the test will fail.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Expected currency to start with "GB" because We only accepts GB Pounds., but "US Dollars" differs near "US " (index 0).
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You may have already noticed that the FluentAssertions library is automatically inferring the values we are testing into the test failure messages. This feature is called 'Subject Identification'. In the example above, see how the library is extracting the words like “GB” and “US Dollars” automatically and adding them into the failure message. This is a very useful feature for developers who want to see the data and the reason for their test failures in the quickest way possible.&lt;/p&gt;

&lt;p&gt;Another cool feature of FluentAssertions library is the ability to combine multiple unit tests with the &lt;strong&gt;And&lt;/strong&gt; method as shown below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[Test]
public void TestAddMethod()
{
    int[] data = GetNumbers();
    data.Should().NotBeEmpty()
        .And.HaveCount(5)
        .And.StartWith(1)
        .And.EndWith(5);
}

public int[] GetNumbers()
{
    return new int[] { 1, 2, 3, 4, 5 };
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#assertion-scopes"&gt;
  &lt;/a&gt;
  Assertion Scopes
&lt;/h2&gt;

&lt;p&gt;If you have multiple Assertions in your unit tests and one of the tests failed, the exception will be thrown immediately and the methods below the failed test will never be called. For example, in the following code snipped the unit test method &lt;strong&gt;HaveCount(5)&lt;/strong&gt; will fail as we have 6 elements in the data array, and the methods &lt;strong&gt;StartWith&lt;/strong&gt; and &lt;strong&gt;EndWith&lt;/strong&gt; will never get executed.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[Test]
public void TestAddMethod()
{
    int[] data = GetNumbers();

    data.Should().NotBeEmpty();
    data.Should().HaveCount(5);
    data.Should().StartWith(1);
    data.Should().EndWith(5);
}

public int[] GetNumbers()
{
    return new int[] { 1, 2, 3, 4, 5, 6 };
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Running the above unit test will throw the exception with the following message.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Expected data to contain 5 item(s), but found 6.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you want to run multiple assertions in a batch then you can use &lt;strong&gt;AssertionScope&lt;/strong&gt; which combines multiple assertions in a group and an exception is thrown at the end once the entire batch is executed. If multiple tests will fail, then failure messages of all those tests will be displayed. Here is an example of creating a batch of multiple tests using AssertionScope.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[Test]
public void TestAddMethod()
{
    int[] data = GetNumbers();

    using (new AssertionScope())
    {
        data.Should().NotBeEmpty();
        data.Should().HaveCount(5);
        data.Should().StartWith(1);
        data.Should().EndWith(5);
    }
}

public int[] GetNumbers()
{
    return new int[] { 7, 2, 3, 4, 5, 9 };
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above example, the entire batch of tests will execute and you will see all failure messages in the end as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Expected data to contain 5 item(s), but found 6.
Expected data to start with {1}, but {7, 2, 3, 4, 5, 9} differs at index 0.
Expected data to end with {5}, but {7, 2, 3, 4, 5, 9} differs at index 5.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#basic-fluentassertions-examples"&gt;
  &lt;/a&gt;
  Basic FluentAssertions Examples
&lt;/h2&gt;

&lt;p&gt;In almost all of the above examples, I have either used strings or an array of integers but please keep in mind that FluentAssertions has a huge collection of methods to test almost every data type or object in .NET. Let’s go through some quick examples of the most common data types we use in our projects on daily basis.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#nullable-types"&gt;
  &lt;/a&gt;
  Nullable Types
&lt;/h3&gt;

&lt;p&gt;The common methods to test Booleans are BeNull, NotBeNull, HaveValue, NotHaveValue.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;short? number = 5;

number.Should().NotBeNull();
number.Should().HaveValue();
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#booleans"&gt;
  &lt;/a&gt;
  Booleans
&lt;/h3&gt;

&lt;p&gt;The common methods to test Booleans are BeTrue, BeFalse, NotBeTrue, NotBeFalse and Be.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[Test]
public void TestAddMethod()
{
    var isAvailable = IsAvailableInStock();

    isAvailable.Should().BeTrue();

    bool expectedResult = true;
    isAvailable.Should().Be(expectedResult);
}

public bool IsAvailableInStock()
{
    return true;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#strings"&gt;
  &lt;/a&gt;
  Strings
&lt;/h3&gt;

&lt;p&gt;FluentAssertions library has a huge collection of methods to test Strings. Here are some common examples and a full list can be found &lt;a href="https://fluentassertions.com/strings/"&gt;here&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;string value = "Fluent Assertions";

value.Should().NotBeNullOrWhiteSpace();
value.Should().Contain("Fluent");
value.Should().Contain("s", Exactly.Thrice());
value.Should().Be("Fluent Assertions");
value.Should().NotBe("FluentAssertions");
value.Should().BeOneOf(
    "Fluent Assertions",
    "FluentAssertions"
);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#datetime"&gt;
  &lt;/a&gt;
  DateTime
&lt;/h3&gt;

&lt;p&gt;FluentAssertions library has many methods to test Dates and TimeSpans. Some examples are given below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;DateTime? date = new DateTime(2020, 11, 28);

date.Should().Be(28.November(2020));
date.Should().BeBefore(1.December(2020));
date.Should().NotBeAfter(1.December(2020));
date.Should().HaveDay(28);
date.Should().HaveMonth(11);
date.Should().HaveYear(2020);

DateTime deadline = new DateTime(2020, 11, 30);
date.Should().BeMoreThan(1.Days()).Before(deadline);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#collections"&gt;
  &lt;/a&gt;
  Collections
&lt;/h3&gt;

&lt;p&gt;FluentAssertions library also has methods to test Collections and IEnumerable. Here are some common examples and a full list of methods is available &lt;a href="https://fluentassertions.com/collections/"&gt;here&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;IEnumerable collection = new[] { 1, 2, 3, 4 };

collection.Should().NotBeEmpty();
collection.Should().NotContainNulls();
collection.Should().HaveCount(4);
collection.Should().OnlyHaveUniqueItems();
collection.Should().Contain(3);
collection.Should().BeSubsetOf(new[] { 1, 2, 3, 4, 5, 6, 7, 8, 9 });
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#unit-testing-aspnet-core-mvc-controllers"&gt;
  &lt;/a&gt;
  Unit Testing ASP.NET Core MVC Controllers
&lt;/h2&gt;

&lt;p&gt;So far we wrote unit tests to test basic .NET types and objects. If you are developing an ASP.NET Core MVC web application, you may want to unit test MVC controllers. Let say you have the following HomeController that returns a list of strings as the model.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;public class HomeController : Controller
{ 
    public IActionResult Index()
    {
        var list = new string\[\] { "One", "Two", "Three" };

        ViewData\["ListCount"\] = list.Length;
        ViewBag.Message = "Success";

        return View("Index", list);        
    } 
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To unit test this controller, first, you need to add a reference of your MVC project in your unit test project and then you can create an object of HomeController just like a normal C# class. Finally, you can invoke the Index action method as shown below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[Test]
public void HomeControllerTests()
{
     HomeController controller = new HomeController();
     var result = controller.Index() as ViewResult;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once you have the ViewResult object available, you can use FluentAssertions methods to test whether our ViewResult is null or not.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;result.Should().NotBeNull();
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can also test if the Index action is returning a ViewResult type object.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;result.Should().BeOfType(typeof(ViewResult));
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can also write a test to check the data stored in the ViewData dictionary&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;result.ViewData\["ListCount"\].Should().Be(3);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can also check the ViewName&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;result.ViewName.Should().Be("Index");
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you want to test whether the ViewBag.Message property contains the “Success” message, you can write the following code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;((string) controller.ViewBag.Message).Should().Be("Success");
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let’s say you also want to test the Model returned from the Index action. You can achieve this by checking the Model property as shown below. The code snippet below not only checking whether the Model is a type of string[] array but also checking that it’s not empty and has three elements in it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var model = result.Model as string\[\];

model.Should().BeOfType&amp;lt;string\[\]&amp;gt;();
model.Should().NotBeEmpty();
model.Should().HaveCount(3);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here is the complete code of all the unit tests we wrote above.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[Test]
public void HomeControllerTests()
{
     HomeController controller = new HomeController();
     var result = controller.Index() as ViewResult;

     result.Should().NotBeNull();
     result.Should().BeOfType(typeof(ViewResult));
     result.ViewName.Should().Be("Index");
     result.Model.Should().NotBeNull();

     var model = result.Model as string\[\];

     model.Should().BeOfType&amp;lt;string\[\]&amp;gt;();
     model.Should().NotBeEmpty();
     model.Should().HaveCount(3);

     ((string) controller.ViewBag.Message).Should().Be("Success");
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  Final Thoughts
&lt;/h2&gt;

&lt;p&gt;In this tutorial, I gave you an overview of one of my favorite Nuget library FluentAssertions. Of course, it’s a huge library and I can’t cover all of its methods in this tutorial. If you want to know more about FluentAssertions then you can read the official documentation &lt;a href="https://fluentassertions.com/introduction"&gt;here&lt;/a&gt;. I hope you will like this library and will start using it in your projects to make your unit tests more human friendly.&lt;/p&gt;

</description>
      <category>dotnet</category>
      <category>csharp</category>
      <category>testing</category>
      <category>fluentassertions</category>
    </item>
    <item>
      <title>The Developer Feedback You Are Actually Getting is Survivorship Bias</title>
      <author>Ben Halpern</author>
      <pubDate>Sat, 21 Aug 2021 16:57:18 +0000</pubDate>
      <link>https://dev.to/ben/the-developer-feedback-you-are-actually-getting-is-survivorship-bias-4b54</link>
      <guid>https://dev.to/ben/the-developer-feedback-you-are-actually-getting-is-survivorship-bias-4b54</guid>
      <description>&lt;p&gt;Lots of people will get in touch with you about improvements to your developer-oriented product or library. This feedback is great, but take it with a grain of salt, there is a much quieter group with much bigger struggles.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--3YEt48ds--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1281071936605323266/wc1KRZLK_normal.jpg" alt="Sarah Drasner profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Sarah Drasner
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/sarah_edo"&gt;@sarah_edo&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      The folks that bounced due to bad docs, tutorials, and onboarding aren't telling you. They're just leaving.
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      15:05 PM - 21 Aug 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1429097365563052034" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1429097365563052034" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1429097365563052034" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;The people who are getting in touch with you are the ones who aren't having the biggest problems. They understand your docs enough not to fear embarrassment of asking the wrong questions. They overcame missing context themselves, only to be able to ask questions which represent their group.&lt;/p&gt;


&lt;div class="ltag__wikipedia--container"&gt;
  &lt;div class="ltag__wikipedia--header"&gt;
    &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Sew3uq9H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/wikipedia-logo-0a3e76624c7b1c3ccdeb9493ea4add6ef5bd82d7e88d102d5ddfd7c981efa2e7.svg" class="ltag__wikipedia--logo" alt="Wikipedia Logo"&gt;
    &lt;a href="https://en.wikipedia.org/wiki/Survivorship_bias" rel="noopener noreferrer"&gt;Survivorship bias&lt;/a&gt;
  &lt;/div&gt;
  &lt;div class="ltag__wikipedia--extract"&gt;&lt;p&gt;&lt;b&gt;Survivorship bias&lt;/b&gt; or &lt;b&gt;survival bias&lt;/b&gt; is the logical error of concentrating on the people or things that made it past some selection process and overlooking those that did not, typically because of their lack of visibility. This can lead to some false conclusions in several different ways. It is a form of selection bias.&lt;/p&gt;&lt;/div&gt;
  &lt;div class="ltag__wikipedia--btn--container"&gt;
    
      &lt;a href="https://en.wikipedia.org/wiki/Survivorship_bias" rel="noopener noreferrer"&gt;View on Wikipedia&lt;/a&gt;
    
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;They did not get tripped up by implied dependency installation steps. They did not get lost due to assumptions of typical CLI behavior that you did not document. They survived to give you feedback.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;During World War II, the statistician Abraham Wald took survivorship bias into his calculations when considering how to minimize bomber losses to enemy fire. The Statistical Research Group (SRG) at Columbia University, which Wald was a part of, examined the damage done to aircraft that had returned from missions and recommended adding armor to the areas that showed the least damage, based on his reasoning. This contradicted the US military's conclusions that the most-hit areas of the plane needed additional armor. Wald noted that the military only considered the aircraft that had survived their missions; any bombers that had been shot down or otherwise lost had logically also been rendered unavailable for assessment. The bullet holes in the returning aircraft, then, represented areas where a bomber could take damage and still fly well enough to return safely to base. Thus, Wald proposed that the Navy reinforce areas where the returning aircraft were unscathed, inferring that planes hit in those areas were lost. His work is considered seminal in the then-nascent discipline of operational research.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;These are the planes which came home for you. Please find a way to account for the ones which never made it.&lt;/p&gt;

</description>
      <category>dx</category>
      <category>documentation</category>
      <category>ux</category>
      <category>management</category>
    </item>
    <item>
      <title>Top 5 vscode tips &amp; tricks</title>
      <author>Abdul Malik </author>
      <pubDate>Sat, 21 Aug 2021 16:13:49 +0000</pubDate>
      <link>https://dev.to/zihadm654/top-5-vscode-tips-tricks-44ik</link>
      <guid>https://dev.to/zihadm654/top-5-vscode-tips-tricks-44ik</guid>
      <description>&lt;h4&gt;
  &lt;a href="#if-your-are-a-developer-for-quite-some-times-you-will-be-familiar-with-these-names-these-top-5-vscode-tips-will-make-you-code-efficiently"&gt;
  &lt;/a&gt;
  If your are a developer for quite some times you will be familiar with these names. These top 5 vscode tips will make you code efficiently.
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Emmet
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Emmet&lt;/strong&gt; is a life saver for any developer who is working with any kind of language. Emmet makes it easier to write code faster. Emmet is just a auto compelete tool. It auto compelete your syntax based on what your writing.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;command Pallete
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Command Pallete&lt;/strong&gt; is shortcut way of finding any of the vscode functionality. It's the fastest way to open any thing in vs code without touching the mouse. Just type and open it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;SidePanel
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;SidePanel&lt;/strong&gt; As a developer you are mostly engaged with the keyboard most often. And It make you efficient when you are using mouse less or not using it. So, It is a pain to open or close side panel. It's ctrl + b and it's done now you can go with your coding.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Prettier
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Prettier&lt;/strong&gt; Its a real pain when you have format your code. And prettier makes it easier to format your code and forget about formating. You need to just install prettier and your are done. set it to save on format.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Bracket coloraizer 2
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Bracket coloraizer 2&lt;/strong&gt; is a extension which highlight your brackets. When their is too many code you find it difficult to find the specific bracket. And bracket coloraizer made it easier for you. If you need to now the a specific bracket opening and ending tag just select a tag and it will highlight the opening and ending of that tag.&lt;/p&gt;

&lt;p&gt;Thanks for the patience.&lt;br&gt;
Have a nice day&lt;/p&gt;

</description>
      <category>vscode</category>
      <category>react</category>
      <category>html</category>
      <category>javascript</category>
    </item>
    <item>
      <title>[Part 3] ⚛️ Senior React Coding Interview, By A Professional React Developer 👨‍💻</title>
      <author>Better Coding Academy</author>
      <pubDate>Sat, 21 Aug 2021 16:08:58 +0000</pubDate>
      <link>https://dev.to/bettercodingacademy/senior-react-coding-interview-by-a-professional-react-developer-part-3-13dd</link>
      <guid>https://dev.to/bettercodingacademy/senior-react-coding-interview-by-a-professional-react-developer-part-3-13dd</guid>
      <description>&lt;p&gt;&lt;strong&gt;About Me:&lt;/strong&gt; I've been a professional web developer for just over 10 years now. I'm currently the lead web development instructor at &lt;a href="https://codebetter.com.au"&gt;Better Coding Academy&lt;/a&gt;, and as part of what I do, I post videos on our YouTube channel at &lt;a href="https://www.youtube.com/c/BetterCodingAcademy"&gt;https://www.youtube.com/c/BetterCodingAcademy&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(Subscribe for awesome web development content!)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Here's part 3 of the mock React coding interview! I take the reusable table hook a bit further, showing how I'd implement a basic pagination system, and explaining some of the conscious decisions I've made in designing the system this way so far. I hope you enjoy!&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/WEu7AFbFIzw"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Happy coding!&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>What is a Frontend and a Backend? Basics of web development to clear your doubts</title>
      <author>Kunal Bagaria</author>
      <pubDate>Sat, 21 Aug 2021 15:54:01 +0000</pubDate>
      <link>https://dev.to/kb24x7/what-is-a-frontend-and-a-backend-basics-of-web-development-to-clear-your-doubts-3j57</link>
      <guid>https://dev.to/kb24x7/what-is-a-frontend-and-a-backend-basics-of-web-development-to-clear-your-doubts-3j57</guid>
      <description>&lt;p&gt;So you wanna be a full stack web developer but are confused with simple topics like a Frontend or a Backend. Stick around this article, and I'll guide you on how you can start with web development.&lt;/p&gt;

&lt;p&gt;Before we start, you may wanna join my Discord if you have any doubts or just want to hang out: &lt;a href="https://discord.gg/eBaFj2ytTU"&gt;Invite Link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's start with Frontend. The Frontend is basically the visual content that is rendered when you open a website. The browser renders that using HTML, CSS and JavaScript.&lt;/p&gt;

&lt;p&gt;You can make a Frontend either in fully Vanilla JavaScript, or you can use a JavaScript framework like React.js or Vue.js. Larger web applications typically use frameworks like these to make workflows easier.&lt;/p&gt;

&lt;p&gt;You might be asking, wait a minute, how is the content dynamic in websites? Those topics are better covered in web networking, but in a nutshell, the Frontend uses network requests from your server (which is the Backend) to display dynamic data onto the website.&lt;/p&gt;

&lt;p&gt;And this is a nice segue to the Backend, the backbone of web applications. The Backend handles everything from user authentication to handling user data.&lt;/p&gt;

&lt;p&gt;You can make a Backend with a Backend framework like Django, Ruby on Rails, Laravel, Express.js, etc.&lt;/p&gt;

&lt;p&gt;A Backend is deployed on a server, you can use cloud services like AWS, GCloud, DigitalOcean, Azure, etc for this.&lt;/p&gt;

&lt;p&gt;So how does the Backend store data? A Backend interacts with a database that stores all the data. You can use databases like Postgresql, MongoDB, etc.&lt;/p&gt;

&lt;p&gt;So, onto the final question, where do I start?&lt;/p&gt;

&lt;p&gt;For the Frontend, you MUST learn HTML, CSS and JavaScript to build dynamic websites. And then comes the option of frameworks, you may choose any one of them, React.js and Vue.js are the most widely used ones in this industry.&lt;/p&gt;

&lt;p&gt;For the Backend, if you have already learnt JavaScript and don't want to learn another language, I recommend you use Express.js. Otherwise if you're familiar with multiple languages or just want to learn Backend development, you may learn Django or Ruby on Rails. Those are the best options for beginners.&lt;/p&gt;

&lt;p&gt;Hit the like and follow button if you liked this article, I'll see you in the next one.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>tutorial</category>
      <category>guide</category>
      <category>react</category>
    </item>
    <item>
      <title>Updating Node.js to 16+ in Replit</title>
      <author>Arnav Kumar</author>
      <pubDate>Sat, 21 Aug 2021 15:42:55 +0000</pubDate>
      <link>https://dev.to/arnavkr/updating-node-js-to-16-in-replit-1ep0</link>
      <guid>https://dev.to/arnavkr/updating-node-js-to-16-in-replit-1ep0</guid>
      <description>&lt;p&gt;Hey There,&lt;br&gt;
Welcome to my first post, today i'll tell you how can you update your &lt;a href="https://replit.com/"&gt;Replit&lt;/a&gt;'s &lt;a href="https://nodejs.dev/"&gt;Nodejs&lt;/a&gt; version to 16+, so lets get started. &lt;/p&gt;

&lt;p&gt;Many want to do that as to support &lt;a href="https://discordjs.guide/"&gt;Discord&lt;/a&gt;'s latest v13 as it would only run on &lt;a href="https://nodejs.dev/"&gt;Nodejs&lt;/a&gt; v16.6 or higher. But there maybe your own reasons (Nobody likes old versions 😅).&lt;/p&gt;

&lt;p&gt;Here's our repl at version 12.x.x after this tutorial it will be updated to 16+&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3L4eudGV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fhti8xzbpzsujxceh32o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3L4eudGV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fhti8xzbpzsujxceh32o.png" alt="Unupdated Repl"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;At first go to your &lt;code&gt;repl&lt;/code&gt; or if you don't have any just create one.&lt;/p&gt;

&lt;p&gt;Go to the &lt;code&gt;shell prompt&lt;/code&gt; and run the following code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm init &lt;span class="nt"&gt;-y&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; npm i &lt;span class="nt"&gt;--save-dev&lt;/span&gt; node@16 &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; npm config &lt;span class="nb"&gt;set &lt;/span&gt;&lt;span class="nv"&gt;prefix&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;&lt;span class="si"&gt;)&lt;/span&gt;/node_modules/node &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;&lt;span class="si"&gt;)&lt;/span&gt;/node_modules/node/bin:&lt;span class="nv"&gt;$PATH&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UU9DIANS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/clhm66g6yv5dtli0mcer.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UU9DIANS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/clhm66g6yv5dtli0mcer.png" alt="Shell with code"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After running the code you would see the following output:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3Gn9ZlGm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cam7gfk1d86g38mcz8ot.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3Gn9ZlGm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cam7gfk1d86g38mcz8ot.png" alt="Shell after Run"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And congo 🎉 your repl's nodejs has been successfully updated to 16+. &lt;br&gt;
You could further confirm it by running &lt;code&gt;node -v&lt;/code&gt; in the shell&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Od4kyPvc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5ka4desxua80e6tokpz2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Od4kyPvc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5ka4desxua80e6tokpz2.png" alt="Success"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>node</category>
      <category>replit</category>
      <category>javascript</category>
      <category>v16</category>
    </item>
    <item>
      <title>8 examples to show Customer Obsession as a Software Engineer</title>
      <author>Kevin Peters</author>
      <pubDate>Sat, 21 Aug 2021 15:41:46 +0000</pubDate>
      <link>https://dev.to/getworkrecognized/8-examples-to-show-customer-obsession-as-a-software-engineer-9b1</link>
      <guid>https://dev.to/getworkrecognized/8-examples-to-show-customer-obsession-as-a-software-engineer-9b1</guid>
      <description>&lt;p&gt;Customer Obsession is manifested in many of the career ladders of the top technology companies. But why is that and how can you, as a Software Engineer, show this principle right now at your current job?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-customer-obsession"&gt;
  &lt;/a&gt;
  What is Customer Obsession?
&lt;/h2&gt;

&lt;p&gt;Customer obsession is a principle that describes your effort to make your customer happy. It can be applied to almost all positions in a world where you are working on problems that not only you have. This goes from end-customer-facing roles to internal roles where your customer is another employee.&lt;/p&gt;

&lt;p&gt;To make your customer happy there are different methods you can apply to make it work. The most important one is to know what your customer wants and for that, you have to be able to put yourself into the customer’s perspective and try out the work you have been doing from that perspective. See where you can improve things and be proactive with your actions to make the customer love your work.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#who-is-using-customer-obsession-as-a-leadership-principle"&gt;
  &lt;/a&gt;
  Who is using Customer Obsession as a Leadership Principle?
&lt;/h2&gt;

&lt;p&gt;The biggest technology companies are actively using this principle:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://getworkrecognized.com/tools/career-ladders-explorer/amazon-2020"&gt;Amazon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://getworkrecognized.com/tools/career-ladders-explorer/klarna-2020"&gt;Klarna&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://getworkrecognized.com/tools/career-ladders-explorer/github-2020"&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://getworkrecognized.com/tools/career-ladders-explorer"&gt;And Many more&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://getworkrecognized.com/login?utm_source=blog&amp;amp;utm_medium=devto&amp;amp;utm_campaign=customer-obsession-examples-software-engineer"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eFx4TFBu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/98z21mged6tfueqwxnw7.gif" alt="Promotional Banner for getworkrecognized"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A lot of companies have made this principle a core principle of them, and that has a reason. Within the last 10 to 20 years our software was getting closer and closer to the end customer. Everyone has experience with top-notch experiences provided by big apps like Instagram, Facebook, TikTok, or Uber to name a few. They just work, as expected, and without any problems. Why? Because the customer loves them.&lt;/p&gt;

&lt;p&gt;So let us jump into the examples.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#examples-you-can-do-to-show-customer-obsession"&gt;
  &lt;/a&gt;
  Examples you can do to show customer obsession
&lt;/h2&gt;

&lt;p&gt;Practicing customer obsession is difficult on day to day basis as a software engineer. This is because they do not have everyday contact with the customers of the product they create. But there are many indirect touchpoints, you can have. Let us discover them!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#supporting-the-customer-when-needed"&gt;
  &lt;/a&gt;
  Supporting the customer when needed
&lt;/h3&gt;

&lt;p&gt;Ever got asked a question by your support or salesperson in the company about a customer problem? This is a big opportunity to show customer obsession. Try to understand the salesperson or the support person first. Listen. And ask a lot of questions. And also if possible get to the direct words of the customer. Once you have gathered enough information you can answer questions quite easily, but get the whole picture first.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vTlmfgFv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8mbr47p9ujit76zbztnx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vTlmfgFv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8mbr47p9ujit76zbztnx.png" alt="An image showing several people in a meeting"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In bigger companies, you are mostly shielded away from direct customer feedback, and your product owner will probably talk to you regarding the "customer’s" problems. Make sure that the data backs this up, and that this is something the customer wanted.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#seek-to-understand-the-customer"&gt;
  &lt;/a&gt;
  Seek to understand the customer
&lt;/h2&gt;

&lt;p&gt;In the example presented before you could see already that you should be able to understand the customer by listening to third parties like someone in the company. But now let us go one step further. Someone in the company will have calls with customers from time to time. Ask them to join from time to time. Maybe once per month for an hour will work out. But this will be a worthwhile hour, you will learn a lot. And in these sessions, take notes of what the customer wants, how they think, and how you could affect them with your work.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#think-ahead-exceed-customers-expectation"&gt;
  &lt;/a&gt;
  Think ahead, exceed customer’s expectation
&lt;/h2&gt;

&lt;p&gt;Features and bugs are normally driven by the customer. A customer wants something to be done in your company’s product or found a mistake blocking their workflow in one way or another. The special skill to have now is to think more ahead, especially for features. The customer requests a feature, but the problem might be that the customer wants to achieve a lot more than they requested. To solve this, you need to think like the customer and think what are the next steps for this feature. Is there a relation or can it be made easier? For example, if you do frontend development it would be a simple idea to count the clicks till a customer will achieve what they wanted. Is there a way to reduce the clicks for the customer by prefilling fields in a clever way like they have used it last time, or based on other suggestions? Or when it is a backend problem, &lt;a href="https://uxplanet.org/how-to-write-good-error-messages-858e4551cd4"&gt;you can put extra focus on error messages and guide the customer to a solution&lt;/a&gt; or what they should have done instead. Most errors are simply describing only the state, good errors will give hints what the customer should do instead.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#put-yourself-into-the-customers-shoes"&gt;
  &lt;/a&gt;
  Put yourself into the customer’s shoes
&lt;/h2&gt;

&lt;p&gt;As we have learned in the last examples you will have to get a feeling of how the customer is seeing your product. This is difficult:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;If there is any secret of success, it lies in the ability to get the other person's point of view and see things from that person's angle as well as from your own.&lt;/em&gt; - Henry Ford&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;But no problem, you can learn it. Listen to the customers and use your product. Write down the smallest things that are problematic for you. Wrong colors, wrong behavior, and whatnot. You will get a feeling of what the customer "could" feel. Not all humans, and also not all customers, are equal. Some see one thing as a problem but others look at different problems. Try to understand each perspective. It will be golden for your whole career.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#find-problems-within-your-product"&gt;
  &lt;/a&gt;
  Find Problems within your product
&lt;/h2&gt;

&lt;p&gt;As we mentioned before, finding problems and barriers in your product is worthwhile. From now on simply spend 1 hour with your product every week where you write down annoyances when you are using it. Gather these thoughts and present them to your product owner or create tickets for these problems.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#find-data-to-understand-customer-satisfaction-and-loyalty"&gt;
  &lt;/a&gt;
  Find data to understand customer satisfaction and loyalty
&lt;/h2&gt;

&lt;p&gt;A problem most companies have with customer obsession is that it is not measured. Most companies just have abstract KPIs like revenue or user numbers. But what impacts the customer obsession is probably two metrics:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Customer Churn&lt;/li&gt;
&lt;li&gt;Customer Satisfaction&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m-K04Rrt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m4nizq97gwme6e5cd33k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m-K04Rrt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m4nizq97gwme6e5cd33k.png" alt="A graph"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Both can be measured. Customer churn is easy to measure but customer satisfaction is difficult. For this, you could work together with your product owner to &lt;a href="https://www.hotjar.com/blog/customer-satisfaction-survey/"&gt;send out surveys to the users&lt;/a&gt; of your product every month. If response rates are low, invite them to an "interview". People love being interviewed instead of being just a data point. But work on getting these metrics and make sure the company is using them for product development.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-documentation-for-your-customer"&gt;
  &lt;/a&gt;
  Create documentation for your customer
&lt;/h2&gt;

&lt;p&gt;Earlier we mentioned that customers ask questions and have demands. A problem is mostly that customers are not dumb but cannot find the answer they are looking for. This can be a user experience problem but also simply because there is no content. So what can you do? It’s easy, write documentation and guides on how your product can be used. For example, if you get asked a question twice by internal teams, write that question down in a FAQ and share it with your team and company peers.&lt;/p&gt;

&lt;p&gt;If it is external even write some documentation for them. Most of the time something is better than nothing. A big point should be made that documentation is hard to write. A good guide can be found here though: &lt;a href="https://documentation.divio.com/"&gt;The documentation system&lt;/a&gt;. Read through this guide and make it a goal to write down questions in a FAQ and provide documentation.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#look-at-competitors-how-they-make-the-customer-happy"&gt;
  &lt;/a&gt;
  Look at competitors how they make the customer happy
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Good artists copy, great artists steal.&lt;/em&gt; - Pablo Picasso&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;With that quote, it becomes clear that it is fine to look at other customers and how they show customer obsession. For example, just simply look at competitor’s documentation and write down why it is better to use them instead of your company’s product. The same can be applied to everything else, like how APIs are designed, how many clicks you need to get to the result the customer wanted, or when your customer is an internal person, how you present them with a solution that should be of high quality. So spy on your area of work on how competitors are doing, what they might do better, and what you can improve for your customers. Copy the good parts.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#understand-what-customer-problems-might-appear-in-the-future"&gt;
  &lt;/a&gt;
  Understand what customer problems might appear in the future
&lt;/h2&gt;

&lt;p&gt;Outlook is a big part of the higher you want to climb the career ladder. Employees that can establish a vision on behalf of the customer are golden. Based on KPIs and data from existing customers it should be clear already what is needed in the future. Formalizing this data and bringing the company or even team on the right track is important. Especially when it is about revenue and how the product could generate more profits for the company. Have a look at customer support requests and other data and see if you are observing trends in the whole industry that could be a business opportunity, whether it will be a completely new product or just a new feature. But with enough data, you can present it to your product owner to get validation and lead a project that will be successful. But more importantly, you will tackle the problems of customers that they mostly do not even recognize yet.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://getworkrecognized.com/login?utm_source=blog&amp;amp;utm_medium=devto&amp;amp;utm_campaign=customer-obsession-examples-software-engineer"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eFx4TFBu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/98z21mged6tfueqwxnw7.gif" alt="Promotional Banner for getworkrecognized"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;We hope we could give you some ideas on what you can do as a software engineer to do when you want or need to show more customer obsession. After all, there are many more examples of how you can show customer obsession. If you want to have a free lifetime license, feel free to reach out to us with an example of how you showed customer obsession at your job.&lt;/p&gt;

</description>
      <category>career</category>
      <category>growth</category>
      <category>promotion</category>
      <category>programming</category>
    </item>
    <item>
      <title>✅ Tell Me About A Time Project Took Longer Than Expected | Facebook Behavioral Interview (Jedi) Series 🔥</title>
      <author>The Interview Sage</author>
      <pubDate>Sat, 21 Aug 2021 15:24:49 +0000</pubDate>
      <link>https://dev.to/theinterviewsage/tell-me-about-a-time-project-took-longer-than-expected-facebook-behavioral-interview-jedi-series-5fna</link>
      <guid>https://dev.to/theinterviewsage/tell-me-about-a-time-project-took-longer-than-expected-facebook-behavioral-interview-jedi-series-5fna</guid>
      <description>&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/Dg-ii8N614U"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Before we discuss this question, let us recap what the Behavioral Interview Round at Facebook is.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Behavioral Interview Round is also known as the Jedi Interview round at Facebook.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It is about you and your history, your résumé, and your motivation.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The purpose of this interview is to assess whether the candidate will thrive in Facebook's peer-to-peer, minimal process, and unstructured engineering organization.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For Software Engineers, the behavioral interview is actually part behavioral and part coding. The coding part is a shorter version of the usual coding interviews and is included to supplement the other two coding interviews to get an additional coding signal.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#tips-amp-tricks-to-effectively-prepare-for-behavioral-interviews"&gt;
  &lt;/a&gt;
  Tips &amp;amp; Tricks to effectively prepare for Behavioral Interviews
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_kgnGQmN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4y9t832s7yc0j58aycqb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_kgnGQmN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4y9t832s7yc0j58aycqb.png" alt="Tips &amp;amp; Tricks to effectively prepare for Behavioral Interviews" title="Behavioral Interview Tips &amp;amp; Tricks"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Know yourself! Take the time to review your résumé, as the interviewer will almost certainly ask about key events in your work history.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Have concrete examples or anecdotes to support each of the questions.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Familiarize yourself with Facebook's mission statement and its five core values:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Be Bold&lt;/li&gt;
&lt;li&gt;Focus on Impact&lt;/li&gt;
&lt;li&gt;Move Fast&lt;/li&gt;
&lt;li&gt;Be Open&lt;/li&gt;
&lt;li&gt;Build Social Value&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Be yourself! Be open and honest about your successes and failures.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Be humble and focus on teamwork, leadership, and mentorship qualities.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now, let us review how to effectively answer this question.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#question-tell-me-about-a-time-a-project-took-longer-than-expected"&gt;
  &lt;/a&gt;
  Question: Tell Me About A Time A Project Took Longer Than Expected
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r1TWndgQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rgj1spw5141jtyckg99c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r1TWndgQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rgj1spw5141jtyckg99c.png" alt="Tell Me About A Time A Project Took Longer Than Expected" title="Tell Me About A Time A Project Took Longer Than Expected"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&lt;a href="https://www.youtube.com/watch?v=Hr5UJnKxwyg&amp;amp;t=2609s"&gt;Video Explanation&lt;/a&gt; with Evaluation Criteria, Response Framework, Tips &amp;amp; Tricks, Sample Answer (Example), and a Special Case of "Don't Have Any Work Experience".&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Software Engineering projects usually take longer time than planned. As a result, interviewers often ask the candidates to tell about a time when their project took longer than expected.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#evaluation-criteria"&gt;
  &lt;/a&gt;
  Evaluation Criteria
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hWQp_OFp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7yaxe0lgc6r407obre8o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hWQp_OFp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7yaxe0lgc6r407obre8o.png" alt="Evaluation Criteria for Tell Me About A Time A Project Took Longer Than Expected" title="Evaluation Criteria for 'Tell Me About A Time A Project Took Longer Than Expected'"&gt;&lt;/a&gt; &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BL6A-0R8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/teozp6kvqbql5llpya8n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BL6A-0R8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/teozp6kvqbql5llpya8n.png" alt="Evaluation Criteria for Tell Me About A Time A Project Took Longer Than Expected" title="Evaluation Criteria for 'Tell Me About A Time A Project Took Longer Than Expected'"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Everyone in their career journey has worked on a project which has taken more time than initially planned. By asking this question, the interviewer's goal is to assess whether you can adapt and perform in challenging situations or unstructured environments.&lt;/p&gt;

&lt;p&gt;They want to get a handle on how well you can:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Manage competing priorities,&lt;/li&gt;
&lt;li&gt;Understand the implications of missing deadlines, and&lt;/li&gt;
&lt;li&gt;Shift gears when needed.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;They are trying to see if you can distinguish between the urgent and the important.&lt;/p&gt;

&lt;p&gt;Employers want to know your ability to stay calm, exercise judgment, and act responsibly in such unexpected high-pressure situations. They are assessing your perseverance to explore the ambiguity and learn new things, despite the challenges.&lt;/p&gt;

&lt;p&gt;Interviewers are also evaluating your:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Communication,&lt;/li&gt;
&lt;li&gt;Time management,&lt;/li&gt;
&lt;li&gt;Problem-solving, and&lt;/li&gt;
&lt;li&gt;Decision-making skills.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;They are looking to see if your coworkers can rely on you to get the work done.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#response-framework"&gt;
  &lt;/a&gt;
  Response Framework
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QBqSmNro--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vnl87n4fd2102z8wlgea.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QBqSmNro--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vnl87n4fd2102z8wlgea.png" alt="Response Framework for Tell Me About A Time A Project Took Longer Than Expected" title="Response Framework for 'Tell Me About A Time A Project Took Longer Than Expected'"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Our advice is to pick a compelling and honest story that can articulate a real-life experience where you worked on a project at your workplace, which took longer than expected.&lt;/p&gt;

&lt;p&gt;Describe the situation, events that occurred, and explain how and why the project got delayed from its initial estimation. For example, it can be any of the following scenarios:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;A few of your colleagues working with you on the project unexpectedly left the team or the company, and you were left short-staffed to complete it within the current deadline.&lt;/li&gt;
&lt;li&gt;The agreed requirements got modified by the client team in the middle of the quarter.&lt;/li&gt;
&lt;li&gt;Something genuinely urgent comes up, like a production issue, for which you had to drop everything else.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Explain to the interviewer how you evaluated and decided your plan of action. For example:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;You worked with your manager to re-assess the remaining OKRs for the project, deprioritize a few optional tasks, and create an updated timeline to deliver the necessary features.&lt;/li&gt;
&lt;li&gt;Describe how you were creative and resourceful to get additional help, if required, either from your own or some other team, to deliver the project within the modified deadline.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Also, elaborate on how you communicated about this shift with your manager, coworkers, and other stakeholders to keep them well informed.&lt;/p&gt;

&lt;p&gt;Finally, express how the outcome and the impact were beneficial to the company or team. Explain the learnings you took from this challenging situation and how they helped you become a better engineer.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tips-amp-tricks"&gt;
  &lt;/a&gt;
  Tips &amp;amp; Tricks
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gc43szIq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8yq33v4u3n9buhpi6oop.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gc43szIq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8yq33v4u3n9buhpi6oop.png" alt="Tips and Tricks for Tell Me About A Time A Project Took Longer Than Expected" title="Tips &amp;amp; Tricks for 'Tell Me About A Time A Project Took Longer Than Expected'"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here are some tips and tricks that will help you effectively prepare this question for the behavioral interview.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Always remain calm, composed, and professional.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Refrain from being negative and avoid blaming your employer, coworkers, or manager.&lt;/li&gt;
&lt;li&gt;Companies generally do not like to hire people who are always pointing fingers at others.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use a compelling story that is honest and believable.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It is most desirable to describe a real-life example to the interviewer to show that you have actually faced such a situation in your career and not just talk about a generic strategy.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Do not sugarcoat your answer with irrelevant details.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Spend more time talking about the actions you took to handle the challenging situation.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Show that you proactively communicated about the shifting deadlines to all the stakeholders to keep them well informed.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Focus on the business impact that you had on your company or team.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The biggest way to mess up answering this question is by simply saying that you have never worked on a project at your workplace, which took longer than expected.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Instead, explain your strategies for dealing with such situations in your day-to-day life.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Prepare the response for this question beforehand, as it will be tough to structure your answer on the spot during the interview.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Do not memorize the answer as it should come naturally, and you should sound confident to the interviewer.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#sample-answer-example"&gt;
  &lt;/a&gt;
  Sample Answer (Example)
&lt;/h2&gt;

&lt;p&gt;Here is Mike. He is currently working as a Senior Software Engineer at a major technology company. He is interviewing for the role of Staff Software Engineer at Facebook. &lt;/p&gt;

&lt;p&gt;🎧 Listen to his response to this question in this &lt;a href="https://www.youtube.com/watch?v=Hr5UJnKxwyg&amp;amp;t=2869s"&gt;YouTube Video&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#special-case-dont-have-any-work-experience"&gt;
  &lt;/a&gt;
  Special Case: Don't Have Any Work Experience
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DRgnYMgx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vpa5u1qahsmo5zd4dff6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DRgnYMgx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vpa5u1qahsmo5zd4dff6.png" alt="Special Case: Don't Have Any Work Experience" title="Special Case: Don't Have Any Work Experience"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It may be the case that you actually never worked on a project at your workplace, which took longer than expected. New Grads and entry-level software engineers may fall under this category.&lt;/p&gt;

&lt;p&gt;If you are in such a situation,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Do not end your answer by simply saying no to this question.&lt;/li&gt;
&lt;li&gt;Instead, try to use a real experience from your college or day-to-day life. For example:

&lt;ul&gt;
&lt;li&gt;The project you were working on as the Graduate Research Assistant got delayed due to new additional requirements.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This will help the interviewer evaluate you on the following attributes that we mentioned earlier:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;How well you adapt and perform in challenging situations,&lt;/li&gt;
&lt;li&gt;Manage competing priorities,&lt;/li&gt;
&lt;li&gt;Understand the implications of missing deadlines,&lt;/li&gt;
&lt;li&gt;Ability to stay calm, exercise judgment, and act responsibly,&lt;/li&gt;
&lt;li&gt;Communication skills, and&lt;/li&gt;
&lt;li&gt;Time management skills.&lt;/li&gt;
&lt;/ol&gt;




&lt;h1&gt;
  &lt;a href="#preparation-material"&gt;
  &lt;/a&gt;
  Preparation Material
&lt;/h1&gt;

&lt;p&gt;Learn more about the Evaluation Criteria, Response Framework, Tips &amp;amp; Tricks, and Sample Answers (Examples) to effectively prepare and answer these top questions asked in the Behavioral Interviews at Facebook. Certain special cases are also discussed which are usually faced by the candidates during these interviews.&lt;/p&gt;

&lt;p&gt;⬇️ &lt;a href="https://www.buymeacoffee.com/interviewsage/e/40678"&gt;Detailed Notes on Top Facebook Behavioral Interview Questions - Part 2&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#cracking-the-facebook-behavioral-interview"&gt;
  &lt;/a&gt;
  Cracking the Facebook Behavioral Interview
&lt;/h1&gt;

&lt;p&gt;If you have not read our first article on Top Facebook Behavioral Interview Questions, we recommend reading it by clicking the below link:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/theinterviewsage" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xMM4L2Ac--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--B2cc8AK0--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/553012/244b250a-5230-4388-84d4-0c1d1ff70fb9.png" alt="theinterviewsage"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/theinterviewsage/top-facebook-behavioral-interview-questions-part-1-2a0o" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;✅ Top Facebook Behavioral Interview Questions (Part 1) | Facebook Jedi Interview Round 🔥&lt;/h2&gt;
      &lt;h3&gt;The Interview Sage ・ May 15 ・ 9 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#career&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;





&lt;h1&gt;
  &lt;a href="#cracking-the-facebook-system-design-interview"&gt;
  &lt;/a&gt;
  Cracking the Facebook System Design Interview
&lt;/h1&gt;

&lt;p&gt;In case if you have not read our series on Cracking the Facebook System Design Interview, we recommend reading it by clicking the below link:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/theinterviewsage" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xMM4L2Ac--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--B2cc8AK0--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/553012/244b250a-5230-4388-84d4-0c1d1ff70fb9.png" alt="theinterviewsage"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/theinterviewsage/top-facebook-system-design-interview-questions-31np" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Top Facebook System Design Interview Questions (Part 1) | Facebook Pirate Interview Round&lt;/h2&gt;
      &lt;h3&gt;The Interview Sage ・ Jan 4 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#career&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;





&lt;h1&gt;
  &lt;a href="#useful-links"&gt;
  &lt;/a&gt;
  Useful Links
&lt;/h1&gt;

&lt;p&gt;✅ &lt;a href="https://bit.ly/Educative-Unlimited"&gt;Educative.io Unlimited Plan [💰 10% off for first 100 users]&lt;/a&gt;&lt;br&gt;
✅ &lt;a href="https://bit.ly/Try-Exponent"&gt;TryExponent.com Membership [💰 Limited Time 10% offer]&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;✅ &lt;a href="https://instagr.am/TheInterviewSage"&gt;Follow for Daily Coding Problem&lt;/a&gt;&lt;br&gt;
✅ &lt;a href="https://bit.ly/Join-Membership"&gt;Join our membership for exclusive benefits&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;👩‍💻 &lt;a href="https://www.educative.io/courses/grokking-the-system-design-interview?aff=KQZl"&gt;Best System Design Interview Course&lt;/a&gt;&lt;br&gt;
🚀 &lt;a href="https://bit.ly/SWE-Interview-Course"&gt;Complete SWE Interview Course [💰 Limited Time 10% offer]&lt;/a&gt;&lt;br&gt;
🙋‍♀️ &lt;a href="https://www.buymeacoffee.com/interviewsage/e/30176"&gt;Behavioral Interview Guide [💰 Special Discount]&lt;/a&gt;&lt;br&gt;
📚 &lt;a href="https://smarturl.it/InterviewPrepBook"&gt;Recommended Interview Preparation Book (on Amazon)&lt;/a&gt;&lt;/p&gt;




&lt;center&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/InterviewSage"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--121vjxPu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/o2l00b1bt3nl8fdfb0nn.png" alt="Buy Me a Coffee"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;☕️ Buy us a Coffee at &lt;a href="https://www.buymeacoffee.com/InterviewSage"&gt;BuyMeACoffee.com/InterviewSage&lt;/a&gt;&lt;/p&gt;


&lt;/center&gt;




&lt;center&gt;

&lt;p&gt;To stay updated about new posts, Subscribe &amp;amp; Follow Us!&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;a href="https://www.youtube.com/TheInterviewSage?sub_confirmation=1"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CRCmz2gQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3uqifmelnuenxiik8pwx.png" alt="Subscribe to our YouTube channel" title="Subscribe to our YouTube channel"&gt;&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href="https://www.instagram.com/TheInterviewSage"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OADCpudp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ovhcxjpg0v5z2tidtydk.png" alt="Follow us on Instagram" title="Follow us on Instagram"&gt;&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href="https://www.facebook.com/TheInterviewSage"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zohyoISu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xyy3kyo44tmv645vvrqw.png" alt="Like &amp;amp; Follow us on Facebook" title="Like &amp;amp; Follow us on Facebook"&gt;&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href="http://twitter.com/intent/follow?source=followbutton&amp;amp;variant=1.0&amp;amp;screen_name=InterviewSage"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UoV_1sI3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xwwcu44k00a0a8hpfbmf.png" alt="Follow us on Twitter" title="Follow us on Twitter"&gt;&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href="https://www.linkedin.com/in/TheInterviewSage"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5QaEiEG6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zcrwzwc9tnv0q3zmkih8.png" alt="Follow &amp;amp; Connect on LinkedIn" title="Follow &amp;amp; Connect on LinkedIn"&gt;&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;


&lt;/center&gt;



&lt;blockquote&gt;
&lt;p&gt;This article is part of the series on Behavioral Interviews at Facebook. So, follow us to get notified when our next article in this series is published. Thanks for reading! &lt;/p&gt;
&lt;div class="ltag__user ltag__user__id__553012"&gt;
  
    .ltag__user__id__553012 .follow-action-button {
      background-color: #3b49df !important;
      color: #f9fafa !important;
      border-color: #3b49df !important;
    }
  
    &lt;a href="/theinterviewsage" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xMM4L2Ac--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--B2cc8AK0--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/553012/244b250a-5230-4388-84d4-0c1d1ff70fb9.png" alt="theinterviewsage image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/theinterviewsage"&gt;The Interview Sage&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/theinterviewsage"&gt;Our goal is to create Software Eng Interview tutorials to help you get a job at companies like Facebook, Google, Apple, &amp;amp; Amazon. We will deep-dive into System Design, Coding, &amp;amp; Behavioral interviews.&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;



&lt;/blockquote&gt;

&lt;p&gt;📸 Some images used are from free&lt;span&gt;pik&lt;/span&gt;.com: Freepik, pch.vector, vectorjuice, pikisuperstar, raw&lt;span&gt;pixel&lt;/span&gt;.com, slidesgo, stories, Upklyak, jcomp, macrovector_official, syarifahbrit, redgreystock&lt;/p&gt;

&lt;p&gt;&lt;a href="https://disclosureanddisclaimer.theinterviewsage.com/"&gt;Full Disclosure &amp;amp; Disclaimer&lt;/a&gt;&lt;/p&gt;

</description>
      <category>career</category>
      <category>tutorial</category>
      <category>beginners</category>
      <category>codenewbie</category>
    </item>
  </channel>
</rss>
