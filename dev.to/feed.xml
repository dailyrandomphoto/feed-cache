<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How I Recreated YouTube in Figma: Practical Guide</title>
      <author>Shawn Mahbhb</author>
      <pubDate>Tue, 25 May 2021 11:36:43 +0000</pubDate>
      <link>https://dev.to/shawnmux/how-i-recreated-youtube-in-figma-practical-guide-5fjh</link>
      <guid>https://dev.to/shawnmux/how-i-recreated-youtube-in-figma-practical-guide-5fjh</guid>
      <description>&lt;p&gt;Content is king in 2021. we learn through content, we entertain ourselves with content, we even procrastinate ourselves with content. A large number of this content is the video and when it comes to video content, YouTube has been the undisputed king since its inception back in 2005.&lt;/p&gt;

&lt;p&gt;Apart from the great video content, we found on YouTube, a huge player behind YouTube’s popularity is its buttery smooth user experience. As an aspiring UX designer, I thought it would be a great learning experience to recreate YouTube from scratch.&lt;br&gt;
I split the journey into 4 sections thus you can understand my approach of recreating YouTube in a precise way.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Take the snapshot&lt;/li&gt;
&lt;li&gt;Analyze &amp;amp; create a component library&lt;/li&gt;
&lt;li&gt;Create the style sheet&lt;/li&gt;
&lt;li&gt;Follow fronted framework Vue JS&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
  &lt;a href="#take-the-snapshot"&gt;
  &lt;/a&gt;
  Take the Snapshot
&lt;/h2&gt;

&lt;p&gt;The first step is to take a snapshot of the interface. Different screen resolutions are starting from the 360px to 2160px but which one should you pick. The best option is to take the snapshot at 1440px which is the standard breakpoints of a desktop.&lt;/p&gt;

&lt;p&gt;After that, create a desktop frame in Figma which is 1440 X 1024 px by resolution. Drag the image file from your directory to the selected Figma frame. After placing the image successfully, align it to the top and left to the frame. Select the image from the layout hierarchy and reduce the opacity to 60% and lock it to the frame thus you can design other components over it.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/i1RSgq2etjI"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#analyze-amp-create-a-component-library"&gt;
  &lt;/a&gt;
  Analyze &amp;amp; create a component library
&lt;/h2&gt;

&lt;p&gt;Whenever you are going to design a large-scale application you need to build a component library because the same components will be reused in other sections of the interface.&lt;/p&gt;

&lt;p&gt;In my case, I’ve analyzed 4 major components with their base components and design the whole interface. For perfection, I switch to Firefox and take div screenshots and paste it to Figma. Additionally, I inspect the computed layout of the div section to measure margins and padding between the objects of the component to make the design identical.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4FS_rk3S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uj05bmfuhhqllp666jfj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4FS_rk3S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uj05bmfuhhqllp666jfj.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Video Card: From a UX perspective you need to have the skill to identify the component that draws the user’s attention first. In my case, it is the video card component that draws maximum attention from me when I visited YouTube every time. There are a couple of base components like Channel Avatar, Video Thumbnails, Video Title, and Channel Details.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Wkkt2bnQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/602/1%2AbC5mtRSLwf78SyXkFkFmzw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wkkt2bnQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/602/1%2AbC5mtRSLwf78SyXkFkFmzw.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Related Chips/Tags: On top of the video cards, there are related video chips that are generated by your watching history and suggest related tags as per your interest. As a UI designer, you need to design small components first so that you can build complex components to make the layout complete.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--epA3FCyh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2AG-oe_jjJG-o_Qs9P-aPXYA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--epA3FCyh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2AG-oe_jjJG-o_Qs9P-aPXYA.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;App Bar: The next component that I build is the app bar component. In these components, there are a couple of base components like search, user avatar and upload video icons. I combine all together to create an App Bar. This is the simplest component that I design from all of the components.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GtubaWGW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2AHQQW7uXrktNzccMh0N8YLQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GtubaWGW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2AHQQW7uXrktNzccMh0N8YLQ.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Navigation Drawer: Finally, I build the navigation drawer which is one of the important components for the users that will redirect the users to different pages of YouTube. In this component, there are also multiple base components but they are similar in type. That is why I create a variant for them to use it smartly all over the interface. One variant shows only the options to navigate and another variant shows subscription channels with new video status. As a UI designer, you’ve to give focus on those small details that will help you in your design thinking ability.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Jk9IuDU6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2ArRZ0pEwiyhx24OJbTNsPEw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Jk9IuDU6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2ArRZ0pEwiyhx24OJbTNsPEw.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-the-style-sheet"&gt;
  &lt;/a&gt;
  Creating the Style sheet
&lt;/h2&gt;

&lt;p&gt;A style sheet is combined of design assets such as color, typography, icons, illustrations, spacing, elevation, etc. As a UI designer, you’ve to collaborate with developers and they need design assets from the style sheets. If you create a separate Figma page for design assets and name them as per your team’s coding convention that will reduce the time of your developer’s friend. For example, If you have a color palette with multiple Grey Shades then name like Grey 90, Grey 80, Grey 70, etc.&lt;/p&gt;

&lt;p&gt;For typography, I use Roboto as this is the default typeface of Google’s product that follows material design. I use the material tool for generating the type scale as per material guidelines. This will help you to create a robust and responsive type system for your design.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--62KNHy-i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2Awh0SoQBIo8rFZtiO1R_XLw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--62KNHy-i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2Awh0SoQBIo8rFZtiO1R_XLw.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For colors, I use the material kit resource of Figma and there I get every shade of grey and other states colors such as error, success, warning, etc. In the color frame, you can see that I’ve taken multiple shades of the primary and secondary colors so that I can choose among the variants for designing dark mode and make the design accessible.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iQDMTyR8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2AWsMjiRC35Ns_JbCVDTkSog.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iQDMTyR8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2AWsMjiRC35Ns_JbCVDTkSog.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Additionally, I need icons that will have multiple states like outlined or filled. In material icons, I found 5 states of icons that are the same icons used by YouTube product design as they are bound to follow the material design as their design system.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pexniiJc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2AfRETcYBkc1F-eyVwb6vb6g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pexniiJc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2AfRETcYBkc1F-eyVwb6vb6g.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finally, there are elevation levels that I need to use for designing multiple interaction states like hover, enabled, focused, dragged, etc.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rKdu7R6p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2ADdITQ7YDoKYfcySQNTqDtA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rKdu7R6p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2ADdITQ7YDoKYfcySQNTqDtA.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#follow-frontend-framework-library-vuetify-js"&gt;
  &lt;/a&gt;
  Follow Frontend Framework Library: Vuetify JS
&lt;/h2&gt;

&lt;p&gt;After you’ve successfully designed the interface, it is time to hand off your design to your developer’s colleagues. I need to document my design system as per the guidance of Vuetify JS which is a component library of the Vue JS frontend framework.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KjUvcD5z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2AqiEmhLOC1v-uDmbiC5iWRQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KjUvcD5z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2AqiEmhLOC1v-uDmbiC5iWRQ.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This will help my developer friend to quickly identify the components and build the interface quickly. For example, for the video, my developers are going to use the card component and configure it as per my design and declare it component class and reuse it on other pages of the application.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Kh336gLQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2AAYNKUyDvtcrngpNxoO6BSw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kh336gLQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2AAYNKUyDvtcrngpNxoO6BSw.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In my case, I have used Vue but it depends on your developer’s team as they are credible to choose the framework. In your case, it could be React JS, Bootstrap, Angular, etc.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-result"&gt;
  &lt;/a&gt;
  Final Result
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kriVwKXQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2Aw9PmZMOeV1GWxriutcpJ7g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kriVwKXQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2Aw9PmZMOeV1GWxriutcpJ7g.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#learning-outcomes"&gt;
  &lt;/a&gt;
  Learning Outcomes
&lt;/h2&gt;

&lt;p&gt;As many Figma designers struggled to design complex components with Auto-Layout I am not an exception. I design every base and master component with the help of Auto-Layout thus it helps me design responsive interfaces in multiple breakpoints. If you want a separate tutorial of auto-layout then let me know in the comment section.&lt;/p&gt;

&lt;p&gt;As I’ve said previously, building a large-scale application is a complex process and if you follow the process of building a component library then it will save a lot of time for your team and project.&lt;/p&gt;

&lt;p&gt;As a UX designer, I always wanted to design interfaces that completely follow the material guidelines. Following their approach is an industry-standard approach for designing applications. I’ve to go through the material design guidelines during the design time and it helps me to get deeper knowledge about their design patterns.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#closing-thoughts"&gt;
  &lt;/a&gt;
  Closing Thoughts
&lt;/h2&gt;

&lt;p&gt;I’ve recreated YouTube thus designers like us follow an industry-standard approach as many designers feel the pain of designing complex applications. By following the steps that I’ve discussed above you can recreate any of the complex applications and add them to your portfolio that makes more sense.&lt;br&gt;
Look around the design approach, if you think it’s suitable for your use-case, use these steps as a template. If you think something can be improved, let me know or heck you can just contribute directly. That’s the beauty of UX design, isn’t it?&lt;/p&gt;

&lt;p&gt;Good Bye, Thank you 😀&lt;/p&gt;

</description>
      <category>ux</category>
      <category>uiweekly</category>
      <category>vue</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Learn Java Language — All the Dos &amp; Don’ts</title>
      <author>John Selawsky</author>
      <pubDate>Tue, 25 May 2021 11:22:25 +0000</pubDate>
      <link>https://dev.to/selawsky/learn-java-language-all-the-dos-don-ts-h13</link>
      <guid>https://dev.to/selawsky/learn-java-language-all-the-dos-don-ts-h13</guid>
      <description>&lt;p&gt;&lt;em&gt;“Wasn’t the Python programming language that topped the charts last we checked?”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Well, you may be right about that but when it comes to agile and super-scalable desktop applications powered by the world’s leading cross-platform computing environment providers Java takes the lead in a majority of aspects. Exactly, now you are realizing that you should learn Java.&lt;/p&gt;

&lt;p&gt;For someone who is aiming to become a part of the developers’ community, it’s important to choose a language that is widely popular and has a well-endowed helpers’ community. What other language comes to mind other than Java? Mastering code in Java is absolutely fun to do and once you start practicing it, the language itself will unravel its upsides for you to acknowledge.&lt;/p&gt;

&lt;p&gt;Several programming languages and frameworks inherit their glossary of reserved functions and keywords from the Java programming language.&lt;/p&gt;

&lt;p&gt;What exactly does this imply?&lt;/p&gt;

&lt;p&gt;Well, that’s easy to decode! If you know Java and the technologies corresponding to it, it will be easier to switch to another language if necessary. Especially when it comes to JVM languages that are gaining traction.&lt;/p&gt;

&lt;p&gt;Furthermore, as Java is a versatile language it’s easier to learn and fun to practice.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#market-scope-of-java-programming-language"&gt;
  &lt;/a&gt;
  Market Scope of Java Programming Language
&lt;/h2&gt;

&lt;p&gt;Let’s have a whiff of what the statistics say about that.&lt;/p&gt;

&lt;p&gt;Java programmers are earning a whopping &lt;a href="https://www.salary.com/research/salary/benchmark/java-developer-salary"&gt;$154,000 per year&lt;/a&gt; and it’s exclusive of all the other benefits that come in the package.&lt;/p&gt;

&lt;p&gt;Had I known this before, I’d have dived into the sea of Java way earlier than most of the pro-level programmers out there but hey, now that you are here, why not have some insight into one of the most adopted programming languages in the world?&lt;/p&gt;

&lt;p&gt;This can be one of the primary reasons why Java programming language &lt;a href="https://insights.stackoverflow.com/survey/2020#technology-most-loved-dreaded-and-wanted-languages-loved"&gt;tops the list&lt;/a&gt; of “most loved programming languages” and around 44.1% of the aspiring programmers choose to learn to code in Java. What else could be more tempting than the fact that there are approximately 41,916 openings for Java programmers on &lt;a href="https://www.indeed.com/jobs?q=Java+Developer&amp;amp;l="&gt;indeed.com&lt;/a&gt; as you are reading the blog!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#things-i-wish-i-had-known-about-learning-java"&gt;
  &lt;/a&gt;
  Things I Wish I Had Known About Learning Java
&lt;/h2&gt;

&lt;p&gt;“How to master Java?” Literally, this was the only question that many aspiring Java programmers have in mind. Now that you are reading this, answer this: &lt;em&gt;What’s the goal of learning Java?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The force which usually drives the freshmen towards learning Java programming language is the fact that Java is quite a feature-rich and easy-to-learn language. After having to spend just a few hours pondering over solving a problem, it’s sufficient to know that the solution you’ll come up with, is going to be an awesome one.&lt;/p&gt;

&lt;p&gt;In short, your goal behind learning Java programming should be to develop a skill to be able to engineer solutions to certain problems. Let’s take a look at the steps that you should take to become a top-notch Java developer.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#put-your-focus-on-problem-solving-not-coding"&gt;
  &lt;/a&gt;
  Put Your Focus on Problem Solving, not Coding!
&lt;/h2&gt;

&lt;p&gt;Interestingly, you can’t simply “learn” problem solving; rather you develop problem-solving skills over time. Learning the syntax is also a really important step but not the only important one. Only by learning the syntax, you can implement a solution to a problem. Otherwise, you’ll keep consulting one resource after another only to fix the semantics.&lt;/p&gt;

&lt;p&gt;What else do you need to become an accomplished Java programmer? Instead of wasting extended hours on learning the syntax and language structures, focus on coming up with solutions to certain problems.&lt;/p&gt;

&lt;p&gt;As a developer, you should be able to map out a clear and concise solution for the problem that lays ahead. Additionally, spending more time on learning syntax isn’t worth it anyway since technologies and frameworks are always evolving.&lt;br&gt;
Fortunately, we know a few credible resources which are known to provide beginners with an interactive learning environment using which you can start learning right away!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://codegym.cc/"&gt;CodeGym&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AQgLpco_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ucarecdn.com/5b65bac8-df94-4f61-b983-3af916552d87/" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AQgLpco_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ucarecdn.com/5b65bac8-df94-4f61-b983-3af916552d87/" alt="1_QhSI21SsIVW7tG7KZSx3bg.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Think of a video game that you love playing, the one that you simply can’t get enough of.&lt;/p&gt;

&lt;p&gt;You have now landed on a galaxy far away from where there are no humans but only robots! Your only way out is to get your hold on one of the robots and burn a certain code of Java code into the system of that robot. So your goal as a young robot, to learn Java to fix the spaceship.&lt;/p&gt;

&lt;p&gt;The entire learning experience spans over 40 levels each with a varying level of difficulty and you get to unlock the next level only if you successfully pass the preceding one. Moreover, CodeGym also features a code verification system that aids the user and checks if the user is solving the task correctly.&lt;/p&gt;

&lt;p&gt;It has been designed in such a way that you will be spending only 20% of your time on theory while the rest of your time will be spent doing practical tasks.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.codecademy.com/"&gt;Codecademy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rhQFCQw7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ucarecdn.com/333c9280-e80f-4104-b663-cb5bb07902bb/" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rhQFCQw7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ucarecdn.com/333c9280-e80f-4104-b663-cb5bb07902bb/" alt="1_rl2XPZrujTtrfK3vHilH8g.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Another resourceful platform for learning Java programming is Codecademy. As estimated 45 million learners have successfully developed their skills of programming and problem-solving from this platform and who said you can’t be the next pro-level Java programmer coming out of the same learning experience?&lt;/p&gt;

&lt;p&gt;Codecademy offers a variety of tools along with a built-in IDE which has been specifically designed to foster an environment of more and more practice. One of the many scoring points of this platform is that while learning, you can choose any domain ranging from Web Development and Desktop Development leading up to Data Sciences and Machine Learning!&lt;br&gt;
The choice is yours!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.sololearn.com/"&gt;SoloLearn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AxOTahT3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ucarecdn.com/2b9bc098-328f-41c2-8baf-a5fb3288d637/" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AxOTahT3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ucarecdn.com/2b9bc098-328f-41c2-8baf-a5fb3288d637/" alt="1_anJffCmzRWKhmVpleDwC6w.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Talking about interactive learning platforms and not mentioning SoloLearn, would be totally an injustice.&lt;/p&gt;

&lt;p&gt;SoloLearn has now evolved into a highly intuitive learning platform for young programmers and it has marked several milestones on the way. If we term it as the social media platform for beginner-level developers, it won’t be wrong at all.&lt;/p&gt;

&lt;p&gt;On this portal, hundreds and thousands of aspiring programmers get in touch with each other, collect points for interactions and make their way to the list of “Top Learners”.&lt;/p&gt;

&lt;p&gt;Apart from Java, SoloLearn provides the facility to learn other programming languages including Python, JavaScript, PHP, Html, CSS and many more.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ensuring-your-code-is-functional"&gt;
  &lt;/a&gt;
  Ensuring Your Code is Functional
&lt;/h2&gt;

&lt;p&gt;Skepticism makes the best version out of a programmer!&lt;/p&gt;

&lt;p&gt;Making sure that your code is working is one of those habits which will help you minimize the dependency factor of another resource to find out the bugs in the code that you wrote. Therefore, always double rather triple check the solution because this is the only way of delivering a quality build, and guess what, it will clear out your ways of becoming a solutions architect. Sounds awesome, isn’t it?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#seek-opinion-from-mentors"&gt;
  &lt;/a&gt;
  Seek Opinion from Mentors
&lt;/h2&gt;

&lt;p&gt;Many aspiring programmers do really hate having their code reviewed. Before any of our esteemed readers justify this, let’s take a moment to understand the fact that nobody on earth, can literally write the perfect piece of code. Being a freshman, if your code isn’t properly reviewed, it’s highly likely that the time you are spending on skill development, is not totally worth it.&lt;/p&gt;

&lt;p&gt;Write your Java code and get it reviewed by one of your mentors who can be your seniors in the coding school, your tech-savvy friends or anyone from the helpers’ community online. If you do so, your coding style will improve and you will be able to grasp the concepts quickly.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#fix-the-code-if-its-bad"&gt;
  &lt;/a&gt;
  Fix the Code If It’s Bad
&lt;/h2&gt;

&lt;p&gt;“Code is like humor. When you have to explain it, it’s bad.”&lt;/p&gt;

&lt;p&gt;This is a nice definition of a “bad code”, but not only. After all, commenting on your code is a good practice among programmers and a good habit. However, one pattern has been noticed: the more programming experience you have, the easier it is to read your code.&lt;/p&gt;

&lt;p&gt;If you are still learning programming, It’s likely that your coding style is immature and you end up writing a program that does the job but its structure is bad.&lt;/p&gt;

&lt;p&gt;Many programmers out there, totally ignore the fixes required in the code and they usually think if a piece of code works fine, let it work but the problem arises when that code breaks.&lt;/p&gt;

&lt;p&gt;In such a situation, don’t just stand your ground rather take a step back, absorb the criticism on your code, take it all in and come up with a better version of your code, one that actually impresses. Also think about optimization of your old code with the tools you have learned recently.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#learn-amp-progress-as-a-team"&gt;
  &lt;/a&gt;
  Learn &amp;amp; Progress — As a Team
&lt;/h2&gt;

&lt;p&gt;An app that was written by a single human is a pretty rare event. Coding is a collaborative activity and if you really want to excel, simply rule out the idea that somebody out there is going to bring you down. Had it been true, would there be such rich platforms, the likes of Stackoverflow, Stackexchange and the rest?&lt;/p&gt;

&lt;p&gt;Every day we see hundreds and thousands of queries posted on helper forums and coding platforms and these queries get answered by top guys in the field. Learning to code alone is identical to learning to play violin but how will that violinist perform in an orchestra? If he somehow gets into the band, the progress of a well-synced team will get ruined due to one un-synced violinist.&lt;/p&gt;

&lt;p&gt;So, what does that teach us? Not to fall prey to the imposter syndrome and get yourself out there and show the rest your willingness to learn and grow as a part of a stellar team in the making.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrap-up"&gt;
  &lt;/a&gt;
  Wrap Up
&lt;/h2&gt;

&lt;p&gt;Being an aspiring programmer, keep on improving constantly and make sure your knowledge gained doesn’t go to waste by lack of practise. With all the right tools and web applications at your disposal, you can easily learn Java programming and become a problem solver in quite a small amount of time.&lt;/p&gt;

&lt;p&gt;While learning, don’t rule out the importance of collaboration with your fellow learners and taking opinions from mentors since it will help you out in the longer run. Make the best use of learning portals and those belonging to the same league so that your pathway stays clear out of the bumps!&lt;/p&gt;

&lt;p&gt;First published on &lt;a href="https://medium.com/javarevisited/learn-java-language-all-the-dos-donts-8d9d52354b5a"&gt;JavaRevisited&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>java</category>
      <category>beginners</category>
      <category>programming</category>
      <category>code</category>
    </item>
    <item>
      <title>useContext for better state management!</title>
      <author>Yogini Bende</author>
      <pubDate>Tue, 25 May 2021 11:01:38 +0000</pubDate>
      <link>https://dev.to/ms_yogii/usecontext-for-better-state-management-51hi</link>
      <guid>https://dev.to/ms_yogii/usecontext-for-better-state-management-51hi</guid>
      <description>&lt;p&gt;Hi folks, &lt;/p&gt;

&lt;p&gt;Managing data in an app is little tricky when many components are sharing and updating it. useState, useReducer, useMemo etc. are some state management hooks in React, which are very efficient and have their own ways to work in different scenarios. Though all these hooks are effective, there are still some situations where managing state becomes difficult. &lt;/p&gt;

&lt;p&gt;If you already know why we need context hook, you can directly jump to its implementation &lt;a href="#how-to-use-it"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Consider an app which works on user’s data. On loading, the app fetches this data from a backend and stores it in an app component. Later, this data is shared between many other children components. If child components are just using that data, then it’s fine. But, problems will arise, if one of them will update the data. &lt;/p&gt;

&lt;p&gt;As we know, the app component fetches the data, we need to use prop drilling to share it with all the children. In this case, we create a prop &lt;code&gt;userData&lt;/code&gt; and pass it to all the children of this app component, making it look something like this - &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--N31pYk8k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5klsf386fillw1gmy6in.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--N31pYk8k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5klsf386fillw1gmy6in.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This approach works when the children are just consuming the data and not updating it. But if you see in the diagram, the &lt;code&gt;children four&lt;/code&gt; is performing an update operation on our user data. After this update, the new version of data should be made available to all the other components. &lt;/p&gt;

&lt;p&gt;If you notice, this transaction of data becomes fairly difficult when the app is complex and there are multiple states to handle across multiple components. &lt;/p&gt;

&lt;p&gt;These are the scenarios where state management libraries like Redux are introduced in the app. But with React context in hand, we can do the state management efficiently and natively. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;P.S Redux is a very good and very vast state management system. It is the best choice for complex applications. But if the app has only a few shared states, I prefer working with context over Redux.&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-context"&gt;
  &lt;/a&gt;
  What is Context?
&lt;/h3&gt;

&lt;p&gt;React context is nothing but a global state to the app. It is a way to make a particular data available to all the components no matter how they are nested. Context helps you &lt;strong&gt;broadcast&lt;/strong&gt; the data and changes happening to that data, to all the components. That’s why it is a very useful state management hook, when it comes to use cases like we discussed above. &lt;/p&gt;

&lt;p&gt;You can read more on React context in the &lt;a href="https://reactjs.org/docs/context.html"&gt;official documentation&lt;/a&gt; of react&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-use-it"&gt;
  &lt;/a&gt;
  How to use it?
&lt;/h3&gt;

&lt;p&gt;Now that we understand the what and why behind a context. Let’s understand how we can use it. To create a context in any React app, you need to follow 4 simple steps - &lt;br&gt;
1- Create a context&lt;br&gt;
2- Create a provider&lt;br&gt;
3- Add provider to the app&lt;br&gt;
4- UseContext&lt;/p&gt;

&lt;p&gt;These terms can become super confusing in the start. The best way to understand context is, consider it as a simple state, a state which we create using useState. The only thing context will do is to share this state and its changes throughout the app. &lt;/p&gt;

&lt;p&gt;Hence, when we say, we are creating a context, we are creating a state! When we say we are creating a provider, as its name says, we are creating a wrapper component to provide that state to all the components. It is that simple!&lt;/p&gt;

&lt;p&gt;Now, let's dive into code and create a context! In the below code, we will be covering step 1 and 2.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// UserDetailsProvider.js&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createContext&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;//create a context, with createContext api&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userDetailsContext&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createContext&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;UserDetailsProvider&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// this state will be shared with all components &lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;userDetails&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setUserDetails&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="c1"&gt;// this is the provider providing state&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;userDetailsContext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Provider&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{[&lt;/span&gt;&lt;span class="nx"&gt;userDetails&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setUserDetails&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/userDetailsContext.Provider&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;UserDetailsProvider&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the code above, we have used &lt;strong&gt;createContext&lt;/strong&gt; api to create our &lt;code&gt;userDetailsContext&lt;/code&gt;. Now, the context got created, so we will need to create a provider. &lt;/p&gt;

&lt;p&gt;In the function UserDetailsProvider, we created a provider for &lt;code&gt;userDetailsContext&lt;/code&gt;. &lt;code&gt;&amp;lt;contextname.Provider&amp;gt;&lt;/code&gt; is a common syntax for creating it. Please note a &lt;code&gt;value&lt;/code&gt; prop here. The value prop will be used always to pass the shared state down. In this case, we are passing both state and setState functions down. This is because, even though any component updates the state, the global state can get updated which will be available for all the components. &lt;/p&gt;

&lt;p&gt;Now that our context and provider are created. Let’s add the provider to the app. This is the most important step, as it will make the provider available to all components. Hence, let’s wrap our app component inside this provider. Our app component will look something like this -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//App Component&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;BrowserRouter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Switch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Route&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-router-dom&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;RouteWithSubRoutes&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./utils/shared&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;UserDetailsProvider&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./context/UserDetailsProvider&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;routes&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./Routes&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;BrowserRouter&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Switch&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="c1"&gt;// As login do not require the userDetails state, keeping it outside.&lt;/span&gt;
                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Route&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="nx"&gt;component&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;Login&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;exact&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
                &lt;span class="c1"&gt;// All other routes are inside provider&lt;/span&gt;
                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;UserDetailsProvider&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;routes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;route&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
                        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;RouteWithSubRoutes&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;route&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;{...&lt;/span&gt;&lt;span class="nx"&gt;route&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;                    &lt;span class="p"&gt;))}&lt;/span&gt;
                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/UserDetailsProvider&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Switch&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/BrowserRouter&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this code, the data will not be fetched by the app component. Note, here we are adding only those components inside UserDetailsProvider which actually needs this state. &lt;/p&gt;

&lt;p&gt;So here we come to the last part, using this context in any component. You must have guessed, this step needs the hook &lt;strong&gt;useContext&lt;/strong&gt; as we will be using a context here! (No claps on guessing 😛)&lt;/p&gt;

&lt;p&gt;This is done in the same way as we declare a state using useState. Something like this -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Profile.js&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useContext&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;getUser&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../../utils/api&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;userDetailsContext&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../../context/UserDetailsProvider&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Profile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="c1"&gt;// This is how we useContext!! Similar to useState&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;userDetails&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setUserDetails&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;userDetailsContext&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;loading&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setLoading&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handleGetUser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;setLoading&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;getUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nx"&gt;setUserDetails&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="c1"&gt;// TODO: better error handling&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nx"&gt;setLoading&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;

    &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;userDetails&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;handleGetUser&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[]);&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;bg-gray-gray1 h-full&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="c1"&gt;// do something&amp;lt;/div&amp;gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Profile&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you have noticed, the useContext looks similar to useState. And later we will be using it same as useState!! Hence, whenever the setUserDetails function is called, the state change will be effective throughout the app, saving too much prop drilling. &lt;/p&gt;

&lt;p&gt;So, that’s all about useContext hook. I have also seen many examples of context api being used in toggling and setting themes for an app. Do share your use-cases for using this context api.&lt;/p&gt;

&lt;p&gt;Thank you so much for reading this article and please let me know your comments/feedback/suggestions.  &lt;/p&gt;

&lt;p&gt;Keep learning 🙌&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>tutorial</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Making Better Decisions</title>
      <author>Dave Sev</author>
      <pubDate>Tue, 25 May 2021 10:45:53 +0000</pubDate>
      <link>https://dev.to/dracount/making-better-decisions-2nbn</link>
      <guid>https://dev.to/dracount/making-better-decisions-2nbn</guid>
      <description>&lt;p&gt;Making difficult decisions is never fun, especially when you doubt. Give yourself the confidence to stand behind your decisions by learning about how to make decisions... better.&lt;/p&gt;

&lt;p&gt;How do you choose between two options when stuck in a dilemma? everyone will tell you to make a Pro and Con list, list the benefits and pitfalls of the decision and everything will work itself out. The problem with this approach is that its one sided, and the decision doesn't often feel any easier.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CofgTu1U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/28qd0y58wkmefbgo4bsn.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CofgTu1U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/28qd0y58wkmefbgo4bsn.JPG" alt="Capture"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Another way to look at the same decision is the Rubber Band decision making framework. A tool to give two options an equal footing, and allow you to make the comparison in a much more direct way.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;In case you're interested...&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;If you are looking for guidance in career development, I help senior IT developers create their dream jobs through self discovery, career planning and how to make the best out of your job. Contact me if you would like to discuss further.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Lets dive in.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#should-i-take-a-new-job-at-acme-inc"&gt;
  &lt;/a&gt;
  Should I take a new job at ACME Inc?
&lt;/h1&gt;

&lt;p&gt;This question is one of the most common questions on forums, and its easy to understand why. Most people don't know how to make these types of decisions, so they throw it out to the internet hoping that someone will take that responsibility from them. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The problem is that the options looks seemingly evenly balanced&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Unfortunately every situation is different and you are the only person is able to answer this question. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--X46al7SU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hdy6mca7hv8653o7j14x.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X46al7SU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hdy6mca7hv8653o7j14x.JPG" alt="Capture"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#the-usual-way-pro-and-con-lists"&gt;
  &lt;/a&gt;
  The usual way: Pro and Con Lists
&lt;/h1&gt;

&lt;p&gt;If not the first answer to this question in the replies, its usually in the top 3: make a Pro and Con list and make your decision from there.&lt;/p&gt;

&lt;p&gt;The problem with the Pro and Con list is that it is one sided. It doesn't allow you to evaluate two different decisions equally. The options are not being evaluated against each other, rather they are being evaluated separately and this may make the two options appear evenly balanced - leaving you without a clear winner - even when they are not.&lt;/p&gt;

&lt;p&gt;Think to yourself - did a Pro's and Con's list ever help make your decisions easier?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pro's and Con's have a Negative Focus rather than a positive one&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The Con's list is actually my current position, framed in a negative light against my Pro's list. Is that best way for me to evaluating my options? No - because I have two possibilities - not just one.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The missing ingredient is that it is not being evaluated against my current job.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Sure, there is a Con's list but it is not a direct comparison. What I need is a way to give each option an equal footing.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;We are also suggesting that not moving forward is a negative - which it is not!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--csMOkZhH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i17kgtpd0vxd2fy8ijoi.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--csMOkZhH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i17kgtpd0vxd2fy8ijoi.JPG" alt="Capture"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#a-new-framework-the-rubber-band-model"&gt;
  &lt;/a&gt;
  A New Framework: The Rubber Band Model
&lt;/h1&gt;

&lt;p&gt;The Rubber Band Model is similar, but different. The Rubber Band Model puts you in between two Rubber Bands, each one on opposite sides. One is pulling you, and one is holding you back.&lt;/p&gt;

&lt;p&gt;If I am trying to decide to take a new job, the Rubber Band would consist of my current job (holding) and my new job (pulling)&lt;/p&gt;

&lt;p&gt;Now I can think of what are the factors that are holding me and pulling me - we are now comparing two options, based on their positive features directly against one another.&lt;/p&gt;

&lt;p&gt;Pulling me:&lt;br&gt;
new environment&lt;br&gt;
better salary&lt;br&gt;
interesting work&lt;br&gt;
new role and challenges&lt;/p&gt;

&lt;p&gt;Holding me:&lt;br&gt;
I like my colleagues&lt;br&gt;
Close to home&lt;br&gt;
Shorter hours&lt;br&gt;
More leave days&lt;/p&gt;

&lt;p&gt;The con's list are reframed as benefits of the other option!&lt;/p&gt;

&lt;p&gt;Now I can compare the two against each other, and my decision seems a lot easier to make.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#give-it-a-try"&gt;
  &lt;/a&gt;
  Give It A Try
&lt;/h1&gt;

&lt;p&gt;Have you had any decisions that seem to be impossible to make? Next time give the Rubber Band method a try. Let me know your experience with making Pro's and Con's and if you have tried the Rubber Band method let me know how it goes!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;In case you're interested...&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;If you are looking for guidance in career development, I help senior IT developers create their dream jobs through self discovery, career planning and how to make the best out of your job. Contact me if you would like to discuss further.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>career</category>
      <category>decisions</category>
      <category>job</category>
      <category>productivity</category>
    </item>
    <item>
      <title>10 Tips for Becoming a Better Developer</title>
      <author>RUBICON</author>
      <pubDate>Tue, 25 May 2021 10:45:28 +0000</pubDate>
      <link>https://dev.to/rubicon_dev/10-tips-for-becoming-a-better-developer-31p6</link>
      <guid>https://dev.to/rubicon_dev/10-tips-for-becoming-a-better-developer-31p6</guid>
      <description>&lt;p&gt;Why settle for good when you can be great? We all want to become the best developers out there, but how do we achieve this? What are some things we can do to improve ourselves?&lt;/p&gt;

&lt;p&gt;RUBICON’s talented and experienced developers teamed up to discuss what helps them succeed in the world of IT. Follow these tips in order to become a rockstar developer!&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Don’t be afraid to ask for help.&lt;/strong&gt; No one expects you to know everything. One of the most important parts of learning is to recognize you don't know everything and that you’re willing to learn something new. Accepting that you need help and simply saying to your colleagues “I don’t know this, can you help me?” will lead you to find out the answer quickly and move onto the path of learning something new. FYI the developers around you are great resources.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Patience and persistence.&lt;/strong&gt; The two Ps in programming are patience and persistence. Patience is a virtue especially when it comes to programming and persistence is what helps you get it right. Learning takes time and if you keep trying you’ll eventually get it.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Learn from your code reviews.&lt;/strong&gt; Code reviews are an essential step in the development process for producing high-quality codes. Code reviews ensure that every line of your code is up to standard and is approved by at least two team members. For further direction, you can check out this guide. Take the opportunity to discuss alternative solutions during code reviews, it not only improves the code base but has also a learning effect for all involved.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Code and learn after 5 P.M.&lt;/strong&gt; Coding and learning shouldn’t come to an end when you leave your office. Learn outside of the workplace to gain new skills and come to work ready and full of new information. Luckily in today’s world, the internet provides us with many great learning tools such as &lt;a href="https://www.udemy.com"&gt;Udemy&lt;/a&gt; .&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Read, read and read some more.&lt;/strong&gt; Read programming books. Choose good quality, general programming books and you’ll soon distinguish yourself from nearly every developer around you. Here are some of our favourites:&lt;br&gt;
The Pragmatic Programmer - Andy Hunt &amp;amp; Dave Thomas&lt;br&gt;
Clean Code - Robert Cecil Martin&lt;br&gt;
Head First Design Patterns - Elisabeth Freeman &amp;amp; Kathy Sierra&lt;br&gt;
Code Complete - Steve McConnell&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Practice writing clean code.&lt;/strong&gt; Clean code is readable and easily understood by everyone on your team. Implementing clean coding practices will benefit you down the line so you should practice making it a habit from the first line of code to the last.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Shortcuts don’t lead to success.&lt;/strong&gt; Avoid taking shortcuts when writing code. We all know that time is precious but shortcuts will end up taking up more of your time if you make mistakes, therefore take your time in order to provide the best work possible.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Focus on learning principles instead of frameworks.&lt;/strong&gt; Programming languages, frameworks and tools come and go but the principles behind them are here to stay. If you are able to understand the architecture behind the frameworks, then it will make it easier for you to learn new and upcoming things. The world of IT is always changing so being able to understand the core principles will help you adapt to change.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Pay attention to the bigger picture.&lt;/strong&gt; Often times developers get lost in their code and focus mainly on programming a specific feature. Instead, take a different approach and look at the bigger picture (the product). Focus on optimizing and making the best product possible for users.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Take a break.&lt;/strong&gt; Not only does your body and mind deserve a break but you’ll also be boosting your own productivity. Work in time splits and allow your brain to recharge. Take a walk, exercise, grab lunch or socialize. Often times we forget that we’re human and we need to do things other than work.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Follow these steps in order to be the best developer you can be. Happy coding!&lt;/p&gt;




&lt;p&gt;Original blog post: &lt;a href="https://www.rubicon-world.com/blog/2019/06/10-tips-for-becoming-a-better-developer/"&gt;10 Tips for Becoming a Better Developer&lt;/a&gt;&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>culture</category>
      <category>career</category>
    </item>
    <item>
      <title>A Developer's Guide to Proper Desk Sitting</title>
      <author>RUBICON</author>
      <pubDate>Tue, 25 May 2021 10:40:36 +0000</pubDate>
      <link>https://dev.to/rubicon_dev/a-developer-s-guide-to-proper-desk-sitting-3gga</link>
      <guid>https://dev.to/rubicon_dev/a-developer-s-guide-to-proper-desk-sitting-3gga</guid>
      <description>&lt;p&gt;We spend countless hours hunched over at our desks, typing away and squinting at our screens while working on a code. And naturally, we focus on getting the job done instead of paying attention to our posture and the length of time we spend sitting in the same position.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#poor-work-habits-lead-to-health-issues"&gt;
  &lt;/a&gt;
  Poor Work Habits Lead to Health Issues
&lt;/h3&gt;

&lt;p&gt;You may already have some poor habits outside of the workplace that damage your health such as smoking, not exercising, a poor diet and spending a lot of time sitting. What about your poor habits IN the workplace?&lt;/p&gt;

&lt;p&gt;After all, on average we spend about 40 hours a week working and most of that time is spent sitting. The longer you sit, the worse your posture becomes.&lt;/p&gt;

&lt;p&gt;Some say that sitting is the new smoking. A bad posture and sitting for a long time can lead to many health risks such as back &amp;amp; neck pain, muscle stiffness, an increased risk of cardiovascular disease and a variety of other issues.&lt;/p&gt;

&lt;p&gt;If you catch yourself taking part in any of the following habits, then you’re putting yourself at risk:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Sitting with knees, ankles or arms crossed.&lt;/li&gt;
&lt;li&gt;Sitting slumped to one side.&lt;/li&gt;
&lt;li&gt;Not properly supporting the feet.&lt;/li&gt;
&lt;li&gt;Not fully supporting the back (especially the lower back).&lt;/li&gt;
&lt;li&gt;Sitting with your spine in a 'C Shape.' &lt;/li&gt;
&lt;li&gt;Sitting in one position for a long time.&lt;/li&gt;
&lt;li&gt;Straining the neck for long periods of time while staring at a screen.&lt;/li&gt;
&lt;li&gt;Sitting for an extended period of time without taking a break.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#correct-sitting-posture"&gt;
  &lt;/a&gt;
  Correct Sitting Posture
&lt;/h3&gt;

&lt;p&gt;There are a few steps you can take in order to ensure healthy habits at work. Firstly, let’s take a look at sitting properly in a comfortable chair, it may sound super simple but most of us don't follow proper sitting.&lt;/p&gt;

&lt;p&gt;Follow these simple steps in order to sit properly:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Take a seat in your chair and plant your feet on the floor or on a footrest.&lt;/li&gt;
&lt;li&gt;Push your hips as far back as they can go in the chair. 
Keep your shoulders and back straight and focus on keeping your lower back supported on the back of the chair. &lt;/li&gt;
&lt;li&gt;Leave a small gap between the back of your knees and the chair.&lt;/li&gt;
&lt;li&gt;Position your knees at the same height or slightly lower than your hips and place your ankles in front of your knees.&lt;/li&gt;
&lt;li&gt;Recline the back of the chair to a 100 to 110-degree angle.&lt;/li&gt;
&lt;li&gt;Adjust your armrests so that your shoulders are relaxed.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Tc8Wy7O5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0hl4z0oyn00978ufntws.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Tc8Wy7O5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0hl4z0oyn00978ufntws.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There you have it, you’re sitting properly in your chair. Now that’s only one part to proper desk sitting. Let’s set up your desk for the ideal work environment.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#setting-up-your-workspace-for-success"&gt;
  &lt;/a&gt;
  Setting Up Your Workspace for Success
&lt;/h3&gt;

&lt;p&gt;Setting up your workplace is as important as sitting properly for your health. Check out how to set up your workspace:&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#setting-up-your-desk"&gt;
  &lt;/a&gt;
  Setting up your desk:
&lt;/h4&gt;

&lt;p&gt;Adjust the height of your chair so you are able to roll up to your desk and fit both of your feet and the chair’s armrests comfortably underneath. Adjust your chair so that your arms are bent to 90 degrees.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#setting-up-your-monitor"&gt;
  &lt;/a&gt;
  Setting up your monitor:
&lt;/h4&gt;

&lt;p&gt;It is very important to adjust your monitor to the correct height since constantly looking up or down can make you tired and eventually lead to eye strain. Place your monitor in front of you, arms length away and at eye level height since this will ensure that your neck will be straight and relaxed.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#setting-up-your-mouse-amp-keyboard"&gt;
  &lt;/a&gt;
  Setting up your mouse &amp;amp; keyboard:
&lt;/h4&gt;

&lt;p&gt;Place the mouse and keyboard directly in front of you and as central to your body as possible. Position both the mouse and keyboard at about elbow height. If you’re using a keyboard tray, place it just above your thighs for the ideal position.&lt;/p&gt;

&lt;p&gt;If you want to find out the ideal height to adjust your chair, monitor and keyboard, you can check out this site where you’re able to place your height &amp;amp; it will give you the proper dimensions. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#a-few-additional-tips-to-staying-healthy-at-work"&gt;
  &lt;/a&gt;
  A Few Additional Tips to Staying Healthy at Work
&lt;/h3&gt;

&lt;p&gt;Here are a few additional tips you can follow to achieve the ideal healthy workday:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Avoid sitting for long periods of time&lt;/strong&gt; - It is recommended that you take stretch breaks every 20 to 30 minutes so you’re not constantly sitting. Get up on your feet, even if you’re standing beside your desk and not moving around it is still better than sitting.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Give a standing desk a try&lt;/strong&gt; - If your desk is adjustable, you are able to work in a standing position just make sure to adjust it properly to your height. Working while standing can be just as effective as sitting!&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Eating healthy &amp;amp; drinking plenty of water&lt;/strong&gt; - Don’t let your work completely consume you, remember to keep hydrated and always have healthy food available in your workspace.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#rubicon-an-ergonomic-workplace"&gt;
  &lt;/a&gt;
  RUBICON: An Ergonomic Workplace
&lt;/h3&gt;

&lt;p&gt;RUBICON’s office space is an ideal work environment offering ergonomic materials to help you get comfortable in your desk space.&lt;/p&gt;

&lt;p&gt;Each team member has their own office space that is accompanied by:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A heigh adjustable standing desk.&lt;/li&gt;
&lt;li&gt;A soft cushioned adjustable chair with lower back support.&lt;/li&gt;
&lt;li&gt;An ergonomic keyboard &amp;amp; monitor.&lt;/li&gt;
&lt;li&gt;Space around the office to walk, stretch and take a break whenever needed.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Using these appliances, I’m able to create my own workspace in which I feel both comfortable and productive.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-your-own-healthy-workspace"&gt;
  &lt;/a&gt;
  Create your own healthy workspace
&lt;/h3&gt;

&lt;p&gt;The average person spends around 90,000 hours at work, therefore healthy habits are very important. You too can create your own ideal workspace and be mindful to how you’re sitting at your desk to avoid health issues. I challenge you to make a change in your work environment!&lt;/p&gt;




&lt;p&gt;Original blog post: &lt;a href="https://www.rubicon-world.com/blog/2019/06/a-developers-guide-to-proper-desk-sitting/"&gt;A Developer's Guide to Proper Desk Sitting&lt;/a&gt;&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>advice</category>
      <category>ergonomics</category>
      <category>culture</category>
    </item>
    <item>
      <title>Introducing Tailwind Figma: a figma design kit built for integration with Tailwind CSS</title>
      <author>Zoltán Szőgyényi</author>
      <pubDate>Tue, 25 May 2021 10:26:49 +0000</pubDate>
      <link>https://dev.to/zolidev/introducing-tailwind-figma-a-figma-design-kit-built-for-integration-with-tailwind-css-2ha6</link>
      <guid>https://dev.to/zolidev/introducing-tailwind-figma-a-figma-design-kit-built-for-integration-with-tailwind-css-2ha6</guid>
      <description>&lt;p&gt;It’s been a while since I last posted on the blog, but today I want to talk a bit about our newest project: &lt;a href="http://tailwind-figma.com/"&gt;Tailwind Figma&lt;/a&gt;. Basically, it is a Figma design kit that is built for integration with Tailwind CSS. This means that all of the style properties, such as typography, spacing, shadows, colors are all completely identical to the default utility-classes from Tailwind CSS.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://tailwind-figma.com"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d1A2PE-i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://themesberg.s3.us-east-2.amazonaws.com/public/posts/tailwind-figma/tailwind-figma.jpg" alt="Tailwind Figma"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I will tell you some more about the content and features of the Figma kit, but first I want to tell you my experience integrating a design built with this Figma kit using Tailwind CSS. The &lt;a href="http://tailwind-figma.com/"&gt;landing page for Tailwind Figma&lt;/a&gt; was designed with this UI kit and also built in Tailwind CSS by me.&lt;/p&gt;

&lt;p&gt;I must say that I only had to write a few extra CSS classes, and that would be for the YouTube video section. Absolutely mindblowing!&lt;/p&gt;

&lt;p&gt;In all my years of experience developing websites, there were always problems when I had to take a new design and code it because I had to recreate a new set of style guidelines using CSS classes, and it was never the same from one project to another. I would be a millionaire if I would get a dollar for every minute spent on writing CSS classes.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#video-presentation"&gt;
  &lt;/a&gt;
  Video presentation
&lt;/h2&gt;

&lt;p&gt;I also want to mention that a talented designer and YouTube influencer decided to make a &lt;a href="https://www.youtube.com/watch?v=mTAupMv-3t8"&gt;video about Tailwind Figma&lt;/a&gt;. I’ll embed the video below so you can take a look.&lt;/p&gt;

&lt;p&gt;Allow me to present you some of the features of the Figma design kit.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#integrate-with-tailwind-css"&gt;
  &lt;/a&gt;
  Integrate with Tailwind CSS
&lt;/h2&gt;

&lt;p&gt;As I have already mentioned previously, the magic of this Figma design kit is that all of the style properties can be coded using the default utility classes from Tailwind CSS. Of course, if you want to change the colors, the typography or anything else you can do it using the Tailwind configuration file.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XLKoARuo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://themesberg.s3.us-east-2.amazonaws.com/public/posts/tailwind-figma/figma-tailwind-code.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XLKoARuo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://themesberg.s3.us-east-2.amazonaws.com/public/posts/tailwind-figma/figma-tailwind-code.jpg" alt="Tailwind Figma code"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Although Tailwind Figma doesn’t come with the code yet, we are already actively working on it and we are planning to &lt;a href="https://tailwind-figma.com/#pricing"&gt;release it on the 10th of August, 2021&lt;/a&gt;. Everything that you now see in the &lt;a href="https://www.figma.com/file/GkSnYg9g5f0Eq9gQ6BSAv8/Tailwind-Figma-Pro-Preview"&gt;Figma file&lt;/a&gt;, there will be a fully coded version in Tailwind CSS.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#27-application-ui-pages"&gt;
  &lt;/a&gt;
  27 application UI pages
&lt;/h2&gt;

&lt;p&gt;Our main focus in terms of pages was an application UI (aka. admin dashboard interface) that can be used for multiple situations: an administrative panel, a dashboard for a logged in user, an email application, and many more.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Is8Y5xua--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://themesberg.s3.us-east-2.amazonaws.com/public/posts/tailwind-figma/tailwind-figma-pages.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Is8Y5xua--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://themesberg.s3.us-east-2.amazonaws.com/public/posts/tailwind-figma/tailwind-figma-pages.jpg" alt="Tailwind Figma pages"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We’ve covered a lot of page examples, such as an overview page with charts, user list, CRUD item list, messaging, invoicing, user authentication pages, error pages, and many more.&lt;/p&gt;

&lt;p&gt;Check out this &lt;a href="https://www.figma.com/file/GkSnYg9g5f0Eq9gQ6BSAv8/Tailwind-Figma-Pro-Preview?node-id=1%3A151"&gt;live preview on Figma&lt;/a&gt; to view all of the pages.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#responsive-pages-mobile-amp-tablet-included"&gt;
  &lt;/a&gt;
  Responsive pages (mobile &amp;amp; tablet included)
&lt;/h2&gt;

&lt;p&gt;Did you know that internet usage last year was around 54.24% on mobile devices, 2.85% on tablet devices, and only 42.9% on laptop and desktop? Not only that, but experts are expecting even more mobile devices usage in the future.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y8vho6x_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://themesberg.s3.us-east-2.amazonaws.com/public/posts/tailwind-figma/tailwind-figma-responsive.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y8vho6x_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://themesberg.s3.us-east-2.amazonaws.com/public/posts/tailwind-figma/tailwind-figma-responsive.jpg" alt="Tailwind Figma responsive"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Responsive design for some years now is not really a feature, but more of a requirement. There are many disadvantages for a non-responsive user interface, including a bad experience for the user, SEO penalizations, and many more.&lt;/p&gt;

&lt;p&gt;We have designed all of the application UI pages for both mobile, tablet and desktop devices separately. Most Figma kits don’t provide a separate tablet layout, but we wanted to go all the way through with the quality of this product, so we did it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#style-guideline"&gt;
  &lt;/a&gt;
  Style guideline
&lt;/h2&gt;

&lt;p&gt;The backbone of any high-quality design system/UI kit has to be a style guideline of colors, typography, spacing, shadows, and more. Tailwind Figma has been built from the ground up: with the style guideline in the center of it all.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FvBgx_uw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://themesberg.s3.us-east-2.amazonaws.com/public/posts/tailwind-figma/tailwind-figma-style.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FvBgx_uw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://themesberg.s3.us-east-2.amazonaws.com/public/posts/tailwind-figma/tailwind-figma-style.jpg" alt="Tailwind Figma style guideline"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can preview the style guide in the &lt;a href="https://www.figma.com/file/GkSnYg9g5f0Eq9gQ6BSAv8/Tailwind-Figma-Pro-Preview?node-id=1%3A149"&gt;Figma preview&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#figma-variants"&gt;
  &lt;/a&gt;
  Figma variants
&lt;/h2&gt;

&lt;p&gt;This is the most amazing feature of this Figma UI kit, because there are so many of them! If you don’t know, Figma variants are a new feature that enables you to create different styles and variants for components or sections.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zvtGtBwp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://themesberg.s3.us-east-2.amazonaws.com/public/posts/tailwind-figma/tailwind-figma-variants.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zvtGtBwp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://themesberg.s3.us-east-2.amazonaws.com/public/posts/tailwind-figma/tailwind-figma-variants.jpg" alt="Tailwind Figma variants"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;An example would be a button component, where you can create variants for different states, such as hovered state, focused state, or variants for different colors, or variants for outline style or full style.&lt;/p&gt;

&lt;p&gt;If you need some clarification, please check out &lt;a href="https://www.youtube.com/watch?v=mTAupMv-3t8"&gt;Arnau’s video&lt;/a&gt; about Tailwind Figma’s variants and you’ll understand the advantages.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#auto-layout"&gt;
  &lt;/a&gt;
  Auto layout
&lt;/h2&gt;

&lt;p&gt;The new auto layout feature from Figma is another powerful addition to the Tailwind Figma kit which enables you to easily change the order and size of spacing and positioning of the elements and sections in your design file.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_ztH4mde--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://themesberg.s3.us-east-2.amazonaws.com/public/posts/tailwind-figma/tailwind-figma-auto-layout.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_ztH4mde--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://themesberg.s3.us-east-2.amazonaws.com/public/posts/tailwind-figma/tailwind-figma-auto-layout.jpg" alt="Tailwind Figma auto layout"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can check out this feature by viewing &lt;a href="https://www.youtube.com/watch?v=mTAupMv-3t8"&gt;Arnau’s presentation&lt;/a&gt; of the UI kit.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#roadmap"&gt;
  &lt;/a&gt;
  Roadmap
&lt;/h2&gt;

&lt;p&gt;Another great news for those who decide to purchase this product is that what you see right now is barely 10% of what the UI kit will look like in a year from now. As of now, we have finished about a third of the first phase of the roadmap, which is the Figma base project:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Style guideline&lt;/li&gt;
&lt;li&gt;Auto layout setup&lt;/li&gt;
&lt;li&gt;UI components and variants&lt;/li&gt;
&lt;li&gt;Application UI pages&lt;/li&gt;
&lt;li&gt;Responsive interface for mobile and tablet devices&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As I’m writing this article, we are already working on the next part of the first phase, which is coding the whole Figma kit in Tailwind CSS:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Tailwind CSS base project&lt;/li&gt;
&lt;li&gt;Setup style guidelines&lt;/li&gt;
&lt;li&gt;Code the UI elements&lt;/li&gt;
&lt;li&gt;Code the Application UI pages&lt;/li&gt;
&lt;li&gt;Responsive interface&lt;/li&gt;
&lt;li&gt;Build documentation&lt;/li&gt;
&lt;li&gt;Test for production mode and browsers&lt;/li&gt;
&lt;li&gt;Optimize speed&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you want to learn more about the roadmap, please check it out on the &lt;a href="https://tailwind-figma.com/#roadmap"&gt;Tailwind Figma roadmap&lt;/a&gt; section.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pricing-plan"&gt;
  &lt;/a&gt;
  Pricing plan
&lt;/h2&gt;

&lt;p&gt;We have worked a lot on this project, and we believe that any designer or developer can use this set of products to prototype, design, and integrate user interfaces for websites much faster. We also believe that the design is quite versatile and you can easily use it for multiple projects. This is why we decided that once you purchase a plan, you can use it for unlimited projects.&lt;/p&gt;

&lt;p&gt;The pricing plan is pretty straightforward:&lt;/p&gt;

&lt;p&gt;If you have any questions you can check out the &lt;a href="https://tailwind-figma.com/#faq"&gt;FAQ section&lt;/a&gt; or just &lt;a href="https://themesberg.com/contact"&gt;contact us&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can also read more about the &lt;a href="https://tailwind-figma.com/license"&gt;licensing terms&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#free-community-edition"&gt;
  &lt;/a&gt;
  Free community edition
&lt;/h2&gt;

&lt;p&gt;This is Themesberg, so we decided to also create a free and open-source version of the Tailwind Figma kit that you can try out before committing to the full version. You can duplicate it on the &lt;a href="https://www.figma.com/community/file/973638860086718856"&gt;Figma community page&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>tailwindcss</category>
      <category>figma</category>
      <category>showdev</category>
    </item>
    <item>
      <title>Simple Chat with Translator by AWS Amplify</title>
      <author>Kihara, Takuya</author>
      <pubDate>Tue, 25 May 2021 10:25:53 +0000</pubDate>
      <link>https://dev.to/aws-builders/simple-chat-with-translator-by-aws-amplify-o18</link>
      <guid>https://dev.to/aws-builders/simple-chat-with-translator-by-aws-amplify-o18</guid>
      <description>&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/SzoN0_m2-7I"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;AWS Amplify has many functions related to other AWS services.&lt;br&gt;
This article uses "Predictions," which is the category of "AI/ML."&lt;br&gt;
Among them, let's use "Translate language."&lt;br&gt;
&lt;a href="https://docs.amplify.aws/lib/predictions/translate/q/platform/js"&gt;https://docs.amplify.aws/lib/predictions/translate/q/platform/js&lt;/a&gt; &lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#1-setup"&gt;
  &lt;/a&gt;
  1. Setup
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Node.js (+ yarn)&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://cli.vuejs.org/guide/prototyping.html"&gt;Vue CLI&lt;/a&gt; (+Vuetify)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.amplify.aws/cli/start/install"&gt;Amplify CLI&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Install above items.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#2-create-project"&gt;
  &lt;/a&gt;
  2. Create Project
&lt;/h1&gt;

&lt;p&gt;Let's create a Vue project.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ vue create sample-amplify-translator-chat


Vue CLI v4.5.13
? Please pick a preset: Manually select features
? Check the features needed for your project: Choose Vue version, Babel, Router,
 Vuex, Linter
? Choose a version of Vue.js that you want to start the project with 2.x
? Use history mode for router? (Requires proper server setup for index fallback 
in production) Yes
? Pick a linter / formatter config: Prettier
? Pick additional lint features: Lint on save
? Where do you prefer placing config for Babel, ESLint, etc.? In dedicated confi
g files
? Save this as a preset for future projects? No

(snip)

$ cd sample-amplify-translator-chat
$ vue add vuetify

(snip)

? Choose a preset: Default (recommended)

(snip)

$
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;And set Amplify project.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ amplify init
Note: It is recommended to run this command from the root of your app directory
? Enter a name for the project sampleamplifytransla
The following configuration will be applied:

Project information
| Name: sampleamplifytransla
| Environment: dev
| Default editor: Visual Studio Code
| App type: javascript
| Javascript framework: vue
| Source Directory Path: src
| Distribution Directory Path: dist
| Build Command: npm run-script build
| Start Command: npm run-script serve

? Initialize the project with the above configuration? No
? Enter a name for the environment dev
? Choose your default editor: Visual Studio Code
? Choose the type of app that you're building javascript
Please tell us about your project
? What javascript framework are you using vue
? Source Directory Path:  src
? Distribution Directory Path: dist
? Build Command:  yarn build
? Start Command: yarn serve
Using default provider  awscloudformation
? Select the authentication method you want to use: AWS profile

For more information on AWS Profiles, see:
https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-profiles.html

? Please choose the profile you want to use default
Adding backend environment dev to AWS Amplify Console app: XXXXXXXXXXXXXX
⠇ Initializing project in the cloud...

(snip)

Your project has been successfully initialized and connected to the cloud!

Some next steps:
"amplify status" will show you what you've added already and if it's locally configured or deployed
"amplify add &amp;lt;category&amp;gt;" will allow you to add features like user login or a backend API
"amplify push" will build all your local backend resources and provision it in the cloud
"amplify console" to open the Amplify Console and view your project status
"amplify publish" will build all your local backend and frontend resources (if you have hosting category added) and provision it in the cloud

Pro tip:
Try "amplify add api" to create a backend API and then "amplify publish" to deploy everything

$
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h1&gt;
  &lt;a href="#3-add-auth"&gt;
  &lt;/a&gt;
  3. Add Auth
&lt;/h1&gt;

&lt;p&gt;"Translate language" function has to need Auth.&lt;br&gt;
So, add Auth function.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ amplify add auth
Using service: Cognito, provided by: awscloudformation

 The current configured provider is Amazon Cognito. 

 Do you want to use the default authentication and security configuration? Default configuration
 Warning: you will not be able to edit these selections. 
 How do you want users to be able to sign in? Username
 Do you want to configure advanced settings? No, I am done.
Successfully added auth resource sampleamplifytransla4290ed5c locally

Some next steps:
"amplify push" will build all your local backend resources and provision it in the cloud
"amplify publish" will build all your local backend and frontend resources (if you have hosting category added) and provision it in the cloud

$
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Then push the project.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ amplify push
✔ Successfully pulled backend environment dev from the cloud.

Current Environment: dev

| Category | Resource name                | Operation | Provider plugin   |
| -------- | ---------------------------- | --------- | ----------------- |
| Auth     | sampleamplifytransla4290ed5c | Create    | awscloudformation |
? Are you sure you want to continue? Yes
⠦ Updating resources in the cloud. This may take a few minutes...

(snip)

UPDATE_COMPLETE_CLEANUP_IN_PROGRESS amplify-sampleamplifytransla-dev-221649 AWS::CloudFormation::Stack Mon May 24 2021 22:42:33 GMT+0900 (日本標準時) 
UPDATE_COMPLETE                     amplify-sampleamplifytransla-dev-221649 AWS::CloudFormation::Stack Mon May 24 2021 22:42:34 GMT+0900 (日本標準時) 
✔ All resources are updated in the cloud


$
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h1&gt;
  &lt;a href="#4-add-predictions"&gt;
  &lt;/a&gt;
  4. Add Predictions
&lt;/h1&gt;

&lt;p&gt;Now, the primary function.&lt;br&gt;
Add Predictions to use the "Translate language" function.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ amplify add predictions
? Please select from one of the categories below Convert
? What would you like to convert? Translate text into a different language
? Provide a friendly name for your resource translateText20591e92
? What is the source language? English
? What is the target language? Japanese
? Who should have access? Auth and Guest users
Auth configuration is required to allow unauthenticated users, but it is not configured properly.
Successfully updated auth resource locally.
Successfully added resource translateText20591e92 locally

Some next steps:
"amplify push" builds all of your local backend resources and provisions them in the cloud
"amplify publish" builds all of your local backend and front-end resources (if you added hosting category) and provisions them in the cloud

$
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Push the project.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ amplify push
✔ Successfully pulled backend environment dev from the cloud.

Current Environment: dev

| Category    | Resource name                | Operation | Provider plugin   |
| ----------- | ---------------------------- | --------- | ----------------- |
| Predictions | translateText39476081        | Create    | awscloudformation |
| Auth        | sampleamplifytransla0530875a | Update    | awscloudformation |
? Are you sure you want to continue? Yes
⠋ Updating resources in the cloud. This may take a few minutes...

(snip)

UPDATE_COMPLETE authsampleamplifytransla4290ed5c        AWS::CloudFormation::Stack Mon May 24 2021 22:51:01 GMT+0900 (日本標準時) 
UPDATE_COMPLETE amplify-sampleamplifytransla-dev-221649 AWS::CloudFormation::Stack Mon May 24 2021 22:51:01 GMT+0900 (日本標準時) 
✔ All resources are updated in the cloud


$
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Your &lt;code&gt;src/main.js&lt;/code&gt; is below.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Vue&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./App.vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;router&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./router&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;store&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./store&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;vuetify&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./plugins/vuetify&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@aws-amplify/ui-vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Amplify&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;aws-amplify&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;awsconfig&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./aws-exports&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="nx"&gt;Amplify&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;configure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;awsconfig&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;AmazonAIPredictionsProvider&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@aws-amplify/predictions&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="nx"&gt;Amplify&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addPluggable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;AmazonAIPredictionsProvider&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;

&lt;span class="nx"&gt;Vue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;productionTip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;

&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Vue&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;vuetify&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;render&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;h&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;h&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="nx"&gt;$mount&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#app&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;If you forget to write &lt;code&gt;Amplify.addPluggable(new AmazonAIPredictionsProvider())&lt;/code&gt; (like me), this system is not work.&lt;br&gt;
Let's check this document.&lt;br&gt;
&lt;a href="https://docs.amplify.aws/lib/predictions/getting-started/q/platform/js"&gt;https://docs.amplify.aws/lib/predictions/getting-started/q/platform/js&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#5-add-api"&gt;
  &lt;/a&gt;
  5. Add API
&lt;/h1&gt;

&lt;p&gt;Add API(GraphQL) for saving messages.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ amplify add api
? Please select from one of the below mentioned services: GraphQL
? Provide API name: sampleamplifytransla
? Choose the default authorization type for the API API key
? Enter a description for the API key: 
? After how many days from now the API key should expire (1-365): 7
? Do you want to configure advanced settings for the GraphQL API No, I am done.
? Do you have an annotated GraphQL schema? No
? Choose a schema template: Single object with fields (e.g., “Todo” with ID, name, description)

The following types do not have '@auth' enabled. Consider using @auth with @model
         - Todo
Learn more about @auth here: https://docs.amplify.aws/cli/graphql-transformer/auth


GraphQL schema compiled successfully.

Edit your schema at /[YOUR_DIRECTORY]/sample-amplify-translator-chat/amplify/backend/api/sampleamplifytransla/schema.graphql or place .graphql files in a directory at /[YOUR_DIRECTORY]/sample-amplify-translator-chat/amplify/backend/api/sampleamplifytransla/schema
? Do you want to edit the schema now? No
Successfully added resource sampleamplifytransla locally

Some next steps:
"amplify push" will build all your local backend resources and provision it in the cloud
"amplify publish" will build all your local backend and frontend resources (if you have hosting category added) and provision it in the cloud

$
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Change &lt;code&gt;amplify/backend/api/sampleamplifytransla/schema.graphql&lt;/code&gt; below.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight graphql"&gt;&lt;code&gt;&lt;span class="k"&gt;type&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;ID&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;userName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;originalMessage&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;translatedMessage&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;createdAt&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;AWSDateTime&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Push the project.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ amplify push
✔ Successfully pulled backend environment dev from the cloud.

Current Environment: dev

| Category    | Resource name                | Operation | Provider plugin   |
| ----------- | ---------------------------- | --------- | ----------------- |
| Api         | sampleamplifytransla         | Create    | awscloudformation |
| Auth        | sampleamplifytransla4290ed5c | No Change | awscloudformation |
| Predictions | translateText20591e92        | No Change | awscloudformation |
? Are you sure you want to continue? Yes

The following types do not have '@auth' enabled. Consider using @auth with @model
         - Message
Learn more about @auth here: https://docs.amplify.aws/cli/graphql-transformer/auth


GraphQL schema compiled successfully.

Edit your schema at /[YOUR_DIRECTORY]/sample-amplify-translator-chat/amplify/backend/api/sampleamplifytransla/schema.graphql or place .graphql files in a directory at /[YOUR_DIRECTORY]/sample-amplify-translator-chat/amplify/backend/api/sampleamplifytransla/schema
? Do you want to generate code for your newly created GraphQL API Yes
? Choose the code generation language target javascript
? Enter the file name pattern of graphql queries, mutations and subscriptions src/graphql/**/*.js
? Do you want to generate/update all possible GraphQL operations - queries, mutations and subscriptions Yes
? Enter maximum statement depth [increase from default if your schema is deeply nested] 2
⠇ Updating resources in the cloud. This may take a few minutes...

(snip)

✔ Generated GraphQL operations successfully and saved at src/graphql
✔ All resources are updated in the cloud

GraphQL endpoint: https://XXXXXXXXXXXXXXXXXXXXXXXXXX.appsync-api.ap-northeast-1.amazonaws.com/graphql
GraphQL API KEY: XXX-XXXXXXXXXXXXXXXXXXXXXXXXXX


$
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h1&gt;
  &lt;a href="#6-implementation"&gt;
  &lt;/a&gt;
  6. Implementation
&lt;/h1&gt;

&lt;p&gt;OK, we can implement the chat to include the translate function.&lt;/p&gt;

&lt;p&gt;If you want to know about code detail, please see this repository.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/tacck"&gt;
        tacck
      &lt;/a&gt; / &lt;a href="https://github.com/tacck/sample-amplify-translator-chat"&gt;
        sample-amplify-translator-chat
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;
  src/views/Chat.vue
  &lt;br&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight vue"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;v-container&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;v-row&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;v-col&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"pb-0"&lt;/span&gt; &lt;span class="na"&gt;cols=&lt;/span&gt;&lt;span class="s"&gt;"12"&lt;/span&gt; &lt;span class="na"&gt;sm=&lt;/span&gt;&lt;span class="s"&gt;"8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;v-text-field&lt;/span&gt;
          &lt;span class="na"&gt;v-model=&lt;/span&gt;&lt;span class="s"&gt;"userName"&lt;/span&gt;
          &lt;span class="na"&gt;label=&lt;/span&gt;&lt;span class="s"&gt;"User Name"&lt;/span&gt;
          &lt;span class="na"&gt;outlined&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;gt;&amp;lt;/v-text-field&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;gt;&amp;lt;/v-col&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;v-col&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"pb-0"&lt;/span&gt; &lt;span class="na"&gt;cols=&lt;/span&gt;&lt;span class="s"&gt;"6"&lt;/span&gt; &lt;span class="na"&gt;sm=&lt;/span&gt;&lt;span class="s"&gt;"2"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;v-select&lt;/span&gt;
          &lt;span class="na"&gt;:items=&lt;/span&gt;&lt;span class="s"&gt;"languages"&lt;/span&gt;
          &lt;span class="na"&gt;label=&lt;/span&gt;&lt;span class="s"&gt;"Original Language"&lt;/span&gt;
          &lt;span class="na"&gt;outlined&lt;/span&gt;
          &lt;span class="na"&gt;v-model=&lt;/span&gt;&lt;span class="s"&gt;"fromLang"&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;gt;&amp;lt;/v-select&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/v-col&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;v-col&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"pb-0"&lt;/span&gt; &lt;span class="na"&gt;cols=&lt;/span&gt;&lt;span class="s"&gt;"6"&lt;/span&gt; &lt;span class="na"&gt;sm=&lt;/span&gt;&lt;span class="s"&gt;"2"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;v-select&lt;/span&gt;
          &lt;span class="na"&gt;:items=&lt;/span&gt;&lt;span class="s"&gt;"languages"&lt;/span&gt;
          &lt;span class="na"&gt;label=&lt;/span&gt;&lt;span class="s"&gt;"Translate to"&lt;/span&gt;
          &lt;span class="na"&gt;outlined&lt;/span&gt;
          &lt;span class="na"&gt;v-model=&lt;/span&gt;&lt;span class="s"&gt;"toLang"&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;gt;&amp;lt;/v-select&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/v-col&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;v-col&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"pt-0"&lt;/span&gt; &lt;span class="na"&gt;cols=&lt;/span&gt;&lt;span class="s"&gt;"12"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;v-text-field&lt;/span&gt;
          &lt;span class="na"&gt;v-model=&lt;/span&gt;&lt;span class="s"&gt;"message"&lt;/span&gt;
          &lt;span class="na"&gt;label=&lt;/span&gt;&lt;span class="s"&gt;"Message"&lt;/span&gt;
          &lt;span class="na"&gt;outlined&lt;/span&gt;
          &lt;span class="na"&gt;append-outer-icon=&lt;/span&gt;&lt;span class="s"&gt;"mdi-send"&lt;/span&gt;
          &lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="na"&gt;click:append-outer=&lt;/span&gt;&lt;span class="s"&gt;"sendMessage"&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;gt;&amp;lt;/v-text-field&amp;gt;&amp;lt;/v-col&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;gt;&amp;lt;/v-row&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;Timeline&lt;/span&gt; &lt;span class="na"&gt;:messages=&lt;/span&gt;&lt;span class="s"&gt;"computedSortedMessages"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/Timeline&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/v-container&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;API&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;graphqlOperation&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Predictions&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;aws-amplify&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;listMessages&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@/graphql/queries&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createMessage&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@/graphql/mutations&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;onCreateMessage&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@/graphql/subscriptions&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Timeline&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../components/Timeline&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;components&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Timeline&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;computed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;computedSortedMessages&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;messages&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createdAt&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createdAt&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;userName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;fromLang&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;toLang&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt;
      &lt;span class="na"&gt;languages&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;en&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ja&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
      &lt;span class="na"&gt;onCreateMessageSubscription&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;created&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;API&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;graphql&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;graphqlOperation&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;listMessages&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;messages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listMessages&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;items&lt;/span&gt;

    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;unsubscribe&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;API&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;graphql&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;graphqlOperation&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;onCreateMessage&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nx"&gt;subscribe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;next&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;provider&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;provider&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
          &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onCreateMessage&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;beforeDestroy&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onCreateMessageSubscription&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onCreateMessageSubscription&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;unsubscribe&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onCreateMessageSubscription&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;methods&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;sendMessage&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;sendMessage&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;Predictions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;convert&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="na"&gt;translateText&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;source&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;language&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fromLang&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="c1"&gt;// supported languages https://docs.aws.amazon.com/translate/latest/dg/how-it-works.html#how-it-works-language-codes&lt;/span&gt;
          &lt;span class="p"&gt;},&lt;/span&gt;
          &lt;span class="na"&gt;targetLanguage&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toLang&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;})&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;API&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;graphql&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="nx"&gt;graphqlOperation&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;createMessage&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;input&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;userName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;userName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;originalMessage&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;translatedMessage&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;}),&lt;/span&gt;
      &lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;userName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fromLang&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toLang&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;style&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;style&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;/p&gt;

&lt;p&gt;
  src/components/Timeline.vue
  &lt;br&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight vue"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;v-row&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;v-col&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"pb-0"&lt;/span&gt; &lt;span class="na"&gt;cols=&lt;/span&gt;&lt;span class="s"&gt;"12"&lt;/span&gt; &lt;span class="na"&gt;v-for=&lt;/span&gt;&lt;span class="s"&gt;"message in messages"&lt;/span&gt; &lt;span class="na"&gt;:key=&lt;/span&gt;&lt;span class="s"&gt;"message.id"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;v-card&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"ma-4"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;v-row&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;v-col&lt;/span&gt; &lt;span class="na"&gt;cols=&lt;/span&gt;&lt;span class="s"&gt;"12"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"px-5 text-h5 font-weight-light"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="si"&gt;{{&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;userName&lt;/span&gt; &lt;span class="si"&gt;}}&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/v-col&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/v-row&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;v-row&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;v-col&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"py-0"&lt;/span&gt; &lt;span class="na"&gt;cols=&lt;/span&gt;&lt;span class="s"&gt;"6"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;v-card&lt;/span&gt; &lt;span class="na"&gt;outlined&lt;/span&gt; &lt;span class="na"&gt;color=&lt;/span&gt;&lt;span class="s"&gt;"grey lighten-3"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
              &lt;span class="nt"&gt;&amp;lt;v-card-subtitle&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"caption"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Original&lt;span class="nt"&gt;&amp;lt;/v-card-subtitle&amp;gt;&lt;/span&gt;
              &lt;span class="nt"&gt;&amp;lt;v-card-text&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"body-1"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="si"&gt;{{&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;originalMessage&lt;/span&gt; &lt;span class="si"&gt;}}&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/v-card-text&lt;/span&gt;
              &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/v-card&amp;gt;&amp;lt;/v-col&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;v-col&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"px-8"&lt;/span&gt; &lt;span class="na"&gt;cols=&lt;/span&gt;&lt;span class="s"&gt;"6"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{{&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;translatedMessage&lt;/span&gt; &lt;span class="si"&gt;}}&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/v-col&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/v-row&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/v-card&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/v-col&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/v-row&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;props&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;style&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;style&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#7-checking"&gt;
  &lt;/a&gt;
  7. Checking
&lt;/h1&gt;

&lt;p&gt;You can see the chat like the below movie.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/SzoN0_m2-7I"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;AWS Amplify is one of the easy ways to use Amazon Translate.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>amplify</category>
      <category>vue</category>
    </item>
    <item>
      <title>Disclose what you collect</title>
      <author>Hendrik</author>
      <pubDate>Tue, 25 May 2021 10:21:46 +0000</pubDate>
      <link>https://dev.to/hendr_ik/disclose-what-you-collect-3p3j</link>
      <guid>https://dev.to/hendr_ik/disclose-what-you-collect-3p3j</guid>
      <description>&lt;p&gt;We are building &lt;a href="https://www.offen.dev/?utm_source=forum&amp;amp;utm_campaign=180"&gt;Offen,&lt;/a&gt; a fair web analytics software that treats operators and users as equal parties. Operators can gain insights into how users interact with their services, while ensuring that they retain full control over their data.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;We have just drafted a standards proposition that will allow websites and services to disclose information about their use of analytics software and tracking software.&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;As this relates to our work on Offen, we want to give some insight into this matter.&lt;/p&gt;

&lt;p&gt;The variety of privacy regulations worldwide and the consequently varying techniques for collecting usage data make web analytics a cluttered field. Terms such as "data protection" or "privacy-friendly" are widely used and show up regularly in consent banners and privacy statements of websites and services. &lt;/p&gt;

&lt;p&gt;Nevertheless, it is often difficult to find out what they really stand for in a specific case. Thats why we believe that a comprehensive description of the use of analytics and tracking is missing. It should be understandable for a non-technical audience, but also suitable for processing by software. &lt;/p&gt;

&lt;p&gt;Earlier this year, we started working on such a standard and named it &lt;code&gt;analytics.txt&lt;/code&gt;. For now, it is available as a draft and waits to be discussed. We are actively looking for reviewers and welcome any feedback. Feel welcomed to take this idea forward together and get in touch with us. For more information on the standard and its implementation, have a look on the dedicated website.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.analyticstxt.org/?utm_source=forum&amp;amp;utm_campaign=180"&gt;View analyticstxt.org&lt;/a&gt;&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>webdev</category>
      <category>opensource</category>
      <category>privacy</category>
    </item>
    <item>
      <title>Resourses I Use For Web Development</title>
      <author>AmeyaKulkarni2001</author>
      <pubDate>Tue, 25 May 2021 10:21:11 +0000</pubDate>
      <link>https://dev.to/ameyakulkarni2001/resourses-i-use-for-web-development-1j3a</link>
      <guid>https://dev.to/ameyakulkarni2001/resourses-i-use-for-web-development-1j3a</guid>
      <description>&lt;h3&gt;
  &lt;a href="#mdn-web-docs"&gt;
  &lt;/a&gt;
  **)&lt;a href="https://developer.mozilla.org/en-US/"&gt;MDN Web Docs&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;MDN Web Docs is the almost go-to site for Web developers, so I didn't mention it here&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-html-cheat-sheet"&gt;
  &lt;/a&gt;
  1) &lt;a href="https://web.stanford.edu/group/csp/cs21/htmlcheatsheet.pdf"&gt;HTML Cheat Sheet&lt;/a&gt;
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A cheat sheet which contains all basic HTML tags and attributes
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There are a lot HTML tags, each tags have their own attributes, each tag has a different function, this cheat sheet helps a lot with that type of problems, just download it and keep it around.&lt;/p&gt;

&lt;p&gt;It also isn't a large sheet, just 2 pages with almost 10 times amount of information&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-css-cheat-sheet"&gt;
  &lt;/a&gt;
  2) &lt;a href="https://web.stanford.edu/group/csp/cs21/csscheatsheet.pdf"&gt;CSS Cheat Sheet&lt;/a&gt;
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;All properties of CSS arranged on 2 sheets
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There are a lot of CSS properties, many of which even I don't know exist, and they do dozens of things, which I havent bothered exploring yet. This sheet also has loads of info, which can act as your look up sheet, just keep it around&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-color-hunt"&gt;
  &lt;/a&gt;
  3) &lt;a href="https://colorhunt.co/"&gt;Color Hunt&lt;/a&gt;
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Helps choose appropriate color scheme for your side
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jBGQD0Tz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vbay8sil7i4ff919nhnn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jBGQD0Tz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vbay8sil7i4ff919nhnn.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Color hunt is a site from which you can select an appropriate color scheme for your website so that it  looks sophisticated and doesn't look the all over the place types, it also has a chrome extension available&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-favicon"&gt;
  &lt;/a&gt;
  4) &lt;a href="https://www.favicon.cc/"&gt;Favicon&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D2qIj14b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qc3qwqve4zwny73zlxd9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D2qIj14b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qc3qwqve4zwny73zlxd9.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Favicon is one of the most known websites to design an appropriate icon for your webpage.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-google-fonts"&gt;
  &lt;/a&gt;
  5) &lt;a href="https://fonts.google.com/"&gt;Google Fonts&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r9nBUsQ7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hresgzi0hi1i2xqvfia0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r9nBUsQ7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hresgzi0hi1i2xqvfia0.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Google Fonts has a variety of fonts which you can import and import for your website&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-flaticon"&gt;
  &lt;/a&gt;
  6) &lt;a href="https://www.flaticon.com/"&gt;Flaticon&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DcpjbpU7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gmdqv112nzbq1bkjf65f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DcpjbpU7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gmdqv112nzbq1bkjf65f.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
This website has a large collections from where I download icons and emojis when I have to put them in the website&lt;/p&gt;

</description>
      <category>webdev</category>
    </item>
    <item>
      <title>How I made over $700 in sales with a Gumroad product (and how you can too)</title>
      <author>Pasca Vlad</author>
      <pubDate>Tue, 25 May 2021 10:10:00 +0000</pubDate>
      <link>https://dev.to/pascavld/how-i-made-over-700-in-sales-with-a-gumroad-product-and-how-you-can-too-472n</link>
      <guid>https://dev.to/pascavld/how-i-made-over-700-in-sales-with-a-gumroad-product-and-how-you-can-too-472n</guid>
      <description>&lt;p&gt;&lt;em&gt;If you found value in this thread you will most likely enjoy my tweets too so make sure you follow me on &lt;a href="https://twitter.com/VladPasca5"&gt;Twitter&lt;/a&gt;  for more information about web development and how to improve as a developer. This article was first published on my &lt;a href="https://vladpasca.hashnode.dev/"&gt;Blog&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#first-thing-first-i-created-an-audience"&gt;
  &lt;/a&gt;
  First thing first, I created an audience
&lt;/h3&gt;

&lt;p&gt;I didn't create it to promote an info product in the future, I created it because I loved to create content&lt;/p&gt;

&lt;p&gt;So when I first thought about creating an eBook I was at 7-8k followers already&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-i-came-up-with-the-idea"&gt;
  &lt;/a&gt;
  How I came up with the idea?
&lt;/h3&gt;

&lt;p&gt;I thought about all the questions I get in my DMs every day&lt;/p&gt;

&lt;p&gt;And those were about: what resources to use, how to improve as a dev, advice for newbie devs, etc&lt;/p&gt;

&lt;p&gt;So I thought: why not include a section about all of these topics in an eBook&lt;/p&gt;

&lt;p&gt;Then I created the product on @gumroad and contacted @hustlewithcata to help me create the cover (highly recommended)&lt;/p&gt;

&lt;p&gt;I decided to create the eBook as a Notion page since that is easier and looks better than a PDF&lt;/p&gt;

&lt;p&gt;I was already working at the eBook for the last 7 days when I decided to open the Pre-Orders for the eBook&lt;/p&gt;

&lt;p&gt;And that's what I did&lt;/p&gt;

&lt;p&gt;I wrote a tweet where I announced that my eBook is available for Pre-Orders&lt;/p&gt;

&lt;p&gt;Here is the tweet - &lt;a href="https://twitter.com/VladPasca5/status/1379778483572776963?s=20"&gt;https://twitter.com/VladPasca5/status/1379778483572776963?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It performed well and brought over $100 in sales on the first day and Another $200 in the next 7 days until I launched&lt;/p&gt;

&lt;p&gt;After 7 days I finished the product and decided to launch since I already had a few good reviews (which helped me a lot)&lt;/p&gt;

&lt;p&gt;For the launch, I did the same thing, posted a tweet (this one &lt;a href="https://twitter.com/VladPasca5/status/1382318721910202368?s=20"&gt;https://twitter.com/VladPasca5/status/1382318721910202368?s=20&lt;/a&gt;) and waited&lt;/p&gt;

&lt;p&gt;That tweet brought another $200 in sales so I was already at $500&lt;/p&gt;

&lt;p&gt;The other $200 came from my pinned tweet (the one about the launch) and word of mouth&lt;/p&gt;

&lt;p&gt;I didn't promote the eBook on Reddit or other social media platforms. Just Twitter&lt;/p&gt;

&lt;p&gt;So here are all the stats after one month&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Over 1600 views&lt;br&gt;
Almost 100 sales&lt;br&gt;
$667 in revenue&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So, how can you do this too?&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Build an audience around something you are passionate about (and you're quite good at)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Find the problems your audience has&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Think about the solution to solve that problem&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create that solution and put it into an eBook/video course&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Promote it to your audience&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;One last thing...&lt;/p&gt;

&lt;p&gt;It is not as hard as it might seem right now&lt;/p&gt;

&lt;p&gt;I know, you might fail. But it doesn't matter&lt;/p&gt;

&lt;p&gt;Treat it like a learning experience and you can only win.&lt;/p&gt;

&lt;p&gt;Btw here is my eBook if you are interested -&amp;gt; &lt;a href="https://gumroad.com/l/web-developer-knowledge"&gt;https://gumroad.com/l/web-developer-knowledge&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-end"&gt;
  &lt;/a&gt;
  The end
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;I hope found this useful and if you did please let me know. If you have any question feel free to DM me on  &lt;a href="https://twitter.com/VladPasca5"&gt;Twitter&lt;/a&gt; .&lt;/em&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>Check out my React.js Tutorial series [more videos coming soon...]</title>
      <author>The Nerdy Dev</author>
      <pubDate>Tue, 25 May 2021 09:59:51 +0000</pubDate>
      <link>https://dev.to/thenerdydev/check-out-my-react-js-tutorial-series-more-videos-coming-soon-f09</link>
      <guid>https://dev.to/thenerdydev/check-out-my-react-js-tutorial-series-more-videos-coming-soon-f09</guid>
      <description>&lt;p&gt;Hey everyone 👋🏻,&lt;/p&gt;

&lt;p&gt;So a couple of months back, I started working on my &lt;strong&gt;React.js Tutorial Series&lt;/strong&gt; on my YouTube Channel but couldn't continue with it due to my strict work schedule. But I am back with new stuff on my channel and gonna continue uploading more videos and new projects using React.js. I have some very good ideas and cool projects that will be coming on my channel very soonish...&lt;br&gt;
&lt;strong&gt;Make sure to subscribe to my channel. You can find the link down below in this article or in the bio of my Dev Profile&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;If you want to check out the tutorial series, here is a link for it. It currently contains 15 videos but more will be coming soon. &lt;/p&gt;

&lt;p&gt;Here is the first video if you want to check out : &lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/lBx0bZrl094"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Complete Playlist Link&lt;/strong&gt; : &lt;a href="https://www.youtube.com/watch?v=lBx0bZrl094&amp;amp;list=PLXgqhtspYCM_riIA3Mqbq6wQcdLMF5kAp&amp;amp;index=1"&gt;https://www.youtube.com/watch?v=lBx0bZrl094&amp;amp;list=PLXgqhtspYCM_riIA3Mqbq6wQcdLMF5kAp&amp;amp;index=1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PS&lt;/strong&gt; - If you are looking to learn Web Development, I have curated a &lt;strong&gt;FREE&lt;/strong&gt; course for you on my YouTube Channel, check the below article :&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/thenerdydev" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dvgjnxQX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j2i8W0Wf--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/297820/e861379b-e75a-48e5-bc39-44b3e940c086.png" alt="thenerdydev image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/thenerdydev/2021-web-developer-full-course-html-css-javascript-node-js-and-mongodb-27pb" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;(2021) - Web Developer Full Course : HTML, CSS, JavaScript, Node.js and MongoDB&lt;/h2&gt;
      &lt;h3&gt;The Nerdy Dev ・ Apr 28 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#node&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;If you have spare 2 hours, then utilize them by creating these &lt;strong&gt;10 JavaScript Projects in under 2 Hours&lt;/strong&gt; &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/thenerdydev" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dvgjnxQX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j2i8W0Wf--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/297820/e861379b-e75a-48e5-bc39-44b3e940c086.png" alt="thenerdydev image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/thenerdydev/10-javascript-projects-in-2-hours-3p1c" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;10 JavaScript Projects in 2 Hours&lt;/h2&gt;
      &lt;h3&gt;The Nerdy Dev ・ Oct 26 '20 ・ 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;👉🏻 Follow me on Twitter : &lt;a href="https://twitter.com/The_Nerdy_Dev"&gt;https://twitter.com/The_Nerdy_Dev&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;👉🏻 Check out my YouTube Channel : &lt;a href="https://youtube.com/thenerdydev"&gt;https://youtube.com/thenerdydev&lt;/a&gt; &lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>javascript</category>
      <category>react</category>
      <category>codenewbie</category>
    </item>
  </channel>
</rss>
