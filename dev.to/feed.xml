<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Streaming data from AWS S3 using NodeJS Stream API and Typescript</title>
      <author>Austin Burger</author>
      <pubDate>Sun, 02 Jan 2022 20:35:31 +0000</pubDate>
      <link>https://dev.to/about14sheep/streaming-data-from-aws-s3-using-nodejs-stream-api-and-typescript-3dj0</link>
      <guid>https://dev.to/about14sheep/streaming-data-from-aws-s3-using-nodejs-stream-api-and-typescript-3dj0</guid>
      <description>&lt;p&gt;AWS s3 SDK and NodeJS read/write streams makes it easy to download files from an AWS bucket, however what if you wanted to stream the files instead? &lt;/p&gt;

&lt;p&gt;There is a timeout on connecting to the AWS instance set to 120000ms (2 minutes). Unless you have very small files, this just won't cut it. &lt;/p&gt;

&lt;p&gt;One option is to simply raise that timeout, but then how much should you raise it? Since the timeout is for the total time a connection can last; you would have to either make the timeout some ridiculous amount, or guess how long it will take to stream the file and update the timeout accordingly. This is also not taking into account the stream closing due to HTTP(S)'s own timeout reasons as well.&lt;/p&gt;

&lt;p&gt;Instead of making guesses and fighting random bugs, we can make use of the NodeJS Stream API and create our very own custom readable "smart stream".&lt;/p&gt;

&lt;p&gt;The idea is to create a stream that uses the power of AWS s3 &lt;br&gt;
 ability to grab a range of data, close the connection, then grab another range of data. This stream will pause when its buffer is full, only requesting new data on an as needed basis.&lt;/p&gt;

&lt;p&gt;Before we begin, I am assuming you have used AWS s3 SDK to download files successfully and are now wanting to convert that functionality to a proper stream. As such, I will omit the AWS implementation and instead show a simple example of how, and where, to instantiate this "smart stream" class&lt;/p&gt;

&lt;p&gt;We will start by creating the "smart stream" class:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;Readable&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ReadableOptions&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;stream&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;aws-sdk&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;SmartStream&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Readable&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;_currentCursorPosition&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Holds the current starting position for our range queries&lt;/span&gt;
    &lt;span class="nx"&gt;_s3DataRange&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;64&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;1024&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Amount of bytes to grab&lt;/span&gt;
    &lt;span class="nl"&gt;_maxContentLength&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Total number of bites in the file&lt;/span&gt;
    &lt;span class="nl"&gt;_s3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// AWS.S3 instance&lt;/span&gt;
    &lt;span class="nl"&gt;_s3StreamParams&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GetObjectRequest&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Parameters passed into s3.getObject method&lt;/span&gt;

    &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="nx"&gt;parameters&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GetObjectRequest&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;s3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;maxLength&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;nodeReadableStreamOptions&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;ReadableOptions&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_maxContentLength&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;maxLength&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_s3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;s3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_s3StreamParams&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;parameters&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;_read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_currentCursorPosition&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_maxContentLength&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="c1"&gt;// If the current position is greater than the amount of bytes in the file&lt;/span&gt;
            &lt;span class="c1"&gt;// We push null into the buffer, NodeJS ReadableStream will see this as the end of file (EOF) and emit the 'end' event&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="c1"&gt;// Calculate the range of bytes we want to grab&lt;/span&gt;
            &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;range&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_currentCursorPosition&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_s3DataRange&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="c1"&gt;// If the range is greater than the total number of bytes in the file&lt;/span&gt;
            &lt;span class="c1"&gt;// We adjust the range to grab the remaining bytes of data&lt;/span&gt;
            &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;adjustedRange&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;range&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_maxContentLength&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;rangeEnd&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_maxContentLength&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="c1"&gt;// Set the Range property on our s3 stream parameters&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_s3StreamParams&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Range&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`bytes=&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_currentCursorPosition&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;-&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;adjustedRange&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="c1"&gt;// Update the current range beginning for the next go &lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_currentCursorPosition&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;adjustedRange&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="c1"&gt;// Grab the range of bytes from the file&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_s3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getObject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_s3StreamParams&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="c1"&gt;// If we encounter an error grabbing the bytes&lt;/span&gt;
                    &lt;span class="c1"&gt;// We destroy the stream, NodeJS ReadableStream will emit the 'error' event&lt;/span&gt;
                    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;destroy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="c1"&gt;// We push the data into the stream buffer&lt;/span&gt;
                    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Body&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now that we have the SmartStream class coded, we are ready to wire it into our program. You can even pipe this stream into a 'gzip' stream for zipped files!&lt;/p&gt;

&lt;p&gt;For this next part, as I am assuming you understand the AWS s3 SDK, I am simply going to offer an example of how to establish the stream.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;SmartStream&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Path&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;SmartStream&lt;/span&gt; &lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;createAWSStream&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;SmartStream&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;bucketParams&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;Bucket&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Your&lt;/span&gt; &lt;span class="nx"&gt;Bucket&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;Key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Your&lt;/span&gt; &lt;span class="nx"&gt;Key&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;s3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;resolveS3Instance&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

            &lt;span class="nx"&gt;s3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;headObject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;bucketParams&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="c1"&gt;// After getting the data we want from the call to s3.headObject&lt;/span&gt;
                &lt;span class="c1"&gt;// We have everything we need to instantiate our SmartStream class&lt;/span&gt;
                &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;stream&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;SmartStream&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;bucketParams&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;s3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ContentLength&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

                &lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;stream&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is only one example of the amazing things you can do with the NodeJS standard Stream API. For further reading checkout the &lt;a href="https://nodejs.org/api/stream.html"&gt;NodeJS Stream API docs&lt;/a&gt;!&lt;/p&gt;

</description>
      <category>aws</category>
      <category>typescript</category>
      <category>javascript</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>After 1 YEAR of hard work my NEW Ultimate Web Desktop Environment is ready for launch!!!!! 🎉🎉</title>
      <author>Dustin Brett</author>
      <pubDate>Sun, 02 Jan 2022 20:01:03 +0000</pubDate>
      <link>https://dev.to/dustinbrett/after-1-year-of-hard-work-my-new-ultimate-web-desktop-environment-is-ready-for-launch-2dnd</link>
      <guid>https://dev.to/dustinbrett/after-1-year-of-hard-work-my-new-ultimate-web-desktop-environment-is-ready-for-launch-2dnd</guid>
      <description>&lt;p&gt;Hey everyone, thanks for checking out my article on my &lt;a href="https://github.com/DustinBrett/daedalOS"&gt;passion project&lt;/a&gt; for the last year (and several years prior in different forms/&lt;a href="https://github.com/DustinBrett/daedalOS/tree/v1"&gt;codebases&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;I've recently completed &lt;a href="https://www.youtube.com/playlist?list=PLM88opVjBuU7xSRoHhs3hZBz3JmHHBMMN"&gt;52 weekly streams&lt;/a&gt; in 2021 as I worked on coding my app, from Hello World to &lt;a href="https://dustinbrett.com/"&gt;what it is today&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Today (Jan 2nd) was the day of my &lt;a href="https://youtu.be/S-rF5rkhaJ0"&gt;first stream&lt;/a&gt; one year ago so I felt it was a good day to do this release. I will be having a LIVE 🔴 &lt;a href="https://youtu.be/U9nsxgCQZjk"&gt;Release Party Stream&lt;/a&gt; later &lt;em&gt;TONIGHT&lt;/em&gt;, (Jan 2nd, 2022) at 9 PM PT to celebrate finally getting the &lt;a href="https://dustinbrett.com/"&gt;code live&lt;/a&gt; and also to answer any questions or comments anyone may have.&lt;/p&gt;

&lt;p&gt;I'm also going to be answering questions throughout the 1st week of 2022 as I will post on several sub reddits that may find this project interesting. Today I have &lt;a href="https://www.reddit.com/r/reactjs/comments/rugj5a/after_1_year_of_hard_work_my_new_ultimate_web/"&gt;posted on /r/reactjs&lt;/a&gt; so feel free to go over there to comment.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#feature-summary"&gt;
  &lt;/a&gt;
  Feature Summary
&lt;/h1&gt;

&lt;h1&gt;
  &lt;a href="#system"&gt;
  &lt;/a&gt;
  System 🧠
&lt;/h1&gt;

&lt;h3&gt;
  &lt;a href="#file-system"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/jvilk/BrowserFS"&gt;File System&lt;/a&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;File Explorer

&lt;ul&gt;
&lt;li&gt;Back, Forward, Recent locations, Address bar&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API"&gt;Drag &amp;amp; Drop&lt;/a&gt; File Support (internal &amp;amp; external)

&lt;ul&gt;
&lt;li&gt;Loading progress dialog&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;ZIP (&lt;a href="https://www.npmjs.com/package/fflate"&gt;write support&lt;/a&gt;), &lt;a href="https://github.com/jvilk/BrowserFS/blob/master/src/backend/ZipFS.ts"&gt;ZIP&lt;/a&gt;/&lt;a href="https://github.com/jvilk/BrowserFS/blob/master/src/backend/IsoFS.ts"&gt;ISO&lt;/a&gt; read support, &lt;a href="https://www.npmjs.com/package/node-unrar-js"&gt;RAR extract&lt;/a&gt; support&lt;/li&gt;
&lt;li&gt;Writes to &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API"&gt;IndexedDb&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Group selection/manipulation &amp;amp; drag to sort&lt;/li&gt;
&lt;li&gt;Dynamic and auto cached icons for &lt;a href="https://github.com/Borewit/music-metadata-browser"&gt;music&lt;/a&gt;, images &amp;amp; video&lt;/li&gt;
&lt;li&gt;Context Menus

&lt;ul&gt;
&lt;li&gt;Cut, Copy, Create shortcut, Delete, Rename&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/File/Using_files_from_web_applications"&gt;Add file&lt;/a&gt;, &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/File_System_Access_API"&gt;Map directory&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Open with, Open file/folder location, Open in new window&lt;/li&gt;
&lt;li&gt;Download, Add to archive, Extract here, Set as wallpaper&lt;/li&gt;
&lt;li&gt;Sort by, New Folder, New Text Document&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Keyboard Shortcuts

&lt;ul&gt;
&lt;li&gt;CTRL+C, CTRL+V, CTRL+X, CTRL+A, Delete&lt;/li&gt;
&lt;li&gt;F2, F5, Backspace, Arrows, Enter&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;File information tooltips&lt;/li&gt;
&lt;li&gt;Allow sorting by name, date, type or extension

&lt;ul&gt;
&lt;li&gt;Persists states&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#windows"&gt;
  &lt;/a&gt;
  Windows
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/bokuweb/react-rnd"&gt;Resizable and Draggable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Minimize, Maximize &amp;amp; Close&lt;/li&gt;
&lt;li&gt;Persists size/position/maximized states&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.framer.com/motion/"&gt;Animates&lt;/a&gt; opening and closing&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#start-menu"&gt;
  &lt;/a&gt;
  Start Menu
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Expandable Sidebar

&lt;ul&gt;
&lt;li&gt;Apps list, Documents shortcut, Power (clears session)&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Spotlight visual effect&lt;/li&gt;
&lt;li&gt;Folder support&lt;/li&gt;
&lt;li&gt;Keyboard shortcut opens with &lt;strong&gt;&lt;em&gt;SHIFT+ESC&lt;/em&gt;&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#taskbar"&gt;
  &lt;/a&gt;
  Taskbar
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/bubkoo/html-to-image"&gt;Peek&lt;/a&gt; hover preview of windows&lt;/li&gt;
&lt;li&gt;Focused window indicator&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#clock"&gt;
  &lt;/a&gt;
  Clock
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Runs in a &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers"&gt;web worker&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Synced to system clock on load&lt;/li&gt;
&lt;li&gt;Date tooltip&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#wallpaper"&gt;
  &lt;/a&gt;
  Wallpaper
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.vantajs.com/"&gt;Dynamic animated wallpaper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Set via images (Fill, Fit, Stretch, Tile, Center)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#url"&gt;
  &lt;/a&gt;
  URL
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Query parameter loading

&lt;ul&gt;
&lt;li&gt;Examples:&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/?url=/favicon.ico&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/?app=TinyMCE&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#apps"&gt;
  &lt;/a&gt;
  Apps 🧪
&lt;/h1&gt;

&lt;h3&gt;
  &lt;a href="#boxedwine-exe-zip"&gt;
  &lt;/a&gt;
  &lt;a href="http://www.boxedwine.org/"&gt;BoxedWine&lt;/a&gt; (&lt;strong&gt;&lt;em&gt;.exe, .zip&lt;/em&gt;&lt;/strong&gt;)
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Runs 16/32-bit Windows applications&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#browser-htm-html"&gt;
  &lt;/a&gt;
  Browser (&lt;strong&gt;&lt;em&gt;.htm, .html&lt;/em&gt;&lt;/strong&gt;)
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Loads websites (&lt;em&gt;w/HTTP header support&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;Bookmark bar&lt;/li&gt;
&lt;li&gt;Favicon support&lt;/li&gt;
&lt;li&gt;Back/Forward &amp;amp; Reload&lt;/li&gt;
&lt;li&gt;Google search via Address bar&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#devtools"&gt;
  &lt;/a&gt;
  &lt;a href="https://eruda.liriliri.io/"&gt;DevTools&lt;/a&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Console, Elements, Network, Resources, Sources, DOM&lt;/li&gt;
&lt;li&gt;Activate from Start Menu or &lt;strong&gt;&lt;em&gt;SHIFT+F12&lt;/em&gt;&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#jsdos-exe-jsdos-zip"&gt;
  &lt;/a&gt;
  &lt;a href="https://js-dos.com/"&gt;js-dos&lt;/a&gt; (&lt;strong&gt;&lt;em&gt;.exe, .jsdos, .zip&lt;/em&gt;&lt;/strong&gt;)
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;DOS emulator&lt;/li&gt;
&lt;li&gt;Automatic save states on close

&lt;ul&gt;
&lt;li&gt;/Users/Public/Snapshots&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Automatic window resize&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#monaco-editor"&gt;
  &lt;/a&gt;
  &lt;a href="https://microsoft.github.io/monaco-editor/"&gt;Monaco Editor&lt;/a&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Code/text editor&lt;/li&gt;
&lt;li&gt;Supports all file types&lt;/li&gt;
&lt;li&gt;Save files via &lt;strong&gt;&lt;em&gt;CTRL+S&lt;/em&gt;&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Line count, cursor position, language id&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://prettier.io/"&gt;Prettier&lt;/a&gt; formatting

&lt;ul&gt;
&lt;li&gt;json, js/ts, css/sass/less, html, markdown&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#pdf-pdf"&gt;
  &lt;/a&gt;
  &lt;a href="https://mozilla.github.io/pdf.js/"&gt;PDF&lt;/a&gt; (&lt;strong&gt;&lt;em&gt;.pdf&lt;/em&gt;&lt;/strong&gt;)
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Renders PDF's&lt;/li&gt;
&lt;li&gt;Page current/count &amp;amp; Zoom&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#photos"&gt;
  &lt;/a&gt;
  Photos
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#supported_image_formats"&gt;Supported Formats&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Fullscreen &amp;amp; &lt;a href="https://github.com/anvaka/panzoom"&gt;Zoom&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#ruffle-swf-spl"&gt;
  &lt;/a&gt;
  &lt;a href="https://ruffle.rs/"&gt;Ruffle&lt;/a&gt; (&lt;strong&gt;&lt;em&gt;.swf, .spl&lt;/em&gt;&lt;/strong&gt;)
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Flash Player emulator&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#terminal"&gt;
  &lt;/a&gt;
  &lt;a href="https://xtermjs.org/"&gt;Terminal&lt;/a&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;File system support&lt;/li&gt;
&lt;li&gt;Autocomplete &amp;amp; history&lt;/li&gt;
&lt;li&gt;Command list via &lt;code&gt;help&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://isomorphic-git.org/"&gt;Git support&lt;/a&gt; (checkout &amp;amp; clone)&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://pyodide.org/"&gt;Python support&lt;/a&gt; (&lt;strong&gt;&lt;em&gt;.py&lt;/em&gt;&lt;/strong&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://wapm.io/"&gt;WebAssembly Package Manager&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Examples:&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;wapm cowsay moo&lt;/code&gt; (&lt;a href="https://wapm.io/package/cowsay"&gt;#&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;wax fortune&lt;/code&gt; (&lt;a href="https://wapm.io/package/fortune"&gt;#&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wttr.in/"&gt;Weather information&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#tinymce-whtml"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.tiny.cloud/tinymce/"&gt;TinyMCE&lt;/a&gt; (&lt;strong&gt;&lt;em&gt;.whtml&lt;/em&gt;&lt;/strong&gt;)
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Read &amp;amp; WYSIWYG modes&lt;/li&gt;
&lt;li&gt;File save support&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#virtual-x86-img-iso"&gt;
  &lt;/a&gt;
  &lt;a href="https://copy.sh/v86/"&gt;Virtual x86&lt;/a&gt; (&lt;strong&gt;&lt;em&gt;.img, .iso&lt;/em&gt;&lt;/strong&gt;)
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;x86 emulator&lt;/li&gt;
&lt;li&gt;Automatic save states on close

&lt;ul&gt;
&lt;li&gt;/Users/Public/Snapshots&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Automatic window resize&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#video-player"&gt;
  &lt;/a&gt;
  &lt;a href="https://videojs.com/"&gt;Video Player&lt;/a&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Video_codecs"&gt;Supported Formats&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Plays &lt;a href="https://github.com/videojs/videojs-youtube"&gt;YouTube&lt;/a&gt; videos/shortcuts&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#webamp-mp3-wsz"&gt;
  &lt;/a&gt;
  &lt;a href="https://webamp.org/"&gt;Webamp&lt;/a&gt; (&lt;strong&gt;&lt;em&gt;.mp3, .wsz&lt;/em&gt;&lt;/strong&gt;)
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Winamp audio player&lt;/li&gt;
&lt;li&gt;&lt;a href="https://skins.webamp.org/"&gt;Skin support&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#to-do"&gt;
  &lt;/a&gt;
  To Do 🔨
&lt;/h1&gt;

&lt;h3&gt;
  &lt;a href="#asap"&gt;
  &lt;/a&gt;
  ASAP
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Add custom session.json for sort orders&lt;/li&gt;
&lt;li&gt;File search in Terminal &amp;amp; File Explorer&lt;/li&gt;
&lt;li&gt;Status bar button to save Monaco on mobile&lt;/li&gt;
&lt;li&gt;PDF change page/zoom inputs&lt;/li&gt;
&lt;li&gt;IRC Client&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#soon"&gt;
  &lt;/a&gt;
  Soon
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Add 96x96 icons for higher dpi devices&lt;/li&gt;
&lt;li&gt;Make desktop icons draggable around grid&lt;/li&gt;
&lt;li&gt;Window Menu Bar&lt;/li&gt;
&lt;li&gt;Open/Save File Dialog&lt;/li&gt;
&lt;li&gt;File Explorer Column View&lt;/li&gt;
&lt;li&gt;File Properties Dialog&lt;/li&gt;
&lt;li&gt;NES/SNES Emulator&lt;/li&gt;
&lt;li&gt;Light theme&lt;/li&gt;
&lt;li&gt;FFMpeg Support&lt;/li&gt;
&lt;li&gt;ImageMagik Support&lt;/li&gt;
&lt;li&gt;System Tray&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#eventually"&gt;
  &lt;/a&gt;
  Eventually
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Event Viewer&lt;/li&gt;
&lt;li&gt;Task Manager&lt;/li&gt;
&lt;li&gt;Run Dialog&lt;/li&gt;
&lt;li&gt;Drag/Drop Taskbar Entries&lt;/li&gt;
&lt;li&gt;Wapm I/O&lt;/li&gt;
&lt;li&gt;Terminal piping&lt;/li&gt;
&lt;li&gt;Virtual Assistant&lt;/li&gt;
&lt;li&gt;Calendar&lt;/li&gt;
&lt;li&gt;Spreadsheet Viewer&lt;/li&gt;
&lt;li&gt;Browser Tabs&lt;/li&gt;
&lt;li&gt;Fancy Zones&lt;/li&gt;
&lt;li&gt;Service Worker&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#bugs"&gt;
  &lt;/a&gt;
  Bugs 🐛
&lt;/h1&gt;

&lt;h3&gt;
  &lt;a href="#general"&gt;
  &lt;/a&gt;
  General
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Initial sort order is not based on session&lt;/li&gt;
&lt;li&gt;Layout shifts when text is untruncated&lt;/li&gt;
&lt;li&gt;Closing File Manager too quickly causes memory leak&lt;/li&gt;
&lt;li&gt;Monaco breaks Vanta is loaded via url query&lt;/li&gt;
&lt;li&gt;Space Cadet loads too big if BoxedWine is loaded&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#mobile"&gt;
  &lt;/a&gt;
  Mobile
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Titlebar menu/clicking doesn't work properly when draggable&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#safari-mobile"&gt;
  &lt;/a&gt;
  Safari Mobile
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Drag image is black&lt;/li&gt;
&lt;li&gt;V86 not working&lt;/li&gt;
&lt;li&gt;Eruda is missing titlebar&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#firefox"&gt;
  &lt;/a&gt;
  Firefox
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;TinyMCE styling is reset on 2nd load&lt;/li&gt;
&lt;li&gt;Webamp stays in front during File Explorer drags&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thank you very much for checking out my project and please feel free to leave me feedback in whatever forum you desire. I plan to be focusing my YouTube efforts on coding and various topics about my project throughout 2022 so feel free to check those out and &lt;a href="https://www.youtube.com/c/DustinBrett/"&gt;subscribe to my channel&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#thanks-for-your-time"&gt;
  &lt;/a&gt;
  THANKS FOR YOUR TIME!!!
&lt;/h1&gt;

</description>
      <category>react</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>programming</category>
    </item>
    <item>
      <title>12 Products in 12 Months</title>
      <author>Anthony M.</author>
      <pubDate>Sun, 02 Jan 2022 19:38:29 +0000</pubDate>
      <link>https://dev.to/amorriscode/12-products-in-12-months-4h62</link>
      <guid>https://dev.to/amorriscode/12-products-in-12-months-4h62</guid>
      <description>&lt;p&gt;It's been a while since I've built anything for myself. One of the reasons I consider myself a "product-focused engineer" is because of my passion for building. Programming has enabled me to create something from nothing. Its turned me into a builder.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://alicezhao.com/"&gt;My partner&lt;/a&gt; and I have been talking about doing an ambitious project for 2022. We've decided to build &lt;strong&gt;12 products in 12 months&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why"&gt;
  &lt;/a&gt;
  Why?
&lt;/h2&gt;

&lt;p&gt;There are a lot of reasons I'm excited about this project. The first one was mentioned above.&lt;/p&gt;

&lt;p&gt;I'm a builder. Creating things excites me. It makes me feel alive. I love everything from naming products, designing logos, writing bits of code, and setting up deployments. Every bit of the process is a fun way to flex my creativity. It brings me joy.&lt;/p&gt;

&lt;p&gt;My partner is a computer science student. She's been developing her coding skills for some time now. Although we've collaborated before, she's grown a lot in the past 6 months. Now she's ready to take on bigger projects! For her, it'll be a great way to practice the skills she's learning in school and in her internships. It'll help her flex the programming muscle. It's a unique way for us to spend more time together.&lt;/p&gt;

&lt;p&gt;I suck at marketing. I'm not &lt;em&gt;great&lt;/em&gt; at design. The whole product life cycle is something I'm interested in. This project will be a safe space for me to play in areas I don't get to do as often at work. I'll be consuming a lot of product resources and seeing where we can take our products.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#timeline"&gt;
  &lt;/a&gt;
  Timeline
&lt;/h2&gt;

&lt;p&gt;We're making one product every month.&lt;/p&gt;

&lt;p&gt;Some people I've told have criticized the project. You can't build a business in a month. You can't build a good product in a month. Tell that to &lt;a href="(https://levels.io/12-startups-12-months/)"&gt;Pieter Levels&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Either way, that isn't why we are doing this. We aren't setting out to build billion dollar startups here. We're looking to build skills, be creative, and to have fun. I do hope some of our products end up being useful for ourselves (and others!) but that would be a beneficial side effect.&lt;/p&gt;

&lt;p&gt;At the start of each month, we're going to pick the product we want to build. We have a giant list but we're also &lt;a href="//mailto:amorriscode@gmail.com"&gt;open to suggestions&lt;/a&gt;! Once we've decided on the product, we'll break down our MVP and write tickets for work to be done. There's flexibility here. We're basically just going to use Kanban as we build throughout the month.&lt;/p&gt;

&lt;p&gt;At the end of each month, we'll each reflect on what we've learned. Where did we fall short? What did we have the most fun doing? And of course, we'll post on Product Hunt.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#following-along"&gt;
  &lt;/a&gt;
  Following Along
&lt;/h2&gt;

&lt;p&gt;We've setup a &lt;a href="https://batteries.notion.site/12-Products-45c32d127b274f67b44684c5e1c2dd1b"&gt;public Notion page&lt;/a&gt; where you can follow along. This is where we'll do our planning. You can see each product, the scope of the MVP, and our tickets as we work through them.&lt;/p&gt;

&lt;p&gt;We also plan to stream on Twitch every Sunday at 12 PM PST! This is will just be a fun way to interact with others. If you want to cheer us on, ask questions, or shit talk us, you can do it there. My guess is we won't have any viewers but it's just going to be another fun way to engage with the project. It should also add some aspect of accountability to the whole thing.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#our-first-project"&gt;
  &lt;/a&gt;
  Our First Project
&lt;/h2&gt;

&lt;p&gt;Today we decided on our first project, &lt;strong&gt;Poke&lt;/strong&gt;! Poke is a personal accountability system. You setup recurring goals on the platform and get reminded about them via text message.&lt;/p&gt;

&lt;p&gt;For example, if you want to go to the gym three days a week, you can add a reminder in Poke to message you on your gym days. Poke will keep track of when you accomplish your goals or when you've slipped up.&lt;/p&gt;

&lt;p&gt;I've been thinking a lot about building platforms that interact with users by sending them text messages. I use Messages on my phone more than anything else. Don't be surprised if we build other text-based things later in the year.&lt;/p&gt;

&lt;p&gt;This project is extremely ambitious. There's a good chance we don't even build 12 products. Some of our ideas could barely be described as products, others could be startups in their own right. A lot of people will doubt the value of this project or our ability to succeed. In the end, I don't care about any of that. I'm excited to be building. I'm excited to be giving myself permission to be creative just for the heck of it.&lt;/p&gt;

&lt;p&gt;The last few years have been taxing on all of us. This project has me looking at 2022 with hope and excitement. I hope you find something to make you feel the same. I can't wait to get started.&lt;/p&gt;

&lt;p&gt;I can't wait to share the journey as we make our way through 12 products!&lt;/p&gt;

</description>
      <category>product</category>
      <category>programming</category>
      <category>startup</category>
      <category>challenge</category>
    </item>
    <item>
      <title>Use an object instead of a switch</title>
      <author>guiga</author>
      <pubDate>Sun, 02 Jan 2022 19:18:47 +0000</pubDate>
      <link>https://dev.to/guigacodes/use-an-object-instead-of-a-switch-1e55</link>
      <guid>https://dev.to/guigacodes/use-an-object-instead-of-a-switch-1e55</guid>
      <description>&lt;p&gt;Sometimes we can do a simple refactor and achieve a lot with it! The example that I'm gonna show was taken from a real project that has been working just fine for a long time.&lt;/p&gt;

&lt;p&gt;Still, that doesn't mean we shouldn't take the initiative to improve simply because it's already working! However, we also need to be pragmatic and not fall into &lt;a href="https://www.youtube.com/watch?v=BY6bGhcnDDs"&gt;the perfectionism trap&lt;/a&gt;. basically, We should find the sweet spot where the effort necessary is paid by its own results. 🕵️&lt;/p&gt;

&lt;p&gt;I was working on a module that had a &lt;code&gt;getMonth&lt;/code&gt; function which would return the translation key according to the given month:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getMonth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;month&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;translationKey&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;
  &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;month&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;January&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="nx"&gt;translationKey&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;JANUARY_TRANSLATION_KEY&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
      &lt;span class="k"&gt;break&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;February&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="nx"&gt;translationKey&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;FEBRUARY_TRANSLATION_KEY&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
      &lt;span class="k"&gt;break&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;March&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="nx"&gt;translationKey&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;MARCH_TRANSLATION_KEY&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
      &lt;span class="k"&gt;break&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;April&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="nx"&gt;translationKey&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;APRIL_TRANSLATION_KEY&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
      &lt;span class="k"&gt;break&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;May&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="nx"&gt;translationKey&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;MAY_TRANSLATION_KEY&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
      &lt;span class="k"&gt;break&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;June&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="nx"&gt;translationKey&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;JUNE_TRANSLATION_KEY&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
      &lt;span class="k"&gt;break&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;July&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="nx"&gt;translationKey&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;JULY_TRANSLATION_KEY&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
      &lt;span class="k"&gt;break&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;August&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="nx"&gt;translationKey&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;AUGUST_TRANSLATION_KEY&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
      &lt;span class="k"&gt;break&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;September&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="nx"&gt;translationKey&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;SEPTEMBER_TRANSLATION_KEY&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
      &lt;span class="k"&gt;break&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;October&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="nx"&gt;translationKey&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;OCTOBER_TRANSLATION_KEY&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
      &lt;span class="k"&gt;break&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;November&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="nx"&gt;translationKey&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;NOVEMBER_TRANSLATION_KEY&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
      &lt;span class="k"&gt;break&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;December&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="nx"&gt;translationKey&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;DECEMBER_TRANSLATION_KEY&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;translationKey&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this case, it was clear to me what I would accomplish using an object instead of a switch statement:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;readability&lt;/li&gt;
&lt;li&gt;cognitive complexity (you can read more about it &lt;a href="https://www.sonarsource.com/resources/white-papers/cognitive-complexity/"&gt;here&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Why an object? Well, if you take a closer look at what the &lt;code&gt;getMonth&lt;/code&gt; function is doing, you realize that it's doing nothing but mapping keys to values, which is exactly what an object does! ✨&lt;/p&gt;

&lt;p&gt;Therefore, a switch statement isn't needed at all. actually, it just makes the code less readable and increases its cognitive complexity. So, after refactoring:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Month&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;January&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;February&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;March&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;April&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;May&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;June&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;July&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;August&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;September&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;October&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;November&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;December&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Mapping&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Record&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Month&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;MONTH_TO_TRANSLATION_KEY&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Mapping&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;January&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;JANUARY_TRANSLATION_KEY&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;February&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;FEBRUARY_TRANSLATION_KEY&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;March&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;MARCH_TRANSLATION_KEY&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;April&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;APRIL_TRANSLATION_KEY&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;May&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;MAY_TRANSLATION_KEY&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;June&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;JUNE_TRANSLATION_KEY&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;July&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;JULY_TRANSLATION_KEY&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;August&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;AUGUST_TRANSLATION_KEY&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;September&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;SEPTEMBER_TRANSLATION_KEY&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;October&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;OCTOBER_TRANSLATION_KEY&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;November&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;NOVEMBER_TRANSLATION_KEY&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;December&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;DECEMBER_TRANSLATION_KEY&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getMonth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;month&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Month&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;MONTH_TO_TRANSLATION_KEY&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;month&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I created a &lt;a href="https://github.com/guilhermedeandrade/switch-vs-object"&gt;repository with both versions&lt;/a&gt; and used the &lt;a href="https://github.com/Deskbot/Cognitive-Complexity-TS"&gt;cognitive-complexity-ts&lt;/a&gt; package to have numbers to compare (a higher score means a more complex code):&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RdCKJAer--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/az5jj61gjdy0y520u0be.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RdCKJAer--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/az5jj61gjdy0y520u0be.png" alt="the image shows that the switch version has score 1 while the object version has score 0" width="880" height="417"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As expected, the usage of an object makes this code less complex and also more readable, since it's less verbose than the switch statement.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;tl;dr:&lt;/strong&gt; whenever we notice that the switch is doing nothing more than mapping keys to values, we should use an object instead 👌&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>typescript</category>
      <category>webdev</category>
      <category>100daysofcode</category>
    </item>
    <item>
      <title>My 2021 Unwrapped</title>
      <author>Anamika</author>
      <pubDate>Sun, 02 Jan 2022 19:07:33 +0000</pubDate>
      <link>https://dev.to/noviicee/my-2021-unwrapped-2h01</link>
      <guid>https://dev.to/noviicee/my-2021-unwrapped-2h01</guid>
      <description>&lt;p&gt;&lt;em&gt;As we step into a new year, I am here to unwrap whatever I did in the year 2021.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;2021 was an year of mixed emotions for me. From anxiety, to sadness, to little happiness, to meeting new people &amp;amp; making new friends, to motivations &amp;amp; encouragements, to learning a lot. This year has been a roller-coaster for me and has surely taught me a lot. Not only on the materialistic side, but also on the intellectual aspect.&lt;/p&gt;

&lt;p&gt;The year started pretty well. I started learning new things. One of my goals for 2021 was to read about a new topic each day. I will say I am 40%-50% on that goal, because some days, it so happened that I read about a new topic and then following days I was digging into that particular topic itself. It surely counts as learning new thing, doesn't it?&lt;br&gt;
In 2021 I enhanced my open-source journey a bit. Although I entered into the world of open-source in 2020, but it was only in 2021 that I understood the true meaning of open-source and open-culture.&lt;br&gt;
I took part in different open-source programs as a volunteer, participant, and mentor. It started with &lt;a href="https://gssoc.girlscript.tech/"&gt;Girl Script Summer of Code&lt;/a&gt;. I learnt a lot more than the basic git commands here and met new people. I was able to secure a rank of 83 among 6500+ participants from across the globe. After that I was selected as a mentor for DevIncept DCP 2021 and a fellow for Script Winter of Code. I took up the role of mentor in &lt;a href="https://dcp.devincept.com/"&gt;DevIncept DCP 2021&lt;/a&gt; and helped a lot of participants to make their first contribution to open-source. It felt great to be able to help newcomers and retain their faith in themselves that they are no less and once after getting started, they can do wonders!&lt;br&gt;
I was also a part of the Open Source Day by AnitaB.org, where I made contributions to projects like Ceph and Material-UI.&lt;/p&gt;

&lt;p&gt;Later this year, I got the chance to be a part of the SUSE Cloud Native Foundations Program by &lt;a href="https://www.udacity.com/"&gt;Udacity&lt;/a&gt;. &lt;br&gt;
I was one among the 15000 scholars selected globally to enter the SUSE Cloud Native Foundations Course workspace.&lt;br&gt;
It was the most special part of the year. I met so many new people, learnt a lot, made new friends and what not.&lt;br&gt;
The scholarship challenge was fun, and it indeed taught me a lot. From time-management, to cloud native fundamentals. I even got into top 5 student stories around the world which was really unexpected. &lt;br&gt;
Here we organized webinars, sessions, made study groups to accomplish our goals, encouraged and helped each other. My favorite part was organizing events, because it helped me clear my understanding on the topics even more, and eventually helped people who were stuck in that particular topic. The love and support that I received from this program and the events that we conducted was really encouraging.&lt;/p&gt;

&lt;p&gt;One of my goals which I was able to complete in 2021 was to speak at events. I was invited to speak at several events including the Powershell, DevOps and Cloud Conference 2021, Docker Community All Hands #4, etc. More of myself in this area will be seen in 2022. 😇&lt;/p&gt;

&lt;p&gt;Another thing about which I am happy was Hacktoberfest 2021. &lt;br&gt;
I felt beyond happy that one year ago, I was zero on git and github. I was unable to make a simple Pull Request. But this year, I was searching for more meaningful contributions to make. I felt glad that I was able to expand my learnings even if it was by just a small percentage.&lt;br&gt;
I made contributions in repositories of organizations like Appwrite, Appsmith, Milvus, Mattermost, LoginRadius, etc. Some of my blogs can be found on &lt;a href="https://dev.to/noviicee"&gt;my Dev.to profile&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Apart from these, I enhanced my learnings in the Python Programming Language. I happened to talk to some experienced people in this field which helped my understand where I lack, and therefore I'll be working on those areas in 2022 :)&lt;br&gt;
Also, one should never forget about failures as they are a part of journey. I tried to expertise in a few more skills and areas, but have not been able to do it till now. Hopefully the new year helps me in completing my incomplete tasks from the previous year :)&lt;/p&gt;

&lt;p&gt;Further for 2022, I am planning to learn &amp;amp; share as much as I can with the community. I look forward to meet with more people and try to better myself. I am also planning to take out time to read and exercise, as I had been more on the lazier side in the previous year.&lt;/p&gt;

&lt;p&gt;Well these are my small wins for 2021. The year had surely been a lot more, but these, form a major part of Anamika's 2021.&lt;/p&gt;

&lt;p&gt;Hope that the New Year brings waves of happiness and joy to us. Happy New Year everyone! 🎉&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>career</category>
      <category>discuss</category>
      <category>writing</category>
    </item>
    <item>
      <title>What Is A DAO?</title>
      <author>Iustin Ghergu</author>
      <pubDate>Sun, 02 Jan 2022 17:58:47 +0000</pubDate>
      <link>https://dev.to/iusting20/what-is-a-dao-2mhd</link>
      <guid>https://dev.to/iusting20/what-is-a-dao-2mhd</guid>
      <description>&lt;p&gt;It is a corporation that is run entirely by a set of rules upon which operations are delegated among a variety of computers and network nodes. DAOs can even be run by a Machine Learning agent, that constantly evolves and improves its algorithms and therefore its decisions. The DAO (Decentralised Autonomous Organisation) aims at providing a decentralized business model for organizing both commercial and non-profit enterprises.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;“it takes the concept of traditional organizations and decentralizes it”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The idea of a decentralized organization takes the concept of traditional organizations and decentralizes it. So, instead of a hierarchical structure managed by a collective of humans interacting in person and controlling property via the legal system, a decentralized organization involves a set of people interacting with each other according to a protocol specified in code and enforced on the blockchain network.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;“a paradigm shift in the very idea of economic organization. ”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In May 2016, TechCrunch described The DAO as “a paradigm shift in the very idea of economic organization. … It offers complete transparency, total shareholder control, unprecedented flexibility, and autonomous governance.”&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-new-era-of-business"&gt;
  &lt;/a&gt;
  The New Era Of Business
&lt;/h2&gt;

&lt;p&gt;Governance is the way rules, norms and actions of how people interact with each other are structured, sustained, regulated and held accountable. It regulates the process of decision-making among the actors involved in a collective problem that leads to the creation, reinforcement, or reproduction of social norms and institutions.&lt;/p&gt;

&lt;p&gt;The degree of formality depends on the internal rules of a given organization and, externally, with its business partners. As such, governance may take many forms, driven by many different motivations and with many different results.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WRf00Oi---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/647b4rpfoufbs2xalat6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WRf00Oi---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/647b4rpfoufbs2xalat6.png" alt="Image description" width="800" height="978"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#effects-on-society"&gt;
  &lt;/a&gt;
  Effects On Society
&lt;/h2&gt;

&lt;p&gt;They are pretty much here, at the intersection of Crypto, AI, and the Internet of Things. These Decentralized Autonomous Organizations (DAOs) should have a brain of software, the ability to select actions according to preference functions, and some way to instantiate in the world.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;“a digital entity may have a strand by which to reach into our world”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The physical world is becoming more digital. Machine vision translates our reality into data that neural networks can recognize, classify and use in order to direct actions.&lt;/p&gt;

&lt;p&gt;Similarly, augmented reality layers are being drawn on top of the built environment by the large tech companies. With such mappings, a digital entity may have a strand by which to reach into our world and practice interacting with objects.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Tmh9cFvG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8jio4722yvnonaaheh8u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Tmh9cFvG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8jio4722yvnonaaheh8u.png" alt="Image description" width="800" height="433"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#machines-and-their-human-role-models"&gt;
  &lt;/a&gt;
  Machines And Their Human Role Models
&lt;/h2&gt;

&lt;p&gt;On a fundamental level, with all of this technology it is important to keep humanity at the center of the conversation about work. Being augmented by machines doesn’t mean removing humans from the equation. There is an opportunity to distribute value and ownership, based on worker contributions.&lt;/p&gt;

&lt;p&gt;This type of decentralized organization can not only create a distributed network of contributors, but also long-term shared value, whereby individuals are part of the value equation as the future of work shifts and changes.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;“they present an opportunity to harness unprecedented levels of creativity”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As DAOs and blockchain technology gain more traction and use cases within larger organizations, they present an opportunity to harness unprecedented levels of creativity, innovation, and collective intelligence in solving some of the world’s biggest problems. Instead of technology being a threat to the future of work, it may open up a brave new decentralized world.&lt;/p&gt;

&lt;p&gt;Most scary scenarios for the future of work assume a traditional, hierarchical organizational structure. There is a CEO and a leadership team on the top, then middle management, then a busy workforce doing various tasks. AI and robots slowly automate jobs, replacing people in their individual roles.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-future"&gt;
  &lt;/a&gt;
  The Future
&lt;/h2&gt;

&lt;p&gt;There is a lot of talk about the threat of automation. AI and robots are coming to take our jobs. Corporations and the government are taking control of our lives. This creates a scarcity mindset of “us versus them,” leading us to ask, How am I going to protect myself? Will I be one of the few people left when machines take over?&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;“unleash new levels of creativity and ingenuity”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Rather than adopting a fearful mindset toward the unavoidable shift in society, people could start looking at advantages of these technological tools:&lt;/p&gt;

&lt;p&gt;What if instead of technology replacing humans, it augmented our abilities to unleash new levels of creativity and ingenuity?&lt;br&gt;
• What if we could collectively make decisions and govern organizations without leaders?&lt;/p&gt;

&lt;p&gt;• What if we could solve problems and increase productivity at scales never imagined?&lt;/p&gt;

&lt;p&gt;This is the potential power and promise of DAOs — decentralized autonomous organizations.&lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>career</category>
      <category>machinelearning</category>
      <category>decentralisation</category>
    </item>
    <item>
      <title>Solved: Module not found: Error: Can't resolve 'sass-loader'</title>
      <author>Peace</author>
      <pubDate>Sun, 02 Jan 2022 17:44:23 +0000</pubDate>
      <link>https://dev.to/cyebukayire/solved-module-not-found-error-cant-resolve-sass-loader-50l7</link>
      <guid>https://dev.to/cyebukayire/solved-module-not-found-error-cant-resolve-sass-loader-50l7</guid>
      <description>&lt;p&gt;I have been struggling with this problem a few minutes ago when I was trying to install node-sass and sass-loader in my Vuejs project.&lt;br&gt;
I used this command :&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;npm i --save-dev node-sass sass-loader&lt;br&gt;
Output: &lt;br&gt;
&lt;code&gt;Could not resolve dependency: npm ERR! dev sass-loader@"*" from the root project npm ERR!&lt;/code&gt;&lt;br&gt;
With some sort of:&lt;br&gt;
&lt;/p&gt;


&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm ERR! code ERESOLVE
npm ERR! ERESOLVE could not resolve
npm ERR! 
npm ERR! While resolving: twotter@0.1.0
npm ERR! Found: webpack@4.46.0
npm ERR! node_modules/webpack
npm ERR!   peer webpack@"^4.0.0" from @intervolga/optimize-cssnano-plugin@1.0.6
npm ERR!   node_modules/@intervolga/optimize-cssnano-plugin
npm ERR!     @intervolga/optimize-cssnano-plugin@"^1.0.5" from @vue/cli-service@4.5.15
npm ERR!     node_modules/@vue/cli-service
npm ERR!       peer @vue/cli-service@"^3.0.0 || ^4.0.0-0" from @vue/cli-plugin-babel@4.5.15
npm ERR!       node_modules/@vue/cli-plugin-babel
npm ERR!         dev @vue/cli-plugin-babel@"~4.5.0" from the root project
npm ERR!       4 more (@vue/cli-plugin-eslint, @vue/cli-plugin-router, ...)
npm ERR!   peer webpack@"^4.0.0 || ^5.0.0" from @soda/friendly-errors-webpack-plugin@1.8.1
npm ERR!   node_modules/@soda/friendly-errors-webpack-plugin
npm ERR!     @soda/friendly-errors-webpack-plugin@"^1.7.1" from @vue/cli-service@4.5.15
npm ERR!     node_modules/@vue/cli-service
npm ERR!       peer @vue/cli-service@"^3.0.0 || ^4.0.0-0" from @vue/cli-plugin-babel@4.5.15
npm ERR!       node_modules/@vue/cli-plugin-babel
npm ERR!         dev @vue/cli-plugin-babel@"~4.5.0" from the root project
npm ERR!       4 more (@vue/cli-plugin-eslint, @vue/cli-plugin-router, ...)
npm ERR!   19 more (@vue/cli-plugin-babel, @vue/cli-plugin-eslint, ...)
npm ERR!
npm ERR! Could not resolve dependency:
npm ERR! dev sass-loader@"*" from the root project
npm ERR!
npm ERR! Conflicting peer dependency: webpack@5.65.0
npm ERR!   peer webpack@"^5.0.0" from sass-loader@12.4.0
npm ERR!   node_modules/sass-loader
npm ERR!     dev sass-loader@"*" from the root project
npm ERR!
npm ERR! Fix the upstream dependency conflict, or retry
npm ERR! this command with --force, or --legacy-peer-deps
npm ERR! to accept an incorrect (and potentially broken) dependency resolution.
npm ERR!
npm ERR! See C:\Users\user\AppData\Local\npm-cache\eresolve-report.txt for a full report.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So, I thought this was some dependency conflicts and there is actually a note about this &lt;a href="https://cli.vuejs.org/guide/css.html#pre-processors"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is how I solved the issue:&lt;br&gt;
&lt;code&gt;npm install -D sass-loader@^10 sass&lt;/code&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>vue</category>
      <category>sass</category>
      <category>scss</category>
    </item>
    <item>
      <title>Modern Software Engineering [Book Notes] </title>
      <author>Jorge Tovar</author>
      <pubDate>Sun, 02 Jan 2022 17:29:01 +0000</pubDate>
      <link>https://dev.to/jorgetovar621/modern-software-engineering-book-notes-5fdn</link>
      <guid>https://dev.to/jorgetovar621/modern-software-engineering-book-notes-5fdn</guid>
      <description>&lt;h2&gt;
  &lt;a href="#notes"&gt;
  &lt;/a&gt;
  Notes
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#whats-software-engineering"&gt;
  &lt;/a&gt;
  What's Software Engineering
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt;: A scientific approach to creating Software. Full of information on how to master learning and handle complexity in our field. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.amazon.com/Modern-Software-Engineering-Discipline-Development/dp/0137314914"&gt;Modern Software Engineering Book&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Software Engineering applies a scientific approach to finding solutions to problems.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Engineering is stuff that works! &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Software development is the process of discovering and learning, &lt;strong&gt;so we need to become experts at learning and handling complexity&lt;/strong&gt;. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Software Engineering practices must allow us to build software faster and better. If not , it is just a waste of time. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Software is not a Production problem (physical things with a high cost of replication). Then we need to use different tools for the job such as testability, experiments, continuous delivery&lt;/strong&gt; remember that our real focus is learning and discovery.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Our Aim as software engineers is to create systems with high Stability and High Throughput (Measuring Performance)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Stability&lt;/strong&gt; = Change Failure Rate + Recover Failure Time&lt;br&gt;
&lt;strong&gt;High Throughput&lt;/strong&gt; = Lead time + Frequency of Deployment &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#optimize-for-learning"&gt;
  &lt;/a&gt;
  Optimize for Learning
&lt;/h3&gt;

&lt;p&gt;Learning is a fundamental factor in our job as professionals, also key in the discovery process of our systems.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Iterative&lt;/li&gt;
&lt;li&gt;Incremental &lt;/li&gt;
&lt;li&gt;Empiricism&lt;/li&gt;
&lt;li&gt;Feedback &lt;/li&gt;
&lt;li&gt;Experimental&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The main idea is to focus on small steps gathering feedback and adjust. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Work in a way that allows us to make mistakes &lt;/li&gt;
&lt;li&gt;Explore the problem and make experiments controlling the variables &lt;/li&gt;
&lt;li&gt;We need to learn from previous experiences &lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#optimize-for-handling-complexity"&gt;
  &lt;/a&gt;
  Optimize for handling complexity
&lt;/h2&gt;

&lt;p&gt;Edsger Dijkstra said &lt;br&gt;
&lt;em&gt;The art of programming is the art of handling complexity&lt;/em&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Cohesion&lt;/li&gt;
&lt;li&gt;Coupling &lt;/li&gt;
&lt;li&gt;Separation of concerns &lt;/li&gt;
&lt;li&gt;Modularity &lt;/li&gt;
&lt;li&gt;Information hiding and abstraction &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The main idea is focus, keep things simple. &lt;br&gt;
Remember that &lt;code&gt;Simple != Easy&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tools-to-support-engineering-in-software"&gt;
  &lt;/a&gt;
  Tools to support engineering in Software
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Testability&lt;/li&gt;
&lt;li&gt;Deployability&lt;/li&gt;
&lt;li&gt;Controlling the variables &lt;/li&gt;
&lt;li&gt;Continuous delivery&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;One of the main takeaways for me in this chapter was tackling problems from:&lt;br&gt;
&lt;em&gt;Business Vision, Goals &amp;gt; Technical Architecture &amp;gt; Process &amp;gt; Organizational Structure&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;instead of&lt;br&gt;&lt;br&gt;
&lt;em&gt;Organization Structure&amp;gt;  Business Vision, Goals &amp;gt; Technical Architecture &amp;gt; Processes&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;: this book provides valuable insights about Software Engineering and the practices that allow us to work on a Scientific approach. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtube.com/c/ContinuousDelivery"&gt;Dave Farley Youtube&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/davefarley77?t=GwVNXdtcO3Ut1e1WV_jkhg&amp;amp;s=09"&gt;Dave Farley Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>java</category>
      <category>design</category>
      <category>jvm</category>
      <category>architecture</category>
    </item>
    <item>
      <title>How to create dictionary with two lists in Python</title>
      <author>Afiz</author>
      <pubDate>Sun, 02 Jan 2022 17:19:44 +0000</pubDate>
      <link>https://dev.to/afizs/how-to-create-dictionary-with-two-lists-in-python-5cla</link>
      <guid>https://dev.to/afizs/how-to-create-dictionary-with-two-lists-in-python-5cla</guid>
      <description>&lt;p&gt;In this post, we will discuss how to create a new dictionary out of two lists. &lt;br&gt;
First let's see the input and expected output and then the actual source code of the problem.&lt;/p&gt;

&lt;p&gt;input:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;keys&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'age'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'contact'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;values&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'Afiz'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'9090909090'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;expected output:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{'name': 'Afiz', 'age': 30, 'contact': '9090909090'}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There are multiple ways to solve this problem. &lt;/p&gt;

&lt;p&gt;Method 1: First let's see the simple way using &lt;code&gt;for&lt;/code&gt; loop in Python.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;my_dictionary = {}

for i in range(len(keys)):
    my_dictionary[keys[i]] = values[i]

print(my_dictionary)

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This solution is okay but not great. Let's check out another method which more pythonic way of doing it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;print(dict(zip(keys, values)))
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Surprised !! 😮 😯 😲  yes it is one line. Tell me which method you like in the comment section. And finally if you want the explanation of these solutions please checkout my YouTube Channel: &lt;a href="https://youtu.be/PFsP2U4_GH0"&gt;https://youtu.be/PFsP2U4_GH0&lt;/a&gt; &lt;/p&gt;

</description>
      <category>python</category>
      <category>beginners</category>
      <category>datascience</category>
    </item>
    <item>
      <title>How to reverse a list in python? </title>
      <author>Afiz</author>
      <pubDate>Sun, 02 Jan 2022 17:11:12 +0000</pubDate>
      <link>https://dev.to/afizs/how-to-reverse-a-list-in-python-398d</link>
      <guid>https://dev.to/afizs/how-to-reverse-a-list-in-python-398d</guid>
      <description>&lt;p&gt;How do you reverse a list in Python? &lt;/p&gt;

&lt;p&gt;There are 2 good ways to reverse a list. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Slicing &lt;/li&gt;
&lt;li&gt;reverse method&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#1-slicing-generates-new-list-and-original-list-wont-be-updated"&gt;
  &lt;/a&gt;
  1. Slicing: Generates new list and original list won't be updated.
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;In [1]: chars = list('abdbbef')

In [2]: chars[::-1]
Out[2]: ['f', 'e', 'b', 'b', 'd', 'b', 'a']
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#2-reverse-method-raw-reverse-endraw-method-modifies-the-original-list"&gt;
  &lt;/a&gt;
  2. Reverse method: &lt;code&gt;reverse&lt;/code&gt; method modifies the original list.
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;In [3]: chars.reverse()

In [4]: chars
Out[4]: ['f', 'e', 'b', 'b', 'd', 'b', 'a']
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Which method do you prefer? Share your views in the comments. &lt;/p&gt;

</description>
      <category>python</category>
      <category>programming</category>
    </item>
    <item>
      <title>api.peviitor.ro; scraper[2]</title>
      <author>Boga Sebastian Nicolae</author>
      <pubDate>Sun, 02 Jan 2022 17:07:08 +0000</pubDate>
      <link>https://dev.to/sebiboga/apipeviitorro-scraper2-4nj1</link>
      <guid>https://dev.to/sebiboga/apipeviitorro-scraper2-4nj1</guid>
      <description>&lt;p&gt;Odata inregistrati in &lt;code&gt;dev.peviitor.ro&lt;/code&gt;, avem acces la API.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xbviLBYn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/65y8zdfia4jwqb6xl93m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xbviLBYn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/65y8zdfia4jwqb6xl93m.png" alt="API" width="880" height="565"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#ce-este-un-api"&gt;
  &lt;/a&gt;
  Ce este un API?
&lt;/h4&gt;

&lt;p&gt;Prin intermediul API-ului pus la dispozitie, ai acces la informatia din index. &lt;br&gt;
API-ul este definit prin cateva end-pointuri. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hLMkMu2F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gjszlatcge6xvpqrvhu6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hLMkMu2F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gjszlatcge6xvpqrvhu6.png" alt="API image" width="880" height="480"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pentru scraper doua endpointuri devin extrem de importante:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Endpointul care sterge locurile de munca ale unei companii: &lt;br&gt;
&lt;a href="https://api.peviitor.ro/#/search%20engine/post_v1_clean_"&gt;CLEAN&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Endpointul care adauga un loc de munca sau mai multe locuri de munca pentru o companie:&lt;br&gt;
&lt;a href="https://api.peviitor.ro/#/search%20engine/post_v1_update_"&gt;UPDATE&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Prin endpointul de UPDATE se pot trimite mai multe locuri de munca folosind un ARRAY de JSON.&lt;/p&gt;

&lt;p&gt;In versiunea 1 al API-ului avem acces la date fara cheia API, dar din versiunea 3, cheia devine obligatorie.&lt;/p&gt;

&lt;p&gt;Puteti consulta API-ul versiunea 1 la adresa: &lt;a href="https://api.peviitor.ro/"&gt;https://api.peviitor.ro/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;API-ul este prezentat prin intermediul SwaggerUI&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5hiynFbJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/skde2dztglptewgoosv2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5hiynFbJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/skde2dztglptewgoosv2.png" alt="swagger_logo" width="419" height="120"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>api</category>
      <category>peviitor</category>
      <category>job</category>
      <category>locuridemunca</category>
    </item>
    <item>
      <title>Running Kedro on Ubuntu 21.10 Impish Indri</title>
      <author>Waylon Walker</author>
      <pubDate>Sun, 02 Jan 2022 16:39:56 +0000</pubDate>
      <link>https://dev.to/waylonwalker/running-kedro-on-ubuntu-2110-impish-indri-1dg2</link>
      <guid>https://dev.to/waylonwalker/running-kedro-on-ubuntu-2110-impish-indri-1dg2</guid>
      <description>&lt;p&gt;I just installed a brand new Ubuntu 21.10 Impish Indri, and wanted a kedro project to play with so I did what any good kedroid would do, I went to my command line and ran&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pipx run kedro new --starter spaceflights
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But what I got back was not what I expected!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;Fatal error from pip prevented installation. Full pip output &lt;span class="k"&gt;in &lt;/span&gt;file:
    /home/walkers/.local/pipx/logs/cmd_2022-01-01_20.42.16_pip_errors.log

Some possibly relevant errors from pip &lt;span class="nb"&gt;install&lt;/span&gt;:
    ERROR: Could not find a version that satisfies the requirement kedro &lt;span class="o"&gt;(&lt;/span&gt;from versions: none&lt;span class="o"&gt;)&lt;/span&gt;
    ERROR: No matching distribution found &lt;span class="k"&gt;for &lt;/span&gt;kedro
Error installing kedro.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is weird, why cant I run kedro new with pipx?  Lets try pip.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;pip &lt;span class="nb"&gt;install &lt;/span&gt;kedro
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Same issue.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;ERROR: Could not find a version that satisfies the requirement kedro &lt;span class="o"&gt;(&lt;/span&gt;from versions: none&lt;span class="o"&gt;)&lt;/span&gt; 
ERROR: No matching distribution found &lt;span class="k"&gt;for &lt;/span&gt;kedro
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;br&gt;
      &lt;a href="https://waylonwalker.com/what-is-kedro/"&gt;&lt;br&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SSzH6VtF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.waylonwalker.com/what-is-kedro-og_250x140.png" alt="article cover for &amp;lt;br&amp;gt;
 What is Kedro&amp;lt;br&amp;gt;
" width="250" height="140"&gt;&lt;br&gt;
      &lt;/a&gt;&lt;br&gt;
  

&lt;blockquote&gt;
&lt;p&gt;Curious what kedro is?  Check out &lt;a href="https://waylonwalker.com/what-is-kedro/"&gt;this article&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;
  &lt;a href="#whats-up"&gt;
  &lt;/a&gt;
  What's up..
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;wrong python version&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The issue is that kedro only runs on up to &lt;code&gt;python 3.8&lt;/code&gt;, and on Ubuntu&lt;br&gt;
21.10 when you &lt;code&gt;apt install python3&lt;/code&gt; you get &lt;code&gt;python 3.9&lt;/code&gt; and the&lt;br&gt;
standard repos don't have an old enough version to run kedro.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#how-to-fix-this"&gt;
  &lt;/a&gt;
  How to fix this?
&lt;/h2&gt;

&lt;p&gt;Theres a couple of ways you can fix this?  They all involve installing a distribution that does not come from the standard repo.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#where-can-i-get-the-right-version"&gt;
  &lt;/a&gt;
  Where Can I get the right version
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Anaconda&lt;/li&gt;
&lt;li&gt;Python.org&lt;/li&gt;
&lt;li&gt;deadsnakes&lt;/li&gt;
&lt;li&gt;pyenv&lt;/li&gt;
&lt;li&gt;miniconda&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#i-have-two-articles-that-can-help-you"&gt;
  &lt;/a&gt;
  I have two articles that can help you
&lt;/h2&gt;


&lt;br&gt;
      &lt;a href="https://waylonwalker.com/install-miniconda/"&gt;&lt;br&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bSxD58im--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.waylonwalker.com/install-miniconda-og_250x140.png" alt="article cover for &amp;lt;br&amp;gt;
 How to Install miniconda on linux (from the command line only)&amp;lt;br&amp;gt;
" width="250" height="140"&gt;&lt;br&gt;
      &lt;/a&gt;&lt;br&gt;
  

&lt;blockquote&gt;
&lt;p&gt;Check out this article on &lt;a href="https://waylonwalker.com/what-is-kedro/"&gt;installing miniconda&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Using miniconda we can make a new conda environment that uses python == 3.8.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;conda create &lt;span class="nt"&gt;-n&lt;/span&gt; myenv &lt;span class="nv"&gt;python&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;3.8
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;br&gt;
      &lt;a href="https://waylonwalker.com/til/pyenv-first-impressions/"&gt;&lt;br&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kePyEnMW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.waylonwalker.com/til/pyenv-first-impressions-og_250x140.png" alt="article cover for &amp;lt;br&amp;gt;
 My first impressions with pyenv&amp;lt;br&amp;gt;
" width="250" height="140"&gt;&lt;br&gt;
      &lt;/a&gt;&lt;br&gt;
  

&lt;p&gt;Check out this post on my first &lt;a href="https://waylonwalker.com/til/pyenv-first-impressions/"&gt;impressions with pyenv&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Using pyenv we can install python == 3.8 to use to create a virtual environment.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;pyenv &lt;span class="nb"&gt;install &lt;/span&gt;3.8.12
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>kedro</category>
      <category>python</category>
      <category>datascience</category>
    </item>
  </channel>
</rss>
