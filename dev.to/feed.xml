<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>🎬Login Form Validation | HTML CSS &amp; Javascript🙌</title>
      <author>Robson Muniz</author>
      <pubDate>Thu, 13 Jan 2022 13:28:00 +0000</pubDate>
      <link>https://dev.to/robsonmuniz16/login-form-validation-html-css-javascript-5alk</link>
      <guid>https://dev.to/robsonmuniz16/login-form-validation-html-css-javascript-5alk</guid>
      <description>&lt;p&gt;Lets Create a Login Form Validation | HTML CSS &amp;amp; Javascript, Step-by-Step in a Very Easy to Follow Along Tutorial.&lt;/p&gt;




&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/svGQe889mmo"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#source-code"&gt;
  &lt;/a&gt;
  Source Code:
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;HTML&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;http-equiv=&lt;/span&gt;&lt;span class="s"&gt;"X-UA-Compatible"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"IE=edge"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1.0"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Login Form Validation&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"style.css"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css"&lt;/span&gt;
    &lt;span class="na"&gt;integrity=&lt;/span&gt;&lt;span class="s"&gt;"sha512-Fo3rlrZj/k7ujTnHg4CGR2D7kSs0v4LLanw2qksYuRlEzO+tcaEPQogQ0KaoGN26/zrn20ImR1DfuLWnOo7aBA=="&lt;/span&gt;
    &lt;span class="na"&gt;crossorigin=&lt;/span&gt;&lt;span class="s"&gt;"anonymous"&lt;/span&gt; &lt;span class="na"&gt;referrerpolicy=&lt;/span&gt;&lt;span class="s"&gt;"no-referrer"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"wrapper"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;form&lt;/span&gt; &lt;span class="na"&gt;action=&lt;/span&gt;&lt;span class="s"&gt;"#"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"box"&lt;/span&gt; &lt;span class="na"&gt;method=&lt;/span&gt;&lt;span class="s"&gt;"post"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Login&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
      &lt;span class="c"&gt;&amp;lt;!-- User Input --&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"username"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"Enter Username"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"username"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;i&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"far fa-envelope"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/i&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

      &lt;span class="c"&gt;&amp;lt;!-- Password Input --&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"password"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"password"&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"Enter Password"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"password"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;i&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"fas fa-lock-open"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/i&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

      &lt;span class="c"&gt;&amp;lt;!-- Button --&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"btn"&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"submit"&lt;/span&gt; &lt;span class="na"&gt;onclick=&lt;/span&gt;&lt;span class="s"&gt;"validate()"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Login&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"app.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>html</category>
      <category>css</category>
      <category>beginners</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Next.JS + MUI v5 + TypeScript + Scss + Storybook Starter 📕</title>
      <author>Muhammad Ridho Anshory</author>
      <pubDate>Thu, 13 Jan 2022 13:26:29 +0000</pubDate>
      <link>https://dev.to/ridhoanshory/nextjs-mui-v5-typescript-scss-storybook-starter-4370</link>
      <guid>https://dev.to/ridhoanshory/nextjs-mui-v5-typescript-scss-storybook-starter-4370</guid>
      <description>&lt;p&gt;Lately, I was building a Next.js, MUI v5, TypeScript, Scss and Storybook for projects. I wanted to have a modern starter repository to speed up my development. A new boiler plate for Next.js with type checking (TypeScript), configured linter (ESlint), configured code formatter (Prettier), Sass / Scss for CSS framework with Material UI v5 theming, also Storybook to build streamlines UI development, testing, and documentation.&lt;/p&gt;

&lt;p&gt;You can check a live demo at this url : &lt;a href="https://nextjs-ts-mui5-scss-storybook-starter.vercel.app/"&gt;click me!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can also check the source code 📕 on GitHub: &lt;a href="https://github.com/RidhoAnshory/nextjs-ts-mui5-scss-storybook-starter"&gt;nextjs-ts-mui5-scss-storybook-starter&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here is the list of major feature:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;✍️ code snippet for react and next.js that I personally use&lt;/li&gt;
&lt;li&gt;🎨 pre-configured Sass, MUI v5, and Storybook. You just need to focus on building your components&lt;/li&gt;
&lt;li&gt;⌨️ Type checking with TypeScript&lt;/li&gt;
&lt;li&gt;✏️ Linter with Eslint and Prettier also simple-import&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please leave a star ⭐ or some comment if there's a issue! Thanks ✌️&lt;/p&gt;

</description>
      <category>typescript</category>
      <category>nextjs</category>
      <category>javascript</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Creating Custom Module in Angular</title>
      <author>Anubhab Mukherjee</author>
      <pubDate>Thu, 13 Jan 2022 13:11:30 +0000</pubDate>
      <link>https://dev.to/this-is-angular/creating-custom-module-in-angular-4p66</link>
      <guid>https://dev.to/this-is-angular/creating-custom-module-in-angular-4p66</guid>
      <description>&lt;p&gt;Today we will learn how to create our own Angular Module. If you are not aware of Angular Modules I would recommend you to go through this &lt;a href="https://dev.to/this-is-angular/understanding-angular-modules-41pb"&gt;post&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;In order to create a module we will be using the below CLI command &lt;br&gt;
&lt;code&gt;ng generate module &amp;lt;module_name&amp;gt;&lt;/code&gt;&lt;br&gt;
or the shorthand&lt;br&gt;
&lt;code&gt;ng g m &amp;lt;module_name&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Lets open a command prompt from the project root and type in the below code -&lt;br&gt;
&lt;code&gt;ng g m payroll&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;In the command prompt you will see like below -&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LYlcjG-B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oobmrhdu34gri8bk3jiu.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LYlcjG-B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oobmrhdu34gri8bk3jiu.PNG" alt="Image description" width="645" height="54"&gt;&lt;/a&gt;&lt;br&gt;
Lets see how the project looks like -&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y4iGrLPa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/58b2jzo1fzoqofvne2ln.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y4iGrLPa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/58b2jzo1fzoqofvne2ln.PNG" alt="Image description" width="418" height="209"&gt;&lt;/a&gt;&lt;br&gt;
So here we can see a folder with the module name has been created and a file called &lt;code&gt;payroll.module.ts&lt;/code&gt; file has been created.&lt;/p&gt;

&lt;p&gt;Lets open the file and see -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';

@NgModule({
  declarations: [],
  imports: [
    CommonModule
  ]
})
export class PayrollModule { }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here in the above code we can see the similar structure as we saw in the module provided by Angular the &lt;code&gt;app.module.ts&lt;/code&gt; file.&lt;br&gt;
One more thing you have noticed the declaration array is empty as we dont have any component/ pipe/ directive associated with this module yet. If we want to put any of the component/ pipe/ directive inside this directive we need to add in this list.&lt;/p&gt;

&lt;p&gt;Lets see how to do that. For that lets open the prompt again (from the project root folder) and type in the CLI command to create a &lt;a href="https://dev.to/anubhab5/creating-angular-component-129e"&gt;component&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Lets run the below command: &lt;code&gt;ng g c PayrollDashboard&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;But wait ✋🏻, you might ask a question if I run the above command in which module my component will get added???&lt;br&gt;
In the above case still the new component will be added to the &lt;code&gt;app.module&lt;/code&gt;. &lt;br&gt;
To specify the module also we need to add some extra flag to the above 👆🏻 CLI command.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ng g component PayrollDashboard &lt;br&gt;
--module=payroll/payroll.module.ts&lt;/code&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YDt1EBeO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7jn8ob8keh4b2w8qpf28.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YDt1EBeO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7jn8ob8keh4b2w8qpf28.PNG" alt="Image description" width="880" height="123"&gt;&lt;/a&gt;&lt;br&gt;
Here you can see that the very similar output we saw earlier when creating &lt;a href="https://dev.to/anubhab5/creating-angular-component-129e"&gt;custom component&lt;/a&gt;, But one minor difference is there the last line where you can see the &lt;strong&gt;UPDATE&lt;/strong&gt; has happened to the &lt;br&gt;
&lt;code&gt;payroll.module.ts&lt;/code&gt; file and &lt;strong&gt;not&lt;/strong&gt; app.module.ts&lt;/p&gt;

&lt;p&gt;Now if you open the payroll.module.ts file you will see that the declarations array has been added with the newly created component.&lt;br&gt;
But still you might not be so happy as the component has been created outside the payroll folder (marked with yellow arrow)-&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1HOly2Al--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0rqh6b7w4pdwpuh55bwi.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1HOly2Al--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0rqh6b7w4pdwpuh55bwi.PNG" alt="Image description" width="418" height="256"&gt;&lt;/a&gt;&lt;br&gt;
If you see closely the payroll-dashboard was created outside the payroll folder. But I need all the payroll features under the payroll folder itself right?&lt;br&gt;
For that we need to do a minor tweak in the earlier CLI command used to create the component -&lt;br&gt;
&lt;code&gt;ng g component payroll/PayrollDashboard --module=payroll/payroll.module.ts&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you see we just added the folder name before the Component name while creating the component. Cool right!!!&lt;/p&gt;

&lt;p&gt;So we added the Component. &lt;br&gt;
But how to use? &lt;br&gt;
Is it the same thing like earlier?&lt;br&gt;&lt;br&gt;
Take the component selector and add it in &lt;code&gt;app.component.html&lt;/code&gt; file like below?&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OTlog82G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mcgl7yf7co9r5ka34inr.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OTlog82G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mcgl7yf7co9r5ka34inr.PNG" alt="Image description" width="880" height="173"&gt;&lt;/a&gt;&lt;br&gt;
The answer is NO!!!&lt;br&gt;
2 more steps (I say VERY IMPORTANT steps you need to take care of)&lt;/p&gt;

&lt;p&gt;1️⃣ Since the payroll.component is part of a separate module (payroll module) you need to &lt;strong&gt;import&lt;/strong&gt; the payroll module in the module where you will be using (app.module). &lt;br&gt;
In this case we will be using the payroll.component (present in payroll module) inside &lt;code&gt;app.component.html&lt;/code&gt; file, which is present inside the &lt;code&gt;app.module.ts&lt;/code&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YZyiU39F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ajd64ftfvbju8955frvb.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YZyiU39F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ajd64ftfvbju8955frvb.PNG" alt="Image description" width="844" height="753"&gt;&lt;/a&gt;&lt;br&gt;
See how we added the newly created module? &lt;br&gt;
In the imports array we added the name of the payroll.module. We discussed &lt;a href="https://dev.to/this-is-angular/understanding-angular-modules-41pb"&gt;earlier&lt;/a&gt; right?&lt;/p&gt;

&lt;p&gt;2️⃣ Just adding the module is not enough. We need to add the component (we are using outside) in the exports array of the module where it has been declared.&lt;br&gt;
So in our case, we need to add the name of the component to the &lt;code&gt;exports&lt;/code&gt; array of the &lt;code&gt;payroll.module&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--auYIx8XJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1jpstotk7r49nma3hyln.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--auYIx8XJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1jpstotk7r49nma3hyln.PNG" alt="Image description" width="666" height="450"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's it...&lt;br&gt;
If you open the browser you must see the below output -&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--F0pmdxKi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4ax3i85ahfn6k4v3hsvu.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F0pmdxKi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4ax3i85ahfn6k4v3hsvu.PNG" alt="Image description" width="478" height="132"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hope you enjoyed the post.&lt;br&gt;
Coming up next the different types of modules we can have in Angular. Stay tuned!!!&lt;br&gt;
If you liked the post please do like share and comment.&lt;/p&gt;

&lt;p&gt;I will be &lt;a href="https://twitter.com/Anubhab_0905"&gt;tweeting&lt;/a&gt; more on &lt;code&gt;Angular&lt;/code&gt; &lt;code&gt;JavaScript&lt;/code&gt; &lt;code&gt;TypeScript&lt;/code&gt; &lt;code&gt;CSS&lt;/code&gt;&lt;br&gt;
So hope to see you there too 😃&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cheers&lt;/strong&gt;!!!&lt;br&gt;
&lt;em&gt;Happy Coding&lt;/em&gt;&lt;/p&gt;

</description>
      <category>angular</category>
      <category>beginners</category>
      <category>typescript</category>
      <category>modules</category>
    </item>
    <item>
      <title>30 Top Apps Made With Python</title>
      <author>Kateryna Pakhomova</author>
      <pubDate>Thu, 13 Jan 2022 12:21:07 +0000</pubDate>
      <link>https://dev.to/kateryna_pakhomova/30-top-apps-made-with-python-2ah4</link>
      <guid>https://dev.to/kateryna_pakhomova/30-top-apps-made-with-python-2ah4</guid>
      <description>&lt;p&gt;The original article was written by SoftFormance &lt;a href="https://www.softformance.com/blog/30-python-apps/"&gt;https://www.softformance.com/blog/30-python-apps/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I started as a newbie web developer in 2005. More than a decade has passed, and I’ve tried many different coding languages. &lt;/p&gt;

&lt;p&gt;We’ve used a few different web and mobile frameworks in our agency, but we never changed the primary programming language.&lt;/p&gt;

&lt;p&gt;We always used Python for the backend here at SoftFormance and didn’t regret it once. &lt;/p&gt;

&lt;p&gt;In this article, we demonstrated all the pros and cons of using Python for web applications development.&lt;/p&gt;

&lt;p&gt;And today, we’d like to continue exploring Python’s use in the real world.&lt;/p&gt;

&lt;p&gt;So, we prepared for you the most comprehensive list of web apps and popular software built with Python language.&lt;/p&gt;

&lt;p&gt;You’ll be surprised to learn how many modern businesses and organizations use Python as their go-to language. &lt;/p&gt;

&lt;p&gt;And we went an extra mile with our team and grouped these projects into a couple of buckets:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Big Five Companies&lt;/li&gt;
&lt;li&gt;Streaming services&lt;/li&gt;
&lt;li&gt;Software as a Service (SaaS)&lt;/li&gt;
&lt;li&gt;Web platforms&lt;/li&gt;
&lt;li&gt;Social media networks&lt;/li&gt;
&lt;li&gt;Game industry&lt;/li&gt;
&lt;li&gt;Science&lt;/li&gt;
&lt;li&gt;Graphics and Design
So enjoy!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Big Five Companies&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--J_ELWaQM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fh9k4118cbmxoefw2qxp.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J_ELWaQM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fh9k4118cbmxoefw2qxp.jpg" alt="Image description" width="880" height="570"&gt;&lt;/a&gt;&lt;br&gt;
Also known as Big Tech or Tech Giants. These are the companies everyone knows about (or at least recognize their logo), from a retired librarian to a child in a kindergarten.&lt;/p&gt;

&lt;p&gt;And three out of five use Python to build and run their systems.&lt;/p&gt;

&lt;p&gt;Google&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nYv6z2aZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kl0iiolnflcxxrgeuy0e.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nYv6z2aZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kl0iiolnflcxxrgeuy0e.jpg" alt="Image description" width="880" height="570"&gt;&lt;/a&gt;&lt;br&gt;
Google needs no introductions because it’s the most popular search engine in the world. Google has more than 75% of the market share. &lt;/p&gt;

&lt;p&gt;When choosing a programming language, the company’s engineers decided to use Python where they could and C++ where they must. &lt;/p&gt;

&lt;p&gt;Why? Because of Python’s readability and maintainability. It allows Google to carry out a variety of its projects successfully. &lt;/p&gt;

&lt;p&gt;Amazon&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2HUOc_Do--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6dnxsxpzblktud3sgj4b.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2HUOc_Do--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6dnxsxpzblktud3sgj4b.jpg" alt="Image description" width="880" height="570"&gt;&lt;/a&gt;&lt;br&gt;
This e-commerce, cloud computing, and entertainment giant also benefit from Python.&lt;/p&gt;

&lt;p&gt;The programming language is used for building the recommendation engine. The machine learning system written in Python works on a Hadoop database. Because Python scales so well, it is one of the best technologies for extensive data analysis.&lt;/p&gt;

&lt;p&gt;Facebook&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m3QuDqV8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t26r0huuhva2o7bzjb66.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m3QuDqV8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t26r0huuhva2o7bzjb66.jpg" alt="Image description" width="880" height="570"&gt;&lt;/a&gt;&lt;br&gt;
In 2021, Facebook had nearly 3 billion active users monthly. It’s hard even to imagine this number, but what about this: it’s as if all people from 6 Northern American continents used Facebook. Impressive, huh? &lt;/p&gt;

&lt;p&gt;The company is huge, as well as its tech stack. Facebook uses many programming languages and technologies, and Python is one of them. In particular, the company claims that Python was used to build about 21% of Facebook’s infrastructure’s codebase. &lt;/p&gt;

&lt;p&gt;What exactly is Python incorporated for? It allows Facebook users to upload pictures, posts and update statuses. So every time you post a new photo with your dog or update your audience about a recent career change, thank Facebook for that.&lt;/p&gt;

&lt;p&gt;Streaming services&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KgivDmQZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5ro2zlbnoliwmqr7evsn.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KgivDmQZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5ro2zlbnoliwmqr7evsn.jpg" alt="Image description" width="880" height="570"&gt;&lt;/a&gt;&lt;br&gt;
Streaming services were gaining popularity lately, but the outbreak of COVID-19 gave them a boost. Stuck in their homes, people had nothing better to do than binge-watch their favorite shows or listen to their favorite albums on repeat. &lt;/p&gt;

&lt;p&gt;And it turns out that the giants in the streaming services industry, Spotify and Netflix, also use Python. &lt;/p&gt;

&lt;p&gt;Spotify&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LMVosdAS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hq44tfr62if8qtd3o12h.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LMVosdAS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hq44tfr62if8qtd3o12h.jpg" alt="Image description" width="880" height="570"&gt;&lt;/a&gt;&lt;br&gt;
With Spotify, you can instantly access tons of tracks and albums with virtually no buffering delay. The platform was released in 2008 and has reached more than 75 million paid subscribers in less than two decades. &lt;/p&gt;

&lt;p&gt;Spotify’s website is built using WordPress, but the mobile app is built with Python. Also, Spotify’s engineers used it to code the app’s backend. Specifically, the app’s backend consists of many interdependent services connected by their messaging protocol. And around 80% of those services are written in Python. &lt;/p&gt;

&lt;p&gt;Netflix&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LOYVGsU9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yvd28xjp9be50esxyclc.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LOYVGsU9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yvd28xjp9be50esxyclc.jpg" alt="Image description" width="880" height="570"&gt;&lt;/a&gt;&lt;br&gt;
Netflix became the leading internet television network with a coverage of 40 countries and more than 33 million members. In total, the service is used for more than one billion hours of TV shows every month. That also includes Netflix’s own production. &lt;/p&gt;

&lt;p&gt;No doubt that Netflix developers have the best possible technology at their disposal. And most of them use Python because of its rich batteries-includes the standard library. Others also highlight Python’s clean and expressive syntax, extensive developer community, and abundance of third-party libraries used to solve different problems. &lt;/p&gt;

&lt;p&gt;Software as a Service&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bYjsSnlr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c4pum6z67o27raa1cwag.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bYjsSnlr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c4pum6z67o27raa1cwag.jpg" alt="Image description" width="880" height="570"&gt;&lt;/a&gt;&lt;br&gt;
A wide range of SaaS companies use Python, from small-scale to large-scale ones, and use its different features to their advantage. Most of the following companies chose Python due to its scalability feature, which allowed them to manage the rapid growth of their businesses. &lt;/p&gt;

&lt;p&gt;Dropbox&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i2by7nDk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iqij8ikqbotb6bymp3dy.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i2by7nDk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iqij8ikqbotb6bymp3dy.jpg" alt="Image description" width="880" height="570"&gt;&lt;/a&gt;&lt;br&gt;
I’ll bet my phone on the fact that you keep all your stuff, from photos and videos to files and docs on Dropbox. The company rapidly developed from 2000 users to 200 million, and Python ensured a smooth scaling. &lt;/p&gt;

&lt;p&gt;In fact, the company managed to hire the man who created Python, Guido van Rossum who worked at Google before. He transitioned to Dropbox and made sure they had the most efficient stack in the whole industry. &lt;/p&gt;

&lt;p&gt;Uber&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e3T-A4Zq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/70rq8eurwwikbuawe25p.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e3T-A4Zq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/70rq8eurwwikbuawe25p.jpg" alt="Image description" width="880" height="570"&gt;&lt;/a&gt;&lt;br&gt;
Every day people use Uber to get to places more than 15 million times. Uber’s developers use those languages: Python, Node.js, Go, and Java. &lt;/p&gt;

&lt;p&gt;The company started with two languages: Node.js for the Marketplace team, while Python was used for the rest of the company. These two languages still stay primary at the company today. &lt;/p&gt;

&lt;p&gt;Lyft&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SwZZA6yD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gp7dy38i5n5irt42e0g2.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SwZZA6yD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gp7dy38i5n5irt42e0g2.jpg" alt="Image description" width="880" height="570"&gt;&lt;/a&gt;&lt;br&gt;
Lyft is a rapidly-growing rideshare organization in the US, available in over 200 cities. People share more than 14 million rides per month through the company. And it is known that the company is a big fan of the Python language. For instance, they use SciPy to fight fraud or Salt for provision hosts. &lt;/p&gt;

&lt;p&gt;Instacart&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z9UhzlhT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8vcz87nen911tl4hdvcl.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z9UhzlhT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8vcz87nen911tl4hdvcl.jpg" alt="Image description" width="880" height="570"&gt;&lt;/a&gt;&lt;br&gt;
Instacart is a US company founded in 2012 specializing in grocery delivery and pick-up services. With more than 500,000 users and 2 million in revenue, it’s safe to say this is one of the biggest grocery delivery apps in the US. &lt;/p&gt;

&lt;p&gt;Instacart uses such Python libraries as Pandas and NumPy. In the case of demand forecasting, they have Python that does the estimates, reads all the data, comes up with how many shoppers they’re going to need for the next week or two, and then writes those values and estimates.  &lt;/p&gt;

&lt;p&gt;SurveyMonkey&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Zhg646TV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d2vkze9y68dtcwoktatn.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Zhg646TV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d2vkze9y68dtcwoktatn.jpg" alt="Image description" width="880" height="570"&gt;&lt;/a&gt;&lt;br&gt;
SurveyMonkey processes nearly 1 million survey responses every day. At first, it was written with C# but later rewritten in Python. The reason to turn to Python was its simplicity, wide range of libraries that allowed building a web app much faster. Additionally, it made it easier to work with deployment, set unit testing, and so on. Not talking about developers who preferred Python to other languages, which was crucial in recruiting new specialists. &lt;/p&gt;

&lt;p&gt;Bitly&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dKQ0x9Vs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lwxmmtainvdd0184zfte.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dKQ0x9Vs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lwxmmtainvdd0184zfte.jpg" alt="Image description" width="880" height="570"&gt;&lt;/a&gt;&lt;br&gt;
Bitly is a URL shortening company that was established in 2008. Based and held in New York City, the service shortens over 600 million links every month, for various purposes, from social networking to SMS and email mailing lists. &lt;/p&gt;

&lt;p&gt;Being the most used URL shortener globally, Bitly was created in the first place due to Python web development. Now, it uses Python for link management.&lt;/p&gt;

&lt;p&gt;Web platforms&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hvnjJ6cP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hr8lsxglmejnf79xhkd2.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hvnjJ6cP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hr8lsxglmejnf79xhkd2.jpg" alt="Image description" width="880" height="570"&gt;&lt;/a&gt;&lt;br&gt;
From well-established web platforms to new ones, you can find Python use in most of them. Python and its frameworks allow them to extend their functionality, test new features, and create new add-ons. &lt;/p&gt;

&lt;p&gt;IBM&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4wHYhobq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rwwb73gjy6znpalfqv8u.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4wHYhobq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rwwb73gjy6znpalfqv8u.jpg" alt="Image description" width="880" height="570"&gt;&lt;/a&gt;&lt;br&gt;
IBM used to be a tech powerhouse and remains in many ways still. The company had a crucial impact on the tech landscape for decades. So how is it related to Python? It is related in many ways. For example, you can deploy a Python web server on IBM Bluemix. Also, IBM even used to publish free Python tutorials. &lt;/p&gt;

&lt;p&gt;If IBM, the ultimate tech giant, uses Python, it means that you should consider it too. &lt;/p&gt;

&lt;p&gt;Mozilla&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Cz44kjzb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3wm18n977tjjuc6et9cl.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Cz44kjzb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3wm18n977tjjuc6et9cl.jpg" alt="Image description" width="880" height="570"&gt;&lt;/a&gt;&lt;br&gt;
Who doesn’t know Mozilla Firefox, right? Well, a lot of people don’t know that Python is related to the success of this browser. &lt;/p&gt;

&lt;p&gt;At first, developers built Mozilla Firefox on PHP+CakePHP. However, as the company developed, those languages couldn’t handle millions of searches on a monthly basis. So, the developers moved Mozilla to Python+Django. More specifically, Mozilla-central has over 35000 Python files with over 230 thousand lines of code. &lt;/p&gt;

&lt;p&gt;Today, the company uses Python for implementing such tasks as building the system, command-line tooling, test harnesses, and CI configuration. Meanwhile, Django is used for Mozilla’s support site and browser add-ons. &lt;/p&gt;

&lt;p&gt;BitTorrent&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FbvGpSx6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2uv886dpxah8d3f1qmr5.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FbvGpSx6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2uv886dpxah8d3f1qmr5.jpg" alt="Image description" width="880" height="570"&gt;&lt;/a&gt;&lt;br&gt;
BitTorrent is a known name in the area of huge databases of media, knowledge, and content. This program is supported through ads and developed by Bram Cohen and Rainberry, Inc. It is used to upload and download files. &lt;/p&gt;

&lt;p&gt;BitTorrent’s creation and development were made with the help of Python. You wouldn’t be able to access various materials and lectures and easily download them if it weren’t for Python in BitTorrent’s development.  &lt;/p&gt;

&lt;p&gt;BitBucket&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QF36J1J8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7jitwww0w27r6o6xfcew.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QF36J1J8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7jitwww0w27r6o6xfcew.jpg" alt="Image description" width="880" height="570"&gt;&lt;/a&gt;&lt;br&gt;
BitBucket is a web-based hosting service that is mainly used for source code and a wide range of development projects. Its users’ base accounts for over 10 million registered users as well as 28 million repositories. &lt;/p&gt;

&lt;p&gt;According to BuiltWith, nearly 2 thousand websites are using the services of BitBucket. Needless to say, the service is written in Python, more specifically, using the Django web framework. &lt;/p&gt;

&lt;p&gt;Social media networks&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HSuzu_zR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9p5v7c7j0qoghy7rlun5.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HSuzu_zR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9p5v7c7j0qoghy7rlun5.jpg" alt="Image description" width="880" height="570"&gt;&lt;/a&gt;&lt;br&gt;
One of the most needed features for social media networks is scalability due to their constant and rapid development. Python has excellent scalability potential and many other features that allow social media platforms to handle large amounts of users.&lt;/p&gt;

&lt;p&gt;Instagram&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ocNqtLW3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/25uovy44l2bxlrwf3rsz.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ocNqtLW3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/25uovy44l2bxlrwf3rsz.jpg" alt="Image description" width="880" height="570"&gt;&lt;/a&gt;&lt;br&gt;
In 2021, nearly 1 billion people used Instagram. Instagram started using Python back in 2010, and it took only two weeks for them to develop and launch an app with the Django framework. 11 years later, the company still uses the Django framework to scale their projects. &lt;/p&gt;

&lt;p&gt;Today, Instagram features the world’s largest deployment of the Django web framework, which is written entirely in Python.&lt;/p&gt;

&lt;p&gt;Youtube&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xvDdx7T6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eaa2pkqsyua3ahv43i8v.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xvDdx7T6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eaa2pkqsyua3ahv43i8v.jpg" alt="Image description" width="880" height="570"&gt;&lt;/a&gt;&lt;br&gt;
With over 2 billion logged-in users every month, Youtube is among the social media platforms’ champions. And this platform was written almost exclusively in Python. The users get the interactive experience thanks to various features and libraries of the Python language. Moreover, developers coded the platform to make the process of uploading, downloading, and sharing videos quite easy. &lt;/p&gt;

&lt;p&gt;Reddit&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FQxYVxZJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hluimrhj2vpmt57x7b8v.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FQxYVxZJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hluimrhj2vpmt57x7b8v.jpg" alt="Image description" width="880" height="570"&gt;&lt;/a&gt;&lt;br&gt;
More than 330 million users visit Reddit every month. The company’s founders turned to Python due to its two main benefits. Firstly, the vast number of libraries allows finding the code for pretty much anything quickly. Secondly, the simplicity and accessibility of coding in Python allowed the founders to control the process themselves. In addition, its apparent structure allows smooth work and coding. &lt;/p&gt;

&lt;p&gt;Quora&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KXdpYhMb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/thfox5knq3a0l2kt4e2i.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KXdpYhMb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/thfox5knq3a0l2kt4e2i.jpg" alt="Image description" width="880" height="570"&gt;&lt;/a&gt;&lt;br&gt;
The next one is Quora, one of the biggest question-and-answer websites mainly used by professionals.&lt;/p&gt;

&lt;p&gt;In the late 2000s, the Quora team was choosing between several coding languages but went with Python due to its development speed. The company needed to launch its MVP as fast as possible, and there was no better choice than Python.  &lt;/p&gt;

&lt;p&gt;Quora’s developers were particularly happy to transition to Python from other languages, especially PHP. &lt;/p&gt;

&lt;p&gt;Pinterest&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k7AP1aJO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cf0dbn56o8t6kkom4q4x.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k7AP1aJO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cf0dbn56o8t6kkom4q4x.jpg" alt="Image description" width="880" height="570"&gt;&lt;/a&gt;&lt;br&gt;
Pinterest is a site created for sharing pictures and photos of users’ hobbies and interests. It has over 478 million active users monthly. &lt;/p&gt;

&lt;p&gt;Pinterest developers used Python when they were building the platform in 2009-2010 because it was the technology they knew. Specifically, the developers used Python and heavily-modified Django at the application layer.&lt;/p&gt;

&lt;p&gt;Disqus&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HoKZx2_N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ggl3pw5uwe8plsf3kyag.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HoKZx2_N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ggl3pw5uwe8plsf3kyag.jpg" alt="Image description" width="880" height="570"&gt;&lt;/a&gt;&lt;br&gt;
Disqus makes your life easier if you deal with the comments a lot. It moderates the content and helps in managing the comments. Disqus’s community consists of more than 2 billion users monthly in more than 190 countries. And some more impressive statistics: Disqus supports over 70 languages and generates over 50 million comments every month. &lt;/p&gt;

&lt;p&gt;Python comes in handy when it involves security features. For example, it allows multiple sign-ins and notifications that keep the Disqus users in the loop. &lt;/p&gt;

&lt;p&gt;The Onion&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V_FSidl9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n834mk5cdutmpxlzmwpo.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V_FSidl9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n834mk5cdutmpxlzmwpo.jpg" alt="Image description" width="880" height="570"&gt;&lt;/a&gt;&lt;br&gt;
The Onion is a famous online publication specializing in local, national, and international news. Today, it stays among the most-read newspapers around the globe. &lt;/p&gt;

&lt;p&gt;The role of Python in this all is to make the Onion website up and running. All publications, features, and designs highly rely on the Django framework.&lt;/p&gt;

&lt;p&gt;Game industry&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AqodcAyy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w7ihvwhi24nv3hk1cldq.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AqodcAyy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w7ihvwhi24nv3hk1cldq.jpg" alt="Image description" width="880" height="570"&gt;&lt;/a&gt;&lt;br&gt;
The video game industry is among the leading industries worldwide in terms of revenue. It gains about 140 billion dollars annually, and the numbers are only growing. Today, no one codes a game from scratch. Instead, most games are developed using a wide range of development tools. &lt;/p&gt;

&lt;p&gt;Game developers favor Python because of its simplicity, readability, and extensive library support.&lt;/p&gt;

&lt;p&gt;Battlefield 2&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eWSbQtPh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iqzjq0iukf8mrkzpeuzz.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eWSbQtPh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iqzjq0iukf8mrkzpeuzz.jpg" alt="Image description" width="880" height="570"&gt;&lt;/a&gt;&lt;br&gt;
Battlefield 2 was a first-person shooter video game developed in 2005. Its developers used Python to create the essential elements of the gameplay, such as scorekeeping and team balancing. Despite being shut down in 2014, it had a vast community of gamers, and it inspired the creation of many other games. &lt;/p&gt;

&lt;p&gt;Star Trek Bridge Commander&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_J8iVEIF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uqcd5pzqm7d2bgapew1g.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_J8iVEIF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uqcd5pzqm7d2bgapew1g.jpg" alt="Image description" width="880" height="570"&gt;&lt;/a&gt;&lt;br&gt;
Star Trek: Bridge Commander was released in 2002. Totally Games company developed it for Microsoft Windows. The game is set in the universe of Star Trek and is a space combat simulation at its core. &lt;/p&gt;

&lt;p&gt;Python was used here as a mission scripting language and for many other features. &lt;/p&gt;

&lt;p&gt;Civilization 4&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h-199uUp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r5a7l7xlgz3vvi5uhmxa.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h-199uUp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r5a7l7xlgz3vvi5uhmxa.jpg" alt="Image description" width="880" height="570"&gt;&lt;/a&gt;&lt;br&gt;
Civilization 4 is the fourth installment of the Civilization series that Soreh Johnson designed. It was released in 2005 by video game development studio Firaxis Games. &lt;/p&gt;

&lt;p&gt;The brand new feature of this release was the inner logic, including AI, implemented with the help of Python. The game has a language interpreter installed in the engine. Besides, the developers made the interface exposed, allowing the modding community to discover it and use it to their advantage.&lt;/p&gt;

&lt;p&gt;Science&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2NLfiRVw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kt9mqidvwauz92ftjafe.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2NLfiRVw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kt9mqidvwauz92ftjafe.jpg" alt="Image description" width="880" height="570"&gt;&lt;/a&gt;&lt;br&gt;
In the science field, Python is used by such companies as NASA or the National Weather Service. Why? Because it allows crafting and developing technologies that require great precision and accuracy. &lt;/p&gt;

&lt;p&gt;NASA&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IgEcOkua--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/49ejn810p898a8dp9t1c.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IgEcOkua--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/49ejn810p898a8dp9t1c.jpg" alt="Image description" width="880" height="570"&gt;&lt;/a&gt;&lt;br&gt;
Python was used as the standard scripting language in the Johnson Space Center in the Integrated Planning System. Also, Python served as one of the modern tools used to replace the older tools, written either in Perl or shell dialects.&lt;/p&gt;

&lt;p&gt;With its help, Johnson Space Center worked on developing a set of tools that would assist shuttle pre-mission planning. Additionally, Python was used in the Mission Control Center, to perform auxiliary processing integrated with a user interface shell. &lt;/p&gt;

&lt;p&gt;National Weather Service&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iGCg1nxE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/57cwo84t9e3qam0hrnyn.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iGCg1nxE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/57cwo84t9e3qam0hrnyn.jpg" alt="Image description" width="880" height="570"&gt;&lt;/a&gt;&lt;br&gt;
National Weather Service is a US company that provides weather forecasts, warnings of hazardous weather, and many other weather-related services both to the public and private organizations. In addition, it aims to inform the public about weather-related events for protection, safety, and general information. &lt;/p&gt;

&lt;p&gt;The organization used Python to build the central computer system that includes 120 offices located all over the country. The system was developed to create maps, write forecasts, issue warnings, and perform most weather-related tasks.&lt;/p&gt;

&lt;p&gt;Environmental Systems Research Institute (ESRI)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gb06penn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wfu12qorcv1t463b3wv6.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gb06penn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wfu12qorcv1t463b3wv6.jpg" alt="Image description" width="880" height="570"&gt;&lt;/a&gt;&lt;br&gt;
Environmental Systems Research Institute is a leading company in the Geographic Information Systems area. ESRI is an international supplier of geographic information system software, web GIS, and geodatabase management applications. &lt;/p&gt;

&lt;p&gt;The company used Python as a scripting language and also distributed the language’s runtime. Additionally, ESRI released an open-source package called AVPython, the Python interface library used for its products.&lt;/p&gt;

&lt;p&gt;Graphics and Design&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OCM4wChf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yt6t3i00y4r4dnx1n8s2.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OCM4wChf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yt6t3i00y4r4dnx1n8s2.jpg" alt="Image description" width="880" height="570"&gt;&lt;/a&gt;&lt;br&gt;
Several graphics and design companies, such as Industrial Light and Magic and Walt Disney Feature Animation, use Python and its frameworks. It allows expanding the animation variety and simplifying the production pipeline quickly and efficiently.&lt;/p&gt;

&lt;p&gt;Industrial Light and Magic&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nmlMCj6f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2hwu44sd0kxrcjkegstm.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nmlMCj6f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2hwu44sd0kxrcjkegstm.jpg" alt="Image description" width="880" height="570"&gt;&lt;/a&gt;&lt;br&gt;
Founded in 1975, Industrial Light and Magic (ILM) is the special effects powerhouse. Originally, it was created by George Lucas to produce visual effects for Star Wars. &lt;/p&gt;

&lt;p&gt;After decades, Industrial Light and Magic is the leading company in the field of visual effects, proving their excellence by winning countless awards for their movie and commercial projects. &lt;/p&gt;

&lt;p&gt;Python is a go-to language in multiple facets of their work. For instance, developers use Python to track and audit pipeline functionality, maintaining a database of every single image produced for every project. &lt;/p&gt;

&lt;p&gt;As more and more ILM’s programs involved Python use, it allowed creating a unified toolset, leading to a more efficient production pipeline. &lt;/p&gt;

&lt;p&gt;Walt Disney Feature Animation&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BsoXPwhY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/00jm6svhcv9kqhkr0yle.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BsoXPwhY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/00jm6svhcv9kqhkr0yle.jpg" alt="Image description" width="880" height="570"&gt;&lt;/a&gt;&lt;br&gt;
Who doesn’t know a clip of a mouse driving a boat, whistling a melody, and just being cool? That’s the intro of one of the most popular animation companies, Walt Disney Animation Studios. &lt;/p&gt;

&lt;p&gt;Since the day this American company was founded, the studio has produced more than 50 feature films, from Snow White and the Seven Dwarfs in 1937 to Raya and the Last Dragon in 2021. Not to mention hundreds of short films. &lt;/p&gt;

&lt;p&gt;Walt Disney Feature Animation applies Python frameworks to add scriptability to their animation production system. &lt;/p&gt;

&lt;p&gt;Sum Up&lt;br&gt;
Small and huge companies, private and governmental organizations use Python.&lt;/p&gt;

&lt;p&gt;And it’s no wonder because Python is easy to use, scalable, and understandable. Whatever your project needs are, Python almost surely is the right decision. &lt;/p&gt;

&lt;p&gt;Python already has the most applicable framework and tons of libraries to rely on, whether it’s a simple web app or complex machine learning and data science project. &lt;/p&gt;

&lt;p&gt;With Python, we’ve built 200+ projects and have learned all the ins and outs of this language.&lt;/p&gt;

&lt;p&gt;So if you want to start a project with Python, but are in doubt, don’t hesitate to contact us!&lt;/p&gt;

&lt;p&gt;We’ll be glad to answer any questions of yours and provide our perspective and expertise. &lt;/p&gt;

</description>
      <category>python</category>
      <category>django</category>
      <category>saas</category>
      <category>programming</category>
    </item>
    <item>
      <title>Day 77 of 100 Days of Code &amp; Scrum: Web Development Services Page and More Next.js</title>
      <author>Rammina</author>
      <pubDate>Thu, 13 Jan 2022 12:09:54 +0000</pubDate>
      <link>https://dev.to/rammina/day-77-of-100-days-of-code-scrum-web-development-services-page-and-more-nextjs-k26</link>
      <guid>https://dev.to/rammina/day-77-of-100-days-of-code-scrum-web-development-services-page-and-more-nextjs-k26</guid>
      <description>&lt;p&gt;Hello there, everyone!&lt;/p&gt;

&lt;p&gt;I got plenty of work done on my Web Development Services page today. I feel like it could use some improvements, but I'm satisfied for now and would like to move on to other pages. I do need to be more efficient with my time and work on the things that give me the most value.&lt;/p&gt;

&lt;p&gt;I've also been learning more about Next.js, and it's probably my most favorite framework so far. I haven't felt this excited to discover new things since I first worked with React back in 2019. Maybe, Next.js is going to stay as my most preferred framework until I try out SvelteKit, which I've heard great things about.&lt;/p&gt;

&lt;p&gt;Anyway, let's move on to my daily report!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#yesterday"&gt;
  &lt;/a&gt;
  Yesterday
&lt;/h2&gt;

&lt;p&gt;I worked on the web development services page and added various subsections that fall under Our Specialties.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#today"&gt;
  &lt;/a&gt;
  Today
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#company-website"&gt;
  &lt;/a&gt;
  Company Website
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;I worked on my Web Development Services page, added multiple subsections with text content and images.&lt;/li&gt;
&lt;li&gt;used &lt;code&gt;blurDataURL&lt;/code&gt; placeholders to make my images seem to load smoother and to avoid dislodging elements.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#nextjs"&gt;
  &lt;/a&gt;
  Next.js
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;learned more about advanced data fetching techniques and patterns in Next.js.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#scrum"&gt;
  &lt;/a&gt;
  Scrum
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;read this article, titled &lt;a href="https://www.scrum.org/resources/blog/myth-having-sprint-goal-optional-scrum"&gt;Myth: Having A Sprint Goal Is Optional In Scrum&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;here are some negative consequences if there is no Sprint Goal:

&lt;ul&gt;
&lt;li&gt;a wide variety of items (potentially unrelated) will be pulled from the Product Backlog during Sprint Planning.&lt;/li&gt;
&lt;li&gt;the Sprint Backlog is likely what Development Teams implicitly (or explicitly) commit to instead.&lt;/li&gt;
&lt;li&gt;no obvious incentive to collaborate.&lt;/li&gt;
&lt;li&gt;the Daily Scrum takes the form of a status update.&lt;/li&gt;
&lt;li&gt;the Development Team doesn’t have guidance on how to decide where to invest time and what to let go.&lt;/li&gt;
&lt;li&gt;it is hard to know when a Sprint is successful.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thank you for reading! Have a good day!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9gNNIpK9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x9ayfxxxaz2g2hfcqbsk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9gNNIpK9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x9ayfxxxaz2g2hfcqbsk.png" alt="Rammina Thank You Banner" width="880" height="293"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#resourcesrecommended-readings"&gt;
  &lt;/a&gt;
  Resources/Recommended Readings
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://scrumguides.org/scrum-guide.html"&gt;The 2020 Scrum Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.udemy.com/course/nextjs-react-the-complete-guide/"&gt;Next.js &amp;amp; React by Maximilian Schwarzmüller&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nextjs.org/docs/getting-started"&gt;Next.js official documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://swr.vercel.app/"&gt;SWR official documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.scrum.org/resources/blog/myth-having-sprint-goal-optional-scrum"&gt;Myth: Having A Sprint Goal Is Optional In Scrum&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#disclaimer"&gt;
  &lt;/a&gt;
  DISCLAIMER
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;This is not a guide&lt;/strong&gt;, it is just me sharing my experiences and learnings. This post only expresses my thoughts and opinions (based on my limited knowledge) and is in no way a substitute for actual references. If I ever make a mistake or if you disagree, I would appreciate corrections in the comments!&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#other-media"&gt;
  &lt;/a&gt;
  Other Media
&lt;/h2&gt;

&lt;p&gt;Feel free to reach out to me in other media!&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;a href="https://www.rammina.com"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BK-zilS2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rammina/image/upload/v1638444046/rammina-button-128_x9ginu.png" alt="Rammina Logo" width="128" height="50"&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;a href="https://twitter.com/RamminaR"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C341ckO3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rammina/image/upload/v1636792959/twitter-logo_laoyfu_pdbagm.png" alt="Twitter logo" width="128" height="50"&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;a href="https://github.com/Rammina"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u4ZlXeay--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rammina/image/upload/v1636795051/GitHub-Emblem2_epcp8r.png" alt="Github logo" width="128" height="50"&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>beginners</category>
      <category>javascript</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Automating Django Deployment workflow with Github Actions</title>
      <author>Ted Ngeene</author>
      <pubDate>Thu, 13 Jan 2022 11:53:08 +0000</pubDate>
      <link>https://dev.to/tngeene/automating-django-deployment-workflow-with-github-actions-2i1o</link>
      <guid>https://dev.to/tngeene/automating-django-deployment-workflow-with-github-actions-2i1o</guid>
      <description>&lt;p&gt;If you’ve worked on a project that has constant changes, tests, and needs to be deployed to a server every time the changes occur, then you’re aware how the process of logging in to the server via ssh, redeploying, and testing is quite repetitive and frankly annoying sometimes. Luckily, with the advent of Github actions, this can be automated, leading to a happy developer.&lt;/p&gt;

&lt;p&gt;The purpose of this article is to get you introduced to the concept of Github actions for a typical Django app deployment, but it can easily apply to any other framework. So...let’s see some Github actions in action.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction-to-github-actions"&gt;
  &lt;/a&gt;
  Introduction to Github actions
&lt;/h2&gt;

&lt;p&gt;According to the official docs, the definition of GitHub actions is;&lt;/p&gt;

&lt;p&gt;GitHub Actions is a continuous integration and continuous delivery (CI/CD) platform that allows you to automate your build, test, and deployment pipeline. You can create workflows that build and test every pull request to your repository or deploy merged pull requests to production.&lt;/p&gt;

&lt;p&gt;GitHub Actions goes beyond just DevOps and lets you run workflows when other events happen in your repository.&lt;/p&gt;

&lt;p&gt;GitHub provides Linux, Windows, and macOS virtual machines to run your workflows, or you can host your own self-hosted runners in your own data center or cloud infrastructure.&lt;/p&gt;

&lt;p&gt;What this basically means is that they provide a &lt;a href="https://www.redhat.com/en/topics/devops/what-is-ci-cd"&gt;Continuous Integration and Continuous Delivery pipeline&lt;/a&gt;, all in one platform. This is a powerful tool for dev teams and Individual Contributors and is usually a key step in the software development life cycle.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#key-terms-and-concepts-in-github-actions"&gt;
  &lt;/a&gt;
  Key Terms and Concepts In Github Actions
&lt;/h2&gt;

&lt;p&gt;Before we begin, let’s familiarize ourselves with a few terms and concepts that you’ll be seeing along with the post.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#workflow"&gt;
  &lt;/a&gt;
  Workflow
&lt;/h3&gt;

&lt;p&gt;A &lt;em&gt;workflow&lt;/em&gt; is a configurable automated process that will run one or more jobs. Workflows are defined by a YAML file in your repository and will run when triggered by an &lt;a href="###events"&gt;&lt;code&gt;event&lt;/code&gt;&lt;/a&gt; in your repository, or they can be triggered manually, or at a defined schedule.&lt;/p&gt;

&lt;p&gt;Your repository can have multiple workflows each of which can perform a different set of steps. For example, you can have one workflow to build and test pull requests, another workflow to deploy your application every time a release is created, and still another workflow that adds a label every time someone opens a new issue.&lt;/p&gt;

&lt;p&gt;Workflows are contained in the &lt;code&gt;.github/workflows&lt;/code&gt; directory.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#events"&gt;
  &lt;/a&gt;
  Events
&lt;/h3&gt;

&lt;p&gt;An event is a specific activity in a repository that triggers a workflow run. For example, an event can be a pull request, push, comment, and so on. For more explanation on this, see &lt;a href="https://docs.github.com/en/actions/learn-github-actions/events-that-trigger-workflows"&gt;events that trigger workflows&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#jobs"&gt;
  &lt;/a&gt;
  Jobs
&lt;/h3&gt;

&lt;p&gt;A &lt;em&gt;job&lt;/em&gt; is a set of steps that execute on your workflow in the same &lt;code&gt;runner&lt;/code&gt;. An example of a job would be running unit tests. A step can either be a shell script that will be executed or an &lt;a href="###actions"&gt;action&lt;/a&gt; to be run. Steps are executed in order and are dependent on each other. Since each step is executed on the same runner, you can share data from one step to another. For example, you can have a step that builds your application followed by a step that tests the application that was built. which is what we’re going to be doing.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#actions"&gt;
  &lt;/a&gt;
  Actions
&lt;/h3&gt;

&lt;p&gt;An &lt;em&gt;action&lt;/em&gt; is a custom application for the GitHub Actions platform that performs a complex but frequently repeated task. Actions help reduce the amount of repetitive code that you write in your workflow files. An action can pull your git repository from GitHub, set up the correct toolchain for your build environment, or set up the authentication to your cloud provider.&lt;/p&gt;

&lt;p&gt;You can write your own actions, or you can find actions to use in your workflows in the &lt;a href="https://github.com/marketplace?type="&gt;GitHub Marketplace.&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#runners"&gt;
  &lt;/a&gt;
  Runners
&lt;/h3&gt;

&lt;p&gt;A &lt;em&gt;runner&lt;/em&gt; is a server that runs your workflows when they're triggered. Each runner can run a single job at a time. GitHub provides Ubuntu Linux, Microsoft Windows, and macOS runners to run your workflows; each workflow run executes in a fresh, newly-provisioned virtual machine.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#secrets"&gt;
  &lt;/a&gt;
  Secrets
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Secrets&lt;/em&gt; are environment variables that your jobs depend on. These are usually sensitive information that you wouldn’t want to be exposed to the public. Such secrets include; secret keys, API keys, access tokens, and passwords.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-you-need-for-this-config"&gt;
  &lt;/a&gt;
  What you need for this config
&lt;/h3&gt;

&lt;p&gt;Before we set up our first workflow, you’ll need a few things.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;A Github repository - this is the repo you want to set up your actions. For this demo, you can reference &lt;a href="https://github.com/tngeene/weather-stats-api"&gt;this repo&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/nektos/act"&gt;Nektos/act package&lt;/a&gt; - it’s always advisable that you test your actions locally before pushing them to Github. This package enables us to do so.&lt;/li&gt;
&lt;li&gt;A &lt;a href="https://en.wikipedia.org/wiki/Virtual_private_server"&gt;virtual private server&lt;/a&gt; - where we’ll be deploying our application. I recommend using digital ocean. They provide the best servers at affordable tiers. Sign up using my &lt;a href="https://m.do.co/c/eaa803fe4d99"&gt;affiliate link&lt;/a&gt; to get $100 credits for 60 days.

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://www.docker.com/"&gt;Docker&lt;/a&gt; and docker-compose- the nektos/act package runs on docker since we’ll be virtualizing our runners. Install them both on your machine and the server.&lt;/li&gt;
&lt;/ol&gt;


&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#setting-our-first-workflow"&gt;
  &lt;/a&gt;
  Setting Our first workflow
&lt;/h2&gt;

&lt;p&gt;For this tutorial, we need to first understand what our objective is before we write any workflow files.&lt;/p&gt;

&lt;p&gt;We want our workflow to;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Run our tests every time a pull request is made to the &lt;code&gt;main&lt;/code&gt; branch.&lt;/li&gt;
&lt;li&gt;Deploy to a server every time a push is made to the main branch.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For this setup, we’ll need two workflow files, i.e, &lt;code&gt;tests.yml&lt;/code&gt;, and &lt;code&gt;deploy.yml&lt;/code&gt; files.&lt;/p&gt;

&lt;p&gt;Let’s get started.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#running-tests"&gt;
  &lt;/a&gt;
  Running Tests
&lt;/h3&gt;

&lt;p&gt;On your repo, switch to a new branch, in my case, I have a &lt;code&gt;workflows&lt;/code&gt; branch.&lt;/p&gt;

&lt;p&gt;Run&lt;/p&gt;

&lt;p&gt;&lt;code&gt;mkdir .github &amp;amp;&amp;amp; mkdir ./github/workflow &amp;amp;&amp;amp; touch ./github/workflows/tests.yml&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Open the tests.yml file and paste the following code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Django Tests CI&lt;/span&gt;

&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;push&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;branches&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;main&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
  &lt;span class="na"&gt;pull_request&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;branches&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;main&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;

&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;test&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-18.04&lt;/span&gt;
    &lt;span class="na"&gt;strategy&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;max-parallel&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;
      &lt;span class="na"&gt;matrix&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;python-version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;3.8&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;3.9&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;

    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/checkout@v2&lt;/span&gt;
      &lt;span class="c1"&gt;# this fixes local act bug of python setup&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;local act python setup fix&lt;/span&gt;
        &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;|&lt;/span&gt;
          &lt;span class="s"&gt;# Hack to get setup-python to work on act&lt;/span&gt;
          &lt;span class="s"&gt;# (see https://github.com/nektos/act/issues/251)&lt;/span&gt;
          &lt;span class="s"&gt;if [ ! -f "/etc/lsb-release" ] ; then&lt;/span&gt;
            &lt;span class="s"&gt;echo "DISTRIB_RELEASE=18.04" &amp;gt; /etc/lsb-release&lt;/span&gt;
          &lt;span class="s"&gt;fi&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Set up Python ${{ matrix.python-version }}&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/setup-python@v2&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;python-version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ matrix.python-version }}&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Install Dependencies&lt;/span&gt;
        &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;|&lt;/span&gt;
          &lt;span class="s"&gt;python -m pip install --upgrade pip&lt;/span&gt;
          &lt;span class="s"&gt;pip install -r requirements.txt&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Run Tests&lt;/span&gt;
        &lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;DEBUG&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.DEBUG }}&lt;/span&gt;
          &lt;span class="na"&gt;SECRET_KEY&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.SECRET_KEY }}&lt;/span&gt;
          &lt;span class="na"&gt;DB_ENGINE&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.DB_ENGINE }}&lt;/span&gt;
          &lt;span class="na"&gt;DB_NAME&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.DB_NAME }}&lt;/span&gt;
          &lt;span class="na"&gt;BASE_WEATHER_API_URL&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.BASE_WEATHER_API_URL }}&lt;/span&gt;
          &lt;span class="na"&gt;WEATHER_API_KEY&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.WEATHER_API_KEY }}&lt;/span&gt;
        &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;|&lt;/span&gt;
          &lt;span class="s"&gt;python manage.py test core.tests&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Starting from the top, we specify our workflow name&lt;/p&gt;

&lt;p&gt;name: Django Tests CI&lt;/p&gt;

&lt;p&gt;This can be whatever name you want but always use a name that’s easy to remember and descriptive of what the file does.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;on&lt;/code&gt; keyword is the entrypoint for our events, in this file, we’d like the action to run every time a push and a pull request is made to the main branch. This way, tests will always run if these scenarios are triggered.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;jobs:
  test:
    runs-on: ubuntu-18.04
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8, 3.9]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This bit has a few configurations.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We create a job called test.&lt;/li&gt;
&lt;li&gt;we specify that the job will run on ubuntu 18.04 since my server is running on that OS.&lt;/li&gt;
&lt;li&gt;Inside the test job, we specify a &lt;code&gt;strategy&lt;/code&gt; matrix. This allows running our tests on a few different python variations. In this case, we want the tests to be run in python 3.8 and python 3.9 environments.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;max-parallel&lt;/code&gt; The maximum number of jobs that can run simultaneously when using a &lt;code&gt;matrix&lt;/code&gt; job strategy&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;steps&lt;/code&gt; - Next, we define the series of steps the job will follow. Steps are usually sequential, that is, they’re executed one after the other.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt; &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/checkout@v2&lt;/span&gt;
      &lt;span class="s"&gt;# this fixes local act bug of python setup&lt;/span&gt;
      &lt;span class="s"&gt;- name&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s"&gt;local act python setup fix&lt;/span&gt;
        &lt;span class="s"&gt;run&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;|&lt;/span&gt;
          &lt;span class="s"&gt;# Hack to get setup-python to work on act&lt;/span&gt;
          &lt;span class="s"&gt;# (see https://github.com/nektos/act/issues/251)&lt;/span&gt;
          &lt;span class="s"&gt;if [ ! -f "/etc/lsb-release" ] ; then&lt;/span&gt;
            &lt;span class="s"&gt;echo "DISTRIB_RELEASE=18.04" &amp;gt; /etc/lsb-release&lt;/span&gt;
          &lt;span class="s"&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The first step is a caveat to note when working with act in a local environment (for mac users). It’ll likely throw an error that there’s a problem setting up python. The command is a bash script that resolves this issue. You can ignore it if you won’t face such a headwind.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt; &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Set up Python ${{ matrix.python-version }}&lt;/span&gt;
        &lt;span class="s"&gt;uses&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/setup-python@v2&lt;/span&gt;
        &lt;span class="s"&gt;with&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;python-version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ matrix.python-version }}&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Install Dependencies&lt;/span&gt;
        &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;|&lt;/span&gt;
          &lt;span class="s"&gt;python -m pip install --upgrade pip&lt;/span&gt;
          &lt;span class="s"&gt;pip install -r requirements.txt&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This next step sets up the python versions specified in the &lt;code&gt;matrix&lt;/code&gt;.  We install the dependencies and update &lt;code&gt;pip&lt;/code&gt; in the bash script. (defined in the &lt;code&gt;run&lt;/code&gt; keyword)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Run Tests&lt;/span&gt;
        &lt;span class="s"&gt;env&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;DEBUG&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.DEBUG }}&lt;/span&gt;
          &lt;span class="na"&gt;SECRET_KEY&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.SECRET_KEY }}&lt;/span&gt;
          &lt;span class="na"&gt;DB_ENGINE&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.DB_ENGINE }}&lt;/span&gt;
          &lt;span class="na"&gt;DB_NAME&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.DB_NAME }}&lt;/span&gt;
          &lt;span class="na"&gt;BASE_WEATHER_API_URL&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.BASE_WEATHER_API_URL }}&lt;/span&gt;
          &lt;span class="na"&gt;WEATHER_API_KEY&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.WEATHER_API_KEY }}&lt;/span&gt;
        &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;|&lt;/span&gt;
          &lt;span class="s"&gt;python manage.py test core.tests&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally, we run our tests.&lt;/p&gt;

&lt;p&gt;You have noticed the environmental variables in this action. To create environmental variables in your github repo go to your &lt;code&gt;repository &amp;gt; settings &amp;gt; left-sidebar &amp;gt; secrets&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Add whatever secrets you might require.&lt;/p&gt;

&lt;p&gt;Since we’ll need to test our actions locally first, create a &lt;code&gt;.secrets&lt;/code&gt; file in your project root. I decided to name mine ‘act.secrets’.&lt;/p&gt;

&lt;p&gt;For a more detailed explanation of how secrets work, check out the &lt;a href="https://docs.github.com/en/actions/security-guides/encrypted-secrets"&gt;official documentation.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finally, let’s run the tests workflow by using;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;act —secret-file act.secrets&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Drumrolls 🥁🥁.... if you set up everything correctly, the output should be like this;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--K46MvQnm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hxxgpt6zg3ia02sw52v5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K46MvQnm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hxxgpt6zg3ia02sw52v5.png" alt="test success" width="880" height="550"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Congratulations, you’ve made your first GitHub action! Next, push the code to GitHub, make a PR to the main branch and check if it’s been triggered. Finally, merge the PR to the main branch. This should also trigger the workflow.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--l15Lw1-i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9pxk1r8m0dszj6r9uaro.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--l15Lw1-i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9pxk1r8m0dszj6r9uaro.png" alt="test trigger workflow" width="880" height="365"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-up-autodeploy-pipeline"&gt;
  &lt;/a&gt;
  Setting Up AutoDeploy Pipeline
&lt;/h2&gt;

&lt;p&gt;Now that we’ve set up our tests action, we’ll need to pass deploy to our server when we merge into the main branch.&lt;/p&gt;

&lt;p&gt;For this, make a &lt;code&gt;deploy.yml&lt;/code&gt; file under the workflows folder and paste the following snippet.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Django Deploy CD&lt;/span&gt;
&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;push&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;branches&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;main&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;deploy&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-18.04&lt;/span&gt;
    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Deploy to server&lt;/span&gt;
      &lt;span class="c1"&gt;# don't run locally&lt;/span&gt;
        &lt;span class="na"&gt;if&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ !env.ACT }}&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;appleboy/ssh-action@master&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;host&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.LIVE_SERVER_IP }}&lt;/span&gt;
          &lt;span class="na"&gt;username&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.SERVER_USERNAME }}&lt;/span&gt;
          &lt;span class="na"&gt;password&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.SERVER_USER_PASSWORD }}&lt;/span&gt;
          &lt;span class="na"&gt;port&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.DEPLOY_PORT }}&lt;/span&gt;
          &lt;span class="na"&gt;script&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;|&lt;/span&gt;
            &lt;span class="s"&gt;cd ${{ secrets.PROJECT_PATH }}&lt;/span&gt;
            &lt;span class="s"&gt;git pull ${{secrets.REPO_URL}}&lt;/span&gt;
            &lt;span class="s"&gt;docker-compose down &lt;/span&gt;
            &lt;span class="s"&gt;docker-compose up --build -d&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Like the first file, this folder follows the same structure, just different commands. I will cover the new parts.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;if: ${{ !env.ACT }}&lt;/code&gt; - this command instructs the nektos/act package to ignore this job. This is because, in most cases, we don’t want to deploy to our server from our local environment.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;uses: appleboy/ssh-action@master&lt;/code&gt; - this instructs our job to use the publicly available GitHub action, “appleboy/ssh-action@master” which is an ssh client. Check out their &lt;a href="https://opensourcelibs.com/lib/ssh-action"&gt;official docs&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;   &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;host&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.LIVE_SERVER_IP }}&lt;/span&gt;
          &lt;span class="na"&gt;username&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.SERVER_USERNAME }}&lt;/span&gt;
          &lt;span class="na"&gt;password&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.SERVER_USER_PASSWORD }}&lt;/span&gt;
          &lt;span class="na"&gt;port&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.DEPLOY_PORT }}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This action requires us to define a few secrets. The final expected GitHub secrets for this job are;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="s"&gt;LIVE_SERVER_IP - server ip address&lt;/span&gt;
&lt;span class="s"&gt;SERVER_USERNAME - user logging into the server&lt;/span&gt;
&lt;span class="s"&gt;DEPLOY_PORT - ssh port, default is &lt;/span&gt;&lt;span class="m"&gt;22&lt;/span&gt;
&lt;span class="s"&gt;SERVER_USER_PASSWORD - password of user, can using public key as well in place of this&lt;/span&gt;
&lt;span class="s"&gt;USERNAME= github username&lt;/span&gt;
&lt;span class="s"&gt;PROJECT_PATH - path the project is located on server&lt;/span&gt;
&lt;span class="s"&gt;REPO_URL=https://{USERS_GITHUB_TOKEN}@github.com/{USERNAME}/{repo-name}.git&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally, we run a series of commands once the action has managed to ssh into the server. Since I’m using docker and docker-compose,  my pipeline is as follows.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;   &lt;span class="na"&gt;script&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;|&lt;/span&gt;
            &lt;span class="s"&gt;cd ${{ secrets.PROJECT_PATH }}&lt;/span&gt;
            &lt;span class="s"&gt;git pull ${{secrets.REPO_URL}}&lt;/span&gt;
            &lt;span class="s"&gt;docker-compose down &lt;/span&gt;
            &lt;span class="s"&gt;docker-compose up --build -d&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For the final piece, push the code to Github, make a PR to the main branch(remember this will trigger the test workflow). Once the tests have run, merge the PR, and if you followed along fine, the tests and deployment actions will be set in motion.&lt;/p&gt;

&lt;p&gt;If you configured everything well, the output should be similar to this.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oGH-nQYY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u66zatiipuegtrutikuu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oGH-nQYY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u66zatiipuegtrutikuu.png" alt="tests local" width="880" height="509"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Test workflow&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Xah8IZkT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/duqlfczlz27ersryulf9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Xah8IZkT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/duqlfczlz27ersryulf9.png" alt="tests github" width="880" height="378"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Deploy Action&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Pm9bn2hn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dcfbhgw5nr6mnaexy8yp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Pm9bn2hn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dcfbhgw5nr6mnaexy8yp.png" alt="deploy action tngeene" width="880" height="470"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources
&lt;/h3&gt;

&lt;p&gt;The content of this post can be nerve-wracking and seem a lot to bite, however, if you feel you need further reading on some of the concepts explained, do check out these curated resources  I used while doing my research.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The &lt;a href="https://docs.github.com/en/actions"&gt;official Github actions documentation&lt;/a&gt; is a treasure trove on all things Github actions.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.freecodecamp.org/news/what-are-github-actions-and-how-can-you-automate-tests-and-slack-notifications/"&gt;Colby Fayock’s&lt;/a&gt; article on Freecodecamp.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.youtube.com/watch?v=X3F3El_yvFg"&gt;This tutorial&lt;/a&gt; on Brad Traversy’s Youtube channel.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Github actions offer a way for DevOps teams to quickly set up a CI/CD pipeline. In this post, we set up a Django application, with some automated tests. We also set up two GitHub actions; one that automatically runs our tests when a pull request is made to the main branch, and another that automatically deploys the application to a virtual private server.&lt;/p&gt;

&lt;p&gt;You can read further on working with different environments, setting up restrictions on certain actions and deploying your own actions to the Github marketplace.&lt;/p&gt;

&lt;p&gt;Thanks for following along this far and I hope this goes a long way to aid in saving your precious time by avoiding manually doing this.&lt;/p&gt;

&lt;p&gt;If you have any thoughts, extra pointers, or just a comment, feel free to reach out by leaving a comment, or shooting up a dm on &lt;a href="https://twitter.com/Ngeene_kihiu"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sponsors"&gt;
  &lt;/a&gt;
  Sponsors
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.scraperapi.com/?via=teddy44"&gt;Scraper API&lt;/a&gt; is a startup specializing in strategies that'll ease the worry of your IP address from being blocked while web scraping. They utilize IP rotation so you can avoid detection. Boasting over 20 million IP addresses and unlimited bandwidth. Using Scraper API and a tool like &lt;a href="https://2captcha.com/?from=12437369"&gt;2captcha&lt;/a&gt; will give you an edge over other developers. The two can be used together to automate processes. Sign up on Scraper API and use &lt;a href="https://www.scraperapi.com/?via=teddy44"&gt;this link&lt;/a&gt; to get a 10% discount on your first purchase.&lt;/li&gt;
&lt;li&gt;Do you need a place to host your website or app, &lt;a href="http://cloudwww.digitalocean.com/"&gt;Digital ocean&lt;/a&gt;
is just the solution you need, sign up on digital ocean using this &lt;a href="https://m.do.co/c/eaa803fe4d99"&gt;link&lt;/a&gt; and experience the best cloud service, provider.&lt;/li&gt;
&lt;li&gt;The journey to becoming a developer can be long and tormentous, luckily &lt;a href="http://referral.pluralsight.com/mQh0Nxp"&gt;Pluralsight&lt;/a&gt; makes it easier to learn. They offer a wide range of courses, with top quality trainers, whom I can personally vouch for. Sign up using &lt;a href="http://referral.pluralsight.com/mQh0Nxp"&gt;this link&lt;/a&gt; and get a 50% discount on your first course.&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>devops</category>
      <category>django</category>
      <category>github</category>
      <category>python</category>
    </item>
    <item>
      <title>Nullish Coalescing??</title>
      <author>Saksham</author>
      <pubDate>Thu, 13 Jan 2022 11:40:21 +0000</pubDate>
      <link>https://dev.to/sakshamak/nullish-coalescing-4m6j</link>
      <guid>https://dev.to/sakshamak/nullish-coalescing-4m6j</guid>
      <description>&lt;p&gt;Nullish coalescing? &lt;/p&gt;

&lt;p&gt;what is that word. Hmm... koala...sing? &lt;br&gt;
&lt;a href="https://i.giphy.com/media/l3vQWWQtYTr3ItcFG/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/l3vQWWQtYTr3ItcFG/giphy.gif" alt="koala sining" width="480" height="480"&gt;&lt;/a&gt;bad joke alert!!!&lt;/p&gt;

&lt;p&gt;Hello everyone, I’m Saksham and I am back again with a new blog about an es6 feature which I personally found really cool and is pronounced as &lt;strong&gt;Null-ish koh-uh-les-ing.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Yeah, it took me some time too, to get the spelling right haha.&lt;br&gt;
&lt;a href="https://i.giphy.com/media/xT1XGyjDty7M0CaO2I/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/xT1XGyjDty7M0CaO2I/giphy.gif" alt="relax" width="480" height="360"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#what-is-it"&gt;
  &lt;/a&gt;
  What is it?
&lt;/h2&gt;

&lt;p&gt;Nullish coalescing is a short circuiting operator denoted by '&lt;strong&gt;??&lt;/strong&gt;'&lt;/p&gt;

&lt;p&gt;Purpose of this operator is very simple. Do you know about short circuiting OR operator? Its the same but with some precision, we can say.&lt;/p&gt;

&lt;p&gt;lets first discuss about short circuiting OR operator in short.&lt;/p&gt;

&lt;p&gt;OR operator, other that using it in getting boolean values, can be used directly if we want to evaluate something from left to right and get the result&lt;br&gt;
&lt;a href="https://i.giphy.com/media/WRQBXSCnEFJIuxktnw/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/WRQBXSCnEFJIuxktnw/giphy.gif" alt="image" width="504" height="322"&gt;&lt;/a&gt;&lt;br&gt;
Lets take an exampe to understand it much better&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Saksham&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;myName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;New User&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;My name is: &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;myName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;//My name is Saksham&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;anotherName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;newName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;anotherName&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;New User&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Welcome &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;newName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;//Welcome New User&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As we can see in the above example, When there was a value in the right hand side it returned that but when the string was empty it returned the left hand side value. &lt;/p&gt;

&lt;p&gt;That’s because OR operator check for the right hand side value and if its a &lt;em&gt;falsy&lt;/em&gt; value (0, “”, [], null, undefined, NaN) then it returns the left side (no matter what value is there). &lt;/p&gt;

&lt;p&gt;This is how OR operator works. &lt;/p&gt;

&lt;p&gt;Similar is the case of nullish coalescing operator, the difference is that it will return the right hand side only when the left side give &lt;strong&gt;null&lt;/strong&gt; or &lt;strong&gt;undefined.&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-it-works"&gt;
  &lt;/a&gt;
  How it works
&lt;/h2&gt;

&lt;p&gt;Lets take another example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;setHeight&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getHeight&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;setHeight&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Height is set to &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;getHeight&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Height is set to 100&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here &lt;strong&gt;setHeight&lt;/strong&gt; was 0 but as it is a falsy value &lt;strong&gt;100&lt;/strong&gt; was printed. But as we know heights can be 0, This is where nullish coalescing operator is used.&lt;/p&gt;

&lt;p&gt;In case of nullish coalescing operator, when the left hand side is &lt;strong&gt;null&lt;/strong&gt; or &lt;strong&gt;undefined,&lt;/strong&gt; only then it will return the right hand side.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;setHeight&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getHeight&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;setHeight&lt;/span&gt; &lt;span class="p"&gt;??&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Height is set to &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;getHeight&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Height is set to 0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#chaining-operators"&gt;
  &lt;/a&gt;
  Chaining operators
&lt;/h3&gt;

&lt;p&gt;We can add multiple statements while using nullish coalescing operator&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;firstname&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;lastname&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;My name is &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;firstname&lt;/span&gt; &lt;span class="p"&gt;??&lt;/span&gt; &lt;span class="nx"&gt;lastname&lt;/span&gt; &lt;span class="p"&gt;??&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Anonymous&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="c1"&gt;//My name is Anonymous&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we chained 2 operators, the first one returned null due to which it moves to the second one, but as I said that it will return it without checking and hence returns lastname (which is undefined) but we can see that there is another operator right next to it and hence it becomes a left hand side for the second operator and it is again checked and as its undefined the answer comes out to be &lt;strong&gt;Anonymous.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is how chaining works. But you know we cannot use chaining with OR and AND operators like above, if we try, it will give an error as it is not able to decide whom to give more precedence.&lt;/p&gt;

&lt;p&gt;So to remove that error we put one of the condition in parenthesis.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;firstname&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;lastname&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;My name is &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;firstname&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;lastname&lt;/span&gt; &lt;span class="p"&gt;??&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Anonymous&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="c1"&gt;//Uncaught SyntaxError&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;My name is &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;firstname&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;lastname&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;??&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Anonymous&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="c1"&gt;//My name is Anonymous&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And this is how ‘&lt;strong&gt;??’&lt;/strong&gt; works. That’s all about this operator. &lt;br&gt;
Thank you for reading this blog ❤️&lt;br&gt;
&lt;a href="https://i.giphy.com/media/9Y6n9TR7U07ew/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/9Y6n9TR7U07ew/giphy.gif" alt="happy" width="150" height="150"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>My Tech Community Activity Timeline</title>
      <author>Marcel.L</author>
      <pubDate>Thu, 13 Jan 2022 11:34:23 +0000</pubDate>
      <link>https://dev.to/pwd9000/my-tech-community-activity-timeline-57lf</link>
      <guid>https://dev.to/pwd9000/my-tech-community-activity-timeline-57lf</guid>
      <description>&lt;h2&gt;
  &lt;a href="#tech-community-contributions"&gt;
  &lt;/a&gt;
  Tech Community Contributions
&lt;/h2&gt;

&lt;p&gt;When it comes to cloud technology, I usually blog and go where my curiosity takes me covering topics on Microsoft Azure, Azure DevOps and GitHub. I enjoy creating technical content, public speaking &amp;amp; virtual meetups, and love to share my knowledge in these areas with the tech community.&lt;/p&gt;

&lt;p&gt;Here is a summary and timeline of my community activity, speaking events and contributions. Including events I will be presenting at in the near future. Feel free to reach out to me if you would like me to speak at a community user group, event, conference or meetup.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#upcoming"&gt;
  &lt;/a&gt;
  Upcoming
&lt;/h2&gt;

&lt;p&gt;If you like my content feel free to bookmark this page as it gets updated frequently to showcase any new content or upcoming events I will be attending.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Date&lt;/th&gt;
&lt;th&gt;Activity&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Topic Area&lt;/th&gt;
&lt;th&gt;Tags&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;23/03/2022&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.cloudlunchlearn.com/weeklysessions"&gt;Cloud Lunch and Learn Weekly Sessions! - Automate Azure Resource Decommissions using Azure Serverless Function App (with tracking)&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Public Speaking&lt;/td&gt;
&lt;td&gt;Azure, PowerShell&lt;/td&gt;
&lt;td&gt;Automation, Serverless, FunctionApps, Podcast&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;23/02/2022&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.cloudlunchlearn.com/weeklysessions"&gt;Cloud Lunch and Learn Weekly Sessions! - Reusable GitHub workflows to automate tokens&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Public Speaking&lt;/td&gt;
&lt;td&gt;Azure, PowerShell, GitHub&lt;/td&gt;
&lt;td&gt;Automation, Security, GitHubActions, ServiceBus, SecDevOps, Podcast&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;26/01/2022&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.cloudlunchlearn.com/weeklysessions"&gt;Cloud Lunch and Learn Weekly Sessions! - Automate password rotation with Github and Azure&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Public Speaking&lt;/td&gt;
&lt;td&gt;Azure, GitHub, PowerShell&lt;/td&gt;
&lt;td&gt;Security, SecDevOps, Automation, Podcast&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#2022"&gt;
  &lt;/a&gt;
  2022
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Date&lt;/th&gt;
&lt;th&gt;Activity&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Topic Area&lt;/th&gt;
&lt;th&gt;Tags&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;09/01/2022&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://youtu.be/UaS3I38XK2U"&gt;DevCon6 - Automate password rotation with Github and Azure&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Public Speaking&lt;/td&gt;
&lt;td&gt;GitHub, PowerShell&lt;/td&gt;
&lt;td&gt;Security, SecDevOps, Automation, Conference&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;08/01/2022&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://youtu.be/b6gXihOsfCo"&gt;myNewsWrap – SAP and Microsoft (Episode 66) - Automate Azure Resource Decommissions (with tracking)&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Podcast&lt;/td&gt;
&lt;td&gt;Azure, PowerShell&lt;/td&gt;
&lt;td&gt;Automation, Serverless, FunctionApps, Podcast&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;07/01/2022&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://dev.to/pwd9000/get-email-alerts-from-serverless-azure-functions-using-sendgrid-217m"&gt;Get email notifications from serverless Azure functions using SendGrid&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Blog/Website Post&lt;/td&gt;
&lt;td&gt;Azure, PowerShell&lt;/td&gt;
&lt;td&gt;Automation, Serverless, FunctionApps, SendGrid, Tutorial&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#2021"&gt;
  &lt;/a&gt;
  2021
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Date&lt;/th&gt;
&lt;th&gt;Activity&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Topic Area&lt;/th&gt;
&lt;th&gt;Tags&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;20/12/2021&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://dev.to/pwd9000/automate-azure-resource-decommissions-with-tracking-aok"&gt;Automate Azure Resource Decommissions (with tracking)&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Blog/Website Post&lt;/td&gt;
&lt;td&gt;Azure, PowerShell&lt;/td&gt;
&lt;td&gt;Automation, Serverless, FunctionApps, Tutorial&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;03/12/2021&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://youtu.be/nSSQtOvwVzA"&gt;Festive Tech Calendar 2021 - Automate password rotation with Github and Azure&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Public Speaking&lt;/td&gt;
&lt;td&gt;GitHub, PowerShell&lt;/td&gt;
&lt;td&gt;Security, SecDevOps, Automation, Conference&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;14/11/2021&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/Pwd9000-ML/Azure-Service-Bus-SAS-Management"&gt;GitHub Actions Hackathon 2021 - Reusable workflows to automate tokens&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Hackathon&lt;/td&gt;
&lt;td&gt;GitHub&lt;/td&gt;
&lt;td&gt;Automation, Security, GitHubActions&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;14/11/2021&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://dev.to/pwd9000/automate-azure-service-bus-sas-tokens-with-github-37ok"&gt;Automate Azure Service Bus SAS tokens with Github&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Blog/Website Post&lt;/td&gt;
&lt;td&gt;Azure, GitHub&lt;/td&gt;
&lt;td&gt;Automation, Security, GitHubActions, ServiceBus, SecDevOps, Tutorial&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;09/11/2021&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/Pwd9000-ML/Azure-VM-Password-Management"&gt;GitHub Actions Hackathon 2021 - Automate Password Rotation using Github Actions&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Hackathon&lt;/td&gt;
&lt;td&gt;GitHub&lt;/td&gt;
&lt;td&gt;Automation, Security, GitHubActions&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;24/10/2021&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://dev.to/pwd9000/upload-files-to-azure-storage-using-a-powershell-function-app-15li"&gt;Upload Files to Azure Storage using a PowerShell Function App&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Blog/Website Post&lt;/td&gt;
&lt;td&gt;Azure, PowerShell&lt;/td&gt;
&lt;td&gt;Automation, API, Serverless, FunctionApps, Tutorial&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;16/10/2021&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://dev.to/pwd9000/terraform-iac-scanning-with-trivy-3cai"&gt;Terraform IaC Scanning with Trivy&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Blog/Website Post&lt;/td&gt;
&lt;td&gt;Azure DevOps&lt;/td&gt;
&lt;td&gt;Terraform, Automation, IaC, SecDevOps, Tutorial&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;03/10/2021&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://dev.to/pwd9000/terraform-complex-variable-types-173e"&gt;Terraform - Complex Variable Types&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Blog/Website Post&lt;/td&gt;
&lt;td&gt;DevOps&lt;/td&gt;
&lt;td&gt;Terraform, Automation, IaC, Tutorial&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;15/09/2021&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://dev.to/pwd9000/create-a-pdf-document-from-an-azure-devops-wiki-fjh"&gt;Create a PDF document from an Azure DevOps Wiki&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Blog/Website Post&lt;/td&gt;
&lt;td&gt;Azure DevOps&lt;/td&gt;
&lt;td&gt;Pipelines, Automation, Tutorial&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;08/09/2021&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://dev.to/pwd9000/azure-nibble-hosts-file-generator-using-kql-for-app-services-p5i"&gt;Azure Nibble - Hosts File Generator using KQL for App Services&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Blog/Website Post&lt;/td&gt;
&lt;td&gt;Azure&lt;/td&gt;
&lt;td&gt;Kusto, Monitoring, Automation, Tips&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;30/08/2021&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://dev.to/pwd9000/devops-github-service-notifications-using-azure-logic-apps-124e"&gt;DevOps/Github service notifications using Azure Logic Apps&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Blog/Website Post&lt;/td&gt;
&lt;td&gt;Azure, Azure Devops, GitHub&lt;/td&gt;
&lt;td&gt;Serverless, Monitoring, Automation, LogicApps, Tutorial&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;27/08/2021&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://dev.to/pwd9000/github-devops-status-2eji"&gt;Github/DevOps status&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Blog/Website Post&lt;/td&gt;
&lt;td&gt;Azure DevOps,GitHub&lt;/td&gt;
&lt;td&gt;Monitoring, Tips&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;26/08/2021&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://dev.to/pwd9000/dynamic-terraform-deployments-using-devops-replace-tokens-5aeb"&gt;Dynamic terraform deployments using DevOps replace tokens&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Blog/Website Post&lt;/td&gt;
&lt;td&gt;Azure DevOps&lt;/td&gt;
&lt;td&gt;Pipelines, Terraform, Automation, IaC, Tutorial&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;07/08/2021&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://dev.to/pwd9000/consume-artifacts-from-a-remote-devops-project-pipeline-2f3a"&gt;Consume artifacts from a remote DevOps project pipeline&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Blog/Website Post&lt;/td&gt;
&lt;td&gt;Azure DevOps&lt;/td&gt;
&lt;td&gt;Pipelines, DevOps, Tutorial&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;22/07/2021&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://dev.to/pwd9000/connect-terraform-to-azure-devops-git-repos-over-ssh-163c"&gt;Connect Terraform to Azure Devops Git Repos over SSH&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Blog/Website Post&lt;/td&gt;
&lt;td&gt;Azure DevOps&lt;/td&gt;
&lt;td&gt;Terraform, IaC, Automation, Tutorial&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;19/07/2021&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://dev.to/pwd9000/azure-nibble-how-to-get-tcpping-on-linux-azure-app-service-2dap"&gt;Azure Nibble - How to get TcpPing on Linux Azure App Service&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Blog/Website Post&lt;/td&gt;
&lt;td&gt;Azure&lt;/td&gt;
&lt;td&gt;AppServices, Networking, Tips&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;11/07/2021&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://dev.to/pwd9000/access-internal-apim-securely-with-private-link-service-313o"&gt;Access internal APIm securely with Private Link Service&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Blog/Website Post&lt;/td&gt;
&lt;td&gt;Azure&lt;/td&gt;
&lt;td&gt;Security, APIm, Networking, Tutorial&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;03/07/2021&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://dev.to/pwd9000/protect-secrets-in-azure-functions-using-key-vault-d2i"&gt;Protect secrets in Azure Functions using Key Vault&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Blog/Website Post&lt;/td&gt;
&lt;td&gt;Azure&lt;/td&gt;
&lt;td&gt;Security, Serverless, FunctionApps, Tutorial&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;25/06/2021&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://dev.to/pwd9000/restrict-azure-devops-pat-tokens-with-azure-ad-policy-3315"&gt;Restrict Azure DevOps PAT tokens with Azure AD policy&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Blog/Website Post&lt;/td&gt;
&lt;td&gt;Azure DevOps&lt;/td&gt;
&lt;td&gt;Security, Tips&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;19/06/2021&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://dev.to/pwd9000/securing-azure-logic-apps-with-private-endpoints-4c3f"&gt;Securing Azure Logic apps with Private Endpoints&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Blog/Website Post&lt;/td&gt;
&lt;td&gt;Azure&lt;/td&gt;
&lt;td&gt;Serverless, Security, LogicApps, Networking, Tutorial&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;10/06/2021&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://dev.to/pwd9000/power-virtual-machines-on-or-off-using-azure-functions-4k8o"&gt;Power virtual machines ON or OFF using Azure functions&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Blog/Website Post&lt;/td&gt;
&lt;td&gt;Azure, PowerShell&lt;/td&gt;
&lt;td&gt;Serverless, FunctionApps, Automation, Tutorial&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;24/05/2021&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://dev.to/pwd9000/automate-azure-role-based-access-control-rbac-using-github-2349"&gt;Automate Azure Role Based Access Control (RBAC) using Github&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Blog/Website Post&lt;/td&gt;
&lt;td&gt;GitHub, PowerShell&lt;/td&gt;
&lt;td&gt;Security, SecDevOps, RBAC, Automation, Tutorial&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;17/05/2021&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://dev.to/pwd9000/automate-password-rotation-with-github-and-azure-412a"&gt;Automate password rotation with Github and Azure&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Blog/Website Post&lt;/td&gt;
&lt;td&gt;GitHub, PowerShell&lt;/td&gt;
&lt;td&gt;Security, SecDevOps, Automation, Tutorial&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;05/05/2021&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://dev.to/pwd9000/automate-azure-role-based-access-control-rbac-with-devops-2ehf"&gt;Automate Azure Role Based Access Control (RBAC) using DevOps&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Blog/Website Post&lt;/td&gt;
&lt;td&gt;Azure Devops, PowerShell&lt;/td&gt;
&lt;td&gt;Security, SecDevOps, RBAC, Automation, Tutorial&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;02/05/2021&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://dev.to/pwd9000/powershell-using-parameter-sets-5da8"&gt;PowerShell - Using Parameter Sets&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Blog/Website Post&lt;/td&gt;
&lt;td&gt;PowerShell&lt;/td&gt;
&lt;td&gt;Tutorial&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#author"&gt;
  &lt;/a&gt;
  &lt;em&gt;Author&lt;/em&gt;
&lt;/h3&gt;

&lt;p&gt;Like, share, follow me on: 🐙 &lt;a href="https://github.com/Pwd9000-ML"&gt;GitHub&lt;/a&gt; | 🐧 &lt;a href="https://twitter.com/pwd9000"&gt;Twitter&lt;/a&gt; | 👾 &lt;a href="https://www.linkedin.com/in/marcel-l-61b0a96b/"&gt;LinkedIn&lt;/a&gt;&lt;/p&gt;


&lt;div class="ltag__user ltag__user__id__620034"&gt;
  
    .ltag__user__id__620034 .follow-action-button {
      background-color: #0cbb58 !important;
      color: #000000 !important;
      border-color: #0cbb58 !important;
    }
  
    &lt;a href="/pwd9000" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Amb4rEJN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--L_SDLOmq--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/620034/93be2c72-3a13-478e-8af1-a4bedc1b2331.jpeg" alt="pwd9000 image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/pwd9000"&gt;Marcel.L&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/pwd9000"&gt;Cloud Solutions &amp;amp; DevOps Architect.&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


</description>
      <category>devcommunity</category>
      <category>azure</category>
      <category>devops</category>
      <category>github</category>
    </item>
    <item>
      <title>Front-End Development Roadmap For 2022</title>
      <author>Mihaela</author>
      <pubDate>Thu, 13 Jan 2022 11:27:28 +0000</pubDate>
      <link>https://dev.to/workshub/front-end-development-roadmap-for-2022-1149</link>
      <guid>https://dev.to/workshub/front-end-development-roadmap-for-2022-1149</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Front-end development involves using HTML, CSS, and JavaScript to build a client-side application. The client-side of an online application is the visual part of a web application and also what a user interacts with when an application is opened: colours, fonts, buttons, navigations, animations, etc.&lt;/p&gt;

&lt;p&gt;Front-end development includes the user interface of an application. Everything a user interacts with when a user visits a website such as a login or sign-up page, homepage, contact page falls under the front-end development term.&lt;/p&gt;

&lt;p&gt;A front-end developer is responsible for building and implementing the interface of a website or web application. They build client-side applications using web technologies such as HTML, CSS, and JavaScript.&lt;/p&gt;

&lt;p&gt;In 2022 however, front-end development has gone beyond HTML, CSS, and JavaScript. There are a lot of web technologies you need to learn to be able to excel as a front-end developer this year.&lt;/p&gt;

&lt;p&gt;This article will cover all you need to get started with front-end development in 2022.&lt;/p&gt;

&lt;p&gt;### Basic Terminal Usage (Command line)&lt;/p&gt;

&lt;p&gt;The terminal is an interface used to execute text commands, and it gives you access to the underlying operating system. Basic terminal usage is a skill all developers need regardless of their specialization. Command line is very important so I strongly recommend you study more on how to use it. The better you are with the command line, the more efficient you will be as a front-end developer.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#here-are-some-resources-to-learn-command-line"&gt;
  &lt;/a&gt;
  Here are some resources to learn command line:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt; &lt;a href="https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Command_line"&gt;Command-line crash course&lt;/a&gt; - MDN web docs&lt;/li&gt;
&lt;li&gt; &lt;a href="https://www.pluralsight.com/courses/getting-started-linux-command-line%20aid=7010a000002LUv2AAG&amp;amp;promo=&amp;amp;utm_source=non_branded&amp;amp;utm_medium=digital_paid_search_google&amp;amp;utm_campaign=XYZ_EMEA_Dynamic&amp;amp;utm_content=&amp;amp;gclid=CjwKCAiAi_D_BRApEiwASslbJ4Nx1f3ikM1YzwuimkQVOgfC9Gh8irYj9HCshqXV7lpF_vg6TrmwKRoCc7AQAvD_BwE"&gt;Getting Started with the Linux Command Line&lt;/a&gt; - Pluralsight&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.udacity.com/course/linux-command-line-basics--ud595"&gt;Linux Command Line Basics&lt;/a&gt; - Udacity&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://openclassrooms.com/en/courses/4614926-learn-the-command-line-in-terminal"&gt;Learn the Command Line in Terminal&lt;/a&gt; - Openclassrooms&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.codecademy.com/learn/learn-the-command-line"&gt;Learn the Command Line&lt;/a&gt; - Codecademy&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.youtube.com/watch?v=yz7nYlnXLfE"&gt;Command Line Crash Course&lt;/a&gt; - Freecodecamp&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#git-version-control"&gt;
  &lt;/a&gt;
  Git - Version Control
&lt;/h3&gt;

&lt;p&gt;Git is a version control system that enables developers to track changes in their project. Git also helps developers collaborate as a team. Git is needed among developers, to ensure that there are no code conflicts between developers.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#here-are-some-resources-to-learn-git"&gt;
  &lt;/a&gt;
  Here are some resources to learn Git:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://guides.github.com/introduction/git-handbook/"&gt;Git Handbook&lt;/a&gt; - Github guides&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://git-scm.com/videos"&gt;Git&lt;/a&gt; - Git&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://git-scm.com/book/en/v2"&gt;Git book&lt;/a&gt; - Git&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.freecodecamp.org/news/what-is-git-and-how-to-use-it-c341b049ae61/"&gt;An introduction to Git&lt;/a&gt; - Freecodecamp&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.udacity.com/course/version-control-with-git--ud123"&gt;Version Control with Git&lt;/a&gt; - Udacity&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.youtube.com/watch?v=SWYqp7iY_Tc&amp;amp;t=271s"&gt;Git &amp;amp; GitHub Crash Course For Beginners&lt;/a&gt; - Traversy media
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.youtube.com/watch?v=USjZcfj8yxE"&gt;Learn Git In 15 Minutes&lt;/a&gt; -  Colt Steele&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.youtube.com/watch?v=RGOj5yH7evk"&gt;Git and GitHub for Beginners&lt;/a&gt; - Crash Course - Freecodecamp&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#github"&gt;
  &lt;/a&gt;
  Github
&lt;/h3&gt;

&lt;p&gt;GitHub is a code hosting platform for software development. GitHub lets teams work together on projects and it is also used for version control. It can be used among teams to collaborate on a project.  For example, a team of developers wants to build a web application and everyone is given a task that has to be updated daily while working on the project, in this case, Github helps them build a centralized repository where each team member can make updates or manage the code file or repository.&lt;/p&gt;

&lt;p&gt;To get started, sign up for &lt;a href="https://github.com/"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#here-are-some-resources-to-learn-github"&gt;
  &lt;/a&gt;
  Here are some resources to learn Github:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://guides.github.com/activities/hello-world/"&gt;Github Guides&lt;/a&gt; - Github guides&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.youtube.com/watch?v=w3jLJU7DT5E"&gt;What is GitHub?&lt;/a&gt; - Github&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.youtube.com/watch?v=RGOj5yH7evk&amp;amp;t=34s"&gt;Git and GitHub for Beginners&lt;/a&gt; - Crash Course - Freecodecamp&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#text-editor-ide-integrated-development-environment"&gt;
  &lt;/a&gt;
  Text Editor / IDE (Integrated development environment)
&lt;/h3&gt;

&lt;p&gt;The text editor is where you will write your code.  Having the right text editor can improve your productivity.&lt;/p&gt;

&lt;p&gt;There are a lot of IDE to pick from, but let’s look at a few:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://code.visualstudio.com/"&gt;Visual studio code&lt;/a&gt; -  visual studio code is the best IDE for front-end development. It works across all operating systems such as macOS, Windows, and Linux. Visual studio code comes with a great deal of extension which helps in improving productivity as a front-end developer.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.sublimetext.com/"&gt;Sublime text&lt;/a&gt;  -  sublime text is also available on macOS, Windows, and Linux. It is fast, easy, and flexible to use.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://atom.io/"&gt;Atom&lt;/a&gt; - Atom is an open-source code editor for macOS, Linux, and Windows developed by Github with supports for plugins.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#web-fundamentals"&gt;
  &lt;/a&gt;
  Web Fundamentals
&lt;/h3&gt;

&lt;p&gt;It is important to understand how the web works before you start learning any technologies. You should learn about things like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Learn/Common_questions/How_does_the_Internet_work"&gt;What is the internet and how it works&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol"&gt;HTTP / HTTPS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/web-application-security-understanding-the-browser-5305ed2f1dac/"&gt;Browsers and how they work&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#learn-html"&gt;
  &lt;/a&gt;
  Learn HTML
&lt;/h3&gt;

&lt;p&gt;HTML stands for Hypertext Markup Language. It is the markup language for building web pages, it is also the building block of the web. HTML is easy to learn and comprehend. With just HTML, you can build a basic website.&lt;/p&gt;

&lt;p&gt;You need to learn the basics of HTML, such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;HTML Headings- these are what you use to display titles or subtitles on your web pages. It consists of &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; which is the most important heading and &lt;h6&gt; which is the least important.&lt;/h6&gt;
&lt;/li&gt;
&lt;li&gt;HTML Forms - HTML forms are used to collect data inputs such as username, email, contact details.&lt;/li&gt;
&lt;li&gt;HTML Elements - HTML elements define how web browsers will format and display content. Content in the  &lt;code&gt;&amp;lt;i&amp;gt;&lt;/code&gt; tag will be displayed as &lt;em&gt;italics&lt;/em&gt;, content in the &lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt; tag will be displayed as &lt;strong&gt;bold&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;HTML Attributes - HTML attributes provide additional information about the HTML elements. For example, the &lt;img&gt; tag is used to embed an image in a web page, the src attribute will be used to define the path where the image is located.&lt;/li&gt;
&lt;li&gt;HTML layout - HTML layout defines the different ways a website displays content. It is advisable to use semantic HTML elements  such as  &lt;code&gt;&amp;lt;header&amp;gt;&amp;lt;nav&amp;gt;&amp;lt;section&amp;gt;&amp;lt;article&amp;gt;&amp;lt;footer&amp;gt;&lt;/code&gt;, because it clearly describes the element to the browser and developer.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#here-are-some-resources-to-learn-html"&gt;
  &lt;/a&gt;
  Here are some resources to learn HTML:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.w3schools.com/html/default.asp"&gt;HTML tutorial&lt;/a&gt; - w3schools&lt;/li&gt;
&lt;li&gt;
&lt;a href="//javatpoint.com/html-tutorial"&gt;HTML tutorial&lt;/a&gt; - javaTpoint&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.youtube.com/watch?v=pQN-pnXPaVg&amp;amp;t=25s"&gt;HTML Full Course&lt;/a&gt; -  Freecodecamp&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.youtube.com/watch?v=UB1O30fR-EE&amp;amp;t=9s"&gt;HTML Crash Course For Absolute Beginners&lt;/a&gt; -  Traversy Media
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#learn-css"&gt;
  &lt;/a&gt;
  Learn CSS
&lt;/h3&gt;

&lt;p&gt;CSS stands for Cascading Style Sheets. It is the technology to learn after HTML. It is used for styling our HTML. For example, we can use CSS to space our content, colours, fonts, etc.&lt;/p&gt;

&lt;p&gt;The basics of CSS you need to learn are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;CSS box model&lt;/strong&gt; - The CSS box model consists of the margin, border, padding, and content. The image below shows us the CSS box model.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ebgIUs4f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://functionalworks-backend--prod.s3.amazonaws.com/logos/6de1028c70660d608da27ce471210788" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ebgIUs4f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://functionalworks-backend--prod.s3.amazonaws.com/logos/6de1028c70660d608da27ce471210788" alt="box model.png" width="244" height="206"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;CSS positioning&lt;/strong&gt; -  CSS positioning helps you manipulate an element to different locations such as fixed, relative, absolute, static, sticky, etc.  The image below shows us CSS positions.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;CSS grid&lt;/strong&gt;- CSS grid is a two-dimensional system with rows and columns. CSS grid makes it easier to structure a web page without having to use floats.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;CSS Flexbox&lt;/strong&gt; - Flexbox is a one-dimensional system that allows us to choose between a row or a column as the main layout or structure of a web page. CSS flexbox also makes it more flexible to structure a web page without having to use floats.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Responsive design and media queries&lt;/strong&gt; - Responsive design is the approach that an application should be built or designed with the user in mind irrespective of their environment such as screen size/devices.  Responsive design is very important and should be in the mind of every developer when building a web application. Media queries are useful when you want to modify your application to fit a device such as Desktops, tablets, and phones. The image below illustrates how an application is viewed on different devices when built with responsive design.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#css-preprocessor"&gt;
  &lt;/a&gt;
  CSS Preprocessor
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Sass&lt;/strong&gt; -  Sass stands for Syntactically Awesome Stylesheet. According to the documentation, Sass is a stylesheet language that’s compiled to CSS. It allows you to use variables, nested rules, mixins, functions, and more, all with a fully CSS-compatible syntax. Sass helps keep large stylesheets well-organized and makes it easy to share design within and across projects.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Less&lt;/strong&gt; - Less stands for Leaner Style Sheets is a backwards-compatible language extension for CSS. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#css-frameworks"&gt;
  &lt;/a&gt;
  CSS Frameworks
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Tailwind CSS&lt;/strong&gt; - According to the official documentation, Tailwind CSS is a utility-first CSS framework for rapidly building custom user interfaces. Tailwind allows us to use inline styling and achieve incredible results without using a single line of CSS.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Bootstrap&lt;/strong&gt; - Bootstrap helps us build fast and responsive websites.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Foundation&lt;/strong&gt; - Foundation is a responsive front-end framework that makes it easier to design responsive websites, apps on any device.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Bulma&lt;/strong&gt; -  Bulma is a CSS  framework based on flexbox layout.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#here-are-some-resources-to-learn-css"&gt;
  &lt;/a&gt;
  Here are some resources to learn CSS:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.w3schools.com/css/default.asp"&gt;CSS tutorials&lt;/a&gt; - w3schools&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.youtube.com/watch?v=yfoY53QXEnI&amp;amp;t=90s"&gt;CSS Crash Course For Absolute Beginners&lt;/a&gt; - Traversy Media
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.youtube.com/watch?v=5bMdjkfvONE"&gt;HTML5 &amp;amp; CSS Development&lt;/a&gt;  - Udemy&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.youtube.com/watch?v=1Rs2ND1ryYc"&gt;CSS Tutorial - Zero to Hero&lt;/a&gt; - Freecodecamp&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.w3schools.com/sass/"&gt;SASS Tutorial&lt;/a&gt; - w3schools&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.youtube.com/watch?v=JJSoEo8JSnc&amp;amp;t=167s"&gt;Flexbox CSS in 20 minutes&lt;/a&gt; - Traversy media&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.youtube.com/watch?v=jV8B24rSN5o&amp;amp;t=287s"&gt;CSS Grid Layout Crash Course&lt;/a&gt; - Traversy media&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=YD91G8DdUsw"&gt;Less CSS PreProcessor Tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.youtube.com/results?search_query=tailwind+css"&gt;Tailwind CSS crash course&lt;/a&gt; - Traversy media&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.w3schools.com/bootstrap4/bootstrap_get_started.asp"&gt;Bootstrap 4&lt;/a&gt; - w3school&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.youtube.com/watch?v=DEu5xYEZx18"&gt;Foundation Framework Crash Course&lt;/a&gt; - Traversy media&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.youtube.com/watch?v=IiPQYQT2-wg"&gt;Bulma CSS Framework Crash Course&lt;/a&gt;- Traversy media &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#learn-javascript"&gt;
  &lt;/a&gt;
  Learn JavaScript
&lt;/h3&gt;

&lt;p&gt;JavaScript is one of the most popular programming languages in the world. It is the language of the web. As a front-end developer, it is required you learn JavaScript. JavaScript enables us to create dynamic content. When you create your HTML structure and your style with your CSS, JavaScript makes the website dynamic and alive. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#some-of-the-basics-of-javascript-you-need-to-learn-are"&gt;
  &lt;/a&gt;
  Some of the basics of JavaScript you need to learn are:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;JavaScript Syntax&lt;/strong&gt; - Every programming language has its own rules on how a program is written.&lt;br&gt;
The syntax of JavaScript is the set of rules that determine how a program is written by a programmer and interpreted by a browser.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;DOM Manipulation&lt;/strong&gt; - DOM stands for document objects model. According to W3C (World Wide Web Consortium) standard, the DOM is a platform and language-neutral interface that allows programs and scripts to dynamically access and update the content, structure, and style of a document.  The DOM is a representation of how the content of a web page is structured. JavaScript manipulates the DOM by updating the content, the style, removing elements, adding new elements.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Learn Fetch API&lt;/strong&gt; -  API stands for Application Programming Interface. An API is an intermediary that allows two applications to communicate with each other. As a front-end developer, when building a web application, chances are that you will have to work with external data such as Third-party APIs, fetch API allows browsers to make HTTP requests to a web server.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#javascript-frameworkslibraries"&gt;
  &lt;/a&gt;
  JavaScript Frameworks/Libraries
&lt;/h4&gt;

&lt;p&gt;After learning the basics of JavaScript,  you can pick any JavaScript framework of your choice. But I highly recommend you pick Vuejs as it is more beginner-friendly.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;React&lt;/strong&gt; - According to the documentation, a JavaScript library for building user interfaces React lets you create reusable components.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Vue&lt;/strong&gt; -  Vuejs is an approachable, versatile, performant javascript framework that helps you create a maintainable and testable codebase. Vuejs is also beginner-friendly.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Angular&lt;/strong&gt; - According to the documentation, Angular is an application design framework and development platform for creating efficient and sophisticated single-page apps.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Svelte&lt;/strong&gt; - Svelte provides a different method for building web applications. It helps developers build fast web pages and a great user interface.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Ember&lt;/strong&gt; - Ember allows developers to create a scalable single page application. It includes everything you need to build a rich user interface that works on any device.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;PREACT&lt;/strong&gt; - PREACT is an alternative to React but came with a Fast 3kB and the same modern API.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#here-are-some-resources-to-learn-javascript"&gt;
  &lt;/a&gt;
  Here are some resources to learn JavaScript:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.w3schools.com/js/default.asp"&gt;JavaScript Tutorial&lt;/a&gt; - W3schools&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.youtube.com/watch?v=PkZNo7MFNFg&amp;amp;t=82s"&gt;Learn JavaScript&lt;/a&gt; - Freecodecamp&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.youtube.com/watch?v=W6NZfCO5SIk"&gt;JavaScript Tutorial for Beginners&lt;/a&gt; - Programming with Mosh&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.youtube.com/watch?v=Qqx_wzMmFeA"&gt;JavaScript Tutorial for Beginners&lt;/a&gt; - Clever programmers&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.youtube.com/watch?v=hdI2bqOjy3c&amp;amp;t=122s"&gt;JavaScript Crash Course For Beginners&lt;/a&gt; - Traversy media&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://reactjs.org/"&gt;React Tutorial&lt;/a&gt; - React&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://vuejs.org/v2/guide/"&gt;Getting started with Vue&lt;/a&gt; - Vue Guide&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://vuejs.org/v2/guide/"&gt;Build An Ember.js App&lt;/a&gt; - Program with Erik&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://preactjs.com/guide/v10/getting-started/"&gt;Getting started with PREACT&lt;/a&gt; - PREACT guide&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.youtube.com/watch?v=uK2RnIzrQ0M"&gt;Svelte Crash Course&lt;/a&gt; - Traversy media&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.youtube.com/watch?v=Fdf5aTYRW0E"&gt;Angular Crash Course&lt;/a&gt; - Traversy media&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9mJ95Ppw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://functionalworks-backend--prod.s3.amazonaws.com/logos/2e71881dafaf11da0d7a342b1d95ab84" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9mJ95Ppw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://functionalworks-backend--prod.s3.amazonaws.com/logos/2e71881dafaf11da0d7a342b1d95ab84" alt="1_KRq7jQOUdQsHNsZa72XcDw.jpeg" width="564" height="564"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#package-managers"&gt;
  &lt;/a&gt;
  Package managers
&lt;/h3&gt;

&lt;p&gt;A package manager is a tool that allows users to install, update, configure,  and manage software packages and product dependencies. Examples of package managers are &lt;strong&gt;NPM&lt;/strong&gt; and &lt;strong&gt;Yarn&lt;/strong&gt;. It is recommended you learn the basics of one of them.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#accessibility"&gt;
  &lt;/a&gt;
  Accessibility
&lt;/h3&gt;

&lt;p&gt;Web accessibility is the process of making your website usable by all people. Web accessibility is an essential part of front-end development. It is important that as a front-end developer, you need to build web pages with accessibility in mind. When you build with accessibility in mind, there is no restriction to anyone. People with disabilities, slow networks, visual impairments, hearing impairments can have access to all the information on the website without obstructions or difficulties.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#here-are-some-resources-to-learn-more-about-accessibility"&gt;
  &lt;/a&gt;
  Here are some resources to learn more about Accessibility:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.udacity.com/course/web-accessibility--ud891"&gt;Web accessibility&lt;/a&gt; -  Udacity&lt;/li&gt;
&lt;li&gt; &lt;a href="https://www.classcentral.com/course/edx-introduction-to-web-accessibility-17252"&gt;Introduction to Web Accessibility&lt;/a&gt; - Class Central&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#performance"&gt;
  &lt;/a&gt;
  Performance
&lt;/h3&gt;

&lt;p&gt;According to MDN, web performance is all about making websites fast, including making slow processes seem fast. One of the metrics that a good website/web application should meet is &lt;em&gt;fast page rendering&lt;/em&gt;. &lt;/p&gt;

&lt;p&gt;Web performance refers to how long it takes for an application to be rendered in the browser as well as how responsive it is to user interaction. For a better user experience, it is recommended that developers adopt different web optimization techniques. This includes using a Content Delivery Network (CDN) which is a strategically distributed web server that delivers contents to users based on location. Another option is to use image compressing tools like &lt;a href="https://imageoptim.com/online"&gt;imageOptim&lt;/a&gt; to reduce image sizes without compromising its quality.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Other methods to adopt include:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Use cache - the whole idea about cache revolves around temporarily saving data and web pages to improve page performance. It is advised that developers implement a cache in the best possible situations to increase site performance and overall user experience. Cached data can be stored on local storage and retrieved when needed.&lt;/li&gt;
&lt;li&gt;Minimize the number of HTTP requests that your application makes. &lt;/li&gt;
&lt;li&gt;Load your CSS and JavaScript files asynchronously. This will prevent the browser from waiting for any element that takes extra time to load. It will instead proceed to other elements.&lt;/li&gt;
&lt;li&gt;Remove junk and unwanted codes in your CSS and JavaScript files.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To get the exact performance data of your web application, you can make use of any of the below-listed tools:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.loadview-testing.com/"&gt;Loadview&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://loadninja.com/"&gt;LoadNinja&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.neotys.com/"&gt;NeoLoad&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All of the above-listed tools though with different unique features will serve you just right.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#testing-your-apps"&gt;
  &lt;/a&gt;
  Testing Your Apps
&lt;/h3&gt;

&lt;p&gt;Testing involves scanning a piece of software for a potential bug during development. During testing, the tester performs an action on a piece of software while expecting a specific result. Possible things to test in an application includes security, functionality and ease of use amongst others. Testing does not guarantee that a piece of software will function properly under any circumstance but it, however, provides us with information on how it could behave under certain conditions. An example of a test tool to try out in your application is a &lt;strong&gt;Jest&lt;/strong&gt;. Jest is a framework used to create and run JavaScript tests for applications built with React, Nodejs, Angular, TypeScript, Vue, and more. It has grown in popularity over the years and has become one of the most used test tools. &lt;/p&gt;

&lt;p&gt;Other testing tools and frameworks to try out include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://mochajs.org/"&gt;Mocha&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pptr.dev/"&gt;Puppeteer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://jasmine.github.io/"&gt;Jasmine&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#website-deployment"&gt;
  &lt;/a&gt;
  Website Deployment
&lt;/h3&gt;

&lt;p&gt;With the knowledge gotten from HTML, CSS, and JavaScript you can build simple web pages using those technologies. Most time after building, it remains in our computer or Github repo and there is no way people can see what you built. But with web deployments, you can host your simple application on the internet. It is super easy to do. You can use tools like &lt;a href="https://pages.github.com/"&gt;GitHub pages&lt;/a&gt;, or &lt;a href="https://www.netlify.com/"&gt;Netlify&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Congrats, you have come to the end of the front-end development roadmap for 2022! With the knowledge shared here, you can easily build real-time website applications. Good luck! &lt;/p&gt;

&lt;p&gt;For more resources like this don't hesitate to &lt;a href="https://javascript.works-hub.com/register?utm_source=blog&amp;amp;utm_medium=organic&amp;amp;utm_campaign=m.popa"&gt;sign up&lt;/a&gt; to join our community of developers!&lt;/p&gt;

&lt;p&gt;Originally written by &lt;a href="https://javascript.works-hub.com/users/4107661d-0fbf-412b-8341-ec9f76e4208e?utm_source=dev_to&amp;amp;utm_medium=blog_xpost"&gt;AMAECHI AMARACHI&lt;/a&gt; for &lt;a href="https://javascript.works-hub.com/learn/front-end-development-roadmap-b08ed?utm_source=dev_to&amp;amp;utm_medium=blog_xpost"&gt;JavaScript Works&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>angular</category>
      <category>react</category>
      <category>html</category>
    </item>
    <item>
      <title>How to build a Tailwind CSS pagination component with Flowbite</title>
      <author>Zoltán Szőgyényi</author>
      <pubDate>Thu, 13 Jan 2022 11:19:41 +0000</pubDate>
      <link>https://dev.to/themesberg/how-to-build-a-tailwind-css-pagination-component-with-flowbite-19mb</link>
      <guid>https://dev.to/themesberg/how-to-build-a-tailwind-css-pagination-component-with-flowbite-19mb</guid>
      <description>&lt;p&gt;Tailwind CSS is one of the fastest growing frameworks and it is popular for its utility-first methodology when working with classes.&lt;/p&gt;

&lt;p&gt;One of the disadvantages of Tailwind CSS is that it doesn't offer a ready-to-use set of UI components like buttons, navbars, and modals and you have to build them from the ground up.&lt;/p&gt;

&lt;p&gt;That is why I started a tutorial series to show you how to build the most commonly used UI components using Tailwind CSS and Flowbite.&lt;/p&gt;

&lt;p&gt;Today I will show you how to build a pagination component. Here's a preview of how it will look:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s51Y9KTD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wkvbsilrwlukanqmcm6m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s51Y9KTD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wkvbsilrwlukanqmcm6m.png" alt="Tailwind CSS pagination" width="880" height="358"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's get started!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tailwind-css-pagination"&gt;
  &lt;/a&gt;
  Tailwind CSS pagination
&lt;/h2&gt;

&lt;p&gt;First of all we want to have the HTML tags ready so it's properly accessible. We'll use a &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; element for that:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;nav aria-label="Page navigation example"&amp;gt;
  &amp;lt;ul&amp;gt;
    &amp;lt;li&amp;gt;
      &amp;lt;a href="#"&amp;gt;Previous&amp;lt;/a&amp;gt;
    &amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;
      &amp;lt;a href="#"&amp;gt;1&amp;lt;/a&amp;gt;
    &amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;
      &amp;lt;a href="#"&amp;gt;2&amp;lt;/a&amp;gt;
    &amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;
      &amp;lt;a href="#"&amp;gt;3&amp;lt;/a&amp;gt;
    &amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;
      &amp;lt;a href="#"&amp;gt;4&amp;lt;/a&amp;gt;
    &amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;
      &amp;lt;a href="#"&amp;gt;5&amp;lt;/a&amp;gt;
    &amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;
      &amp;lt;a href="#"&amp;gt;Next&amp;lt;/a&amp;gt;
    &amp;lt;/li&amp;gt;
  &amp;lt;/ul&amp;gt;
&amp;lt;/nav&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we should style the pagination elements and the links within using the utility classes from Tailwind CSS:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;nav aria-label="Page navigation example"&amp;gt;
  &amp;lt;ul class="inline-flex -space-x-px"&amp;gt;
    &amp;lt;li&amp;gt;
      &amp;lt;a href="#" class="py-2 px-3 ml-0 leading-tight text-gray-500 bg-white rounded-l-lg border border-gray-300"&amp;gt;Previous&amp;lt;/a&amp;gt;
    &amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;
      &amp;lt;a href="#" class="py-2 px-3 leading-tight text-gray-500 bg-white border border-gray-300"&amp;gt;1&amp;lt;/a&amp;gt;
    &amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;
      &amp;lt;a href="#" class="py-2 px-3 leading-tight text-gray-500 bg-white border border-gray-300"&amp;gt;2&amp;lt;/a&amp;gt;
    &amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;
      &amp;lt;a href="#" aria-current="page" class="py-2 px-3 text-blue-600 bg-blue-50 border border-gray-300"&amp;gt;3&amp;lt;/a&amp;gt;
    &amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;
      &amp;lt;a href="#" class="py-2 px-3 leading-tight text-gray-500 bg-white border border-gray-300"&amp;gt;4&amp;lt;/a&amp;gt;
    &amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;
      &amp;lt;a href="#" class="py-2 px-3 leading-tight text-gray-500 bg-white border border-gray-300"&amp;gt;5&amp;lt;/a&amp;gt;
    &amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;
      &amp;lt;a href="#" class="py-2 px-3 leading-tight text-gray-500 bg-white rounded-r-lg border border-gray-300"&amp;gt;Next&amp;lt;/a&amp;gt;
    &amp;lt;/li&amp;gt;
  &amp;lt;/ul&amp;gt;
&amp;lt;/nav&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Looking good! Let's also add the hover state styles:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;nav aria-label="Page navigation example"&amp;gt;
  &amp;lt;ul class="inline-flex -space-x-px"&amp;gt;
    &amp;lt;li&amp;gt;
      &amp;lt;a href="#" class="py-2 px-3 ml-0 leading-tight text-gray-500 bg-white rounded-l-lg border border-gray-300 hover:bg-gray-100 hover:text-gray-700"&amp;gt;Previous&amp;lt;/a&amp;gt;
    &amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;
      &amp;lt;a href="#" class="py-2 px-3 leading-tight text-gray-500 bg-white border border-gray-300 hover:bg-gray-100 hover:text-gray-700"&amp;gt;1&amp;lt;/a&amp;gt;
    &amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;
      &amp;lt;a href="#" class="py-2 px-3 leading-tight text-gray-500 bg-white border border-gray-300 hover:bg-gray-100 hover:text-gray-700"&amp;gt;2&amp;lt;/a&amp;gt;
    &amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;
      &amp;lt;a href="#" aria-current="page" class="py-2 px-3 text-blue-600 bg-blue-50 border border-gray-300 hover:bg-blue-100 hover:text-blue-700"&amp;gt;3&amp;lt;/a&amp;gt;
    &amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;
      &amp;lt;a href="#" class="py-2 px-3 leading-tight text-gray-500 bg-white border border-gray-300 hover:bg-gray-100 hover:text-gray-70"&amp;gt;4&amp;lt;/a&amp;gt;
    &amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;
      &amp;lt;a href="#" class="py-2 px-3 leading-tight text-gray-500 bg-white border border-gray-300 hover:bg-gray-100 hover:text-gray-700"&amp;gt;5&amp;lt;/a&amp;gt;
    &amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;
      &amp;lt;a href="#" class="py-2 px-3 leading-tight text-gray-500 bg-white rounded-r-lg border border-gray-300 hover:bg-gray-100 hover:text-gray-700"&amp;gt;Next&amp;lt;/a&amp;gt;
    &amp;lt;/li&amp;gt;
  &amp;lt;/ul&amp;gt;
&amp;lt;/nav&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Lastly, let's also add the dark mode styles to this pagination component. Check out this page to learn &lt;a href="https://flowbite.com/docs/customize/dark-mode/"&gt;how to add dark mode to Tailwind CSS&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;nav aria-label="Page navigation example"&amp;gt;
  &amp;lt;ul class="inline-flex -space-x-px"&amp;gt;
    &amp;lt;li&amp;gt;
      &amp;lt;a href="#" class="py-2 px-3 ml-0 leading-tight text-gray-500 bg-white rounded-l-lg border border-gray-300 hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white"&amp;gt;Previous&amp;lt;/a&amp;gt;
    &amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;
      &amp;lt;a href="#" class="py-2 px-3 leading-tight text-gray-500 bg-white border border-gray-300 hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white"&amp;gt;1&amp;lt;/a&amp;gt;
    &amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;
      &amp;lt;a href="#" class="py-2 px-3 leading-tight text-gray-500 bg-white border border-gray-300 hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white"&amp;gt;2&amp;lt;/a&amp;gt;
    &amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;
      &amp;lt;a href="#" aria-current="page" class="py-2 px-3 text-blue-600 bg-blue-50 border border-gray-300 hover:bg-blue-100 hover:text-blue-700 dark:border-gray-700 dark:bg-gray-700 dark:text-white"&amp;gt;3&amp;lt;/a&amp;gt;
    &amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;
      &amp;lt;a href="#" class="py-2 px-3 leading-tight text-gray-500 bg-white border border-gray-300 hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white"&amp;gt;4&amp;lt;/a&amp;gt;
    &amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;
      &amp;lt;a href="#" class="py-2 px-3 leading-tight text-gray-500 bg-white border border-gray-300 hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white"&amp;gt;5&amp;lt;/a&amp;gt;
    &amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;
      &amp;lt;a href="#" class="py-2 px-3 leading-tight text-gray-500 bg-white rounded-r-lg border border-gray-300 hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white"&amp;gt;Next&amp;lt;/a&amp;gt;
    &amp;lt;/li&amp;gt;
  &amp;lt;/ul&amp;gt;
&amp;lt;/nav&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Great job! The pagination component should look like this when dark mode is enabled:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EPu1ypkd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bhlo3e93p98g05bqfa3q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EPu1ypkd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bhlo3e93p98g05bqfa3q.png" alt="Tailwind CSS pagination dark mode" width="880" height="352"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This &lt;a href="https://flowbite.com/docs/components/pagination/"&gt;Tailwind CSS pagination component&lt;/a&gt; is part of a larger and open source Tailwind CSS component library called Flowbite. If you want to use more variants of the pagination component or browse other ones, make sure to check out the documentation.&lt;/p&gt;

&lt;p&gt;👉 &lt;a href="https://flowbite.com/docs/getting-started/introduction/"&gt;Flowbite - Tailwind CSS components&lt;/a&gt;&lt;/p&gt;

</description>
      <category>tailwindcss</category>
      <category>opensource</category>
      <category>tutorial</category>
      <category>webdev</category>
    </item>
    <item>
      <title>7 Top Metrics for Measuring Your Technical Debt🚀</title>
      <author>Alex Omeyer</author>
      <pubDate>Thu, 13 Jan 2022 11:03:33 +0000</pubDate>
      <link>https://dev.to/alexomeyer/8-top-metrics-for-measuring-your-technical-debt-5bnm</link>
      <guid>https://dev.to/alexomeyer/8-top-metrics-for-measuring-your-technical-debt-5bnm</guid>
      <description>&lt;p&gt;Hey dev.to community👋&lt;/p&gt;

&lt;p&gt;We decided to look at the technical debt metrics and pick out the best tracking tools but we'd be more than happy to learn from your experience too! Share in the comments: &lt;strong&gt;what technical debt process do you use in your team and what tools help you do that?🚀&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Now let's get started!&lt;/p&gt;




&lt;p&gt;Much like running up bills on your credit card, &lt;a href="https://www.stepsize.com/blog/complete-guide-to-technical-debt"&gt;technical debt&lt;/a&gt; can easily get out of hand. To avoid this happening, you need to keep track of how much debt you’re building up. &lt;/p&gt;

&lt;p&gt;Technical debt metrics are designed to help you make sense of all the data you collect. There are many different metrics to choose from nowadays, and plenty of tools for recording the data.&lt;/p&gt;

&lt;p&gt;In this post, we’re going to look at how they work, and help you to choose the right metrics for your business.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-metrics-for-measuring-your-technical-debt"&gt;
  &lt;/a&gt;
  7 Metrics for Measuring Your Technical Debt
&lt;/h2&gt;

&lt;p&gt;The main reason why technical debt is so common is that many businesses don’t even realise how much they have. It’s only when a company wants to add new functionality that the problems emerge.&lt;/p&gt;

&lt;p&gt;To ensure you don’t fall into the same trap, it’s a good idea to set up some technical debt metrics.&lt;/p&gt;

&lt;p&gt;Notice we say “metrics” in the plural. There is no single data point that will give you an exact understanding of your technical debt. Instead, you will need to build a picture using a collection of metrics.&lt;/p&gt;

&lt;p&gt;So, which ones should you be prioritising? Here are some of our favourites.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-new-bugs-vs-closed-bugs"&gt;
  &lt;/a&gt;
  1. New Bugs vs. Closed Bugs
&lt;/h2&gt;

&lt;p&gt;Here’s a nice easy one to start.&lt;/p&gt;

&lt;p&gt;Every known bug is essentially a tiny sliver of technical debt. If you want to know your total debt, it’s important for your engineers to keep a tally. &lt;/p&gt;

&lt;p&gt;Assuming your engineers make a note of when bugs are fixed, you can calculate how effectively you are managing your technical debt. If new bugs are outnumbering closed bugs, you need to make some changes.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-code-quality"&gt;
  &lt;/a&gt;
  2. Code Quality
&lt;/h2&gt;

&lt;p&gt;Complex code is a sure sign of growing technical debt. At some point, someone is going to have to unravel that mess.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.stepsize.com/blog/the-engineers-complete-guide-to-code-quality"&gt;Code quality&lt;/a&gt; is an aggregation of several metrics that quantify the overall quality and complexity of your code:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Cyclomatic complexity&lt;/li&gt;
&lt;li&gt;Class coupling&lt;/li&gt;
&lt;li&gt;Lines of code&lt;/li&gt;
&lt;li&gt;Depth of inheritance&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With each of these individual metrics, you’re aiming for the lowest possible score. The same goes for the &lt;a href="https://www.stepsize.com/blog/how-to-measure-code-quality-7-metrics-every-engineer-should-know"&gt;overall metric of code quality&lt;/a&gt;. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-cycle-time"&gt;
  &lt;/a&gt;
  3. Cycle Time
&lt;/h2&gt;

&lt;p&gt;Another metric that is closely linked to code quality is cycle time.&lt;/p&gt;

&lt;p&gt;In technical terms, this measures the amount of time that passes between the first commit, and deployment. But when you’re measuring technical debt, you need to study the time it takes to make changes to existing code and to solve problems without using quick fixes.&lt;/p&gt;

&lt;p&gt;If your engineers are spending hours fixing small bugs, you know that there is some technical debt lurking in your code.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-code-churn"&gt;
  &lt;/a&gt;
  4. Code Churn
&lt;/h2&gt;

&lt;p&gt;Code churn is a metric that counts the number of times a particular line has seen code deleted and replaced, or rewritten. &lt;/p&gt;

&lt;p&gt;When you are developing a new feature or working on a particular section of your product, some churn is inevitable. But after you have launched a new version and fixed the standout bugs, &lt;a href="https://www.stepsize.com/blog/code-churn"&gt;code churn should start to diminish quite rapidly&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you see high churn in any area of your code over a longer period of time, it probably means that mistakes or quick fixes are being made with each iteration.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-code-coverage"&gt;
  &lt;/a&gt;
  5. Code Coverage
&lt;/h2&gt;

&lt;p&gt;In a sense, the code coverage metric looks at the same issue from the opposite direction.&lt;/p&gt;

&lt;p&gt;In this case, you are measuring how much of your code is executed when you run your testing suite. This gives you an indication of how efficiently your code has been written — the more lines that are unused, the more likely it is that you have poorly written code.&lt;/p&gt;

&lt;p&gt;A good target number here is 80%. Higher than this is to be commended, while a lower score indicates work to be done.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-code-ownership"&gt;
  &lt;/a&gt;
  6. Code Ownership
&lt;/h2&gt;

&lt;p&gt;In the culinary world, it’s often said that “too many cooks spoil the broth”.&lt;/p&gt;

&lt;p&gt;The same idea can be applied to &lt;a href="https://www.stepsize.com/blog/software-engineering-best-practices"&gt;software engineering&lt;/a&gt;. If you get too many people working on the same tasks, you can easily end up with a steaming pile of cruft. &lt;/p&gt;

&lt;p&gt;That said, you don’t want only one engineer taking ownership of any entire project. If they get sick or leave your organisation, it’s game over.&lt;/p&gt;

&lt;p&gt;For this reason, it’s a good idea to analyse who has worked on which projects. As part of the process, you should count how many engineers have contributed to each project — this is your code coverage.&lt;/p&gt;

&lt;p&gt;The average figure will reveal whether you have an efficient system for delegating tasks, or a free-for-all. The ideal situation is to have one complete team taking charge of each project.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-technical-debt-ratio-tdr"&gt;
  &lt;/a&gt;
  7. Technical Debt Ratio (TDR)
&lt;/h2&gt;

&lt;p&gt;As the name implies, this metric was designed specifically for calculating the overall future cost of technical debt. This can be in terms of time, or some other resource.&lt;/p&gt;

&lt;p&gt;The equation is relatively simple:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(Remediation Cost ÷ Development Cost) × 100 = TDR&lt;/em&gt;&lt;br&gt;
In this case, &lt;strong&gt;remediation cost&lt;/strong&gt; can be calculated as a function of the code quality metrics mentioned above. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Development cost&lt;/strong&gt; is a simple calculation of the number of lines of code required to build a product or feature, divided by the average resources expended per line.&lt;/p&gt;

&lt;p&gt;Put the two together in your TDR equation, and you end up with a simple ratio that tells you how much time or how many resources you will need to spend on fixing problems.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;In an ideal world, your TDR would be around 5%.&lt;/strong&gt; If you get to multiples of this figure, it’s long past time to start tackling your technical debt!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bonus: Front-End Response Time&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The responsiveness of your front-end isn’t strictly about technical debt. However, this metric can act like a warning light. &lt;/p&gt;

&lt;p&gt;If your front-end takes a long time to load, it is generally because you have over-complicated code or outdated technology. Both are important forms of technical debt.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-best-tools-for-measuring-technical-debt"&gt;
  &lt;/a&gt;
  The Best Tools for Measuring Technical Debt
&lt;/h2&gt;

&lt;p&gt;Hopefully by now, you should be starting to get an idea of what you need to measure in order to manage your technical debt. All that remains is to decide which tools to use for the task.&lt;/p&gt;

&lt;p&gt;Here are some of the standout options that will suit most projects:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-stepsize"&gt;
  &lt;/a&gt;
  1. Stepsize
&lt;/h3&gt;

&lt;p&gt;Specifically designed for codebase issue tracking, Stepsize helps you identify and highlight problems right inside your favourite editor.&lt;/p&gt;

&lt;p&gt;The &lt;a href="https://stepsize.com/r/vscode?utm_source=dev.to&amp;amp;utm_medium=referral&amp;amp;utm_campaign=tech-debt-metrics"&gt;Stepsize VSCode&lt;/a&gt; or &lt;a href="http://stepsize.com/r/jetbrains?utm_source=dev.to&amp;amp;utm_medium=referral&amp;amp;utm_campaign=tech-debt-metrics"&gt;JetBrains&lt;/a&gt; editor extensions are totally free and will help you track your technical debt and measure your progress.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SkG_Yx7Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1wrb3aaxlz5rdcn3eqy4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SkG_Yx7Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1wrb3aaxlz5rdcn3eqy4.png" alt="Image description" width="880" height="574"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Because Stepsize integrates with Jira, Asana, Linear, Azure DevOps, and more, you can adopt this app without radically changing your workflow. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Create &amp;amp; view code issues directly from your editor&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Track &amp;amp; prioritise code improvements like technical debt&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Add key issues to your sprints with issue trackers integrations&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#2-sonarqube"&gt;
  &lt;/a&gt;
  2. SonarQube
&lt;/h3&gt;

&lt;p&gt;Rather than a complete solution for tracking technical debt, SonarQube is a tool with a narrow focus. &lt;/p&gt;

&lt;p&gt;The main purpose of this platform is measuring and improving code quality. &lt;a href="https://www.sonarqube.org/"&gt;SonarQube&lt;/a&gt; highlights bugs and messy code through automatic analysis, delivering numbers and grades that you can track over time. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-teamscale"&gt;
  &lt;/a&gt;
  3. Teamscale
&lt;/h3&gt;

&lt;p&gt;The best way to describe &lt;a href="http://www.cqse.eu/en/teamscale/overview/"&gt;Teamscale&lt;/a&gt; is as the system profiler of your product. This tool assesses the quality of your code and delivers the information through visualisations. &lt;/p&gt;

&lt;p&gt;Teamscale can handle multiple metrics, with the option to configure custom dashboards. The platform also offers some quality management features, although it lacks the &lt;a href="https://www.stepsize.com/"&gt;annotated issue tracking&lt;/a&gt; and detailed technical debt analysis provided by Stepsize.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-velocity-by-code-climate"&gt;
  &lt;/a&gt;
  4. Velocity by Code Climate
&lt;/h3&gt;

&lt;p&gt;Billed as an “engineering intelligence” platform, &lt;a href="https://codeclimate.com/velocity/"&gt;Velocity by Code Climate&lt;/a&gt; is primarily designed to help managers to improve workflows and assign resources. It is not specifically designed for handling technical debt, but there is some crossover. &lt;/p&gt;

&lt;p&gt;Velocity pulls data from Jira and other DevOps tools to offer insights. You can also run automatic code analysis, and gather information through inline issue reporting. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-jira"&gt;
  &lt;/a&gt;
  5. Jira
&lt;/h3&gt;

&lt;p&gt;One way to measure technical debt is by creating and monitoring the backlog within your chosen &lt;a href="https://www.stepsize.com/blog/5-best-project-management-tools-you-might-not-know-about"&gt;project management workflow&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;If this is the approach you want to take, Jira is an obvious option. It doesn’t provide any of the code analysis features of the apps mentioned above, but it’s a good platform for managing tasks.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;As we have discovered, there are many different ways to measure and &lt;a href="https://www.stepsize.com/blog"&gt;manage technical debt&lt;/a&gt;. If you are &lt;a href="https://www.stepsize.com/"&gt;looking for an all-in-one solution&lt;/a&gt;, Stepsize should definitely be on your shortlist.&lt;/p&gt;

&lt;p&gt;Our platform is intuitive for engineers, and powerful enough for managers to gain valuable insights — from visualising code debt in dashboards to assessing the future impact on your roadmap.&lt;/p&gt;

&lt;p&gt;Remember that all high growth software companies invariably take on technical debt. But it’s important to measure it and consistently clean up your code to allow your company to keep growing.&lt;/p&gt;




&lt;p&gt;&lt;em&gt;The article is originally posted by &lt;a href="https://myerson.me/"&gt;Mark Myerson&lt;/a&gt; on &lt;a href="https://www.stepsize.com/blog"&gt;Managing technical debt blog&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>codequality</category>
      <category>refactorit</category>
      <category>programming</category>
      <category>vscode</category>
    </item>
    <item>
      <title>Introducing Obsei</title>
      <author>Lalit Pagaria</author>
      <pubDate>Thu, 13 Jan 2022 11:03:03 +0000</pubDate>
      <link>https://dev.to/lalitpagaria/introducing-obsei-56ma</link>
      <guid>https://dev.to/lalitpagaria/introducing-obsei-56ma</guid>
      <description>&lt;p&gt;Dear Dev Community!&lt;/p&gt;

&lt;p&gt;Allow me to introduce &lt;a href="http://obsei.com/"&gt;Obsei&lt;/a&gt; (pronounced "Ob see" | /əb-'sē/). It is a low-code AI powered automation tool. Name was derived from three words OBServe, AnalyzE, Inform. &lt;/p&gt;

&lt;p&gt;You can think of it as &lt;a href="https://zapier.com/"&gt;Zapier &lt;/a&gt; for &lt;a href="https://searchcio.techtarget.com/definition/cognitive-automation"&gt;cognitive-automation&lt;/a&gt; tasks. More specifically we closely resemble &lt;a href="http://levity.ai/"&gt;Levity,&lt;/a&gt; which are doing great work toward no-code ML automation.&lt;/p&gt;

&lt;p&gt;Following GIF can give you an overview of Obsei's -&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CR37aJRh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ikpsp4im99fswsmfwi5k.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CR37aJRh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ikpsp4im99fswsmfwi5k.gif" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;Apache 2.0 License&lt;/em&gt;: Permissible FOSS license&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Low-Code&lt;/em&gt;: YAML is all you need&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Stateless&lt;/em&gt;: Privacy and serverless friendly&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;GitHub Action&lt;/em&gt;: Schedule workflow via GitHub Actions (This might save you &lt;a href="https://zapier.com/pricing"&gt;Zaps&lt;/a&gt; for few tasks)&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;BYOM&lt;/em&gt;: Bring your own model (via HuggingFace Hub)&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Multi-Mode&lt;/em&gt;: Currently support text based workflow but future plan to support Image, Audio, OCR and Video as well&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Our main idea is to provide less complex Lego pieces, which can help less tech savvy people to build complex workflows with ease.&lt;/p&gt;

&lt;p&gt;Currently &lt;strong&gt;4&lt;/strong&gt; companies are using Obsei for their use cases. &lt;a href="https://superblog.ai/"&gt;Superblog &lt;/a&gt; shared how Obsei help them to find more qualified sales leads on Twitter (filtering relevant information via AI). &lt;a href="https://twitter.com/_skris/status/1466337155232387078"&gt;Tweet link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hW80ymCa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ptmpo1lhrh0xn9yfud57.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hW80ymCa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ptmpo1lhrh0xn9yfud57.PNG" alt="Image description" width="598" height="739"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We are bootstrapped small startup, looking forward for community support and feedback to improve and making Obsei more useful. Code is still in early stage and next 2 months we will release more stable Beta version along with properly taking care of backward compatibility and breaking changes.&lt;/p&gt;

&lt;p&gt;Refer important links:&lt;br&gt;
Repo: &lt;a href="https://github.com/obsei/obsei"&gt;https://github.com/obsei/obsei&lt;/a&gt;&lt;br&gt;
Walkthrough Video: &lt;a href="https://www.youtube.com/watch?v=bhAYLI9P9W0"&gt;Youtube link&lt;/a&gt;&lt;br&gt;
Demo UI: &lt;a href="https://huggingface.co/spaces/obsei/obsei-demo"&gt;https://huggingface.co/spaces/obsei/obsei-demo&lt;/a&gt;&lt;br&gt;
Demo UI video: &lt;a href="https://www.youtube.com/watch?v=GTF-Hy96gvY"&gt;Youtube link&lt;/a&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>ai</category>
      <category>opensource</category>
      <category>showdev</category>
    </item>
  </channel>
</rss>
