<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Step-by-step mini snippet to set up a blog post SEO</title>
      <author>OlegP</author>
      <pubDate>Mon, 03 Jan 2022 11:16:32 +0000</pubDate>
      <link>https://dev.to/olegp/step-by-step-mini-snippet-to-set-up-a-blog-post-seo-2b02</link>
      <guid>https://dev.to/olegp/step-by-step-mini-snippet-to-set-up-a-blog-post-seo-2b02</guid>
      <description>&lt;h2&gt;
  &lt;a href="#how-to-optimize-a-blog-post"&gt;
  &lt;/a&gt;
  How to optimize a blog post
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Select the keyword and searcher intent you want for the page. One core keyword = One page. Use keywords tools: &lt;a href="https://ahrefs.com/"&gt;Ahrefs&lt;/a&gt;, &lt;a href="https://kwfinder.com/"&gt;KW finder&lt;/a&gt;, &lt;a href="https://www.keysearch.co/"&gt;Keysearch&lt;/a&gt;, &lt;a href="https://keywordseverywhere.com/"&gt;Keywordseverywhere&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Optional: find related non-core keywords to write sub-sections.&lt;/li&gt;
&lt;li&gt;Write the content of the page without worrying about optimization. Write for users.&lt;/li&gt;
&lt;li&gt;Optimize page title with the chosen keyword. Use dates, numbers, power words in titles. Use &lt;a href="https://headlines.coschedule.com"&gt;HeadlineStudio&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Optimize URL slug: include keyword, use hyphens, keep it short, max 3 levels of path nesting.&lt;/li&gt;
&lt;li&gt;Optimize meta Description: include keyword, google shows it on the search page, so make it readable and attractive.&lt;/li&gt;
&lt;li&gt;Optimize page content: set up a single H1 tag, include core keyword in the first 100 words, use synonyms and LSI keywords.&lt;/li&gt;
&lt;li&gt;Structure your document: H1, H2, H3. Make it readable: keep paragraphs short, break up text with images and headings.&lt;/li&gt;
&lt;li&gt;Optimize images filenames and alt attributes: use human-friendly namings.&lt;/li&gt;
&lt;li&gt;Include internal and external links. Your page must be a part of the whole net. Link to already well-ranked pages, competitors, authorities.&lt;/li&gt;
&lt;li&gt;Use semantic markup, use specific HTML tags such as &amp;lt;article&amp;gt;, &amp;lt;p&amp;gt; and others instead of universal one like a &amp;lt;div&amp;gt;.&lt;/li&gt;
&lt;li&gt;Set up robots.txt, sitemap.xml, &lt;a href="https://search.google.com/search-console"&gt;google search console&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Use appropriate microformats and rich snippets. Set up Facebook Open Graph tags and support for Twitter cards.&lt;/li&gt;
&lt;li&gt;Include canonical meta tag: &amp;lt;link rel="canonical" href="https://..." /&amp;gt; and consider to cross-post your content on various platforms.&lt;/li&gt;
&lt;li&gt;Apply writing tips and tricks: give some value at the very beginning, use "So what?" and "Why should I care?" mindset, use humor, make it controversial, use cliff-hangers, make it personal, end with a call-to-action.&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>writing</category>
      <category>webdev</category>
      <category>html</category>
    </item>
    <item>
      <title>Hoppscotch is celebrating 35,000 GitHub Stars</title>
      <author>Liyas Thomas</author>
      <pubDate>Mon, 03 Jan 2022 10:44:40 +0000</pubDate>
      <link>https://dev.to/liyasthomas/hoppscotch-is-celebrating-35000-github-stars-42hj</link>
      <guid>https://dev.to/liyasthomas/hoppscotch-is-celebrating-35000-github-stars-42hj</guid>
      <description>&lt;p&gt;Hoppscotch now has &lt;a href="https://github.com/hoppscotch/hoppscotch"&gt;35,000 star gazers on GitHub&lt;/a&gt;. We'll use this milestone to recap Hoppscotch’s growth and other important milestones since its beginning as an experimental project in 2019. We've accomplished lot of great things together.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="http://hoppscotch.io"&gt;Hoppscotch&lt;/a&gt; is an open source API development ecosystem.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Since the initial commit (~2 years ago), Hoppscotch has evolved from being an open source side project to an enterprise developer tool.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Quick links:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Web app: &lt;a href="http://hoppscotch.io"&gt;hoppscotch.io&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;GitHub: &lt;a href="https://github.com/hoppscotch/hoppscotch"&gt;github.com/hoppscotch/hoppscotch&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Today, Hoppscotch is celebrating the milestone of reaching 35,000 GitHub Stars.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This will be added to the greatest moments timeline.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Read the tweet&lt;/strong&gt;&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PyGX9c7h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/FIGOQjHVcAAH_7R.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--hDNq9lul--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1445794117976395785/IDVpWsOE_normal.jpg" alt="Liyas Thomas profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Liyas Thomas
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/liyasthomas"&gt;@liyasthomas&lt;/a&gt;
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      The power of open source ✨ 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      12:33 PM - 02 Jan 2022
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1477619150235201539" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1477619150235201539" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1477619150235201539" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;This is an achievement of our whole community. Thank you for each contribution, love, and all the commitments that you made to improve Hoppscotch. We are lucky to build this open-source project with you.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Many people ask me why it got so popular. Here's my answer.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Most developers have side projects. That’s how we try out new things or make something that we miss on the market or in our dev stack. But most side projects end up unfinished and never actually see the light of day. And even if a developer builds up the courage to show his work to the public, he quickly finds out that just publishing a repository doesn’t bring the masses to his doorstep.&lt;/p&gt;

&lt;p&gt;When I set out to create Hoppscotch, of course, I haven’t had the faintest idea if anyone else would be interested in it. But I was mainly scratching my own itch — I knew how to make a web app and I hoped I’d build something that would serve my needs much better than existing tools on the market. That should be your primary motivator — not to chase stars, likes, and other popular content, but to create something for yourself that will make your job easier. There’s a chance you will not be the only one that will find it useful.&lt;/p&gt;

&lt;p&gt;I’d like to share with you what I did to make sure that the project doesn’t end up in the dustbin of history. I will concentrate on open source software, but the following advice may as well apply to any creative endeavor.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Build a solution&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Look around - think about the tools and products you use every day and the underlying problems they solve.&lt;/p&gt;

&lt;p&gt;Instead of identifying a solution first, the initial step is to identify the problem. &lt;strong&gt;The key here is to be very specific about the problem you are identifying.&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Once you’ve identified the problem, the next step is to ideate possible solutions, and they don’t have to necessarily be technical solutions.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Then, from those proposed solutions, create prototypes and begin to test each one.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Continue testing and refining the prototypes until you have enough validation to move full-steam ahead with the one that is working.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Read more in my article: &lt;a href="https://dev.to/liyasthomas/solve-your-own-problem-everything-else-will-follow-12bc"&gt;Solve your own problem, everything else will follow&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Build in public&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Document your journey of building the project. Engage with your users in public forums like &lt;a href="https://dev.to"&gt;dev.to&lt;/a&gt;. Write blogs and articles, talk to your audience, share your milestones, ask for help, get feedback and iterate over the product.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Build for public&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Ship early, ship often. Release the first version as soon as it’s useful. Don’t wait for it to be perfect. For inspiration, &lt;a href="https://codepen.io/liyasthomas/full/XWNGRoo"&gt;here's the initial public MVP release of Hoppscotch&lt;/a&gt;. You don’t have to be satisfied with it. You’ll never be. But you should be eager for some feedback.&lt;/p&gt;

&lt;p&gt;When you add a useful feature to your project, you don’t have to wait for anything to release it or deploy it. It just has to work. The feedback loop with inputs from other people will tell you whether what you’re building makes sense or whether you should take it in other directions. It’s good to get that feedback as soon as possible.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#roadmap"&gt;
  &lt;/a&gt;
  Roadmap
&lt;/h3&gt;

&lt;p&gt;Me and &lt;a href="https://dev.to/andrewtheant"&gt;Andrew Bastin&lt;/a&gt; having been building Hoppscotch in public for the past ~2 years. Today is the starting point of many exciting moves and features that will come to Hoppscotch from the very beginning of next month.&lt;/p&gt;

&lt;p&gt;We started to work on different features among which are the capability for teams to collaborate in real-time, workspaces, and some others you'll hear of soon. As always, we are grounding our work on the multiple insights that our users gave us and we are more grateful than ever to have such a committed community.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;To put it in a nutshell, we'll work on our main focus and priority: making our users happy with new features and improving Hoppscotch as much as we can do.&lt;/p&gt;

&lt;p&gt;Contact: &lt;a href="mailto:liyas@hoppscotch.io"&gt;liyas@hoppscotch.io&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#join-us-were-hiring"&gt;
  &lt;/a&gt;
  Join us - we're hiring!
&lt;/h3&gt;

&lt;p&gt;Join our journey to build Hoppscotch for an API-first software era.&lt;/p&gt;

&lt;p&gt;We're hiring in product, engineering, and design.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://hoppscotch.io/careers"&gt;Apply now ✨&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Previously, I wrote about:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/liyasthomas/how-hoppscotch-is-building-an-open-source-api-development-ecosystem-5cl7"&gt;How Hoppscotch is building an open source "API development ecosystem"&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/liyasthomas/create-teams-for-collaboration-in-hoppscotch-58a"&gt;Create Teams for Collaboration in Hoppscotch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
    </item>
    <item>
      <title>Major Difference Between UI/UX</title>
      <author>Danish Saleem</author>
      <pubDate>Mon, 03 Jan 2022 10:27:47 +0000</pubDate>
      <link>https://dev.to/mrdanishsaleem/major-difference-between-uiux-5g5k</link>
      <guid>https://dev.to/mrdanishsaleem/major-difference-between-uiux-5g5k</guid>
      <description>&lt;h2&gt;
  &lt;a href="#ui-user-interface-contains"&gt;
  &lt;/a&gt;
  UI (User Interface) Contains:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Visual Aspect&lt;/li&gt;
&lt;li&gt;Graphics&lt;/li&gt;
&lt;li&gt;Color&lt;/li&gt;
&lt;li&gt;Layout&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#ux-user-experience-contains"&gt;
  &lt;/a&gt;
  UX (User Experience) Contains:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Psychology&lt;/li&gt;
&lt;li&gt;Placements&lt;/li&gt;
&lt;li&gt;Wireframes&lt;/li&gt;
&lt;li&gt;Accessibility&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In short, UI is the element which the user interacts with. UX is the experience the user has while using the system.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#lets-connect-you-can-follow-me-on"&gt;
  &lt;/a&gt;
  Let's connect 💜 You can follow me on
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://twitter.com/MrDanishSaleem"&gt;Twitter&lt;/a&gt;, &lt;a href="https://www.instagram.com/mrdanishsaleem/"&gt;Instagram&lt;/a&gt; &amp;amp; &lt;a href="https://github.com/mrdanishsaleem/"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you like this post. Kindly support me by &lt;a href="https://www.buymeacoffee.com/mrdanishsaleem"&gt;Buying Me a Coffee&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qyC5Wtwl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fefzbxbnwww7tkght33w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qyC5Wtwl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fefzbxbnwww7tkght33w.png" alt="Buy Me a Coffee" width="880" height="247"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>design</category>
      <category>productivity</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Amazing Flask Resources FOR FREE!</title>
      <author>CodeWithKenn</author>
      <pubDate>Mon, 03 Jan 2022 10:26:27 +0000</pubDate>
      <link>https://dev.to/codewithkenn/amazing-flask-resources-for-free-4bkg</link>
      <guid>https://dev.to/codewithkenn/amazing-flask-resources-for-free-4bkg</guid>
      <description>&lt;p&gt;We live in a world full of resources and data. Being a Python Developer can't escape the trend. That being said, in this article you're going to get all the resources you need to get started for the Journey.&lt;/p&gt;

&lt;p&gt;After learning Python basics, you'll find yourself being overwhelmed with a lot of information, and this can be very hard to go on. It becomes easier to get trapped in the Tutorial Hell 🔥.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#brief-description-of-flask"&gt;
  &lt;/a&gt;
  Brief Description of Flask
&lt;/h1&gt;

&lt;p&gt;Flask is a micro web framework written in Python. It is classified as a microframework because it does not require particular tools or libraries. &lt;/p&gt;

&lt;p&gt;In other words, The Flask Framework is a Python platform that provides a foundation for developing software applications using Python Programming language. &lt;/p&gt;

&lt;p&gt;If your goal is to use Python for Web Development apps, Flask is what you need (sort of) for the Journey. Flask helps you set the Backend of your Web App. It's equivalent to Django (Another Python Backend Framework), NodeJS, Ruby on Rails, and so on.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What is Special about Flask is its simplicity, there are not many things to get overwhelmed, You only get what you need, simply. 🤙&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;That being said, using your favorite front-end technology (React, Vue, Angular, Svelte, or whatever you prefer), before jumping to read on the resources, you really have to determine what you need, exactly. Because, as we just said at the beginning, there are tons of resources and information you don't need, but still it makes you overwhelmed... &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#check-these-resources"&gt;
  &lt;/a&gt;
  Check these Resources
&lt;/h1&gt;

&lt;p&gt;As they are plenty of them, here are the two main resources you can use as references to go and check according to what you need:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#refresh-the-memory-with-the-fundamentals"&gt;
  &lt;/a&gt;
  Refresh the memory with the Fundamentals
&lt;/h3&gt;

&lt;p&gt;Without the fundamentals, there is no way to bring innovation, meaning there is a necessity of getting a foundation. Here are the main resources:&lt;/p&gt;

&lt;p&gt;⚡ &lt;a href="https://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-i-hello-world"&gt;The Flask Mega-Tutorial&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;⚡ &lt;a href="https://medium.com/javarevisited/5-best-python-flask-courses-for-beginners-2f262f8e23da"&gt;Five Best Python Flask Courses You need&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#get-the-resources-you-need-to-build-realworld-projects"&gt;
  &lt;/a&gt;
  Get the Resources you need to Build Real-world Projects
&lt;/h3&gt;

&lt;p&gt;Knowing the Fundamentals isn't sufficient for real-world projects, you need to know topics like plugins (to avoid reinventing the wheel). Get the resources here:&lt;/p&gt;

&lt;p&gt;⚡ &lt;a href="https://github.com/humiaozuzu/awesome-flask"&gt;Awesome Flask Links&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;⚡ &lt;a href="https://github.com/realpython/discover-flask"&gt;Flask for your Project&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#get-the-benefit-of-the-flask-community"&gt;
  &lt;/a&gt;
  Get the Benefit of the Flask Community
&lt;/h3&gt;

&lt;p&gt;Coding, but Stuck with some bugs? Here is the Solution, Go and ask the Community:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.reddit.com/r/flask/"&gt;Flask Subreddit Community&lt;/a&gt;&lt;br&gt;
 &lt;a href="https://www.reddit.com/r/Python/"&gt;Python Subreddit Community&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks for reading this article, many others are coming very soon, Feel free to subscribe 🤙.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lets-connect"&gt;
  &lt;/a&gt;
  🌎 Let's connect
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://twitter.com/CodeWithKenn"&gt;Twitter&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/KennStack01"&gt;Github&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.linkedin.com/in/kennkibadi/"&gt;LinkedIn&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.instagram.com/codewithkenn_/"&gt;Instagram&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>python</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>What if CSS libraries were countries? - ⚔️ Game of Codes project 🛡️</title>
      <author>Michal Szymanski</author>
      <pubDate>Mon, 03 Jan 2022 10:15:56 +0000</pubDate>
      <link>https://dev.to/ascensus_mdb/what-if-css-libraries-were-countries-game-of-codes-project-52j8</link>
      <guid>https://dev.to/ascensus_mdb/what-if-css-libraries-were-countries-game-of-codes-project-52j8</guid>
      <description>&lt;p&gt;🐉 Hi to all! My name is Michał and apart from being a web developer adn MDB founder I am also a huge fan of history, maps and fantasy &lt;/p&gt;

&lt;p&gt;⚔️ Over the years, observing the world of technologies, I could not help but feel that it is a great material for creating a separate universe that could become the basis for an extremely interesting story &lt;/p&gt;

&lt;p&gt;🗺️ This project is purely for fun. Using real data, such as the number of NPM downloads, stars on github or website traffic, I tried to measure the "power" of a given technology and visualize it with quasi-historical maps.&lt;/p&gt;

&lt;p&gt;🛡️ Anyway - if you're curious about what front-end technologies visualized as states would look like, read on.&lt;/p&gt;

&lt;p&gt;And if you have any idea how this story and this universe could become more interesting, or more in line with real statistics related to the front-end - let me know in the comment!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://gameofcodes.art/css.html"&gt;https://gameofcodes.art/css.html&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Cem Karaca Telegram Bot</title>
      <author>Lucifer25x</author>
      <pubDate>Mon, 03 Jan 2022 10:15:32 +0000</pubDate>
      <link>https://dev.to/lucifer25x/cem-karaca-telegram-bot-1gf6</link>
      <guid>https://dev.to/lucifer25x/cem-karaca-telegram-bot-1gf6</guid>
      <description>&lt;p&gt;I created Telegram bot for Cem Karaca songs.&lt;br&gt;
My aim is to introduce the songs of Cem Karaca. Cem Karaca is great Turkish singer, songwriter and composer and my favorite singer. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#source-code-and-for-more-detail"&gt;
  &lt;/a&gt;
  Source code and for more detail:
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/Lucifer25x/cem-karaca"&gt;https://github.com/Lucifer25x/cem-karaca&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#about-usage-of-bot"&gt;
  &lt;/a&gt;
  About usage of bot:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;/start - Start bot&lt;/li&gt;
&lt;li&gt;/help - About bot and usage&lt;/li&gt;
&lt;li&gt;/music - Random song&lt;/li&gt;
&lt;li&gt;/about - Little information about Cem Karaca&lt;/li&gt;
&lt;li&gt;/albums - Cem Karaca Albums&lt;/li&gt;
&lt;li&gt;/contact - Contact&lt;/li&gt;
&lt;li&gt;/search - For searching song&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are 139 songs for now. But if you have advice, you can make a pull request.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#used-dependencies"&gt;
  &lt;/a&gt;
  Used dependencies:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;dotenv : 10.0.0&lt;/li&gt;
&lt;li&gt;image-url-validator : 1.0.4&lt;/li&gt;
&lt;li&gt;nodemon : 2.0.15&lt;/li&gt;
&lt;li&gt;telegraf : 4.5.2&lt;/li&gt;
&lt;li&gt;ytdl-core : 4.9.2&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>music</category>
      <category>opensource</category>
      <category>programming</category>
    </item>
    <item>
      <title>How to Secure your NodeJs Express JavaScript Application - part 1</title>
      <author>SmartScanner</author>
      <pubDate>Mon, 03 Jan 2022 10:07:04 +0000</pubDate>
      <link>https://dev.to/smartscanner/how-to-secure-your-nodejs-express-javascript-application-part-1-4l26</link>
      <guid>https://dev.to/smartscanner/how-to-secure-your-nodejs-express-javascript-application-part-1-4l26</guid>
      <description>&lt;p&gt;Express is a fast, unopinionated, and minimalist web framework for Node.js. It has been a de facto choice for creating a web-server application in Node.js. Read these series if you want to use Express in your application.&lt;/p&gt;

&lt;p&gt;Let's see how you can make Express more secure.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#use-updated-express-version-and-any-other-npm-package"&gt;
  &lt;/a&gt;
  Use Updated Express Version (and any other npm package)
&lt;/h2&gt;

&lt;p&gt;Old versions of Express have vulnerabilities like &lt;a href="https://www.thesmartscanner.com/vulnerability-list/web-server-path-traversal"&gt;Path traversal (CVE-2017-14849)&lt;/a&gt;. The best practice is to use the latest stable packages to mitigate such vulnerabilities. You can use the &lt;code&gt;npm audit&lt;/code&gt; command to find out known vulnerabilities in your Nodejs application. Then you can fix them by running the &lt;code&gt;npm audit fix&lt;/code&gt; command. Make sure to get 0 vulnerabilities in the report of the npm audit command.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#secure-your-http-headers"&gt;
  &lt;/a&gt;
  Secure your HTTP Headers
&lt;/h2&gt;

&lt;p&gt;Proper HTTP headers can prevent security vulnerabilities like Cross-Site Scripting, Click-jacking, Packet sniffing and, information disclosure. It's better not to use Express with its default HTTP headers.&lt;br&gt;
Try the &lt;a href="https://www.npmjs.com/package/helmet"&gt;Helmet&lt;/a&gt; npm package for hardening the HTTP headers of your Express project. Below is a sample code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;helmet&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;helmet&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;helmet&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

&lt;span class="c1"&gt;// ...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Read the &lt;a href="https://www.thesmartscanner.com/blog/complete-guide-to-http-headers-for-securing-websites-cheat-sheet"&gt;Complete guide to HTTP Headers&lt;/a&gt; for more detailed information about HTTP Headers security.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#validate-input"&gt;
  &lt;/a&gt;
  Validate Input
&lt;/h2&gt;

&lt;p&gt;Hackers should find a way into your application and, request parameters are their first choice. All the injection vulnerabilities like &lt;a href="https://www.thesmartscanner.com/vulnerability-list/sql-injection"&gt;SQL Injection&lt;/a&gt;, &lt;a href="https://www.thesmartscanner.com/vulnerability-list/os-command-execution"&gt;Command Injection&lt;/a&gt;, &lt;a href="https://www.thesmartscanner.com/vulnerability-list/expression-language-injection"&gt;Expression Language injection&lt;/a&gt;, and many others occur when unvalidated user input is directly used in performing tasks.&lt;/p&gt;

&lt;p&gt;Consider below code which gets your name in the &lt;code&gt;name&lt;/code&gt; query parameter and displays it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you send a request like &lt;code&gt;http://localhost:3000/?name[foo]=bar&lt;/code&gt; then you will receive an Object instead of a String name. This is an attack known as HTTP Parameter Pollution (HPP). It can be very scary when working with a no-SQL database like MongoDB.&lt;/p&gt;

&lt;p&gt;Before processing any &lt;code&gt;request&lt;/code&gt; parameter, validate the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Input type (either String, Number, Boolean, etc.)&lt;/li&gt;
&lt;li&gt;Input boundaries: Check range for numbers, length, and acceptable characters for strings&lt;/li&gt;
&lt;li&gt;Input format: Check for input patterns like emails, IP addresses, etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can use &lt;a href="https://www.npmjs.com/package/hpp"&gt;hpp&lt;/a&gt; npm package for preventing HPP attacks explained above.&lt;/p&gt;

&lt;p&gt;Input validation is a broad topic. It can be very tricky especially dealing with rich user content. You can read &lt;a href="https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html"&gt;this article&lt;/a&gt; for an in-depth review.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sanitize-output"&gt;
  &lt;/a&gt;
  Sanitize Output
&lt;/h2&gt;

&lt;p&gt;Below sample code exposes a Cross-Site scripting (XSS) vulnerability.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you run the application and open &lt;code&gt;http://localhost:2000/?name=&amp;lt;script&amp;gt;alert(1)&amp;lt;/script&amp;gt;&lt;/code&gt; URL, the &lt;code&gt;alert(1)&lt;/code&gt; JavaScript code will be executed. XSS bug allows an attacker to run any client-side code to steal session tokens, passwords or display wrong information.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0HYO8vhC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x1w63ys9asvl9rhrci7m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0HYO8vhC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x1w63ys9asvl9rhrci7m.png" alt="Cross-Side Scripting Vulnerability" width="880" height="293"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To prevent the XSS you have to use proper encoding before rendering input parameters in the response. You can use &lt;a href="https://github.com/ESAPI/node-esapi"&gt;node-esapi&lt;/a&gt; or &lt;a href="https://github.com/component/escape-html"&gt;escape-html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Below code is a fix for the above XSS:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;ESAPI&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;node-esapi&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="nx"&gt;encodedName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;ESAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;encoder&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;encodeForHTML&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;encodedName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#use-anti-csrf"&gt;
  &lt;/a&gt;
  Use Anti CSRF
&lt;/h2&gt;

&lt;p&gt;Processing form data and performing actions only by relying on the form data will cause a Cross-Site Request Forgery (CSRF).&lt;br&gt;
If the same request data (either form data or URL query) causes the same action on your application then you have a CSRF issue. It gets serious when the action is sensitive like, creating a new user or deleting data.&lt;/p&gt;

&lt;p&gt;Attackers use CSRF to perform actions on behalf of an authorized user while the user is unaware of this action. Below sample code is an example that kills the app by a CSRF.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;&amp;lt;h1&amp;gt;Admin Panel&amp;lt;/h1&amp;gt;&amp;lt;a href=/kill&amp;gt;kill&amp;lt;/a&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/kill&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You might wonder that adding cookie-based session management cannot prevent CSRF because Cookies are automatically sent by browsers. To prevent CSRF you should send random tokens within each request and validate the existence of the CSRF token before processing the request.&lt;/p&gt;

&lt;p&gt;You can use the &lt;a href="https://www.npmjs.com/package/csurf"&gt;csurf&lt;/a&gt; npm package for integrating CSRF prevention in your Express application.&lt;/p&gt;

&lt;p&gt;In next article we will see how to prevent brute force attacks, command execution and information disclosure vulnerabilities.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>node</category>
      <category>express</category>
      <category>security</category>
    </item>
    <item>
      <title>Introduction to Nuxt 3 modules</title>
      <author>Jakub Andrzejewski</author>
      <pubDate>Mon, 03 Jan 2022 09:42:30 +0000</pubDate>
      <link>https://dev.to/baroshem/introduction-to-nuxt-3-modules-5h8o</link>
      <guid>https://dev.to/baroshem/introduction-to-nuxt-3-modules-5h8o</guid>
      <description>&lt;p&gt;&lt;a href="https://v3.nuxtjs.org/"&gt;Nuxt 3&lt;/a&gt; beta dropped few months ago and with it, several modules have been updated to work well with a new Nuxt 3 architecture. For the previous version of Nuxt (also the most stable right now), we had a repository template for building new Nuxt 2 modules with it. These modules could be then released as NPM packages and easy downloaded for the users to provide useful functionality like PWA, i18n, Google Analytics and many more that you can check &lt;a href="https://modules.nuxtjs.org/"&gt;here&lt;/a&gt;. As there is no Nuxt 3 module template repository nor an article how to create one, I thought it would be a good idea to create one. &lt;/p&gt;

&lt;p&gt;In this article, we will be taking a look at &lt;a href="https://github.com/nuxt-community/strapi-module"&gt;@nuxtjs/strapi&lt;/a&gt; module as it is Nuxt 3 compatible, very well developed and documented.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NZAZ9059--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/72x15bd35nrj83yd1j3w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NZAZ9059--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/72x15bd35nrj83yd1j3w.png" alt="Nuxt Strapi Module directory Structure" width="598" height="852"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To make this article short and straight forward, I will focus only on the parts that will allow you to use the existing Strapi module and modify it to build your own module.&lt;/p&gt;

&lt;p&gt;If you are completely new to creating Nuxt modules I would recommend reading first my &lt;a href="https://dev.to/baroshem/introduction-to-nuxt-modules-21a1"&gt;previous article&lt;/a&gt; about creating Nuxt modules or you can visit Nuxt official &lt;a href="https://nuxtjs.org/docs/directory-structure/modules"&gt;documentation&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#-raw-docs-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;docs&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;For Nuxt 3, recommended docs approach is to use a new tool called Docus. It allows to build markdown based applications very easily that are very, very fast as well (which is perfect for documentation websites).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-docusconfigts-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;docus.config.ts&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;In this directory, you will have a &lt;code&gt;docus.config.ts&lt;/code&gt; file that is responsible for your Docus configuration. The example from Strapi docs looks like follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@nuxtjs/strapi&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://strapi.nuxtjs.org&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;theme&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;colors&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;primary&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#8E75FF&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;prism&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#F4F4F5 dark:#1F2937&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;header&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;logo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;light&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/logo-light.svg&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;dark&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/logo-dark.svg&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;twitter&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@nuxt_js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;github&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;repo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;nuxt-community/strapi-module&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;branch&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;main&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;releases&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see here, we are defining several properties here like SEO, colors, social media accounts, and more.  You can modify all the values here in order to suit your module (like your Twitter handle, colors, etc).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-nuxtconfigjs-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;nuxt.config.js&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;In this directory you will find a &lt;code&gt;nuxt.config.js&lt;/code&gt; file as well but it will work a bit differently than what we usually had in Nuxt applications (you can ignore &lt;code&gt;buildModules&lt;/code&gt; and &lt;code&gt;plausible&lt;/code&gt; part as this is only related to Strapi module):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;withDocus&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;docus&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;withDocus&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;rootDir&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;buildModules&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue-plausible&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="na"&gt;plausible&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;domain&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;strapi.nuxtjs.org&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For this configuration file you can only use the &lt;code&gt;rootDir: __dirname&lt;/code&gt; part like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;withDocus&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;docus&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;withDocus&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;rootDir&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#-raw-windiconfigts-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;windi.config.ts&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;Docus uses WindiCSS by default as a styling and utility framework. In this file, you can set your WindiCSS configuration like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;colors&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;windicss/colors&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;theme&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;colors&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;gray&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;colors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;coolGray&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#-raw-static-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;static&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;In this directory, you can add custom icons, images, and logos for your module. The best approach here is to name the files the same way as the one provided by the Strapi module so that you would not have to modify other files to have the same result but with different images.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-pages-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;pages&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;In this directory, you will define the pages of your documentation. &lt;code&gt;1.index&lt;/code&gt; will be responsible for displaying homepage and you can add your custom SEO values like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;---
title: "Introduction"
description: '@nuxtjs/strapi is a Nuxt 3 module for first class integration with Strapi.'
---
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For other pages you can define them with a number, dot, and a name i.e. &lt;code&gt;3.Advanced&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#-raw-example-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;example&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;In this directory, you can test how your module works with the real Nuxt application without moving to another project. This directory also includes the &lt;code&gt;nuxt.config.ts&lt;/code&gt; file and an example index page to display some result to the browser.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-nuxtconfigts-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;nuxt.config.ts&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;Here, as with all Nuxt applications, you can define your Nuxt configuration with a new module (in this case, a Strapi module). We are importing our local module here and adding some configuration values like url to make it work as expected.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;defineNuxtConfig&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;nuxt3&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="kr"&gt;module&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../src/module&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;defineNuxtConfig&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;buildModules&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="kr"&gt;module&lt;/span&gt;
  &lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="na"&gt;strapi&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;http://localhost:1337&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Just keep in mind that there might be some issues with your module that you wont be able to discover with such a local testing. For that I would recommend using Verdaccio to imitate a real npm registry and try to use this package then.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-pagesindexvue-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;pages/index.vue&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;In this file, you can create your page with components in order to test how your module is behaving like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight vue"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;@nuxtjs/strapi&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{{&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="si"&gt;}}&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"ts"&lt;/span&gt; &lt;span class="na"&gt;setup&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useStrapiUser&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#-raw-src-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;src&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;This directory is the most important part of your Nuxt 3 module. In here, you will be writing all your module logic, creating custom components or composables that will allow your users to use full functionality with the best Developer Experience possible.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-modulets-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;module.ts&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;In here you will define how your module will behave. This is rather a huge file but all things are important so bare with me. We will get through it together :D&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;defu&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;defu&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;resolve&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;pathe&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;defineNuxtModule&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;addPlugin&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@nuxt/kit&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;defineNuxtModule&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;meta&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@nuxtjs/strapi&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;configKey&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;strapi&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;compatibility&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;nuxt&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;^3.0.0&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;bridge&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;defaults&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;STRAPI_URL&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;http://localhost:1337&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;prefix&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/api&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;v4&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="nx"&gt;setup&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;nuxt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="c1"&gt;// Default runtimeConfig&lt;/span&gt;
    &lt;span class="nx"&gt;nuxt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;publicRuntimeConfig&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;strapi&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;defu&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;nuxt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;publicRuntimeConfig&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;strapi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;prefix&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prefix&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;version&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;

    &lt;span class="c1"&gt;// Transpile runtime&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;runtimeDir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./runtime&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;nuxt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;build&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;transpile&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;runtimeDir&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;// Add plugin to load user before bootstrap&lt;/span&gt;
    &lt;span class="nx"&gt;addPlugin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;runtimeDir&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;strapi.plugin&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="c1"&gt;// Add strapi composables&lt;/span&gt;
    &lt;span class="nx"&gt;nuxt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hook&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;autoImports:dirs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dirs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;dirs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;runtimeDir&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;composables&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Nuxt Module configuration properties explained:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;meta&lt;/code&gt; - is responsible for providing meta information about your module like name, configKey, or Nuxt 3 compatibility.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;defaults&lt;/code&gt; - this object will be used when a user will not pass any data to your module. In the case of Strapi, if a user will not pass any custom Strapi url, then a default &lt;code&gt;http://localhost:1337&lt;/code&gt; will be used instead. It works the same for any other configuration property defined in the defaults object.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;setup&lt;/code&gt; - this method is called when a module is being created. In here you can add properties defined in module configuration to public or private runtime config, register composables, add components, plugins, and many more.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you want, you can also provide some type definitions here by including the following lines in your &lt;code&gt;module.ts&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./types&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kr"&gt;declare&lt;/span&gt; &lt;span class="kr"&gt;module&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@nuxt/schema&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;ConfigSchema&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;publicRuntimeConfig&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;strapi&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;StrapiOptions&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;NuxtConfig&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;strapi&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;StrapiOptions&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;NuxtOptions&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;strapi&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;StrapiOptions&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#-raw-runtimeplugints-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;runtime/plugin.ts&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;This file will be used to define a logic for an underlying Nuxt plugin that will be registered thanks to a module.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useStrapiAuth&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./composables/useStrapiAuth&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;defineNuxtPlugin&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#app&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;defineNuxtPlugin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;fetchUser&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useStrapiAuth&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;fetchUser&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In case of Strapi module, when registering the plugin, it will automatically try to fetch the user right after module initialization. In Nuxt 2, plugin was used mainly for extending the Nuxt context with a new variable like &lt;code&gt;$strapi&lt;/code&gt; but in Nuxt 3 it can be also done thanks to public and private runtime config.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-runtimecomposables-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;runtime/composables&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;In here, you can define your custom composables that a user can try in their Nuxt 3 application. Composables can be used to provide many different functionalities. Let's take a look at following examples:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;This composable is used to register a state that is mainained both on the server and client by using &lt;code&gt;useState&lt;/code&gt; composable.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Ref&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;StrapiUser&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../../types&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#app&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;useStrapiUser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="nx"&gt;Ref&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;StrapiUser&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;StrapiUser&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;strapi_user&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;This composable is used to get the strapi version from the runtime config.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;StrapiOptionsVersion&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../../types&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useRuntimeConfig&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#app&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;useStrapiVersion&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="nx"&gt;StrapiOptionsVersion&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;config&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useRuntimeConfig&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;strapi&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;version&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;This composable is used to get the strapi token
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useCookie&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useNuxtApp&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#app&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;useStrapiToken&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;nuxtApp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useNuxtApp&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

  &lt;span class="nx"&gt;nuxtApp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_cookies&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;nuxtApp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_cookies&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;nuxtApp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_cookies&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;strapi_jwt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;nuxtApp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_cookies&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;strapi_jwt&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;cookie&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useCookie&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kr"&gt;string&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;strapi_jwt&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nx"&gt;nuxtApp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_cookies&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;strapi_jwt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;cookie&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;cookie&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;And many more that you can check in the nuxt strapi module documentation or repository.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#-raw-buildconfigts-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;build.config.ts&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;In here, you can define how your module should be built in order to have it ES modules form. You can define rollup settings, entries of the module files and external libraries that should not be compiled.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;defineBuildConfig&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;unbuild&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;defineBuildConfig&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;declaration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;rollup&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;cjsBridge&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;entries&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./src/module&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;input&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;src/runtime/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;outDir&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dist/runtime&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="na"&gt;externals&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@nuxt/kit&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@nuxt/schema&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;Now, you know how the Nuxt 3 compatible modules work and how to build one from scratch. Well done! This is however an introduction so if you want to dig deeper I would recommend reviewing the official docs, discord channel and github for more knowledge in this area.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bonus"&gt;
  &lt;/a&gt;
  Bonus
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/nuxt-community/strapi-module"&gt;https://github.com/nuxt-community/strapi-module&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://v3.nuxtjs.org/docs/directory-structure/plugins"&gt;https://v3.nuxtjs.org/docs/directory-structure/plugins&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/WjTIDGpq_JE"&gt;https://youtu.be/WjTIDGpq_JE&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>nuxt</category>
      <category>module</category>
      <category>nuxt3</category>
      <category>vue</category>
    </item>
    <item>
      <title>Creating you First repository on Github using git</title>
      <author>pulkit</author>
      <pubDate>Mon, 03 Jan 2022 09:37:28 +0000</pubDate>
      <link>https://dev.to/pulkitrajpal/creating-you-first-repository-on-github-using-git-3blg</link>
      <guid>https://dev.to/pulkitrajpal/creating-you-first-repository-on-github-using-git-3blg</guid>
      <description></description>
      <category>github</category>
      <category>git</category>
      <category>computerscience</category>
      <category>java</category>
    </item>
    <item>
      <title>String Slicing in Python Explained </title>
      <author>Bala Priya C</author>
      <pubDate>Mon, 03 Jan 2022 09:35:33 +0000</pubDate>
      <link>https://dev.to/balapriya/string-slicing-in-python-explained-5edg</link>
      <guid>https://dev.to/balapriya/string-slicing-in-python-explained-5edg</guid>
      <description>&lt;p&gt;String slicing lets you slice into Python strings, and work with their &lt;code&gt;slices&lt;/code&gt;, or &lt;code&gt;substrings&lt;/code&gt;—instead of the whole string.&lt;/p&gt;

&lt;p&gt;As strings in Python are &lt;em&gt;immutable&lt;/em&gt;, you cannot change them in place. In this tutorial, you'll learn to slice Python strings and work with substrings.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#python-string-slicing-syntax"&gt;
  &lt;/a&gt;
  Python String Slicing Syntax
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;stop&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;step&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above line of code:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Returns a slice of the string &lt;code&gt;&amp;lt;str&amp;gt;&lt;/code&gt;—starting at index &lt;code&gt;start&lt;/code&gt;, extending up to &lt;code&gt;stop-1&lt;/code&gt; in steps of &lt;code&gt;step&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;start&lt;/code&gt; index is &lt;em&gt;optional&lt;/em&gt;: the slice starts from the beginning of the string by &lt;em&gt;default&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;stop&lt;/code&gt; index is also &lt;em&gt;optional&lt;/em&gt;: the slice extends up to the end of the string by &lt;em&gt;default&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;step&lt;/code&gt; value is optional too. The default value of step is &lt;code&gt;1&lt;/code&gt; and includes all characters in the string.&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#python-string-slicing-example"&gt;
  &lt;/a&gt;
  Python String Slicing Example
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;my_str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Python3"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;▶ Let's use &lt;code&gt;enumerate()&lt;/code&gt; and examine the characters at each index in the string.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;idx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;char&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;enumerate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;my_str&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"At index &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;idx&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;: letter &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;char&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Output
&lt;/span&gt;&lt;span class="n"&gt;At&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;letter&lt;/span&gt; &lt;span class="n"&gt;P&lt;/span&gt;
&lt;span class="n"&gt;At&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;letter&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;
&lt;span class="n"&gt;At&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;letter&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;
&lt;span class="n"&gt;At&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;letter&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="n"&gt;At&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;letter&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt;
&lt;span class="n"&gt;At&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;letter&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;
&lt;span class="n"&gt;At&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;letter&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above code, you've used the &lt;code&gt;enumerate()&lt;/code&gt; function in conjunction with the &lt;code&gt;for&lt;/code&gt; loop. This lets you loop through iterables, and access items along with their indices simultaneously—without having to the &lt;code&gt;range()&lt;/code&gt; function to get the indices.&lt;/p&gt;

&lt;p&gt;▶ Let's now use string slicing.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# With `start` and `stop` indices
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;my_str&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="c1"&gt;# Output: ython
&lt;/span&gt;
&lt;span class="c1"&gt;# Without `stop` index
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;my_str&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:])&lt;/span&gt;
&lt;span class="c1"&gt;# Output: ython3
&lt;/span&gt;
&lt;span class="c1"&gt;# Without `start` index
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;my_str&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="c1"&gt;# Output: Pytho
&lt;/span&gt;
&lt;span class="c1"&gt;# With `step = 2`, slice includes every second character
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;my_str&lt;/span&gt;&lt;span class="p"&gt;[::&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="c1"&gt;# Output: Pto3
&lt;/span&gt;
&lt;span class="c1"&gt;# Without `start`, `stop` and `step`: slice is entire string
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;my_str&lt;/span&gt;&lt;span class="p"&gt;[::])&lt;/span&gt;
&lt;span class="c1"&gt;# Output: Python3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#python-string-slicing-with-negative-step"&gt;
  &lt;/a&gt;
  Python String Slicing with Negative Step
&lt;/h2&gt;

&lt;p&gt;When you set &lt;code&gt;step&lt;/code&gt; to a negative value, you can get slices starting from the end of the string—reverse substrings.&lt;/p&gt;

&lt;p&gt;If &lt;code&gt;step = -1&lt;/code&gt; you get a slice starting from the end of the string, and including every character.&lt;/p&gt;

&lt;p&gt;This can be super handy when you'd like to &lt;em&gt;reverse&lt;/em&gt; a string, like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;my_str&lt;/span&gt;&lt;span class="p"&gt;[::&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="c1"&gt;# Output: 3nohtyP
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;To sum up, &lt;code&gt;&amp;lt;str&amp;gt;[start:stop:step]&lt;/code&gt; is the syntax to obtain string slices or substrings in Python.&lt;/p&gt;

&lt;p&gt;Now that you've learned how to slice strings, it's time to put your skills to practice, maybe? Happy learning and coding!&lt;/p&gt;




&lt;p&gt;Cover image: Photo by Tamanna Rumee on Unsplash&lt;/p&gt;

</description>
      <category>python</category>
      <category>programming</category>
      <category>codenewbie</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Turning My 2021 Hashnode Tech Awards into NFTS - A walkthrough of how I did it</title>
      <author>Unclebigbay</author>
      <pubDate>Mon, 03 Jan 2022 09:05:42 +0000</pubDate>
      <link>https://dev.to/unclebigbay/turning-my-2021-hashnode-tech-awards-into-nfts-a-walkthrough-of-how-i-did-it-4p6</link>
      <guid>https://dev.to/unclebigbay/turning-my-2021-hashnode-tech-awards-into-nfts-a-walkthrough-of-how-i-did-it-4p6</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--t1hDwLRX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640341418722/vRDb0elqB.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t1hDwLRX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640341418722/vRDb0elqB.gif" alt="Merry Christmas from unclebigbay" width="880" height="140"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So, After reading  &lt;a href="https://web3.hashnode.com/how-to-mint-an-nft-a-step-by-step-guide-to-creating-your-first-nft?utm_campaign=The%20Oversimplified%20Newsletter&amp;amp;utm_medium=email&amp;amp;utm_source=Revue%20newsletter"&gt;How To Mint an NFT - A Step-by-Step Guide To Creating Your First NFT&lt;/a&gt; by @&lt;a href="https://dev.to@heyOnuoha"&gt;Favor Onuoha&lt;/a&gt;, I decided to Mint my  &lt;a href="https://unclebigbay.com/badges"&gt;Hashnode award badges&lt;/a&gt; as my first NFT and I will be showing you how I did it.&lt;/p&gt;

&lt;p&gt;I don't know if that's actually a good idea, but who cares, that's what I feel like minting.&lt;/p&gt;

&lt;p&gt;Minting simply means to create something new on the blockchain, so in this article, you will experience how I created my first ever NFT on the blockchain.&lt;/p&gt;

&lt;p&gt;Let's get started.&lt;/p&gt;

&lt;p&gt;I will be making use of &lt;a href="https://metamask.io/"&gt;metamask&lt;/a&gt; and &lt;a href="https://opensea.io/"&gt;opensea&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-metamask"&gt;
  &lt;/a&gt;
  What is Metamask
&lt;/h3&gt;

&lt;p&gt;balance/authentication/authorization&lt;/p&gt;

&lt;p&gt;In case you are hearing about MetaMask for the first time, MetaMask is basically a cryptocurrency wallet holder that allows you to interact with your Ethereum blockchain wallet account and can be used to connect to other blockchain applications.&lt;/p&gt;

&lt;p&gt;Meta mask is available for iOS/Android devices and browser extensions, click &lt;a href="https://metamask.io/download.html"&gt;here&lt;/a&gt; to get yours up and running.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Keep your security phrase and password safe like your life depends on it, there's no reset phrase (password) like web2.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#what-is-opensea"&gt;
  &lt;/a&gt;
  What is OpenSea
&lt;/h3&gt;

&lt;p&gt;OpenSea is an online marketplace for non-fungible tokens (NFTs). It was founded by  &lt;a href="https://www.google.com/search?q=Devin+Finzer&amp;amp;rlz=1C1ASVC_enNG928NG928&amp;amp;oq=Devin+Finzer&amp;amp;aqs=chrome..69i57.354j0j9&amp;amp;sourceid=chrome&amp;amp;ie=UTF-8"&gt;Devin Finzer&lt;/a&gt;  and  &lt;a href="https://www.google.com/search?q=Alex+Atallah&amp;amp;rlz=1C1ASVC_enNG928NG928&amp;amp;oq=Alex+Atallah&amp;amp;aqs=chrome..69i57.290j0j9&amp;amp;sourceid=chrome&amp;amp;ie=UTF-8"&gt;Alex Atallah&lt;/a&gt; in New York on December 20, 2017.&lt;/p&gt;

&lt;p&gt;OpenSea has been around for a very long time, thanks to the Web3 and NFTs popularity explosion, we get to know about it now.&lt;/p&gt;

&lt;p&gt;It is where buying and selling of NFTs take place, this is the Alibaba of web3, you can upload your images, music, documents, and any other thing you wish to mint on the blockchain.&lt;/p&gt;

&lt;p&gt;Super happy to be minting my badges there, maybe someone will actually buy them, but I am not selling 🤪&lt;/p&gt;



&lt;h1&gt;
  &lt;a href="#setting-up-opensea-account"&gt;
  &lt;/a&gt;
  Setting up OpenSea Account
&lt;/h1&gt;

&lt;p&gt;I head to &lt;a href="https://opensea.io/"&gt;opensea.io&lt;/a&gt; and click on the create button.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YWo6fAXv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640253617844/5FEYBlA1n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YWo6fAXv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640253617844/5FEYBlA1n.png" alt="image.png" width="880" height="451"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are several wallet options to connect with, but MetaMask is the most popular and that's what I already installed.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--W1LN446K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640254036738/7jYRYm__4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W1LN446K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640254036738/7jYRYm__4.png" alt="image.png" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The MetaMask browser extension pops up immediately after selecting the MetaMask provider option.&lt;/p&gt;

&lt;p&gt;Click on the Next button.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zrBmcGW8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640254375322/VrC-ChBzku.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zrBmcGW8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640254375322/VrC-ChBzku.png" alt="image.png" width="880" height="455"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now you can be authenticated on the OpenSea marketplace, hit the connect button.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BcjwK3Bl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640254441051/rYwXcUG51.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BcjwK3Bl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640254441051/rYwXcUG51.png" alt="image.png" width="880" height="454"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Sometimes you will see the sign button instead.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mP5s-AE0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640254859780/poWwyKasq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mP5s-AE0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640254859780/poWwyKasq.png" alt="image.png" width="880" height="456"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And that's it, I'm in, we're in the OpenSea market.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Cz29lOz4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640255279419/Hf7q0Fduou.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Cz29lOz4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640255279419/Hf7q0Fduou.gif" alt="giphy.gif" width="480" height="246"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is my OpenSea dashboard.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cCaZMXnl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640254524908/kgXNUvQyW.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cCaZMXnl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640254524908/kgXNUvQyW.png" alt="image.png" width="880" height="500"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But I'm &lt;strong&gt;unclebigbay&lt;/strong&gt; and not unnamed, it makes sense because my blockchain wallet doesn't carry a &lt;strong&gt;username&lt;/strong&gt; in my profile object for OpenSea to retrieve from, web3 only cares about my wallet address.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---uBwhC4o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640255656410/2njVH8ge5.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---uBwhC4o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640255656410/2njVH8ge5.gif" alt="2718b1a856037aa99a1a552efcacd05c.498x280x55.gif" width="498" height="280"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hover on the user profile avatar on the navbar and select the setting link to update your profile on OpenSea.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2QE4BhEU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640255777075/jLgDNZRAi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2QE4BhEU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640255777075/jLgDNZRAi.png" alt="image.png" width="880" height="501"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fill in your profile details and hit the save button.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1Ez1dNpG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640255911529/AncFKBu0d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1Ez1dNpG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640255911529/AncFKBu0d.png" alt="image.png" width="880" height="490"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Profile updated.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e5-YSdqa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640255985988/lSHOXIHEh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e5-YSdqa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640255985988/lSHOXIHEh.png" alt="image.png" width="880" height="480"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;h1&gt;
  &lt;a href="#minting-my-badges"&gt;
  &lt;/a&gt;
  Minting My Badges
&lt;/h1&gt;

&lt;p&gt;The business of the day, which is to mint my hashnode badges, you can check out the awards on  &lt;a href="https://cutt.ly/RUadSgr"&gt;LinkedIn&lt;/a&gt; if you haven't seen them yet.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-nft"&gt;
  &lt;/a&gt;
  Create NFT
&lt;/h3&gt;

&lt;p&gt;Click on the create navigation link on the navbar.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--15m5x_q0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640256748928/Gx5V1D39L.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--15m5x_q0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640256748928/Gx5V1D39L.png" alt="image.png" width="880" height="475"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#nft-profile"&gt;
  &lt;/a&gt;
  NFT profile
&lt;/h3&gt;

&lt;p&gt;The two required detail of the new NFT you want to mint is the document you want to upload, check the supported document first, and the name of the NFT.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HBcwAcGj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640256469772/ElHNIRhAr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HBcwAcGj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640256469772/ElHNIRhAr.png" alt="image.png" width="880" height="436"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_x0EVGa8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640257519438/ULAfTMocl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_x0EVGa8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640257519438/ULAfTMocl.png" alt="image.png" width="880" height="434"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I will be providing an external link to redirect to &lt;a href="https://unclebigbay.com/badges"&gt;my hashnode badge page&lt;/a&gt; and a short description of the awards.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--61kSZKyQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640256598667/OUx4vSaMD.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--61kSZKyQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640256598667/OUx4vSaMD.png" alt="image.png" width="880" height="501"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zo3RhzgS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640257592469/ZL68CZEMWr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zo3RhzgS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640257592469/ZL68CZEMWr.png" alt="image.png" width="880" height="486"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I will be skipping the rest of the forms since I won't be selling my award badges 🤪.&lt;/p&gt;

&lt;p&gt;Click on the &lt;strong&gt;create&lt;/strong&gt; button to submit the NFT.&lt;/p&gt;



&lt;h1&gt;
  &lt;a href="#done-and-dusted"&gt;
  &lt;/a&gt;
  Done and Dusted
&lt;/h1&gt;

&lt;p&gt;Congratulations to me and you, we just successfully minted my very own first NFT together.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yVkuzNMG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640257725748/xy4pb_6bE.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yVkuzNMG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640257725748/xy4pb_6bE.png" alt="image.png" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can view my Hashnode award NFT badges &lt;a href="https://opensea.io/assets/0x495f947276749ce646f68ac8c248420045cb7b5e/106310183318563491576001418187544893345913273967622843574122850322892848103425/"&gt;HERE&lt;/a&gt; on OpenSea Marketplace.&lt;/p&gt;



&lt;h1&gt;
  &lt;a href="#takeaways"&gt;
  &lt;/a&gt;
  Takeaways
&lt;/h1&gt;

&lt;p&gt;Minting your awards, documents, or any asset that you own as demonstrated in this walkthrough article guarantees ownership of a unique digital asset. You can mint-supported digital assets such as JPG, PNG, GIF, SVG, MP4, WEBM, MP3, WAV, OGG, GLB, GLTF, with a max size of 100 MB on OpenSea.&lt;/p&gt;

&lt;p&gt;Sounds cool, right? You can go ahead and mint yours using the step-by-step guide in this article.&lt;/p&gt;



&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;I will be minting one of my articles very soon.&lt;/p&gt;




&lt;p&gt;Wow, what a journey, I am glad you made it to the end of this article, if you enjoyed and learned something new from this article, I will like to connect with you.&lt;/p&gt;

&lt;p&gt;Let's connect on&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; &lt;a href="https://twitter.com/intent/follow?screen_name=unclebigbay143"&gt;Twitter @unclebigbay143&lt;/a&gt; &lt;/li&gt;
&lt;li&gt; &lt;a href="https://www.linkedin.com/in/unclebigbay/"&gt;LinkedIn @unclebigbay&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;See you in the next article. Bye Bye 🙋‍♂️&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---96uVdrc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622627809083/3i7ThmW-M.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---96uVdrc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622627809083/3i7ThmW-M.png" alt="image.png" width="432" height="238"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>web3</category>
      <category>nfts</category>
    </item>
    <item>
      <title>8 Sourcegraph Search Query Features You Should Know About</title>
      <author>Prosper Otemuyiwa</author>
      <pubDate>Mon, 03 Jan 2022 09:01:51 +0000</pubDate>
      <link>https://dev.to/sourcegraph/8-sourcegraph-search-query-features-you-should-know-about-1gmc</link>
      <guid>https://dev.to/sourcegraph/8-sourcegraph-search-query-features-you-should-know-about-1gmc</guid>
      <description>&lt;p&gt;&lt;a href="https://sourcegraph.com"&gt;Sourcegraph&lt;/a&gt; is a search tool that enables developers to search, explore and better understand all of their public and private code. It supercharges developer productivity and automates large-scale code changes. &lt;/p&gt;

&lt;p&gt;In this article, I’ll explore some Sourcegraph search gems with you. &lt;/p&gt;

&lt;p&gt;Here are 8 Sourcegraph search features you should know about!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-literal-expression-search"&gt;
  &lt;/a&gt;
  1. Literal Expression Search
&lt;/h2&gt;

&lt;p&gt;By default, all search queries on Sourcegraph are treated as literal patterns. If you know the exact string you’re looking for in the codebase, then all you need to do is paste it in the query box and search.&lt;/p&gt;

&lt;p&gt;Sourcegraph interprets this search pattern literally (as the name defines it) to simplify searching for words or punctuation in your codebase.&lt;/p&gt;

&lt;p&gt;With literal search, you can find function calls, error messages, comments, notes etc. For instance, if you want to search for how to use the &lt;em&gt;browser navigator clipboard API&lt;/em&gt;, you can simply use:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;navigator.clipboard
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Search Query:&lt;/strong&gt; &lt;a href="https://sourcegraph.com/search?q=context:global+navigator.clipboard&amp;amp;patternType=literal"&gt;https://sourcegraph.com/search?q=context:global+navigator.clipboard&amp;amp;patternType=literal&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GovEm2gy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/unicodeveloper/image/upload/v1641198704/navigator-clipboard.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GovEm2gy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/unicodeveloper/image/upload/v1641198704/navigator-clipboard.gif" alt="Navigator Clipboard search" width="800" height="449"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For more info, check out a &lt;a href="https://learn.sourcegraph.com/how-to-search-code-with-sourcegraph-using-literal-patterns"&gt;detailed article about literal expression search on Sourcegraph&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-regular-expression-search"&gt;
  &lt;/a&gt;
  2. Regular Expression Search
&lt;/h2&gt;

&lt;p&gt;Sourcegraph’s query language is very powerful. One of its strengths is in the regular expression search it provides.&lt;/p&gt;

&lt;p&gt;On the search box, you need to enable the regular expression mode by clicking on the &lt;code&gt;*&lt;/code&gt; sign on the right.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oZBLjO0G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/unicodeveloper/image/upload/v1641196727/unnamed_2_zfgnmo.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oZBLjO0G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/unicodeveloper/image/upload/v1641196727/unnamed_2_zfgnmo.gif" alt="Enable regular expression" width="512" height="291"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once the regex mode is enabled, you can start using regular expressions for advanced search patterns. You can also add &lt;code&gt;patterntype:regexp&lt;/code&gt; to your queries and this will automatically enable regex mode.  &lt;/p&gt;

&lt;p&gt;Let's see a few different use cases of regex search as examples.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Find how the filesync &lt;code&gt;readFile&lt;/code&gt; and &lt;code&gt;writeFile&lt;/code&gt; methods are used in several projects.&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;fs\.(read|write)File patterntype:regexp 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Search Query:&lt;/strong&gt; &lt;a href="https://sourcegraph.com/search?q=context:global+fs%5C.%28read%7Cwrite%29File&amp;amp;patternType=regexp"&gt;https://sourcegraph.com/search?q=context:global+fs%5C.%28read%7Cwrite%29File&amp;amp;patternType=regexp&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ng4S9y94--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/unicodeveloper/image/upload/v1641200216/read-write-file-search.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ng4S9y94--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/unicodeveloper/image/upload/v1641200216/read-write-file-search.gif" alt="Read write file search" width="800" height="460"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Find real-life use cases for &lt;code&gt;Promise.all&lt;/code&gt;, &lt;code&gt;Promise.any&lt;/code&gt;, &lt;code&gt;Promise.race&lt;/code&gt;, and &lt;code&gt;Promise.allSettled&lt;/code&gt;.&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Promise.(any|race|allSettled) lang:JavaScript patterntype:regexp
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Search Query:&lt;/strong&gt; &lt;a href="https://sourcegraph.com/search?q=context:global+Promise.%28any%7Crace%7CallSettled%29+lang:JavaScript&amp;amp;patternType=regexp"&gt;https://sourcegraph.com/search?q=context:global+Promise.%28any%7Crace%7CallSettled%29+lang:JavaScript&amp;amp;patternType=regexp&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1eZ61eCq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/unicodeveloper/image/upload/v1641199017/promise-js-search.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1eZ61eCq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/unicodeveloper/image/upload/v1641199017/promise-js-search.gif" alt="Promise search" width="800" height="446"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Check out a &lt;a href="https://learn.sourcegraph.com/how-to-search-with-sourcegraph-using-regular-expression-patterns"&gt;detailed article about the regular expression search on Sourcegraph&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-structural-search"&gt;
  &lt;/a&gt;
  3. Structural Search
&lt;/h2&gt;

&lt;p&gt;Structural search gives you wings as a developer. With structural search, you can copy-paste blocks of code into the Sourcegraph search box, and accurate results will be returned.&lt;/p&gt;

&lt;p&gt;First, enable the structural search mode by clicking on the &lt;code&gt;[ ]&lt;/code&gt; sign on the right:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UXemRtjy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/unicodeveloper/image/upload/v1641199976/enable-structural-search.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UXemRtjy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/unicodeveloper/image/upload/v1641199976/enable-structural-search.gif" alt="Enable Structural search" width="800" height="345"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then you can go ahead and perform a structural search like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"exclude": [...] lang:json file:tsconfig.json patterntype:structural
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Search Query:&lt;/strong&gt; &lt;br&gt;
&lt;a href="https://sourcegraph.com/search?q=context:global+%22exclude%22:+%5B...%5D+lang:json+file:tsconfig.json&amp;amp;patternType=structural"&gt;https://sourcegraph.com/search?q=context:global+%22exclude%22:+%5B...%5D+lang:json+file:tsconfig.json&amp;amp;patternType=structural&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RGVCiJPs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/unicodeveloper/image/upload/v1641199948/exclude-structural-search.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RGVCiJPs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/unicodeveloper/image/upload/v1641199948/exclude-structural-search.gif" alt="Structural search" width="800" height="365"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To learn more, check out a &lt;a href="https://learn.sourcegraph.com/how-to-search-with-sourcegraph-using-structural-patterns"&gt;detailed article about structural search on Sourcegraph&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#4-diff-search"&gt;
  &lt;/a&gt;
  4. Diff Search
&lt;/h2&gt;

&lt;p&gt;Diff search allows you to search for code in file diffs. It makes it easy for a developer to search for code that used to exist and compare it with code that presently exists.&lt;/p&gt;

&lt;p&gt;For example, the following search…&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;repo:^github\.com/sourcegraph/sourcegraph$ type:diff matrix
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Search Query:&lt;/strong&gt; &lt;a href="https://sourcegraph.com/search?q=context:global+repo:%5Egithub%5C.com/sourcegraph/sourcegraph%24+type:diff+matrix&amp;amp;patternType=literal"&gt;https://sourcegraph.com/search?q=context:global+repo:%5Egithub%5C.com/sourcegraph/sourcegraph%24+type:diff+matrix&amp;amp;patternType=literal&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aj9RikQ6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/unicodeveloper/image/upload/v1641199855/diff-search.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aj9RikQ6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/unicodeveloper/image/upload/v1641199855/diff-search.gif" alt="Diff search" width="800" height="362"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-commit-search"&gt;
  &lt;/a&gt;
  5. Commit Search
&lt;/h2&gt;

&lt;p&gt;Commit search allows you to search for specific strings used in commit messages across your codebase.&lt;/p&gt;

&lt;p&gt;Let’s search over commit messages like so:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ulMkNUR2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/unicodeveloper/image/upload/v1641199769/commit-search.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ulMkNUR2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/unicodeveloper/image/upload/v1641199769/commit-search.gif" alt="Commit search" width="800" height="369"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-search-contexts"&gt;
  &lt;/a&gt;
  6. Search Contexts
&lt;/h2&gt;

&lt;p&gt;Search contexts are a set of repositories at specific revisions that search queries on Sourcegraph will target. &lt;/p&gt;

&lt;p&gt;In other words, search contexts enable you to narrow, group and search only the code repositories you care about.&lt;/p&gt;

&lt;p&gt;By default, Sourcegraph uses a global search context (namely, &lt;strong&gt;context:global&lt;/strong&gt;) for all search queries, when no search context is specified by the actor (me, you, or a programmable robot) performing the search.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OhfSK1xZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/unicodeveloper/image/upload/v1641198531/search-contexts-chakra.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OhfSK1xZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/unicodeveloper/image/upload/v1641198531/search-contexts-chakra.gif" alt="Search contexts" width="800" height="454"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To learn more, check out a &lt;a href="https://dev.to/sourcegraph/how-to-use-search-contexts-on-sourcegraph-138n"&gt;detailed article about creating, and using search contexts on Sourcegraph&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-symbol-search"&gt;
  &lt;/a&gt;
  7. Symbol Search
&lt;/h2&gt;

&lt;p&gt;Symbol search comes in handy when you want to directly search for function, class, variable and const definitions in your code search.&lt;/p&gt;

&lt;p&gt;With Sourcegraph, you can use the “type:symbol” filter in your search query like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;repo:^github\.com/sourcegraph/sourcegraph$ type:symbol Vector
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The search query returns the symbol you searched for. All the symbols in that particular repository or file are grouped and shown on the left-hand side.&lt;/p&gt;

&lt;p&gt;The grouped symbol list is searchable as shown in the gif below. You can search for whatever symbol you want.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Sourcegraph has Symbol support for 75+  languages&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--O4Ixq3tb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/unicodeveloper/image/upload/v1641198656/symbol-search.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--O4Ixq3tb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/unicodeveloper/image/upload/v1641198656/symbol-search.gif" alt="Symbol search" width="800" height="457"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-branch-amp-tag-search"&gt;
  &lt;/a&gt;
  8. Branch &amp;amp; Tag Search
&lt;/h2&gt;

&lt;p&gt;Sourcegraph makes it possible to search for code in all of your branches and tags. Yes, all your branches, not only the main branch!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#branch-search"&gt;
  &lt;/a&gt;
  Branch Search
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Use Case:&lt;/strong&gt; Search the “add-panel-zoekt-cap” branch of the &lt;a href="https://github.com/sourcegraph/sourcegraph"&gt;sourcegraph/sourcegraph repo&lt;/a&gt; for webhook.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Search Query:&lt;/strong&gt; &lt;a href="https://sourcegraph.com/search?q=context:global+repo:%5Egithub%5C.com/sourcegraph/sourcegraph%24+rev:*refs/heads/add-panel-zoekt-cap+webhook&amp;amp;patternType=literal"&gt;https://sourcegraph.com/search?q=context:global+repo:%5Egithub%5C.com/sourcegraph/sourcegraph%24+rev:*refs/heads/add-panel-zoekt-cap+webhook&amp;amp;patternType=literal&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--72eqD_58--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/unicodeveloper/image/upload/v1641199027/tag-webhook-search.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--72eqD_58--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/unicodeveloper/image/upload/v1641199027/tag-webhook-search.gif" alt="Tag search for webhook" width="800" height="449"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tag-search"&gt;
  &lt;/a&gt;
  Tag Search
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Use Case:&lt;/strong&gt; Search the “v3.32.0-rc.2” tag of the &lt;a href="https://github.com/sourcegraph/sourcegraph"&gt;https://github.com/sourcegraph/sourcegraph repo&lt;/a&gt; for batch changes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Search Query:&lt;/strong&gt; &lt;a href="https://sourcegraph.com/search?q=context:global+repo:%5Egithub%5C.com/sourcegraph/sourcegraph%24+rev:*refs/tags/v3.32.0-rc.2+batch+changes&amp;amp;patternType=literal"&gt;https://sourcegraph.com/search?q=context:global+repo:%5Egithub%5C.com/sourcegraph/sourcegraph%24+rev:*refs/tags/v3.32.0-rc.2+batch+changes&amp;amp;patternType=literal&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xg7qQd5v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/unicodeveloper/image/upload/v1641199042/tags-batch-changes-search.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xg7qQd5v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/unicodeveloper/image/upload/v1641199042/tags-batch-changes-search.gif" alt="Tag search" width="800" height="452"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;The benefits of code search are innumerable. The faster you can find code, the higher the development velocity for you and your teammates.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://sourcegraph.com"&gt;Sourcegraph Cloud&lt;/a&gt; is not the only option to add, explore private code and use search contexts. Sourcegraph can be installed in different ways to give you advanced search features for your private code. &lt;/p&gt;

&lt;p&gt;You can run &lt;a href="https://docs.sourcegraph.com/admin/install#self-hosted"&gt;Sourcegraph locally&lt;/a&gt; or opt-in for us to set up a &lt;a href="https://docs.sourcegraph.com/admin/install/managed"&gt;managed Sourcegraph instance&lt;/a&gt; for your team. You'll be able to use a self-hosted Sourcegraph instance for free (up to 10 users).&lt;/p&gt;




&lt;p&gt;Have suggestions or questions? Leave a comment, or join our &lt;a href="https://about.sourcegraph.com/community/?utm_medium=social&amp;amp;utm_source=devto&amp;amp;utm_campaign=slacklaunch"&gt;Community Slack Space&lt;/a&gt; where our team will be happy to answer any questions you may have about Sourcegraph.&lt;/p&gt;

</description>
      <category>codesearch</category>
      <category>webdev</category>
      <category>programming</category>
      <category>productivity</category>
    </item>
  </channel>
</rss>
