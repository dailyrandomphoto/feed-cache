<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network. Open source and radically transparent.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>JWT Authentication Best Practices</title>
      <author>Fernando Doglio</author>
      <pubDate>Fri, 04 Dec 2020 10:12:47 +0000</pubDate>
      <link>https://dev.to/deleteman123/jwt-authentication-best-practices-3lf9</link>
      <guid>https://dev.to/deleteman123/jwt-authentication-best-practices-3lf9</guid>
      <description>&lt;p&gt;Microservices are a great tool when it comes to designing scalable and extensible architectures. They can be used to encapsulate different behaviors or responsibilities in a way that not a lot of other architecture paradigms can represent. &lt;br&gt;
And if you pair them with a REST-based interface, then you’re not only writing and creating a platform that can grow and scale automatically (given the right infrastructure of course), but you’re also creating a standard and easy-to-use product. &lt;/p&gt;

&lt;p&gt;If you haven’t noticed, I’m a fan of microservices and they’re usually the pattern I go with when designing new architectures, working with Big Data on a day-to-day basis, I tend to require flexibility and scalability out of the box, and they provide that to me.&lt;/p&gt;

&lt;p&gt;The thing not everyone considers when writing microservices though is that they require a way for you to authenticate against them. Both if you’re using a front-end client or just communicating with them through another microservice. And although there are several options out there to solve authentication, I want to cover one of the easiest, yet most powerful, alternative: JSON Web Tokens.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#jwtbased-authentication" class="anchor"&gt;
  &lt;/a&gt;
  JWT-based Authentication
&lt;/h1&gt;

&lt;p&gt;The basic thing you need to understand JWT-based authentication is that you’re dealing with an encrypted JSON which we’ll call “token”. This token has all the information required for the back-end system to understand who you are and if, indeed, you are who you say you are.&lt;/p&gt;

&lt;p&gt;The following diagram shows the steps involved in this process:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Lmyom2tH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_1048F41B3AC814B927887FF3C86602B940107555916A37D85A0BACB9135A34EA_1606545347515_jwt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Lmyom2tH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_1048F41B3AC814B927887FF3C86602B940107555916A37D85A0BACB9135A34EA_1606545347515_jwt.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see, leaving out the user-based steps, you only need 4 steps:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;First, the client application (here I used a front-end app, but you can do the same with another service) will send a sign-in request. This means you’re sending the log-in credentials, just this once.&lt;/li&gt;
&lt;li&gt;Second, the API will validate these credentials and if they’re correct, it’ll generate the token. This is the most important step because the generated token as I mentioned is nothing more than an encrypted JSON object. This allows you to add as much data into it as you want, and you will want to add data because JWT allows you to perform stateless authorization, which I’ll cover in a second.&lt;/li&gt;
&lt;li&gt;Third, with the JWT generated, all you have to do is return it back to the client application. &lt;/li&gt;
&lt;li&gt;Finally, the client app will later send this token on every subsequent request. This token means you’ve been authenticated and can access the secret section of the application.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That is it, the flow is very straightforward and you don’t need to redirect the user anywhere (I’m looking at you OAuth!). &lt;br&gt;
But let’s get into it with more details, let me break up each step for you to fully understand what is happening behind code.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-backend-side-of-things" class="anchor"&gt;
  &lt;/a&gt;
  The back-end side of things
&lt;/h2&gt;

&lt;p&gt;For the back-end, or the microservice if you will, there are two major steps that you need to understand: &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Generating the JSON Web Token. This is key, as I mentioned before because the information you add will be used later (kinda like saying “everything you say will be used against you in a court of law”).&lt;/li&gt;
&lt;li&gt;Validating the token for received requests. I left this part out of the authentication process because this is actually part of the authorization flow. Very similar, and easy to implement, but worth noting as well.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So, let’s get into it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Generating the JWT&lt;/strong&gt;&lt;br&gt;
To generate the token on your back-end microservice, you’ll normally use an existing server-side library. There is no need for you to understand how the token is generated, you just need to understand what goes into it. &lt;/p&gt;

&lt;p&gt;So, what actually goes into the token? You can literally use a JSON object such as:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  "foo": "bar"
}
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;And that will be used and sent back to the front-end client, which may be for your business logic it makes sense, maybe your front-end client is waiting for the “foo” key. However, other than the custom attributes you can add, there are also pre-defined options that have a functional meaning for the specific algorithm that the library is using.&lt;/p&gt;

&lt;p&gt;Given I’ll be using the &lt;a href="https://www.npmjs.com/package/jsonwebtoken"&gt;jsonwebtoken&lt;/a&gt; library for Node.js, the main option you want to take into account is  &lt;code&gt;expiresIn&lt;/code&gt;. This is critical to generating a proper JWT because you want the token to have an expiration date. Otherwise, it will last forever, potentially leaving an open vulnerability for someone who can capture it and later use it to impersonate your identity. &lt;br&gt;
For this particular library, this value is expressed in seconds if you provide a number (or you can provide a string using a time unit for something like &lt;code&gt;"&lt;/code&gt;&lt;code&gt;2 days&lt;/code&gt;&lt;code&gt;"&lt;/code&gt; to signify 2 days of validity). &lt;/p&gt;

&lt;p&gt;And in turn, the library will add another one called &lt;code&gt;iat&lt;/code&gt; which stands for &lt;strong&gt;Issued At&lt;/strong&gt; and is a date reference used for expiration checks (i.e that’s the date it’ll take into account when checking if your token is still valid).&lt;/p&gt;

&lt;p&gt;And how do you add all this information into the token then? By signing it:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const jwt = require('jsonwebtoken');

const token = jwt.sign({
    data: 'foobar'
  }, 'your-secret-key-here', { expiresIn: 60 * 60 }); //1 hour

console.log(token)
//Outputs: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjoiZm9vYmFyIiwiaWF0IjoxNjA2NTUzNjc4LCJleHAiOjE2MDY1NTcyNzh9.3oV51hA7SKCqDhG7tbu2XQq7wW2LJE5XtK0HhVwEs0A
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Using the &lt;code&gt;sign&lt;/code&gt; method you can create the token, notice that your main object (the one containing the actual information you want to transfer to the front-end) is the first parameter, the second one is the secret key or phrase (you can either pass a secret phrase of your choosing, something that you’ll have to share with your clients) or the content of a PEM key. Either way, the second parameter is used for the encryption algorithm to encode and create the token. Finally, the third attribute contains the configuration options (in our case only the expiration time).&lt;/p&gt;

&lt;p&gt;This token (notice the output on the code above) is then returned as part of the authentication response, for the client to use. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Storing the token&lt;/strong&gt;&lt;br&gt;
As an optional step, you can also store the token in your database  to associate it with your user. Normally, you wouldn’t need to do this if all the user information can be stored in your token. &lt;br&gt;
However, if there is more information to manage that you can comfortably store in your token, then keeping an association with your user’s profile inside the database might be a good idea.&lt;br&gt;
In fact, given that looking up this token would be something you’d do on every request, a good alternative is to keep both, the token and the relevant information about your user inside some in-memory storage,  such as &lt;a href="https://redis.io/"&gt;Redis&lt;/a&gt;. &lt;br&gt;
The new flow, with storage incorporated and verification support is the following one:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--v8web507--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_1048F41B3AC814B927887FF3C86602B940107555916A37D85A0BACB9135A34EA_1606580178077_jwt3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--v8web507--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_1048F41B3AC814B927887FF3C86602B940107555916A37D85A0BACB9135A34EA_1606580178077_jwt3.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The taxing interaction here is not the first one (#4) with Redis, but rather the second one (#9) because this one would happen on every request received. We’ll see more about that in a second.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Checking the Token&lt;/strong&gt;&lt;br&gt;
Just because we’re getting a token as part of the request, it doesn’t mean such a request is safe, it could very well be a fake one or have an invalid or even expired token. This is why on every request of a secured resource (i.e an endpoint that requires an authenticated user to be accessed, or a section of your website that lives inside the member’s zone) you need to validate the token received.&lt;br&gt;
If you’ve skipped the storage step, then this is a relatively cheap task. All you have to do is use the same server-side framework to validate it:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const decodedToken = jwt.verify(token, 'your-secret-key-here')
console.log(decodedToken)
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Notice how I’m using the same “secret phrase”, that’s definitely important because you need to keep using the same one throughout the same project otherwise validation will not work.&lt;br&gt;
An expired token would throw an exception such as:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gM7st74s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_1048F41B3AC814B927887FF3C86602B940107555916A37D85A0BACB9135A34EA_1606627819976_Captura%2Bde%2Bpantalla%2B2020-11-29%2Ba%2Blas%2B6.30.08.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gM7st74s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_1048F41B3AC814B927887FF3C86602B940107555916A37D85A0BACB9135A34EA_1606627819976_Captura%2Bde%2Bpantalla%2B2020-11-29%2Ba%2Blas%2B6.30.08.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And a valid one would just return a valid JSON that you can decode and use however you need.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{ data: 'foobar', iat: 1606581962, exp: 1606581963 }
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Notice the &lt;code&gt;iat&lt;/code&gt; and &lt;code&gt;exp&lt;/code&gt; parameters added by the library.&lt;br&gt;
An exception in this context would mean you need to invalidate the client’s request and send an invalid response. Normally you would send back a 403 error code since the request is (and the client) is no longer authenticated.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#spa-authentication" class="anchor"&gt;
  &lt;/a&gt;
  SPA authentication
&lt;/h2&gt;

&lt;p&gt;Now that we understand what it means for an API (or a microservice if you will) to be protected by a JWT authentication process, I wanted to cover the same process from the POV of a SPA application acting as the client app.&lt;br&gt;
In this case, as I mentioned, you’ll be contacting a service initially by sending your credentials and receiving a token which you’ll have to use on every following request.&lt;br&gt;
The first thing we need to understand though is that session-based authentication is not the same as token-based auth. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Session-based vs Token-based authentication&lt;/strong&gt;&lt;br&gt;
At a first glance, both of these strategies might seem similar, which is why I wanted to cover the difference. &lt;br&gt;
Essentially both methods work the same way:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;You authenticate against a service.&lt;/li&gt;
&lt;li&gt;That service validates your credentials and sends back a token&lt;/li&gt;
&lt;li&gt;On every following request, you send that token to authenticate yourself with the service.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So as you can see, the process and the flow of data seem to be the same, but there are some major differences hidden.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;For session-based tokens, the server returns a session key, which references the session data (all data relevant to you as a logged-in user). This data, however, is kept in the memory of the server. This essentially breaks one of the benefits of RESTful APIS: stateless services can scale effortlessly because there is no session information stored in memory. You see, the moment you log-in with a server that keeps session information in memory, every subsequent request sent by you needs to go to that server (because memory can’t be shared between different servers, or at least not easily). If you’re trying to scale up your architecture to handle more traffic, duplicating services to increase your capacity will not be as straightforward as it would be if you had stateless services.&lt;/li&gt;
&lt;li&gt;Session-based auth stores the session key in the browser’s cookies. They send the information as a cookie, and because of that, browsers have a problem when having microservices being served from different domains. This is not a problem for token-based auth, since the token is sent as a request header.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Essentially, these two big differences make token-based authentication more viable and my preferred method to implement whenever I have to do one.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dealing with XSS and CSRF with JWT&lt;/strong&gt;&lt;br&gt;
With that being said, there are other actual security threats that you need to take into consideration when implementing your authentication strategy.&lt;br&gt;
This is extremely relevant because you need to be careful about how you handle the JWT on your code. Both of these attacks can potentially take advantage of your vulnerabilities and use your token for malicious purposes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;XSS or Cross-Site Scripting&lt;/strong&gt; implies an attacker is somehow injecting malicious code into the front-end, affecting all users of the application. This can be achieved when the platform is using user input  without validating it or even encoding it. Imaging listing all logged user names on your homepage, if you’re not encoding and checking the input text for each username, an attacker could’ve input a JavaScript script instead of an actual username, causing your homepage to execute the script on every user’s laptop. This is definitely a problematic attack vector if you’re manually handling the token with your JavaScript code. &lt;br&gt;
This is why you don’t use Local Storage to store the JWT on the front-end. LS is publicly accessible to any JS code stored in the same domain, so if an attacker is capable of injecting code as I mentioned, everyone’s tokens are accessible. &lt;strong&gt;You do not want to use Local Storage to keep the token&lt;/strong&gt;. Remember that.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;CSRF or Cross-Site Request Forgery&lt;/strong&gt; happens when an attacker takes advantage of the fact that cookies can be sent with every request (even on cross-domain requests). If somehow you as a user are tricked into clicking a malicious link, you can end up on a site sending a request to maybe change your password. Because in the past you’ve logged in against your secure site before and your browser has the cookie in storage still, the request will succeed. &lt;strong&gt;So do not store the token on your cookies either!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Wait, so what’s left? No local storage, no cookie, maybe in-memory? That’s definitely an option unless of course, you’re not into your users losing their session the moment they refresh the browser.&lt;br&gt;
Instead of going crazy with the fact that we’re running out of secure options, let’s go back to cookies for a minute. &lt;br&gt;
If you properly create the cookies, they can be safe enough for you to trust, that and with a few extra checks, you can provide a relatively secure process, let me explain:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://owasp.org/www-community/HttpOnly"&gt;&lt;strong&gt;httpOnly&lt;/strong&gt;&lt;/a&gt;: This option makes sure the cookie is not accessible through JavaScript. This is definitely a must-do when creating your cookies, you don’t need (nor want) them to be accessed via user code. &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://owasp.org/www-community/SameSite"&gt;&lt;strong&gt;SameSite&lt;/strong&gt;&lt;/a&gt; policy: As I mentioned before, cookies are sent on every request, unless of course, the browser is new (i.e you’re not using Internet Explorer 8 or previous) and that the SameSite policy of your cookie is empty. If you need your tokens to be sent to different domains, then a &lt;em&gt;Lax&lt;/em&gt; value would do the trick because it would allow you to make GET requests to other domains, POST request would not be possible, however. This is great because you’d have the option to do redirections, but a malicious code would not be able to send a POST request behind your back. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Both these options are great, but they’re not perfect. If you´re really looking to find a way to have your application be 100% secured, then you’ll probably have to make some compromises, such as disabling cross-domain requests, this is all part of the security analysis you’ll have to perform based on your actual security requirements.&lt;/p&gt;

&lt;p&gt;With that being said, and although all these security considerations are important, you’ll normally be using a library that already takes care of all of them for you. For example, if you’re using axios for your HTTP requests in your Vue projects, you can simply set one line of configuration in your &lt;code&gt;main.js&lt;/code&gt; file:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;axios.defaults.withCredentials = true
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;With that line, you won’t have to worry about handling a token or even a cookie during the entire process. As long as the back-end API creates the cookie correctly, you’ll be sending it on every subsequent request. You can access the full code of a sample project that interacts with a JWT-authenticated API &lt;a href="https://github.com/deleteman/sample-jwt-auth-vue"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Do you need HTTPS with JWT?&lt;/strong&gt;&lt;br&gt;
This is a very common question when it comes to client-server communication, and it’s especially common when setting up a JWT-based authentication because people tend to think that if you have your token, then you’d good to go.&lt;br&gt;
Truth is, that as I’ve mentioned above, being 100% secured is not only hard but nearly impossible. If someone skilled enough wants to hack you, they’ll find a way to do it. This is about discouraging 90% of potential attackers by taking care of the basic steps.&lt;br&gt;
So, is HTTPS required? Well, let’s consider what HTTPS actually means:&lt;/p&gt;

&lt;p&gt;An HTTPS connection between a client and a server-side service is an encrypted channel of communication between the two ends. There is no way (almost) for an attacker to read that stream from outside and figure out what’s being sent. So unlike normal HTTP which is not encrypted, HTTPS makes sure only a client that you correctly identified as valid is capable of talking to your services.&lt;/p&gt;

&lt;p&gt;What you’d normally want to do is have your public sections inside normal HTTP and anything that needs to be secured (i.e that needs you to be logged in to access it) will be behind HTTPS.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;When not to use JWT&lt;/strong&gt;&lt;br&gt;
I always like to say, that there is no silver bullet when it comes to technology, for every reason pushing you towards a particular choice, there are two more pushing you in the opposite direction. &lt;br&gt;
And the same stays true for JWT-based authentication, many developers claim there are better and more secure options out there. The key there is correctly defining what “better” means to you and then going with that.&lt;br&gt;
After all, your context will be the deciding factor used to make all decisions. &lt;br&gt;
That being said, a very good reason why not to use JWT-based authentication would be when you’re developing a stateful back-end. After all, JWT shines when it is used to secure a stateless API, given the stateless nature of the data flow.&lt;br&gt;
Granted, it can be used when state is required as well, but then the line gets very blurry between JWT and session tokens. In these cases, it might be a better idea to go with other alternatives, such as server-side sessions, that were originally designed for it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Best JWT libraries&lt;/strong&gt;&lt;br&gt;
The last item I wanted to cover were libraries. If you’re working on the back-end side, you don’t need anything specific that’s compatible with Vue, but for the examples in this article, I used Node.js’ &lt;a href="https://www.npmjs.com/package/jsonwebtoken"&gt;jsonwebtoken&lt;/a&gt; server-side library.&lt;/p&gt;

&lt;p&gt;As for the front-end, as I mentioned before, axios is perfectly capable of already providing all the user-level support required to interact with a JWT-authenticated API. However, if you’re actually looking to perform more advanced tasks, such as manually decoding the token to use its internal information, you have some options, depending on your front-end framework of choice:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;For VueJS users&lt;/strong&gt;: you can use something like &lt;a href="https://www.npmjs.com/package/vuejs-jwt"&gt;vuejs-jwt&lt;/a&gt; which is a lightweight library that provides you with methods such as &lt;code&gt;decode&lt;/code&gt; or &lt;code&gt;hasToken&lt;/code&gt; that help you deal with the token directly.  If on the other hand, you’re looking for a more robust solution, you can also take a look at &lt;a href="https://websanova.com/docs/vue-auth/home"&gt;vue-auth&lt;/a&gt;, which provides you with support for several authentication algorithms, including, of course, JWT.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;For Angular  users&lt;/strong&gt;: you have Auth0’s library: &lt;a href="https://www.npmjs.com/package/@auth0/angular-jwt"&gt;angular-jwt&lt;/a&gt;. It provides you a simple interface to interact withe the token &lt;a href="https://www.npmjs.com/package/@auth0/angular-jwt"&gt;&lt;/a&gt;(i.e get its data, check for expiration dates, and so on).&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;React users&lt;/strong&gt;: finally if you’re “one of those” (actually, just kidding, I’m a big fan of React), you can use &lt;a href="https://www.npmjs.com/package/react-jwt"&gt;react-jwt&lt;/a&gt; which provides a &lt;code&gt;useJwt&lt;/code&gt; hook as well, which allows you to react to changes on the validity of a token (you can check this directly on the front-end and immediately react to the expiration event).&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#final-thoughts" class="anchor"&gt;
  &lt;/a&gt;
  Final thoughts
&lt;/h1&gt;

&lt;p&gt;When it comes to securing a RESTful API (or any stateless back-end service really), the JWT-based approach is definitely an interesting option. By default, it might not be the most secure one, but with a little bit of work and configuration, most of the common attack vectors can be tackled.&lt;br&gt;
It provides a great level of control over what you do with, and how you generate, your tokens and it makes scaling your back-end infrastructure trivially simple.&lt;/p&gt;

&lt;p&gt;In the end, it’s up to you to decide, based on your context and your background. To me, JWT authentication has always been a great option and I try to advocate for it as much as I can, given I’m also a big fan of RESTful microservices.&lt;/p&gt;

&lt;p&gt;How about you? Have you used JSON Web Tokens in the past? Or do you rather using a different approach? Leave a comment down below and share your experience.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>node</category>
      <category>jwt</category>
      <category>authentication</category>
    </item>
    <item>
      <title>Understanding the Object-Oriented Programming</title>
      <author>Rohan_Shakya</author>
      <pubDate>Fri, 04 Dec 2020 06:02:14 +0000</pubDate>
      <link>https://dev.to/rohanshakya/understanding-the-object-oriented-programming-34j3</link>
      <guid>https://dev.to/rohanshakya/understanding-the-object-oriented-programming-34j3</guid>
      <description>&lt;p&gt;Object-Oriented Programming is a design philosophy also known as OOP. Object-Oriented Programming(OOP) uses different sets of programming languages than old procedural programming languages(C, Pascal, etc.)Everything in OOP is grouped as self-sustainable “objects”. Hence you gain reusability by means of OOP concepts.&lt;/p&gt;

&lt;p&gt;OOP allows the decomposition of a problem into a number of entities called objects and then builds data and functions around these objects. Data cannot be accessed directly, they are only accessible through the member function. There might be a number of objects in a program written in OOP language. Those objects can communicate with each other by calling their respective member functions. Organization of data and function in OOP is shown below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8gSPNfWE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/rxvst616jiynudx3c2tp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8gSPNfWE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/rxvst616jiynudx3c2tp.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;OOP has taken the best ideas of structured programming and combined them with several powerful new concepts that encourage us to perform the task of programming in a new way. In general, when programming in an object-oriented fashion, we break down a problem into a subgroup of related parts that take into account both code and data related to each group.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#the-terminology-used-in-oop" class="anchor"&gt;
  &lt;/a&gt;
  The terminology used in OOP:
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#object" class="anchor"&gt;
  &lt;/a&gt;
  Object
&lt;/h2&gt;

&lt;p&gt;An object is any entity, thing, or organization that exists in the real world, It consists of two fundamentals characteristics: its attributes and behaviors. For example, a dog is an object having attributes such as color, weight, age, etc, and behaviors such as barking. In OOP, attributes are represented by data(variables) and the behaviors are represented by the functions.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Object Car
Data                              Function
plateNumber = 120                 accelerate()
speed = 100                       
color = black
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// Object in Javascript

// Defining object 

// Using an Object Literal
var car = {
  plateNumber: 120,
  maxSpeed: 100,
  color: 'black',
  accelerate: function(speed, time){
    console.log(speed * time);
  }
}

// Using an Object Constructor
var Car = function(plateNumber, maxSpeed, color){
  this.plateNumber = plateNumber;
  this.maxSpeed = maxSpeed;
  this.color = color;
  this.accelerate = function(speed, time){
    console.log(speed * time);
  }
}
var car1 = new Car(120, 100, 'black');
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Objects are the basic run-time entities in an object-oriented system that may be created or destroyed at run time. The data and function containing in an object are called its member data and member function. The member function of an object can only access its data. The concept behind OOP is to integrate both data and function into a single entity. This entity is also called an object.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#class" class="anchor"&gt;
  &lt;/a&gt;
  Class
&lt;/h3&gt;

&lt;p&gt;A class is simply a representation of a type of object. It is the blueprint/prototype that describes the details of an object. The entire set of data and code of an object can be made a user-defined data type with the help of a class. Once a class has been defined, we can create any number of objects associated with that class. For example, mango, apple, and orange are members of class fruit. If the fruit has been defined as a class, then the statement fruit mango will create an object mango belonging to the class fruit.&lt;/p&gt;

&lt;p&gt;A class has three areas: public, private, and protected. The functions and variables defined inside the public areas can be accessed by any object. The functions and variables defined inside the private areas can be accessed by the object of the same class and the protected areas can be accessed by the object from the same class and derived class. It incorporated the concept of data hiding.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Class Student                     Class Vehicle
Id                                Name
Name                              Maker
getName()                         Engine
printGrade()                      getDetails()
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// Defining Class in Javascript using es6

class Vehicle { 
  constructor(name, maker, engine) { 
    this.name = name; 
    this.maker =  maker; 
    this.engine = engine; 
  } 
  getDetails(){ 
      return (`The name of the bike is ${this.name}.`) 
  } 
} 
// Making object with the help of the constructor 
let bike1 = new Vehicle('Hayabusa', 'Suzuki', '1340cc'); 
let bike2 = new Vehicle('Ninja', 'Kawasaki', '998cc'); 
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Defining class doesn't create an object but class is the description of the object’s attributes and behavior. So no memory is allocated when a class is created.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#data-abstraction-amp-encapsulation" class="anchor"&gt;
  &lt;/a&gt;
  Data Abstraction &amp;amp; Encapsulation
&lt;/h2&gt;

&lt;p&gt;In OOP, abstraction defines the conceptual boundaries of an object. Abstraction is the act of representing essential features without including the background details. It focuses on the outside view of an object, separating its essential behavior from its implementation. To understand this concept, take an example of ‘switch-board’. We only press particular switched as per our requirement. We need not know the internal working of these switched. This is an abstraction where we only know the essential things to operate on a switch-board without knowing the background details of the switch-board.&lt;/p&gt;

&lt;p&gt;Encapsulation is a way of organizing data and function into a structure (called class) by concealing (hiding) the way the object is implemented, which is preventing access to data by any means other than those specified. Encapsulation, therefore, guarantees the integrity of the data contained in the object. The best application of encapsulation is making the data fields private and using public access to functions. However, we cannot hide an entire object. To use an object, a part of it needs to be accessed by users. To provide this access, abstraction is used. Abstraction provides access to a specific part of data while encapsulation hides the data. Therefore, abstraction and encapsulation complement each other.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;//encapsulation example 
class person{ 
    constructor(name,id){ 
        this.name = name; 
        this.id = id; 
    } 
    addAddress(addr){ 
        this.addr = addr; 
    } 
    getDetails(){ 
        console.log(`Name is ${this.name},Address is: ${this.addr}`); 
    } 
} 

let person1 = new person('John',20); 
person1.addAddress('California'); 
person1.getDetails(); 
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// Abstraction example 

function person(fname,lname){ 
    let firstname = fname; 
    let lastname = lname; 

    let getDetails_noaccess = function(){ 
        return (`First name is: ${firstname} Last  
            name is: ${lastname}`); 
    } 

    this.getDetails_access = function(){ 
        return (`First name is: ${firstname}, Last  
            name is: ${lastname}`); 
    } 
} 
let person1 = new person('John','Smith'); 
console.log(person1.firstname); 
console.log(person1.getDetails_noaccess); 
console.log(person1.getDetails_access()); 
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#inheritance" class="anchor"&gt;
  &lt;/a&gt;
  Inheritance
&lt;/h2&gt;

&lt;p&gt;The process of creating a new class from an existing class in which objects of the new class inherit the attributes and behaviors of the existing class is known as inheritance. The newly created class is called the derived class or child class or subclass and the class from which the new class is created is class base class or parent class or super-class.&lt;/p&gt;

&lt;p&gt;The relationships of classes through inheritance give rise to a hierarchy. It permits the expansion and reuse of existing code without rewriting it hence, the concept of inheritance supports the concept of reusability.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#types" class="anchor"&gt;
  &lt;/a&gt;
  Types
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Single Inheritance:&lt;/strong&gt; The process of creating a new class from an existing class is a single inheritance that is there is only one base class and only derived class in single inheritance.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--X3CpPqHw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/2byk5gzq4koskh4zydfn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X3CpPqHw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/2byk5gzq4koskh4zydfn.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Multiple Inheritance:&lt;/strong&gt; The process in which one class can have more than one superclass and inherit features from all parent classes is multiple inheritances.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JOcneLZf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/5v5ozcqgps7zmn3r6xym.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JOcneLZf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/5v5ozcqgps7zmn3r6xym.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Hierarchical Inheritance:&lt;/strong&gt; The process of creating several classes from only one class is called hierarchical inheritance that is there are two or more derived classes and only one base class in hierarchical inheritance.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IKi9rc-3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/xya2gw43p46fvz612b8h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IKi9rc-3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/xya2gw43p46fvz612b8h.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Multilevel Inheritance:&lt;/strong&gt; The process of creating a new class from another derived class is called multi-level inheritance.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6ZM3VEBU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/n972wy0yvq64om8edfd1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6ZM3VEBU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/n972wy0yvq64om8edfd1.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Hybrid Inheritance:&lt;/strong&gt; It is the combination of two or more types of inheritance.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;//Inhertiance example 

class person{ 
    constructor(name){ 
        this.name = name; 
    } 

    //method to return the string 
    toString(){ 
        return (`Name of person: ${this.name}`); 
    } 
} 

class student extends person{ 
    constructor(name,id){ 
        //super keyword to for calling above class constructor 
        super(name); 
        this.id = id; 
    } 
    toString(){ 
        return (`${super.toString()},Student ID: ${this.id}`); 
    } 
} 
let student1 = new student('John',20); 
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#polymorphism" class="anchor"&gt;
  &lt;/a&gt;
  Polymorphism
&lt;/h2&gt;

&lt;p&gt;Polymorphism is a generic term that means ‘many forms’. It simply means ‘one name many forms’. More precisely Polymorphism means the ability to request that the same operations be performed by a wide range of different types of things.&lt;/p&gt;

&lt;p&gt;Polymorphism is an important feature of OOP which refers to the ability of an object to take on different forms depending upon situations. It simplifies coding and reduces the rework involved in modifying and developing an application. It is extensively used in implementing inheritance.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j-mEH25a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/otihjlawrpwre52y7mih.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j-mEH25a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/otihjlawrpwre52y7mih.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Operator overloading and function overloading are examples of polymorphism in OOP.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion" class="anchor"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;The concept of an object helps to translate our thoughts into a program. It provides a way of solving a problem in the same way as a human being perceives a real-world problem and finds out the solution. It is possible to construct large reusable components using object-oriented techniques.&lt;/p&gt;

&lt;p&gt;Thanks for your time!! Hope you like it 😃😃&lt;/p&gt;

</description>
      <category>oop</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Get started with Flexbox.</title>
      <author>virensuthar</author>
      <pubDate>Fri, 04 Dec 2020 04:37:49 +0000</pubDate>
      <link>https://dev.to/virensuthar/get-started-with-flexbox-3in5</link>
      <guid>https://dev.to/virensuthar/get-started-with-flexbox-3in5</guid>
      <description>&lt;h1&gt;
  &lt;a href="#what-is-flexbox" class="anchor"&gt;
  &lt;/a&gt;
  What is Flexbox?
&lt;/h1&gt;

&lt;p&gt;Flexbox is a layout in CSS3. Flexbox is used to make responsive layouts and components on a webpage. Using is a good choice to use in CSS so you can design the page responsively. Here is a basic guide to getting starting with flexbox.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---3gDSFf1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/fsln7je4ax7ft3er28hh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---3gDSFf1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/fsln7je4ax7ft3er28hh.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Consider the above image and try to understand a layout there is one container, and inside that two elements are placed. This is an important part to understand, then using flexbox will be easy. Now plot that container into an x-y axis coordinate, horizontal part in flexbox called the Main axis and vertical part is called the Cross axis. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#using-flexbox" class="anchor"&gt;
  &lt;/a&gt;
  Using Flexbox
&lt;/h1&gt;

&lt;p&gt;Give property of &lt;code&gt;display: flex;&lt;/code&gt; to element for using flexbox.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#flexdirection" class="anchor"&gt;
  &lt;/a&gt;
  Flex-direction
&lt;/h4&gt;

&lt;p&gt;Flex-direction property is used to give direction to element should be placed, four types of properties are defined.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;flex-direction: row;&lt;/code&gt; place flex-items in row (horizontal).&lt;/li&gt;
&lt;li&gt; &lt;code&gt;flex-direction: row-reverse;&lt;/code&gt; place flex-items in row but in reverse order.&lt;/li&gt;
&lt;li&gt; &lt;code&gt;flex-direction: column;&lt;/code&gt; place flex-items in column (vertical).&lt;/li&gt;
&lt;li&gt; &lt;code&gt;flex-direction: column-reverse;&lt;/code&gt; place flex-items in column but in reverse order.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can see in the example below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s----O5J3PQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/4jkkaafn2ef4osrtmhyg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s----O5J3PQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/4jkkaafn2ef4osrtmhyg.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#flexwrap" class="anchor"&gt;
  &lt;/a&gt;
  Flex-wrap
&lt;/h4&gt;

&lt;p&gt;Flex-wrap property is used for wrapping flex-items inside the flex-container.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;flex-wrap : nowrap&lt;/code&gt; will not wrap flex-item in flex-container.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;flex-wrap : wrap&lt;/code&gt; will wrap flex-item in flex-container if it not fit in container size.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can see in the example below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JtwNc8_k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/krxb50fi5gp2h4xi6fbj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JtwNc8_k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/krxb50fi5gp2h4xi6fbj.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#justifying-and-aligning-flexitem" class="anchor"&gt;
  &lt;/a&gt;
  Justifying and aligning flex-item
&lt;/h3&gt;

&lt;p&gt;Now, this is a very important property of flexbox and you will use it regularly.&lt;br&gt;
Whenever we want to align flex-item to the Main axis (horizontally) use &lt;code&gt;justify-content&lt;/code&gt;, and if you want to align flex-items  to the Cross axis (vertically) use &lt;br&gt;
&lt;code&gt;align-items&lt;/code&gt;. Now let's see in detail.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#justifying-content-along-with-the-main-axis-horizontally" class="anchor"&gt;
  &lt;/a&gt;
  Justifying content along with the Main axis (Horizontally).
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;justify-content: flex-start&lt;/code&gt; will place flex-item to the start of flex-container &lt;em&gt;(refer the first image above)&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;justify-content: flex-end&lt;/code&gt; will place flex-item to the end of flex-container&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;justify-content: center&lt;/code&gt; to center flex-items.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;justify-content: space-around&lt;/code&gt;`  space up around item.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;&lt;/code&gt; justify-content: space-between &lt;code&gt;&lt;/code&gt; uses the whole frame and space item between.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;&lt;/code&gt; justify-content: space-evenly &lt;code&gt;&lt;/code&gt; space all item evenly&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#aligning-content-along-with-the-cross-axis-vertically" class="anchor"&gt;
  &lt;/a&gt;
  Aligning content along with the Cross axis (vertically).
&lt;/h4&gt;

&lt;p&gt;All properties are the same as  &lt;code&gt;&lt;/code&gt; justify-content &lt;code&gt;&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;&lt;/code&gt; align-items: flex-start &lt;code&gt;&lt;/code&gt; will place flex-item to the start of flex-container &lt;em&gt;(refer the first image above)&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;&lt;/code&gt; align-items: flex-end &lt;code&gt;&lt;/code&gt; will place flex-item to the end of flex-containers&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;&lt;/code&gt; align-items: center &lt;code&gt;&lt;/code&gt; to center flex-items.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;&lt;/code&gt; align-items: baseline &lt;code&gt;&lt;/code&gt; place flex-item to base item.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Tip: Flexbox is a good option for centering things in CSS. Make sure whatever element you want to center their parent element would have width and height defined and give parent element &lt;code&gt;&lt;/code&gt; justify-content: center &lt;code&gt;&lt;/code&gt; and &lt;code&gt;&lt;/code&gt; align-items: center &lt;code&gt;&lt;/code&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Thanks for reading.&lt;/p&gt;

</description>
      <category>css</category>
      <category>html</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Create a custom React star rating component</title>
      <author>Michael Burrows</author>
      <pubDate>Fri, 04 Dec 2020 03:06:25 +0000</pubDate>
      <link>https://dev.to/michaelburrows/create-a-custom-react-star-rating-component-5o6</link>
      <guid>https://dev.to/michaelburrows/create-a-custom-react-star-rating-component-5o6</guid>
      <description>&lt;p&gt;In this tutorial we’ll be building a custom React star rating component. This type of component allows users to give something a rating between 1 and 5 stars with a single mouse click.&lt;/p&gt;

&lt;p&gt;Here’s how the completed component will look &amp;amp; function:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---4jBLQq4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/meeudjpxbvmyyo1abytj.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---4jBLQq4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/meeudjpxbvmyyo1abytj.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let’s get started by setting up an application using &lt;a href="https://www.michaelburrows.xyz/create-react-app/"&gt;Create React App&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npx creat-react-app star-rating&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Then in the &lt;code&gt;/src&lt;/code&gt; directory create a file for the component named &lt;code&gt;StarRating.js&lt;/code&gt;. We’ll start with a bare bones component to test the setup then build out the full functionality:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;StarRating&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;  
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Hello&lt;/span&gt; &lt;span class="nx"&gt;World&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="err"&gt;;
&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;StarRating&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Next replace the contents of the &lt;code&gt;App.js&lt;/code&gt; file to load in the component:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;StarRating&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./StarRating&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./App.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;App&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;StarRating&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Run the &lt;code&gt;npm start&lt;/code&gt; command and test that the component is being loaded.&lt;/p&gt;

&lt;p&gt;Now back to the &lt;code&gt;StarRating.js&lt;/code&gt; file, first thing we need to do is have the component output 5 stars which we do by mapping over an array:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;StarRating&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;star-rating&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;{[...&lt;/span&gt;&lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)].&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;star&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;        
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;         
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;star&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;amp;&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="mi"&gt;9733&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&amp;gt;       &lt;/span&gt;&lt;span class="err"&gt; 
&lt;/span&gt;        &lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;})}&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;code&gt;&amp;amp;#9733;&lt;/code&gt; is the HTML entity code for a star icon but you could also use an icon library like Font Awesome here if you wanted. Next we need to add the functionality that sets the star rating when clicked. For this we’ll wrap the stars in a &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; and with a &lt;code&gt;onClick()&lt;/code&gt; event:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;StarRating&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;rating&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setRating&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;star-rating&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;{[...&lt;/span&gt;&lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)].&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;star&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt;
            &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;button&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="nx"&gt;rating&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;on&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;off&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setRating&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
          &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;star&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;amp;&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="mi"&gt;9733&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;})}&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;We’re using the &lt;a href="https://reactjs.org/docs/hooks-state.html"&gt;State hook&lt;/a&gt; to store the value (index) of the star clicked. Depending on the rating selected a class of either “on” or “off” is added, this will allow us to style the icons to give a visual representation of the rating selected.&lt;/p&gt;

&lt;p&gt;And here is the CSS which we’ll add to the App.css file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;outline&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.on&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.off&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#ccc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;With the CSS setup we have a functioning component that will show the star rating selected on click. For some added interactivity we’ll also implement a hover effect that indicates the rating that will be selected on click:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;StarRating&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;rating&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setRating&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;hover&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setHover&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;star-rating&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;{[...&lt;/span&gt;&lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)].&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;star&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt;
            &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;button&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;hover&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;rating&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;on&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;off&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setRating&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
            &lt;span class="nx"&gt;onMouseEnter&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setHover&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
            &lt;span class="nx"&gt;onMouseLeave&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setHover&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;rating&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
          &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;star&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;amp;&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="mi"&gt;9733&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;})}&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;There you have it, a custom star rating component without the need for any additional dependencies or frameworks. As usual the source code for this project can be found on &lt;a href="https://github.com/michael-burrows-github/blog/tree/master/2020/049%20-%20Create%20a%20custom%20React%20star%20rating%20component"&gt;GitHub&lt;/a&gt;. Thanks for reading :)&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>AWS Heroes React to  AWS re:Invent 2020 Announcements 🤯</title>
      <author>Andrew Brown 🇨🇦</author>
      <pubDate>Thu, 03 Dec 2020 23:03:43 +0000</pubDate>
      <link>https://dev.to/aws-heroes/aws-heroes-react-to-aws-re-invent-2020-announcements-l67</link>
      <guid>https://dev.to/aws-heroes/aws-heroes-react-to-aws-re-invent-2020-announcements-l67</guid>
      <description>&lt;h3&gt;
  &lt;a href="#during-reinvent-this-article-is-being-constantly-updated" class="anchor"&gt;
  &lt;/a&gt;
  🚨 During re:Invent this article is being constantly updated.
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#keep-checking-in-to-see-new-reactions" class="anchor"&gt;
  &lt;/a&gt;
  👋 Keep checking in to see new reactions!
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#jump-to-the-reactions" class="anchor"&gt;
  &lt;/a&gt;
  👉👉 &lt;a href="#aws-hero-reactions-and-analysis"&gt;Jump to the reactions&lt;/a&gt; 👈👈
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#preamble" class="anchor"&gt;
  &lt;/a&gt;
  Preamble
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#what-is-reinvent" class="anchor"&gt;
  &lt;/a&gt;
  What is re:Invent?
&lt;/h3&gt;

&lt;p&gt;re:Invent is Amazon Web Service's (AWS) 5-day technology conference held in Las Vegas Nevada. Last year's conference had &lt;strong&gt;65,000+ attendance&lt;/strong&gt; from around the world.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-is-reinvent-so-important" class="anchor"&gt;
  &lt;/a&gt;
  Why is re:Invent so important?
&lt;/h3&gt;

&lt;p&gt;re:Invent is when AWS announces new features, improvements and cloud services. It's also a lot of fun, with hands-on training, creative demos project, lucrative swag and more!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-different-this-year" class="anchor"&gt;
  &lt;/a&gt;
  What is different this year?
&lt;/h3&gt;

&lt;p&gt;Due to the world situation AWS has made a few changes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The conference is 100% virtual&lt;/li&gt;
&lt;li&gt;Attendance is free (you still need to &lt;a href="https://register.virtual.awsevents.com/?sc_icampaign=event_reInvent_RegisterNow&amp;amp;sc_ichannel=ha&amp;amp;sc_icontent=eventsite_reinvent20&amp;amp;sc_ioutcome=Strategic_Events&amp;amp;sc_iplace=evnav&amp;amp;trk=direct"&gt;register&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;The conference is 3 weeks long&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#what-is-an-aws-hero" class="anchor"&gt;
  &lt;/a&gt;
  What is an AWS Hero?
&lt;/h3&gt;

&lt;p&gt;An AWS Hero is a recognized community leader in a specific category of cloud technologies.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-this-article" class="anchor"&gt;
  &lt;/a&gt;
  What is this article?
&lt;/h3&gt;

&lt;p&gt;There are thousands of talks and hundreds of announcements, and if you live a busy life, it can be hard to find the time to digest all the changes.&lt;/p&gt;

&lt;p&gt;This reaction article is to help contextualize the AWS announcements with some personal thoughts or expert opinion so you have an idea of how you can apply these in your future workloads.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#aws-hero-reactions-and-analysis" class="anchor"&gt;
  &lt;/a&gt;
  AWS Hero Reactions and Analysis
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#andy-jassy-keynote-aws-reinvent-2020" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://markn.ca/2020/andy-jassy-keynote-aws-reinvent/"&gt;Andy Jassy Keynote, AWS Re:Invent 2020&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;No longer do we really have to worry about significant up front entry costs, capacity limits, or start up times. We have more power available via one API call than an entire data center from ten years ago. But if you don’t change how you approach using these tools, you won’t see... &lt;a href="https://markn.ca/2020/andy-jassy-keynote-aws-reinvent/"&gt;(read full article)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;By &lt;a href="https://aws.amazon.com/developer/community/heroes/mark-nunnikhoven/"&gt;Mark Nunnikhoven&lt;/a&gt;, AWS Community Hero&lt;/em&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#aws-announces-babelfish-open-source-postgres-with-sql-server-compatibility" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://www.ongres.com/blog/aws_announces_open_source_postgres_with_sql_server_compatibility/"&gt;AWS announces Babelfish: open source Postgres with SQL Server compatibility&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;But if it weren’t enough, SQL Server equivalent catalogs and also the SQL Server wire protocol (TDS) has been implemented. This means that you will be able to talk to Postgres Babelfish as if it were... &lt;a href="https://www.ongres.com/blog/aws_announces_open_source_postgres_with_sql_server_compatibility/"&gt;(read full article)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;By &lt;a href="https://aws.amazon.com/developer/community/heroes/alvaro-hernandez/"&gt;Álvaro Hernández&lt;/a&gt;, AWS Data Hero&lt;/em&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#serverless-comes-to-machine-learning-with-container-image-support-in-aws-lambda" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://towardsdatascience.com/serverless-comes-to-machine-learning-with-container-image-support-in-aws-lambda-ee9d729d48d7"&gt;Serverless comes to machine learning with container image support in AWS Lambda&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;AWS announced a long-awaited update for AWS Lambda by many developers and data scientists because it could change the way we build functions. It comes with bonus features that make this release something very welcome in the serverless world: starting from today it is possible to... &lt;a href="https://towardsdatascience.com/serverless-comes-to-machine-learning-with-container-image-support-in-aws-lambda-ee9d729d48d7"&gt;(read full article)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;By &lt;a href="https://aws.amazon.com/developer/community/heroes/luca-bianchi/"&gt;Luca Bianchi&lt;/a&gt;, AWS Serverless Hero&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#andy-jassys-8-keys-to-success-aws-reinvent-2020-keynote" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://medium.com/cloud-security/keys-to-aws-success-3a4ab2abebb9"&gt;Andy Jassy’s 8 keys to success ~ AWS re:Invent 2020 Keynote&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;AWS is at the top of the Gartner Magic Quadrant in 2020 — again. In fact, they widened the gap between themselves and next closest provider in the past year. Andy Jassy provided some keys to success at the AWS in his... &lt;a href="https://medium.com/cloud-security/keys-to-aws-success-3a4ab2abebb9"&gt;(read full article)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;By &lt;a href="https://aws.amazon.com/developer/community/heroes/teri-radichel/"&gt;Teri Radichel&lt;/a&gt;, AWS Community Hero&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-takeaways-from-andy-jassys-big-reinvent-keynote" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://acloudguru.com/blog/engineering/5-takeaways-from-andy-jassys-big-reinvent-keynote"&gt;5 takeaways from Andy Jassy’s big re:Invent keynote&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;To tie all that together, we got AWS Proton – a fully managed deployment service for containers and serverless apps. Notice how those two concepts are starting to blend together? Watch for that trend to... &lt;a href="https://acloudguru.com/blog/engineering/5-takeaways-from-andy-jassys-big-reinvent-keynote"&gt;(read full article)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;By &lt;a href="https://aws.amazon.com/developer/community/heroes/forrest-brazeal/"&gt;Forrest Brazeal&lt;/a&gt;, AWS Serverless Hero&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#aws-lambda-can-now-run-php-using-docker-containers" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://mnapoli.fr/aws-lambda-php-docker-containers/"&gt;AWS Lambda can now run PHP using Docker Containers&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;The good news is that while Lambda functions are limited to 250MB, containers can be up to 10GB. That will certainly help when deploying large monoliths to Lambda. One limitation to keep in mind is that after... &lt;a href="https://mnapoli.fr/aws-lambda-php-docker-containers/"&gt;(read full article)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;By &lt;a href="https://aws.amazon.com/developer/community/heroes/matthieu-napoli/"&gt;Matthieu Napoli&lt;/a&gt;, AWS Serverless Hero&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#wait-did-aws-just-rewrite-the-manual-again-for-building-apps" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://www.stackery.io/blog/reinvent-2020-andy-jassy-keynote-modern-architecture/"&gt;Wait, did AWS just rewrite the manual again for building apps?&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Andy Jassy's re:Invent keynote today was chock full of new features and services. I'm here to help break down the most important news related to modern application architecture… &lt;a href="https://www.stackery.io/blog/reinvent-2020-andy-jassy-keynote-modern-architecture/"&gt;(read full article)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;By &lt;a href="https://aws.amazon.com/developer/community/heroes/chase-douglas/"&gt;Chase Douglas&lt;/a&gt;, AWS Serverless Hero&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#serverless-at-reinvent-2020-hot-takes-1" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://theburningmonk.com/2020/12/serverless-at-reinvent-2020-hot-takes-1/"&gt;Serverless at re:Invent 2020 – hot takes #1&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Lambda now bills you by the ms as opposed to 100 ms. So if your function runs for 42ms you will be billed for 42ms, not 100ms. This instantly makes everyone’s lambda bills cheaper without anyone having to lift a finger. It’s the best kind of optimization! However, this might not mean much in… &lt;a href="https://theburningmonk.com/2020/12/serverless-at-reinvent-2020-hot-takes-1/"&gt;(read full article)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;By &lt;a href="https://aws.amazon.com/developer/community/heroes/yan-cui/"&gt;Yan Cui&lt;/a&gt;, AWS Serverless Hero&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#database-announcements-at-reinvent-2020" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://blog.dbi-services.com/database-announcements-at-reinvent-2020/"&gt;Database announcements at re:Invent 2020&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;There are 3 important new launches announced around databases: Babelfish for Aurora, Aurora Serverless v2 and AWS Glue Elastic Views but let’s start by a recap of the pre-reInvent new features from this year… &lt;a href="https://blog.dbi-services.com/database-announcements-at-reinvent-2020/"&gt;(read full article)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;By &lt;a href="https://aws.amazon.com/developer/community/heroes/franck-pachot/"&gt;Franck Pachot&lt;/a&gt;, AWS Data Hero&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#deploying-a-ml-model-using-the-new-aws-lambda-container-image-functionality" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://dev.to/aws-heroes/deploying-a-ml-model-using-the-new-aws-lambda-container-image-functionality-4e7o"&gt;Deploying a ML model using the new AWS Lambda Container Image Functionality&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;This week at re:Invent we saw AWS announce the ability to bring your own container to Lambda functions. The scenario that gets me super excited is the deployment of ML models inside Lambda. Before, it was just too awkward for most use cases to do ML in Lambda but I will demonstrate below that it is very easy now… &lt;a href="https://dev.to/aws-heroes/deploying-a-ml-model-using-the-new-aws-lambda-container-image-functionality-4e7o"&gt;(read full article)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;By &lt;a href="https://aws.amazon.com/developer/community/heroes/matt-coulter/"&gt;Matt Coulter&lt;/a&gt;, AWS DevTools Hero&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#an-aws-hero-reacts-to-the-io2-block-express-announcement" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://dev.to/aws-heroes/an-aws-hero-reacts-to-the-io2-block-express-announcement-4d70"&gt;An AWS Hero reacts to the io2 Block Express announcement&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;I want to talk about the elegance that is io2 Block Express and why it truly is the first "Cloud SAN". In a traditional high performance and highly available Storage Area Network, data traffic between a storage array and the consuming server rides on a dedicated network… &lt;a href="https://dev.to/aws-heroes/an-aws-hero-reacts-to-the-io2-block-express-announcement-4d70"&gt;(read full article)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;By &lt;a href="https://aws.amazon.com/developer/community/heroes/dave-stauffacher/"&gt;Dave Stauffacher&lt;/a&gt;, AWS Community Hero&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#using-container-images-with-aws-lambda" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://hichaelmart.medium.com/using-container-images-with-aws-lambda-7ffbd23697f1"&gt;Using container images with AWS Lambda&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Container Image Support has just been announced for AWS Lambda and it’s a pretty big deal — I’m very excited because it’s something I’ve wanted for years… &lt;a href="https://hichaelmart.medium.com/using-container-images-with-aws-lambda-7ffbd23697f1"&gt;(read full article)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;By &lt;a href="https://aws.amazon.com/developer/community/heroes/michael-hart/"&gt;Michael Hart&lt;/a&gt;, AWS Serverless Hero&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-year-of-serverless" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://www.stackery.io/blog/the-year-of-serverless/"&gt;The Year of Serverless&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Danilo and Sheen are incredibly smart engineers and have done great things at the LEGO group. They’re also both great at sharing their knowledge. From the talk abstract: After experiencing scaling issues on Black Friday, the LEGO team fully refactored its monolith to serverless microservices... &lt;a href="https://www.stackery.io/blog/the-year-of-serverless/"&gt;(read the full article)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;By &lt;a href="https://aws.amazon.com/developer/community/heroes/farrah-campbell/"&gt;Farrah Campbell&lt;/a&gt;, AWS Serverless Hero&lt;/em&gt;&lt;/p&gt;

</description>
      <category>aws</category>
    </item>
    <item>
      <title>Top 5 DEV Comments from the Past Week</title>
      <author>Gracie Gregory (she/her)</author>
      <pubDate>Thu, 03 Dec 2020 21:33:03 +0000</pubDate>
      <link>https://dev.to/devteam/top-5-dev-comments-from-the-past-week-54hg</link>
      <guid>https://dev.to/devteam/top-5-dev-comments-from-the-past-week-54hg</guid>
      <description>&lt;p&gt;This is a weekly roundup of awesome DEV comments that you may have missed.  You are welcome and encouraged to boost posts and comments yourself using the &lt;strong&gt;&lt;a href="https://dev.to/t/bestofdev"&gt;#bestofdev&lt;/a&gt;&lt;/strong&gt; tag.&lt;/p&gt;

&lt;p&gt;&lt;a class="comment-mentioned-user" href="https://dev.to/mpodlasin"&gt;@mpodlasin&lt;/a&gt;
 shared this on-point response to &lt;a href="https://dev.to/patarapolw/please-explain-why-i-need-software-architecture-fe5"&gt;"Please explain why I need software architecture"&lt;/a&gt; &lt;/p&gt;


&lt;div class="liquid-comment"&gt;
    &lt;div class="details"&gt;
      &lt;a href="/mpodlasin"&gt;
        &lt;img class="profile-pic" src="https://res.cloudinary.com/practicaldev/image/fetch/s--JTr_6JYJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--M1y0zJ58--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_50%2Cq_auto%2Cw_50/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/444444/0b2d63e2-03ad-4db7-99b0-caa86c9d2c4f.jpeg" alt="mpodlasin profile image"&gt;
      &lt;/a&gt;
      &lt;a href="/mpodlasin"&gt;
        &lt;span class="comment-username"&gt;Mateusz Podlasin&lt;/span&gt;
      &lt;/a&gt;
      &lt;span class="color-base-30 px-2"&gt;•&lt;/span&gt;
&lt;a href="https://dev.to/mpodlasin/comment/18iok" class="comment-date crayons-link crayons-link--secondary fs-s"&gt;
  &lt;time&gt;
    Dec  2
  &lt;/time&gt;
&lt;/a&gt;

    &lt;/div&gt;
    &lt;div class="body"&gt;
      &lt;p&gt;The answer is simple.&lt;/p&gt;

&lt;p&gt;When you begin coding, you &lt;em&gt;shouldn't&lt;/em&gt; worry about those. At all.&lt;/p&gt;

&lt;p&gt;And then, when you write sufficiently complex projects, your code will become a horrible mess... and then you will understand. :)&lt;/p&gt;


    &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;It's always heartening to hear that a global event like Hacktoberfest is what brought someone to DEV. We're thrilled to have you as part of the community, &lt;a class="comment-mentioned-user" href="https://dev.to/busseyl"&gt;@busseyl&lt;/a&gt;
 — and congrats on completing Hacktoberfest 🎉 &lt;br&gt;
&lt;/p&gt;
&lt;div class="liquid-comment"&gt;
    &lt;div class="details"&gt;
      &lt;a href="/busseyl"&gt;
        &lt;img class="profile-pic" src="https://res.cloudinary.com/practicaldev/image/fetch/s--SDnTQyxO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--OK-rSFua--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_50%2Cq_auto%2Cw_50/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/527440/19c2bcf9-ba69-4d6f-9b66-84f2b517a692.jpeg" alt="busseyl profile image"&gt;
      &lt;/a&gt;
      &lt;a href="/busseyl"&gt;
        &lt;span class="comment-username"&gt;Lucas Bussey&lt;/span&gt;
      &lt;/a&gt;
      &lt;span class="color-base-30 px-2"&gt;•&lt;/span&gt;
&lt;a href="https://dev.to/busseyl/comment/18khb" class="comment-date crayons-link crayons-link--secondary fs-s"&gt;
  &lt;time&gt;
    Dec  3
  &lt;/time&gt;
&lt;/a&gt;

    &lt;/div&gt;
    &lt;div class="body"&gt;
      &lt;p&gt;I've been reading DEV articles for years now and have always enjoyed the articles. Finally signed up to claim my Hacktoberfest (something else I've been participating in since the very first year).&lt;/p&gt;

&lt;p&gt;Thank you to everyone who supports this great community!&lt;/p&gt;


    &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Super interesting response by &lt;a class="comment-mentioned-user" href="https://dev.to/andreidascalu"&gt;@andreidascalu&lt;/a&gt;
 to &lt;a href="https://dev.to/koreymoffett/why-does-php-get-so-much-hate-42ca"&gt;Why Does PHP Get So Much Hate&lt;/a&gt;. I learned a lot from this. &lt;/p&gt;


&lt;div class="liquid-comment"&gt;
    &lt;div class="details"&gt;
      &lt;a href="/andreidascalu"&gt;
        &lt;img class="profile-pic" src="https://res.cloudinary.com/practicaldev/image/fetch/s--T5ZdfCU5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--fVBw4fEF--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_50%2Cq_auto%2Cw_50/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/110539/0e53c571-51ed-4cbc-8840-7399b45a4944.jpeg" alt="andreidascalu profile image"&gt;
      &lt;/a&gt;
      &lt;a href="/andreidascalu"&gt;
        &lt;span class="comment-username"&gt;Andrei Dascalu&lt;/span&gt;
      &lt;/a&gt;
      &lt;span class="color-base-30 px-2"&gt;•&lt;/span&gt;
&lt;a href="https://dev.to/andreidascalu/comment/18di7" class="comment-date crayons-link crayons-link--secondary fs-s"&gt;
  &lt;time&gt;
    Nov 26
  &lt;/time&gt;
&lt;/a&gt;

    &lt;/div&gt;
    &lt;div class="body"&gt;
      &lt;p&gt;I've got 17 years of PHP under the belt and there are some points to be said:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;PHP is a victim of its popularity. With lots of sites across the internet in PHP, there are many old versions there, each bearing significant differences, enough to be a pain to developers migrating between projects&lt;/li&gt;
&lt;li&gt;Wordpress. Just look at it. Its development is soundly grounded in early php 5 versions. If you have any format programming training, looking at the Wordpress API will leave you wondering if those guys simply hated OOP or any kind of engineering best practices (spoiler: no, but PHP became OOP-ish fairly late for Wordpress to change). Many say that Wordpress is what helped PHP survive enough to become a real language in the later 7.x installments&lt;/li&gt;
&lt;li&gt;inconsistent API. The core PHP API has always been messy (tons of 'utility' functions thrown around, inconsistent parameters, interfaces you can't implement, etc)&lt;/li&gt;
&lt;li&gt;it's a web language but ... needs a third-party server to run? That's the biggest pain and WTF for me. At some point PHP got a server as part of its platform, but with a big "don't use in production" sign. Just about any language comes with some webserver implementation as part of its core platform (Java, nodejs, Go, Rust, you name it). Some still recommend using an efficient reverse proxy / balancer (eg: node) but for most others you get it out of the box. PHP has FPM but still can't function without Apache/Nginx. Rubbing salt on the wound: in today's cloud-native world, you can't containerize PHP to simply work with an Nginx ingress or Cloud LB, you still need to package another damn webserver. Ok, nowadays there's a nice multithreaded application platform (Roadrunner) that removes the need for fpm &amp;amp; nginx.&lt;/li&gt;
&lt;li&gt;the fact that some many radically different versions still live make it difficult to progress as a developer and easy to get trapped in bad code world. Myself as a job candidate keep underlying that I 'support' only PHP &amp;gt;= 7.3, I won't take jobs developing PHP for older versions unless their primary medium-term goal is migration.&lt;/li&gt;
&lt;/ul&gt;


    &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;That's some great advice, &lt;a class="comment-mentioned-user" href="https://dev.to/toddpress"&gt;@toddpress&lt;/a&gt;
 👀&lt;br&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="liquid-comment"&gt;
    &lt;div class="details"&gt;
      &lt;a href="/toddpress"&gt;
        &lt;img class="profile-pic" src="https://res.cloudinary.com/practicaldev/image/fetch/s--2XxMZQpX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--9Ag_IhjP--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_50%2Cq_auto%2Cw_50/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/230206/995dd188-6ecb-4b5a-a430-e40138b31280.jpeg" alt="toddpress profile image"&gt;
      &lt;/a&gt;
      &lt;a href="/toddpress"&gt;
        &lt;span class="comment-username"&gt;Todd Pressley&lt;/span&gt;
      &lt;/a&gt;
      &lt;span class="color-base-30 px-2"&gt;•&lt;/span&gt;
&lt;a href="https://dev.to/toddpress/comment/18ge1" class="comment-date crayons-link crayons-link--secondary fs-s"&gt;
  &lt;time&gt;
    Nov 29
  &lt;/time&gt;
&lt;/a&gt;

    &lt;/div&gt;
    &lt;div class="body"&gt;
      &lt;p&gt;Thank you for articulating this in your own way and publishing :) This topic reminds me of something a favorite mentor once taught me, when confused about naming a particular function:  &lt;/p&gt;

&lt;p&gt;&lt;em&gt;"If you're having trouble naming a function, then it's most likely doing too many things."&lt;/em&gt; &lt;/p&gt;

&lt;p&gt;Years later, when encountering similar issues, I play this back in my head and have found it very useful. It can be expanded to naming just about anything. &lt;/p&gt;

&lt;p&gt;Again, love the article!&lt;/p&gt;


    &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Congrats to &lt;a class="comment-mentioned-user" href="https://dev.to/codebyjustin"&gt;@codebyjustin&lt;/a&gt;
 for their first post here on DEV!&lt;br&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="liquid-comment"&gt;
    &lt;div class="details"&gt;
      &lt;a href="/codebyjustin"&gt;
        &lt;img class="profile-pic" src="https://res.cloudinary.com/practicaldev/image/fetch/s--euBefSav--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--lsIvA4GA--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_50%2Cq_auto%2Cw_50/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/402916/67dd72f9-daa2-48a3-8a38-b89117768a7c.png" alt="codebyjustin profile image"&gt;
      &lt;/a&gt;
      &lt;a href="/codebyjustin"&gt;
        &lt;span class="comment-username"&gt;Justin&lt;/span&gt;
      &lt;/a&gt;
      &lt;span class="color-base-30 px-2"&gt;•&lt;/span&gt;
&lt;a href="https://dev.to/codebyjustin/comment/18ed2" class="comment-date crayons-link crayons-link--secondary fs-s"&gt;
  &lt;time&gt;
    Nov 27
  &lt;/time&gt;
&lt;/a&gt;

    &lt;/div&gt;
    &lt;div class="body"&gt;
      &lt;p&gt;My win was publishing my first Dev.to article :D &lt;/p&gt;


    &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;See you next week for more great comments ✌&lt;/p&gt;

</description>
      <category>bestofdev</category>
    </item>
    <item>
      <title>What do you like and/or hate most about distributed conferences? Answer for the chance to be featured on our podcast!</title>
      <author>Gracie Gregory (she/her)</author>
      <pubDate>Thu, 03 Dec 2020 19:45:23 +0000</pubDate>
      <link>https://dev.to/devteam/what-do-you-like-and-or-hate-most-about-distributed-conferences-answer-for-the-chance-to-be-featured-on-our-podcast-146g</link>
      <guid>https://dev.to/devteam/what-do-you-like-and-or-hate-most-about-distributed-conferences-answer-for-the-chance-to-be-featured-on-our-podcast-146g</guid>
      <description>&lt;p&gt;The &lt;a href="https://dev.to/devdiscuss"&gt;DevDiscuss Podcast&lt;/a&gt; begins with an interview and ends with commentary from listeners — and we like to feature the actual &lt;em&gt;voices&lt;/em&gt; from our community!&lt;/p&gt;

&lt;blockquote&gt;
&lt;h3&gt;
  &lt;a href="#this-weeks-prompt-what-do-you-like-andor-hate-most-about-distributed-conferences" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;This week's prompt: “What do you like and/or hate most about distributed conferences?”&lt;/strong&gt;
&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;p&gt;For your chance to appear on an upcoming episode, answer the question above by:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Calling our Google Voice at +1 (929)500-1513 and leave a message 📞&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Sending a voice memo to &lt;a href="mailto:pod@dev.to"&gt;pod@dev.to&lt;/a&gt; 🎙&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;OR, leaving a comment here (we'll read your response aloud for you) 🗣&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Please send in your recordings by Wednesday, December 9th at Midnight, ET (9 PM PT, 5 AM UTC)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;Voice recordings will be given priority placement&lt;/strong&gt;&lt;/em&gt; 😉 &lt;/p&gt;




&lt;p&gt;Don't forget to check out the latest episode &lt;a href="https://dev.to/devdiscuss/s3-e2-demystifying-architecture"&gt;here&lt;/a&gt;&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>podcast</category>
    </item>
    <item>
      <title>Salesforce’s Slackquisition, PHP 8.0, Amazon Sidewalk, &amp; more on DevNews!</title>
      <author>Josh Puetz</author>
      <pubDate>Thu, 03 Dec 2020 19:20:42 +0000</pubDate>
      <link>https://dev.to/devteam/salesforce-s-slackquisition-php-8-0-amazon-sidewalk-more-on-devnews-4k5i</link>
      <guid>https://dev.to/devteam/salesforce-s-slackquisition-php-8-0-amazon-sidewalk-more-on-devnews-4k5i</guid>
      <description>&lt;h3&gt;
  &lt;a href="#were-back-with-another-episode-of-devnews" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;We're back with another episode of DevNews...&lt;/strong&gt;
&lt;/h3&gt;


&lt;div class="podcastliquidtag"&gt;
  &lt;div class="podcastliquidtag__info"&gt;
    &lt;a href="/devnews/s2-e6-salesforce-s-slackquisition-php-8-0-amazon-sidewalk-and-computer-fraud-and-abuse-act"&gt;
      &lt;h1 class="podcastliquidtag__info__episodetitle"&gt;S2:E6 - Salesforce’s Slackquisition, PHP 8.0, Amazon Sidewalk, and Computer Fraud and Abuse Act&lt;/h1&gt;
    &lt;/a&gt;
    &lt;a href="/devnews"&gt;
      &lt;h2 class="podcastliquidtag__info__podcasttitle"&gt;
        DevNews  

      &lt;/h2&gt;
    &lt;/a&gt;
  &lt;/div&gt;
  &lt;div id="record-s2-e6-salesforce-s-slackquisition-php-8-0-amazon-sidewalk-and-computer-fraud-and-abuse-act" class="podcastliquidtag__record"&gt;
    &lt;img class="button play-butt" id="play-butt-s2-e6-salesforce-s-slackquisition-php-8-0-amazon-sidewalk-and-computer-fraud-and-abuse-act" src="/assets/playbutt.png" alt="play"&gt;
    &lt;img class="button pause-butt" id="pause-butt-s2-e6-salesforce-s-slackquisition-php-8-0-amazon-sidewalk-and-computer-fraud-and-abuse-act" src="/assets/pausebutt.png" alt="pause"&gt;
    &lt;img class="podcastliquidtag__podcastimage" id="podcastimage-s2-e6-salesforce-s-slackquisition-php-8-0-amazon-sidewalk-and-computer-fraud-and-abuse-act" alt="DevNews" src="https://res.cloudinary.com/practicaldev/image/fetch/s--jJPvwj98--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--XOSCOlKI--/c_fill%2Cf_auto%2Cfl_progressive%2Cq_auto/https://dev-to-uploads.s3.amazonaws.com/uploads/podcast/image/346/5b0bd095-4a8c-4449-a43d-9e9b154b9d09.png"&gt;
  &lt;/div&gt;
  &lt;div class="hidden-audio" id="hidden-audio-s2-e6-salesforce-s-slackquisition-php-8-0-amazon-sidewalk-and-computer-fraud-and-abuse-act"&gt;
    
      
      Your browser does not support the audio element.
    
    &lt;div id="progressBar" class="audio-player-display"&gt;
      &lt;a href="/devnews/s2-e6-salesforce-s-slackquisition-php-8-0-amazon-sidewalk-and-computer-fraud-and-abuse-act"&gt;
        &lt;img id="episode-profile-image" alt="S2:E6 - Salesforce’s Slackquisition, PHP 8.0, Amazon Sidewalk, and Computer Fraud and Abuse Act" width="420" height="420" src="https://res.cloudinary.com/practicaldev/image/fetch/s--84VpOv6S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--3GWkSFQs--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_420%2Cq_auto%2Cw_420/https://dev-to-uploads.s3.amazonaws.com/uploads/podcast/image/346/5b0bd095-4a8c-4449-a43d-9e9b154b9d09.png"&gt;
        &lt;img id="animated-bars" src="/assets/animated-bars.gif" alt="animated volume bars"&gt;
      &lt;/a&gt;
      &lt;span id="barPlayPause"&gt;
        &lt;img class="butt play-butt" src="/assets/playbutt.png" alt="play"&gt;
        &lt;img class="butt pause-butt" src="/assets/pausebutt.png" alt="pause"&gt;
      &lt;/span&gt;
      &lt;span id="volume"&gt;
        &lt;span id="volumeindicator" class="volume-icon-wrapper showing"&gt;
          &lt;span id="volbutt"&gt;
            &lt;img alt="volume" class="icon-img" height="16" width="16" src="https://res.cloudinary.com/practicaldev/image/fetch/s--SnhE4kcy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/volume.png"&gt;
          &lt;/span&gt;
          &lt;span class="range-wrapper"&gt;
            
          &lt;/span&gt;
        &lt;/span&gt;
        &lt;span id="mutebutt" class="volume-icon-wrapper hidden"&gt;
          &lt;img alt="mute" class="icon-img" height="16" width="16" src="https://res.cloudinary.com/practicaldev/image/fetch/s--prPRZNLS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/volume-mute.png"&gt;
        &lt;/span&gt;
        &lt;span class="speed" id="speed"&gt;1x&lt;/span&gt;
      &lt;/span&gt;
      &lt;span class="buffer-wrapper" id="bufferwrapper"&gt;
        &lt;span id="buffer"&gt;&lt;/span&gt;
        &lt;span id="progress"&gt;&lt;/span&gt;
        &lt;span id="time"&gt;initializing...&lt;/span&gt;
        &lt;span id="closebutt"&gt;×&lt;/span&gt;
      &lt;/span&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#this-week-saronyitbarek-and-i-covered" class="anchor"&gt;
  &lt;/a&gt;
  This week, &lt;a class="comment-mentioned-user" href="https://dev.to/saronyitbarek"&gt;@saronyitbarek&lt;/a&gt;
 and I covered:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Salesforce's $27.7 billion Slack purchase&lt;/li&gt;
&lt;li&gt;Amazon's upcoming Sidewalk feature for IoT devices&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#we-also-spoke-with-the-following-guests-about-two-other-stories" class="anchor"&gt;
  &lt;/a&gt;
  We also spoke with the following guests about two other stories:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://twitter.com/JGamblin"&gt;Jerry Gamblin&lt;/a&gt;, Manager of Security and Compliance at Kenna Security. We chatted with Jerry about the U.S. Supreme Court hearing arguments about The Computer Fraud and Abuse Act.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/sgolemon"&gt;Sara Golemon&lt;/a&gt;, Core Developer and Release Manager on the PHP team. Sara joined us to talk about PHP 8.0.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;You can &lt;a href="//dev.to/devnews"&gt;follow DevNews&lt;/a&gt; to get episode notifications and listen right in your feed&lt;/em&gt; — or subscribe on your platform of choice! Plus, if you leave us a review, we'll send you a free pack of thank-you stickers. Details &lt;a href="https://airtable.com/shr8oKAIMZgdYnBxx"&gt;here&lt;/a&gt;. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#quick-listening-links" class="anchor"&gt;
  &lt;/a&gt;
  Quick Listening Links
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://podcasts.apple.com/us/podcast/s2-e6-salesforces-slackquisition-php-8-0-amazon-sidewalk/id1525581923?i=1000501173129"&gt;Apple Podcasts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://open.spotify.com/episode/6faNGXVUC6qfEqil7L3BCp"&gt;Spotify&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://podcasts.google.com/feed/aHR0cDovL2ZlZWRzLmNvZGVuZXdiaWUub3JnL2Rldm5ld3NfcG9kY2FzdC54bWw/episode/aHR0cHM6Ly9kZXZwb2RzLmRldi9wb2RjYXN0cy9kZXZuZXdzLzE0?sa=X&amp;amp;ved=0CAQQkfYCahcKEwiQ2afivLLtAhUAAAAAHQAAAAAQAw&amp;amp;hl=en"&gt;Google&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.stitcher.com/show/devnews"&gt;Stitcher&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.listennotes.com/podcasts/devnews/s2e6-salesforces-nsKGFSaiYtb/"&gt;Listen Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tunein.com/podcasts/Technology-Podcasts/DevNews-p1352512/?topicId=159179945"&gt;TuneIn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://feeds.codenewbie.org/devnews_podcast.xml"&gt;RSS Feed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://devpods.herokuapp.com/podcasts/devnews/episodes/70"&gt;Transcript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pca.st/detp0o36"&gt;PocketCasts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;em&gt;Acknowledgements&lt;/em&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;a class="comment-mentioned-user" href="https://dev.to/levisharpe"&gt;@levisharpe&lt;/a&gt;
 for producing &amp;amp; mixing the show&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Our season two sponsors, &lt;a href="https://triplebyte.com/a/YU8fSn0/d"&gt;Triplebyte&lt;/a&gt; and &lt;a href="https://nexmo.dev/devnews2"&gt;Vonage&lt;/a&gt;!&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#" class="anchor"&gt;
  &lt;/a&gt;
  🗞️🗞️🗞️
&lt;/h1&gt;

</description>
      <category>news</category>
      <category>podcast</category>
    </item>
    <item>
      <title>Do they teach "pointers" in bootcamp? Should they?</title>
      <author>Ben Halpern</author>
      <pubDate>Thu, 03 Dec 2020 19:16:45 +0000</pubDate>
      <link>https://dev.to/ben/do-they-teach-pointers-in-bootcamp-should-they-1g4b</link>
      <guid>https://dev.to/ben/do-they-teach-pointers-in-bootcamp-should-they-1g4b</guid>
      <description>&lt;p&gt;The &lt;em&gt;pointer&lt;/em&gt; is not a thing that every developer &lt;em&gt;needs&lt;/em&gt; to know, but it's still a thing that exists. This question is kind of a stand in for concepts &lt;em&gt;like&lt;/em&gt; pointers and not just that one thing.&lt;/p&gt;

&lt;p&gt;I wonder: Do they teach this concept in bootcamp at all?&lt;/p&gt;

&lt;p&gt;Should they teach stuff like pointers at all to a group learning, say, web development in JavaScript? If so, does it come early or late?&lt;/p&gt;

&lt;p&gt;I imagine the course doesn't need to cover computer science from the ground up, but what should get detailed and when?&lt;/p&gt;


&lt;div class="ltag__wikipedia--container"&gt;
  &lt;div class="ltag__wikipedia--header"&gt;
    &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BZyEeiGj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/wikipedia-logo-0a3e76624c7b1c3ccdeb9493ea4add6ef5bd82d7e88d102d5ddfd7c981efa2e7.svg" class="ltag__wikipedia--logo" alt="Wikipedia Logo"&gt;
    &lt;a href="https://en.wikipedia.org/wiki/Pointer_(computer_programming)" rel="noopener noreferrer"&gt;Pointer (computer programming)&lt;/a&gt;
  &lt;/div&gt;
  &lt;div class="ltag__wikipedia--extract"&gt;&lt;p&gt;In computer science, a &lt;b&gt;pointer&lt;/b&gt; is an object in many programming languages that stores a memory address. This can be that of another value located in computer memory, or in some cases, that of memory-mapped computer hardware. A pointer &lt;i&gt;references&lt;/i&gt; a location in memory, and obtaining the value stored at that location is known as &lt;i&gt;dereferencing&lt;/i&gt; the pointer. As an analogy, a page number in a book's index could be considered a pointer to the corresponding page; dereferencing such a pointer would be done by flipping to the page with the given page number and reading the text found on that page. The actual format and content of a pointer variable is dependent on the underlying computer architecture.&lt;/p&gt;&lt;/div&gt;
  &lt;div class="ltag__wikipedia--btn--container"&gt;
    
      &lt;a href="https://en.wikipedia.org/wiki/Pointer_(computer_programming)" rel="noopener noreferrer"&gt;View on Wikipedia&lt;/a&gt;
    
  &lt;/div&gt;
&lt;/div&gt;


</description>
      <category>discuss</category>
      <category>computerscience</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Top VS Code Extensions Every Developer Should Use 🛠</title>
      <author>Darsh Shah</author>
      <pubDate>Thu, 03 Dec 2020 19:14:22 +0000</pubDate>
      <link>https://dev.to/iamdarshshah/top-vs-code-extensions-every-developer-should-use-1man</link>
      <guid>https://dev.to/iamdarshshah/top-vs-code-extensions-every-developer-should-use-1man</guid>
      <description>&lt;p&gt;Are you looking for the amazing VS Code extensions that will help you be more productive while coding? 🤔&lt;/p&gt;

&lt;p&gt;If you said &lt;code&gt;Yes&lt;/code&gt;, then you're at the right place. In this article, I'll be sharing top VS Code Extensions you must-have for making your life easier. 😛&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-vs-code" class="anchor"&gt;
  &lt;/a&gt;
  What is VS Code? 🤯
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Visual Studio Code&lt;/strong&gt; is a free source-code editor made by Microsoft for Windows, Linux, and macOS. Features include support for debugging, syntax highlighting, intelligent code completion, snippets, code refactoring, and embedded Git.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-vs-code" class="anchor"&gt;
  &lt;/a&gt;
  Why VS Code? 🧐
&lt;/h3&gt;

&lt;p&gt;Microsoft Visual Studio is a premium and most dominant IDE for programming which is profoundly prevalent among engineers.&lt;/p&gt;

&lt;p&gt;It contains a plethora of different kinds of tools and features which makes testing and compatibility even easier.&lt;/p&gt;

&lt;p&gt;Visual Studio Code is potentially the best JavaScript ide for Windows, Mac, and Linux. Nowadays, VS Code is one of the most popular ides used by developers.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#top-vs-code-extensions-you-must-have" class="anchor"&gt;
  &lt;/a&gt;
  Top VS Code Extensions, you must have 🤩
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=aaron-bond.better-comments"&gt;Better Comments&lt;/a&gt; &lt;br&gt;
The Better Comments extension will help you create more human-friendly comments in your code. If you're the one who loves watching different colored comments, then check it out.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tSsATKKJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1607017728100/WioXWReu2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tSsATKKJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1607017728100/WioXWReu2.png" alt="1.png"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=CoenraadS.bracket-pair-colorizer"&gt;Bracket Pair Colorizer&lt;/a&gt;&lt;br&gt;
This extension allows matching brackets to be identified with colors. The user can define which characters to match, and which colors to use.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EPwDTPBQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1607017981626/4jyq8B7Pi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EPwDTPBQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1607017981626/4jyq8B7Pi.png" alt="2.PNG"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=msjsdiag.debugger-for-chrome"&gt;Debugger for Chrome&lt;/a&gt;&lt;br&gt;
A VS Code extension to debug your JavaScript code in the Google Chrome browser, or other targets that support the Chrome DevTools Protocol.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=dsznajder.es7-react-js-snippets"&gt;ES7 React/Redux/GraphQL/React-Native snippets&lt;/a&gt;&lt;br&gt;
This extension will provide you JavaScript and React/Redux snippets in hand. So, no-more doubting your syntaxes. It will help you code quicker and in a more efficient manner. Also, it will save a lot of time while writing imports or react components (just for the sake of example).&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vBDg24hY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1607018946871/nIkOt0DYx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vBDg24hY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1607018946871/nIkOt0DYx.png" alt="4.PNG"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint"&gt;ESLint&lt;/a&gt;&lt;br&gt;
ESLint is a fantastic linter that picks up syntax errors for you to spot problems with your code before you run your code. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JW7juYHW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1607020156128/OK1RYY1A_.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JW7juYHW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1607020156128/OK1RYY1A_.png" alt="9.PNG"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=file-icons.file-icons"&gt;file-icons&lt;/a&gt;&lt;br&gt;
It provides unique file icons to quickly identify file type in the IDE.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_Py5vOo0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1607019122812/76YFjOk2D.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_Py5vOo0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1607019122812/76YFjOk2D.png" alt="5.png"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens"&gt;GitLens — Git supercharged&lt;/a&gt;&lt;br&gt;
GitLens supercharges the Git capabilities built into Visual Studio Code. It helps you to visualize code authorship at a glance via Git blame annotations and code lens, seamlessly navigate and explore Git repositories, gain valuable insights via powerful comparison commands, and so much more. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JRBTQAf3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1607019325131/v0kfHg2UA.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JRBTQAf3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1607019325131/v0kfHg2UA.gif" alt="6.gif"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=wix.vscode-import-cost"&gt;Import Cost&lt;/a&gt;&lt;br&gt;
This extension will display inline in the editor the size of the imported package. The extension utilizes webpack with babili-webpack-plugin in order to detect the imported size.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QJwFPWgi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1607019511801/g7ppxn4vL.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QJwFPWgi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1607019511801/g7ppxn4vL.png" alt="7.PNG"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=oderwat.indent-rainbow"&gt;indent-rainbow&lt;/a&gt;&lt;br&gt;
This extension colorizes the indentation in front of your text alternating four different colors on each step.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iagqZc8K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1607019672886/V6IPWTFqq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iagqZc8K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1607019672886/V6IPWTFqq.png" alt="8.png"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=ritwickdey.LiveServer"&gt;Live Server&lt;/a&gt;&lt;br&gt;
Launch a local development server with live reload feature for static &amp;amp; dynamic pages. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rSIell4H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1607020306599/sbjaeP4w-.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rSIell4H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1607020306599/sbjaeP4w-.gif" alt="10.gif"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=ionutvmi.path-autocomplete"&gt;Path Autocomplete&lt;/a&gt;&lt;br&gt;
Provides path completion for visual studio code. I personally found this extension really helpful.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fXGb8Mxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1607020465554/7AhC4rHZz.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fXGb8Mxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1607020465554/7AhC4rHZz.gif" alt="11.gif"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode"&gt;Prettier&lt;/a&gt;&lt;br&gt;
Prettier is an opinionated code formatter. It enforces a consistent style by parsing your code and re-printing it with its own rules that take the maximum line length into account, wrapping code when necessary.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pZhUZEZ0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1607020589495/r27jdZMnb.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pZhUZEZ0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1607020589495/r27jdZMnb.gif" alt="12.gif"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;




&lt;h4&gt;
  &lt;a href="#vs-code-theme-i-use" class="anchor"&gt;
  &lt;/a&gt;
  VS Code Theme I use 💜
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=sdras.night-owl"&gt;Night Owl&lt;/a&gt; by &lt;a href="https://twitter.com/sarah_edo"&gt;Sarah Drasner&lt;/a&gt; &lt;br&gt;
A VS Code theme for the night owls out there. Now introducing Light Owl theme for daytime usage. Decisions were based on meaningful contrast for reading comprehension and for optimal razzle-dazzle. ✨&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y435LsZn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1607020754862/FyYkLZiUE.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y435LsZn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1607020754862/FyYkLZiUE.png" alt="13.PNG"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;These are the extensions that I make use of in my day to day work life. Woohoo! We did it! 🎉&lt;/p&gt;

&lt;p&gt;Are you done setting up your VS Code? Obviously, isn't it 👀 &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Is there any other extension that you make use of while coding? Please let me know in the comments section.✍️&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;Thanks, for reading it till the end.&lt;/em&gt; 🙏&lt;/p&gt;




&lt;p&gt;Hope you find that helpful! Let me know your thoughts on this in the comments section. Don't forget to share this article with your friends or colleagues. Feel free to connect with me on any of the platforms below! 🚀&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/iamdarshshah"&gt;Twitter&lt;/a&gt;  |  &lt;a href="https://www.linkedin.com/in/iamdarshshah/"&gt;LinkedIn&lt;/a&gt;  |  &lt;a href="https://github.com/iamdarshshah"&gt;GitHub&lt;/a&gt; &lt;/p&gt;




</description>
      <category>vscode</category>
      <category>codenewbie</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Tailwind CSS - Free starters coded in React, Vue, Svelte, and Angular</title>
      <author>Sm0ke</author>
      <pubDate>Thu, 03 Dec 2020 19:07:48 +0000</pubDate>
      <link>https://dev.to/sm0ke/tailwind-css-free-starters-coded-in-react-vue-svelte-and-angular-3e1p</link>
      <guid>https://dev.to/sm0ke/tailwind-css-free-starters-coded-in-react-vue-svelte-and-angular-3e1p</guid>
      <description>&lt;p&gt;Hello Coders, &lt;/p&gt;

&lt;p&gt;This article presents a short-list with open-source starters styled with Tailwind, the popular &lt;em&gt;utility-first CSS framework&lt;/em&gt;, in different technologies: React, Vue, Angular, Svelte, and plain Javascript.&lt;br&gt;&lt;br&gt;
The starters, provided and actively supported by Creative-Tim, are released under the MIT license and can be downloaded from Github (no account required). &lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Thanks for reading! TL;DR;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;(Free) &lt;a href="https://bit.ly/36Ce789"&gt;Tailwind React Starter&lt;/a&gt; - product page&lt;/li&gt;
&lt;li&gt;(Free) &lt;a href="https://bit.ly/2L8GuCV"&gt;Tailwind Vue Starter&lt;/a&gt; - product page&lt;/li&gt;
&lt;li&gt;(Free) &lt;a href="https://bit.ly/2Vzx5WQ"&gt;Tailwind Angular Starter&lt;/a&gt; - product page&lt;/li&gt;
&lt;li&gt;(Free) &lt;a href="https://bit.ly/2SAbKLs"&gt;Tailwind Svelte Starter&lt;/a&gt; - product page&lt;/li&gt;
&lt;li&gt;(Free) &lt;a href="https://bit.ly/3lDyEh4"&gt;Tailwind Vanilla JS&lt;/a&gt; - product page&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;The full index provided by &lt;a href="https://bit.ly/3fKQZaL"&gt;Creative-Tim&lt;/a&gt; can be found at this address: &lt;a href="https://bit.ly/2JBeeYV"&gt;Tailwind Templates&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--00lSSxmk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/admin-dashboards/tailwind-css-free-starters/main/media/tailwind-css-free-starters-intro.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--00lSSxmk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/admin-dashboards/tailwind-css-free-starters/main/media/tailwind-css-free-starters-intro.gif" alt="Tailwind CSS Templates - A curated index provided by Creative-Tim."&gt;&lt;/a&gt; &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#what-is-tailwind-css" class="anchor"&gt;
  &lt;/a&gt;
  What is &lt;strong&gt;Tailwind CSS&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Short-note&lt;/strong&gt; - Tailwind CSS is the most popular utility-first CSS framework in the world for rapidly building custom user interfaces for the web. It is a highly customizable collection of low-level CSS utility classes written in PostCSS destined to be customized using JavaScript.&lt;/p&gt;

&lt;p&gt;This CSS framework created by Adam Wathan, downloaded 10 million times until Aug.2020, comes with a new concept: it’s utility-based, which means you start with a collection of CSS primitives and code the entire UI from the bottom. &lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Links to read more about Tailwind:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://tailwindcss.com/"&gt;Tailwind CSS&lt;/a&gt; - the official website&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://themesberg.com/blog/tailwind-css/tutorial"&gt;Tailwind CSS tutorial&lt;/a&gt; - a nice article published by Themesberg&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://mattburgess.medium.com/getting-started-with-tailwindcss-3190def35361"&gt;Getting Started With TailwindCSS&lt;/a&gt; - more Tailwind stuff&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Once we have a basic idea about Tailwind, we can move on with our list. Let's go!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#tailwind-react-starter" class="anchor"&gt;
  &lt;/a&gt;
  &lt;a href="https://bit.ly/36Ce789"&gt;Tailwind React Starter&lt;/a&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Provider: Creative-Tim&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Notus React&lt;/strong&gt; is built with over frontend 100 individual components, giving you the freedom to choose and combine. All components can take variations in colors that you can easily modify using Tailwind CSS classes.&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Product Page - &lt;a href="https://bit.ly/36Ce789"&gt;Tailwind React Starter&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kSQqxd7L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/admin-dashboards/tailwind-css-free-starters/main/media/tailwind-css-react-notus-free-starter.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kSQqxd7L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/admin-dashboards/tailwind-css-free-starters/main/media/tailwind-css-react-notus-free-starter.jpg" alt="Tailwind CSS React - Free starter provided by Creative-Tim."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#tailwind-vue-starter" class="anchor"&gt;
  &lt;/a&gt;
  &lt;a href="https://bit.ly/2L8GuCV"&gt;Tailwind Vue Starter&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The previous design can be downloaded also in Vue, another popular UI Framework. This Free Tailwind CSS and VueJS Template is coming with prebuilt examples, so the development process is seamless, switching from our pages to the real website is very easy to be done.&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Product page - &lt;a href="https://bit.ly/2L8GuCV"&gt;Tailwind Vue Starter&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RbwFmasi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/admin-dashboards/tailwind-css-free-starters/main/media/tailwind-css-vue-notus-free-starter.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RbwFmasi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/admin-dashboards/tailwind-css-free-starters/main/media/tailwind-css-vue-notus-free-starter.jpg" alt="Tailwind CSS Vue - Free starter provided by Creative-Tim."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#tailwind-angular-starter" class="anchor"&gt;
  &lt;/a&gt;
  &lt;a href="https://bit.ly/2Vzx5WQ"&gt;Tailwind Angular Starter&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Angular is also present in our list used to animate the same UI Kit. Notus Angular is built with over frontend 100 individual components, giving you the freedom to choose and combine. All components can take variations in colors that you can easily modify using Tailwind CSS classes.&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Product page - &lt;a href="https://bit.ly/2Vzx5WQ"&gt;Tailwind Angular Starter&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xBCfNoP1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/admin-dashboards/tailwind-css-free-starters/main/media/tailwind-css-angular-notus-free-starter.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xBCfNoP1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/admin-dashboards/tailwind-css-free-starters/main/media/tailwind-css-angular-notus-free-starter.jpg" alt="Tailwind CSS Angular - Free starter provided by Creative-Tim."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#tailwind-svelte-starter" class="anchor"&gt;
  &lt;/a&gt;
  &lt;a href="https://bit.ly/2SAbKLs"&gt;Tailwind Svelte Starter&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;This version is my favorite and I'm playing a lot with it, mostly for my own learning activities. The product is nicely &lt;a href="https://bit.ly/3g7PELc"&gt;documented&lt;/a&gt; and anyone with basic Javascript knowledge can code a small project with ease. &lt;/p&gt;




&lt;ul&gt;
&lt;li&gt;Product page - &lt;a href="https://bit.ly/2SAbKLs"&gt;Tailwind Svelte Starter&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_AoUfQ0L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/admin-dashboards/tailwind-css-free-starters/main/media/tailwind-css-svelte-notus-free-starter.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_AoUfQ0L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/admin-dashboards/tailwind-css-free-starters/main/media/tailwind-css-svelte-notus-free-starter.jpg" alt="Tailwind CSS Angular - Free starter provided by Creative-Tim."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Thank you! Btw, my (nick)name is &lt;strong&gt;Sm0ke&lt;/strong&gt; and I'm pretty active also on &lt;a href="https://twitter.com/Sm0keDev"&gt;Twitter&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;P.S. Feel free to suggest more Tailwind starters in the comments. &lt;/p&gt;

</description>
      <category>tailwindcss</category>
      <category>react</category>
      <category>vue</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Getting Started With Docker</title>
      <author>Adam Clarke</author>
      <pubDate>Thu, 03 Dec 2020 18:58:39 +0000</pubDate>
      <link>https://dev.to/thisdotmedia/getting-started-with-docker-i35</link>
      <guid>https://dev.to/thisdotmedia/getting-started-with-docker-i35</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction" class="anchor"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Docker is quickly becoming one of the most popular technologies for hosting web applications. It is a set of tools for packaging, distributing, and running software applications. Developers can write configuration files to create packages called images, which are distributed via decentralized, web-based repositories (some public, some private). Images downloaded from repositories are used as templates to create isolated environments called "containers" that run applications within them. Many containers may exist alongside each other on a single host. Memory and CPU resources are shared between all the containers running on a machine, but each container has its own fully isolated file system and environment. This is convenient for a number of reasons, but most of all, it simplifies the process of installing and running one or more applications on a single host machine. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#installing-docker" class="anchor"&gt;
  &lt;/a&gt;
  Installing Docker
&lt;/h2&gt;

&lt;p&gt;If you are on MacOS or Windows, the best way to install Docker is by installing Docker Desktop. It provides a complete installation of Docker and provides a GUI for managing it. You can use the GUI to start or stop your Docker daemon, or to manage installing software updates to the Docker platform. (Bonus: Docker Desktop can also manage a local Kubernetes cluster for you. It's not relevant to this article, but it provides a straightforward way to get started with Kubernetes, a platform for managing running containers across a scalable number of hosts). Linux users can install docker from their distribution’s package manager, but the Docker Desktop GUI is not included. Installation instructions for the most popular Linux distributions can be found in the Docker documentation. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#working-with-3rd-party-containers" class="anchor"&gt;
  &lt;/a&gt;
  Working With 3rd Party Containers
&lt;/h2&gt;

&lt;p&gt;The first thing to try once you've installed Docker on your computer is running containers based on 3rd party images. This exercise is a great way to quickly display the power of Docker. First open your favorite system terminal and enter &lt;code&gt;docker pull nginx&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="//images.ctfassets.net/zojzzdop0fzx/6aKHD4kFrpdPqAb7jIbKCm/070b154395967c1d34b4e978005b9e0f/docker-pull.gif" class="article-body-image-wrapper"&gt;&lt;img src="//images.ctfassets.net/zojzzdop0fzx/6aKHD4kFrpdPqAb7jIbKCm/070b154395967c1d34b4e978005b9e0f/docker-pull.gif" alt="Docker Pull Animation"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This command will download the official nginx image from Docker Hub. Docker Hub is a managed host for Docker images. You can think of it sort of like npm for Docker. We've pulled the newest version of the nginx image, however, as with npm, we could have chosen a specific version to download by changing the command to &lt;code&gt;docker pull nginx:1.18&lt;/code&gt;. You can find more details about an image, including which versions are available for download, on its Docker Hub page.&lt;/p&gt;

&lt;p&gt;Now that we've downloaded an image, we can use it to create a container on our local machine just as simply as we downloaded it. Run &lt;code&gt;docker run -d -p 8080:80 nginx&lt;/code&gt; to start an nginx container. I’ve added a couple options to the command. By default, nginx runs on port 80, and your system configuration likely prevents you from exposing port 80. Therefore, we use &lt;code&gt;-p 8080:80&lt;/code&gt; to bind port 80 on the container to port 8080 on your local machine. We use &lt;code&gt;-d&lt;/code&gt; to detach the running container from the terminal session. This will allow us to continue using the same terminal while the nginx container continues to run in the background.&lt;/p&gt;

&lt;p&gt;Now, you can navigate to &lt;a href="http://localhost:8080"&gt;http://localhost:8080&lt;/a&gt; with your web browser, and see the nginx welcome page that is being served from within Docker. You can stop the nginx container running in the background by using the &lt;code&gt;docker kill&lt;/code&gt; command. First, you'll need to use &lt;code&gt;docker ps&lt;/code&gt; to get its container ID, then you can run &lt;code&gt;docker kill &amp;lt;container ID&amp;gt;&lt;/code&gt;. Now, if you navigate to &lt;a href="http://localhost:8080"&gt;http://localhost:8080&lt;/a&gt; again, you will be met with an error, and &lt;code&gt;docker ps&lt;/code&gt; will show no containers running. &lt;/p&gt;

&lt;p&gt;&lt;a href="//images.ctfassets.net/zojzzdop0fzx/5MKagaQHu5UmloqTqIM1F2/9412fc206d14101f99faf2389a7cc6ed/docker-kill.gif" class="article-body-image-wrapper"&gt;&lt;img src="//images.ctfassets.net/zojzzdop0fzx/5MKagaQHu5UmloqTqIM1F2/9412fc206d14101f99faf2389a7cc6ed/docker-kill.gif" alt="Docker Kill Animation"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The ability to simply download and run any published image is one of the most powerful features of Docker. Docker Hub hosts millions of already baked images, many of which are officially supported by the developer of the software contained within. This allows you to quickly and easily deploy 3rd party software to your servers and workstations without having to follow bespoke installation processes. However, this isn’t all that Docker can do. You can also use it build your own images so that you can benefit from the same streamlined deployment processes for your own software.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#build-your-own" class="anchor"&gt;
  &lt;/a&gt;
  Build Your Own
&lt;/h2&gt;

&lt;p&gt;As I said before, Docker isn’t only good for running software applications from 3rd parties. You can build and publish your own images, so that your applications can also benefit from the streamlined deployment workflows that Docker provides. Docker images are built using 2 configuration files, &lt;code&gt;Dockerfile&lt;/code&gt; and &lt;code&gt;.dockerignore&lt;/code&gt;. &lt;code&gt;Dockerfile&lt;/code&gt; is the most important of the two. It contains instructions for telling docker how to run your application within a container. The &lt;code&gt;.dockerignore&lt;/code&gt; file is similar to Git’s &lt;code&gt;.gitignore&lt;/code&gt; file. It contains a list of project files that should never be copied into container images. &lt;/p&gt;

&lt;p&gt;For this example, we'll Dockerize a dead "hello world" app, written with Node.js and Express. Our example project has a &lt;code&gt;package.json&lt;/code&gt; and &lt;code&gt;index.js&lt;/code&gt; like the following:&lt;/p&gt;

&lt;p&gt;package.json:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{ 
    "name": "hiwrld",
    "version": "1.0.0",
    "description": "hi world",
    "main": "index.js",
    "scripts": {
      "start": "node index.js"
    },
    "author": "Adam Clarke",
    "license": "MIT",
    "dependencies": {
      "express": "^4.17.1"
    }
  }
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;






&lt;p&gt;index.js:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const express = require('express')
const app = express()
const port = 3000
const greeting = process.env.GREETING

app.get('/', (req, res) =&amp;gt; {
 res.send('Hello World!')
})

app.listen(port, () =&amp;gt; {
 console.log('Example app listening at http://localhost:' + port)
})
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;package.json&lt;/code&gt; manages our single express dependency, and configures an &lt;code&gt;npm start&lt;/code&gt; command with which to start the application. In &lt;code&gt;index.js&lt;/code&gt;, I've defined a basic express app that responds to requests on the root path with a greeting message. &lt;/p&gt;

&lt;p&gt;The first step to Dockerizing this application is creating a &lt;code&gt;Dockerfile&lt;/code&gt;. The first thing we should do with our empty Dockerfile is add a &lt;code&gt;FROM&lt;/code&gt; directive. This tells Docker which image we want to use as the base for our application image. Any Docker image published to a repository can be used in your &lt;code&gt;FROM&lt;/code&gt; directive. Since we've created a Node.js application, we'll use the official node docker image. This will prevent us from needing to install Node.js on our own. Add the following to the top of your empty Dockerfile:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;FROM node:15
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Next, we need to make sure that our npm dependencies are installed into the container so that the application will run. We will use the &lt;code&gt;COPY&lt;/code&gt; and &lt;code&gt;RUN&lt;/code&gt; directives to copy our &lt;code&gt;package.json&lt;/code&gt; file (along with the &lt;code&gt;package-lock.json&lt;/code&gt; that was generated when modules were installed locally) and run &lt;code&gt;npm install&lt;/code&gt;. We'll also use the &lt;code&gt;WORKDIR&lt;/code&gt; directive to create a folder and make it the image's working directory. Add the following to the bottom of your &lt;code&gt;Dockerfile&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# Create a directory for the app and make it the working directory
WORKDIR /usr/src/app

# Copy package files from the local filesystem directory to the working directory of the container
# You can use a wildcard character to capture multiple files for copying. In this case we capture
# package.json and package-lock.json
COPY package*.json ./

# now install the dependencies into the container image
RUN npm install
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Now that we've configured the image so that Docker installs the application dependencies, we need to copy our application code and tell Docker how to run our application. We will again use &lt;code&gt;COPY&lt;/code&gt;, but we’ll add  &lt;code&gt;CMD&lt;/code&gt; and &lt;code&gt;EXPOSE&lt;/code&gt; directives as well. These will explain to Docker how to start our application and which ports it needs exposed to operate. Add these lines to your Dockerfile:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# Copy everything from the local filesystem directory to the working directory. Including
# the source code
COPY . .

# The app runs on port 3000
EXPOSE 3000

# Use the start script defined in package.json to start the application
CMD ["npm", "start"]
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Your completed Dockerfile should look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;FROM node:15

# Create a directory for the app and make it the working directory
WORKDIR /usr/src/app

# Copy package files from the local filesystem directory to the working directory of the container
# You can use a wildcard character to capture multiple files for copying. In this case we capture
# package.json and package-lock.json
COPY package*.json ./

# now install the dependencies into the container image
RUN npm install

# Copy everything from the local filesystem directory to the working directory. Including
# the source code
COPY . .

# The app runs on port 3000
EXPOSE 3000

# Use the start script defined in package.json to start the application
CMD ["npm", "start"]
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Now that we have a complete Dockerfile, we need to create a &lt;code&gt;.dockerignore&lt;/code&gt; as well. Since our project is simple, we only need to ignore our local node_modules folder. That will ensure that the locally installed modules aren’t copied from your local disk via the &lt;code&gt;COPY . .&lt;/code&gt; directive in our Dockerfile after they've already been installed into the container image with npm. We'll also ignore npm debug logs since they're never needed, and it's a best practice to keep Docker images' storage footprints as small as possible. Add the following &lt;code&gt;.dockerignore&lt;/code&gt; to the project directory:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;node_modules
npm-debug.log
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;On a larger project, you would want to add things like the &lt;code&gt;.git&lt;/code&gt; folder and any text and/or configuration files that aren't required for the app to run, like continuous integration configuration, or project readme files.&lt;/p&gt;

&lt;p&gt;Now that we've got our Docker configuration files, we can build an image and run it! In order to build your Docker image open your terminal and navigate to the same location where your Dockerfile is, then run &lt;code&gt;docker build -t hello-world .&lt;/code&gt;. Docker will look for your &lt;code&gt;Dockerfile&lt;/code&gt; in the working folder, and will build an image, giving it a tag of “hello-world”. The “tag” is just a name we can use later to reference the image.&lt;/p&gt;

&lt;p&gt;&lt;a href="//images.ctfassets.net/zojzzdop0fzx/3nkq7vHffuJkSwGdz2T4zS/42427f3c7db66763463c38c940184417/docker-build.gif" class="article-body-image-wrapper"&gt;&lt;img src="//images.ctfassets.net/zojzzdop0fzx/3nkq7vHffuJkSwGdz2T4zS/42427f3c7db66763463c38c940184417/docker-build.gif" alt="Docker Build Animation"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once your image build has completed, you can run it! Just as you did before with nginx, simply run &lt;code&gt;docker run -d -p 3000:3000 hello-world&lt;/code&gt;. Now, you can navigate your browser to &lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt;, and you will be politely greeted by our example application. You may also use &lt;code&gt;docker ps&lt;/code&gt; and &lt;code&gt;docker kill&lt;/code&gt; as before in order to verify or stop the running container.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion" class="anchor"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;By now, it should be clear to see the power that Docker provides. Not only does Docker make it incredibly easy to run 3rd party software and applications in your cloud, it also gives you tools for making it just as simple to deploy your own applications. Here, we've only scratched the surface of what Docker is capable of. Stay tuned to the This Dot blog for more information about how you can use Docker and other cloud native technologies with your applications.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This Dot Labs is a modern web consultancy focused on helping companies realize their digital transformation efforts. For expert architectural guidance, training, or consulting in React, Angular, Vue, Web Components, GraphQL, Node, Bazel, or Polymer, visit &lt;a href="https://www.thisdotlabs.com"&gt;thisdotlabs.com&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This Dot Media is focused on creating an inclusive and educational web for all.  We keep you up to date with advancements in the modern web through events, podcasts, and free content. To learn, visit &lt;a href="https://www.thisdot.co"&gt;thisdot.co&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>docker</category>
      <category>devops</category>
      <category>beginners</category>
      <category>cloud</category>
    </item>
  </channel>
</rss>
