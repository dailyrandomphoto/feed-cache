<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Build an Exercise Tracker App using React.js (Hooks) and React Router | Learn React.js</title>
      <author>The Nerdy Dev</author>
      <pubDate>Tue, 08 Jun 2021 13:51:48 +0000</pubDate>
      <link>https://dev.to/thenerdydev/build-an-exercise-tracker-app-using-react-js-hooks-and-react-router-learn-react-js-208i</link>
      <guid>https://dev.to/thenerdydev/build-an-exercise-tracker-app-using-react-js-hooks-and-react-router-learn-react-js-208i</guid>
      <description>&lt;p&gt;Hey everyone üëãüèª,&lt;/p&gt;

&lt;p&gt;In this video, we will learn how we can make an Exercise Tracker App using React.js and React Router. In this complete video, you will learn about all the things that React and React Router has to offer. We will also learn about hooks like &lt;strong&gt;useState&lt;/strong&gt;, &lt;strong&gt;useEffect&lt;/strong&gt;, &lt;strong&gt;useParams&lt;/strong&gt;, &lt;strong&gt;useHistory&lt;/strong&gt; and more. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#1-fetching-the-list-of-exercises-from-a-local-json-server"&gt;
  &lt;/a&gt;
  1. Fetching the list of exercises from a local JSON Server
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#2-create-a-new-exercise"&gt;
  &lt;/a&gt;
  2. Create a New Exercise
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#3-update-an-already-existing-exercise"&gt;
  &lt;/a&gt;
  3. Update an already existing exercise
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#4-delete-an-existing-exercise"&gt;
  &lt;/a&gt;
  4. Delete an existing exercise
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#5-toggling-the-completion-status-of-an-exercise-and-showing-it-in-visually"&gt;
  &lt;/a&gt;
  5. Toggling the completion status of an exercise and showing it in visually.
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#6-creating-a-filter-component-to-filter-the-exercises-based-on-the-completion-status-pending-all-completed"&gt;
  &lt;/a&gt;
  6. Creating a filter component to filter the exercises based on the completion status - pending, all, completed.
&lt;/h2&gt;

&lt;p&gt;Learn how to make one with same features in this video: &lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/iqewbHLKkQk"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;üëâüèª &lt;strong&gt;PS&lt;/strong&gt; : I am working on a &lt;strong&gt;BRAND&lt;/strong&gt; new &lt;strong&gt;FREE&lt;/strong&gt;- &lt;strong&gt;Web Developer Full Course&lt;/strong&gt; on YouTube , check the below article to know more about the topics that we cover in this course:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/thenerdydev" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dvgjnxQX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j2i8W0Wf--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/297820/e861379b-e75a-48e5-bc39-44b3e940c086.png" alt="thenerdydev image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/thenerdydev/2021-web-developer-full-course-html-css-javascript-node-js-and-mongodb-27pb" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;(2021) - Web Developer Full Course : HTML, CSS, JavaScript, Node.js and MongoDB&lt;/h2&gt;
      &lt;h3&gt;The Nerdy Dev „Éª Apr 28 „Éª 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#node&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;üëâüèª Follow me on Twitter : &lt;a href="https://twitter.com/The_Nerdy_Dev"&gt;https://twitter.com/The_Nerdy_Dev&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Follow me on:&lt;br&gt;
üëâ Twitter: &lt;a href="https://twitter.com/thenerdydev"&gt;https://twitter.com/thenerdydev&lt;/a&gt;&lt;br&gt;
üëâ YouTube: &lt;a href="https://youtube.com/thenerdydev"&gt;https://youtube.com/thenerdydev&lt;/a&gt;&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>javascript</category>
      <category>react</category>
      <category>webdev</category>
    </item>
    <item>
      <title>React Table Guide And Best React Table Examples</title>
      <author>Nastassia Ovchinnikova</author>
      <pubDate>Tue, 08 Jun 2021 13:40:19 +0000</pubDate>
      <link>https://dev.to/flatlogic/react-table-guide-and-best-react-table-examples-56n1</link>
      <guid>https://dev.to/flatlogic/react-table-guide-and-best-react-table-examples-56n1</guid>
      <description>&lt;p&gt;In this article, we will talk about react table. By the way ‚Äì check our previous article about Bootstrap table! We won‚Äôt talk much about how important tables are in modern web development and also skip unnecessary info to keep the intro short. Instead, we will give you good concentrated information on how to choose a react table, what difficulties are there during the development of react table, and other things that will really help you create great and useful react tables. Even more, we also made a small guide for you on building a react table based on the most popular react-table library.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-choose-a-react-table-library"&gt;
  &lt;/a&gt;
  How to choose a React table library
&lt;/h2&gt;

&lt;p&gt;In order to choose the right react table, you need to decide what functions it will perform. For example, whether you need pagination or sorting. Think of the features you need and choose the react table library that fits them.&lt;/p&gt;

&lt;p&gt;It is also worth deciding whether you are willing to pay for the library or not. Paid versions of the react tables libraries have a very wide range of features that will help you develop it.&lt;/p&gt;

&lt;p&gt;Now let‚Äôs see how this looks like in real-life examples:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If you need a simple page with a small amount of data, custom styles, and minimum number of features like sorting and filtering, we recommend to use react-table;&lt;/li&gt;
&lt;li&gt;If you want a mini Google Sheets, use react-data-grid or react-datasheet;&lt;/li&gt;
&lt;li&gt;If you need to manipulate very large amounts of information, then we recommend &lt;a href="https://flatlogic.com/blog/using-react-with-express/"&gt;using react&lt;/a&gt; ‚Äì virtualize or paid libraries such as React data grid of Syncfusion.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#features-of-a-good-react-table"&gt;
  &lt;/a&gt;
  Features of a good React Table
&lt;/h2&gt;

&lt;p&gt;Developing a good react table is a difficult challenge that you must definitely go through. And the challenge is that a good react table must simultaneously correspond to several requirements ‚Äì responsiveness, speed, readability, etc. Let‚Äôs take a closer look at each of these.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#react-table-must-be-responsive"&gt;
  &lt;/a&gt;
  React table must be responsive
&lt;/h2&gt;

&lt;p&gt;It is very important for react data tables to be displayed correctly on all types of screens. Usually this is solved by the columns decrease in width and increase in length, but this solution is not always optimal for the user experience.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#react-table-must-be-readable"&gt;
  &lt;/a&gt;
  React table must Be Readable
&lt;/h2&gt;

&lt;p&gt;Tables often provide information that is very difficult to read, manipulate, and edit. A good spreadsheet shows information so that it is clearly readable and well-parsed, even if you have hundreds and thousands of lines. A flexible react data table solution can account for long strings of data without creating misalignment or compromising readability.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#react-table-needs-to-be-fast"&gt;
  &lt;/a&gt;
  React table needs to be fast
&lt;/h2&gt;

&lt;p&gt;Another important feature of a good react table is the speed of working with data ‚Äì i.e. filtering and sorting. Good UX often depends on application speed.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#react-table-ui-challenges"&gt;
  &lt;/a&gt;
  React Table UI challenges
&lt;/h2&gt;

&lt;p&gt;There are many aspects that need to be taken into account when we work with tables. Let‚Äôs define them.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#filtering-and-sorting-data"&gt;
  &lt;/a&gt;
  Filtering and sorting data
&lt;/h2&gt;

&lt;p&gt;It is very important to make these basic functions work quickly and intuitively ‚Äì these are the two main functions that define a table as an element.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#styles"&gt;
  &lt;/a&gt;
  Styles
&lt;/h2&gt;

&lt;p&gt;Good react table need to be styled: well-done styles can make tables readable and nice to look at. For example, an easy selection of cells with a hover when you hover over them will help users understand which cell they are in.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#responsiveness"&gt;
  &lt;/a&gt;
  Responsiveness
&lt;/h2&gt;

&lt;p&gt;It‚Äôs difficult to make a table responsive without changing the layout to suit smaller screen sizes. Responsive tables often look and perform awful. Therefore, the task of showing the table on different size screens looks complicated. Features such as pagination can help you with this.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#scrolling"&gt;
  &lt;/a&gt;
  Scrolling
&lt;/h2&gt;

&lt;p&gt;Default browser scrollbars will work well for full-width tables, but most have custom width. The solution is developing a custom scroll bar, or implementing one from ready made libraries. However, custom scrollbars are very tricky to support on both touch and non-touch screens.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#right-positioning-of-the-table"&gt;
  &lt;/a&gt;
  Right positioning of the table
&lt;/h2&gt;

&lt;p&gt;It is also important to correctly position the react table relative to other elements on the screen, so that you can work with it efficiently and read information properly.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#react-table-guide"&gt;
  &lt;/a&gt;
  React table Guide
&lt;/h2&gt;

&lt;p&gt;Now that we know a bit more about React table, let‚Äôs have a look at the development of different types of react tables. We‚Äôll use the most popular &lt;code&gt;react-table&lt;/code&gt; library as the example. We will obviously use &lt;code&gt;create-react-app&lt;/code&gt; boilerplate for better development speed.&lt;br&gt;
The first thing you need to do is install the &lt;code&gt;react-table&lt;/code&gt; library itself. To do this, run npm install &lt;code&gt;react-table&lt;/code&gt; or yarn add &lt;code&gt;react-table&lt;/code&gt; in the following command. After you enter these commands, check the &lt;code&gt;package.json&lt;/code&gt; file, you should see the following entry:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"dependencies": {
 "react-table": "^7.1.0"
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Additionally if you want to modify styles, please edit &lt;code&gt;src/index.css file&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To begin with, we will build the simplest react table with 3 columns and 3 rows. Each column will have its own separate one header. In this example, we will not build multi-level constructs with grouped headers.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#basic-react-table"&gt;
  &lt;/a&gt;
  Basic react table
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iZ8JWm61--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh4.googleusercontent.com/xg-D8yVB5n06N4On32Ggs-H4rExnw68PO_LTv7krtSHczln1KxVMfkOBJyaM2NGYOYbhqIl9lAb1HUkCpjgXpkQYRdcl5fCL0lj1WTbU4rT2WhNHaFBbRdE78rJhJxLaZ13Ecd4p" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iZ8JWm61--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh4.googleusercontent.com/xg-D8yVB5n06N4On32Ggs-H4rExnw68PO_LTv7krtSHczln1KxVMfkOBJyaM2NGYOYbhqIl9lAb1HUkCpjgXpkQYRdcl5fCL0lj1WTbU4rT2WhNHaFBbRdE78rJhJxLaZ13Ecd4p" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;React-table, like other libraries, consist of:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Columns ‚Äì an array of columns. Columns can be nested, which act as header groups. In addition, columns can be recursively nested as much as needed;&lt;/li&gt;
&lt;li&gt;Data is an array of rows to be displayed on the table.
To build a react table you will need a dataset. In our case, we did not create any separate files in the form of json objects: for speed reasons we created these objects directly in App.js.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here‚Äôs what an example code looks like for a simple table based on the React-tables library:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
import React, { useState, useEffect } from 'react';
import { useTable } from 'react-table';

function Example() {

 const data = React.useMemo(
     () =&amp;gt; [
       {
         col1: 'Minsk',
         col2: '27',
         col3: 'rain',
       },
       {
         col1: 'Vilnius',
         col2: '30',
         col3: 'rain',
       },
       {
         col1: 'London',
         col2: '23',
         col3: 'rain',
       },
     ],
     []
 )

 const columns = React.useMemo(
     () =&amp;gt; [
       {
         Header: 'City',
         accessor: 'col1', // accessor is the "key" in the data
       },
       {
         Header: 'Temperature',
         accessor: 'col2',
       },
       {
         Header: 'Weather Forecast',
         accessor: 'col3', // accessor is the "key" in the data
       },
     ],
     []
 )

 const {
   getTableProps,
   getTableBodyProps,
   headerGroups,
   rows,
   prepareRow,
 } = useTable({ columns, data })

 return (
     &amp;lt;div&amp;gt;
       &amp;lt;table {...getTableProps()} style={{ border: 'solid 1px black }}&amp;gt;
         &amp;lt;thead&amp;gt;
         {headerGroups.map(headerGroup =&amp;gt; (
             &amp;lt;tr {...headerGroup.getHeaderGroupProps()}&amp;gt;
               {headerGroup.headers.map(column =&amp;gt; (
                   &amp;lt;th
                       {...column.getHeaderProps()}
                       style={{
                         borderBottom: 'solid 3px red',
                         color: 'black',
                       }}
                   &amp;gt;
                     {column.render('Header')}
                   &amp;lt;/th&amp;gt;
               ))}
             &amp;lt;/tr&amp;gt;
         ))}
         &amp;lt;/thead&amp;gt;
         &amp;lt;tbody {...getTableBodyProps()}&amp;gt;
         {rows.map(row =&amp;gt; {
           prepareRow(row)
           return (
               &amp;lt;tr {...row.getRowProps()}&amp;gt;
                 {row.cells.map(cell =&amp;gt; {
                   return (
                       &amp;lt;td
                           {...cell.getCellProps()}
                           style={{
                             padding: '10px',
                             border: 'solid 1px gray',
                           }}
                       &amp;gt;
                         {cell.render('Cell')}
                       &amp;lt;/td&amp;gt;
                   )
                 })}
               &amp;lt;/tr&amp;gt;
           )
         })}
         &amp;lt;/tbody&amp;gt;
       &amp;lt;/table&amp;gt;
     &amp;lt;/div&amp;gt;
 );
}

export default Example;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note that the spread operator is used to expand the expression more easily.&lt;/p&gt;

&lt;p&gt;All the columns we have an accessor, which is the data we have in the data object. Our data is inside the show object in the array ‚Äî that‚Äôs why all our accessors have show as a prefix.&lt;/p&gt;

&lt;p&gt;Also, let‚Äôs explain a little what the functions and hooks used in the code above mean:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;useTable&lt;/code&gt; hook takes options and plugins to build a table instance. The basic options are columns and data. &lt;/li&gt;
&lt;li&gt;getTableProps is a function to resolve any props needed by the table wrapper. Built-in table props are {role: ‚Äútable‚Äù}, which can be customized.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;getTableBodyProps&lt;/code&gt; is a function to resolve any props needed by the table body wrapper. The built-in table props are {role: ‚Äúrowgroup‚Äù}, which can be customized.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;prepareRow&lt;/code&gt; is a function that must be called on any row to be displayed. It is responsible for preparing a row for rendering.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;headerGroups&lt;/code&gt; and rows are internal data structures derived from columns and data.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#react-table-with-sorting"&gt;
  &lt;/a&gt;
  React Table with Sorting
&lt;/h3&gt;

&lt;p&gt;Row sorting is a basic and a must functionality for the react table. To implement sorting of the columns in react-table you need to use &lt;code&gt;useSortBy&lt;/code&gt; hook plugin which is optional. We have received the following result:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Zaoj6Udh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/dE3S58D6zBvm4tpmPOrHIG6Gt1Jd43TmFL7k-UBcnRcqY6bZ_UdEBtY01pki4QSfArwBOFJLwKtUZkXMSNcRLUCbQxCu-F-HxTG3Vm0ifd-NZyrBlR0co5O1cU14z7szAot-c2hG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Zaoj6Udh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/dE3S58D6zBvm4tpmPOrHIG6Gt1Jd43TmFL7k-UBcnRcqY6bZ_UdEBtY01pki4QSfArwBOFJLwKtUZkXMSNcRLUCbQxCu-F-HxTG3Vm0ifd-NZyrBlR0co5O1cU14z7szAot-c2hG" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The update code of &lt;code&gt;src/App.js&lt;/code&gt; looks like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
import React, { useState, useEffect } from 'react';
import { useTable, useSortBy } from 'react-table';

function Example() {

 const data = React.useMemo(
     () =&amp;gt; [
       {
         col1: 'Minsk',
         col2: '27',
         col3: 'rain',
       },
       {
         col1: 'Vilnius',
         col2: '30',
         col3: 'rain',
       },
       {
         col1: 'London',
         col2: '23',
         col3: 'rain',
       },
     ],
     []
 )

 const columns = React.useMemo(
     () =&amp;gt; [
       {
         Header: 'City',
         accessor: 'col1', // accessor is the "key" in the data
       },
       {
         Header: 'Temperature',
         accessor: 'col2',
       },
       {
         Header: 'Weather Forecast',
         accessor: 'col3', // accessor is the "key" in the data
       },
     ],
     []
 )

 const {
   getTableProps,
   getTableBodyProps,
   headerGroups,
   rows,
   prepareRow,
 } = useTable({ columns, data }, useSortBy);

 return (
     &amp;lt;div&amp;gt;
       &amp;lt;table {...getTableProps()} style={{ border: 'solid 1px black' }}&amp;gt;
         &amp;lt;thead&amp;gt;
         {headerGroups.map(headerGroup =&amp;gt; (
             &amp;lt;tr {...headerGroup.getHeaderGroupProps()}&amp;gt;
               {headerGroup.headers.map(column =&amp;gt; (
                   &amp;lt;th
                       {...column.getHeaderProps(column.getSortByToggleProps())}
                       style={{
                         borderBottom: 'solid 3px red',
                         color: 'black',
                       }}
                   &amp;gt;
                     {column.render('Header')}
                     &amp;lt;span&amp;gt;
                       {column.isSorted
                           ? column.isSortedDesc
                               ? 'üîΩ'
                               : 'üîº'
                           : ''}
                    &amp;lt;/span&amp;gt;
                   &amp;lt;/th&amp;gt;
               ))}
             &amp;lt;/tr&amp;gt;
         ))}
         &amp;lt;/thead&amp;gt;
         &amp;lt;tbody {...getTableBodyProps()}&amp;gt;
         {rows.map(row =&amp;gt; {
           prepareRow(row)
           return (
               &amp;lt;tr {...row.getRowProps()}&amp;gt;
                 {row.cells.map(cell =&amp;gt; {
                   return (
                       &amp;lt;td
                           {...cell.getCellProps()}
                           style={{
                             padding: '10px',
                             border: 'solid 1px gray',
                           }}
                       &amp;gt;
                         {cell.render('Cell')}
                       &amp;lt;/td&amp;gt;
                   )
                 })}
               &amp;lt;/tr&amp;gt;
           )
         })}
         &amp;lt;/tbody&amp;gt;
       &amp;lt;/table&amp;gt;
     &amp;lt;/div&amp;gt;
 );
}

export default Example;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We used the &lt;code&gt;useSortBy&lt;/code&gt; plugin after declaring &lt;code&gt;useTable&lt;/code&gt; hook.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;getSortByToggleProps()&lt;/code&gt; is a function that resolves any props needed while toggling the sort direction.&lt;/p&gt;

&lt;p&gt;Lines 29 to 31 display a descending or ascending arrow for the sorted column.&lt;/p&gt;

&lt;p&gt;The sorting works in a following way:&lt;/p&gt;

&lt;p&gt;Clicking a column header will toggle between ascending, descending, and no sort. If you shift-click a column header, the other column sort states will be preserved and the new column will be sorted afterwards. This ends up with multi-sort.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#filtering-react-table"&gt;
  &lt;/a&gt;
  Filtering React Table
&lt;/h3&gt;

&lt;p&gt;This is another default function for React-table. To do this, we add &lt;code&gt;useFilters&lt;/code&gt; and &lt;code&gt;useGlobalFilter&lt;/code&gt; hooks to our code. The difference between these two hooks is that the first is responsible for filtering a specific column, while the global filter works on the entire table ‚Äì any column and row.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JcI_B5kC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/VN1IT66kkmakBF4-Gy0_WuvTatSVJnlIG-TadQ1MAQSI8K9P0L8MhdoudGgQ9-ievOxVZ5sgfGaslaGUDU4OqP0BJJPY8zPVkHAn2xwE2dgvWnRFzXQqQBxXrSy2Dpdru-YrCk5l" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JcI_B5kC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/VN1IT66kkmakBF4-Gy0_WuvTatSVJnlIG-TadQ1MAQSI8K9P0L8MhdoudGgQ9-ievOxVZ5sgfGaslaGUDU4OqP0BJJPY8zPVkHAn2xwE2dgvWnRFzXQqQBxXrSy2Dpdru-YrCk5l" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The code in this case will look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React from 'react';
import { useTable, useSortBy, useFilters, useGlobalFilter, useAsyncDebounce } from 'react-table';

function GlobalFilter({
                       preGlobalFilteredRows,
                       globalFilter,
                       setGlobalFilter,
                     }) {
 const count = preGlobalFilteredRows.length
 const [value, setValue] = React.useState(globalFilter)
 const onChange = useAsyncDebounce(value =&amp;gt; {
   setGlobalFilter(value || undefined)
 }, 200)

 return (
   &amp;lt;span&amp;gt;
     Search:{' '}
     &amp;lt;input
       value={value || ""}
       onChange={e =&amp;gt; {
         setValue(e.target.value);
         onChange(e.target.value);
       }}
       placeholder={`${count} records...`}
       style={{
         fontSize: '1.1rem',
         border: '0',
       }}
     /&amp;gt;
   &amp;lt;/span&amp;gt;
 )
}

// Define a default UI for filtering
function DefaultColumnFilter({
                              column: { filterValue, preFilteredRows, setFilter },
                            }) {
 const count = preFilteredRows.length

 return (
   &amp;lt;input
     value={filterValue || ''}
     onChange={e =&amp;gt; {
       setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely
     }}
     placeholder={`Search ${count} records...`}
   /&amp;gt;
 )
}

function Example() {

 const data = React.useMemo(
     () =&amp;gt; [
       {
         col1: 'Minsk',
         col2: '27',
         col3: 'rain',
         col4: '739',
         col5: '90',
       },
       {
         col1: 'Vilnius',
         col2: '30',
         col3: 'rain',
         col4: '740',
         col5: '87',
       },
       {
         col1: 'London',
         col2: '23',
         col3: 'rain',
         col4: '743',
         col5: '77',
       },
       {
         col1: 'Madrid',
         col2: '34',
         col3: 'sunny',
         col4: '738',
         col5: '40',
       },
       {
         col1: 'Warsaw',
         col2: '25',
         col3: 'heavy rain',
         col4: '739',
         col5: '88',
       },
     ],
     []
 )

 const columns = React.useMemo(
     () =&amp;gt; [
       {
         Header: 'City',
         accessor: 'col1', // accessor is the "key" in the data
       },
       {
         Header: 'Temperature',
         accessor: 'col2',
       },
       {
         Header: 'Weather Forecast',
         accessor: 'col3',
       },
       {
         Header: 'Pressure',
         accessor: 'col4',
       },
       {
         Header: 'Humidity',
         accessor: 'col5',
       },
     ],
     []
 )

 const defaultColumn = React.useMemo(
   () =&amp;gt; ({
     // Let's set up our default Filter UI
     Filter: DefaultColumnFilter,
   }),
   []
 )

 const {
   getTableProps,
   getTableBodyProps,
   headerGroups,
   rows,
   prepareRow,
   state,
   visibleColumns,
   preGlobalFilteredRows,
   setGlobalFilter,
 } = useTable(
   {
     columns,
     data,
     defaultColumn, // Be sure to pass the defaultColumn option
   },
   useFilters,
   useGlobalFilter,
   useSortBy
 );

 return (
     &amp;lt;div&amp;gt;
       &amp;lt;table {...getTableProps()} style={{ border: 'solid 1px black' }}&amp;gt;
         &amp;lt;thead&amp;gt;
         {headerGroups.map(headerGroup =&amp;gt; (
             &amp;lt;tr {...headerGroup.getHeaderGroupProps()}&amp;gt;
               {headerGroup.headers.map(column =&amp;gt; (
                   &amp;lt;th
                       {...column.getHeaderProps(column.getSortByToggleProps())}
                       style={{
                         borderBottom: 'solid 3px red',
                         color: 'black',
                       }}
                   &amp;gt;
                     {column.render('Header')}
                     &amp;lt;span&amp;gt;
                       {column.isSorted
                           ? column.isSortedDesc
                               ? 'üîΩ'
                               : 'üîº'
                           : ''}
                    &amp;lt;/span&amp;gt;
                    &amp;lt;div&amp;gt;{column.canFilter ? column.render('Filter') : null}&amp;lt;/div&amp;gt;
                   &amp;lt;/th&amp;gt;
               ))}
             &amp;lt;/tr&amp;gt;
         ))}
         &amp;lt;tr&amp;gt;
           &amp;lt;th
             colSpan={visibleColumns.length}
             style={{
               textAlign: 'left',
             }}
           &amp;gt;
             &amp;lt;GlobalFilter
               preGlobalFilteredRows={preGlobalFilteredRows}
               globalFilter={state.globalFilter}
               setGlobalFilter={setGlobalFilter}
             /&amp;gt;
           &amp;lt;/th&amp;gt;
         &amp;lt;/tr&amp;gt;
         &amp;lt;/thead&amp;gt;
         &amp;lt;tbody {...getTableBodyProps()}&amp;gt;
         {rows.map(row =&amp;gt; {
           prepareRow(row)
           return (
               &amp;lt;tr {...row.getRowProps()}&amp;gt;
                 {row.cells.map(cell =&amp;gt; {
                   return (
                       &amp;lt;td
                           {...cell.getCellProps()}
                           style={{
                             padding: '10px',
                             border: 'solid 1px gray',
                           }}
                       &amp;gt;
                         {cell.render('Cell')}
                       &amp;lt;/td&amp;gt;
                   )
                 })}
               &amp;lt;/tr&amp;gt;
           )
         })}
         &amp;lt;/tbody&amp;gt;
       &amp;lt;/table&amp;gt;
     &amp;lt;/div&amp;gt;
 );
}

export default Example;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#other-reacttable-basic-functions"&gt;
  &lt;/a&gt;
  Other react-table basic functions
&lt;/h3&gt;

&lt;p&gt;React-table also allows you to implement basic table features such as pagination, row selection through checkboxes, column grouping, column ordering and even column drag and dropping using plugins already written. You just need to add the appropriate hook to your code. Api reference describes in great detail all the actions that you need to do to make your table work.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#best-react-table-libraries-and-examples"&gt;
  &lt;/a&gt;
  Best React Table Libraries and Examples
&lt;/h2&gt;

&lt;p&gt;In this block, we will look at the best react table libraries and examples: today it is no longer effective to build and style tables manually, for there already is such a huge spectrum of fully prepared libraries available. We will present the pros and cons of each and point out the differences between them.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#reacttable"&gt;
  &lt;/a&gt;
  React-Table
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jSSbxqMM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/puu7MALM-SBzibJpXxZQD4z5LaPrQBpgSUBI7bN0LpMm2rkKQFlMpHiYXdnpFRjwvNfaFiHR3NHh8Su-CNexbrjCTd0K-_uYLZR8RICV4HWEAFqmhZW78N7dN5HvBmQAoTwFCVsO" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jSSbxqMM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/puu7MALM-SBzibJpXxZQD4z5LaPrQBpgSUBI7bN0LpMm2rkKQFlMpHiYXdnpFRjwvNfaFiHR3NHh8Su-CNexbrjCTd0K-_uYLZR8RICV4HWEAFqmhZW78N7dN5HvBmQAoTwFCVsO" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;React Table is one of the most popular table libraries in React. It has almost 15,000 stars on GitHub. The react-table library is very lightweight and offers all the basic features necessary for any simple table. Now, after the version 7 was released, it also supports Hooks. Moreover, the library is designed to have zero design, so you control the render and look of your table. The other great feature of React-table is a plugin ecosystem: if you want to extend the functionality of your grid, just add the necessary hook and that‚Äôs all.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Easy customization;&lt;/li&gt;
&lt;li&gt;Headless approach;&lt;/li&gt;
&lt;li&gt;Supports Pivoting and Aggregation;&lt;/li&gt;
&lt;li&gt;Wide plugin ecosystem;&lt;/li&gt;
&lt;li&gt;Lightweight (5kb ‚Äì 14kb+ depending on features used).&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;In some cases the documentation is limited;&lt;/li&gt;
&lt;li&gt;In our opinion, this table is not suitable for large data sets.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#notable-features"&gt;
  &lt;/a&gt;
  Notable features
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Global search plugin;&lt;/li&gt;
&lt;li&gt;Basic filtering and sorting options;&lt;/li&gt;
&lt;li&gt;Custom sorting and filtering options for columns based on data types (numbers, string, boolean, select input, etc.);&lt;/li&gt;
&lt;li&gt;Pagination support;&lt;/li&gt;
&lt;li&gt;Ability to create custom plugin hooks.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here‚Äôs a quick recap: react-table is good for simple tables that need basic features like searching, sorting, filtering, etc. Basic sports statistics, weather forecasts, basic finance data, user management table and others.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#bryntum-grid"&gt;
  &lt;/a&gt;
  Bryntum grid
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--onE51fgU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/_mcKTBEIB4Yo6RkHinsN5zAS7gmaHIQN-RCglhCBP7SPDKA6fN5Fug-O2nVyX5N2H4uTeZrVGemnYK-15-kGdi8Ohp--5kpxyf8uKFyVZekpp6yrLOMVBGLGGxBM23h55zMHEdKg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--onE51fgU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/_mcKTBEIB4Yo6RkHinsN5zAS7gmaHIQN-RCglhCBP7SPDKA6fN5Fug-O2nVyX5N2H4uTeZrVGemnYK-15-kGdi8Ohp--5kpxyf8uKFyVZekpp6yrLOMVBGLGGxBM23h55zMHEdKg" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bryntum Grid is a powerful &amp;amp; high-performance table component capable of handling 100k+ rows while still providing a great user experience. Bryntum Grid is developed on pure Javascript, so it‚Äôs framework agnostic. However, it comes with React wrappers to make integration into your project seamless. The main cons for this table is that it is not a pure react application, plus it‚Äôs a paid library. For that amount of money you want the pure react table component.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Locked / frozen columns;&lt;/li&gt;
&lt;li&gt;Cell editing; &lt;/li&gt;
&lt;li&gt;Custom cell rendering;&lt;/li&gt;
&lt;li&gt;Dedicated support;&lt;/li&gt;
&lt;li&gt;Paging Easily themeable with SASS.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#griddle"&gt;
  &lt;/a&gt;
  Griddle
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gs-CZ4ZM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/CSAt8URQg0zw_ZA5ouzK82UuHs30RgRRTgsWhsskAURV9PyOyZJQFAGW5W3Sa6rWp5gV1bBtCSalNrdqRgbUSFNOcUuTDuQ4_OEqVabb68S_4phfPR46E7MxjrJVZsKgZylwGG52" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gs-CZ4ZM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/CSAt8URQg0zw_ZA5ouzK82UuHs30RgRRTgsWhsskAURV9PyOyZJQFAGW5W3Sa6rWp5gV1bBtCSalNrdqRgbUSFNOcUuTDuQ4_OEqVabb68S_4phfPR46E7MxjrJVZsKgZylwGG52" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Griddle is a customizable architecture React datagrid component. It ships with some basic conventions and functionality, but gives you the ability to customize just about anything (components, methods, etc). To encourage customization reuse, Griddle has plugin support. Plugins are packaged Griddle customizations that can be reused or shared. However, the library seems to be abandoned. The cons: seems that the support of this library is deprecated ‚Äì the latest commit was in July 2019.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#devextreme-react-datagrid"&gt;
  &lt;/a&gt;
  DevExtreme React DataGrid
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CbJiBFkW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/1O_yuAUP6TTxdRIE53C9eaRlbJYb2o5nwpCwQv19u3FVQMeZHxSJhaijcGEoZTrpLU6WHn8-Ixt3x4yX7r686KDJj2GFjuHTXpvQefKJ8m4ScUArU-P2fTHQvzr5sDqFIlD2x2b7" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CbJiBFkW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/1O_yuAUP6TTxdRIE53C9eaRlbJYb2o5nwpCwQv19u3FVQMeZHxSJhaijcGEoZTrpLU6WHn8-Ixt3x4yX7r686KDJj2GFjuHTXpvQefKJ8m4ScUArU-P2fTHQvzr5sDqFIlD2x2b7" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;DevExtreme React Grid is a component that displays table data from a local or remote source. It supports pagination, sorting, filtering, grouping and other data generation options, row selection, and data editing. The support for managed and unattended state modes allows the Grid to be used in a regular or Redux-based application. The DevExtreme Grid component has a composable and extensible plugin-based architecture and also provides built-in Bootstrap and Material-UI rendering functionality and theme creation.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#notable-features"&gt;
  &lt;/a&gt;
  Notable features
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Pure React;&lt;/li&gt;
&lt;li&gt;Virtual scrolling;&lt;/li&gt;
&lt;li&gt;Multi-column sorting and grouping;&lt;/li&gt;
&lt;li&gt;Tree-view mode;
*Custom UI Rendering.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#rsuite-react-table"&gt;
  &lt;/a&gt;
  Rsuite React Table
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OMib_OJg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/jFK6JkhWri8AjPFULHlhnlW5Asd_Nt9XH-Jv4IFejbI7QLMwIKXpkpEmeFRvngE72uzAe4uh3b4RGRCxvFPdLHy_tZcLCIFwd6d_2aXjN1ESTu1rYnqRE9y44vZXpyLjLv1I5qrH" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OMib_OJg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/jFK6JkhWri8AjPFULHlhnlW5Asd_Nt9XH-Jv4IFejbI7QLMwIKXpkpEmeFRvngE72uzAe4uh3b4RGRCxvFPdLHy_tZcLCIFwd6d_2aXjN1ESTu1rYnqRE9y44vZXpyLjLv1I5qrH" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is a component of the React Table that supports virtualization, fixed columns and headers, tree views and more. The good thing about this library is that it comes with a lot of examples on each feature.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Library offers sorting, expandable child nodes, and RTL;&lt;/li&gt;
&lt;li&gt;Detailed docs with many examples;&lt;/li&gt;
&lt;li&gt;Many pre-built components inside.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Customizing this library might be a bit challenging;&lt;/li&gt;
&lt;li&gt;There is no big community and active development of the library.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#react-virtualized"&gt;
  &lt;/a&gt;
  React Virtualized
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0ZpPpVaG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh4.googleusercontent.com/yqINkyL_8i29vz45BEK0E_ycKd8pmdrxarEQmMupqxJzTGYvz4FIjATiZT2yshZjZwPzlvHSeekw2XnHJ5_GhGob0MJCOGJ7qHtVET12OCm9D-hc5C1pXeJAIwxv1gLCOwRvfzx1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0ZpPpVaG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh4.googleusercontent.com/yqINkyL_8i29vz45BEK0E_ycKd8pmdrxarEQmMupqxJzTGYvz4FIjATiZT2yshZjZwPzlvHSeekw2XnHJ5_GhGob0MJCOGJ7qHtVET12OCm9D-hc5C1pXeJAIwxv1gLCOwRvfzx1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;React-virtualized is a react table library heavily optimized for performance when the dataset is large. This library is not exactly a table library; it‚Äôs React components for efficiently rendering large lists and tabular data. You should consider using this product when you want to manage a large set of data. The documentation is comprehensive and the community around this tool is very mature, it has more than 18k stars on Github.&lt;/p&gt;

&lt;p&gt;For normal use cases, this library would be overkill, and the API would be too advanced. You can successfully go with react-virtualized for custom timelines, charts involving infinitely long calendars, and heavy UI elements for your large dataset.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#react-data-grid"&gt;
  &lt;/a&gt;
  React Data grid
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XUzfPyQ9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/Gks8AQ8knU2Vud1-vCnqxhhMvwbepw6uv0rXCyYuQ2LsWBtTsRSZMypMIUrtBTeoxFT9SbHxC3ZAlQX6YfHZyB6KsGvPMiNVR9x-rmzGvecnO5D8FJChyVbuY_BA_zaYx-jAKULf" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XUzfPyQ9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/Gks8AQ8knU2Vud1-vCnqxhhMvwbepw6uv0rXCyYuQ2LsWBtTsRSZMypMIUrtBTeoxFT9SbHxC3ZAlQX6YfHZyB6KsGvPMiNVR9x-rmzGvecnO5D8FJChyVbuY_BA_zaYx-jAKULf" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;React Data Grid is a react table library for creating apps similar to google spreadsheets and MS excel. The broad range of features includes data binding, editing, Excel-like filtering, custom sorting, row aggregation, Excel, CSV, and PDF format collection, and support.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Lightning-fast rendering;&lt;/li&gt;
&lt;li&gt;Rich editing and formatting;&lt;/li&gt;
&lt;li&gt;Configurable and customizable;&lt;/li&gt;
&lt;li&gt;Packed with excel features including cell copy and paste.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;–°omplicated to jumpstart with the development of the table;&lt;/li&gt;
&lt;li&gt;Poor documentation;&lt;/li&gt;
&lt;li&gt;It does not support pagination by default;&lt;/li&gt;
&lt;li&gt;It is not easily customizable.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#key-features"&gt;
  &lt;/a&gt;
  Key features
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Excel-like filtering and grouping options;&lt;/li&gt;
&lt;li&gt;Data exporting in any format: PDF, CSV, and Excel;&lt;/li&gt;
&lt;li&gt;Inline editing of columns;&lt;/li&gt;
&lt;li&gt;Supports virtual rendering for infinitely long table rows;&lt;/li&gt;
&lt;li&gt;Uses Bootstrap for styling.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#kendo-react-grid-component"&gt;
  &lt;/a&gt;
  Kendo React Grid component
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1TYbs60H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/Y-DZcWolttyBvlwv7kumvr4o5GAjifgIApom7Ipv7DN3SIzZ4wNirnmIHZ3kCl7u8rOUUVaaupN8WghRn0aaQvcaiGJ7YDjgJoa-WS1reB3fpqiYjrnikFq9fLRXewA-6HQOl6OM" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1TYbs60H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/Y-DZcWolttyBvlwv7kumvr4o5GAjifgIApom7Ipv7DN3SIzZ4wNirnmIHZ3kCl7u8rOUUVaaupN8WghRn0aaQvcaiGJ7YDjgJoa-WS1reB3fpqiYjrnikFq9fLRXewA-6HQOl6OM" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Kendo React Grid component is one of the most powerful data grid components available to React developers, containing many must-have features. React data table has a lot of complex features: reordering and resizing columns, displaying hierarchical data, column and context menus. These provide additional functionality based on currently selected rows or columns, options for custom rendering, and much, much more. Moreover, the Kendo React library is compliant with many security and accessibility standards out of the box.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Zero dependencies;&lt;/li&gt;
&lt;li&gt;100+ features to effectively manipulate the bit amount of data;&lt;/li&gt;
&lt;li&gt;Documentation is very (!) well structured and comprehensive;&lt;/li&gt;
&lt;li&gt;3 themes of your choice;&lt;/li&gt;
&lt;li&gt;Dedicated support team option.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Price is a bit high;&lt;/li&gt;
&lt;li&gt;We assume that the implementation of custom styles can be a bit tricky.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you want the table/grid to be a very comprehensive feature-packed component for your application, with good docs and dedicated support ‚Äì we recommend looking at the Kendo UI React grid.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#react-data-sheet"&gt;
  &lt;/a&gt;
  React data sheet
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8SYtCbuM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/q0OS96E7EEm53nnKnfcdpvhqhfGqdkmZalU59ZQpBMwlaMrQ6ehbSA5ojL_Kp8koJmH7IBRu4Yb0Lqqz_tsPjab9J2I3xLPM3tIvAV5qqoURUoJx-d6dOE6CwKz_2RSQYvwJEjn3" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8SYtCbuM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/q0OS96E7EEm53nnKnfcdpvhqhfGqdkmZalU59ZQpBMwlaMrQ6ehbSA5ojL_Kp8koJmH7IBRu4Yb0Lqqz_tsPjab9J2I3xLPM3tIvAV5qqoURUoJx-d6dOE6CwKz_2RSQYvwJEjn3" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;React-datasheet is similar to react-data-grid. It has many GitHub starts, so it‚Äôs well-maintained and has a very helpful and productive community. As you presumably noticed, the main goal of this library is to help you create your own Google Sheets/Excel-like application on React. The project has prebuilt styles and functions, so you will receive that view and complex functions out-of-the-box. However, note that this library is not suited for the basic, small-sized tables with limited functionality.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Well documented;&lt;/li&gt;
&lt;li&gt;Good looking UI;&lt;/li&gt;
&lt;li&gt;Good customization;&lt;/li&gt;
&lt;li&gt;Pre Built formulas tables.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Limited to the specific use-case;&lt;/li&gt;
&lt;li&gt;Not suitable for large datasets.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#material-table"&gt;
  &lt;/a&gt;
  Material Table
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iNGuBV4O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/8h0TTiWMeVM6FAy4_-gQld9_ITj6c4t5csALIIq9UiCT5qb32qlDXCYrG9-99MYvpAoFdev_MPUjCRCMrnmeefEx2dWxk-SCjY4vWUPVkqaq_o4GeeaHOpH28dgzveE74sTGLC1R" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iNGuBV4O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/8h0TTiWMeVM6FAy4_-gQld9_ITj6c4t5csALIIq9UiCT5qb32qlDXCYrG9-99MYvpAoFdev_MPUjCRCMrnmeefEx2dWxk-SCjY4vWUPVkqaq_o4GeeaHOpH28dgzveE74sTGLC1R" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Material table is one of the most popular react table libraries, thanks to &lt;a href="https://flatlogic.com/blog/top-material-design-dashboards/"&gt;material design&lt;/a&gt; and usage of Material-UI components. The project is very easy to use and install even for the beginners; robust documentation will speed up the development.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Feature-packed;&lt;/li&gt;
&lt;li&gt;Pre build Export to CSV;&lt;/li&gt;
&lt;li&gt;Robust documentation.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Component overriding;&lt;/li&gt;
&lt;li&gt;Not everyone is a fan of Material UI.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#how-material-table-works"&gt;
  &lt;/a&gt;
  How Material Table works
&lt;/h2&gt;

&lt;p&gt;To start development you need to install this library by typing &lt;code&gt;yarn add&lt;/code&gt; or &lt;code&gt;npm install&lt;/code&gt; commands in the console. You also need to add Material-UI icons.&lt;/p&gt;

&lt;p&gt;The library works in the following way ‚Äì you just need to transfer two props to the &lt;code&gt;&amp;lt;MaterialTable /&amp;gt;&lt;/code&gt; component. The prop data is there to display the data in row format. Another prop column defines the number of columns.&lt;/p&gt;

&lt;p&gt;A third prop on &lt;code&gt;&amp;lt;MaterialTable /&amp;gt;&lt;/code&gt; component called &lt;code&gt;‚Äòtitle‚Äô&lt;/code&gt; can be used to give a title to the whole table. See the example below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;return (
  &amp;lt;div&amp;gt;
    &amp;lt;MaterialTable columns={columns} data={data} title='Flatlogic' /&amp;gt;
  &amp;lt;/div&amp;gt;
);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;By default, the material-table library displays a search bar and pagination. At Flatlogic we recommend to use Material table in case you are in love with Material-UI and material design.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#rctable"&gt;
  &lt;/a&gt;
  RC-Table
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--80cbnRbA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/urEoTq-zHK0zfmflK4ssaksUo1S5hMMmNnlVYnV3kEWkVWQXuG4uf8bAoISzFlATYKmN4NJtmK7eKUZxkxWQ4AqPQalR1jzYODtn1aeM_C-KQDQWnZoS4K_Xd5XhO8pPdZEDeZ9l" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--80cbnRbA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/urEoTq-zHK0zfmflK4ssaksUo1S5hMMmNnlVYnV3kEWkVWQXuG4uf8bAoISzFlATYKmN4NJtmK7eKUZxkxWQ4AqPQalR1jzYODtn1aeM_C-KQDQWnZoS4K_Xd5XhO8pPdZEDeZ9l" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Rc-Table is another useful tiny React Table library with the set of basic functions that will equip you to build a well structured react table. The table is good if you want to use your own styling. The other good thing with this library is that it is very easy to understand and start.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Very lightweight;&lt;/li&gt;
&lt;li&gt;The docs has many examples with the source code;&lt;/li&gt;
&lt;li&gt;Fast jump start to the actual development;&lt;/li&gt;
&lt;li&gt;Limited community.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Documentation is not so good. Some functions are not described at all.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thus this library is good for small applications or apps where the table is not a core part of the app.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;As we saw from our guide, building react tables requires some effort compared to other libraries such as bootstrap. We also learned the fact that in most cases you do not need to develop your own react table from scratch: there already are many react table solutions for various project requirements, both paid and free.&lt;/p&gt;

&lt;p&gt;When choosing a library for your requirements, pay attention to the number of stars on the github, how active the community is, how often the library is updated and how often the downloads happen.&lt;/p&gt;

&lt;p&gt;However, let‚Äôs look at the cases when you can still consider building your own react table:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;When you need a custom UI for the table. It might be faster to build your own;&lt;/li&gt;
&lt;li&gt;When your table is just a showcase;&lt;/li&gt;
&lt;li&gt;You need a very lightweight table without any dependencies.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We hope that our guide and selection were useful for you and that you have chosen the library that you will use when building the react table.&lt;/p&gt;

&lt;p&gt;If you notice that our article is missing a good react table library, we will gladly consider including it in the collection ‚Äì just drop us a line.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#about-flatlogic"&gt;
  &lt;/a&gt;
  About Flatlogic
&lt;/h1&gt;

&lt;p&gt;At Flatlogic, we help businesses to speed up web development with our beautifully designed web &amp;amp; mobile application templates built with &lt;a href="https://flatlogic.com/templates/react"&gt;React&lt;/a&gt;, &lt;a href="https://flatlogic.com/templates/vue"&gt;Vue&lt;/a&gt;, &lt;a href="https://flatlogic.com/templates/angular"&gt;Angular&lt;/a&gt;, &lt;a href="https://flatlogic.com/templates/react-native"&gt;React Native&lt;/a&gt;, and &lt;a href="https://flatlogic.com/templates/bootstrap"&gt;Bootstrap&lt;/a&gt;. During the last several years we have successfully delivered more than 100 custom dashboards and data management solutions to various clients starting from innovative startups to established and respected enterprises.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/WpVQsS-Bb3U"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;You might also like these articles:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://dev.to/flatlogic/top-24-free-essential-plugins-to-extend-bootstrap-4mn6"&gt;Top 24 Free Essential Plugins To Extend Bootstrap&lt;/a&gt;&lt;br&gt;
&lt;a href="https://dev.to/flatlogic/37-simple-and-useful-table-templates-examples-for-web-developers-i3j"&gt;37 Simple And Useful Table Templates &amp;amp; Examples For Web Developers&lt;/a&gt;&lt;br&gt;
&lt;a href="https://dev.to/flatlogic/top-13-login-pages-design-examples-57ip"&gt;Top 13+ Login Pages Design Examples&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>webdev</category>
      <category>frontend</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Setting up application monitoring for your Nodejs app in 20 mins with open source solution</title>
      <author>Ankit Anand</author>
      <pubDate>Tue, 08 Jun 2021 13:37:27 +0000</pubDate>
      <link>https://dev.to/signoz/setting-up-application-monitoring-for-your-nodejs-app-in-20-mins-with-open-source-solution-134i</link>
      <guid>https://dev.to/signoz/setting-up-application-monitoring-for-your-nodejs-app-in-20-mins-with-open-source-solution-134i</guid>
      <description>&lt;p&gt;Node.js tops the list of most widely used frameworks by developers. Powered by Google's V8 javascript engine, its performance is incredible. Ryan Dahl, the creator of Node.js, wanted to create real-time websites with push capability. On Nov 8, 2009, Node.js was first demonstrated by Dahl at the inaugural European JSconf. Node.js has now become a critical component in the technology stack of large-scale enterprises. But like any technology, it has its own set of limitations.&lt;/p&gt;

&lt;p&gt;Node.js is a dynamically typed single-threaded programming language. There is a lot of freedom for the interpreter and runtime to make decisions that can easily lead to memory leaks and high CPU loads. This can lead to performance issues, loss of resources, and potential downtime. Hence, it is crucial to monitor your Node.js apps for app performance metrics.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/SigNoz/signoz"&gt;SigNoz&lt;/a&gt; is an open-source application monitoring and observability platform which can be installed within your infra. There's no need to go through any sales team or complex onboarding process to start monitoring your application with SigNoz. In this article, let's take a look at how it can be deployed with Docker in a sample Node.js application.&lt;/p&gt;

&lt;p&gt;Let's divide this tutorial into 2 parts:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Installing SigNoz&lt;/li&gt;
&lt;li&gt;Installing &amp;amp; setting up a sample Node.js app for monitoring&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#part1-installing-signoz"&gt;
  &lt;/a&gt;
  Part-1 Installing SigNoz
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Install Docker&lt;/strong&gt;&lt;br&gt;
You can install Docker by following the steps listed on their website &lt;a href="https://www.docker.com/get-started"&gt;here&lt;/a&gt;. For this tutorial, you can choose the Docker Desktop option based on the system you have.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GJlFqNkz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xm05wcxw24lrfmto5dht.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GJlFqNkz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xm05wcxw24lrfmto5dht.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Clone SigNoz GitHub repository&lt;/strong&gt;&lt;br&gt;
From your terminal use the following command to clone SigNoz's GitHub repository.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git clone https://github.com/SigNoz/signoz.git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Update path to signoz/deploy and install SigNoz&lt;/strong&gt;&lt;br&gt;
The deploy folder contains the files necessary for deploying SigNoz through Docker.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd signoz/deploy/
./install.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;You will be asked to select one of the 2 ways to proceed:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Clickhouse as database (default)&lt;/li&gt;
&lt;li&gt;Kafka + Druid setup to handle scale (recommended for production use)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Trying out SigNoz with clickhouse database takes less than 1GB of memory and for this tutorial, we will use that option.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dCEa3C8M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uenodd3f8igg2tghijmv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dCEa3C8M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uenodd3f8igg2tghijmv.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You will get the following message once the installation is complete.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jaXCBdab--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/phjjj8ns2l0wmi1pghsp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jaXCBdab--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/phjjj8ns2l0wmi1pghsp.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once the installation runs successfully, the UI should be accessible at port 3000. Wait for 2-3 mins for the data to be available to frontend.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Al3hUTeR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qtmmoslacztt1j5cxqk9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Al3hUTeR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qtmmoslacztt1j5cxqk9.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The applications shown in the dashboard are from a sample app called Hot R.O.D that comes with the installation bundle. It has 4 microservices being monitored: Frontend, Customer, Driver and Route. You can access the Hot R.O.D application UI at: &lt;a href="http://localhost:9000/"&gt;http://localhost:9000/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now comes the part where you can instrument your own sample app and get the metrics reported through SigNoz.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#part-2-installing-amp-setting-up-a-sample-nodejs-app-for-monitoring"&gt;
  &lt;/a&gt;
  Part 2 - Installing &amp;amp; setting up a sample Node.js app for monitoring
&lt;/h2&gt;

&lt;p&gt;To start monitoring your application, you need to set up its instrumentation. Instrumentation is the process of implementing code instructions to monitor your application's performance.&lt;/p&gt;

&lt;p&gt;SigNoz supports &lt;a href="https://opentelemetry.io/"&gt;OpenTelemetry&lt;/a&gt; as the primary way for users to instrument their application. OpenTelemetry is a single, vendor-agnostic instrumentation library per language with support for both automatic and manual instrumentation. You don't need to worry about instrumentation in this tutorial. OpenTelemetry comes with all currently available &lt;a href="https://github.com/open-telemetry/opentelemetry-js#plugins"&gt;instrumentation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;But to see how SigNoz helps you in monitoring an app's performance, we need an app first.&lt;/p&gt;

&lt;p&gt;You need to ensure that you have &lt;strong&gt;Node.js version 12 or newer&lt;/strong&gt;. You can download the latest version of Node.js &lt;a href="https://nodejs.org/en/download/"&gt;here&lt;/a&gt;. For the sample application, let's create a basic 'hello world' express.js application.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Make a directory and install express&lt;/strong&gt;&lt;br&gt;
Make a directory for your sample app on your machine. Then open up the terminal, navigate to the directory path and install express with the following command:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm i express
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Setup server.js&lt;/strong&gt;&lt;br&gt;
Create a file called 'server.js' in your directory and with any text editor setup your 'Hello World' file with the code below:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const express = require('express');

const app = express();

app.get('/hello', (req, res) =&amp;gt; {
 res.status(200).send('Hello World');
});

app.listen(9090);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Boot up the server with the following command on the terminal:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;node server.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;You can check if your app is working by visiting: &lt;a href="http://localhost:9090/hello"&gt;http://localhost:9090/hello&lt;/a&gt;&lt;br&gt;
Once you are finished checking, exit the localhost on your terminal.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Setting up OpenTelemetry&lt;/strong&gt;&lt;br&gt;
In the same directory path at the terminal, install the OpenTelemetry launcher package with this command:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install lightstep-opentelemetry-launcher-node
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Go to your directory and create a new file named, "server_init.js". This will act as the new entry point for your app. Paste the following code in the file:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const {
    lightstep,
    opentelemetry,
   } = require('lightstep-opentelemetry-launcher-node');

   const sdk = lightstep.configureOpenTelemetry();

   sdk.start().then(() =&amp;gt; {
    require('./server');
   });

   function shutdown() {
    sdk.shutdown().then(
      () =&amp;gt; console.log("SDK shut down successfully"),
      (err) =&amp;gt; console.log("Error shutting down SDK", err),
    ).finally(() =&amp;gt; process.exit(0))
   };

   process.on('exit', shutdown);
   process.on('SIGINT', shutdown);
   process.on('SIGTERM', shutdown);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Once the file is created, you only need to run one last command at your terminal.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;OTEL_EXPORTER_OTLP_SPAN_ENDPOINT="http://&amp;lt;IP of SigNoz Backend&amp;gt;:55681/v1/trace" LS_SERVICE_NAME=&amp;lt;service name&amp;gt; node server_init.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Replacing the placeholders in the above command for local host:&lt;/p&gt;

&lt;p&gt;IP of SigNoz Backend: localhost (since we are running SigNoz on our local host)&lt;/p&gt;

&lt;p&gt;service name: sample_app (you can give whatever name that suits you)&lt;/p&gt;

&lt;p&gt;So the final command is:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;OTEL_EXPORTER_OTLP_SPAN_ENDPOINT="http://localhost:55681/v1/trace" LS_SERVICE_NAME=sample_app node server_init.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The app should be accessible at &lt;a href="http://localhost:9090/hello"&gt;http://localhost:9090/hello&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Congratulations! You have instrumented your sample Node.js app. You can now access the SigNoz dashboard at &lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt; to monitor your app for performance metrics.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--x1uNBidS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ad5aui0o4da5ry67vase.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x1uNBidS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ad5aui0o4da5ry67vase.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you don't find 'Sample_app' in your list of applications, hit the endpoint at port 9090, and wait for 1-2 mins.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#identifying-events-causing-high-latency-in-your-app"&gt;
  &lt;/a&gt;
  Identifying events causing high latency in your app
&lt;/h2&gt;

&lt;p&gt;Now that you have installed SigNoz, let's see how you can identify specific events causing high latency in your deployed applications.&lt;/p&gt;

&lt;p&gt;In just 5 easy steps, SigNoz dashboard lets you drill down to events causing a delay in your deployed apps üëá&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Choose your microservice&lt;/li&gt;
&lt;li&gt;Choose the timestamp where latency is high&lt;/li&gt;
&lt;li&gt;Click on view traces&lt;/li&gt;
&lt;li&gt;Choose the trace ID with the highest latency&lt;/li&gt;
&lt;li&gt;Zero in on the highest latency event and take action&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here's a glimpse of how you can drill down and identify specific issues:&lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://player.vimeo.com/video/552957573" width="710" height="399"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;If you need any help with trying out SigNoz, feel free to mail me at &lt;a href="mailto:ankit.anand@signoz.io"&gt;ankit.anand@signoz.io&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;They say, "If it's not monitored, then it's not in production." And with SigNoz you can start monitoring your Node.js application now. Enabling your team to resolve issues quickly in production is critical to maintaining complex distributed systems in fine health.&lt;/p&gt;

&lt;p&gt;At SigNoz, we are committed to making the best open-source, self-hosted tool for application performance monitoring. Feel free to check out our GitHub repo here:&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/SigNoz"&gt;
        SigNoz
      &lt;/a&gt; / &lt;a href="https://github.com/SigNoz/signoz"&gt;
        signoz
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      SigNoz helps developers monitor their applications &amp;amp; troubleshoot problems, an open-source alternative to DataDog, NewRelic, etc. üî• üñ•
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
  &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/de24bcecd48c187d949b173f240555967f58a5cd424760a73f7c06f791b892ec/68747470733a2f2f7265732e636c6f7564696e6172792e636f6d2f646376336570696e782f696d6167652f75706c6f61642f76313631383930343435302f7369676e6f7a2d696d616765732f4c6f676f4769746875625f7369676662752e737667"&gt;&lt;img src="https://camo.githubusercontent.com/de24bcecd48c187d949b173f240555967f58a5cd424760a73f7c06f791b892ec/68747470733a2f2f7265732e636c6f7564696e6172792e636f6d2f646376336570696e782f696d6167652f75706c6f61642f76313631383930343435302f7369676e6f7a2d696d616765732f4c6f676f4769746875625f7369676662752e737667" alt="SigNoz-logo" width="240"&gt;&lt;/a&gt;
  &lt;/p&gt;
&lt;p&gt;Monitor your applications and troubleshoot problems in your deployed applications, an open-source alternative to DataDog, New Relic, etc.&lt;/p&gt;
&lt;p&gt;
    &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/8bb1977f745ee8c8107f711ecfa901421a9b929f308fd431f7211508f8ddbd87/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d627269676874677265656e"&gt;&lt;img alt="License" src="https://camo.githubusercontent.com/8bb1977f745ee8c8107f711ecfa901421a9b929f308fd431f7211508f8ddbd87/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d627269676874677265656e"&gt;&lt;/a&gt;
    &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/4d7505d3f801c171da56fe726501ab9411207d82358bf10341021397fa3fe48e/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f7369676e6f7a2f66726f6e74656e643f6c6162656c3d446f776e6c6f616473"&gt;&lt;img alt="Downloads" src="https://camo.githubusercontent.com/4d7505d3f801c171da56fe726501ab9411207d82358bf10341021397fa3fe48e/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f7369676e6f7a2f66726f6e74656e643f6c6162656c3d446f776e6c6f616473"&gt;&lt;/a&gt;
    &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/cd33e47de8e2feb970abdef5de51f59e6c007958faf6c188c56dd4c4208e58a2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f7369676e6f7a2f7369676e6f7a"&gt;&lt;img alt="GitHub issues" src="https://camo.githubusercontent.com/cd33e47de8e2feb970abdef5de51f59e6c007958faf6c188c56dd4c4208e58a2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f7369676e6f7a2f7369676e6f7a"&gt;&lt;/a&gt; 
    &lt;a href="https://twitter.com/intent/tweet?text=Monitor%20your%20applications%20and%20troubleshoot%20problems%20with%20SigNoz,%20an%20open-source%20alternative%20to%20DataDog,%20NewRelic.&amp;amp;url=https://signoz.io/&amp;amp;via=SigNozHQ&amp;amp;hashtags=opensource,signoz,observability" rel="nofollow"&gt; 
        &lt;img alt="tweet" src="https://camo.githubusercontent.com/90bc908826728c0e4261acfff5619fd732c7be2b2a00624fce6363c9a3623c90/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c2f687474702f736869656c64732e696f2e7376673f7374796c653d736f6369616c"&gt; &lt;/a&gt; 
&lt;/p&gt;

&lt;p&gt;SigNoz helps developers monitor applications and troubleshoot problems in their deployed applications. SigNoz uses distributed tracing to gain visibility into your software stack.&lt;/p&gt;
&lt;p&gt;üëâ You can see metrics like p99 latency, error rates for your services, external API calls and individual end points.&lt;/p&gt;
&lt;p&gt;üëâ You can find the root cause of the problem by going to the exact traces which are causing the problem and see detailed flamegraphs of individual request traces.&lt;/p&gt;

&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/863718997bae95953d22cbd6c1001d4ec23695aad4244d7de596660f33833496/68747470733a2f2f7265732e636c6f7564696e6172792e636f6d2f646376336570696e782f696d6167652f75706c6f61642f76313631383930343033322f7369676e6f7a2d696d616765732f73637265656e7a792d313631383930343031333732395f636c737376792e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/863718997bae95953d22cbd6c1001d4ec23695aad4244d7de596660f33833496/68747470733a2f2f7265732e636c6f7564696e6172792e636f6d2f646376336570696e782f696d6167652f75706c6f61642f76313631383930343033322f7369676e6f7a2d696d616765732f73637265656e7a792d313631383930343031333732395f636c737376792e706e67" alt="SigNoz Feature"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
üëá Features:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Application overview metrics like RPS, 50th/90th/99th Percentile latencies, and Error Rate&lt;/li&gt;
&lt;li&gt;Slowest endpoints in your application&lt;/li&gt;
&lt;li&gt;See exact request trace to figure out issues in downstream services, slow DB queries, call to 3rd party services like payment gateways, etc&lt;/li&gt;
&lt;li&gt;Filter traces by service name, operation, latency, error, tags/annotations.&lt;/li&gt;
&lt;li&gt;Aggregate metrics on filtered traces. Eg, you can get error‚Ä¶&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/SigNoz/signoz"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



</description>
      <category>node</category>
      <category>devops</category>
      <category>monitoring</category>
      <category>opensource</category>
    </item>
    <item>
      <title>I want to be a Web developer!</title>
      <author>Koichi19</author>
      <pubDate>Tue, 08 Jun 2021 13:28:31 +0000</pubDate>
      <link>https://dev.to/koichi19/i-want-to-be-a-web-developer-149e</link>
      <guid>https://dev.to/koichi19/i-want-to-be-a-web-developer-149e</guid>
      <description>&lt;p&gt;Hello! I'm Koichi. I'm a college student and I'm self-taught in Javascript and react.„ÄÄI'm still a beginner, but I'll be posting what I learn here to inspire you. Let's learn together!&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>firstpost</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Take a journey with your own map service by AWS Amplify and Amazon Location Service</title>
      <author>Kihara, Takuya</author>
      <pubDate>Tue, 08 Jun 2021 13:19:29 +0000</pubDate>
      <link>https://dev.to/aws-builders/take-a-journey-with-your-own-map-service-by-aws-amplify-and-amazon-location-service-1nj6</link>
      <guid>https://dev.to/aws-builders/take-a-journey-with-your-own-map-service-by-aws-amplify-and-amazon-location-service-1nj6</guid>
      <description>&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/G1BclFCVMmw"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Amazon Location Service is Generally Available on June 1st, 2021.&lt;br&gt;
&lt;a href="https://aws.amazon.com/jp/blogs/aws/amazon-location-service-is-now-generally-available-with-new-routing-and-satellite-imagery-capabilities/"&gt;https://aws.amazon.com/jp/blogs/aws/amazon-location-service-is-now-generally-available-with-new-routing-and-satellite-imagery-capabilities/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So, we can make our own map service which used Amazon Location Service.&lt;/p&gt;

&lt;p&gt;This post shows how to make your own map service by AWS Amplify and Amazon Location Service.&lt;br&gt;
We can search the location and display it on the map.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#1-setup"&gt;
  &lt;/a&gt;
  1. Setup
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Vue CLI (+ Vuetify)&lt;/li&gt;
&lt;li&gt;Amplify CLI&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#11-vue-cli"&gt;
  &lt;/a&gt;
  1.1. Vue CLI
&lt;/h3&gt;

&lt;p&gt;Install "Vue CLI."&lt;br&gt;
&lt;a href="https://cli.vuejs.org/guide/prototyping.html"&gt;Vue CLI&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;vue &lt;span class="nt"&gt;-V&lt;/span&gt;
@vue/cli 4.5.13
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#12-amplify-cli"&gt;
  &lt;/a&gt;
  1.2. Amplify CLI
&lt;/h3&gt;

&lt;p&gt;Install "Amplify CLI."&lt;br&gt;
&lt;a href="https://docs.amplify.aws/start/getting-started/installation/q/integration/vue"&gt;AWS Amplify&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;amplify &lt;span class="nt"&gt;-v&lt;/span&gt;
Scanning &lt;span class="k"&gt;for &lt;/span&gt;plugins...
Plugin scan successful
4.52.0
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#13-create-vue-project"&gt;
  &lt;/a&gt;
  1.3. Create Vue project
&lt;/h3&gt;

&lt;p&gt;Create a Vue project by &lt;code&gt;Vue CLI&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;
  vue create amplify-amazon-location
  &lt;br&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;vue create amplify-amazon-location


Vue CLI v4.5.13
? Please pick a preset: Manually &lt;span class="k"&gt;select &lt;/span&gt;features
? Check the features needed &lt;span class="k"&gt;for &lt;/span&gt;your project: Choose Vue version, Babel, Linter
? Choose a version of Vue.js that you want to start the project with 2.x
? Pick a linter / formatter config: Prettier
? Pick additional lint features: Lint on save
? Where &lt;span class="k"&gt;do &lt;/span&gt;you prefer placing config &lt;span class="k"&gt;for &lt;/span&gt;Babel, ESLint, etc.? In dedicated confi
g files
? Save this as a preset &lt;span class="k"&gt;for &lt;/span&gt;future projects? No

&lt;span class="o"&gt;(&lt;/span&gt;snip&lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;amplify-amazon-location/
&lt;span class="nv"&gt;$ &lt;/span&gt;vue add vuetify
&lt;span class="err"&gt;$&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#14-setup-amplify-project"&gt;
  &lt;/a&gt;
  1.4. Setup Amplify project
&lt;/h3&gt;

&lt;p&gt;Setup Amplify project.&lt;/p&gt;

&lt;p&gt;
  amplify init
  &lt;br&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;amplify init
Note: It is recommended to run this &lt;span class="nb"&gt;command &lt;/span&gt;from the root of your app directory
? Enter a name &lt;span class="k"&gt;for &lt;/span&gt;the project amplifyamazonlocatio
The following configuration will be applied:

Project information
| Name: amplifyamazonlocatio
| Environment: dev
| Default editor: Visual Studio Code
| App &lt;span class="nb"&gt;type&lt;/span&gt;: javascript
| Javascript framework: vue
| Source Directory Path: src
| Distribution Directory Path: dist
| Build Command: npm run-script build
| Start Command: npm run-script serve

? Initialize the project with the above configuration? No
? Enter a name &lt;span class="k"&gt;for &lt;/span&gt;the environment dev
? Choose your default editor: Visual Studio Code
? Choose the &lt;span class="nb"&gt;type &lt;/span&gt;of app that you&lt;span class="s1"&gt;'re building javascript
Please tell us about your project
? What javascript framework are you using vue
? Source Directory Path:  src
? Distribution Directory Path: dist
? Build Command:  yarn build
? Start Command: yarn serve
Using default provider  awscloudformation
? Select the authentication method you want to use: AWS profile

For more information on AWS Profiles, see:
https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-profiles.html

? Please choose the profile you want to use amplify-dev
Adding backend environment dev to AWS Amplify Console app: d2qfsvhqbazu5s
‚†¶ Initializing project in the cloud...

(snip)

$
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;/p&gt;

&lt;p&gt;And don't forget to add UI Components.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;yarn add aws-amplify @aws-amplify/ui-vue
&lt;span class="err"&gt;$&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#15-add-other-packages"&gt;
  &lt;/a&gt;
  1.5. Add other packages
&lt;/h3&gt;

&lt;p&gt;This time we use "MapLibre GL JS," so we need to add these packages.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/aws/aws-sdk-js"&gt;aws-sdk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/benchmark-urbanism/vue-mapbox-map"&gt;@benchmark-urbanism/vue-mapbox-map&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/maplibre/maplibre-gl-js"&gt;maplibre-gl&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;See &lt;a href="https://docs.aws.amazon.com/location/latest/developerguide/tutorial-maplibre-gl-js.html"&gt;the official document&lt;/a&gt; for the detail.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;yarn add aws-sdk @benchmark-urbanism/vue-mapbox-map maplibre-gl
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#16-edit-mainjs"&gt;
  &lt;/a&gt;
  1.6. Edit main.js
&lt;/h3&gt;

&lt;p&gt;Then, we edit &lt;code&gt;src/main.js&lt;/code&gt; like below.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Vue&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./App.vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;vuetify&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./plugins/vuetify&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@aws-amplify/ui-vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Amplify&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;aws-amplify&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;awsconfig&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./aws-exports&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="nx"&gt;Amplify&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;configure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;awsconfig&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;maplibre-gl/dist/maplibre-gl.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="nx"&gt;Vue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;productionTip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;

&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Vue&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="nx"&gt;vuetify&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;render&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;h&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;h&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="nx"&gt;$mount&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#app&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#2-add-auth"&gt;
  &lt;/a&gt;
  2. Add Auth
&lt;/h2&gt;

&lt;p&gt;Add Authentication.&lt;/p&gt;

&lt;p&gt;
  amplify add auth
  &lt;br&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;amplify add auth
Using service: Cognito, provided by: awscloudformation

 The current configured provider is Amazon Cognito. 

 Do you want to use the default authentication and security configuration? Defau
lt configuration
 Warning: you will not be able to edit these selections. 
 How &lt;span class="k"&gt;do &lt;/span&gt;you want &lt;span class="nb"&gt;users &lt;/span&gt;to be able to sign &lt;span class="k"&gt;in&lt;/span&gt;? Username
 Do you want to configure advanced settings? No, I am &lt;span class="k"&gt;done&lt;/span&gt;&lt;span class="nb"&gt;.&lt;/span&gt;
Successfully added auth resource amplifyamazonlocatio3e211eea locally

Some next steps:
&lt;span class="s2"&gt;"amplify push"&lt;/span&gt; will build all your &lt;span class="nb"&gt;local &lt;/span&gt;backend resources and provision it &lt;span class="k"&gt;in &lt;/span&gt;the cloud
&lt;span class="s2"&gt;"amplify publish"&lt;/span&gt; will build all your &lt;span class="nb"&gt;local &lt;/span&gt;backend and frontend resources &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;if &lt;/span&gt;you have hosting category added&lt;span class="o"&gt;)&lt;/span&gt; and provision it &lt;span class="k"&gt;in &lt;/span&gt;the cloud

&lt;span class="err"&gt;$&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;/p&gt;

&lt;p&gt;Then, Push project.&lt;/p&gt;

&lt;p&gt;
  amplify push
  &lt;br&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;amplify push
‚úî Successfully pulled backend environment dev from the cloud.

Current Environment: dev

| Category | Resource name                | Operation | Provider plugin   |
| &lt;span class="nt"&gt;--------&lt;/span&gt; | &lt;span class="nt"&gt;----------------------------&lt;/span&gt; | &lt;span class="nt"&gt;---------&lt;/span&gt; | &lt;span class="nt"&gt;-----------------&lt;/span&gt; |
| Auth     | amplifyamazonlocatio3e211eea | Create    | awscloudformation |
? Are you sure you want to &lt;span class="k"&gt;continue&lt;/span&gt;? Yes
‚†ß Updating resources &lt;span class="k"&gt;in &lt;/span&gt;the cloud. This may take a few minutes...

&lt;span class="o"&gt;(&lt;/span&gt;snip&lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="err"&gt;$&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#3-create-a-map-and-a-search-index"&gt;
  &lt;/a&gt;
  3. Create a Map and a Search index
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#31%E3%80%80create-a-map"&gt;
  &lt;/a&gt;
  3.1.„ÄÄCreate a Map
&lt;/h3&gt;

&lt;p&gt;Next, we open the AWS console by the browser and move to "Amazon Location Service."&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Click the "Maps" menu on the left panel.&lt;/li&gt;
&lt;li&gt;And click "Create map" in the My maps area.&lt;/li&gt;
&lt;li&gt;Input the map name "SampleMap" in the Name field.&lt;/li&gt;
&lt;li&gt;Select the map in the Maps area. In this case, we select "Esri Light."&lt;/li&gt;
&lt;li&gt;Select "Pricing plan use-case." In this case, we select "Yes" to the first question.&lt;/li&gt;
&lt;li&gt;Push "Create map" at the bottom of the page.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GzrjHg6---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vc5r70fou1f60vvrlna6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GzrjHg6---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vc5r70fou1f60vvrlna6.png" alt="Create a Map"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#32%E3%80%80create-a-search-index"&gt;
  &lt;/a&gt;
  3.2.„ÄÄCreate a Search index
&lt;/h3&gt;

&lt;p&gt;Continuously, we create a Place index.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Click the "Search indexes" menu on the left panel.&lt;/li&gt;
&lt;li&gt;And click "Create place index" in the My maps area.&lt;/li&gt;
&lt;li&gt;Input the map name "SamplePlaceIndex" in the Name field.&lt;/li&gt;
&lt;li&gt;Select the data provider in the Data provider area. In this case, we select "Esri."&lt;/li&gt;
&lt;li&gt;Select the data storage option in the Data storage options area. In this case, we select "No, single use only."&lt;/li&gt;
&lt;li&gt;Select "Pricing plan use-case." In this case, we select "Yes" to the first question.&lt;/li&gt;
&lt;li&gt;Push "Create place index" at the bottom of the page.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6sGppm-n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qoje6x7d1uac9qcv03n8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6sGppm-n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qoje6x7d1uac9qcv03n8.png" alt="Create„ÄÄa Search index"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#4-set-iam-role"&gt;
  &lt;/a&gt;
  4. Set IAM Role
&lt;/h2&gt;

&lt;p&gt;We have already added the authentication function by Amplify.&lt;br&gt;
However, the IAM role is incomplete. Unable to access previously created location services resources.&lt;br&gt;
Let's add it.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Go to IAM Services and click the Roles menu on the left panel.&lt;/li&gt;
&lt;li&gt;Input "amplify-amplifyamazonlocatio" in the search field.&lt;/li&gt;
&lt;li&gt;Click the role that name ends with "-authRole".&lt;/li&gt;
&lt;li&gt;Click "Add inline policy".&lt;/li&gt;
&lt;li&gt;Select the JSON tab and input below JSON data. (Set your ARN in [MAP_ARN] and [PLACE_INDEX_ARN].)
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"Version"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"2012-10-17"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"Statement"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"Sid"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"VisualEditor0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"Effect"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Allow"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"Action"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="s2"&gt;"geo:GetMapGlyphs"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="s2"&gt;"geo:GetMapSprites"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="s2"&gt;"geo:GetMapStyleDescriptor"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="s2"&gt;"geo:GetMapTile"&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"Resource"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;MAP_ARN&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"Sid"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"VisualEditor1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"Effect"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Allow"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"Action"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"geo:SearchPlaceIndexForText"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"Resource"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;PLACE_INDEX_ARN&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#5-implement"&gt;
  &lt;/a&gt;
  5. Implement
&lt;/h2&gt;

&lt;p&gt;OK, we can implement a search place and show it on the map.&lt;br&gt;
Please see the repository for code details.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/tacck"&gt;
        tacck
      &lt;/a&gt; / &lt;a href="https://github.com/tacck/amplify-amazon-location"&gt;
        amplify-amazon-location
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#51-search-the-location"&gt;
  &lt;/a&gt;
  5.1. Search the location
&lt;/h3&gt;

&lt;p&gt;"Search the location" implementation is like below.&lt;br&gt;
Only use &lt;code&gt;searchPlaceIndexForText&lt;/code&gt;, we can get the place information.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/tacck/amplify-amazon-location/blob/main/src/components/SearchMap.vue"&gt;&lt;code&gt;src/components/SearchMap.vue&lt;/code&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="nx"&gt;search&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;place&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;place&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;

      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;params&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;IndexName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;SamplePlaceIndex&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;place&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;searchPlaceIndexForText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
          &lt;span class="k"&gt;return&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

          &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Results&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Results&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lng&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Results&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;Place&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Geometry&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Point&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lat&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Results&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;Place&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Geometry&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Point&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#52-display-the-location-on-the-map"&gt;
  &lt;/a&gt;
  5.2. Display the location on the map
&lt;/h3&gt;

&lt;p&gt;"Display the location on the map" implementation is like below.&lt;br&gt;
&lt;code&gt;mapInstance&lt;/code&gt; is the object rendering the map.&lt;br&gt;
&lt;code&gt;transformRequest&lt;/code&gt; make a Signed URL for access to the Map resource previously created.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/tacck/amplify-amazon-location/blob/main/src/components/Map.vue"&gt;&lt;code&gt;src/components/Map.vue&lt;/code&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="nx"&gt;mounted&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;credentials&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;Auth&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;currentCredentials&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mapInstance&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;maplibregl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;Map&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;container&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;map&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mapName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;center&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scene&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lng&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scene&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lat&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
      &lt;span class="na"&gt;zoom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scene&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;zoom&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;transformRequest&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;transformRequest&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;

    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mapInstance&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addControl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;maplibregl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NavigationControl&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;top-left&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mapInstance&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;load&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resize&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;snip&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;transformRequest&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;resourceType&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;resourceType&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Style&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;://&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`https://maps.geo.&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;awsconfig&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;aws_project_region&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.amazonaws.com/maps/v0/maps/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/style-descriptor`&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;

      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;amazonaws.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Signer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;signUrl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;access_key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;credentials&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;accessKeyId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;secret_key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;credentials&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;secretAccessKey&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;session_token&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;credentials&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sessionToken&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="p"&gt;}),&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;

      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#6-take-a-journey"&gt;
  &lt;/a&gt;
  6. Take a journey
&lt;/h2&gt;

&lt;p&gt;We arrive at the final section.&lt;br&gt;
Let's get to the journey!&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/G1BclFCVMmw"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>aws</category>
      <category>amplify</category>
      <category>vue</category>
      <category>geolocation</category>
    </item>
    <item>
      <title>Setting up Google Authentication With FirebaseüöÄ</title>
      <author>Karan Choudhary</author>
      <pubDate>Tue, 08 Jun 2021 13:03:00 +0000</pubDate>
      <link>https://dev.to/karanchoudhary/setting-up-google-authentication-with-firebase-n6i</link>
      <guid>https://dev.to/karanchoudhary/setting-up-google-authentication-with-firebase-n6i</guid>
      <description>&lt;h1&gt;
  &lt;a href="#a-bit-about-me"&gt;
  &lt;/a&gt;
  A Bit About Me
&lt;/h1&gt;

&lt;p&gt;Hey folksüëãüèª, I am Karan Choudhary. A frontend developer passionate about web technologies and building things with codeüíª.&lt;/p&gt;

&lt;p&gt;In this article, we will learn the easiest and the fastest way to setup Google Authentication with Firebase. So without wasting any time, let's get straight into it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-firebase-authentication"&gt;
  &lt;/a&gt;
  Why Firebase Authentication?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H730Vywy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://firebase.google.com/docs/auth/images/auth-providers.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H730Vywy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://firebase.google.com/docs/auth/images/auth-providers.png" alt="firebase"&gt;&lt;/a&gt;&lt;br&gt;
Most apps need to know the identity of a user. Knowing a user's identity allows an app to securely save user data in the cloud and provide the same personalized experience across all of the user's devices.&lt;/p&gt;

&lt;p&gt;Firebase Authentication provides backend services, easy-to-use SDKs, and ready-made UI libraries to authenticate users to your app. It supports authentication using passwords, phone numbers, popular federated identity providers like Google, Facebook and Twitter, and more.&lt;/p&gt;

&lt;p&gt;Firebase Authentication integrates tightly with other Firebase services, and it leverages industry standards like OAuth 2.0 and OpenID Connect, so it can be easily integrated with your custom backend.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting Started
&lt;/h2&gt;

&lt;p&gt;Since we'll be needing some starter files for that. I've published a NPM package for easy build setup. Or else you can just clone the GitHub Repository. &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation‚öíÔ∏è
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;You‚Äôll need to have Node 10.16.0 or later version on your local development machine&lt;/strong&gt;. I recommend using the latest LTS version.&lt;/p&gt;

&lt;p&gt;To create a new app, you may choose one of the following methods:&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#npm"&gt;
  &lt;/a&gt;
  npm
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Install the package
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm i firebase-auth-app
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Create a project using Firebase-Auth-App CLI
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;firebase-auth-app
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Install dependencies
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#git"&gt;
  &lt;/a&gt;
  git
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Clone the repository
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git clone git@github.com:itskaranchoudhary/firebase-auth-app.git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Change the working directory
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;firebase-auth-app
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Install dependencies
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;It will create a directory called &lt;code&gt;firebase-auth-app&lt;/code&gt; inside the current folder.&lt;br&gt;&lt;br&gt;
Inside that directory, it will generate the following project structure and install the required dependencies.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#file-structure"&gt;
  &lt;/a&gt;
  File Structure
&lt;/h2&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;‚îú‚îÄ‚îÄ src/
‚îÇ   ‚îî‚îÄ‚îÄ assets
‚îÇ   ‚îî‚îÄ‚îÄ scripts
‚îÇ   ‚îî‚îÄ‚îÄ styles
‚îÇ   ‚îî‚îÄ‚îÄfavicon.ico
‚îú‚îÄ‚îÄ .gitignore
‚îú‚îÄ‚îÄ firebase.json
‚îú‚îÄ‚îÄ index.html
‚îú‚îÄ‚îÄ package-lock.json
‚îî‚îÄ‚îÄ package.json
‚îú‚îÄ‚îÄ README.md
‚îú‚îÄ‚îÄ LICENSE
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#creating-a-firebase-project"&gt;
  &lt;/a&gt;
  Creating a Firebase Project
&lt;/h2&gt;

&lt;p&gt;First of all, go to you  &lt;a href="https://console.firebase.google.com/"&gt;firebase console&lt;/a&gt; and Create a new project. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3ZPQjFak--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://firebasestorage.googleapis.com/v0/b/url-creator-2ee08.appspot.com/o/Screenshot%2520%2528133%2529.png%3Falt%3Dmedia%26token%3D13a60363-85d2-4cb5-be77-2b37976816c2" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3ZPQjFak--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://firebasestorage.googleapis.com/v0/b/url-creator-2ee08.appspot.com/o/Screenshot%2520%2528133%2529.png%3Falt%3Dmedia%26token%3D13a60363-85d2-4cb5-be77-2b37976816c2" alt="enter image description here"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After creating a project, click on  &lt;strong&gt;Web&lt;/strong&gt;  button to register your web app.  &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3rDYs5H7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://firebasestorage.googleapis.com/v0/b/url-creator-2ee08.appspot.com/o/Screenshot%2520%2528134%2529.png%3Falt%3Dmedia%26token%3Df924455a-9a98-4495-a3fc-32be862a16d9" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3rDYs5H7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://firebasestorage.googleapis.com/v0/b/url-creator-2ee08.appspot.com/o/Screenshot%2520%2528134%2529.png%3Falt%3Dmedia%26token%3Df924455a-9a98-4495-a3fc-32be862a16d9" alt="enter image description here"&gt;&lt;/a&gt;&lt;br&gt;
Enter the name of your web app and that's it.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XJMrlfXI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://firebasestorage.googleapis.com/v0/b/url-creator-2ee08.appspot.com/o/Screenshot%2520%2528136%2529.png%3Falt%3Dmedia%26token%3D81b565eb-30da-419d-92cd-2e02b4b7d1db" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XJMrlfXI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://firebasestorage.googleapis.com/v0/b/url-creator-2ee08.appspot.com/o/Screenshot%2520%2528136%2529.png%3Falt%3Dmedia%26token%3D81b565eb-30da-419d-92cd-2e02b4b7d1db" alt="enter image description here"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#enabling-google-authentication"&gt;
  &lt;/a&gt;
  Enabling Google Authentication
&lt;/h2&gt;

&lt;p&gt;Since you have added the web app, enable the Google Sign-Up Method under the &lt;code&gt;Authentication/Sign-In Method/Sign-In Providers&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Qou5Hu4j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://firebasestorage.googleapis.com/v0/b/url-creator-2ee08.appspot.com/o/Screenshot%2520%2528128%2529.png%3Falt%3Dmedia%26token%3Dc004aaad-3a8f-4f17-b725-fb86a58b6787" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Qou5Hu4j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://firebasestorage.googleapis.com/v0/b/url-creator-2ee08.appspot.com/o/Screenshot%2520%2528128%2529.png%3Falt%3Dmedia%26token%3Dc004aaad-3a8f-4f17-b725-fb86a58b6787" alt="enter image description here"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#adding-the-authorized-domain"&gt;
  &lt;/a&gt;
  Adding the Authorized Domain
&lt;/h2&gt;

&lt;p&gt;Since Firebase Auth doesn't work with live server. You'll have to manually add the domain you would be deploying your app to. &lt;/p&gt;

&lt;p&gt;Go to &lt;code&gt;Authentication/Sign-In Method/Authorized Domains&lt;/code&gt;add your domain. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NaqdgOXr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://firebasestorage.googleapis.com/v0/b/url-creator-2ee08.appspot.com/o/Screenshot%2520%2528131%2529.png%3Falt%3Dmedia%26token%3Da3819431-0098-40c3-a67f-4be041c94b30" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NaqdgOXr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://firebasestorage.googleapis.com/v0/b/url-creator-2ee08.appspot.com/o/Screenshot%2520%2528131%2529.png%3Falt%3Dmedia%26token%3Da3819431-0098-40c3-a67f-4be041c94b30" alt="enter image description here"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#firebase-config"&gt;
  &lt;/a&gt;
  Firebase Config
&lt;/h2&gt;

&lt;p&gt;Now, go to  &lt;strong&gt;Project Settings &amp;gt; SDK Setup and Configuration&lt;/strong&gt;  to get your  &lt;code&gt;firebaseConfig&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--C12ipQ-7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://firebasestorage.googleapis.com/v0/b/url-creator-2ee08.appspot.com/o/Screenshot%2520%2528140%2529.png%3Falt%3Dmedia%26token%3Db80615bf-d03d-41f3-b03b-2f4a6f3caa48" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C12ipQ-7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://firebasestorage.googleapis.com/v0/b/url-creator-2ee08.appspot.com/o/Screenshot%2520%2528140%2529.png%3Falt%3Dmedia%26token%3Db80615bf-d03d-41f3-b03b-2f4a6f3caa48" alt="enter image description here"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It should look something like this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var firebaseConfig = {
    apiKey: "API_KEY",
    authDomain: "PROJECT_ID.firebaseapp.com",
    databaseURL: "https://PROJECT_ID.firebaseio.com",
    projectId: "PROJECT_ID",
    storageBucket: "PROJECT_ID.appspot.com",
    messagingSenderId: "SENDER_ID",
    appId: "APP_ID",
    measurementId: "G-MEASUREMENT_ID",
  };
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Copy the config and paste it into &lt;code&gt;index.html &amp;gt; script tag&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;üåü You are all set!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#testing-the-app"&gt;
  &lt;/a&gt;
  Testing the App
&lt;/h2&gt;

&lt;p&gt;To test the app, we need to deploy it to the domain we have added in the firebase console. &lt;/p&gt;

&lt;p&gt;Since, I have already deployed my app. I can visit &lt;a href="https://friendlychatapp.netlify.app"&gt;https://friendlychatapp.netlify.app&lt;/a&gt; to check if the authentication is working properly or not.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zfn7jw4v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://firebasestorage.googleapis.com/v0/b/url-creator-2ee08.appspot.com/o/Screenshot%2520%2528145%2529.png%3Falt%3Dmedia%26token%3Da725f12f-2140-42cf-b3b4-65bb1f8d2312" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zfn7jw4v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://firebasestorage.googleapis.com/v0/b/url-creator-2ee08.appspot.com/o/Screenshot%2520%2528145%2529.png%3Falt%3Dmedia%26token%3Da725f12f-2140-42cf-b3b4-65bb1f8d2312" alt="enter image description here"&gt;&lt;/a&gt;&lt;br&gt;
And it seems like everything is working fine.‚úî&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IJ-gaKhw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://firebasestorage.googleapis.com/v0/b/url-creator-2ee08.appspot.com/o/Screenshot%2520%2528146%2529.png%3Falt%3Dmedia%26token%3Dd93f2edd-1b1b-403d-a8bf-79266acfcf7d" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IJ-gaKhw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://firebasestorage.googleapis.com/v0/b/url-creator-2ee08.appspot.com/o/Screenshot%2520%2528146%2529.png%3Falt%3Dmedia%26token%3Dd93f2edd-1b1b-403d-a8bf-79266acfcf7d" alt="enter image description here"&gt;&lt;/a&gt;&lt;br&gt;
Now, go to &lt;a href="https://console.firebase.google.com/"&gt;firebase console&lt;/a&gt; and open up your firebase project and go to &lt;strong&gt;Authentication &amp;gt; Users&lt;/strong&gt;.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IqnTymaR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://firebasestorage.googleapis.com/v0/b/url-creator-2ee08.appspot.com/o/Screenshot%2520%2528147%2529.png%3Falt%3Dmedia%26token%3Dd7416d4a-e412-487d-964d-34ab5421b10a" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IqnTymaR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://firebasestorage.googleapis.com/v0/b/url-creator-2ee08.appspot.com/o/Screenshot%2520%2528147%2529.png%3Falt%3Dmedia%26token%3Dd7416d4a-e412-487d-964d-34ab5421b10a" alt="enter image description here"&gt;&lt;/a&gt;&lt;br&gt;
We can see a that a new user is added‚ú®.&lt;/p&gt;

&lt;p&gt;Let's do another check by logging the user details in the console using &lt;code&gt;console.log()&lt;/code&gt;&lt;br&gt;
Copy and paste the following code in the console:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var user = firebase.auth().currentUser;
var name, email, photoUrl, uid, emailVerified;

if (user != null) {  
    name = user.displayName;  
    email = user.email;  
    photoUrl = user.photoURL;  
    emailVerified = user.emailVerified;  
    uid = user.uid;  // The user's ID, unique to the Firebase project. 
    }

console.log(name, email, uid);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If everything is right it should log my details in the console. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3DCWWpdb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://firebasestorage.googleapis.com/v0/b/url-creator-2ee08.appspot.com/o/Screenshot%2520%2528148%2529.png%3Falt%3Dmedia%26token%3Dca41b27f-31bc-4468-902e-ea3415555dea" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3DCWWpdb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://firebasestorage.googleapis.com/v0/b/url-creator-2ee08.appspot.com/o/Screenshot%2520%2528148%2529.png%3Falt%3Dmedia%26token%3Dca41b27f-31bc-4468-902e-ea3415555dea" alt="enter image description here"&gt;&lt;/a&gt;&lt;br&gt;
That's pretty much it! Congratulations. You've just setup Google Authentication using Firebaseü•≥&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrap-up"&gt;
  &lt;/a&gt;
  Wrap Up
&lt;/h2&gt;

&lt;p&gt;So that's it. Hope you enjoyed the article. Feel free to share your thoughts in the comment section below. Any feedback is greatly appreciated.&lt;/p&gt;

&lt;p&gt;Feel free to the check out my GitHub: &lt;a href="https://github.com/itskaranchoudhary"&gt;https://github.com/itskaranchoudhary&lt;/a&gt;&lt;br&gt;&lt;br&gt;
Star the repo‚≠ê: &lt;a href="https://github.com/itskaranchoudhary/firebase-auth-app"&gt;https://github.com/itskaranchoudhary/firebase-auth-app&lt;/a&gt;&lt;br&gt;&lt;br&gt;
Find the NPM Package here: &lt;a href="https://www.npmjs.com/package/firebase-auth-app"&gt;https://www.npmjs.com/package/firebase-auth-app&lt;/a&gt;&lt;/p&gt;




</description>
      <category>firebase</category>
      <category>authentication</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>How to connect a chatbot to a TalkJS chat</title>
      <author>Andrew</author>
      <pubDate>Tue, 08 Jun 2021 12:55:23 +0000</pubDate>
      <link>https://dev.to/talkjs/how-to-connect-a-chatbot-to-a-talkjs-chat-1h7e</link>
      <guid>https://dev.to/talkjs/how-to-connect-a-chatbot-to-a-talkjs-chat-1h7e</guid>
      <description>&lt;p&gt;In this post, I will demonstrate how you can connect the TalkJS &lt;a href="https://talkjs.com/"&gt;Chat API&lt;/a&gt; with a chatbot service like &lt;a href="https://cloud.google.com/dialogflow"&gt;Dialogflow&lt;/a&gt;. A chatbot is a software application used to conduct an online chat conversation via text or text-to-speech instead of providing direct contact with a live human agent.&lt;/p&gt;

&lt;p&gt;Chatbots can be a fantastic way to add rich functionality to your chat integration by enabling automatic and application-aware responses to user inquiries.&lt;/p&gt;

&lt;p&gt;While TalkJS doesn't provide an out-of-the-box AI chatbot that can interact with your users without any further operations, we provide a way for chatbots to interface with the chat by combining our webhooks feature which allows you to create a URL to monitor events from users.&lt;/p&gt;

&lt;p&gt;For example, when a user sends a message, our REST API can be used by your chatbot to directly interact with your users by sending messages. It is up to your application to appropriately process incoming events and generate relevant responses.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisite"&gt;
  &lt;/a&gt;
  Prerequisite
&lt;/h2&gt;

&lt;p&gt;Before going any further, complete our &lt;a href="https://talkjs.com/docs/Reference/REST_API/Getting_Started/Introduction.html"&gt;Getting Started guide&lt;/a&gt; to set up a simple conversation between two users.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dialogflow-setup"&gt;
  &lt;/a&gt;
  Dialogflow Setup
&lt;/h2&gt;

&lt;p&gt;Let‚Äôs set up a simple Dialogflow project that will allow us to integrate with TalkJS.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 1&lt;/strong&gt; - Go to &lt;a href="https://dialogflow.com/"&gt;https://dialogflow.com/&lt;/a&gt; and select Dialogflow ES, the standard agent type suitable for small and simple agents. &lt;/p&gt;

&lt;p&gt;Thankfully the documentation for this application is excellent. Finish the &lt;a href="https://cloud.google.com/dialogflow/es/docs/quick/setup"&gt;setup&lt;/a&gt; as instructed, which involves:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://cloud.google.com/dialogflow/es/docs/quick/setup#project"&gt;Creating a new project&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://cloud.google.com/dialogflow/es/docs/quick/setup#api"&gt;Enabling the API for the project&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://cloud.google.com/dialogflow/es/docs/quick/setup#sa-create"&gt;Creating a service account&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Step 2&lt;/strong&gt; - &lt;a href="https://cloud.google.com/dialogflow/es/docs/quick/build-agent"&gt;Build your agent using this guide&lt;/a&gt;. Finish the required steps to &lt;a href="https://cloud.google.com/dialogflow/es/docs/quick/build-agent#create_a_new_intent"&gt;create your intent&lt;/a&gt;. I added a training phrase of ‚ÄúWhat is the best Chat API and SDK?‚Äù with the response being ‚ÄúTalkJS is the best Chat API and SDK!‚Äù. &lt;/p&gt;

&lt;p&gt;This concludes our Dialogflow setup. Let‚Äôs set up our webhook in TalkJS, which will allow us to receive messages.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-webhooks-to-receive-messages-in-talkjs"&gt;
  &lt;/a&gt;
  Using webhooks to receive messages in TalkJS
&lt;/h2&gt;

&lt;p&gt;So, what exactly is a webhook? A webhook (also called a web callback or HTTP push API) is a way for an app to provide other applications with real-time information. A webhook delivers data to other applications as it happens, meaning you get data immediately.&lt;/p&gt;

&lt;p&gt;Before we can use webhooks we need to set up a server for our application. If you have a server URL already set up, you can move on to &lt;a href="#enable"&gt;Enabling the TalkJS Webhook&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#setting-up-our-server"&gt;
  &lt;/a&gt;
  Setting up our server
&lt;/h3&gt;

&lt;p&gt;We will be using &lt;a href="https://nodejs.org/en/download/"&gt;Node.js&lt;/a&gt;, and &lt;a href="https://ngrok.com/download"&gt;ngrok&lt;/a&gt; to set up our server. &lt;/p&gt;

&lt;p&gt;You may be wondering, what is ngrok?&lt;/p&gt;

&lt;p&gt;Your development machine may be connected to a secure network behind a firewall. To work around access restrictions, ngrok runs a small client process on your machine which creates a private connection tunnel to the ngrok cloud service. Your localhost development server is mapped to an ngrok.io sub-domain, which a remote user can then access. There‚Äôs no need to expose ports, set up forwarding, or make other network changes. The connection tunnel established by ngrok is secure and can only transmit data to the localhost port you have open.&lt;/p&gt;

&lt;p&gt;Make sure you have both of these installed before proceeding. Extract the ngrok executable to your project folder, or add it to your &lt;code&gt;PATH&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In the terminal for your project, type &lt;code&gt;npx express-generator&lt;/code&gt; to quickly create a skeleton for our local server.&lt;/p&gt;

&lt;p&gt;Once this operation is complete you should now see a *&lt;em&gt;routes *&lt;/em&gt; directory.&lt;/p&gt;

&lt;p&gt;In the &lt;strong&gt;routes&lt;/strong&gt; directory, open the file &lt;em&gt;users.js&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Replace the existing code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;router.get('/', function(req, res, next) {
  res.send('respond with a resource');
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With the new code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;router.post('/', function(req, res) {
  var body = req.body;
  var message = body.data.message.text;
  console.log("Message Text: " + message);
  res.status(200).send();
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the bin directory open the file &lt;em&gt;www&lt;/em&gt;. Change the line:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var port = normalizePort(process.env.PORT || '3000');
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Time to launch our ngrok server. Open the Command Prompt or shell, and change (&lt;code&gt;cd&lt;/code&gt;) into the directory of your project. &lt;/p&gt;

&lt;p&gt;Run the command: &lt;code&gt;ngrok http 3000&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Copy the https protocol version of the URL. This URL is used to forward all of the messages from your ngrok server to your local server:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_QlY0_SV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4gotzrlcl5w460kddloz.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_QlY0_SV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4gotzrlcl5w460kddloz.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For my server, I have a value of &lt;a href="https://5286ee752ef7.ngrok.io"&gt;https://5286ee752ef7.ngrok.io&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; this URL will be different for you.&lt;/p&gt;

&lt;p&gt;Now append the ‚Äú/users‚Äù section to this URL. &lt;/p&gt;

&lt;p&gt;My final result looks like the following: &lt;a href="https://5286ee752ef7.ngrok.io/users"&gt;https://5286ee752ef7.ngrok.io/users&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is the URL we will use for our webhook.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#enabling-the-talkjs-webhook"&gt;
  &lt;/a&gt;
  &lt;a&gt;&lt;/a&gt;Enabling the TalkJS Webhook
&lt;/h3&gt;

&lt;p&gt;You can enable the TalkJS webhook in the &lt;a href="https://talkjs.com/dashboard/"&gt;dashboard&lt;/a&gt;. Enter the https URL from ngrok and enable the messages sent checkbox&lt;/p&gt;

&lt;p&gt;When webhooks are enabled in the TalkJS dashboard, your server will receive HTTP POST requests from the TalkJS server notifying you about events that happen in your application between your users. If you‚Äôre interested in learning more about how TalkJS webhooks work, read the &lt;a href="https://talkjs.com/docs/Reference/Webhooks.html"&gt;Webhook Reference Guide&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;From your &lt;a href="https://talkjs.com/dashboard/"&gt;dashboard&lt;/a&gt;, perform the following steps to enable webhooks:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Enable the use of webhooks by setting the Webhook toggle to enabled. You should now have the option to enter a URL. &lt;/li&gt;
&lt;li&gt;Enter the URL of your server, or the ngrok server you created from the previous section (in my case, it‚Äôs: &lt;a href="https://5286ee752ef7.ngrok.io/users"&gt;https://5286ee752ef7.ngrok.io/users&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Enable the message.sent checkbox&lt;/li&gt;
&lt;li&gt;Click the Save URL button &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Your final result should look something like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--K_tFVIub--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ovok7ofr0r2etsdlr04k.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K_tFVIub--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ovok7ofr0r2etsdlr04k.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Time to test out what we have done so far.&lt;/p&gt;

&lt;p&gt;In the terminal of your project, type the command &lt;code&gt;npm install&lt;/code&gt; to ensure all dependencies are installed.&lt;/p&gt;

&lt;p&gt;Finally, run &lt;code&gt;npm start&lt;/code&gt; and launch your application so that you can see the inbox you previously created in the &lt;a href="https://talkjs.com/docs/Reference/REST_API/Getting_Started/Introduction.html"&gt;Getting Started guide&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Type a message into the conversation, and go back to your terminal to check the logs. Look for the output of  &lt;code&gt;console.log("Message Text: " + message);&lt;/code&gt; It should match the text you have typed in.&lt;/p&gt;

&lt;p&gt;In my case, the logs look like the following snippet:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dLk3QBZP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/190mb1drdva96r793r04.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dLk3QBZP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/190mb1drdva96r793r04.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There you have it, we have successfully used webhooks to receive messages in TalkJS. But how do we send this message to Dialogflow? Let‚Äôs find out!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sending-a-message-to-dialogflow"&gt;
  &lt;/a&gt;
  Sending a message to Dialogflow
&lt;/h2&gt;

&lt;p&gt;At this stage, we have the message our user has typed in. This could be a question about a product or service we offer. &lt;/p&gt;

&lt;p&gt;In order to see our Dialogflow response, ensure the text you enter into the TalkJS conversation the same as the training phrase you set up for your intent. In this example, the training phrase of ‚ÄúWhat is the best Chat API and SDK?‚Äù with the response being ‚ÄúTalkJS is the best Chat API and SDK!‚Äù. &lt;/p&gt;

&lt;p&gt;To accomplish sending our message to Dialogflow, we must first ensure we are authenticated to do so. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#authentication-for-sending-messages-to-dialogflow"&gt;
  &lt;/a&gt;
  Authentication for Sending messages to Dialogflow
&lt;/h3&gt;

&lt;p&gt;Follow the steps to get authenticated here:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://cloud.google.com/docs/authentication/getting-started#cloud-console"&gt;https://cloud.google.com/docs/authentication/getting-started#cloud-console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For me my final command looked like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;set GOOGLE_APPLICATION_CREDENTIALS=C:\Users\Admin\Downloads\chatbot-talkjs-5ee64d42fcbb
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Your value will be different.&lt;/p&gt;

&lt;p&gt;If you run into issues with this method, specifically this error:&lt;code&gt;Error: Could not load the default credentials&lt;/code&gt;. You can try this alternate method of authenticating.&lt;/p&gt;

&lt;p&gt;Visit: &lt;a href="https://cloud.google.com/sdk/install"&gt;https://cloud.google.com/sdk/install&lt;/a&gt; and perform the following steps:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Install the Google SDK.&lt;/li&gt;
&lt;li&gt;Open the gcloud shell.&lt;/li&gt;
&lt;li&gt;Run the command: &lt;code&gt;gcloud auth application-default login&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Log in to your associated Gmail account.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You should now be authenticated. Time to add the code that sends our text to  Dialogflow.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sending-messages-to-dialogflow-using-the-nodejs-client-library"&gt;
  &lt;/a&gt;
  Sending messages to Dialogflow using the Node.js client library
&lt;/h3&gt;

&lt;p&gt;We can send messages to Dialogflow using the &lt;a href="https://github.com/googleapis/nodejs-dialogflow"&gt;Node.js client library&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;The following code sends the message we type in the TalkJS inbox to Dialogflow.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const dialogflow = require('@google-cloud/dialogflow');
const uuid = require('uuid');

async function sendMessageToDialogflow(talkjsText) {
  // A unique identifier for the given session
  const sessionId = uuid.v4();

  // Create a new session
  const sessionClient = new dialogflow.SessionsClient();


// Pass the cloud project ID here
const sessionPath = sessionClient.projectAgentSessionPath('chatbot-talkjs', sessionId);

  // The text query request.
  const request = {
    session: sessionPath,
    queryInput: {
      text: {
        // The query to send to the dialogflow agent
        text: talkjsText,
        // The language used by the client (en-US)
        languageCode: 'en-US',
      },
    },
  };

  // Send request and log result
  const responses = await sessionClient.detectIntent(request);
  console.log('Detected intent');
  const result = responses[0].queryResult;
  console.log(`  Query: ${result.queryText}`);
  console.log(`  Response: ${result.fulfillmentText}`);

  if(result.queryText != "TalkJS is the best Chat API and SDK!")
    return result.fulfillmentText;

  if (result.intent) {
    console.log(`  Intent: ${result.intent.displayName}`);
  } else {
    console.log(`  No intent matched.`);
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We add the line: &lt;code&gt;if(result.queryText != "TalkJS is the best Chat API and SDK!")&lt;/code&gt; to make sure our application does not interpret this reply as a new message to reply to. &lt;/p&gt;

&lt;p&gt;In reality, you would have more than a single reply set up, so this would not be necessary.&lt;/p&gt;

&lt;p&gt;Re-open the file &lt;em&gt;user.js&lt;/em&gt; and add a call to &lt;code&gt;sendMessageToDialogflow&lt;/code&gt; here:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;router.post('/', function(req, res) {
  var body = req.body;
  var message = body.data.message.text;
  console.log("Message Text: " + message);
  res.status(200).send();
  var replyFromDialogFlow = sendMessageToDialogflow(message);
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Before we run this code and test out our new feature, run the following commands the install the required packages:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;code&gt;npm install @google-cloud/dialogflow&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;code&gt;npm install uuid&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let‚Äôs launch our application, this time writing a message that matches our training phrase exactly.&lt;/p&gt;

&lt;p&gt;To see our new feature in action we need to check the logs!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rAmQx1Ds--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d87l3590wbw7dwsnnpre.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rAmQx1Ds--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d87l3590wbw7dwsnnpre.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is exactly the result we want. It is recognizing our intent and sending the appropriate response to our query. &lt;/p&gt;

&lt;p&gt;We now have the message from our TalkJS conversation being sent to Dialogflow and correctly generating a response. Let‚Äôs look at how we get this response to appear as a reply in our TalkJS conversation. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sending-dialogflow-responses-to-talkjs"&gt;
  &lt;/a&gt;
  Sending Dialogflow responses to TalkJS
&lt;/h2&gt;

&lt;p&gt;We have the response generating correctly, but we need to show this response in the TalkJS conversation. This can be accomplished through the TalkJS &lt;a href="https://talkjs.com/docs/Reference/REST_API/Getting_Started/Introduction.html"&gt;REST API&lt;/a&gt;, specifically a POST request to the &lt;a href="https://talkjs.com/docs/Reference/REST_API/Messages.html"&gt;Messages endpoint&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;To send our POST request in Node.js we will use axios. Axios is a promise-based HTTP client for the browser and Node. js. Axios makes it easy to send asynchronous HTTP requests to REST endpoints and perform CRUD operations.&lt;/p&gt;

&lt;p&gt;To install axios, simply run &lt;code&gt;npm install axios&lt;/code&gt; in your terminal console.  &lt;/p&gt;

&lt;p&gt;Time to add the code that will allow us to send the Dialogflow response to our conversation. &lt;/p&gt;

&lt;p&gt;You will need to change several things with the code below: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;code&gt;APP_ID&lt;/code&gt; - you can find your app id on the &lt;a href="https://talkjs.com/dashboard/"&gt;dashboard&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;  &lt;code&gt;CONVERSATION_ID&lt;/code&gt; - you can find the ID of a conversation using &lt;code&gt;conversation.id&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;code&gt;USER_ID&lt;/code&gt; - This can be found wherever you created your user, like this &lt;a href="https://talkjs.com/docs/Getting_Started/The_Current_User.html"&gt;example&lt;/a&gt;. &lt;/li&gt;
&lt;li&gt;  &lt;code&gt;SECRET_KEY&lt;/code&gt; - you can find your secret key on the &lt;a href="https://talkjs.com/dashboard/"&gt;dashboard&lt;/a&gt;.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function sendReplyToTalkJS(responseFromDialog) {
  axios
.post('https://api.talkjs.com/v1/&amp;lt;APP_ID&amp;gt;/conversations/&amp;lt;CONVERSATION_ID&amp;gt;/messages', 
  '[{"text": "' + responseFromDialog + '", "sender": "&amp;lt;USER_ID&amp;gt;", "type": "UserMessage"}]',
  {
    headers: {
      'Authorization': 'Bearer &amp;lt;SECRET_KEY&amp;gt;,
      'Content-Type': 'application/json'
    }
  })
  .then(res =&amp;gt; {
    console.log(`statusCode: ${res.statusCode}`);

  })
  .catch(error =&amp;gt; {
    console.error(error)
  })
  .catch((error) =&amp;gt; console.log( error.response.request._response ) );
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let‚Äôs call this method.&lt;/p&gt;

&lt;p&gt;Re-open the file &lt;em&gt;user.js&lt;/em&gt; and add a call to &lt;code&gt;sendReplyToTalkJS&lt;/code&gt; here:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;router.post('/', function(req, res) {
  var body = req.body;
  var message = body.data.message.text;
  console.log("Message Text: " + message);
  res.status(200).send();
  var replyFromDialogFlow = sendMessageToDialogflowrunSample('chatbot-talkjs', message);
sendReplyToTalkJS(replyFromDialogFlow);
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Launch your application and enter your training phrase again.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ySjIuNed--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yzb99rttssn5m1vx50qo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ySjIuNed--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yzb99rttssn5m1vx50qo.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This time you should see the response from Dialogflow appearing as a reply in your conversation!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-use-talkjs-with-websockets-and-chatbots"&gt;
  &lt;/a&gt;
  How to use TalkJS with websockets and chatbots!
&lt;/h2&gt;

&lt;p&gt;Using a combination of websockets and our REST API has allowed us to integrate Dialogflow into the TalkJS workflow. However, you are not limited to Dialogflow. The principles we have learned today apply to many different offerings in the market. So what are you waiting for? Go and build the best chatbot you can, with a little help from TalkJS!&lt;/p&gt;

</description>
      <category>api</category>
      <category>webdev</category>
      <category>chat</category>
      <category>chatbot</category>
    </item>
    <item>
      <title>Sorting Algorithms Visualizer</title>
      <author>Akshay Pai</author>
      <pubDate>Tue, 08 Jun 2021 12:54:49 +0000</pubDate>
      <link>https://dev.to/sadanandpai/sorting-algorithms-visualizer-4631</link>
      <guid>https://dev.to/sadanandpai/sorting-algorithms-visualizer-4631</guid>
      <description>&lt;p&gt;Hello folks,&lt;/p&gt;

&lt;p&gt;Designed and developed "Sorting Algorithms Visualizer" (using React and Zustand) to help everyone, learning popular sorting algorithms easier and fun.&lt;/p&gt;

&lt;p&gt;Link to the webapp: &lt;a href="https://sadanandpai.github.io/sorting-visualizer/dist/"&gt;https://sadanandpai.github.io/sorting-visualizer/dist/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Repo: &lt;a href="https://github.com/sadanandpai/sorting-visualizer"&gt;https://github.com/sadanandpai/sorting-visualizer&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>algorithms</category>
      <category>webdev</category>
    </item>
    <item>
      <title>How To Write Your First Node.js Script</title>
      <author>Boyan Iliev</author>
      <pubDate>Tue, 08 Jun 2021 12:31:50 +0000</pubDate>
      <link>https://dev.to/boiliev/how-to-write-your-first-node-js-script-h05</link>
      <guid>https://dev.to/boiliev/how-to-write-your-first-node-js-script-h05</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;Until recently(if you think that 2009 is recently), we could only run JS code in a web browser. Node is a JavaScript runtime that executes code outside of the browser. We can use the same JS syntax we know and love to write server-side code, instead of relying on other languages like Python or Ruby. You can build Web Servers, Command Line Tools, Native Apps(VSCode is a Node app!), Video Games, Drone Software, and a whole lot more.&lt;/p&gt;

&lt;p&gt;In this post, I am going to show you how to write your first little Node script which will make you a directory with an HTML, CSS, and JavaScript file in it.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting Started
&lt;/h1&gt;

&lt;p&gt;First, you need to check if you have Node installed on your machine. If you don't know if you have it, just go to the terminal and write:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;node -v
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will print out the Node.js version which is currently installed. If you see an error and nothing prints, then you don't have Node installed.&lt;/p&gt;

&lt;p&gt;In order to install Node, go to the node website and just press the download button.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://nodejs.org/en/"&gt;https://nodejs.org/en/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After installing Node, we need to create a JavaScript file. Let's call this file &lt;code&gt;script.js&lt;/code&gt;. In this file, we are going to write our script.&lt;/p&gt;

&lt;p&gt;Now that we have Node installed and our file created, it's time to write our script. For this script, we are going to need to know what the &lt;code&gt;process&lt;/code&gt; object is and how the &lt;code&gt;fs&lt;/code&gt; module works. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#how-to-run-node-files"&gt;
  &lt;/a&gt;
  How To Run Node Files
&lt;/h1&gt;

&lt;p&gt;In order to run Node files, you just need to write &lt;code&gt;node&lt;/code&gt; and then the file name next to it in the terminal. Th file must be in the same folder that you're in, or you need to reference that full path relative to where you are at the moment.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;node script.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#-raw-process-endraw-amp-raw-argv-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;process&lt;/code&gt; &amp;amp; &lt;code&gt;argv&lt;/code&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;process&lt;/code&gt; is an object that's available which is in the global scope. It provides information about, and control over, the current Node.js process. It has a bunch of methods and properties. For example, we can see our current working directory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;process.cwd()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There is a method called &lt;code&gt;process.argv&lt;/code&gt;. It returns an array containing the command line arguments passed when the Node.js process was launched. The first element will be the path where the node executable is, and the second will be the path to the JS file being executed. To call this method you need to go to your JS file and &lt;code&gt;console.log()&lt;/code&gt; it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;console.log(process.argv);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then after running your file, you should see this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;node script.js
[ '/usr/local/bin/node', '/Users/ghostman/scripts/script.js' ]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Any remaining element will be additional command-line arguments. We can pass them as arguments into a script. Not a function, but it's a similar idea. I can pass in arguments to a script. &lt;/p&gt;

&lt;p&gt;Here is an example of a little script that prints out the additional command-line arguments:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const args = process.argv.slice(2)  -&amp;gt; slice to remove first two items.

for(let arg of args){
    console.log(`Hello ${arg}`)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then when we run the file like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;node script.js Batman Superman
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Ou output should look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Hello Batman
Hello Superman
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is a fun little script to help you understand how the file and node work together and how they can be used. &lt;/p&gt;

&lt;p&gt;Now let's get to the fun part.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#-raw-fs-endraw-module"&gt;
  &lt;/a&gt;
  &lt;code&gt;fs&lt;/code&gt; Module
&lt;/h1&gt;

&lt;p&gt;The fs module enables interacting with the file system. It has hundreds of methods that you can use. Here is a list so you can see how much they are.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://nodejs.org/dist/latest-v14.x/docs/api/fs.html"&gt;https://nodejs.org/dist/latest-v14.x/docs/api/fs.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In order for us to use the &lt;code&gt;fs&lt;/code&gt; module, we have to &lt;code&gt;require&lt;/code&gt; it. We have to save it in a variable.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const fs = require('fs')
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now that we have our &lt;code&gt;fs&lt;/code&gt; module, here are the methods that we will be needing for our script.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-fsmkdirsync-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;fs.mkdirSync&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;This method creates a directory in our current working directory. There is also an &lt;code&gt;fs.mkdir&lt;/code&gt; method, but we will be using the synchronous method because it will not execute anything else until this method is completed. Here is an example of our method:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;fs.mkdirSync('dirName')
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#-raw-fswritefilesync-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;fs.writeFileSync&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;This method creates files for us. Just like &lt;code&gt;fs.mkdirSync&lt;/code&gt;, this method will not let anything else run until it has finished its process.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;fs.writeFileSync('fileName')
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can check for errors with the &lt;code&gt;try..catch&lt;/code&gt; statements if your code doesn't seem to work.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;try {
    fs.writeFileSync('fileName')
} catch (e){
    console.log(e)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#writting-our-node-script"&gt;
  &lt;/a&gt;
  Writting Our Node Script
&lt;/h1&gt;

&lt;p&gt;Now that you have a basic knowledge of Node, try writing a script that creates a directory with three files inside it on your own. If you can't, that OK. Here is how to write your script:&lt;/p&gt;

&lt;p&gt;First, you need to require the &lt;code&gt;fs&lt;/code&gt; module. Then you must use &lt;code&gt;process.argv&lt;/code&gt; to set the name of your directory. After that, you need to use the &lt;code&gt;fs.mkdirSync&lt;/code&gt; method and the &lt;code&gt;fs.writeFileSync&lt;/code&gt; method to create the directory and the files:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const fs = require('fs')
const folderName = process.argv[2] || 'Project'

try {
    fs.mkdirSync(folderName);
    fs.writeFileSync(`${folderName}/index.html`);
    fs.writeFileSync(`${folderName}/style.css`);
    fs.writeFileSync(`${folderName}/app.js`);
} catch (err) {
    console.log(`Error!`);
console.log(err)
} 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After writing the code for the script, we can run it like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;node script.js SecretProject
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If we don't give an additional command-line argument, it will automatically set the directory name to &lt;code&gt;Project&lt;/code&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#consclusion"&gt;
  &lt;/a&gt;
  Consclusion
&lt;/h1&gt;

&lt;p&gt;I hope that this post has helped you understand Node.js a little bit more and made you more comfortable with it. Don't be scared to try some new stuff and experiment with all those &lt;code&gt;fs&lt;/code&gt; module methods.&lt;/p&gt;

&lt;p&gt;Let me know if this has been of help to you through Twitter. You can follow me &lt;a href="https://twitter.com/bo_iliev21"&gt;here&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>node</category>
      <category>javascript</category>
      <category>developer</category>
    </item>
    <item>
      <title>TypeORM - Prevent SQL Injection with Node.js/React/TypeScript in 2021</title>
      <author>Yoshiaki Matsutomo</author>
      <pubDate>Tue, 08 Jun 2021 12:11:50 +0000</pubDate>
      <link>https://dev.to/yoshi_yoshi/typeorm-prevent-sql-injection-with-node-js-react-typescript-in-2021-1go4</link>
      <guid>https://dev.to/yoshi_yoshi/typeorm-prevent-sql-injection-with-node-js-react-typescript-in-2021-1go4</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;I have demonstrated some data manipulations with &lt;a href="https://en.wikipedia.org/wiki/Object%E2%80%93relational_mapping"&gt;ORM(Object-Relational Mapping)&lt;/a&gt; frameworks such as &lt;a href="https://typeorm.io/#/"&gt;TypeORM&lt;/a&gt; so far. Today's topic is still cases with &lt;a href="https://typeorm.io/#/"&gt;TypeORM&lt;/a&gt;. However, it focuses on the security, which is my main field at the moment. I think you understand why I select topics regarding complex queries, performance, and the difference from the Microsoft ecosystem.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#demo-application"&gt;
  &lt;/a&gt;
  Demo Application
&lt;/h1&gt;

&lt;p&gt;I developed a demo application in &lt;a href="https://github.co.jp/"&gt;GitHub&lt;/a&gt; .&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/y-matsutomo/blogs_demo_app_about_sql_injection"&gt;Demo Application for SQL injection tutorials&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#utilization-of-orm-is-safe"&gt;
  &lt;/a&gt;
  Utilization of ORM is Safe?
&lt;/h1&gt;

&lt;p&gt;Some experienced developers mention that &lt;a href="https://en.wikipedia.org/wiki/Object%E2%80%93relational_mapping"&gt;ORM(Object-Relational Mapping)&lt;/a&gt; frameworks such as &lt;a href="https://typeorm.io/#/"&gt;TypeORM&lt;/a&gt; support prevent &lt;a href="https://en.wikipedia.org/wiki/SQL_injection"&gt;SQL injection&lt;/a&gt;, which is a traditional security matter. However, I still find high-risk cases with &lt;a href="https://en.wikipedia.org/wiki/Object%E2%80%93relational_mapping"&gt;ORM&lt;/a&gt; frameworks in &lt;a href="https://github.co.jp/"&gt;GitHub&lt;/a&gt; repositories, public project spaces, or in my work experience.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#example-highrisk-code-with-typeorm"&gt;
  &lt;/a&gt;
  Example High-Risk Code with TypeORM
&lt;/h3&gt;

&lt;p&gt;This is a typical high-risk case with &lt;a href="https://typeorm.io/#/"&gt;TypeORM&lt;/a&gt; even though they use the &lt;a href="https://en.wikipedia.org/wiki/Object%E2%80%93relational_mapping"&gt;ORM&lt;/a&gt; framework that prevents the &lt;a href="https://en.wikipedia.org/wiki/SQL_injection"&gt;SQL injection&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;    &lt;span class="c1"&gt;// TO-DO temporary solution&lt;/span&gt;
    &lt;span class="c1"&gt;// I need to update it when I have a spare time&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;users&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;userRepository&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="s2"&gt;`SELECT user.id as id,
        user.firstName as firstName,
        user.lastName as lastName,
        user.age as age,
        user.clientId as clientId,
        user.createdDateTime as createdDateTime,
        user.updatedDateTime as updatedDateTime,
        Client.companyName as 'clientCompanyName',
        Client.createdDateTime as 'clientCreatedDateTime',
        Client.updatedDateTime as 'clientUpdatedDateTime'
      FROM User INNER JOIN Client ON user.clientId = Client.id 
      WHERE clientId = &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;clientId&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; 
        AND (firstName LIKE '%&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;%' 
        OR lastName LIKE '%&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;%')`&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#why-orm-is-safe"&gt;
  &lt;/a&gt;
  Why ORM is Safe?
&lt;/h1&gt;

&lt;p&gt;Let's step back once. We should review the traditional way of executing SQL.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;users&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;connection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="s2"&gt;`SELECT * 
   FROM users 
   WHERE clientId = &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;clientId&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; 
    AND name LIKE %&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;%;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;connection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;end&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;How do you think if we enter &lt;code&gt;%' OR 1=1 --&lt;/code&gt; in the form to search users?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D3ihvo89--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qssz4jepv26719y9n3gq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D3ihvo89--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qssz4jepv26719y9n3gq.png" alt="screenshot_1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The method accepts the value, and the generated SQL is:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; 
&lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt; 
&lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;clientId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; 
  &lt;span class="k"&gt;AND&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="k"&gt;LIKE&lt;/span&gt; &lt;span class="s1"&gt;'%%'&lt;/span&gt; &lt;span class="k"&gt;OR&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="c1"&gt;-- %; &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The application should return only users of a client ID, 1, but this actually returns all users including the other clients'. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eJLsa2su--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gtobzre7vllt4cmb7jsm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eJLsa2su--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gtobzre7vllt4cmb7jsm.png" alt="screenshot_2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On the other hand, most developers basically utilize &lt;a href="https://en.wikipedia.org/wiki/Object%E2%80%93relational_mapping"&gt;ORM&lt;/a&gt; frameworks in the modern age. Below is the case with &lt;a href="https://typeorm.io/#/"&gt;TypeORM&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;userRepository&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;where&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;clientId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;clientId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
      &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Like&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`%&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;%`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The code generates the same SQL code as&lt;br&gt;
&lt;code&gt;SELECT * FROM users WHERE clientId = 1 AND name LIKE '%{{name}}%';&lt;/code&gt;. However, &lt;a href="https://en.wikipedia.org/wiki/Object%E2%80%93relational_mapping"&gt;ORM&lt;/a&gt; frameworks treat the value, &lt;code&gt;name&lt;/code&gt; as &lt;a href="https://en.wikipedia.org/wiki/Prepared_statement"&gt;prepared statements&lt;/a&gt;, not partial SQL syntaxes. Of course, the return value is empty.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_i6pAj-U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pimskl7t69sk4zqdh0s6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_i6pAj-U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pimskl7t69sk4zqdh0s6.png" alt="screenshot_3"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#this-is-serious-vulnerability"&gt;
  &lt;/a&gt;
  This is Serious Vulnerability?
&lt;/h1&gt;

&lt;p&gt;Some people do not think this is a critical issue. They might say:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Hey Yoshi! Do not worry too much. The application just displays user's information which does not include their privacy, such as their password. Take it easy!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;
  &lt;a href="#unionbased-sql-injection"&gt;
  &lt;/a&gt;
  UNION-based SQL Injection
&lt;/h3&gt;

&lt;p&gt;If an attacker notices that the system has a security hole here, they will enter &lt;code&gt;%' OR 1=1 UNION SELECT 'fakeName' as companyName, email as firstName, password as lastName FROM Login; --&lt;/code&gt; to get login details. "First Name" column has user's login email addresses and "Last Name" column has their password.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WWIIRnAA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pikonc5s6hzmbfgnkand.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WWIIRnAA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pikonc5s6hzmbfgnkand.png" alt="screenshot_4"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;POINT&lt;/strong&gt;: External Authentication&lt;br&gt;
Some enterprise applications utilize external authentication provided by &lt;a href="https://firebase.google.com/products/auth"&gt;Firebase Auth&lt;/a&gt; and &lt;a href="https://auth0.com/jp"&gt;Auth0&lt;/a&gt;. However, I also know that some companies still manage legacy applications with old-fashioned frameworks, which are not supported by them. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;POINT&lt;/strong&gt;: Password Encryption&lt;br&gt;
The sample app stores the password as plain text, which is not encrypted, and you might think that you are okay because your app encrypts critical data, but do you adopt the latest encryption methodology? &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1&gt;
  &lt;a href="#this-is-still-serious-vulnerability"&gt;
  &lt;/a&gt;
  This is Still Serious Vulnerability?
&lt;/h1&gt;

&lt;p&gt;Some people still do not think that this is a critical issue, and they might say:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Hey Yoshi! Do not worry! Crackers have no idea about all table schemas including a login table. If not, they are not able to execute it. Take it easy, man!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For &lt;a href="https://www.sqlite.org/index.html"&gt;SQLite&lt;/a&gt;, they will enter &lt;code&gt;%' OR 1=1 UNION SELECT 'fakeName' as companyName, sql as firstName, 'fakelastname' as lastName FROM sqlite_master; --&lt;/code&gt; to show table schemas. "First Name" column has tables' information.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JhsF_x80--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fr72qavsg8ucj0aoi5c8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JhsF_x80--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fr72qavsg8ucj0aoi5c8.png" alt="screenshot_4"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#solution"&gt;
  &lt;/a&gt;
  Solution
&lt;/h1&gt;

&lt;p&gt;The first code should be replaced by the below code. Yes, this is simple.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;     &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;users&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;userRepository&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;where&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;clientId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;clientId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Like&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`%&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;%`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;clientId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;clientId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Like&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`%&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;%`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;],&lt;/span&gt;
      &lt;span class="na"&gt;relations&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;client&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#causes-of-vulnerability"&gt;
  &lt;/a&gt;
  Causes of Vulnerability
&lt;/h1&gt;

&lt;p&gt;Some C-level or managers assume that the cause is the lack of education for junior developers, and they attempt having the security training or pair-work with senior engineers.&lt;/p&gt;

&lt;p&gt;Is this true?&lt;/p&gt;

&lt;p&gt;The fundamental knowledge of secure coding is mandatory. However, to be honest with you, this might be one of the reasons and I have to conclude this is not correct. I deeply investigated and found some potential causes.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lack-of-thirdpartys-module-information"&gt;
  &lt;/a&gt;
  Lack of Third-party's Module Information
&lt;/h3&gt;

&lt;p&gt;I moved from the Microsoft development world to &lt;a href="https://en.wikipedia.org/wiki/Open-source_software"&gt;OSS&lt;/a&gt;, which is the development in Node.js/TypeScript with third-party modules. I think that their official documents provide too general and basic information only in comparison with Microsoft.&lt;/p&gt;

&lt;p&gt;They basically provide the cases with detailed examples and combination of libraries. It is easy because most libraries are provided by Microsoft themselves! &lt;/p&gt;

&lt;p&gt;For instance, with &lt;a href="https://typeorm.io/#/"&gt;TypeORM&lt;/a&gt;, I found the below code that developers use the official ways for simple code. However, if they have to write complex data operations such as creating join tables or executing with subqueries, they copy and paste the raw SQL and leave it once.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Service&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Token&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;typedi&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Repository&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;UpdateResult&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;typeorm&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;InjectRepository&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;typeorm-typedi-extensions&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Client&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../entity/Client&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../entity/User&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;IRiskyUserUsecase&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;getAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;clientId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;UpdateResult&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;clientId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;RiskyUserUsecaseToken&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Token&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;IRiskyUserUsecase&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Service&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;RiskyUserUsecaseToken&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;RiskyUserUsecase&lt;/span&gt; &lt;span class="k"&gt;implements&lt;/span&gt; &lt;span class="nx"&gt;IRiskyUserUsecase&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;InjectRepository&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;userRepository&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Repository&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;getAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;clientId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;userRepository&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;clientId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;clientId&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;userRepository&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;userRepository&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;userRepository&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="c1"&gt;// TO-DO temporary solution&lt;/span&gt;
  &lt;span class="c1"&gt;// I need to update it when I have a spare time&lt;/span&gt;
  &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;clientId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;users&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;userRepository&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="s2"&gt;`SELECT user.id as id,
      user.firstName as firstName,
      user.lastName as lastName,
      user.age as age,
      user.clientId as clientId,
      user.createdDateTime as createdDateTime,
      user.updatedDateTime as updatedDateTime,
      Client.companyName as 'clientCompanyName',
      Client.createdDateTime as 'clientCreatedDateTime',
      Client.updatedDateTime as 'clientUpdatedDateTime'
      FROM User INNER JOIN Client ON user.clientId = Client.id 
      WHERE clientId = &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;clientId&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; AND (firstName like '%&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;%' OR lastName like '%&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;%')`&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;users&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;u&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;u&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;u&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;u&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;u&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;clientId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;u&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clientId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;client&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;u&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clientId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;companyName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;u&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clientCompanyName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;createdDateTime&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;u&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clientCreatedDateTime&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;updatedDateTime&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;u&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clientUpdatedDateTime&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="p"&gt;},&lt;/span&gt;
          &lt;span class="na"&gt;createdDateTime&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;u&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createdDateTime&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;updatedDateTime&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;u&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;updatedDateTime&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It would be best if you maximize the full benefits of &lt;a href="https://typeorm.io/#/"&gt;TypeORM&lt;/a&gt; and do not execute the raw SQL. However, at least, you should use the &lt;a href="https://en.wikipedia.org/wiki/Prepared_statement"&gt;prepared statements&lt;/a&gt; for security reasons like below if you need.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;
&lt;span class="o"&gt;---&lt;/span&gt;

&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Service&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;RiskyUserUsecaseToken&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;RiskyUserUsecase&lt;/span&gt; &lt;span class="k"&gt;implements&lt;/span&gt; &lt;span class="nx"&gt;IRiskyUserUsecase&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;InjectRepository&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;userRepository&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Repository&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;// TO-DO temporary solution&lt;/span&gt;
  &lt;span class="c1"&gt;// I need to update it when I have a spare time&lt;/span&gt;
  &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;clientId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;users&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;userRepository&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="s2"&gt;`SELECT user.id as id,
      user.firstName as firstName,
      user.lastName as lastName,
      user.age as age,
      user.clientId as clientId,
      user.createdDateTime as createdDateTime,
      user.updatedDateTime as updatedDateTime,
      Client.companyName as 'clientCompanyName',
      Client.createdDateTime as 'clientCreatedDateTime',
      Client.updatedDateTime as 'clientUpdatedDateTime'
      FROM User INNER JOIN Client ON user.clientId = Client.id 
      WHERE clientId = :clientId AND (firstName like '%:name%' OR lastName like '%:name%')`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;[{&lt;/span&gt; &lt;span class="na"&gt;clientId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;clientId&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="p"&gt;}]&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;users&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;u&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;u&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;u&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;u&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;u&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;clientId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;u&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clientId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;client&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;u&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clientId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;companyName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;u&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clientCompanyName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;createdDateTime&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;u&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clientCreatedDateTime&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;updatedDateTime&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;u&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clientUpdatedDateTime&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="p"&gt;},&lt;/span&gt;
          &lt;span class="na"&gt;createdDateTime&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;u&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createdDateTime&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;updatedDateTime&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;u&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;updatedDateTime&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But again, you should not do that for code-reviewers. Can you recognize the difference between the raw SQL with and without &lt;a href="https://en.wikipedia.org/wiki/Prepared_statement"&gt;prepared statements&lt;/a&gt;? &lt;/p&gt;

&lt;p&gt;It must be tough!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#upgrade-of-oldfashioned-applications"&gt;
  &lt;/a&gt;
  Upgrade of Old-Fashioned Applications
&lt;/h3&gt;

&lt;p&gt;We sometimes develop pure new applications = we can select the appropriate frameworks and environments, which are the modern architecture. &lt;/p&gt;

&lt;p&gt;On the other hand, we have to convert from the old applications to ones with the modern frameworks. For example:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Conversion from Web Form applications in .Net to MVC App/SPA in .Net Core&lt;/li&gt;
&lt;li&gt;Conversion from MVC applications in PHP to React applications in Node.js/TypeScript &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In this case, it might occur the above case because developers try completing the task within limited time allocation = they  use existing code.    &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#error-of-human-resourcetime-allocation"&gt;
  &lt;/a&gt;
  Error of Human Resource/Time Allocation
&lt;/h3&gt;

&lt;p&gt;I assume that this is the main reason. Developers handle their tasks with limited human/time resources every day, even though it is sometimes unreasonable and puts pressure on them. It is fantastic if they can always choose the best solution, but it is difficult.&lt;/p&gt;

&lt;p&gt;Managers and leads, do you think that you understand the current situation and manage it properly?&lt;/p&gt;

&lt;p&gt;It is unacceptable for us to fire developers making security mistakes even though nobody wants to write insecure code, and it often happens due to external factors. Without thinking about why they made such a choice, it would not be the ultimate solution. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#potential-solutions-for-developers"&gt;
  &lt;/a&gt;
  Potential Solutions for Developers
&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;Review the parts of comment out with TO-DO and temporary solutions once - Developers and code-reviewers might not imagine how simple mistakes pose critical incidents. It is good timing to review them.
&lt;/li&gt;
&lt;li&gt;Security issues would come from human errors - Please do not focus on improving their security skills/knowledge. This is significant but you would also need to review your team management and development environment.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;
  &lt;a href="#potential-solutions-by-publishers"&gt;
  &lt;/a&gt;
  Potential Solutions by Publishers
&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;Provide intermediate/senior-level information and a variety of examples as well - If the information is too general, developers might select lazy ways even though they do not want to.&lt;/li&gt;
&lt;li&gt;Provide information regarding the utilization of the modern  modules/library's combination - I faced multiple times that when I used the third-party module independently, it worked well. But when I used it with the other modules, it did not work.  If developers have trouble implementing complex tasks with multiple third-party modules, they might select temporary solutions. &lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;I will continuously publish security articles. However, I also understand the importance of providing the technical skills/knowledge in a non-security field. I believe that if we can provide helpful information about the development itself or project management, it would indirectly prevent security matters.&lt;/p&gt;

&lt;p&gt;We are with you, friends.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#bio"&gt;
  &lt;/a&gt;
  Bio
&lt;/h1&gt;

&lt;p&gt;When I was 30 years old, I went to Australia for changing my career on a Working Holiday visa. I graduated from University of Sydney with a Bachelor of Computer Science and Technology. During the period, I also worked as a Fraud Prevention Analyst at Amex in Sydney, Australia (yes, it was super busy. I went to my uni during the day and worked at night...) &lt;/p&gt;

&lt;p&gt;After graduation, I worked as a C#/.Net developer for an Australian small business for 5 years. Now, I came back to Japan and work as a TypeScript/Go/React developer for a Japanese security start-up company. &lt;/p&gt;

&lt;p&gt;I love learning new fields which is a big challenge. I am happy if you support me to accelerate the improvement of my skill/knowledge. Please feel free to contact me if you are interested in my unique career.&lt;/p&gt;

&lt;p&gt;Thanks, &lt;/p&gt;

</description>
      <category>node</category>
      <category>security</category>
      <category>sql</category>
      <category>typescript</category>
    </item>
    <item>
      <title>Best Online Code Editors For Web Developers</title>
      <author>themeselection</author>
      <pubDate>Tue, 08 Jun 2021 11:58:52 +0000</pubDate>
      <link>https://dev.to/theme_selection/best-online-code-editors-for-web-developers-5bpn</link>
      <guid>https://dev.to/theme_selection/best-online-code-editors-for-web-developers-5bpn</guid>
      <description>&lt;p&gt;Are you looking for Best Online Code editors? Then here is the collection of Best Online Code Editors For Web Developers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-an-online-code-editor"&gt;
  &lt;/a&gt;
  What is an Online code editor?
&lt;/h2&gt;

&lt;p&gt;An online code editor is a tool that resides on a remote server and is accessible via browsers. Some online code editors have basic features more similar to text editors while others are like complete IDEs. In this article, we will review both types.&lt;/p&gt;

&lt;p&gt;Some online code editors focus on one language or even a framework. For example, there are products that call themselves ‚Äì JavaScript online code editors or  react  online editor.&lt;/p&gt;

&lt;p&gt;As a developer, your main tool is obviously the one that allows you to turn your ideas into code: A text editor. As time goes by, more online text editors are created that can help you code from any computer with Internet access. In this article, let‚Äôs take a look at 10+ useful online code editors.&lt;/p&gt;

&lt;p&gt;Following are the major advantages of using online code editors&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Zero setups. You won‚Äôt have to download, install and configure an IDE;&lt;/li&gt;
&lt;li&gt;  Sharing and Collaboration. Start coding and then forward the URL to your colleague to continue your work or help you debug it;&lt;/li&gt;
&lt;li&gt;  Zero or little cost. The vast majority of online code editors have free versions that will be enough for you for most of the daily tasks;&lt;/li&gt;
&lt;li&gt;  Subscription-based pricing. It might be very useful to pay monthly for online editors instead of yearly licenses.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#how-to-choose-an-online-code-editor"&gt;
  &lt;/a&gt;
  How to choose an online code editor?
&lt;/h2&gt;

&lt;p&gt;Most famous online code editors share many great features. These include autocompletion, git integration, plugin support, CI/CD pipelines, and others. But it‚Äôs the little things that can make a specific editor a better fit for you than others.&lt;/p&gt;

&lt;p&gt;Let‚Äôs run through some aspects you need to keep in mind choosing an online IDE/code editor:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  How fast an application works&lt;/li&gt;
&lt;li&gt;  Languages support&lt;/li&gt;
&lt;li&gt;  For free editors: how much ads it shows&lt;/li&gt;
&lt;li&gt;  Ease of setup&lt;/li&gt;
&lt;li&gt;  Integrations with repository managers&lt;/li&gt;
&lt;li&gt;  NPM support&lt;/li&gt;
&lt;li&gt;  A number of text and layout settings&lt;/li&gt;
&lt;li&gt;  Terminal support&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now, let's begin the collection..!!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LVBoKsXM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vlj2cwy8kj90fe05kr4c.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LVBoKsXM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vlj2cwy8kj90fe05kr4c.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#stackblitz"&gt;
  &lt;/a&gt;
  &lt;a href="https://stackblitz.com/"&gt;StackBlitz&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MPJ4E-Aq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/luol7ziogvk6dt5x3pqq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MPJ4E-Aq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/luol7ziogvk6dt5x3pqq.png" alt="StackBlitz"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://stackblitz.com/"&gt;StackBlitz&lt;/a&gt; claims to allow you to code the future in your browser. And after trying it, I‚Äôm confident you‚Äôll agree that this web application is extremely useful for coders.&lt;/p&gt;

&lt;p&gt;StackBlitz features 5 workspaces: React, AngularJS, JavaScript, Ignite UI and KendoReact. Once launched, you will notice a similarity between StackBlitz and the VSCode editor, which is a good thing if you‚Äôre used to Microsoft‚Äôs editor.&lt;/p&gt;

&lt;p&gt;Another extremely cool StackBlitz feature is that all applications get deployed automatically on their servers, and hosted for free.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Native support for Firebase (which is something I don‚Äôt personally use, but hey, it‚Äôs a boon for those not wanting to dive into the murky depths of the backend)&lt;/li&gt;
&lt;li&gt;  Intellisense, Project Search&lt;/li&gt;
&lt;li&gt;  Hot reloading as you type&lt;/li&gt;
&lt;li&gt;  Import npm packages&lt;/li&gt;
&lt;li&gt;  Edit offline when not connected!&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#codepen"&gt;
  &lt;/a&gt;
  &lt;a href="https://codepen.io/"&gt;Codepen&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Jc_E6hvP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u9o8qinxgb3zsbencem5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Jc_E6hvP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u9o8qinxgb3zsbencem5.png" alt="Codepen"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Probably the most popular online code editor. &lt;a href="https://codepen.io/"&gt;CodePen&lt;/a&gt; is fast, easy to use, and allows a web developer to write and share HTML/CSS/JS code online. CodePen is free and creating an account isn‚Äôt mandatory, so you can start writing code and create a new web application straight from your web browser quickly and efficiently.&lt;/p&gt;

&lt;p&gt;CodePen editor allows you to use Vim Key Bindings which are command-line keyboard shortcuts. Both of these tools together can help to create a faster workflow.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  File system&lt;/li&gt;
&lt;li&gt;  Autocomplete&lt;/li&gt;
&lt;li&gt;  Private sandboxes&lt;/li&gt;
&lt;li&gt;  Website deployment&lt;/li&gt;
&lt;li&gt;  Collaboration mode&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#codesandbox"&gt;
  &lt;/a&gt;
  &lt;a href="https://codesandbox.io/"&gt;CodeSandbox&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LWj22hUh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/43ynieckvc54g6a8gdlh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LWj22hUh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/43ynieckvc54g6a8gdlh.png" alt="Codesandbox"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codesandbox.io/"&gt;CodeSandbox&lt;/a&gt; can be thought of as a much more powerful and complete take on JSFiddle. True to its name, CodeSandbox provides a complete code editor experience and a sandboxed environment for front-end development.&lt;/p&gt;

&lt;p&gt;This complete development environment is loaded with many features and code templates that will definitely make your coding faster and easier.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;strong&gt;Npm support:&lt;/strong&gt;  Yes, you can add pretty much any package that is available on npm.&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;Files, folders, modules:&lt;/strong&gt;  You can split your code into multiple files, add/remove images from the public folder, and build/import modules as you see fit. The workflow mirrors that of a modern module bundler, so you don‚Äôt need to set up (almost) anything.&lt;/li&gt;
&lt;li&gt;  Support for TypeScript, hot reloading, GitHub export, static file hosting, etc.&lt;/li&gt;
&lt;li&gt;  It is built on  &lt;strong&gt;Monaco editor&lt;/strong&gt;, the same beast that powers the favorite  &lt;a href="https://code.visualstudio.com/"&gt;VSCode&lt;/a&gt;  editor. This brings powerful features like ‚ÄúGo To,‚Äù ‚ÄúFind References,‚Äù and necessary refactoring to your fingertips!&lt;/li&gt;
&lt;li&gt;  Snippet support for  &lt;a href="https://emmet.io/"&gt;Emmet&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  Integrated DevTools, linting, error overlays, testing frameworks (Jest), keybindings, and more.&lt;/li&gt;
&lt;li&gt;  Powerful CLI to directly import local projects into CodeSandbox.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#jsfiddle"&gt;
  &lt;/a&gt;
  &lt;a href="https://jsfiddle.net/"&gt;JSFiddle&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hZT6B95V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zl4udkn7xu9q845jyhbf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hZT6B95V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zl4udkn7xu9q845jyhbf.png" alt="JSFiddle"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;While  &lt;a href="https://jsfiddle.net/"&gt;JSFiddle&lt;/a&gt;  can‚Äôt replace a full-fledged text editor, it does a damn good job of handling one-off frontend scripts. It‚Äôs so popular that Q&amp;amp;A sites like StackOverflow already support the embedding of JSFiddle links directly in their platform.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Advantages:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Free to use (no hidden fee or freemium features). JSFiddle supports itself through ads (at least as of writing), and you can see an Adobe ad in the lower left of the screenshot above.&lt;/li&gt;
&lt;li&gt;  Code collaboration features ‚Äî ideal for building concepts together, interviews, etc.&lt;/li&gt;
&lt;li&gt;  Multiple layouts, font sizes, light/dark themes, etc.&lt;/li&gt;
&lt;li&gt;  Code formatting (tidying), upcoming support for linters (CSS and JS), and more&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#jsbin"&gt;
  &lt;/a&gt;
  &lt;a href="https://jsbin.com/"&gt;JSbin&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--g8SfXisI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3m3l4p51fore0c4rxbrr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g8SfXisI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3m3l4p51fore0c4rxbrr.png" alt="JSBin"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://jsbin.com/"&gt;JSBin&lt;/a&gt; is an online text editor primarily focused on Javascript, with a fast and simple interface. Each of your code snippets can be tested through your web browser, and then exported into a text file.&lt;/p&gt;

&lt;p&gt;Another good thing to note is that JSBin can import popular HTML/CSS/JS frameworks such as jQuery and Bootstrap, allowing you to easily create modern pages and web applications.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Live reload both in editor and in full preview&lt;/li&gt;
&lt;li&gt;  Codecasting - blog post&lt;/li&gt;
&lt;li&gt;  Console&lt;/li&gt;
&lt;li&gt;  Full unmodified rendered view&lt;/li&gt;
&lt;li&gt;  Gist support: import and export&lt;/li&gt;
&lt;li&gt;  Processors. HTML. CSS. Sass &amp;amp; SCSS (with Compass &amp;amp; Bourbon) &lt;/li&gt;
&lt;li&gt;  Debug/source mode&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#gitpod"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.gitpod.io/"&gt;Gitpod&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8VEJeJAJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6bhwvmgqtxxrm4s7k6ro.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8VEJeJAJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6bhwvmgqtxxrm4s7k6ro.png" alt="Gitpod"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.gitpod.io/"&gt;Gitpod&lt;/a&gt;  is a refreshing take on cloud code editors (or IDEs, if you will) that aims to keep your code always tested and up to date. In other words, it‚Äôs deeply integrated with GitHub, and every time you add code, it runs your testing and CI/CD pipelines to make sure code is always at 100% health.&lt;/p&gt;

&lt;p&gt;Worth checking out if you love the VSCode experience and want something that supports all major back-end/front-end languages and frameworks&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.gitpod.io/docs/#-dev-environments-as-code"&gt;Dev environments as code&lt;/a&gt;  - Gitpod applies lessons learned from infrastructure-as-code. Spinning up dev environments is easily repeatable and reproducible empowering you to automate, version-control and share dev environments across your team.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Prebuilt dev environments&lt;/li&gt;
&lt;li&gt;Integrated Docker build &lt;/li&gt;
&lt;li&gt;GitLab, GitHub, and Bitbucket integration &lt;/li&gt;
&lt;li&gt;Integrated code reviews&lt;/li&gt;
&lt;li&gt;Collaboration&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#codespace"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/features/codespaces"&gt;Codespace&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OsqFT6Td--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o7hazzxln97vxwjnz8fh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OsqFT6Td--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o7hazzxln97vxwjnz8fh.png" alt="Codespaces"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/features/codespaces"&gt;Codespaces&lt;/a&gt; is a configurable cloud development environment available in your browser on GitHub or through Visual Studio Code. A codespace includes everything developers need to develop for a specific repository, including the Visual Studio Code editing experience and common languages, tools, and utilities&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#theia"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.theia-ide.org/"&gt;Theia&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nz-wgLco--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j509u86arxamjlw0hbtf.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nz-wgLco--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j509u86arxamjlw0hbtf.jpg" alt="Theia"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you‚Äôre a die-hard SOLID fan and a nit-picking software architect, the  &lt;a href="https://www.theia-ide.org/"&gt;Theia IDE&lt;/a&gt;  will tickle your separation-of-concerns bone. It‚Äôs a TypeScript-coded (five points for style straightaway!) code IDE that has a perfectly separate front-end and backend. The front-end runs in a browser, while the backend can be anywhere ‚Äî local machine or the cloud!&lt;/p&gt;

&lt;p&gt;But that‚Äôs not all ‚Äî the front-end can be run as an Electron app with a fully functional, isolated browser environment, giving you the look-and-feel of a native desktop app should you crave it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Establish a platform to build IDE-like products.&lt;/li&gt;
&lt;li&gt;  Provide the end-user with a full-fledged multi-language IDE (not just a smart editor)&lt;/li&gt;
&lt;li&gt;  Support equally the paradigm of Cloud IDE and Desktop IDE.&lt;/li&gt;
&lt;li&gt;  Provide support for multiple languages via the language and debug server protocols.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#coder"&gt;
  &lt;/a&gt;
  &lt;a href="https://coder.com/"&gt;Coder&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rgz6DF5e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zw1zn7qx99hqgog34dcy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rgz6DF5e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zw1zn7qx99hqgog34dcy.png" alt="coder"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://coder.com/"&gt;Coder&lt;/a&gt; is a VSCode environment bundled in a server that can be run locally or in the cloud. The recommended configuration is to run the IDE as a server in the cloud and access it locally via the browser. There are prebuilt Docker images for zero-hassle setups, and an enterprise plan should you need support or have different needs.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#aws-cloud9"&gt;
  &lt;/a&gt;
  &lt;a href="https://aws.amazon.com/cloud9/"&gt;AWS Cloud9&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--89FtDqTo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5ifb9a2ce3vydhmgg7ur.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--89FtDqTo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5ifb9a2ce3vydhmgg7ur.png" alt="AWS Cloud9"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws.amazon.com/cloud9/"&gt;Cloud9&lt;/a&gt; was arguably the first browser-based IDE that offered serious features and took the idea of browser-as-an-editor mainstream. No wonder that Amazon later acquired it, and today, Cloud9 is part of the AWS offerings.&lt;/p&gt;

&lt;p&gt;There are no additional charges for using Cloud9. You can connect Cloud9 to an existing/new AWS compute instance, and you pay only for that instance. It‚Äôs also possible to connect to a third-party server over SSH ‚Äî for exactly no fee&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; First-class support for AWS Server less applications (debugging, etc.)&lt;/li&gt;
&lt;li&gt; Direct terminal access to AWS from within the editor &lt;/li&gt;
&lt;li&gt; Over 40 programming languages supported (Go, C++, Ruby, Node, Python, PHP, Java . . . take your pick)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion:
&lt;/h3&gt;

&lt;p&gt;So, this was the collection of the best online code editors for web developers in 2021.  You can pick any of them as per your need and requirements.&lt;/p&gt;

&lt;p&gt;This is of course not a complete list, as there are many other online code editors available on internet that you can use. We have collected these online editor tools by their popularity.&lt;/p&gt;

&lt;p&gt;Tell us which one is you are currently using and which we can add in the list in the comment section below. Also, do not forget to bookmark and share this collection.&lt;/p&gt;

&lt;p&gt;We hope you find this collection helpful.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>Why Elasticsearch is an indispensable component of the Adyen stack</title>
      <author>Deepu K Sasidharan</author>
      <pubDate>Tue, 08 Jun 2021 11:48:36 +0000</pubDate>
      <link>https://dev.to/adyen/why-elasticsearch-is-an-indispensable-component-of-the-adyen-stack-2f5o</link>
      <guid>https://dev.to/adyen/why-elasticsearch-is-an-indispensable-component-of-the-adyen-stack-2f5o</guid>
      <description>&lt;p&gt;&lt;em&gt;By Willem Pino, Bengisu Sahin, Diego Costa and Deepu K Sasidharan&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;At Adyen, we use Elasticsearch to power various parts of our payments platform. This includes payment search, monitoring, and log search. Let‚Äôs take a look at how we use Elastic for these different use cases and see how we capitalize on the power of Elasticsearch.&lt;/p&gt;

&lt;p&gt;We recently did a talk about some of our Elasticsearch adventures at an Elastic meetup. &lt;a href="https://www.youtube.com/watch?v=OCO7lgWVBQw"&gt;You can find a recording here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Before we look into our different use cases, it helps to get a high-level understanding of Adyen‚Äôs architecture.&lt;/p&gt;

&lt;p&gt;At Adyen, we do many things, but the core of what we do is payment processing. Our payment platform is built for any business and every customer journey. We process payments across all sales channels.&lt;/p&gt;

&lt;p&gt;Let‚Äôs say you want to buy a beer at the local pub (a merchant) and you want to pay with your credit card, which you received from a bank, called the issuing bank. Now when you pay for the beer, the pub wants to know if your account is valid and if you can make the payment. For this, the pub needs to contact the issuing bank.&lt;/p&gt;

&lt;p&gt;This is where Adyen comes in.&lt;/p&gt;

&lt;p&gt;When you provide your payment details ‚Äî a credit card in this example ‚Äî to the pub, the pub contacts Adyen with the payment details, and Adyen figures out the rest. This usually means sending the payment details to a third-party, or scheme, such as Mastercard or Visa, which forwards it to the issuer.&lt;/p&gt;

&lt;p&gt;The Adyen flow looks like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--d2cszX06--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2406/0%2AR4KekhX77MFhDciJ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d2cszX06--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2406/0%2AR4KekhX77MFhDciJ.png" alt="high-level architecture"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But why doesn‚Äôt the merchant contact the scheme directly?&lt;/p&gt;

&lt;p&gt;Because the next shopper might not use a credit card but wants to pay by scanning a WeChat Pay QR code. The merchant does not want to build a separate integration for every way of paying, because it should also work for payment methods like credit/debit cards, SEPA, iDeal, Klarna, PayPal, and so on. This is especially true for international merchants, and this is where part of the power of Adyen lies.&lt;/p&gt;

&lt;p&gt;Now imagine we do such a transaction not just once but hundreds of times per second. These are the principles that we follow that allow us to keep doing this efficiently and still be flexible:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;One platform worldwide&lt;/li&gt;
&lt;li&gt;A single application that receives payments&lt;/li&gt;
&lt;li&gt;Abstract away differences between payments to make it easier to handle the data later&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is, of course, a very simplified view and explanation. In reality, there are hundreds of components and moving parts that work seamlessly together to make everything work.&lt;/p&gt;

&lt;p&gt;Now that we have a basic understanding of the scale of the architecture, let‚Äôs look at how we use Elastic.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#payment-search"&gt;
  &lt;/a&gt;
  Payment search
&lt;/h2&gt;

&lt;p&gt;Customer Area is our merchant-facing web application where merchants can gain insights into their transactions and perform operational actions. In the Customer Area, there is a feature called payment search. It is the most used functionality in the Customer Area, and it allows merchants to search their payments by using an order reference, email address, payment method, and so on.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bwzladND--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3600/0%2AgTBfinrzMWq_Bpaq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bwzladND--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3600/0%2AgTBfinrzMWq_Bpaq.png" alt="payment search page"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We use Elasticsearch as a search engine in our application because it is built to provide simple REST APIs and has a distributed nature, speed, and scalability.&lt;/p&gt;

&lt;p&gt;Adyen processes millions of payments every day. We want to provide a near real-time payment search functionality for merchants.&lt;/p&gt;

&lt;p&gt;So, imagine that a shopper is purchasing a pair of shoes in a store. The credit-card payment for the shoes needs to be immediately visible to the merchant so they know the buyer‚Äôs purchase was successfully processed ‚Äî usually within seconds.&lt;/p&gt;

&lt;p&gt;In order to make this possible, we have to index all this data into the Elasticsearch cluster when the payment is successfully processed. For these purposes, we have an in-house streaming/consumer framework that helps us to make this happen in a scalable way. It is implemented to take the burden from accounting clusters and create a summary of the data in the streaming clusters. This data is fed to the consumer framework, which indexes the data into the payment Elasticsearch cluster.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--w0zcB2-v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2732/0%2Aje3xiniPnDdrZ3Dr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w0zcB2-v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2732/0%2Aje3xiniPnDdrZ3Dr.png" alt="payment search flow"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The consumer framework implements three parts of the indexing journey:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The first part is &lt;strong&gt;filtering&lt;/strong&gt;, which decides if the current stream item is of any interest to this consumer. This is used to filter out the payments which have a creation date before a certain date.&lt;/li&gt;
&lt;li&gt;The filtered payment goes to the &lt;strong&gt;consuming&lt;/strong&gt; part, where we apply the business logic. In our use case, it converts a payment to a payment document and creates index/update requests depending on the status of the payment.&lt;/li&gt;
&lt;li&gt;After the consumer framework reaches a certain amount of consumed payment or a certain time, it goes to a &lt;strong&gt;persisting&lt;/strong&gt; level where it performs the bulk operation with the bulk request. The bulk request consists of index/update requests that we consumed so far. After it gets a successful response from the Elasticsearch cluster, it saves the in-memory state of the consumer to db. In case some requests fail, the consumer framework includes them into the next persist and then saves the state. This helps us make sure we index all the data.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This cycle in the consumer framework runs continuously, as long as we have new payments processed. It allows us to give our customers a near real-time, reliable, and fast payment search experience.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#platform-monitoring"&gt;
  &lt;/a&gt;
  Platform monitoring
&lt;/h2&gt;

&lt;p&gt;The goal of the monitoring team at Adyen is to provide solutions that can monitor the whole platform for merchant-facing issues. This is already quite a challenging task, and on top of that, the solution must be flexible enough to be used by other teams, each with a very unique use case.&lt;/p&gt;

&lt;p&gt;Plus, the alerts must occur on a (near) real-time basis. To summarize, monitoring aims to provide:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Real-time alerts&lt;/li&gt;
&lt;li&gt;End-to-end monitoring&lt;/li&gt;
&lt;li&gt;Integrated, scalable solutions to all teams at Adyen&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To accomplish this, we leverage the Elastic Stack as the underlying basis to build the necessary tools. The monitoring solution looks upon custom-based analytical events. The analytic events are freely created by the programmers and are the main data source for all the configurable monitors.&lt;/p&gt;

&lt;p&gt;These events exist in parallel and complement the logging infrastructure ‚Äî and the data in databases. Next, the monitors accommodate the analytic events into multiple use cases, such as spikes, drops, underperforming transactions, anomaly detection, forecasting, and more. These monitors are responsible for creating alerts that are, finally, delivered to the right individuals (or teams).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9TEa0G-m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3600/0%2AqbRgza_CrTqXKwIb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9TEa0G-m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3600/0%2AqbRgza_CrTqXKwIb.png" alt="monitoring flow"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;From a business perspective, the objectives were:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Customizable monitors for predefined use cases:&lt;/strong&gt; Provide monitors for standard use cases (such as a drop in volume, or a spike in errors) that are easy to set up for anyone in the organization&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Out-of-the-box measurements:&lt;/strong&gt; Every new merchant, or host, is already capable of generating events from Day 1&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;End-to-end alert lifecycle integration:&lt;/strong&gt; Use a single interface to create any monitor, tweak its settings, and receive the alerts&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i0zcY8zo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2972/0%2AXrwMrHYVsFdcvnMY.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i0zcY8zo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2972/0%2AXrwMrHYVsFdcvnMY.png" alt="monitoring goals"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;From a development perspective, the objectives of monitoring were:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Real-time user-based analytical events&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Parallel and complementary with the logging structure&lt;/li&gt;
&lt;li&gt;Seamless ES template mapping to/from java objects&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Enabled/disable event materialization routes on top-level events.&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Long-term storage&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#keeping-the-lights-on"&gt;
  &lt;/a&gt;
  Keeping the lights on
&lt;/h2&gt;

&lt;p&gt;Apart from payment search and monitoring, we also use Elasticsearch for storing and retrieving logs, and we use Kibana for log search, which is integral for troubleshooting issues internally.&lt;/p&gt;

&lt;p&gt;Our logging cluster was at 1 petabyte at one point. For payment search, we did a migration from Elasticsearch v1.7 to v7.6 with 12TB of data last year, and the flexibility of Elasticsearch made the migration smooth. So at Adyen, Elasticsearch will continue to be an integral part of keeping our lights on.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Originally published at &lt;a href="https://www.elastic.co/blog/why-elasticsearch-is-an-indispensable-component-of-the-adyen-stack"&gt;https://www.elastic.co&lt;/a&gt; on May 27, 2021.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>fintech</category>
      <category>elasticsearch</category>
      <category>adyen</category>
      <category>architecture</category>
    </item>
  </channel>
</rss>
